Emits the given value in the order in which they arrive.If the queue is
Creates an Observable that wraps the given ObservableSource.If the source is an Observable, it
Returns an observable sequence that is sorted by the specified comparator function.The comparator function is used
Observe the given ConnectableObservable on the given scheduler and return a ReplayableObservable
Creates a new unicast processor with the given capacity hint.
Creates a new UnicastProcessor with the given capacity hint and runnable.
Attempts to attempt to apply a mapper function to the value returned by the function, and if
Creates a flowable from the given value using the given mapping function.
Resets all handlers to the default settings.This method should be called only on the first call
Converts a CompletableSource to a Maybe&lt;T, T&gt;.
Creates a Maybe from a SingleSource.
Retry the task until a predicate returns true, or the given number of times if the predicate
Ensures that the given object is not null, and throws a IllegalArgumentException with the given message.
Returns the identity function.
Creates a callable from the given value.
Create a Function that takes a single value and returns it as a Function object.
Returns a function that casts the value of the target class to the type of the cast
Creates a new unicast subject.
Create a new unicast subject with the given capacity hint.
Creates a new unicast subject with the given capacity hint.
Creates a new unicast subject.
This method waits for an error and returns it if there was one, or null if
Returns an error if there is no error, or if the timeout is reached, or the
Waits for the condition to be true, or until the condition is satisfied, or the
Drains all items in q from qd until qd is empty or delayError
Requests the specified number of times for the specified subscription.If the specified number is less than
Completes this sequence with the given value.
Returns the value of the notification.
Gets the error associated with this notification if the value is an Error.Returns null if the
Validates that the upstream disposable is the same as the next and notifies the given observer if
Sets the given next disposable to be the same as the given upstream AtomicReference.
Cancels the upstream subscription if the upstream subscription is not null and the next subscription is not
Atomically sets the value of the given subscription to the given value and notifies the given subscriber
Increases the cap of a long by the sum of b and returns the result.
Multiply two long values, returning the largest long that is less than or equal to b.
Add n to the current value in the specified AtomicLong, and returns the updated value.
Converts a Throwable to a NPE.
Adds the given object to the list of objects in this collection.
This method shuts down the thread pool and removes all pools from the pool.
Creates a new scheduled executor service and puts it into the pool.
Sets the current subscription. If the subscription is already in the queue, it will be cancelled
This method loops through the queue, waiting for more elements to be added to the queue.
If the given error is an Error, wrap it and return it, otherwise throw it.
Flattens a composite exception into a list of Throwable.
Throw the given Throwable if it is an Exception, otherwise throw it as a RuntimeException.
Removes all resources from the cache.
Returns the number of resources in the pool.
Attempt to apply a mapper function to an observable source and return true if successful, otherwise false
Create an Observable from an ObservableSource, using the provided mapping function.The returned Observable will
Checks if any of the elements in this queue are accepted by the given subscriber.
Accepts an observer for all the items in the queue, and returns true if any of them
Starts the queue of messages to be processed.This method must be called only on startup.
Starts the queue, but does not start the queue until it is unbounded.
Offers the given object into the queue.
Returns the disposable instance of the resource.If the disposable instance is disposed,
Completes this observable by setting the given value to the given value.
Called when an error has occurred in the thread pool.If the error has not yet been
Completes the state machine, ensuring that it is completed.If the state machine is not
Waits until the specified number of seconds have been completed or the current thread is interrupted.
Requests that the specified number of time has elapsed since the last invocation of this method.
Adds a PublishDisposable to the list of subscribers for the current thread.
Removes the given PublisherDisposable from the list of subscribers.
Create a ReplayableFlowable from a ConnectableFlowable.
Parse the annotations from the request method and return a HttpServiceMethod.This method parses the
Sets the delay for the timer to the given amount of time.
Creates and returns an error response.If an error is thrown during the call, this method
Returns the number of milliseconds to delay for the given time unit, or -1 if the
Create the sample data for the given username and password.The username and password are required.
Return the HTTP method value for the given HTTP method.Returns null if the method is not
Searches for a single user in the context source under the given username.
Encodes the given password using the salt and the suffix of the generated key.
Returns true if the password matches the given encoded password.
Perform the version checks for the current spring version, if the version is less than or equal
Checks to see if any checks should be disabled for the given version of spring security.
Gets the version of Spring Security Core.Returns null if the version could not be determined.
Use this method to configure an attribute exchange for the given identifier pattern.The identifier pattern will
Create an OAuth2 client.
Returns a new instance of OAuth2Security, or applies the current context, and then applies
Returns true if the value is equal to the specified attribute in the specified LDAP-DN.
Retrieves the attributes for the specified entry in the DirectoryContext.
Searches for multiple values for the specified attribute and returns them as a set of values.
Search for a single entry in the directory.
Build a SearchControls object from a SearchControls object.
Find all the primary keys in the given set of IDs.
Builds a PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails object from the J2EE user roles
Creates a root bean definition for an embedded server.
Create the servlet api filter if the servlet api is provisioned, or the default servlet api
Create the JAAS api filter to be used by the JAAS-API.
Create a new TypeResolverBuilder with a whitelist of whitelisted types.
Inserts a Spring security filter into the filter chain.
Get the token for a given series id.
Get the list of granted authorities for a collection of attributes.
Creates a new instance of a cipher with the specified algorithm.
Override afterPropertiesSet to call super class's afterPropertiesSet method.
This method is called by the web framework when the request is handled by the servlet context.
Returns true if the principal has changed in the request, false otherwise.
Perform the authentication.
Checks that the content length of this response is greater than or less than the buffer size.
Maps all authorities in the given collection to their respective authorities.
Sets the login processing url.
Updates the default values for the authentication.The default values will be overridden by the default values
Updates the default access settings for the login page.
Map a password value to a password string.
Extract the remember-me cookie value from the request.
Encodes the cookie tokens into a base64 encoded string.
Sets the cookie for the given tokens.
Resolves the reactive security context for the given parameter and returns a Mono instance of the
Gets the query string from the given request and returns null if the query string does not match
Gets the port from the service URL, or the default port if no port is found.
Get the LDAP principal name from the current authentication context.
This method clears the session associated with the given request.If the session has been invalidated,
Authenticates the user using the provided authentication token.If the token is not a username
Sets the context environment properties.
Returns the full URL of the request that should be redirected to.
This method is called when the end of the tag.This method is called by the end
Initialize the user details service.
Get the user details service.
Adds the PKCE code challenge parameters to the given map of attributes and additional parameters.
Checks if the request requires authentication.
This method checks if the request requires authentication and returns true if so, false if not.
Check if the ticket request should be sent to the proxy.If the ticket request is not
Checks if the current authentication is authenticated.
Checks if the request is a proxy receptor request.
Create a SecurityExpressionRoot for the given authentication and invocation.
Gets the jwk set from the server.
URL-encode the given string.
Gets the list of groups based granted authorities for the current user.
Load user details by assertion.
Returns the pre-authenticated principal for the current user, or null if the user is not
Concatenates the given byte arrays into a single byte array and returns the resulting array.
Returns a subarray of the given array starting at the given index.
Returns a list of all granted authorities for the given attributes.
Pre-processes the given map to ensure that the keys are Strings and the values areCollections
Returns the value of the granted authority collection.
Add a value to a collection of granted authority to a collection of authorizations.
Get the pre authenticated principal from the request.
Get the shared object for the given type.
Build the https redirect URL for the given request.
This method invokes the given JAdvisor and returns the result of the method invocation.
Checks that the given role string is a valid role name.
Returns an array of strings where each string represents one of the roles in the given array.
Creates a persistent remember-me token and stores it in the request and response.
Switches the user based on the username parameter in the given request.
Tries to exit the user.
Set the URL of the URL that should be used to redirect to when the user enters
Display a random contact.
This method applies the websecurity configuration to the websecurity configuration, and returns the websecurity
Decodes a JWT token and validates the validity of the token.
Checks if the current user is allowed to access the resource using the access expression.
This method checks if the current user is allowed to access the URL.
Converts a JWT into a collection of GrantedAuthors.
Generate a new csrf token for the given request.
Displays the admin page for the specified contact.
Add a permission to a contact.
Add a permission to a contact.
Returns the role with the default role prefix.
Create a UserDetailsResourceFactoryBean from a string.
Returns a list of the values of the attribute with the given name, or an empty list
Returns the first value for the given attribute, or null if the attribute does not exist.
Encodes a character sequence into a byte array.
Decodes the given byte array into a UTF-8 encoded string.
Tries to find the parameter names for the given object.Returns null if there is no parameter
Adds a new contact to the contact manager.
Returns a collection of configuration attributes for the given method and target class.
Add a new secure method to the map of secure methods.
Returns a collection of all ConfigAttributes in this class.The returned collection contains all of the
Returns true if the method name matches the mapped method name.
Specifies that there is at least one request configured for the application.
This method is called when an exception is thrown when the user is bound to another user.
Get a random contact from the database.
Clears the authentication attributes from the session associated with the given request.
Returns the field with the given name from the given class.
Create service url.
Create redirect url.
Extracts the prefix from the end of the string.If the string is not a valid prefix
This method is called to send a 403 error to the client.This method is called by
Checks the filter stack to see if there are any duplicates in the filter stack.
Returns the list of registered types.
Extracts the cause of the given throwable.
Register the access manager.
Convert the given collection of authorities to a set of authorities.
Compares two byte arrays and returns true if they match.
Set the default failure URL.
Sets the function to be used to resolve hidden inputs.
Build the URL for the given servlet path, request URI, pathInfo and query string.
Returns true if the given URL is an absolute URL.
Returns a list of ids for which the given identifier is a valid attribute identifier.
Converts the given string identifier to the corresponding class identifier.If the identifier is not a valid
Creates the entries in the ACL.
Creates an object identity for the given object.
Updates the primary key of the owner of the given object identity in the given ACL.
Saves the given request to the session if it has been saved in the session.
Create a matcher that matches all of the given path patterns for the given HTTP method.
Matches any web-exchanges defined in the current context.
Creates a new TextEncryptor using the given password and salt.
Generates a text encryptor for the given password and salt.
Create a queryable TextEncryptor for the given password using the given salt.
Write the X-Frame-Options header to the response.
Determines the target URL based on the request and response and the authentication.
Determine the target URL for the request.
Sets the target URL parameter.
Gets the directory with the immediate parent populated.
Builds a distinguished name from the given username.
Creates the shared objects that are shared with the application context and the user details service.
Sets the JAAS login config URL in the JAAS security property.
Get the current date.
Internal method to parse a date from a string using one of the given date formats.
Updates the cache with the given key and value. If the value is null, the cache
Sets the authentication details for the given request.
Returns the security name for the given subject.
Get the web sphere groups for the given security name.
Build the group DN from the given group name.
This method is called when the maximum number of sessions is exceeded.
Copies details from the source authentication token to the destination authentication token.
Returns the list of filters for the given request, or null if none found.
Get a list of filters for the given URL.
Returns the application context for the given page context.
Returns the full distinguished name for the given distinguished name.If the distinguished name
Set the session attributes for the mock mvc.
Returns a preemptive basic authentication scheme.
Adds a list of filters to the list of filters to be applied on the REST endpoint.
Adds a filter to the RestAssured.
Creates a new authentication scheme with the specified user name and password.
Creates a new NTLM authentication scheme.
Creates a new FormAuthScheme with the specified parameters.
Creates a proxy for the given URI.
Returns a string representation of the response body and the response headers, depending on the log detail
Use this config for redirecting the client to a client that has been configured to redirect to
Sets the default character set for the query parameter.
Set the default object mapper type.
Returns a new Jersey object mapper factory with the given JAXBJersey
Set the logging configuration for the mock mvc.
Set session configuration for mocked REST-AssuredMock.
Sets the object mapper configuration.
Return a new RestAssuredMockConfig configured with the given JsonConfig.
Set configuration for mock mvc.
Overridden to provide custom encoder configuration for mocked API calls.
Custom header config for mocked requests.
Specifies the configuration for the AsyncMVC operation.
Sets the mock mvc config for rest assured mocking.
Set the configuration for mocking multi-part REST calls.
Configure multi-part mock parameter configuration.
Set mvc matcher configuration.
Returns a new CertificateAuthSettings instance configured to allow access to all hostnames.
Declare namespaces to be declared in the configuration.The namespaces to be declared in the configuration
Sets the namespace to be used for the given prefix and namespaceURI.
Send a request to the server.
Sets the headers to be sent when the request is sent.This method is not thread-
Set the default proxy for this request.
Sets the name of the control within this multi part part specification.
Add a header to the multi-part part spec.
Use this method to connect to the NF4J server using basic authentication.
Connect to the NTLM server and login to the given NTLM domain.
Returns a new Headers instance with the given header and additional headers added.
Resets the configuration to the default values.
Add a header to the list of headers associated with the RestAssuredResponse.
Build the rest assured response and return the rest assured response.
Matches a cookie's value based on a given value matcher.
Matches any cookie that matches the given comment matcher.
Matches a cookie's expiry date based on the given matcher.
Matches any cookie that matches the given domain.
Returns a cookie matcher that matches cookies whose path matches the supplied matcher.
Returns a matcher that matches cookies that match the given secured matcher.
Matches any HTTP-only cookie with the given matcher.
Matches a cookie's version with the given version matcher.
Matches a cookie's max age based on the provided matcher.
Expects a response header with the given name and value matching the given matcher.
Set the value of the given header to the given expected value.
Sets the value of the cookie with the given name to the given expected value.
Return a copy of this ProxySpecification with the specified host.
Set the return type for the number of objects returned by this JSON path.The default parser
Returns a new JsonPathConfig with the default parser type.
Sets the default logging output stream to the given print stream.The default output stream will be
Enable logging of request and response if validation fails.
Creates a new HTTP request base for the given URI and HTTP method.
Sets the default boundary for this multi-part configuration.
Adds an attribute to the MockMock instance for the specified attribute name and value to the mock
Add a header to the mocked mvc request.
Adds a multi-part request.
Add multiple resultHandlers to the mock mock request spec.
Sets the value of a parameter in the HTTP client configuration.
Adds the given parameters to the parameters for the HTTP client and returns a copy of this configuration
Returns a new HttpClientConfig instance with the specified HttpClientFactory.
Sets the HTTP multipart mode for this client.
Gets the value of the specified path.
Returns the int value of the specified path.
Get the byte value for the given path.
Returns the short value for the given path.
Returns the float value for the specified path.
Returns the value associated with the path as a Double.
Returns the long value for the given path.
Returns the value of the specified path as a List of objects of the specified generic type.
Returns the map for the given path, or null if the path does not exist.
Gets object from path and cast to specified type.
Sets the body of the request.
Adds a cookie to the response.
Add a parameter to the request.
Add a collection of parameter values to the request.
Apply the given update strategy to the mock MvcParamConfig.
Log a response to the given print stream only if the response matches the given matcher.
Creates a new cookies object with the given cookie and additional cookies.
Removes all keys and sources from the backing map, and removes them from the backing map.
Index all bindings at the current level of the state.
Gets the binding for the given key or throws an exception if the binding is not found.
Convert a constant string to a binding.
Deletes all dependencies of the given binding and removes any dependencies that failed during the cleanup.
Removes a binding from the failed jit bindings, and from the members injectorstore and the
Returns the internal dependencies of the given binding.
Create an uninitialized binding for the given key.
Returns an array containing all the parameters injected into the given context.If there are no parameters
Binds the injector to the given injector instance.
Binds the logger to the injector.
Checks if the given member has a binding annotation that has been replaced with a misplaced binding
Returns true if the given method overrides the given method, false if it does not.
Initializes the delegate injector with the given delegate instance.
Returns the type of the provider.
Resolves all types in the given array.
Returns a TypeLiteral for the key of the given type.If the type is not fully
Prepares the built-in converters for the given injector.
Canonicalize the class loader.If the given class loader is null, then return the parent
Returns true if the given class loader has the same version of cglib.
Returns true if the member is publicly callable.
Fixes the annotation of the given key to the annotation type of the given key.
Creates a new instance of the class with the given instance and injects it into the injector
Validates any pending injections, and merges errors with any errors that occur during validation.
Creates a new instance of this class with the given arguments.
Creates a new instance of the given scope for the given source and scoping.
Make the given scoping injectable according to the scope annotation on the injector.
This method is used to normalize the path.
Generate an annotation instance for the given annotation type.
Returns true if the given type is retained at runtime or false if the type is not.
Returns the scope annotation for the given annotations, or null if no scope annotation is found.
Returns the binding key for the given type and member, or null if the binding is not
Returns the name of the annotation or the annotation type of the key if the annotation is not
This method initializes the delegate provider with the given provider.
Add a binding to the direct type provider for the binding selection.
Get the constructor injector for the given injection point.
Checks if the given interceptor class has a scope.
Creates a new real map binder with the given key type and value type and annotation.
Create a new key for a new value.
Provisions a single instance of the given constructionContext.
Writes the contents of the message into a new message object.
Returns the Module that represents the given module, or null if the module is not a module
Returns a collection of assisted methods associated with this assist.
Return true if the type is not specified in the configuration exception, false otherwise.
Returns true if the constructor has parameters matching the given parameter list.
Returns the set of dependencies of the given ctor point and the implementation.
Removes all dependencies from the given set of dependencies that are not assisted.
Checks if the dependencies are valid for an assisted inject.
Get the binding from a new injector.
Invokes a method on the given proxy object.
Thrown when an implementation of the given key is not present in the injector.
Creates a new real multibinder with the given key and the given binder.
Get the key to use for a new item in the binding set.
Finds the next filter in the chain that matches the given request.
Returns true if the given constructor has at least one annotation javax.inject.Inject.
Gets the internal constructor for this factory.If the factory has a constructor, it will be
This method returns the set of dependencies that this factory depends on.The set of dependencies that
Returns a Module instance for the given module using the given scanner.The scanner is used to
Get the annotation for the given method, or null if it's not present.
Returns the line number of the given member.
This method is called during the initialization of the injection process.This method is called by the
Validates the given object and ensures that it is of the correct type.If the object is
This method is used to create a new instance of the class with the same name as the
Creates a new instance of the members injector with the given type and all its listeners.
Returns the injectors for the given set of injection points.
Returns a new key for the given type and adds the given annotation strategy to it.
Returns a new AnnotationStrategy instance for the given annotation.
Creates a new instance of the AnnotationStrategy for the given annotation type.
Prunes the stack trace of the given exception.
Returns the source of the binding, or null if the source is not a class or member
Creates a message with the given message format and the given message format and arguments.
Creates a log message with the specified message format and additional arguments.
Creates a message from the given list of sources and the given message format and arguments.
Converts the given object to an ElementSource.If the given object is an ElementSource,
Returns true if the given class should be skipped, or if it is one of the
Get the stack trace element for a list of class names.
Entry point for the manager.This is the main entry point for the manager class.
Pushes the given dependency to the stack, and returns the previous state.
Pushes the given source object into the stack at the given key in the context of the
Returns a new initializable instance of the given instance.
Provisions an instance of the given provider.
Called when a connection event arrives from a remote node.
Adds a connection event processor for the given event type.
Get the result of a future task.If the future task is not in the run state
Throws the given exception if it is a runtime exception or an error.
Register a remoting processor for the given command code.
Registers a default remoting processor to be used when no remoting processor is registered.
Returns the processor associated with the given command code, or the default processor if noprocessor is
Try to get a URL from the soft references map, or return null if not found.
Decodes the protocol code from the given byte buffer.
Returns a map containing all the connections in this pool.The keys of the map are the
Scan the pool for connections that have been created.
Returns the connection for the given URL.
Create the connection and heal if the given URL needs to be re-established
Removes the task for the given pool key from the list of tasks for the pool.
Heal the pool if there is a need for the pool to be reclaimed.
Creates a connection from the given URL and adds it to the connection pool.
Closes a connection to the given address.
Called when the connection is closed.
Closes the remote connection.
Sets the value of the specified attribute if it doesn't already exist.
Register a user processor with the given map of user processors.If the processor is already registered
Register a user processor with the map of pre-processor for each interest in the processor.
Dispatches the RPC request to the user processor.
De-serializes a RpcRequestCommand and sends a Response if it fails.
Pre-process the remoting context for the given command, updating the arrive timestamp and
This method logs the timeout of the request and the remote address of the request.
Debug log for RPC request.
Process the given message and execute it using the given executor.If no executor is specified,
Send a remoting request to the remote endpoint.
Convert a bit set to a byte.
Convert an int value to a BitSet.
Adds a new reconnect task to the list of tasks to be executed.
This method converts a request object to a remoting command.
Filter a list of connections to remove connections that are not in the list of active connections.
If there is a connection in the map, close it and add it to the list of
Returns a boolean property from system properties, or a default value if the key does not exist
Log a message to the logger if info logging is enabled.If info logging is disabled,
Return true if the request timeout has been exceeded, false otherwise.
Returns the user processor for the given class name, or null if the class does not exist
Get a random connection from a list of connections.
Returns the value for the given key, or the default value if the key is not found
Returns the value of the property with the given key.Returns null if the property is not
Resolves the response object for the given ResponseCommand and returns it.If the response status is
Converts a response command response object to a response object.
Deserialize the response from the server and convert it to a Throwable.
Returns the detail error message for the given rpc response and the given client error message.
Creates an RpcServerException from the given exception.
Prints the connection trace log for the given trace id and the invoke context.
Creates a new EventLoopGroup with the given number of threads, and the given thread factory
Returns the remote address of the given channel.
Parses the local address of the given channel.
Returns the remote ip from the given channel or an empty string if the channel is null.
Returns the remote host name of the given channel, or an empty string if the channel is
Parses the local IP address of the given channel.
Parses the remote port from the given channel.Returns -1 if the remote port cannot be
Returns the local port of the given channel, or -1 if none is available.
Parses the given socket address to the host address.Returns null if the address could not be
Add a connection to the pool.
Remove the connection from the pool and try to close the connection if the connection is closed.
Registers a custom serializer instance with the given class name.
Returns a custom serializer for the given class name.
Registers a custom serializer for the given command code.
Get the custom serializer for the given command code.
Returns true if the remote address is connected to the remote server.
Initialize the write buffer water mark.
Create a framedata instance for the given opcode.
Write the buffer to the socket, if there is one, and if there is one,
Sets the code to be used in the generated code.
Validates the payload as UTF-8.
This method updates the payload of the exception.
Checks if the requested protocol is in the list of known protocols and if so returns the protocol
Checks that the length of the frame is less than or equal to the maximum frame size.
Translate a single frame packet size to an incomplete packet size if it is smaller than the specified
Generates the key to be used for the final encryption.The key is generated using the SHA
Process a single frame, if the frame is a continuous frame, and the current frame is
Process a single binary frame.
Logs the exception and notifies the websocket listener of the given WebSocketImpl that caused the exception.
This method processes the text received from the client and sends it to the web socket listener.
Process the current continuous frame and process the next frame if it is a FINALLY frame
This method is called when the frame is received from the network.This method checks if the
Process the closing frame. If the frame is a CloseFrame, the code and reason are
Checks if the current buffer size is greater than or equal to the max frame size.
Gets the payload from the byte buffer list.
Returns the number of bytes in the byte buffer list.
Translate a handshake header line into a handshaking header.The first line should be the
Translate an HTTP client handshake to a WebSocket client handshake.This method is used to parse the
This method is called when the socket buffer is ready to be decoded.This method should be
Sends a response to the client and closes the connection due to an error during the handshake.
Closes the connection due to an internal server error.
Generate the http response based on the error code and the error code.
Sends the specified text as a message to the client.
Resets the engine to the initial state.This method should be called only when the engine is
Connect to the remote server and start a new thread for reading data from the remote server.
Returns the port of the socket.
Send the handshake to the server.
Sets the connection lost timeout. If the timeout is less than zero, the connection will be
Stop the connection lost timer.
Starts the connection lost timer if the connection lost timeout is less than or equal to zero.
Restarts the connection lost timer, and starts a new thread to check if the connection is
Executes the connection-lost detection and sends a ping if the connection is lost.
Cancels the connection lost timer.
Invoked when a websocket handshake is received as a server.
Sends a pong frame to the client and waits for a response from the server to complete.
Stop the timer and wait for it to finish, and wait for it to finish.
Returns the port associated with this address or the local port if no port is associated with the
Reads the next buffer from the buffer queue, and puts it in the in queue.
Accept a new connection from the server and add it to the list of acceptable connections.
Perform a read operation on a connection.
Writes a connection to the remote socket.
Sets up the selector and the server socket, and starts the web server thread.
Ensures that there is only one thread in the selector thread for the current thread.
Called when the server has been shut down.This method should be called when the server is
Get the socket associated with the given connection.
Broadcasts the given data to the given clients.
Sends a broadcast message to one or more clients.
Broadcasts the given data to all the given clients.
Fills the frames for the given draft, creating them if necessary, and adding them to the
Transfers the contents of a byte buffer from one byte buffer to another byte buffer.
Starts the JPA Engine.
Returns the entity manager for the given name, or null if theemf doesn't exist
Executes the given consumer in a transaction, and passes the result to the given consumer.
Convert arguments to ScalaBuffer.
Wraps the given arguments to a list if needed.If the first argument is not a list
Returns the value for the specified key in the specified language with the specified arguments.
Returns the value of the specified key in the specified language with the specified arguments.
Check if a message is defined at a specific language.
Returns a new Messages instance with the preferred language of the messages in the given collection of languages
Return the preferred messages for the given request, or null if there is no preferred messages.
Sets the language of the given result.
Create a new builder with the given modules bound to the current builder.
Returns the bindings for the specified modules.
Add a set of bindings to the end of the current instance.This is a convenience method
Overrides the given modules with the default overrides for the delegate module.
This method returns a copy of this instance with the module overrides applied.The module overrides are
Return a new Bean that overrides any binding in the given bindings.This method does not perform
Disables the specified modules.
Executes the given request and returns a new CompletionStage that is completed with the result of the
Get the existing file for the given relative path, or null if it doesn't exist.
Returns a binding for the given scope, or null if the binding does not exist.
Create a new Tuple from the given values.
Create a new 5-tuple from the given tuple.
Convert an execution context to an Executor.
Creates a new JPAUnit with the given name and unit name.
Creates a JPAUnit instance from the given parameters.
Creates a new JPAPersistenceUnit from the given map of persistence units.
Create a flow that creates a string using the given callback name and returns it as a byte
Creates a flow from a JSON node and returns a JSON byte string with the given name.
Adds a mapped constraint validator to this factory.
Creates a new instance of a constraint validator with the given key.
Returns the matching accessible method for the given method name and parameter types.
Invoked when an error is received from the client for the given request.If the error is
Notifies the user of a bad request.This method returns a CompletionStage that is completed
Renders the forbidden page and sets the response as a "Forbidden" response.
This method is invoked when the controller does not respond with a 404 Not Found response.
This method is invoked when an error occurs during the server-side processing of the request.
Log server error.
Convert the given throwable to a useful exception.
This method is invoked when a dev server error is detected.
Renders the error page and returns a CompletionStage that is completed when the server responds with an
Builds a doc handler from a list of files and a list of base directories.
Creates a DocHandler from the given directory.
Creates a doc handler from a directory and a jar file.
Creates a DocHandler from a directory and a jar file.
Build a DocHandler from a jar file.
Consumes the data of this stream and consumes it using the given materializer.
Create a HTTP entity from the given content.If the content is an XML document, the
Creates a new instance of HttpEntity from a string representation of the given character set.
Create a new HTTP entity from the given data and the given content-type.
Returns the given status with the given content as a JSON string.The content will be encoded
Sends a response with the given status code and JSON-encoded content as a JSON-encoded
Returns a new result instance with the given status code and content as a byte array.
Sends a HTTP response with the given status code, content and contentLength.
Returns a result with the given status code and the content of the given file.
Find a user by its id, or null if it doesn't exist in the database.
Returns a new language with the preferred version of the given language candidates.
Returns a new Call object with the same arguments as this one but with unique IDs removed.
Create a new MVC call with the specified fragment.
Returns the absolute URL for the given request.
Returns the web socket URL for the given request.
Returns a function that executes the given connection runnable block and returns the result of the execution.
Returns a function that executes the given callable on the given connection and returns the result of the
Creates a Server instance for the given mode, port, and a given block of built-
Convert an object to a JsonNode.
Convert JsonNode to an instance of the given class.
Parse the given string as a JSON tree and return it as a JsonNode.
Parses the given input stream as a JSON tree and returns the result as a JsonNode.
Returns a path relative to the given start path and the target path relative to the given target
Returns the canonical form of the given URL.
Convert a set of constraints into a list of constraints that can bedisplayed.
Returns a tuple with the name of the display type and the list of attributes of the constraint
Timeouts the given CompletionStage to the given amount of time unit.
Parses the given cron string and returns the next valid date.
Gets the next cron interval from the given cron expression and the given date.
Creates a new WebSocketClient with the given configuration, cache, and materializer.
Creates a builder for the Galice application based on the provided context.
Displays a summary of the results of a Scala Todo.
Adds a value to the session with the given key in the context of the current thread.
This method adds a key-value pair to the session for the current user.
Returns the binding key for the given instance of the annotation.
Returns a key that is qualified with the given annotation, or null if the key does not
Creates a new binding with the given implementation.
Creates a new binding from the underlying implementation, using the given provider, and returns it.
Create a new binding from a Java supplier.
Returns a new binding that maps to the given binding key.The key will be used as
Creates a new binding from the underlying implementation of the given provider.
Returns a list of the available languages for the given application.
Get the preferred language from the list of available languages.
Creates a new simple evolutions reader from the given map of evolutions.
Create an evolutions reader for the default evolutions.
Cleans up the evolutions of the given database.
Load configuration from the given environment and configuration loader, using the given function as the loader.
Creates a new builder using the provided module loader.The module loader will be used to load
Load the given guice modules into the Guice ApplicationBuilder.
Load a guice application from a set of modules.
Load a guice application from a set of modules.The modules will be loaded in the
Load guice applications from the given bindings.
Create a new Galaxy application builder.
Encodes a cookie into a Base64 encoded string.
Returns the entity manager that is currently in the stack, or null if the stack is empty
Returns the entity manager stack for the current thread.
Push an EntityManager onto the stack or pop it from the stack if the EntityManager is null.
Splits the input and output into a flow, by applying the given function to the input and
Splits a flow into a single flow by using the given splitter and the given merge strategy.
This method converts the error arguments into their java types.
Fill the form with the given value.
Returns a list of all validation errors that have been added to the validation result.
Returns a JSON representation of the errors in the given lang.
Get the value for the given key.
Fills the form with values from the given map.
Converts the given text into an object of the given class.
Parses the given text into an instance of the given field.
Returns the string representation of the given object.
Prints a value for the given field in a human-readable form.
Returns the string representation of the given type of the given object.
Register a converter that converts strings to strings, only if the source type is String.
Registers a SimpleFormatter for the given field type.
Encodes the given cookie into a cookie value string. The cookie name and value are encoded as
Returns the list of nodes that match the given path, or null if the path does not
Convert java.util.List to scala.collection.Immutable.Seq.
Converts an array of primitives to an array of primitives.
Returns an immutable sequence of the elements in the given array.
Returns acceptor for JSON messages.
Returns a new web socket that accepts the result of the given partial function and applies the given
Get the cost of a primitive promotion of the source class to the destination class.
Computes the total transformation cost for the given source and destination arguments.
Get the cost of an object transformation between the source class and the destination class.
Returns the localized message for the given key, with the given arguments.
Returns the value of the first item in the list of messages with the given keys.
Creates a database from the given driver, url and configuration.
Create a parallel sorter for the given array of arrays.
Re-sorts the elements in the specified range using the comparator for the elements in the
Sort the elements in [lo,hi) in the order in which they were sorted.
Invoke the method of the fastClassInfo class with the given arguments and returns the result.
Loads the local argument at the given index.
Emit a field instruction.
zero-or-null the stack if the given type is zero or null.
If this type is a primitive, unbox it or zero if it is a void type.
Generates code to process an array of the given type and call the callback for each element.
Generates code to compare two null labels.
Resolve all classes in this class loader, and return a map with the resolved classes.
Filter the constructors of the given class by only the constructors that are visible in the list.
Sets the superclass for this class.
Generates code to get the value of a named field.
Adds the given method to the list of method signatures and the exception types for the method.
Returns the cardinality of this BitSet.
Sets the naming policy to use for this instance.
Given a set of method names and a set of method descriptors and a set of methods,
Resolve a child path relative to a given base path.If the child path starts with a
Read a string from a file.
Sets the host header for the request.
Creates a new HTTP request with the given method and destination.
Create a new HTTP request configured to connect to the given destination.
Returns a new HTTP request instance configured to perform HTTP GET on the given destination.
Create a new HTTP POST request for the given destination.
Returns a new HTTP request configured to handle PUT requests.
Create a PATCH request.
Creates a new HTTP request configured to delete the resource at the given destination.
Returns a new HTTP request configured to head on the given destination.
Create a new HTTP Request configured to send a TRACE request.
Create a new HTTP request configured to HTTP OPTIONS.
Set the path for the request.
Set HTTP request cookies. Cookie values are separated by comma seperated values.
Adds multiple parameters to this request.The first parameter is the name of the parameter and the
Adds a map of query parameters to the HTTP request.
Sets the value of the query string of the current request.
Returns the query string for this request.
Get the URL of the host.
Sets the basic authentication header for the given username and password.The username and password will be
Sets the host header for the request.
Returns a buffer that can be used to send the request to the client.
Removes a range of instructions from the given handler, returning null if the handler is null.
Returns the number of exception table entries in the given exception handler chain.
Collects the list of action interceptors and sorts them in the order of which they were registered.
Collects all the action filters from the filters manager and sorts them by simple name.
Collects all the action results from the action results manager and sorts them in ascending order.
Collect all action runtimes and sort them in the order of execution.
Sets the value of a simple property.
Returns the value of the property with the given name in the given bean, or null if
Extract this reference from the property name.
Returns a new FastCharArrayWriter instance that can be used to write to a file.
Sets the object reference for the given name.
Returns the object reference with the given name or null if there is no object reference with the
Looks up an object by its string reference.
Returns the table descriptor for the given table ref, or null if the table ref is not
Find the table descriptor for the given column ref.
Get the table alias for a table ref.
Register a table reference with the given table alias and entity descriptor.
Returns the table descriptor for the given table ref, or throws an exception if there is no
Registers the given string as a hint in the list of hints.
Pushes the value to the stack, and returns true if the value was serialized successfully.
Injects all the attributes in the servlet request to the targets.
Inject parameters from the servlet request into the target servlet request.
Inject the uploaded files into the targets.
Convert property name to table name.
Convert column name to property name.
Converts the column name to a property name.
Store the value in the given prepared statement at the given index with the given value.
Convert the value of the given object to the given destination type.
Returns a set containing all of the wrapped objects.
Resolves the wrapper instance for the given wrapper class, creating it if it doesn't exist.
Creates a new instance of the given wrapper class.
Converts the given path separators to the system path separators.
Returns the path part of the given filename, if the filename is not a valid path.
Splits a filename into a prefix, path, base name and extension.
Computes the relative path from the given target path to the given base path.
Registers a component with the MADOC framework.
Register an action configuration consumer for the given action type.The consumer will be invoked when the
Starts the web application.
Register all MADVOC components in the MADVOC container.
Exclude the given jars from the scan.
Include the given set of jars to be scanned.
Includes the given entries in the list of included entries in the class file.
Exclude one or more entries from the list of entries to be excluded from the scan.
Scans the given jar file for resources.
Scans all class files in the given root directory for resources.
Returns the bytecode signature of the given class.
Scan the given paths for class files and add them to the list of files to scan.
Scans the files in the filesToScan list for JAR files and classes and scans them for
Creates a new transaction for the given scope and active state.
Returns the default scope for the given scope class.
Gets or initializes the scope of the given scope type.
Creates a scope for the given scope type and passes it to the given consumer.
Prepare a CSRF token for the given session and time to live.
Assures that the token set size is less than or equal to maxTokensPerSession.
Check if a CSRF token is found in the CSRF token set of the session.
Creates a new BeanCopy from the given source object.
Returns a copy of the current bean.
Visits a property and stores it in the destination object.
This method is called by the derived class to initialize the template data object.
Returns the scope for the given scope type, creating it if it doesn't already exist.
Registers a petite bean with the given name, wiring mode and scope type.
Register a bean with the Petite bean manager.
Removes a bean from this bean manager.
Resolve the bean names for the given type.
Register a Petite ctor injection point for the given bean name.
Register a property injection point for the given bean name, property and reference.
Registers a set injection point for the given bean name and property name.
Register a Petite method injection point for the given bean name, method name, and
Register a set of Petite init methods for the specified bean.
Register a list of destroy methods for the specified bean.
Registers a Petite provider with the specified name, bean name and method name.
Registers a Petite provider with the given provider name and a static method with the given
Iterate through all beans of the given type and invoke the given consumer for each bean name.
Define parameters from a map of properties.
This method intercepts the given action request and returns the result.
Resolve the Java version number from the given version.
Pushes an integer onto the stack.
Checks that the given argument index is valid for the given method and that it is at least
Returns the advice field name for the given name and index.
Returns the advice method name for the given method name and index.
Loads the special method arguments for the given MethodInfo.
Loads all the arguments of a static method into the given visitor.
Loads all the arguments for the given virtual method and adds them to the given method visitor.
Generates the bytecode instructions to load the given argument of the given method.
Stores the value of the argument at the given index in the given method's stack.
Prepare the return value of a method.
Creates a key for the signature of a method on a class.
Generates the code to create a new array of the given type.
Generates the code that stores a value into an array of the given component type.
Extracts the encoding from the given content-type, or the given default encoding if the content
Returns true if the flags are empty, false if the flags are system flags and false if
Resolve the OAuth bearer token from the authorization header.
Set the WWW-Authenticate header and send an unauthorized response to the client.
Prepares the given response for downloading the given file and adds it to the given response.
Prepares the given response with the given mime type and file size.If the mime type is
Returns all cookies with the given name in the given request, or null if the cookie is
Read the request body from the request body reader.
Reads the body of the request body from the input stream of the given request.
Store the context path in the request and the servlet context for the given page context.
Stores the current context path in the context path variable.
Return true if the given parameter is in the list of query parameters, false otherwise.
Prepare the parameters to be sent in a HTTP request.If the parameter is null or empty
Copy parameters from the servlet request to the request attributes of the servlet request.
Invokes the given body method, throwing a JspException if there is an exception.
Renders the body of the page and returns the result as a character array.
Renders the body of the body of the JSP fragment and returns the result as a String
Invokes all the init methods of this bean according to the given invocation strategy.
Call the destroy methods on the underlying bean.
Creates a new instance of the bean.
Injects the bean's parameters into the given param manager.
Rewrite the action path for the given action path with the given http method.
Add a new header with the given name and value.If the header already exists, the
Add a new props entry to the props map with the given key and value.
Adds a new base property to the configuration.The base property will be added to the configuration
Adds a profile property to the profile properties for the specified profile.If the profile property is
Returns the property for the given profile, or null if the profile does not exist.
Resolve a value for the given list of profile names and return the resolved value as a string
Extracts a profile from a list of profiles or a list of profiles using a wildcard pattern.
This function converts a byte array into a 32-bit unsigned integer.
Hashes a password using the given salt and returns the result as a hexadecimal string.
Returns true if the plaintext password matches the given hashed password, false otherwise.
Copy all bytes from this stream to the given output stream.
Copies up to maxBytes bytes from this input stream into the given output stream.
Parses the given action method and returns the action runtime object.
Resolve the ActionConfig for the given ActionAnnotationValues instance.
Detects and registers an alias for the given action.
Read the action interceptors for the given action class or method.
Read the action filters from an annotated element action class or method.
Returns the action path from the package of the given action class.
Reads the method action path from the annotation values and returns the action action path.
Parses the alias of the action method and returns null if the alias is not found.
Creates an action runtime for the given action handler, action class, actionResult, and default
This method is called before the response is sent to the client.If the last modified time
Apply an advice for the given target class.
Injects the target object into the proxy.
Visits an annotation.
Returns the real name for the given JSON name.
Resolve the JSON name for the given real name.
Looks up the type data for the given class.
Looks up the type data for the given class.
Find the type data for the given type.
Resolve a json name for the given type and name.Returns null if the name is not
Resolve the real name for the given type and JSON name.
Returns the content of the file in a byte array, or null if the file is not
Copy the bootstrap methods from the given class reader to the given char buffer.
Set the major version and the class name and return the constant index.
Puts the constant pool in the given byte vector.
Puts the bootstrap method information into the given byte vector.
Add a field reference to a constant field in a class or package.
Add a constant methodref to the symbol table.
Adds a member to the constant pool.
Adds a constant member reference.
Add a constant to the constant pool or create a new constant if it doesn't exist.
Adds a constant integer or float to the constant list.
Adds a constant to the constant pool or creates a new one if it doesn't exist
Add a constant long or double to the constant table.
Adds a constant name and type to the constant pool.
Adds a constant name and type to the constant table.
Adds a constant to the constant pool.
Adds a utf-8 constant to the symbol table.
Add a constant method handle to the symbol table.
Adds a new constant to the symbol table using the given name, descriptor, and bootstrap method
Add a new constant to invoke a dynamic method on the current symbol.
Adds a constant to the constant pool or creates a new one if it doesn't already exist
Add a constant to the constant map, if it is dynamic, or if it is a
Adds a new UTF-8 constant to the constant pool, if one does not already exist
Adds a reference to a UTF-8 string constant.
Adds a bootstrap method to the symbol.
Returns the index of the first type table in the second table, or -1 if the
Returns the hash code of the given name.
Removes all entries from the multimap and resets the head of the map to its initial state
Returns a list of all values with the given name in this map.
Returns an iterator that iterates over the elements in this stream.
Returns a list of all the entries in this list in the order they appear in this list
Increases the capacity of the buffer to be at least the specified capacity.
Appends a sequence of characters to the end of the character sequence.
Visits an annotation on this method or on a method invocation.
Create the proxy methods for the current chain.Create the methods for each proxy in the chain
Creates the first chain delegate for the current chain.
Creates a method that invokes the first method of the given target class.The first method is
Parses a path string into a Path object.
Pushes a field onto the path, but does not add it to the end of the
Configure the Jodd Servlet Context.
Executes the method on the target and returns the return value of the target method.
Returns an array of all the FieldDescriptors in this DescriptorList sorted by field name.
Creates a BeanDefinition for the given type and registers it with the given WiringMode.
Convert a JtxTransactionMode to a JtxTransactionMode.
Reads a property from the given source object using the getter associated with the given property descriptor.
Put all of the entries from the given map into this map.
Appends the given buffer to this buffer if it is not already at the end of the
Writes the contents of the list to the given writer.
Writes the contents of this list to the given output stream.
Writes the content of this response to the given output stream with the given progress listener.
Returns the value for the given key, or null if the key is not in the map
Returns the value for the given key, or null if the key does not exist.
Gets the long value for the given key, or null if the key does not exist.
Returns the value of the given key as a Double, or null if the key is not
Gets the float value for the given key.
Gets the value associated with the specified key.
Sets the value of the specified key in this object to the specified value.
Use a folder.
Returns an array of received email messages, or an empty array if none arereceived.
Updates the flags for the specified received email.
Closes a folder if it has been opened.
Look for a named parameter in the tree of named parameters.
Validate the action and return true if validation was successful, false otherwise.
Add a violation to the validator.
Sets the mime-type of this raw data.
Set the name of the file to download and the mime type of the file.
Sets the target input stream.
Set the target class name.
Sets the target class.
This method processes the data in the target stream.
Creates and returns the byte array of the target class, or null if the target class is
Creates a new instance of the class represented by this class definition.
Dump the given class in the debug folder.
Creates an e-mail object from the given personal name and e-mail-address.
Adds the specified email address to the end of the list of recipients for this email.
Adds an email address to the email address chain.
Sets the list of email addresses to reply to.
Set the CC addresses.
Creates a plain text message with the specified text and the specified encoding.
Creates a new email message with the given HTML content.
Add a header to the request.
Gets a system property value or a default value if the property is not found in the system
Returns the value of a configuration option as a boolean, or the default value if the option
Returns the value of the specified parameter as an integer or the default value if the parameter is
Returns the long value for the given name.
Returns an array of the parameters that are resolved by the parameter extractor.
Serialize a key-value pair into a JSON string.
Looks up the action path for the given alias, or null if the alias is not found
Resolve the alias for the given value.
Resolve the result path for the given path and value.If the value is null, the
Resolves the result path and returns the resolved value as a string.
Returns the index of the last character of the given string, or -1 if the string
Get the last index of the dot in the string after the last slash in the string.
Returns the index of the first occurrence of a dot in the given string after the first occurrence
Resolves the schema name for the given type.
Resolve the column descriptors for the given entity descriptor.
Initialize the cache with the given key and tweak.This method is called when the cache is
Mines a single node into a single node.The node is represented by the number of
Decreases the state of a depth-by-depth tree.The state of the depth
Schedule a key to be used in the schedule for a given schedule.
Initialize the hash function with the specified key and tweaks.
This method encrypts a block of data at the given offset.
Convert an array of bytes to a long array starting at the given byte array starting at the
Removes any bounding box from a string.
Returns the path to use for this request.If the request method does not exist, returns
Zlib compress the given file, and returns the file name.If the file is a
GZip a file and return the name of the gzipped file.
Ungzip the given file and return the output file.
Returns a list of the names of the entries in a zip file.
Unzips the given zip file into the given destination directory.
Adds a file to a ZIP output stream.
Adds the content to the zip output stream.
Returns the FieldDescriptor for the given field name, or null if it doesn't exist.
Returns the property descriptor for the given property name, or null if not found.
Sets the bundle name for the request.
Set the current locale for the session.
Returns the current locale for the session.
Returns the list of parameters for the bean with the given bean name.If resolveReferenceParams
Add one or more profile strings to the list of profile strings for this PropsEntry.
Gets a long from the byte array at the given offset in little-endian order.
Reads the contents of an input stream and returns it as a byte array.
Read a label from the given array of labels, creating a new label object if necessary.
Returns the bytecode offset for the given type annotation, or -1 if it is not
Read the bootstrap methods attribute from the input stream.
Returns the ctor descriptors for all constructors declared in the current class descriptor.
Returns the ctor descriptor for the first argument.Returns null if the ctor descriptor does not exist
Returns the map of transient bean data from the servlet request attributes.
Create a map of transient bean data for the given request.
Convert an array of primitive values to an array of integers.
This method is called by the servlet to initialize the filter.It is called by the servlet
Adds a search path to the list of paths to search for files.
Adds a search path to the list of paths to search for files in the container.
Adds a pattern to the list of patterns to be included in the find results.
Exclude files that match any of the patterns in the given array.
Adds the given path to the path list, if it does not already exist.
Returns a list of all the files in this directory.
Initializes the list of files and folders.
Returns an iterator over the files in the directory.
Resolve bean wiring mode.
Resolves a bean name for the given type.
Gets the writer to use for output.
Gets the output stream. This method is not thread-safe, it is only called during
Returns the class name of this type.
Returns the descriptor for the given constructor.
Returns the method descriptor for the given return type and argument types.
Returns the method descriptor for the given method.The descriptor includes the parameter type and return type
Appends a descriptor to the given string builder.If the sort is an object, then append
Returns the number of elements in the list.
Get the number of arguments and return sizes for the given method descriptor.
Marks a transaction as rolled back and sets its cause to the given exception.
Commits or rolls back the transaction if the transaction is active, otherwise rolls back the
Rolls back all resources in this transaction.
Requests a resource for the specified resource type for the current transaction.If the resource is not
Pop the name from the stack and write the name to the output stream.
Write a string value to the output.
Writes a single unicode character to the underlying output stream.
Writes the given char sequence to the JSON output.
Sets the parsing error log level.
Sets the start and end offsets for the specified region tag and deep level.
Returns true if the string value is a substring of the given include string, false otherwise.
Registers a pseudo function.
Lookup a pseudo function by its name.
This method is called when a proxy class is visited.This method is called when the proxy
Visits an annotation on the destination object.
Generates a static init block.
Generates the proxy constructor.
Walks the super classes looking for methods that are declared in the targetClassInfo.
Find the index of the last element in the range [low, high).
Adds the prefix and suffix to the given string, and returns the result as a string.
Replace all the ASM instructions in the given class file.
Returns the list of attribute prototypes for this class and all superclasses.
Register a new SQL type for the given SQL type.
Returns the SQL type for the given class or any of its superclasses or interfaces.
Looks up the SQL type for the given SQL type, creating it if it doesn't exist
Create a proxy for SOCKS4.
Returns a proxy info object for SOCKS-5 proxy.
Creates a HTTP proxy.
Returns the total number of transactions currently in the stack, i.e.
Returns the number of transactions in the current thread that have the given status.
Associate a transaction with the transaction stack.
Continues a transaction from the source context to the destination context.
Lookup the resource manager for the given resource type.
Creates a proxy object for the given target class.
Append a method name to the path.
Aligns the left and the right side of the string to a certain number of characters.
Convert a string to camel-case.
Formats the given string as a paragraph of the given length.
Converts the tabs to spaces, and removes the tabs from the beginning of the line.
Escape a string so that it can be used as a java string.
Unescapes the given string by removing all non-ASCII characters from the beginning and end
Returns the bean with the given type.
Returns the bean with the given name, or null if the bean is not found.
Initializes the given bean definition.
This method invokes the provider and returns the result of the call.
Registers a new bean with the Petite bean manager and registers it with the Pet
Set the value of a property on a bean.
Returns the value of a property of a bean.
Shuts down the scope manager by removing all beans and scopes from the scope manager.
Resolves the method parameters for a given method or constructor.
This method is called after the body has been rendered.This method will populate the form and
Returns the value of this property.
This method is called after the end of the tag has been added to the end of the
Create an element node for the given tag.
Removes the last child node of the given parent node if it is a TEXT node.
Returns the SQL template as a query string.
Returns the name of the action class for the given action object.
Calculates and returns the number of items to move from the beginning of the list to the end
Replaces all occurrences of sub in s with with with with with.
Replaces the first occurrence of the specified character with the specified character.
Replaces all occurrences of a character in a string with a character in another string.
Replace the first occurence of sub in s with with with.
Replaces the first occurence of sub in s with with with with thespecified character
Replaces the last substring of the given string with the given string.
Replaces the last occurrence of a character in a string with a character.
Remove the first occurence of a substring from the beginning of a string.
Remove the first occurrence of the specified character from the specified string.
Returns true if all string in the array are non-empty, false otherwise.
Returns true if all of the strings in the array are null or empty.
Convert an object to a String array.
Changes the first character of the given string to upper or lower case.
Returns a title-case version of the given string.
Compress a string by removing the given character from the beginning and end of the string.
Checks if a string starts with the given substring, ignoring case.
Returns true if the string ends with the given char.
Counts the number of characters in the source string, ignoring the case of the first character.
Check if two string arrays are equal, i.e. if all elements are equal,
Returns the index of the first non-whitespace character in the given string, or -1
Remove the leading char from the beginning of the string if it is equal to the given char
Strips the trailing char from the end of the string if it is the same as the
Strip the given character from the beginning and end of the string.
Remove the first occurrence of c from the string and return it as a new string.
Strip off the first occurrence of the given character from the beginning of the string.
Crops all of the strings in the given array, preserving the order ofthem.
Returns a copy of the given string with any whitespace removed from the beginning of the string.
Removes all whitespace characters from the end of the string.
Get the index of the first occurrence of the left boundary and the first occurrence of the right
Returns a string representation of the elements in the collection joined using the specified separator character.
Returns a string representation of the elements in an array separated by the given separator string.
Convert the given string with the given charset name to the new character set name.
Checks if the character at the given index is equal to the given char.
Surround the given string with the given prefix and suffix.
Adds the prefix to the string if it does not already start with the prefix.
Add a suffix to the end of the string if it does not already end with the suffix
Cut the given string up to the first occurrence of the given substring in the given string.
Cut the string from the first index of the substring in the given string.
Cut the given prefix from the beginning of the given string.
Cut the suffix from the end of the string if it ends with the given suffix.
Cut the given string from the beginning and the end of the given string.
Returns a copy of the given string with the given string inserted at the specified offset.
Repeats the source string until the given number of times is reached.
Returns a copy of the string s with all characters in reverse order.
Find the longest common prefix between two strings.
Find the common prefix of all strings in the array of strings.
Shorten a string to a given length, adding a suffix to the end of the string
Converts the given string to upper case, using the given locale.
Remove the quotes from the beginning and end of the string.
Convert a byte array into a hexadecimal string.
Convert a string to a byte array.
Detect the quote char from the given string.
Visit an enum.
Visit an annotation.
Register a new EntityDescriptor for the given entity type.The new EntityDescriptor will be returned
Register a new entity with the repository.
Remove the entity descriptor for the given type.
Create a new instance of the specified type.
Sets the target interface to be used by the proxetta implementation.
Inject target into wrapper.
Looks for the annotated properties for the given type.
Detects a database and configures it with the given DBOOM configuration.
Closes the output stream, and closes the underlying output stream if one is available.
Writes a single byte to the buffer.
Invalidates the session if the requested session ID is found.
Get the name of the message.
Returns the contents of this array as a byte array.The size of the array will be
Writes the contents of this object to the given file.
Writes the contents of this message to the given output stream.
Appends an argument to the end of the argument description.
Prepend the argument type to the end of the description.
Change the return type of a method's return type, based on the method's return type
Strips white space characters from the given text.The text will be wrapped in a new
Registers a new type converter for the given type.
Lookup a type converter for the given type.
Returns a list of nodes matching the specified query.
Returns a list of nodes that match at least one of the specified CSS selectors.
Selects the given selectors from the root node and adds the selected nodes to the results.
Selects the first node matching the given query and returns null if no nodes were selected.
Traverses the list of descendants of the current node and adds them to the result list.
Walks the tree rooted at the given root node, applying the given CSS selector to
Selects the selector and adds the result to the result list.
Unpacks a string of characters into a map of the correct number of times.
refills the internal buffer, if it's empty, returns true if the buffer is
Get a page of data from the database.
Remove the select statement from the given SQL string.
Removes the from-to-from clause from the given SQL statement.The from-to
Remove the order by clause from the end of the SQL statement.
Returns the given HTML-encoded version of the given HTML-encoded version of the given HTML
Detect the name of the entity in the input string.
Build the order-by-clause for the given column and order-by-direction.
Build the SQL statement for a single page of results from a SELECT statement.
Resolve the columns and properties for the given type.
Returns the ColumnDescriptor for the column with the given column name, or null if none.
Returns the ColumnDescriptor for the given property name, or null if there is no ColumnDescriptor
Returns the property name for the given column name, or null if there is no such column
Returns the column name for the given property name, or null if the property name is not
Returns the value of the id property of the specified object, or null if not found.
Sets the value of the id property of the given object to the given value.
Returns the key value for the specified object.
Add a string to the end of the array.
Set the index of the string array.
Expands the capacity of the current array to the nearest multiple of the current array size.
Calculates the length of the array.
Create the message to mix the target bean definition with the reference bean definition.
Create a proxy instance for the given bean definition in the given petite container.
Initializes the list of files in the directory and populates the map with the file's last modification
This method checks if the given file is a file and if so, returns true if the
Use a file to watch for changes to a file on the file system.
Starts the timer and waits for the given interval for the watch to start.
Notify the listeners of a change in the directory.
Adds an enumeration to the list of enumerations.
Returns the number of bytes required to store the fields.
Puts the field information into the given byte vector.
Creates a new target instance with the specified value in the specified scope and scope data.
Writes the value of the property to the target object of the given injection point.
Decorates the given page content with the given decoraContent and writes the result to the
Parses the content of a page and extracts the page region information.
Writes the content of the decorated page to the writer.
Write the region of the specified decora tag to the specified output writer.
Starts the server.
Runs the given process and waits for it to complete and returns the process result.
Get the store for the specified session.
Create an output stream for this response.
Initializes the template with the given template data.If the template has a hint, the
Appends the column name to the query.
Adds a new rule to the list of rules, if the rule is already in the list
Applies the rule to the given value and returns true if the rule returns true.
Check if the value should be included in the list of includes.
Checks if the value should be included in the list of excluded rules.If the number of
Get the pseudo-class name of the class.
Add all elements in the given collection to the list of elements in this collection.
Searches for the insertion point of the specified object in the specified range, starting from the
Bind the action configuration for the specified annotation type and the specified action config class.
Creates and registers a new ActionConfig instance for the given action config class.
Looks up the action configuration for the given action type or annotation type.
Executes the given action config consumer with the given action config type.The action config consumer will
Sets up the system mail properties that will be used to encode and decode the mail file.
Validates that the given value is within the validation context of this constraint.
Finds the last table node in the subtree that is a descendant of the given node.
Fixes all the elements in the Foster.
Registers session beans for the given HTTP session.
Gets the map of session beans for the given session, or null if no session beans are
Initializes the proxy with the given name, supername, suffix, and reqProxyClassName.
Adds an init method to the list of init methods that will be invoked when the advice is
This method is called at the end of the processing of the bundle.It registers the bundle
Adds a new entry to the section with the given key and value to the value builder.
Extract the profile and add the profile to the map if it does not already exist.
Adds a single key-value pair to the cache.
Converts a typedesc string to a class name.
Convert a type description to a Typeref type name.
Returns the typeref string for the given type.
Add all consumers to the consumer list.
Create a new collection of the given length.
Convert the given value to a collection of single element objects.
Converts a value to a collection of objects.
Converts a collection of objects to a collection of objects.
Adds a line number to the list of line numbers for this instance.
Makes the given visitor visit this label and all of its other line numbers.
Puts the instruction at the given bytecode offset into the given byte vector.
Adds a forward reference for the given instruction at the current position.
Marks the given subroutine as a child of the current subroutine.
Compares two strings for equality, and returns an array with the number of characters that are equal
Returns the accented version of the given character, or the given character if it is not
Puts a single byte value into this vector.
Add a single byte to the end of the array.The array will be expanded if necessary
Puts a single short value into the array.
Put a 16-bit integer value into the byte array.
Puts the specified 128-bit integer into the specified array of bytes in the current array.
Put an int value into the byte array.
Puts two 16-bit values into a big-endian byte vector.
Puts a 64-bit long into the byte vector.
Puts a byte array into the buffer at the specified offset and length.
Enlarges the size of the buffer to be at least the given size.
Authenticates the user via the http session.
Authenticate user via token.
Authenticates the user using basic auth.
Locates a default message for the given key in the given locale.
Gets the resource bundle for the given locale and class loader.
Returns the element at the specified index in the array.
Sets the id value for the given entity in the given entity descriptor.
Save the given entity to the database.
Update the given entity in the data store.
Update the specified property of the specified entity with the specified new value.
Updates the property of the specified entity with the specified name.
Returns an instance of the given entity type with the given ID.
Finds a single entity by its property name and value.
Find one instance of the model class with the specified criteria.
Deletes the entity with the given id from the database.
Delete the entity with the given id from the data store.
Returns the number of entities for the given entity type.
Increases an entity's property value by the given delta.
Decreases the property of the given entity by the given delta.
Returns the list of entities that are related to the source object.
Returns a list of all entities in the database.
Removes all of the entries from the cache.
Returns a set of entries in this map.The returned set is a copy of the map
Puts a new value for the specified key in this map.
Returns the value associated with the given key, or null if the key does not exist.
Gets the current stack trace.
Get the stack trace of the given exception.
Get the stack trace for the given exception.
Gets the exception chain for the given throwable.
Returns the stack trace of the given exception as a string.
Returns a string representation of the given exception chain, including the stack trace of the exception.
Builds an error message from the given message and cause.If the given message is null,
Unwraps the wrapped throwable.If the wrapped throwable is an invocation target exception, the
Register a class scanner as an action or madvoc-component-action-consumer.
Accept madvoc component class and add it to the madvoc container.
Get the system class loader.
Gets the resource from the classpath and returns it as an InputStream.Returns null if the resource
Gets a resource as a stream.
Gets the class as stream.
Returns the input stream for the class with the given name in the given class loader.
Add a new route chunk to the list of children.
Finds or creates a child chunk for the given value, or creates a new one if
Parse the parameters from the request, and add them to the request parameters.
Convert the value to a collection of the specified destination type and component type.
Invokes a setter on the given value, using the mapper function for the given setter.
Sets the value of an array component at the given index in the given array.
Creates a new instance of the specified bean property.
Extracts the type of a property's getter.
Removes the authentication session from the request, then removes the cookie, and removes the session.
Start the authentication session and store it in the session in the HTTP servlet request.
Returns the given local date as a Date object.
Converts a local date time to a gregorian calendar.
Define a proxy for the given class.
Add a check to the list of checks associated with the given name.
Resolves a validation context for the given class.
Adds all property checks for the given class to the checker list.
Collect annotation checks for a property.
Collect annotation checks for the given target type and target name from the given annotations.
Copy the default properties from the annotation to the destCheck.
Encode the given string as a URI component.
Encodes the given string using the given encoding and returns the encoded string.
Encodes the given scheme with the given encoding.The scheme is encoded using the scheme component.
Encodes the given host component as a URI host component.
Encodes a URI port component into a URI port component.
Encodes the path component of the given URI path with the given encoding.
Encodes the given string as a URI query component.
Encodes the given query parameter using the given character encoding.
Encodes the given URI fragment into a Base64-encoded version of the given URI fragment.
Returns a hash map of property names and the corresponding PropertyDescriptors.The keys are the property
Returns an array of all PropertyDescriptors.The returned array is sorted by property name.
Returns an array of the cookies in the response.
Unzips the response body.
Closes the HTTP connection associated with the current request.
Checks if the given scope should be included in the list of scopes to be included in the
Encrypts the given byte array using the AES-256 algorithm and returns the result as a
This method decrypts the given content.
Convert a Map to a bean.
Given a list of objects, convert each object to the correct type and add it to the
Sets the value of the specified property on the specified object with the specified property descriptor.
Generate a generified version of the given map with the given key and value types.
Returns a negative integer, zero, or a negative integer, or a positive integer,
Set a default header for the request.
Sends a request to the server, and returns the response, or throws an exception.
Sends the given request and returns the response.If the keep-alive flag is set,
Add the default headers to the HTTP request.
Reads the cookies from the HTTP response and adds them to the cookies list.
Adds the cookies to the given request.
Send an e-mail and return the id of the e-mail.
Set the subject of the message.
Sets the date of the sent date of the given mime message.
Sets the headers of the given message based on the email-with-data headers.
Sets the from, replyTo, and recipients from the given email.
Sets the recipients for the email.
Adds the email body data to the given mime-message.
Sets the content of the given part to the given email with the given data.
Creates the MIME body part for the given attachment.
Returns the content-type from the data-header.
Saves the specified result set in the list of result sets.
Close all result sets.
Closes the query, returning the SQL exception if the query was closed, otherwise returns null.
Closes the query and removes the query from the session.This method is not thread-safe
Set the number of rows to return in the result set.
Sets the maximum number of rows.
Execute the update query.
Executes the query and returns the count of affected rows.
Get the generated columns from the statement, or null if there is no generated columns.
Returns the query string for this statement, or null if there is no query string.
Creates a proxy instance for the given target object, using the given aspect class.
Creates a new Collection from the elements in the iterator.
Returns a stream that contains the elements from the given iterator.
Compares two objects using the registered Comparators.
Sets the default wiring mode.
Prints a log message to the System.out if the logging is enabled, or if the
Get the name of the caller class.
Shorten the given class name by removing the dot notation from the end of the class name
Exclude the types that should be excluded from generating the JSON.
Serialize the given object to the given appendable.
Serialize an object to a string representation.
Creates a copy of the given object using the serialization of the object.This is useful for
Writes the given object to the given file.
Reads an object from a file.
Convert an object to a byte array.
This method converts a byte array to an object.
Resolve the names of the mapped types for the given entity types.
Creates the table names for the given types.
Reads a column value from the result set and converts it to the specified destination type.
Sets the cache of entities for the given result.
Resolves the provider for the given type and name.
Convert the table name to the entity name and then convert it to the table name.
Check if the connection is valid.If the connection is not valid, return false.
Renders the specified target view using the configured request dispatcher, and writes the result to the specified
Locates the target view for the given action request and path.
Returns the writer to be used for outputting the response.If the response is already written
Returns the output stream of the response.
Writes the content to the response.
Sets the content type.
Print the given string to the output stream.
Authenticates the user and starts a new user session.
Convert the authentication token to a Json object and return it as a JSON object.
Logs into the user using HTTP Basic Authentication.
Converts a URL to a File object representing a file in a container.
Creates a directory if it does not already exist.If the directory does not exist, it
Creates a directory if it does not already exist.
Copy the given file to the destination file. If the destination file is a directory, it
Copies the given directory to the given destination directory.If the destination directory does not exist,
Moves the given source file to the given destination directory.
Moves a directory from the source file to the destination file.
Deletes all files in the given directory and all of its sub-directories.
Read a UTF-8 character array from the specified file.
Read the contents of a file as a character array.
Writes the given array of characters to the given file.
Write the given string to the given destination file with the given encoding.
Appends the given string to the given file, without writing a BOM to the file.
Read a number of bytes from a file.
Write the contents of the given byte array to the given file.
Appends the given array of bytes to the end of the file.
Copy the given source file to the given destination file.If the destination file is a directory
Deletes the given file or directory if it is a file or directory.
Creates a new temporary directory with the given prefix and suffix and returns the newly created file.
Returns true if the given file is a binary file.
Checks if the srcDir exists and is a directory and if so, throws an exception if
Checks if the source file exists and is the same as the destination file.
Prints the usage for the given command name.
Resolves the method for the given action class and method name for the given action class.
Registers the given action method with the given action class and action method name.
Registers an alias for a path in this Madvoc instance.
Advances to the next iteration.
Create a char array sequence from the given char array starting at the given offset and length.
Execute the method on the proxy target object.
Returns true if all characters in the input array match the uppercase character in the target array.
Create a char sequence from the specified range of characters.
Returns an array of URLs for the specified class.The first array contains the URL of the
Set the bcc addresses for the receiver.
Register a new serializer for the given class.
Looks up a serializer for the given type.
Parses the given input stream into the multipart upload object.The input stream will be closed after
Returns the value of the parameter with the given name.Returns null if the parameter is not
Returns the values of the parameter with the given name from the request.
Get a file parameter from the request, or null if it doesn't exist.
Returns an array of uploaded files with the specified name from the request.
Initialize the filter with the given filter configuration.This method should be called in the constructor.
Parse the given SQL string and append it to the given SQL builder.
Find the end of a macro in the given template.
Counts the number of escape characters in the given template.
Build a query string from a multi map of query parameters.
Parses the given query string and returns a map of the query parameters and values.
Prepare the header parameter name for the given header name.
Extracts the media type from the given content type.
Renders the given node as a HTML string using the given appendable.
Generates a string representation of the given node with all its child nodes inserted into the appendable.
Configure Madvoc with the given servlet context.
Reset the state of this object to its initial state.This method resets the state of this
Sets whether the parser should be lazy or not based on the current state of the parser.
Replace the given class with the mapped type for the class path.
Parse the given string as a list of components of the given type.
Parses the given string as a map with the given key and value types.
Resolve the value from the supplier if it is a supplier, otherwise return the original value.
Skips the next object in the input.
Parse a string from the input.
Parse the content of the string and return it as a String.
Parse a unicode char from the input array.
Parse the content of an unquoted string.
Parses a number from the input.
This method parses the content of an array and returns the content of the array.
Creates an empty constructor with an initial value of 0.
Creates a simple method wrapper for the given method signature.
Resolve the raw type name for the given type name.
Resolves a reference from the given property descriptor and reference name.If the reference name is null
Resolves a list of bean references from a method or constructor's parameter types.The references are
Read all references from an annotation on a method or a constructor.
Build a list of default references for the given method or ctor.
Build a default reference for the given property descriptor.
Removes duplicate names from the given array of bean references.
Converts an array of string references to an array of BeanReferences.
Converts the value of an annotation value into an array of BeanReferences.
Run JoddJoy and run the given consumer with the joddjoy runtime.
Finds the method with the given name in the given class.Returns null if the method is
Finds and returns the first constructor of the given class that accepts the given parameter types.
Resolve all interfaces for the given type.
Compares two arrays to see if they have the same number of parameters.
Force the given object to be accessible.If the security manager is not available, it will
Creates a new instance of the given class with the given parameters.
Get the superclasses of the given class.
Gets the child class of the given object.
Returns the jar file of the given class, or null if the class does not exist.
Synchronously sleeps for the specified amount of time.If the thread is interrupted, the
Sleeps for the current thread.
Waits for the given object to be waited for an exception to be thrown.
Creates a thread factory that creates a daemon daemon thread with the given name and priority.
Returns the value of the wrapped supplier, or null if the supplier is not initialized yet.
Visits a parameter of the current method invocation.
Visits the given annotation, if any, and returns the visitor, or null if none.
Visits a field instruction on the current method signature.
Visit a method instruction.
Visits an invoke-dynamic instruction and calls the correspondingvisitMethod on the registered visitor if one
Visits a jump instruction.
Visit a multi-A descriptor and all of its dimensions.
Visits a try catch block.
Writes properties to the given writer, and writes the profile properties to the given writer.
Copy the data from the input stream to the output stream, and update the size of the
Moves to the next element in the list and returns it.
Moves to the next item in the list.
Returns a new array composed of the same elements as the given arrays.The first argument is
Joins the given arrays together into a new array of the given component type.
Resizes the given buffer to a new size.
Appends a new element to the end of the buffer.
Removes the specified component from the specified byte array starting at the specified offset and length.
Gets the index of the first occurrence of the specified value in the array, or -1
Returns the index of the first value in the array or -1 if the value is not
Returns the index of the first sub-element in the array, or -1 if the
This method is used to enable the formatting of the HTML.This method will not work if
Parses the content of the document and returns a Document object that contains the parsed content.
Parse the XML using the provided LaxartoParser and return the resulting Document.
Computes the maximum stack size and the current stack location.The maximum stack size is the maximum
Marks the end of the current basic block as the first successor of the current basic block.
Collect the attribute prototypes into the given attribute prototypes.
Injects the context for the given target object.
Registers a pseudo class with the given class loader.
Looks up a pseudo-class by it's name.
Invokes the given action request in a thread safe manner.This method is not thread-safe
Returns a list of property names for the given bean type.
Visit all properties in the source object, using the rules defined in this class.
Returns true if the property name matches the rule, false otherwise.
Resolve the method injection points for the given class type.
Reads the filter configuration parameters into the target object.
Send a bundle file to the servlet response.
Lookup the bundle file for the given bundle id.
Looks for a gzip file in the zip archive. If the file does not exist, it
Registers a new bundle in the bundle manager.If the bundle is already registered, the bundle
Creates the digest for the given string.
Create a bundle.
Reset the bundle to the beginning of the stapler folder.This method is not thread-
Fixes the relative URLs in the given CSS source file.
Update the value of the column with the given columnRef in the given entity.
Creates the table ref name for the given entity.
Gets the db session for the current transaction.If the transaction doesn't exist, a
Convert the given value to a single element array.
Parses the given signature and returns a map with the names of the generic types in the signature
Resolves a set of injection points for the given class.
Return true if the given property type matches at least one of the excluded property types.
Open the database connection for the query.
Open a transaction. If the transaction is not active, a new connection will be created.
Close the transaction. If the transaction is active, the transaction will be closed immediately.
Commits the current transaction and closes the transaction if the transaction is active.
Rolls back the current transaction.
Creates a new Properties instance configured with the properties from the specified file.
Creates a new Properties object initialized with the properties defined in the given string.
Load properties from a string.
Returns a new Properties object containing only those properties that start with the given prefix.
Creates a new Properties instance and loads it from the classpath.
Get a property from the given map, or a default value if the property does not exist
Resolve all variables in a properties object.
Resolves the value of the given property in the given map, or null if the property is
Resolves the scope pattern for the given type and method name.
Returns the transaction mode for the given method name and method argument types.
Registers the given annotations with this transaction.
Read the transaction annotation for the given method.
Returns true if the given node should be included in the tree, false otherwise.
Returns true if the given node is a child of the current node, false otherwise.
Returns true if the given node should be included in the results.
Unescapes the given value.
Build a list of JRE packages for the given java version number.
Clones the specified node to the specified destination node.
Detaches this node from its parent node.
Add multiple child nodes to this node.
Inserts the given node at the specified index in this node's child list.
Inserts the given node as a child of this node's parent.
Inserts new childs before the specified child node.
Inserts a new child node after the given reference node.
Insert a new child node into the parent node of this node.
Removes all child nodes from this node and all child elements from the parent node.
Returns the first child node with the given name.
Returns an array of child nodes for which the given predicate returns true.
Check if there are any child nodes in the tree.
Initialize the array of child element nodes.
Initializes the index of the sibling element names in the parent node's child nodes.
Initialize the list of child nodes for this node and the given new node.
Recursively changes the owner document of all children of the given node and all child nodes.
Returns the previous sibling node name.
Returns the text content of this node.
Gets the inner HTML for this tag.
Visits all the children of this node.
Returns the CSS path of this node and all of its descendants.
Called when a tag is found in a decora.xml file.
This method is called for each start tag of an ID attribute.This method is used to
Define the decora tag and add it to the list of decora tags.
Add a proxy aspect to the proxetta.
Add a root package to the list of packages to look for.
Adds the root package of the given action class to the given mapping.
Given an action path, returns the root package for that action path, or null if no
Resolves the validation message for the given violation.
Removes duplicate names from the list of names and returns a new BeanReferences instance.
Add a new props file name pattern to the list of names to look for.
Calls the given consumer for each target in this group.
Iterates over all targets in the specified scope, calling the given consumer for each target and
For each target in the given scope, invoke the given consumer for each out injection point in
Extracts the parameter values from the targets.
Creates the list of targets for the given action and method parameters.
Creates an action method argument for the given type.
This method is called when a new session has been created.
Removes the session from the session map and notifies the listeners.
Adds a value to the list.If the value is not a JSON object, it will
Adds all of the elements in the given array to the end of the array.
Remove the object at the specified position in this list.
Resolves the target for the given result value and returns the result path.
Called if the target is not found in the target folder.If the target is not found
Convert the given value to a string.If the value is not an array, return the
Register a new action filter for this router.This action filter will be applied to all registered
Returns the name of the pseudo function.
Resolve all property injection points for the given type.
Creates a socks4 proxy socket and connects it to the specified host and port.
Returns the number of attributes in this attribute and all of it's child attributes.
Returns a set of all the action results in this result set.
Checks if one char is equal to the other.
Returns the index of the first occurrence of match in the source string, or -1 if
Returns the index of the first occurrence of the specified match, or -1 if the
Adds the specified command line arguments to the command line.
Sets the value of an environment variable in the command line.
Runs the command line, and returns the result of the command.
Invokes a listener of the given type.
Copies the information from the given frame into this one.
Returns the abstract type of the given symbol from the descriptor at the given offset.
Sets the input frame for the given symbol table, using the given symbol table and the given
Get the index of a local variable in the current output block.
Sets the local index for the given abstract type and the index of the abstract type.
Pushes the given abstract type onto the stack.
Pushes the abstract type of the given descriptor.
Pop a number of elements from the top of the stack.
Pops an argument from the end of the descriptor, or the end of the descriptor if
Adds a new initialized type to the list of initialized types.
Get the initialized type for a given abstract type.If the abstract type is uninitialized,
Puts the given abstract type into the given byte vector.
Returns the number of items in the cache that are expired.
Visit a module by its name, access and version.Returns null if the module is not
Visits an outer class.
Visit the given annotation, and return the AnnotationVisitor that was found, or null if no
Returns the current thread session, creating a new one if it doesn't already exist.
Closes the session associated with the current thread.
Creates an array of all the actions that are executed in the given action runtime.
Invoke the action method.
Reads the request body from the request body of the HTTP servlet request.
Calculates the index of the first item in a page of the given total.
Calculates the index of the first item in the specified page in the specified total.
Checks if the given value is in the range [a,b,a,b).
Convert a char array to a byte array.
Finds the index of the first match in the source array, or -1 if no match
Resolve the name of the node, based on the tag case and the node raw name.
Resolve the attribute name for the given node and attribute.
Load properties from file.
Load properties from a file.
Load the properties from the given input stream.
Load properties from a map.
Load properties from a map.
Load properties from classpath.
Returns the value for the given key or the default value if the key does not exist.
Sets a value for the specified key in the specified profile.If the profile is null,
Extracts the profile data into the target map and adds them to the target map.
Extracts properties from the properties file and stores them in the target map.
Extracts all sub-properties from the current profile and adds them to the target map.
Returns a map of the active profiles and their values in the map with the given prefix.
Adds an inner map to the configuration.
Resolves the active profiles.
Returns the names of all profiles.
Returns the names of profiles that match the propKeyName wildcard, or an empty array if
Add a PropertyInjectionPoint to the list of PropertyInjectedPropertyInjectedProperties.
Adds a new SetInjectionPoint to the list of injection points to be added to the injection
Adds a method injection point to the list of method injection points.
Add the init method points to the list of init methods to be called.
Adds a list of destroy methods to the set of destroy methods for the component.
Resolve the proxy to the target class.If the proxy has a superclass or a wrapper,
Injects the given target into the given wrapper object.
Get the target wrapper's class type.
Returns the FieldDescriptor for the given field name.
Returns the type of this field, or null if this field is not a field.
Resolves the key type of the field.
Returns the type of the component for which this field is declared.
Creates a new JsonResult instance with the given object serialized as a JSON string.
Convert an Exception to a JSON error response.
Resolve the http method from the method name.
Matches the given string with the given pattern starting at position sndx, starting at position
Resolves a loading rule based on the given class name and the given parent strategy and the given
Loads a class from the classpath.
Returns the URL of the resource with the given resource name.
Wait until the queue is empty or the thread is interrupted.If the queue is empty,
Returns the annotation type of the first annotation in the given array, or null if none.
Builds an InjectionPoint from an annotation value and a property name and a scope.
This method is called from the visitor to look for the class metadata for the class metadata.
Returns a list of all URLs for the given class in the given class loader.
Sets the bean to be used.
Updates the bean of this bean with the given bean.If the bean is a supplier,
Loads the property descriptor.
Initializes the connection provider and configures the database to use the OOM connection configuration.
Adds the given iterator to the list of iterators.
Prints the logo of the jodd module.
Stop the Joy server. This method stops the Joy DB and Petite.
Create a socket for the given host, port and connection timeout.
Create a SSL socket for the given host and port.The socket will be used as a
Returns the default SSL socket factory.
Gets the socket factory for the given proxy and the given connection timeout.
Generates a random string from the given array of characters.
Generate a random string.
Randomly generates a string of characters from the given ranges.
Creates a new instance of the given target type.
Inject the value of the given property descriptor into the given target object.
Converts the given value to the given target type.
Visit all providers for the given service.
Creates a new instance of the default type cache.
Adds a new value to the map for the specified type.If the value has already been
Returns an array of all MethodDescriptors sorted by method name.
Resolve an IP address from a hostname.
Converts a string representation of an IP address into an integer.
Checks if the given string is a valid againt ip address.
Resolves the host name of the given IP address.
Downloads the bytes from the given URL.
Downloads a string from the given URL.
Downloads a file from the given URL.
Creates a socket connection to the specified host and port and returns the socket object.
Connects to the specified host on the specified port with the specified connection timeout.
Returns the index of the first primitive type in the given class name, or -1 if
Load a class from the given class loader.
Loads an array class by its component type name.
This method will be called when the application shuts down.
Returns a binary search operation that iterates over the elements in the given array and returns the index
Create a new binary search instance for the elements in the given array using the given comparator.
Exclude all rules that match the given list of exclude patterns.
Includes one or more includes.
Includes all properties of the given class as a property of the current bean.
Mark the beginning of the tag at the specified index as the first tag of this tag.
Registers a new component with the MADC bean.
Resolve the DB-SQL type of the given column descriptor.
Preprocess the given SQL string to ensure that it can be used in a SQL statement.
Creates a new ResultSetMapper for the given result set.
Find the generated key for the given type.
Populates the generated keys for the given entity, if any, and the generated columns for the
Creates a wrapper bean.
Sets the bean for the given bean name.
Sets the map of named parameters for the current query using the given map of parameters.
Set the objects to be included in the search results.
Inserts this chunk into the given previous chunk, and sets it as the next chunk of this
Lookup the DBEntityDescriptor for the given class.
Returns the table descriptor for the given column reference, or throws an exception if not found.
Returns the table name for the given table ref, or the table name for the query.
Resolves the class of the given object.
Appends an empty string if there is no space at the end of the string.
Get the file parameter names for this request, or null if the request is null.
Includes the specified page in the given request and response.
Returns the servlet path and the query string from the request.
Returns the URI of the request.
Resolves the names of the parameters of the given action action method.
Starts the Petite application.
Shuts down the Petite container.
Adds a subject term to the filter.
Adds a message id to the list of message ids to be included in the email.
Add a from address to the email filter.
Add a recipient string to the list of recipients that this email belongs to.
Add a CC recipient to the list of recipients.
Add a BCC address to the list of bcc recipients.
Add a flag term to the list of flags to be included in the search results.
Returns a new EmailFilter instance with the specified flag and value filtered.
Add a date filter to the list of email received.
Add a sent date filter to the filter.
Add a size filter to the list of filters.
Apply the given EmailFilters to the list of email filters using the AND operator.
Add a OR filter to the list of filters to be included in the resulting EmailFilter.
Create a new EmailFilter instance and add it to the existing filter.
Concatenates the given search term with the current search term.
Encodes the given byte array into a base 32 string.
Determines if the gzip is eligible for the given request.
Performs validation on the given target object and returns a list of validation violations.
Perform validation on the given object and returns a list of all of the validation violations.
Adds the specified profile to the list of enabled profiles.
Sets the list of enabled profiles to be used by the profile manager.
Returns true if one of the profiles in the list matches the profiles in the list.
Parse the request body into an object of the given type.
Returns the milliseconds since January 1st January 2st January 1970.
Add the given julian date to this one and return the resulting julian date.
Subtracts the given JulianDate from this date and returns the result.
Sets the value of the integer and the fraction of the value.
Emits a comment at the given position.If the comments are enabled, the comment will
Generate an error message for the current node.
Generate a hash from the given password.
Generates a PBKDF2 key from a password and returns the result as a byte array.
Converts a hex string to a byte array.
Resolve the provider definitions for the given type and name.
Set the name of the email attachment.
Sets the content id from the attachment name if the attachment name is not already set.
Resolves the content type for the given content-type.
Parses the type of the given signature, and returns the index of the resulting type.
Computes and returns the number of attributes that can be added to the symbol table.
Puts the attributes into the given byte vector.The attributes are stored in the given byte vector
Decode the given string using the given encoding.
Decode a query string into a new string using the given encoding and return the decoded string.
Start the database. This method will start the petite container.
Check the connection provider for errors and log them to the log.
Visits a method and returns the MethodVisitor for the method.
Visit the end of the visitor.
Create a method signature visitor for the given access, signature, class, and exception types.
Convert an array of objects into a comma separated string.
Convert a line of text into an array of strings.
Resolve the injection point for the given class.
Creates the class reader for the given proxy advice.
Gets the cached advice class reader for the given advice.
This method encrypts the given string using AES-256, AES-128.
Decrypts the given string.
Returns the logger with the given name.If no logger with the given name exists,
Sets the name of the component.
Create an action request.
Create a wrapper for the given class.
Destroys a bean by removing it from the list of destroyable beans.
Call destroy methods on all registered destroyable beans.
Gets the list of received emails from the queue.
Launches a clustered service container with the given properties file.The properties file will be
Runs the reporting function until it is stopped or the thread is interrupted.This method is only
Prints an error message to the standard output stream.
prints the rate of messages and bytes in a human-readable manner.
Maps an existing file to a read-only version.
Closes the archive and removes the destination from the replay if it is in a closed state.
This method is used to do the actual work of the replay.It will return the number
Returns the current position in the log file, or -1 if the log file is closed
Offers a message to the term and returns the position of the next message.
Append padding to the term, if the current position is greater than or equal to the given
Closes the Aeron client and releases resources held by the Aeron client.
Polls for an error response from the ControlResponsePoller and returns the error message.
Stop the replay with the given session id.
Sends an event to the user that an image has been available to the server.
Sends an event for an image that is not available in the current user's session.
Returns a new StatusIndicatorReader that reads the status of a channel.
Creates a StatusIndicatorReader that reads the status of the given channel in the given counters.
Limits the number of elements in the buffer to the specified number of elements.
Appends the contents of the specified buffer to the end of this buffer.
Polls for the next fragment from the fragment assembler queue and returns the number of frames
Map the given Aeron directory to a report file.This method maps the report file
Creates a snapshot of the current state of the state of this stream.
Creates a default header buffer with the given session id, stream id, and term id.
Puts the Flyweight key into the buffer at the given offset and key length.
Fills a label buffer with the data from the given label buffer.
Connects to the Aeron Server and returns true if the connection is successfully established.
Try to connect to the Aeron server.
Send a CloseSession request to the remote endpoint.
Sends a start recording request to the remote node and returns true if the record was started.
Stop recording a given stream.
Replays a message to a replayed stream.
Marks a replay request for the given replay session id and returns true if the request was
Sends a ListRecordings request to the controller.
Sends a ListRecordingsForUri request to the controller and returns true if the request
Sends a ListRecordRequest to the remote node and returns true if the list has been successfully
Extend a recording.
Gets the recording position.
Gets the stop position for the given recording id and control session id.
Send a list recording subscriptions request to the server.
Returns true if the tag of the given udp channel matches the tag of the given udp channel
Returns the destination address for the given channel URI.
Returns the description of the network interface.
Add a new destination to the list of image connections for the given transport.
Inserts a new packet into the term buffers.
Finds the control toggle for the given counters.
Puts a new value into the params map and returns the old value.If the value already
Returns the tag associated with this channel, or null if no tag is associated with this channel
Gets the tag of the entity that is associated with this tag.
Adds the session id to the given channel URI.
Returns the tag of the given parameter value.If the parameter value is not a tag,
Append a padding frame to the term buffer, and return the offset of the new frame.
Updates the limit of the buffer based on the position of the current sender's spy position.
Allocates an unsafe buffer position for the given counters manager.
Returns the label name for the given type id.
Scan for the available bytes in the given buffer starting at the given offset.
Clears the URI builder's state.
This method checks if the parameters are valid.This method checks if the parameters are valid.
Set the prefix to use for the URI string builder.
Set the media to be used for this URI string builder.
Set the control mode to use when constructing the URI.
Set the term length.
Set the offset of the term to be appended to the end of the string.
Set the lingering time.
Closes the transport. This method will close the datagram channel, and close the datagram
Returns true if the frame is valid, false if it is not.
Receives a datagram from the remote peer and returns the address in the given buffer.
This method is called when a new term has been removed from the retransmit queue.
Process the retransmit timeouts for the given time window.
Returns a human readable status string for the given status.
Allocates a new counter with the specified name, typeId, and channel number.
Resets the internal state of this buffer to a new buffer with the given offset and length.
Validate this buffer to ensure it is consistent with the size of the buffer.
Validates all vectors and returns the sum of the lengths of the vectors, or throws an exception
Computes the length of the window for the given term buffer length and default term window length.
Validate that the socket buffer lengths are valid, and that the socket buffer sizes are valid.
Validates that the given page size is a valid page size.
Validates that the given range of session ids are within the specified range.
Validates that the publication unblock timeout is less than or equal to the client liveness timeout
Adds an error code to the buffer.
Resets the state of the ballot to the initial state.
Encode the given array of cluster members as a human-readable string.
Adds the publication information for all members in the cluster to the aeron.
Closes the publications of the members of the cluster members.
Check if there is an active quorum for the given cluster members.
Finds the highest ranked position for each member in the given array, and returns it.
Resets the log position of all cluster members to the given log position.
Checks if any of the members in the given array have voters reached the given position
Checks if a member has a vote on the given candidate term id and the number of members
Checks if a member has a majority vote.
Determine the cluster member for the given member id and member endpoints.If the member doesn't
Validates that the given member's endpoints are the same as the given member's endpoints.
Checks if two cluster members have the same endpoints.
Returns true if the given cluster member is an unanimous candidate in the given cluster
Checks if the candidate is within the quorum threshold of the cluster members.
Returns true if the cluster member has the same endpoints as the given one, false otherwise.
Returns the index of the member in the given array, or -1 if the given member
Removes the member with the given id from the given array of old members.
Returns the id of the highest cluster member in the given array of cluster members.
Maps an existing CNC file to the Aeron Aeron CNV file.
Checks if a CNC driver is active for the given directory and returns true if it is
Returns true if the driver is active, or false if the driver is not active.
Returns true if the driver is active, false if it is not.
Request the driver to terminate the driver.
Reads the length of a frame from the buffer and returns it as an int.
Puts the frame length in the buffer at the specified offset in the specified byte order.
Writes a frame type to the given buffer starting at the given term offset.
Writes the frame flags into the given buffer at the given offset.
Writes the given term offset to the given buffer, in little-endian order.
Writes the given term id to the given buffer at the given offset.
Returns the counter id for the given recording id, or -1 if not found.
Returns the counter id for the given session id, or -1 if there is no such
Returns the recording ID for the given counter id, or null if the record does not exist
Checks if the given recording is active for the given counter and counter id.
Adds a slice of the given byte array as application specific feedback data to this status message.
Reloads the state of this LuceneIndexFile by reading all entries from the file.
Returns the last term of the list of entries, or null if the list is empty.
Creates a new recovery plan from the given archive and the given number of services.
Creates a recovery plan from a list of snapshots.
Appends a term to the log.
Adds a new snapshot entry to the log.
Commits a log position to a specific leadership term.
Tombstone the entry with the given leadership term ID and entry index.
Closes the connection to the Aeron server and releases all resources associated with it.
Offer vectors to the publication queue, if necessary, and return the number of vectors offered
Unblock the given term buffers, starting at the given block position, and ending at the
Returns the current channel.
Adds a Flyweight channel to the message.
Checks that the term length is a valid value.
Checks that the given page size is a valid page size.
Updates the current term count in the metadata buffer with the new term count.
Computes and returns the position of the term at the given position bits, starting at the given
Computes the log length based on the given term length and the file page size.
Store the default header of a log frame in the given metadata buffer.
Applies the default header to the metadata buffer and the term buffer.
Rotates the log to the specified term id and returns true if there was a change in
Initialise the tail of the given partition with the given term id.
Returns the index of the first term of the given raw tail.
Returns the raw tail of the metadata buffer in the same memory as the metadata buffer.
Updates the given metadata buffer's raw tail to the given expected value.
Puts a token into the driver's token buffer.
Allocates a new counter from the given AeronDirectBuffer with the given parameters.
Find the first counter id that is allocated in the counters reader, or -1 if
Returns true if the given counter has a replay.
Returns the recording id for the given counter id and service id, or throws an exception if
Convert a short flags value to an array of characters.
Add a channel to the flyweight message.
Offers a buffer to the cluster, returning the number of bytes offered.
Wraps the given buffer with the underlying buffer.This method is only used by the constructor.
Commits the current state of the frame to the buffer.This method assumes that the buffer is
Aborts the frame and writes the frame header to the buffer.
Main method that loads the properties file and launches the media driver and prints the status.
Closes all resources held by the context.
Computes and returns the current position of the frame.The position of the frame is the same
Allocate a new counter for the given Aeron service.
Returns the counter id for the given service id.
Allocates an atomic counter with the given name, type id, counters manager and registration id
Closes this CNC file and releases all resources associated with it.This method is not thread
Dispatch the descriptor to the given recording descriptor consumer.The consumer will be invoked when the descriptor
Adds a new slab to the list.If the capacity of the list is less than the
Sets the byte at the given index to the given value.
Adds the given statistics to the list of statistics to be included in the page.
Convert array type to parquet group type.
Convert a struct type to a group type.
Annotate the given message at the specified position in the given message.
End the previous bit-packed run.
Read one value from an input stream and write it to the given output stream.
Read a list of footers from the given configuration file and return it as a list of
Reads a parquet summary file and returns the list of footers.
Read parquet metadata from the given input file using the given metadata filter.
Reads the next row group from the current block.
Read the next row group in the current block, filtered by the column index filter.
Read a dictionary from the column chunk meta data.
Adds a new writer to the list of writers that will be able to write parquet records
Removes a writer from the list of writers.
Updates the total allocation of the memory pool, if the total allocation is less than the total
Registers a call back to be executed when a scale method is called.
Starts the state machine, and writes the beginning of the magic byte to the output stream.
Starts a new block with the specified number of records.This method must be called before any
Start a new column chunk.
Writes a single dictionary page to the stream.
This method writes a single page of data into the underlying output stream.
Ends the current block.
Copy the contents from the given input stream to the given output stream.
This method is called when the end of the file has been written.This method closes the
Merge parquet metadata from a list of files, and merge them into the global metadata.
Write the merged Parquet metadata file to the given output path.
Writes a metadata file with a list of footers to the given output path.
Merges the given file meta data into the given global meta data.
Reads the value of the field.If the value has not yet been read, this method
Returns true if the given schema has a null, false if it is a union.
Returns the first non-null object in the given list of objects, or null if all
Convert the given string to an object of the given schema.Returns null if the string is
Creates a thrift meta-data from the given extra meta-data.
Creates a thrift meta data from the given thrift class.
Returns a map of the extra meta data for this thrift class and descriptor.
Writes a null value to the given definition and repetition level.This method is only used for
Writes a single page of data to the parquet file.
Initializes this DeltaPacker from a page of data.This method is called by the constructor
This method allocates a buffer to hold the current value count in a mini-block.
This method checks that the expected thrift type matches the enum value at the given index.
Calculates the bit widths for the delta block buffer for the given number of mini blocks.
Throw an exception if the given exception is an instance of the specified exception class.
Get statistics based on the given column type.
Returns a builder for reading the given primitive type.
Merges the given statistics into the current statistics.
Gets the non-null schema from a schema.
Creates a new TaskAttemptContext for the given task attempt id.
Invokes the given method on the given object with the given arguments.
Prints out a string representation of the members of this class.
Merges the fields of a GroupType into a list of all the fields of a GroupType
Initializes the counter loader and loads the counters from the reporter.This method should be called only
Get the filter configured for this configuration.
Reads all footers from the Parquet file and returns the list of footers.
Generates a list of splits from a list of block-group-blocks.
Write a single record to the message writer.
Validates the mapping of the given descriptor against the parquet schema.
Serialize a descriptor for the given proto class.
Amend the missing fields from the root and return a list of those fields that should be
Checks if the given field is a set of elements in the given set.
Read the meta data of a file from an input stream.
Closes the record writer and releases resources held by the writer.
Sets the schema for the group write.
Adds the given primitive type to the set of descriptors for the given class and parquet type
Asserts that the given primitive type is valid for the given column.
Checks that the given value is an integer and throws an exception if it is not.
Convert an arrow schema to a parquet schema mapping.
Create a schema mapping from a Parquet schema.
Create a schema mapping from an arrow schema and a Parquet schema.
Writes the header of a page of a data page to the specified output stream.
Skips records in the current state until the filter matches the current state.
Writes the given object to the given configuration as a base64 encoded string.
Removes the value for the given key from the cache.
Puts a new value for the specified key in the cache.If the value for the key
Returns the current value for the given key, or null if the key does not exist.
Write the value of the given avro schema to the given avro schema.
Set the glob pattern with the given string.The pattern will be matched if any match.
Writes the content to a file.If the filename is not specified, the content will be
Open an input stream for the specified file.
Returns a filter that returns true if the column at the given path matches the predicate.
Convert the given Avro StructType to a Thrift Thrift MessageType.This method will return the
Creates a list wrapper for the given nested type with the given alias and nested type.
Returns a list type with the specified element name and element type.
Returns the key-value metadata for the merged key-value pairs.If the merged key
Get a new ParquetInputSplit from the given oldInputSplit.
Returns a map of field names to the class that corresponds to the specified record class.
Resolve the schema access for the parquet file based on the configuration and the requested schema.
Gets the input files from a list of input files.If the input is a directory,
Checks that all the files in the input list are valid Parquet files.
Returns a list of input files in the given directory.
Returns a filter that returns a page of records starting at the given start position.
Creates a new DelegatingListConsumer for the given thrift type and consumer.
Initialize the mapred work and partition info.This method is used to initialize the mapred
Returns a new tuple summary data from the data in the given tuple.
Calculate the sum of all tuples in the given tuple.
Read a structure from the stream.This method is used to read all fields in the stream
Reads a map entry from the wire.
Writes an int value to the output.
Read a little-endian 32-bit integer from the given byte buffer starting at the given
Set the Avro schema for the job.
Create a Kafka topic if it doesn't already exist.
This method checks if there are duplicate stage beans in the given pipeline stage beans.
Creates interceptor beans for the given stage definition.
Creates a new interceptor instance for the given StageLibraryTaskStageDefinition.
Parse the given schema and return the schema object.
Convert the given milliseconds to days since January 1st 1970.
Extracts the avro schema from the header.
upgrade from v1 to v2.
Copies a list of blobstore resources from the staging directory to the pipeline directory.
Resets the state of the statement, clearing out all of the variables.
Sends a health report to the gauge for the specified thread, and returns true if the health
Register the ThreadHealthReportGauge for the given thread.
Stores the configuration of the control hub in the configuration file in the runtime data directory.
Attempt to login the user using the given web credential.
Upgrades the given pipeline configuration to the latest version of stage-library-task-library
Creates a new stage configuration, if it is needed to upgrade it to the latest version.
Upgrades the stage configuration to the new version if it doesn't already exist.
Checks if the service is up-to-date and if it is up-to-
Upgrades the given stage to a new version if necessary.
Returns the list of fields that should be added to the list of fields that should be added
Returns true if the given class is a system class in the given package list.
Add the specified element to the list.
Adds the given element to the list and returns the evicted element.
Returns the value of the given key or the default if the given value is null.
Adds the reported errors to the list of stages output.
Returns the descriptor for the given proto descriptor file, or null if the descriptor file does not
Get all file descriptors in the given file descriptor set and add them to the given map.
Populates the default values and extensions of the given file descriptors with the values in the given map
Returns the descriptor for the given descriptor file, or null if the descriptor does not exist.
This method converts a record to its corresponding SDCField.
Convert an SDCard field to a protobuf message.
Convert an SDC field definition to a protobuf message.
upgrade to Jersey config bean for Jersey 2.0.
Check the connection to Kudu and add any errors to the list of issues.
Convert Kudu type to Field.Type.
Creates a field of the given type from the given row result.
Intercepts the list of records using the list of interceptors.
Returns the text content of the chunk.
Adds any missing configurations to the stage configuration.
Parse the response from the given input stream and return the record.
Adds the response headers to the response.
Writes the response headers to the header field of the record.
Writes the response headers to the record header.
Saves the current state of the stage to a metadata file.
Configures the client to be used with the configuration. If the client is not configured, the
This method parses the response headers and returns the response offset as a string.This method is
Increments the given source offset by the given increment value.
Parses a paginated result record and adds it to the batch maker.Returns the number of
Adds the headers from the response headers to the given header.
Resolves header variables in the configuration and returns a multivalued map with the resolved headers.
This method processes the response and returns the offset if the response is not null.
Checks if a property is defined in the configuration.
Convert a DataParserException to a DataParserException.
Converts a Streamsets.Pipeline.Generator.Exception into a DataGeneratorException.
Attempts to read the credentials file from the file system and return the credentials.
Returns a JSON preview of the stage outputs specified in stageOutputsToOverrideJson.
Copies the content of the current character to the buffer, and returns the number of overrun
Given a set of packages, remove all of the packages that start with the same name.
Returns the index of the first line of text that matches the pattern in the given chunk.
Resolves a single chunk into a live file chunk.
Closes the connection for the current thread and removes it from the list of connections to close during
Escape a string for use in a quoted substring in a SQL statement.
Returns the flow control settings.
Creates a gRPC channel provider for this subscription.
Puts a batch of objects into the cache and returns the object to which it was put.
Compiles a digested Grok expression and returns a compiled Grok expression.
Computes the auxiliary digest expression for the given original expression.The auxiliary digest expression is
Adds the contents of the given input stream as a dictionary.The input stream will be closed
Adds a dictionary from the given reader.The reader will be closed after this method returns.
Stop the timer and return the data for all aggregators.The data for all aggregators
Roll the data to a new data window.The data window will be updated with the new
Serialize the specified object to a JSON formatted string.
Deserializes the body of a request into an object of the given return type.
Deserialize an object from a file.
This method writes the record to the file and writes the new record to the file.
Resolves an EL expression and returns the resulting string.
Generate the inner field from the list of fields.
Gets the name of the table in the metadata record.
Extracts the database name from the hive metadata record.
Returns the value of the internal field of the given metadata record.
Extracts the location field from the metadata record and returns it as a String.
Get the value of the custom location field from the metadata record.If the field is not
Returns the avro schema for the given metadata record, or throws a HiveStageCheckedException.
Get the data format from the metadata record.
Create a new schema metadata field builder and initialize it with the given parameters.
This method checks that the partition names are in the Hive table and that they are in the
Generates a partition path from the map of partitions.
Writes schema to HDFS.
Set the parameters of the given record using the given statement and SQL statement code.
Gets the configuration from the NFVO and returns it as a map of key-value
Parses the given time string as an RFC 3164 date and returns the time in milliseconds.
Formats the given template with the given arguments.If the template does not exist, it will
Start the batch execution of the PushSourceContextDelegate in a privileged context.
Checks if the record contains at least one of the solr fields in the given map.
Returns a list of field names that are not in the list of field names.
Send the error message to the error handler.
Parses a dependency from a jar file name and returns a dependency if the dependency is found.
Parse a dependency from the given URL.If the URL is a jar file, the dependency
Get a singleton instance of the CouchbaseConnector that is shared with the StageRunner.
Closes the bucket, the cluster and the environment.
Gets the label from a string code.
Verifies that the given dependency exists in the map.
Extracts the write operation from the SDC header.
Build a subdoc mutation with the given options.
Returns the SQL statement for altering a table with the given schema and table name.
Configures SaslKerberos with the given configuration and the given login context name.
Take a batch of messages from the queue and return a map containing the messages in the queue
Commits a batch of messages at the given offset.
This method will be called when an error occurs during the processing of the channel.
Injects the given stage with the given stage definition configuration and the given set of issues.
Gets the definitions for a given stage.
Get the publisher definition for the given name.The publisher definition is defined in the configuration file
Format the column name for use in SQL queries.
Formats the given value to be used in a log message.This method does not return the
Get information for a specific pipeline.
Creates a pipeline fragment in the draft format.
Get a list of all pipelines that match the given filter and label.
Import a pipeline fragment into the specified fragment envelope.
Get the file path for the given record and time.This method is not thread-safe
Get the operation code from the record.
Gets the field path for the given column name, based on the given map of columns to
Returns the next enriched event from the queue, or null if the queue is empty.
Returns the next runner in the queue, or null if the queue is empty.
Get a runner for the given idle time.If the idle time is less than idleTime
Returns a new runner to the pipeline.
Destroys the pipeline and removes it from the database.
This method checks if the pipeline is not destroyed.
Checks if the given stream exists.
Returns the last shard id for the given stream, or null if there is no last shard
Process the queue of records and add them to the error records.
Override this method to handle the SQL exception.
Returns a hash code for the columns in the given record, based on the givenoperation.
Compares two files and returns true if they are equal, false if they are equal.
Returns the PID of the process, if possible, or undetermined if the process is
Given a record and a set of field paths, returns a set of field paths that are
Get the user group information for the specified proxy user.
Roll the active stats and return the new active stats bean.
Returns a snapshot of the current state of the active stats.
Ensure that the directory exists for the given path.If it doesn't exist, it will
Writes all records in the given batch to the specified record writers in the given context.
Given a batch of rows, partition them into partitions, and write the result to the given
Writes the given iterator of records to the given jdbc record writer, using the given error handler
Generates a no-more-data batch event for the given PushSource.Context.
Determines if a new partition is present in the cache and returns a map of partition values and
Updates the given record for HDFS with the given schema, location and roll flag.
Processes the given value and adds it to the list of values for the given group.
Check if two stages have the same version.
Main method to run Mesos with the given arguments.
Configures the Jersey client, and builds the Jersey client.
Resolve the headers for the given record.
Returns the http method for the given http method and method expression.If the http method expression
Fill the bindings with null values.
Returns the value of a field in this record, or null if the field is null.
Loads a schema from the registry.
Registers a schema with the given subject and returns the id of the schema in the registry.
Loads a schema from the registry for the given subject.
Returns the schema id from the given subject.
Loads a schema from the registry.
Writes the schemaId to the given output stream.
Detects the schema ID of the given byte array.
Gets the default values for the given schema.
Parses the given payload and returns a list of Record objects.The first record will be the
Logs the details of the current state of the dependency graph.
This method returns the list of bad records for the given error sink.
Initializes the schema generator and returns a list of all issues that have been generated.
Get the outward edge vertices for the given vertex.
Get the inward edge vertices for the given vertex.
Serialize the given offset map into a JSON string.
Deserialize the offset map from the given last source offset.
Queues a report for execution.
Gets a report from the Website service.
Checks if the check point file exists.If the check point file does not exist, it
Writes offsets to the main file for the given partition to the check point file.
Delete a blob from storage.
Handles a blob error by reading the contents of the given blob, and then deleting the blob
Handles an archiving of the given blob in the given destination path, based on the options
Returns a reader for the current file, or null if no reader is currently open.
Releases the reader and discards the reader if it's in the error state.
Set the DPM base URL.
Add a header to the default header map.
Parse a date from the given string.
Escape a string so that it can be used as part of a URL.
Get the client for the given base path, creating it if it doesn't exist.
Initializes the connection to the Kinetica Kinetica and returns the connection object
Get the metadata for the table.
Creates an EventBuilder instance for the given context and to event context.
Build a schema from a map of fields and a set of levels.
Converts an Oracle code to the corresponding SDC code.
Adds jars to the job configuration.
Checks if the field is in the field order by list of the given field name.
Checks whether the field name is contained in the condition expression of the given condition expression context.
Given a string representing the file offset, returns the lag of the file.
This method is called before the main method.This method should be called before the main method
Returns the parallelism for this stage.The parallelism is the same as the origin parallelism.
Runs the query and returns the result set.
Get the description of the table in the response, or throw an exception if there is no
This method ensures that the table name is valid for inserting into the database.
Get the column type of the field.
Check if the field's type is nullable.
Get the schema of a table.
Get the column properties from the show table response.
Returns the class corresponding to the given type name.
Connect to the Aerospike server and connect to the Aerospike server.
Get the topic for the given record, or null if the topic is not defined.
Gets an input stream for this file.
Returns an output stream for this file.If the stream is already closed, this method will
Returns true if the file exists, false if it doesn't.
Parses a permission string and returns the corresponding FsPermission object or null if the permission string is
Validates that all services are available.
Create a simple aggregator with the given name and class.
Get the unit of the aggregator.
Create an Aggregator with the given name and the given time window in milliseconds.
Create a new GroupByAggregator instance with the given name and the given aggregator class.
Starts the data window and sets the end time of the data provider to the given time.
Stops the aggregator and returns the data map.
Roll the aggregator data into a new map.The key is the aggregator and the value is
Release the login manager reference. If the reference count reaches zero, the login manager will be
Converts a glob string to a regular expression.
Returns a list of S3ObjectsSummary objects for all Amazon S3 objects lexicographically
Stops the pipeline and cleans up the snapshot if there are still batches to capture.
This method returns the number of empty batches for the runners that are idle.
This method creates a failure batch for the pipeline if the pipeline does not have a failure snapshot
Convert a Record to a BoundStatement.
Sets the value of each key in the given map to the value in the given map.
Generate a KuduLookupKey from a KuduRecord.
Reads the next line from the reader and appends to the StringBuilder.Returns the number of lines
Moves the multiplier of this timer to the previous multiplier and changes the multiplier of this timer to
Enables the DPM.
Disables DPM for the current user and removes the user from the DPM cache.
Normalize the DPM base URL to remove the DPM base URL from the given URL.
Retrieve the user token from the given URL and username and password.
Logout a user from the DPM.
Updates the token file for the given app.
Update the DPM properties.
Returns the schema for the given field and the type of the field in the given record.
Returns the schema for the given field, or null if the field has a default value.
Returns the number of decimal places to be used for the specified field, or the specified default
Get the default value for the given schema.
Initialize the metrics if needed.
Compares two file paths, and returns the index of the first match, or -1
Returns the index of the group with the given name, or -1 if there is no
Returns a list of group names.
Checks whether the character at the given position is an escaped slash or quote character.
Returns true if the character at the position is a slash-escaped character, false otherwise.
Returns true if the current position is inside a character class, false if it is not.
Counts the number of open parens in the given string starting at the given position.
Given a named pattern, returns a map of group info.The key of the map is
Replaces the given regular expression pattern with the given replacement string and returns the builder.
This method handles the HTTP GET request.
refresh the schema for the table, if the new schema is less than the old one.
Returns whether or not the entry has expired, i.e., if it has expired.
Returns the current offset of the file, or -1 if the file is not open.
Fast-forward the file to the end of the file.
Converts the given string value to an appropriate number, or returns null if the string value is
Parse a single part of a record.
Parses the values from the given buffer starting at the given offset, returning the number of values
Lookup the primary keys for the table.
Create the column mapping for all custom fields.
Returns the SQL type for the given field type.
Returns the table name with the schema and table name if the schema is null or empty.
Sets the primary keys for the given statement.
This method handles a SQL exception thrown by the JDBC driver.This method logs the error and
Processes the pipeline and executes the pipeline in the context of the current stage.
Prepare the given batch context for batch execution.This method must be called after the batch context
Finishes the given BatchContext, calculates and returns the metrics for this batch.
Flattens the entire field record into a single map of fields.
Creates a detached stage runtime for the given stage bean and context.
Execute the record, if the record is valid, or if there is an error executing the
Returns a map from column name to the parameter value for the given operation.
Returns the condition for the given partition column and the preconditions for the given comparison.
Validates that the given offset is stored in the given table context and that the given offset is
Get a list of the bundle content generator definition that is requested by the user.
Returns an array containing all non-empty arguments in the given app args, or an empty
Gets the operation for the given operation code in the given Kudu table.
Convert the given number of bytes to a human readable string.
Scan the live file tree for the given live file.If the file is not found,
Gets the number of pending files for the given live file.
Check if a dependency is in the list of whitelisted dependencies.
Returns true if the set of versions matches the set of expected versions.
This is the main entry point for testing.
Propagate the runtime configuration to the current runtime configuration.
Validates the report description and creates an error if the report description is invalid.
V1-to-V2 upgrade configurations for bigquery v1 to v2.
Extracts a map of named groups from the raw data, or null if the data does not
Sends a commit message to the consumer.
Creates a new instance of the SDC.
Sets the fields in the record to the given fields.
Returns a list of all the pipelines that have been generated by the cluster and has changed.
Converts the given future result to a collector result with an ACK event.
Creates a gauge for the given name and pipeline and returns a gauge that can be used to
Returns a map from column name to the parameters for the given operation.
Generates the header attributes for the given file.
This method validates that the given record is a valid file reference.If the record is a
Handle old temporary parquet files that have been written to disk.If there is a temporary
Get an avro input stream for the given record.
Get the file reader for the given input stream and source file name.
Write the Parquet file to a temporary file.
Check if the given field is valid for the given record and if not return the field.
Checks whether the given field can be encrypted.
Check that the field is a byte array and that the input is decryptable.
Check if the given field is a byte array and if it is, throw a StageException
Prepare a field for use in the SDC encryption.
Sets the pattern to use for matching against this matcher.The new pattern will be used as
Append the given replacement string to the given string buffer, replacing with the given replacement string.
Returns a map of the named groups of this regular expression.The key is the name of
Replaces all occurrences of the regular expression with the given replacement string.The replacement string will be
Get the value of the given global variable from the given data source.
Creates a start event record for the given start event stage.
Create a stop event record for the given stop reason and return it as an event record.
If the offset is less than 0, then it will be truncated to the nearest decimal decimal
Extracts the value of a field as java.lang.String or java.lang.String
Execute alter table add partition query.
Execute the alter table set tblProperties query.
Execute describe database query and return result set location.
Execute the given SQL statement and mark the result as updated.
Executes a query and returns the result set, or null if the query has no results.
Execute a batch of pipeline pipelines starting at the given offset and starting at the given time.
Accepts the given consumer for all pipes in this pipeline.
Gets the offset commit trigger of the first stage in the pipeline.
Returns true if at least one of the pipeline has an error record, false otherwise.
Accepts a consumer for the given pipeline.The consumer will be invoked only if the pipeline is
Returns the row id for a record, or null if the row id is invalid.
Get value from field.
Sets the value of the fragment in the given record according to the subdoc mapping configurations.
Sets the value of the document in the specified record.
Apply N1QL mapping to the given record and return an observable that contains the result.
Handles the whole file data format of an S3ObjectSummary.
Check if the incomplete transaction with the given id and sequence number is greater than or equal to
This method sets the class loader for the current thread and then restores the current thread's
Log the user out of Kerberos.
Sets the exceptions that should be thrown during the execution of the compiler.This method should only
Replace all variables in the given path with the data directory, configuration directory and resources directory.
This method ensures that the proper permissions are set for the given path in the context class loader
The main method. This is the main method of the EMR application.
Get the path of the directory in which the given date and record are located.
Renames the given temp path to the final name.
Checks if the roll should be applied to the record.
Returns true if the pattern matches the given string, false otherwise.
Returns a map containing the offsets of the files.The key is the file path and the
Returns the amount of time to wait before the given start time and the given max wait time
Get the offsets lag for a given map of offsets.
Create a new StageLibraryDelegate for the given stageLibraryName and exportedInterface.
Creates a new instance of the StageLibraryDelegate defined in the givenStageLibraryDelegateDefinition.
Gets the value of the metric.
Find the end of the header.This is the byte at the end of the header.
Returns the number of bytes in the body of this message.
Save a byte buffer to a temporary file and return the path to the temp file.
Creates a SSLContext from the specified keystore and trust store classpath path.The key and trust
Returns the MIME type of the file in the given URI, or the empty string if the
Executes the interceptor chain and invokes the HTTP handler if the response is non-null.
Stops the HTTP server and waits for the server to be shut down.
Add a mapping to the router. This method will set the not implemented and not found handlers
Send the body of this message to the given output stream.If there is no data,
Creates a new fixed-length response.
Whether gzip should be used when the mime type is accepted by the client.
Sets a new cookie with the given name and value.The expiration time will be used to
Unloads the cookies in the queue and add them to the response.
Decodes the base64 string value and returns it as a string.If the decoding fails,
Encodes the given string as a base64-encoded string.
Set the table name.
Returns the name of the given principal.
Insert a new SpringSessionRepositoryFilter into the servlet context.
Resolves the principal name for the given session.
Returns the session with the given id if it exists, or null if the session is expired
Return the JNDI name from the model node.
Returns the canonical parameter types for the given method.
Registers an InterposedSynchronization with the context.
This method is called before the task is completed.This method will be called before the task
This method returns the current transaction, or null if there is no current transaction.
Deploys all the beans in the KDXML, if any, and adds the
Returns true if the given persistence unit name matches the cache region prefix, false otherwise.
Returns the list of service names that are dependencies for the client and endpoint configurations.
Decrements the read lock count by one.
Increments the read lock counter by one.
Adds the given service to the list of registered bean deployment archives.
Handle the restoration calculation. This method will be called if the next expiration time has been
Deploys the module if the module specification is a JPA module specification.
Make the top-level BDAs visible from static modules.
Creates a JSE instance for the given deployment.
Sets the config name and config file for the given jboss webservices.
Returns a list of JSESecurityMetaData for the given SecurityConstraintMetaDatas.
Gets the servlet URL patterns for the given list of POJO endpoints.
Get the mappings for the given list of POJO endpoints and create a servlet for each endpoint
Resolves the EJBS for all the views that implement the EJBView interface.
Returns a set of all available connectors for the given operation.
Parses a core environment element and adds the result to the given operation.
Parse the process-id-environment.xml file and add the process-id-environment
Get the path address for the given ModelNode operation.
Sets the value of the path address in the given operation.
Returns the value of the value attribute of the given operation.If the value doesn't exist
Returns true if the given operation has a "include-default" value.
Creates a composite operation for the given list of operations.
Create an add-operation with the given address and parameters.
Create a add-one operation that adds the given address to the model at the given index
Returns a read-attribute operation given an address and an attribute.
Creates a write-attribute operation with the specified address, attribute and value.
Create an UNDEFINE attribute operation with the given address and attribute.
Gets the value associated with the current context.
Adds a new URL context factory for the given scheme.
Remove the given URLContextFactory from the list of factories for the given scheme.
Loads the validation providers from the ServiceLoader.
Modify the JBoss web.xml file for the given deployment.The JBoss
Configures the JBoss endpoints for the given deployment and the JBoss web metadata.
Modifies the context root of the JBossWebMetaData.
Returns the name of the transport class to be used for the given deployment.
Set the run as identity for the given SecurityContext.
Pop a run as identity from a security context.
Process all servlets in the given meta data and add them to the deployment sub-model
Injects the given property value into the given object.
Return true if the given argument matches one of the class and property types.
Find a method on the given class and its super classes.If the method is not found
Finds the field with the given name in the given class.
Derives some useful information from the http request.
Runs the JDR runner and collects the results in a single thread.
Collect the JDR report and return it as a JDRReport object.
Registers a resource adapter deployment with the deployment manager.The deployment will be added to the deployment
Unregister a resource adapter deployment.
Register the transformers for the current model version.This method registers the transformers for the current model
Writes out the parameters to the given output stream.
Reads an exception from the given input stream.
Returns the owner of the current transaction, or the current thread if the current thread is
Releases the lock held by the given instance.
Add a log file to the log.
Add the CDI context parameters to the WWJJBJBJBJBJBMetaData.
This method returns the component view associated with the component.
Invokes the given endpoint with the given WSInvocation.This method will be invoked immediately after the
Gets the component view method for the given component method.
Returns true if the source method matches the target method, false if they do not match.
Returns the ejbSecurityMetaData for the given endpoint, or null if it doesn't exist.
Returns the new security domain, or the old one if the old security domain equals the next
Ensures that the oldSecurityDomain and the newSecurityDomain are not the same.
Sets the name of the IDL file to be used for the given IDL file.
Gets the absolute name of this entry.
Create a new JNDIName instance for the given JNDI name.
Processes the ironamar.xml file and stores the xml descriptor in the deployment unit
This method is called when a new request is received from the exchange.
Returns true if the current transaction is in a transaction, false if the transaction is in a
Returns the transaction synchronization registry, or creates a new one if it doesn't already exist.
Returns the connection factory to be used by the connection manager.
Returns the last component of the given name.
Returns true if the given name is empty, false otherwise.
Thrown when a name is not found in a given context.
Creates a new naming exception with the specified message and optional cause.
Returns a new naming exception with the given message and the given exception and the remaining name.
Creates an instance of CanBeProceedException for the given resolved object and remaining name.
Returns a naming enumeration from the given collection.
Rebind a value to a named variable in the current naming context.
Gets the active mq control for the given operation.If the active mq control does not exist
Creates a new instance of the component.
Returns the virtual file that will be used for the resteasy spring integration.
Resolve the runtime name for the given address.
Creates an XML listener builder for the given resource.
Retrieves the primitive analysis for the given class.
Called when the thread is shutting down. This method will be called when the thread is shutting
Returns a list of URL patterns for the given URL pattern.The first list is the URL
Gets the JServlets instance for the given JBossWebmd.
Get the list of servlet mappings for the given JBossWebMD.
Gets the security constraints for the given JBossWebMD.
Gets the login config meta data for the JBossWebMD.
Gets the list of context parameters.
Returns the WebResourceCollectionsMetaData for the given SecurityConstraintMetadata.
Returns the list of init params for the given servlet meta data.
Create a new SecurityConstraintMetaData and add it to the SecurityConstraintMetaData.
Creates a new web resource collection.
Create a new JServlet instance.
Creates a new servlet mapping for the given servlet name and url patterns.
Creates a new AuthConstraintMetaData and sets the AuthConstraintMetaData's roleNames.
Creates a new UserDataConstraintMetaData based on the given transport guarantee and security constraint.
New param value.
Creates a new ParamValueMetaData.
Registers the session bean interceptors for the specified component.
Shuts down the Weld instance and shuts down the Weld bootstrap service.
Get the JNDI name from the model node.
Resolve a simple attribute from the given context and model and return the result as a string.
Returns the type of URL pattern, based on the given URL pattern.
Returns true if the connection to the given server is alreadypooled, and false otherwise.
Returns true if the target is an external pooled connection, false if it is not.
Get the name of the active MQ client.
Returns the name of the default persistence unit for the persistence unit specified in the persistence unit metadata
This method is called when the application starts up.This method will be called to start the
This method is called when the application stops the execution of the activity.If the execution is
This method marks the activity as suspended and suspends the local transaction context.
This method is called when the activity is suspended.It calls the resumeLocalTransactionContext and
Indicate that an invocation has completed.This method will be called only if the transaction is
This method is called when a transaction is created.
Start the ServiceBasedJPAController. This method starts the ServiceBasedJPAController.
This method removes the controller from the naming store and removes it from the naming store.
Get the service name for the given capability base name and optional dynamic parts.
Creates the list of resource roots for the given deployment unit and the given deployment unit.
Returns a set of all the ClassLoaders contained in the module in the given deployment unit.
Returns true if the persistence provider class file transformer should be applied to the persistence unit.
Check if the persistence unit is configured to allow two-phase bootstrap.
Returns true if the persistence unit is configured to allow the default data source to be used.
Returns true if we should skip the synchronization of the given entity manager, i.e.
Get an ORC for the given server and port.This method will return the ORC
This method initializes an instance of an instance of the given applet.
Initializes the method handles for all the methods in this class.This method should only be called
Set the active naming store.
Validates the default values for all the parameters in detailList.
Checks the type of a parameter in the generated type.
Looks for a default value annotation on the given annotation array.
Validate that the given method has a valid default value and throws an exception if the validation fails
Gets an array of extended entity managers that are deferred to be post-constructed.
Returns the given transaction status as a string.
Adds the cache dependencies for the given classification to the given properties.
Extract the dialects from the SQL statement.
Investigates the current dialect and checks if it is indeed a database.
Try to identify a dialect name.If the name is not a valid dialect name, return
This method checks if the database has been loaded.If not, it loads the database.
Returns the given date as a scheduler date, or null if the given date is null.
Sets the parameter index to the node name of the statement, depending on the timer state.
Marks the specified deployment unit as a marker in the parent deployment unit and all its parent deployment
Reads the parameters from the input stream.
Writes the result of a method call to the given output stream.
Writes the given exception to the given output stream.
Returns the value of the specified lookup starting from the current class, starting at the specified starting
Starts the SFSDB creation.
Ends the SFSB creation of a SFSB bean.
Gets the current SFSDB invocation stack, or null if there is no current SFS
Pushes the given entity managers to the SFSB stack.
Pops the last SFSDB call from the stack and removes it from the stack.
Returns the current call to the SFSDB, or null if the stack is empty.
Deploys the module in the deployment unit to the module loader specified in the deployment unit
Gets the type IDL string for the given class.
Insert a primitive into an Any object in the given Any object.
Convert a java name to an IDL name.
Returns true if the given string is a reserved IDL.
Returns the signature for the given class.
Gets the signature of the given method.
Returns a human readable name for the given primitive type.
Returns the BatchPermission for the given permission name, or allPermission if the permission name is
Get or create transaction scoped entity manager.
Associates the specified value with the specified key in this map.
Converts a camel-case security role to a model node.
Find the most recent version for the given TimerImpl.
Returns a copy of the timers for the given timed object id and timer service.
Get the directory for the given object id, creating it if it doesn't exist.
Add a naming listener for the given target and scope.
Removes the given listener from the list of listeners registered for the given naming listener.
Fire a naming event for the given name, binding, type, and change info.
Returns a lambda that closes the given auto-closeable object, catching and logging any
Add a new private credential to the Subject.
Gets an instance of the specified object from the context class loader.If the context class loader
Adds a new interceptor for the given view, if one is not already registered.
Substitutes a string from the beginning of the given string, to the given string.
Creates a transport configuration for the in VM.
Adds an EAR prefix to the deployment unit name if it is a relative resource adapter
Returns the root deployment unit of the given deployment unit.
Returns the service name that this service is associated with, or null if there is no service
Creates a new ViewConfiguration instance for the given view class, component configuration and proxy factory.
Creates the injection source for the given service name using the given class loader.
Returns the list of registered view interceptors for the given method.
Add a view interceptor for all the cached methods in the given interceptorFactory.
Add a view interceptor to the container for the given method, using the given interceptor factory.
Returns a list of registered client interceptors for the given method.
Add a client interceptor for each method in the proxy factory.The priority parameter specifies how the
Add a new interceptor to the list of interceptors registered for a particular method.
Put private data.
Thrown if we encounter an unexpected element.
Returns a list of all the jax-ws EJBS endpoints for the given deployment unit
Gets the jaxws POJO endpoints from the deployment unit, or an empty list if none
Returns the endpoint name from the servlet metadata.
Returns the endpoint class name for the given ServletMetaData, or null if no endpoint class is
Returns the servlet for the given servlet name in the given JettyWebMetaData object.
Get the value for the specified attachment key from the given deployment unit, or throw an exception
Gets the optional attachment for the given attachment key from the given deployment unit.
Gets the JBoss web metadata for the given deployment unit.If there is no J
Gets the JPortComponent associated with the specified ejbName from the deployment unit.
Gets the EJBEndpoint for the given class name.
Get the context root for the given deployment.
Returns the class for the given name, or loads the class from the class loader if it
Returns the URL of the resource with the given name in the module's class loader.
Returns a collection of URL objects for the specified resource name.
Returns a list of all the resources in the specified path.
Pop the entity manager from the stack and close it if it is not already closed.
Get the entity manager for the given pu scoped name.
Register a listener that should be called to clean up the transaction manager.This method is called
Deploys the given deployment unit if the deployment unit is a WAR or WAR
Checks if all fields are public.
Create a new HTTP endpoint and add it to the deployment.
Creates an archive deployment for the given deployment unit.
Checks if the given deployment unit is a JAX-RS deployment.
Sets the next timeout for this timer to the given date.
Sets the current state of the timer to the given state.
Merges a list of deployment data into this one.
Deploys the module.
Add a dependency on the remote view if it has a remote view.
Gets the set of all container interceptors.
Returns true if the given method is a method in the given interface.If the method is
Checks that only one of the elements in the given set of elements is not already in the
Get the type of the given class name, or null if the class name is null.
Returns the component type at the given index in the parameterized type.
Parse the given name and return the resulting name.
Convert a string representation of a vector into a stringified version of a vector.
Parse a single component of the given string and return it as a NameComponent.
De-activates the IrService and de-activates the IrService.
Convert a servant object into a reference to a POA object in the repository.
Authenticates the user and returns the security identity.If username and password are null,
Returns true if the given class is a known type, false if it is not.
Looks up a binding in the container for the given name, or returns null if not found
Unbinds the JNDI binding with the given name.
Creates a new instance of the specified bean using the specified metadata and the specified BeanInfo object
Configures the given bean with the given meta data configuration.If the bean doesn't have any
Dispatches a lifecycle joinpoint to the specified bean.If a lifecycle joinpoint is
Returns the current selector, or the default selector if there is no current selector.
Convert a JBoss service name to a JBoss bean name.
Returns a service name for a given bean class and bean state.
Looks up a class by its name in the first available module.Returns null if not found
Process the annotations in the given deployment unit.
Post-parse the persistence units in the persistence.xml file into the persistence.xml file
This method checks if the given string is a valid EE descriptor.
Creates the WAR metadata and adds it to the deployment unit.
Create the web application descriptor.
Returns the authentication method for the ejb endpoint in the deployment.
Deploys the Boss service.xml file and processes it into the deployment unit.
Handle stateless session bean.
Create a stub for the given class. This method will try to load the stub class from
Returns the byte array of the anonymous object id for the given object id.
Returns a copy of the list of persistence providers for this class loader.
Clear the persistence providers for the given deployment class loaders.The persistence providers are removed from the
Adds a persistence provider to the list of persistence providers for a given set of deployment classload
Returns the parent module loader for the given class loader, or null if the class loader is
Deploys the module specification into the deployment unit.If the module specification doesn't exist
Add the persistence unit metadata to the target service if the persistence unit list is not empty.
Sets the annotation indexes on the deployment unit.
Returns the persistence provider adaptor for the given persistence unit.
Save the persistence provider for the given adaptor module in the specified deployment unit.If the adaptor
Lookup the persistence provider for the given persistence unit in the given persistence provider deployment holder.
Returns the set of classes that are annotated with the given set of URIs.
Create an instance of the ejb archive for the given deployment.This method should be called only
Build the enterprise bean meta data for the ejb endpoint.
This method is used to periodically refresh the participant's state.This method is used by the
Returns a ContainerAnalysis instance for the given class.
Look up the container analysis for the given class, if it has been done, and if
Creates a new instance of the given class and adds it to the work in progress.
Returns the name of the IDL module for this class.
Convert an integer to a hex string.
Convert the given long to a hex string.
Return true if the given method is an accessor method, false if it's not.
Returns true if the method is a mutator method, false otherwise.
Returns true if the given method has non-app-exception exceptions.
Read the name of an attribute from the given string.
Returns the name of the attribute, if the given name starts with "attribute-" or "
Fixes the names of all overloaded operations that are defined in this class.
Fix up the case names of all entries in the list.
Escape the given name so that it can be used in a URI.This method is used
Parse the XTS.xml file and add it to the given subsystem.
Parse the default context propagation element.
Iterate over all attributes in the reader, calling the callback for each attribute, calling the callback
Load provider module by module name.
Creates and returns a handler which adds a new step to the model.
Deploys the current deployment unit.
Write the given SimpleAttributeDefinition as an attribute of the given node.
Creates a new Session on behalf of the current container.If the container is suspended,
Infers the destination name for the given JMS queue or JMS topic.
Registers a set of endpoint handlers for the given endpoint class.
Returns an unmodifiable set of XML names for the specified job, or an empty set if the
Initialize the class loader with the given class loader.The class loader will be used to load
Returns the URI of the request, or an empty string if there is none.
Create a new ResolveResult using the given URL and env.
Looks up an object in the registry by a composite name and returns it as a java.
Binds the given object to the named object.
Call the unbind method on the ND4JContext for the given path.
Returns an enumeration containing a list of bindings for the given name.
Call destroy on the given naming context.
Destroys a subcontext and cleans up the resources.
Call the bindNewContext method of the underlying naming context, and return the result.
Creates a new context based on the given name.
Looks up a link with the given name in this context.If the link does not exist
Add a new property to the environment.
Remove a property from the environment.
Adds the necessary transformations to the given ResourceTransformationDescriptionBuilder based on the given model version.
Remove a security domain from the security manager.
Looks up a JNDI context.
Create a modular reference for the given type and factory class.
Creates a modular reference for the given class name and factory class.
Creates a modular reference for the given type and address.
Creates an instance of the appropriate IdlImpl for the given typecode.
Waits for the given service to be up.If the service is up, it will be
Computes the masked password and returns it as a string.
Initializes the security vault.
Start a vault session.
Demonstrates how to create a vault attribute.
Displays the current vault configuration.
This method returns the vault configuration in a format suitable for use in the XML file.
This method checks if the given value is not null and if so returns the given value.
Get the deployment service name for the resource adapter.
Insert the value into the specified Any object.
Check if the given JNDI permission implies the current JNDI path.
Returns the string representation of all actions.
Gets the name of the current log file.
Send a state change notification to the world model.
Returns the value for the given type.If the type is a class, the value is
Returns the context service name for this component.
Returns the set of all interceptor descriptions for all methods, classes, and method-interceptors
Adds an interceptor for the given method and the given interceptor description.
Adds a service to the list of services that are dependent on this component.
Gets the list of all interceptor factories for a given method.
Gets the ordered list of interceptor factories around the interceptors for the given method.
Add a timeout view interceptor for the given method.
Add a new around construct interceptor to the list of interceptors to be invoked.
Add a interceptor to the list of interceptors for the postConstruct methods of this class.
Adds a preDestroy interceptor to the list of interceptors to pre-destroy.
Add a pre-passivate interceptor to the list of pre-passivate interceptors.
Add an interceptor factory to the list of interceptors to be executed after the application is activated.
Set the component create service factory.
Remove the JNDI binding service for the given list of entries from the given context.
Adds the remote transport providers and http transport providers to the given builder.
Returns the service name of the given component in the specified app, module, and component.
Returns the service name of the given application and module.
Get the BindInfo for the specified envEntryName in the specified app module and module.
Returns the bind info for the given JNDI name.
Gets the cache of the principal and domain information for all principal-domain-info entries.
Returns an array of ValueMember objects for the values in this block.
Returns an array of ValueMember objects representing the contents of the contents of the typecode.
Creates and returns the root node of the Federation subsystem.The root node will be
Parse a config element and return the model node, or null if the config element is not
This method is called when the service is started.This method is called at the beginning of
Returns the service name for the job operator.
Adds a component to the list of components for the given component description.
Add a message destination to the deployment.
Returns a set of view descriptions for the given view type, or an empty set if no
Returns the set of components for the given component name in the given virtual file deployment root.
Returns a set of view descriptions for the given component name and view name.
Resolves a message destination name to a set of paths in the given deployment root.
Add transformers to HALNetQ server.
Adds a reject check for each defined attribute's default value to the transformation description.
Pop the identity from the state cache.
Loads the ids for the module and all dependencies.This method must be called before any other
Check that all versions are in the known state and that they are present in the module.
Computes the slot to use for a given jsf version.
Gets the constant type code for the given class.
Adds the given type code to the type code map for the given class.
If the package already exists, return it, otherwise return null.If the package doesn't
Add all the interfaces in the given container.
Add the abstract base valuetypes of the given ContainerAnalysis.
Add a class to the list of classes.
Add an interface to the RMI.
Add a value to the value def.
Adds an exception to the list of registered exceptions.
Returns the class level injection type for the given annotation instance.
Start the ServiceBasedNamingStore instance for this context.If the store is not already started
This method is called when the context is stopped.This method is called when the context is
Check if the given method type is allowed to be invoked on the current thread.
Checks if the transaction is in sync with the given transaction type.If the transaction is in
Get all component classes from the deployment unit and the TLDs meta data.
Returns the timers that are waiting on a transaction completion.
Returns a map of parameters that are not in the allowed keys.
Gets the parameters from the context and the model node.
Convert a Java type to a Java class.
Convert the given value to the given class, or return the value if the value is null
Returns the types for the given array of configuration values.The types are the same as the
This method checks if the array of type names and the type infos are the same length.
Move to the next binding in the list, returning a java.lang.Object.
Returns true if there are more bindings in the batch, false if there are no more bindings
Map a binding to a JavaBean object.This method uses the context and naming manager to
This method is called by the microprofile when a new health check is added to the list
Closes the health check and cleans up any resources held by the healthcheck.
Get the handle for the specified locator.
Convert the model node value to an enum value of the given class.
Skips the specified number of bytes from the given input stream, starting at the current position
Checks if two elements are not already in the seen set, throw an exception if they are
Add a ComponentDescription to the ComponentRegistry by component name and component class name.
Adds the given class loaders to the list of classloaders to be used in the deployment
Unbinds the component with the given name.
Lookups the object in the tree with the given name.If the name is empty,
Returns a list of all the names in the tree under the given name.
Get a list of bindings for the given name.
Add a context handle factory to the context handle factory map.
Save the given context into the given context service.The context will be saved in the context
Creates an IO subsystem if it does not already exist in the resource tree.
Creates the welcome content handler for the undertow subsystem and adds it to the migration operations.
Gets a bean from the pool.If the pool is empty, the bean is removed from
Calculates and stores the map of operation analysis results.The operation analysis results are stored in the
Collect all resource metrics for the given resource and management resource.
Prepare the deployment unit and return the deployment unit.This method is called by the unit-
Deploys the service target.
Publishes the deployment unit to the given target and returns the context of the publish process.
Stop the web application.
Start the deployment.
Register an endpoint configuration for the given endpoint class.
This method is called when the retry timeout expires.If the timeout is expired, it is
This method checks if the given timer is in the active state, if so, and if
Returns the declared methods of the given class.
Returns the declared fields of the given class.
Gets a constructor for the given class with the given parameters.If the method does not exist
Returns the method with the given name and parameter types from the given class.
Adds the messaging-active mq operations to the given operation context.
Checks if the given parameter is allowed in the given resource type.
Migrates the factory for the generic transport to the factory for the given model node.
Cancels the current task, if it is not already cancelled, and returns true if the
Runs the task if the task is not already running, or if the task is already running
Set the type of the database. This method is only called for internal access.
Returns true if the function can be executed without index, false otherwise.
Recursive method to find all classes in the given directory in the given class loader.
Returns a list of classes that implement the given interface on the given package.
Returns the multivalue type for the given field.
Evaluates the condition and returns true if the condition is satisfied, false if the condition is not
Derives the field type from the given field name and the requested field type.
Updates the record in the underlying store, if the record is valid, and the record is
Returns the record for the given orid, or null if the record does not exist.
Gets the minimal set of nodes for a sharded query.This method returns a map of
Given a flattened where clause, returns a new list of expressions that are equal to left.
Adds the order-by projections to the query.
Extracts all sub-queries from the planning info.
Checks if the given RID belongs to the clusters in the given database.
Returns true if the index found for the given query target should be sorted, false otherwise.
Returns true if the hierarchy is a diamond hierarchy, false otherwise.
Returns true if the order direction of the planning is the same as the order direction.
Returns true if the key condition requires multiple index lookups, i.e.
Finds the best index for the given block and type.
Returns a list of index search descriptors that are common to all given index search descriptors.
Creates an instance of the specified strategy.
Check if the user is allowed to access this resource.
Checks if the given resource specific rule is defined in this role.
Returns a compact representation of the server status for a given distributable server.
Initialize the system database.
Loads all local databases from the server instance.
When a member is removed from the cluster, remove the node from the cluster.
Acquires a new lock manager from the Hazelcast instance and returns the name of the lock
Assign a lock manager to the cluster.If no lock manager is assigned to the cluster,
Commits the current state of the transaction, if the transaction is at the end of the transaction
Rolls back the transaction.
Updates the identity after a record commit.
Removes all records from the local cache after a rollback.
Prepare for file creation or replacement.
Atomically moves the source file to the target file, throwing an exception if the target file
Returns a list of patterns that are disjoint from this pattern.
If execute is idempotent, execute only the nodes that are in the involved clusters.
Append a character array to the builder.This method is not thread-safe, it is
Returns true if the socket is connected to the server, false if it's not.
This method merges two byte buffers into a short.
This function splits a 16-bit short into 2-byte shorts and puts them into
Execute the size of the property.The size of the property is determined by the size of
Sets the value of the specified key in the collating set.
Removes the value for the specified key from the cache.
Executes the database command and returns the result as a list of objects.
Executes the query and returns the first result, or null if no result is found.
Creates the channel. This method is thread-safe, so it can be called multiple times
Checks if there is enough space in the given range for the given offset and length.
Replaces the content of the content file with the given content file.
Executes the specified command on the server.
Ends the current request and releases the write lock.This method must be called after the request
Add the host to the hostname if it doesn't already exist in the host string.
Sends the specified command to the remote node and returns the remote node.
Get the database owner.
Returns the connection object for the given channel ID and protocol.
Kill the given connection.
Interrupt the connection for the given channel id.
Disconnects a connection from the server and removes the connection from the session.
Pushes the given distrib configuration to the clients.This method checks if there are any
Swaps the entry at the specified index with the given new value.
Releases all locks held by this instance of the database.
Synchronizes the schema of registered entities.
Update the metadata for the given name and type.If the description is null, the metric
Move to the last record in the cluster.
Returns the next character in the input stream.
Execute the sub-query and return the record IDs.
Set the callback to be invoked when an asynchronous replication error occurs.
Registers a new compression class with the registry.
Returns the limit for the number of open files in the database.
Returns true if this expression allows an indexed function execution on the given context and right operand.
Move the buffer to the specified position.
Fills the buffer with the specified filler.
Execute the next step until a return value is found.
Executes all steps until a return value is found.
Evaluates the condition and returns true if the condition is met, false if the condition is
Execute the OSQL query and return the result.If the query is executed successfully, the
Loads the ORecord from disk and loads it into the ORecordSet.
Parses the request and converts it to a response object.
Execute the request.
Update the schedule starting at the given start node and all the edges in the visited edges.
Adds an index definition to the list of indexes.
Splits the expression into two aggregate projections and returns the resulting projections.
Determine the proper type for the document or map based on the class name of the document.
Get the collate for the given document.
Returns the value of the field, or null if the field does not contain a string.
Advances the probe to the next state, and returns the index of the next state.
Executes the database command and returns the result as a java.sql.Statement object.
Build json object from json file.
Check if the password matches with the hash of the given password.
Creates a hash string using the specified algorithm and optionally include the algorithm specified in the options.
Checks if the given algorithm is supported.
Creates a new instance of the index with the given index definition and cluster index name.
Returns an iterator over the vertices in the graph.
Returns a list of all edges in the graph.
Returns the partition key for this task, or null if this task has no partition key.
Gets the distributed timeout for this CRUD task.
Returns the set of features for this graph.
Checks if the changes are filled up to the given page index.
Parses the timeout and returns true if it's a valid timeout, or false if not.
Parses the next word and returns the lock strategy. If the next word is not a lock
Creates a new cluster with the given name.
Free the cluster with the given cluster id.
Starts the profiler. This method is called before the underlying instance is started, so it can
This method shuts down the underlying OrientDB instance and cleans up the profiler.
Create a new instance of the given entity with the given transformer, but with a single entity
Grants access to a specific resource.
Revokes the permission for the given resource type and specific resource type.
Process the result of this filter.If the record is valid, add the record to the
Resets all bits in the bitmap to the initial state.
Returns the index of the specified item in the hash table.
Spins a random number using a uniform pseudo-random number generator.
Create a new index in the current schema.
Drops all related indexes for this class.
Returns the index for this global reference, or null if this reference is not a global reference
Gets the linked class.
Convert this configuration to a stream of ODocument.This method is safe for concurrent access.
Remove a listener from the list of registered listeners.
Registers a database with the OBaseServer.
Timeouts a request for the given message id.
Create a copy of the user database.
Try to merge the contents of the other value into this one.
Replaces the given collection pointer with a new one, replacing it with the delegate collection pointer.
Transforms the result of a method call to a map.If the result is not an array
Execute the CREATE CLAN statement.
Closes all databases in this database pool.This method is thread-safe.
This method is called when the storage is unregistered from the storage manager.
Returns a set of names of all registered function types.
Returns the names of all the collate factories.
Returns a set containing all the command names of all registered command factories.
Get the field size and type from the current position.
Write the status code and the reason to the response.
Write the response headers to the output stream with the given content-type and keep- alive
Write records to the response.
Write the record to the output stream.
Sends an HTTP response with the specified status code, reason, content type and content.
Sends a stream to the client.
Open an OrientDB file.
This method closes the transaction and releases the owner pool.If the transaction is already closed,
Listen for changes on the given collection.
This method is called when a component has completed its operation.If the operation is complete,
Pushes the counters for all components in the current snapshot to the given counters holder.
Push the cache counters holder into the cache.
Pushes the given holder to the storage counters holder of the current snapshot.
Push the WAL to the given holder.
Pushes the counters for the given component to the given holder, if there is one.
Stops the cache flush timer for the given number of pages.
Stops the fuzzy checkpoint timer, and marks the current timestamp as the last checkpoint timestamp.
Stops the full checkpoint timer and increases the count of operations that took place.
Marks the end of the current commit timer and marks it as the last commit time.
Stops the current wal snapshot, if it is non-null, and if it is,
Marks the end of the file for write access.
Parses the given OSQL statement and returns the OSQLStatement object.
Initializes the thread to receive messages.
This method will check if known servers are alive and if so, it will attempt to reconnect
Removes the record from the OrientDB database.If the record does not exist, it
Set the value of a property in this record.If the property is already in the database
Removes a value from the OrientDB record.
Check if the given class name is in the schema.
Returns the cursor if it is not already a cursor, otherwise creates a new one.
Define a vertex attribute strategy.
Define an edge attribute strategy.
Get all the new record entries for the given class.
Get the new record entries by cluster ids.
Add an index entry.
Merges the source set into the target set and returns the target set.If the target set
This method is called when the filter is executed on a single record.This method is called
Checks if the function with the given name can execute the function with the given operator, but
Prepare the keys for insertion into the index.
Writes a page to the buffer at the specified page index.
Reads a page of data from the file and returns it as a byte array.
Truncates the page at the given page index.
Open the file for reading and writing. This method must be called before the file is open
Checks if replication is active for the given cluster and local node.
Returns the new node strategy.
Checks if the execution mode is synchronous or not for the given cluster.
Whether to read your writes for a specific cluster.
Get a map of cluster names to a list of servers.The cluster name is the name
Returns the set of servers for the specified cluster names.
Checks if a server is contained in a cluster of a list of clusters.
Returns true if the given server is contained in the given cluster.
Returns the list of servers that are configured for the master.
Returns the set of all configured servers.The returned set contains the names of the configured servers
Get a list of cluster names that are on the given server node.
Get the list of cluster names owned by the given server.
Returns the owner of the cluster.
Returns the cluster owner for the specified cluster name.If the cluster owner does not exist,
Returns the list of servers configured for the given cluster.
Get the list of registered servers.
Returns the set of all data centers defined in the DCS configuration file.
Returns the number of servers in the given data center for the write-quite configuration.
Checks to see if the cluster is sharded or not based on the cluster configuration.
Returns the list of servers configured for the given data center.
Get the data center of the given server.
Returns the value of the global read quorum for the cluster with the given name.
Returns the write quorum for the specified cluster and total number of configured master servers.
Get the cluster configuration for the cluster with the given name.
Gets the configuration for the data center.
Clear the initialization stack of the active graph and remove it from the activegraph.
Returns an index instance for the given index name, or null if the index does not exist
Drops the index with the given name.
Adds a new vertex to the graph, creating it if it doesn't already exist.
Adds a new edge to the graph.If the edge is already in the graph, it
Returns the vertex with the given id.
Returns an iterator over all vertices of the specified class.
Returns an iterator over all edges in the graph whose class matches the passed class name.
Returns the OrientEdge with the given id.
Use this method to reuse an existing database.This method is useful when you want to reuse
Shuts down the database, optionally committing the transaction if requested, or rollbacking the
Returns the base type of the vertex.
Returns the vertex type corresponding to the given type name.Returns null if the type is not
Creates a new vertex type with the specified class name and the specified number of clusters.
Drop the vertex type with the given name.
Get the Orient edge type for the given type name.
Creates an edge type with the specified class name and number of clusters.
Get the element with the given id.
Drops the index for the element with the given key for the given element class.
Remove the given listener from the list of registered background exception listeners.
Notifies all registered listeners, that an exception has been caught during the background data flush.
This method stops monitoring the state of the thread.This method must be called only once.
Registers the MBean with the JMX server.
Unregister the MBeanServer with the given storage name and storage id.
fetches the write cache counters from the cache and updates the cache counters holder.
Fetches the system counters from the counters holder.This method is used to fetch the system counters
This method fetches the component counters for the given component.
Returns the value of the property with the given name or the given default value if the property
Detaches the specified POJO from this proxy instance and returns the detached instance.This method
Returns the version of the given POJO, or null if the object is not in the
Execute the given command on the underlying sql session and return the result as a ResultSet object.
Sets the dirty state of the specified POJO to the value of the dirty flag.
Sets the dirty status of the specified POJO to "UNdirty".
Returns a set of all the index types in the registry.
Returns the list of index engines for all registered factories.
Returns a list of nodes that do not exist in the cluster.
Gets the list of conflict responses.
Returns the index of the first group with the most coherent responses.
Computes and returns whether the response should be returned, or not, depending on whether or not
Gets the list of responses received from the server.
Executes the given statement and returns the result of the statement, or null if the statement is
Returns true if the operator allows to execute on the given target object, false otherwise.
Returns the library for the specified database and language. If the database is null, then the
Release the database engine for the given language and database name.
Returns the next position in the cache, starting from the first page in the cache.
Updates the size of the bag, and returns the new size.
Returns the value of the entry at the given index.
Returns true if the index can be used as an order by after filter, false otherwise.
Returns the index of the first character in iToFind in iText starting at iFrom
Jump to the beginning of iText within the current position, looking for white space.
Returns the index of the next character in the jump chars, or -1 if the jump
Sets the fetch plan to use for the query.
Enqueues a record for the given cluster position.If the record is not in the cluster
Cancels the given repair record if it is not already in the cluster.
Enqueue the repair cluster for the given cluster id.
Returns a map of node alias to the set of dependences that match the given pattern.
Create an instance of the specified POJO class.
Registers the given list of entity classes with the given class loader.
Registers the specified entity class with the class handler for all fields of thegiven class.
Sets the class handler.
Acquires a database from the database pool.
Returns the number of available connections for the specified user.
Acquire a database from the pool.
Execute the UPDATE statement.
Lookup provider with orient class loader.
Checks the cache memory configuration and warns if there is a problem.
Convert a JSON vertex to a Son Graphviz Vertex.
Convert a JSON edge to a GraphML edge.
Creates a new Graphson object from the given element and converts it into a Graphson object
Create an ObjectNode from an Element.
Execute an OETL import on the specified server.
Get the status of the current job.
Returns the map with the data center of active servers, and the data center of active servers
Helper method to separate the algorithm from a cipher transform string.
Creates an instance of the class from the given key config.
Creates an OKey from a file in the system environment.
Creates an HMAC-SHA256 hash from an input stream.
This method encrypts the given byte array using the secret key and returns the result.
Saves the key to an output stream.
Save the keystore to an output stream.
Set the child to this node.
Adds the given object to the list of unique result.
Get the value of this field as an object or a map.
Authenticates the user with the specified username and password and returns the user id.
Get the value of the specified key in the specified map.If the key is a string
Returns the record that is currently in the cache, or null if there is no record.
Read the current record from the input stream.
Returns an OrientDB graph based on the user and password.If the pool is not
Returns a no-tx graph if the pool is not null, otherwise returns a new graph
Setup the pool for this OrientGraphFactory.
Gets the value of the property with the given name.
Stops a transaction, committing the transaction if necessary, and rollback the transaction if necessary.
This method returns the next token in the source, or null if there are no more tokens
Returns the token at the given index, or null if there is no such token.
Returns an iterable over all the vertices in the graph in the specified direction.
Removes the vertex from the graph.
Adds a new edge to the graph.
Adds an OrientEdge to the graph with the specified label and inVertex and iClass
Get the connection class for this direction and field name.
Returns the connection for the given field name and class names.
Read all records in the JSON file and add them to the set of broken rids.
Returns a map of methods that can be invoked by the console.This map is used to
Executes the given task on the local node.
Returns the number of nodes that are in iNodes with the given status.
Sleeps for the next retry.
Get the argument at the specified position.Returns null if the argument is null or empty.
Check if any of the names in iNames are in request.parameters.
Connect to the server with the given username and password.
Returns a map containing the names of all databases in the system.
Get server information.
Check if a database exists in the specified storage type.
Drops a database.
Freezes the database.
Releases a database to the specified storage type.The storage type must be one of ODatabase
Returns the status of the current cluster configuration.
Returns the current graph, or null if the graph is not in the database.
Parses the retry count and the wait time for the next word.
Create or update a single record in the database.
Delete this record from the database.
Returns the authentication header for the given database name.
Authenticates the user with the given username and password and returns the principal.
Checks if the given user is authorized to access the given resource.
This method is called when the server is starting up.This method will be called by the
Adjust the position of the beginning of the line and column of the buffer to match the new
Sets the value of the given bucket pointer at the given page offset in the given value.
Returns the pointer to the bucket at the given offset, or null if the bucket does not
Marks the end of the current atomic operation.If the current atomic operation is not in
Acquires an exclusive lock and adds it to the list of locks in the given operation.
Changes the maximum amount of memory that can be read from the cache.
Listen for incoming connections to the specified host and port.If the socket is already listening for
Read the configuration from the server configuration and add it to the parameters array.
Shuts down the log manager if the log manager is configured to be shut down.
Adds an item to the cache.
Removes the object with the specified key from the cache.
Acquires an entry from the cache, or returns null if the lock is not held.
Returns the value associated with the given key, or null if the key does not exist.
Clears the contents of the cache and removes all entries from the LRU list.This method
Closes the entry for the given key, returning true if the entry is closed, false if
Resets all read buffers to the beginning of the thread-local state.
This method is called after a task has been written to the state buffer.
Put the entry in the read buffer, and drain the read buffer if needed.
Put the given entry in the read buffer at the given index.
Returns the index of the closest power of two greater than or equal to the given value.
Called when a push request has been received from the server.
Converts the value of the specified key into an enum value.If the value is already in
Attempts to convert all the values in the underlying map to the correct enum type.
Gets the object serializer for the given type.
Initialize the shutdown queue.
Returns the engine with the given name, or null if the engine is not found.
Add a new state to the list of read-only readers.
Authenticates the given authentication token.If the token is invalid, throws an exception.
This method creates the metadata for the identity class in the database.
Try to acquire a read lock.
Get the vertex in the specified direction in the current graph.
This method returns the id of the current element, or null if there is no element.
Sets the value of a property in the graph.
Removes the property with the given key from the graph.
Removes all entries from the cache from the root bucket.
Deletes this bucket from its root bucket and all sub-trees.This method is thread-
Called when the engine is finished.This method should only be called after the engine has completed
Creates a new vertex if it does not already exist in the graph.
Parses a strategy keyword and returns true if the word is not recognized, false otherwise.
Reads a list of record positions from the embedded collection.This method returns a list of record
Execute the query, returning the result of the query, or null if there is no result
Checks if the field value is a valid ORID and if it is a persistent record.
Fill the specified record with the data in the specified byte array.
Set the current version of this record.
Get the record type.
Initialize the database instance.
Prints the stack trace for the given exception.
Convert the value of the passed key to a record.If the key is an ORID
Register a command instance with the server.
Create a user configuration object from a OUser.xml file.
Analyzes the given condition and returns the list of index results.
Create an indexed property from the given condition and the item.If the item is not a
Attaches the given object to all the fields in the class hierarchy of this object.
Get the index class for the given class name, or null if the class name is not
Finds the next value in the list and returns the new value if the current value is not
This method truncates all data associated with this class and all its subclasses.
Add a base class to the list of subclasses.
Add the polymorphic cluster ids of the given base class to the polymorphic cluster ids.
Convert the linked record to a stream and add it to the buffer.
Releases the given pointer back to the pool.
This method checks if memory leaks are detected, and if so, there is an error
Clears out the cache and deallocates all of the allocated memory.
Convert a big-endian 32-bit unsigned integer from a byte array at the given offset
Invoked when a database is opened by the local server.This method checks if the database is
Install clusters of the class in the database.
Dumps the current status of the servers in the local node.
Returns the index of the first object in the array, or -1 if the object is
Returns the index of the given object in the array, or -1 if the object is
Returns a list of clusters involved in the target database.
This method is called when a record is added to the result set.This method is called
Returns the temporary RID of the parent query.
Report the tip for the given message and add it to the list of tips in the context
Parses a fetch plan.
Parse no-cache or not-cache keyword.
Optimize the sorting of the given schema class, returning true if the sorting was successful.
Returns the current status of the batcher.
Executes the command and returns the result.
Called when a JVM error occurs during the creation of the database.This method will be called
Puts a value for the given key in the given index, using the given validator.
Rolls back the current transaction to the specified micro-transaction.
Executes the specified command and returns the result of the execution of the command.
Registers a cluster and returns the id of the newly created cluster, or -1 if the
Sets the value of the property with the given name. If the value is null, the
Executes the CREATE CLASS statement.
Executes the update.
Deletes the record from the ORID store.
Call the registered hooks for the given type and record.
Delete an ORID record from the store.
Counts the number of instances of the view with the given name.
Counts the number of objects in the given class.
Activates this object on the current thread.This method must only be called when the current
Registers an instance of the given encryption class with this factory.
Returns the index of the relative chunk that contains the given position, or -1 if
Parses the next word and returns it as a string, or null if there is no word
Parses the next word and returns it as a string.
Returns the number of characters read from the input stream until the next character is found.
Parses the next word and returns true if the next word is a keyword, false otherwise.
Checks if the passed character is a separator in the given string.If not, returns false
Execute the SELECT statement.
Clear the configuration files.
Returns the offset of this buffer, or -1 if the buffer is empty.
Returns the token value for the given token type and the token value for the given token type
Acquires an access token from the user's access token provider and returns the access token.
This method copies the access token from the current authentication context to the current context.
Returns true if there are no more characters in the buffer, false otherwise.
Reads a single line from the given byte array and returns the number of bytes read.
Skips the given number of bytes from the input stream, returning the number of bytes skipped
Ensures that the given array length is not less than or equal to the given offset and length
Swaps the two values of the given swapper with the given number of elements.
Murmur-Hash algorithm for a 32-bit integer.
Murmur-MurmurHash algorithm.
Writes the contents of the given byte buffer to the underlying stream, returning the number of bytes
Truncates the file to the specified size, truncating the file to the end of the
Changes the current position of the underlying stream to the given new position.
This method will try to refresh the end metrics reporting, and if it fails, it will
Waits for all tasks to complete, and then waits for all tasks to complete.
Returns a stream of objects that contains the matches for the given query, or an empty stream
Returns a set of all types that should be considered to be compacted.
Clean up old snapshots if the number of snapshots to keep is less than numOfSnapshotsTo
Returns the hashCode of the field at the given ordinal and field position.
Removes references that are outside the closure of a referenced schema that is not referenced in the closure
This method is called when a new HollowReadState is received.This method should be
This method is called when a cycle is completed.
Reads the header tags from the data input stream and returns the header tags as a map.
Extracts the primary key from the given object.
Clears all values in all segments.
Reads the ordinals from the given data input stream and notifies the given listeners.
Returns the total number of bits used in the sparse set.
Gets the field value for the given row.
Copies length bytes from the source byte-data to the destination byte-data.
Copy length bytes from srcPos to destPos.
Compares the specified range of bytes with this array and returns true if the values are equal.
Copies bytes from one byte array to another segmented byte array at the specified position.
Returns the number of bytes copied from srcPos to destPos in the same order as the
Reads data from the given input stream.
Writes the given number of bytes to the given output stream, starting from the given position.
Ensure that there is enough space in the array for the segment at the given index.
Returns the position of the field in the list, or -1 if the field is not
Calculates the number of buckets that should be deduplicated, and returns the total number of
Checks if there are any collections in the data set.
Generate the files that are used by the Hollow schemas generator.
Generate the hollow schema files for all the Hollow schemas in the given directory.
Returns true if the keys for the given ordinal match at least one of the specified keys.
Returns an array of values for the specified ordinal in this record.The order of the returned
Creates a field path for the given type and primary key.
Returns a field path for a Hollow Dataset's hash index field.
Adds the given object to the cache, and associates it with the given ordinal.
Initializes the field path with the last ref type in the path of the field path.
Returns true if the given key exists in the prefix map, false if it does not.
Adds a new field to the specified type.
Returns a list of HollowSchemas ordered by their names.
Initializes the class with defaults for the next major version of the JavaFX JavaFX class.
Returns the value associated with the given index, or -1 if the index is out of
Finds all matching records for the given field name and value.The matches are returned as a
Find all matching records for the given type, field name, and field value.
Sets the paths for the elements to match.
Sets the element key paths.
Restores the data model from the latest version of an announcement, if the latest version is
Runs the cycle through the populator and notifies the registered observers that the cycle has completed.
Mark the specified key as excluded.
Removes all objects that are referenced by this HollowReadStateEngine that have been marked as
Write the HollowBlobHeader to the given stream.
Calculates the heap footprint and populated ordinals for the given HollowReadState engine.
Writes the contents of the field data to the given byte-data-buffer.
Write a fixed-length 32-bit int in the given byte-data buffer.
Write a fixed-length 32-bit long to the given byte-data-buffer.
Return the given ordinal to the pool.
Sort the free ordinals in the order in which they appear in the freeordin
generates a hash code for the given key and field type.
Calculates a hash code for the given key and field type.
Resizes the storage by resizing all elements of the current node to the new size.
Finds a free ordinal for the given preferred ordinal, or the first available ordinal if the preferred
Prepares the cache to be used for writing to a file.
Returns true if the key is in the serialized byte array, false otherwise.
Grows the key array by a smaller number of pointers and ordinals.
Computes the hash code of the previously-added data for the given key, and returns the
Returns an empty key array with the given size.
Returns true if the fields in this traverser are equal to the fields in the otherTravers
Find the matching object for the given key, or null if no matching object is found.
Creates a new ReadStateHelper with the swapped version of the current and pending state.
Returns the number of elements in the hash table.
Runs the Hollow compaction cycle for the current ReadState.If the current ReadState is
Write a snapshot of this HollowSchema to the given output stream.
Writes the delta for all changed types to the given output stream.
Adds the given schema names to the given set if they are not a primitive or a collection
Normalize a field path to a parameter name.If the field path does not contain a parameter
Rebuilds the Hollow hash index.
Searches the hash table for matches for the given query and returns a HollowHashIndexResult
Trigger an asynchronous refresh with a random delay.
Triggers refresh of the HollowClient with the specified delay in milliseconds.
Adds a new HollowTypeDiff to this HollowTypeDiff instance and returns it.
Writes the given 32-bit integer to the given output stream.
Writes the given 32-bit int to the given byte array at the given position in the
Reads an integer from the given input stream.
Read the next 32-bit long from an input stream.
Adds a view to this view's view group, using the given params.
Updates the size of the loading views based on the pull to refresh scroll direction.
Update the UI.
Called when a pull event has been received from the server.
Adds a new fact to the grammar.
Add a list of facts to be included in the resulting rule.
Creates a new rule builder for the given rule class and action type.
Creates a rule builder for Golden rule.
Return a builder with the fact type set to the given fact type.
Returns a builder for this rule with the specified result type.
Creates a new rule using the given rule name and the given value.
Creates a rule builder for the given name and a list of facts.
Creates a new rule builder for the then operator.The action will be invoked when the builder
Returns a new instance of the specified rule, or null if the rule cannot be created.
Returns the first annotated field of the given annotation, or null if no field is found.
Returns the first method annotated with the given annotation, or null if there are none.
Gets the annotation for the given annotation and class and returns the annotation if it exists, or
Registers the given audit rule in the audit map.
Updates the status of the rule in the audit map with the current thread's id.
Returns a map of rule names to rule status.The map key is the rule name and
Creates a new RuleBookBuilder with the given result type.
Adds an action to the rule that will be invoked when all values have been mapped to the
Adds the given action to the list of actions to be performed when the rule is complete.
Resets the value of this property to its default value.
Returns a RuleBookRuleWithFactTypeBuilder instance for the given fact type.
Returns a list of all POJO rules found in the package.
Read the next line and check if it is an end table.If it is, return
Convert the list of services to an array of services.
Get the list of ports from the build configuration.
Extracts the list of ports from the configuration file.
Parses the port mapping string and returns a ServicePort object.
Adds the given port to the given list only if the port is not null.
Returns the shift port, or null if there is no shift port in the list.
Add the missing service parts to the service builder.
Create an image stream resource and append it to the given target file.
Checks to see if the given port matches the given port string or a port number.
Converts a service name into a port string or returns an empty string if the service is not
Helper method to get the host and port for the given service name.
Puts the value into the map if it does not already exist in the map.
Merges the given map into the given map if the key is not in the given map.
Returns a new Map that is the union of map1 and map2.
Put all of toPut into the ret map if toPut is not null.
Waits until the pod is ready or the timeout is reached.
Validates that the current value is a valid kubernetes id.
Convert the given entity to a List of HasMetadata objects.
Gets the resource version for the given entity.
Check if the pod is ready to run or not.
Get the current context from the configuration.
Checks if the given list builder contains a route with the given name.
Checks if there is a resource in the compile class loader for the given paths.
Reads a fragment from the given file and returns the result as a Map.
Convert a map of env variables to a list of env var objects.
merges two resources into a single one.If the two resources are deployment, they will
Merges the override map with the original map and returns a new map with the merged values.
Returns true if the pod spec has a container with a local image.
Read a configuration file and return it as a map, or throw an exception if the file
Add a port to the given map if the port is valid.
Get the docker.json config string for the given server.
Get the plugin configuration for the given system and id.
Returns the secret configuration for the given id.
Download the given URL to the given target file.
Compares two version strings and returns the number of differences, or -1 if the strings are
Blends a profile into a processor configuration.
Looks up a profile by its name in the given directory and returns the profile.
Reads a profile from the classpath and returns it as a list of Profile objects.
Read all profile from the classpath and return a list of profile objects with the given name.
Finds the first profile file in the list of profile filenames, and returns it if found.
Returns a list of paths for all profile files with the given extension.
Read a list of profiles from a YAML input stream.
Gets the image pull policy from the resource config.
Returns true if the shift mode is open, false if it is not.
Get the replica count from the xml resource configuration.
Returns the first child element with the given tag name or null if there is no child with
Installs the given template into the OpenShift server.
Removes all tags with the given tag name from the given list of tags.
Creates a namespace if it doesn't already exist.
Adds a project to the project's collection of projects, and returns true if the project was
Apply a project request to OpenShift.
Returns the namespace for the given entity, or the default namespace if no namespace is specified.
This method is called when an error occurs during the execution of the application.This method is
Creates the list of kubernetes resources for the namespace specified in the configuration.
Enrich the builder with the namespace of the first item in the namespace of the list.
Returns a map containing the environment variables for the java main class.
Converts a duration string into a number of seconds.Returns null if the duration is null or
Converts a duration string into a duration in the format expected by the java.util.Time
Scan the build output directory and return the names of the files that match the patterns.
Disables the openshift features for the given apply service.
Checks if the given service has any of the rules in the given list of ingresses.
Parse the mapping file and return a map of file names to a list of file types.
Returns the default icon for the current project.
Copy all the app-config files from the app-build directory to the app-config
Loads properties from the given resource.
Gets the version of the spring boot dependency.
Enriches the kubernetes list using the enrichers defined in the processor configuration.
Gets the raw processor configuration.
Returns a flattened map from the given source map.The returned map is a copy of the
Returns a singleton template for the given kubernetes list.
Gets the build reference date.
Returns the value of a property. If the property is not found, returns the default value
Returns a map of the configuration values for the given name, or an empty map if
Prepares a list of named processors based on the given list of includes and returns a list of
Adds the from image to the builder.
Returns the default value for from selector if the mode is OpenShift and the from selector is
Gets the name of the image to be used.
Get the registry to use for the current project.
Returns true if the device is online, false if it is not.
Returns the service URL for the given service name, or null if it doesn't exist.
Returns the value of the given property as a Boolean, or from the global properties.
Creates a new JestClient based on the given URI.
Creates a new node and starts it.This method returns the node's id.
Scans the classpath for plugins and returns them as a collection of classes.
Creates an AmericanExpressRewardsBalance object from a JSON string.
Gets the rewards balance for the given nonce and currency code.
Create a PaypalPaymentResource from a JSON string.
Override this method in order to allow the caller to override this method to set the authorization fingerprint
Override post in order to set authorization fingerprint on the POST request.
Create a new VenmoConfiguration object from a JSON string.
Collect the data for all the devices in the fragment and send it to the given listener.
Collect device data from the Braintree and send it to the given listener.
Collect client metadata id and correlationId from the fragment and send it to the response listener.
Get the client metadata id.
Check if the signature is valid for the given package name, subject, issuer and public key
Get the value of a JSON option as a string or the fallback if the option is not
Parses payment method nonces from the payment method nonce collection in the given JSON body.
Gets the browser checkout configuration.
Get the browser Billing Agreement configuration, or null if none.
Sends a GET request to the specified URL and calls the callback with the parsed response.
Sends a POST request to the server and executes the given callback when the request is complete.
Make a HTTP POST request to the given path and return the result as a string.
Approve a local payment request by redirecting the user to the local payment page.
Add a new listener to the Braintree.
Removes the listener from the list of registered listeners.
This method is used to request the billing agreement of a payment.
This method is called when the result of an activity has been successfully processed by the user.
Parses the paypal account response and returns a paypal account builder.
Add a list of words as nouns to the dictionary.
Remove words from a Korean word dictionary.
Convert a sequence of korean tokens into a list of java strings.
Extracts a list of phrases from a sequence of korean tokens.
Takes a list of tokens and returns the result as a single token.
Fetches the contents of the given channel from the given byte buffer and fills it with data from
Join a list of NAL units into a single big-endian byte-buffer.
Concatenates the list of NAL units into a single NAL unit byte buffer.
Returns the profile corresponding to the given integer.
Normalize a set of taps and generate fixed-precision numbers.
Reads the next marker into the given byte buffer and writes it to the given byte buffer.
Reads from the input stream and returns the next marker buffer.Returns null if the input stream
Returns the maximum available frame.
Modify the given file with the given edit.If the file does not exist it is created
Returns the duration of the last edited track, or the duration of the last edited track.
Convert a frame number to a time value.
Convert the given time value to the frame number for the given trak box.
Convert a trak box to an edited version of the given movie timescale.
Get the number of seconds since the last edited time for the given trakboxTrak
Given a movie and a media frame number, return the ID of the frame in the movie
Get the movie time as a human readable string for the movies in a specific frame.
Convert a trakbox timecode to a frame of the given movie timescale.
Formats the number of frames in a timecode, in a human-readable format.
Convert four four-bit integers to a 7-bit value.
Set the value of n-th bit in the list, returning the new value.
Returns true if this color space matches the input color.
Returns the width and height of the specified component of the supplied size, or the supplied size
Creates a MpegTrack for the given input channel.
Reads a 16-bit integer from the cache.
Create a WAV header from the given AudioFormat and the number of samples.
Returns the wav header for a multi-channel wav file.
Parse the AAC configuration from the byte array.
This method is called by the encoder when a new symbol is added to the current state.
Split a movie into two separate edits based on the timescale of the movie and the tv
Decode a single frame from the AAC data into an array of samples.
Set whether the data is little-endian or little-endian.
Deblock the current block on the given left and top-most position of the current block
Encode a single frame using the native color space.
Encode the length of a long value into a Little Endian byte array.
Returns the bit length of the passed in long, or -1 if the long is
Adds a packet to the output stream.
Repositions the file to the beginning of the next byte in the read buffer.
Returns the bit index of the first bit in the range of the specified bit field.
This function decodes the code from the bit stream, and returns the code that was encoded.
Returns a new byte buffer that contains at least mmin and at most mmax bytes.
Returns the frequency of the i-th value in the range [0,1).
Predicts a plane using the reference pixels of the reference pixels of the pixels of the reference
Sets the start of the block to the starting position of the given data point.
Calculates the coeff from the block at the specified index and stores the result in the block.
Divide a block of numbers into 4 blocks.The number of blocks in the block is
concat the bits in the given bits buffer to the end of the current one.
Reverses a 32-bit integer in reverse order using the 32-bit algorithm.
Seeks to the given key frame.
Get the video image as a byte buffer from the video codec and store it in the supplied
Gets the id of the gain change point that corresponds to the given gain change point.
Converts a byte array to an array of big endian integer values, starting at the specified depth
Convert an array of unsigned int values to a byte array at a specified depth.
Write the given AudioData to the given FloatBuffer using the given AudioFormat.
Read a 16-bit floating point number from the given float buffer.
Interleave an array of buffers into a single big-endian long buffer.
This method deinterleaves the input buffer into the output buffer.The output buffer is
Get the size of the video sample.
Build a wipe map.
Reads a UL array from the given byte buffer.
Read a batch of 32-bit integers from the buffer.
Calculate the MV component of a rectangle given its two components.A and B are assumed to
Encode the given picture into an encoded frame.The frame will be encoded using the IDR
Encode an IDR frame into the given byte buffer.
Encode the specified PicImage into the specified byte buffer.The returned byte buffer will be
Returns the list of codecs supported by this library.
Returns a list of the tags supported by all codecs.
Adds the given reference to the list of references, and returns true if the reference was added
This method removes all references from the queue and removes the reference from the queue.
Flushes the cache, removing any references that have been marked as dirty.This method is
Load a JNI library.
Unpacks a library from the classpath and returns true if the library was found, false otherwise
Delete the temporary files in the temp directory.
Get the default layout for the given number of channels.
Get a channel from the layout at the given index.
Create a new MediaPacket.
Gets the version information for the current package.This method is used to get information about the
Returns the default time base.
Create a new demuxer.
Play a video.
Displays the given picture in the given window at the given time.
Creates a new codec descriptor for the given codec id.
Prints the value of the given property to the given print stream if it is not a property
Register a new factory for the given protocol prefix.If the factory is already registered, it
Generates a unique name for the given object.
Create a new MediaAudioResampler.
Gets the value of the supportedVideoFrameRates property.
Gets the list of supported pixel formats for the video.
Returns a copy of the set of supported audio sample rates.
Returns the list of supported audio formats.
Returns a list of all the audio channels that are supported by this audio channel manager.
Sets the value of the specified flag in this object.
Sets the value of a specific flag in this image.
Returns the decoder associated with this swig object, or null if there is no decoder.
Get the demuxer.
Return a collection of the available formats.
Make a filter graph from the internal structures.
Returns the type of this filter, or null if it's not a filter.
Gets a byte buffer from the buffer's internal buffer.
Creates a new AudioFrame from the given AudioFormat.
Resample the picture using the given resampler.
Validates the given image and returns the image if the image is valid, otherwise returns null.
Validate the picture.
Returns the filter graph for the current thread.
Returns a copy of the meta data associated with this object, or null if the meta data
Gets the CPU from the java.arch.cpu.arch.cpu.
Get the CPU from a GNU GNU GNU GNU string
Returns the OS object for the given os name.
Get the OS from a GNU string.
Play a sound from a file.
Loads a library with the given name and version.
Add a library to the list of versions of the library that is currently loaded.
Tries to load a library from a list of candidate libraries and returns true if the library was
Initialize the search paths from the system properties or environment variables.
Returns true if the library is already loaded, false otherwise.
Delete the file from the file system.
Gets the stream at the given position.
Get the muxer associated with this context, or create one if it doesn't exist.
Creates a SetScriptTransaction for the given sender, fee, and timestamp.
Decodes a string into a byte array.
Generate a random seed.The seed is generated by using the SHA-1 hash function.
Get the transaction with the given transaction id from the Waves server.
Returns a list of Transactions for the given address.
Returns a list of transactions for the given address.
Returns a list of the block headers in the range [from,to).
Returns the block with the given signature.
Send the given transaction to the server and return the result as a string.
Set a new script in the given account to the given fee in the given chain.
Compiles the given script into a JavaScript string.
Writes a primitive array to the output stream.
Flushes the output buffer to the underlying output stream.
Writes the given object to memory at the given address and returns the number of bytes written.
Get the FstClassInfo for the last direct class in the configuration and return it.
Writes the given object to the output stream and returns the number of bytes written.
Set the file and file channel to use when cleaning the mmF file.
Returns the specificity of the given class.
Resizes the store to a certain amount of bytes.If the size of the mapped file
Removes the entry with the given key from the cache.If the entry does not exist,
Write a string as anascending sequence of bytes.This is the same as the above
Sets the output stream to be used by this writer.
Create a new FstConfiguration object with the given parameters.
Creates and returns a FstConfiguration instance configured to be used for struct mode.
Calculates the number of bytes needed to store the given object in the file system.
Clears the cache for this FreemoryBuffer.
Returns an FstObjectInput for reading from the given input stream.
Returns an FstObjectInput for the specified byte array, or null if there is no
Gets an FstObjectInput for copying from an array of bytes.
Returns an FstObjectOutput that can be used to write data to an output stream.
Register cross-platform class mapping for the given keys and values.
Returns the full class name for the given class.
Write an int value to the output stream, using the specified byte type and long data.
Write the given long value as a single byte of the given type.
Write a 32-bit int from a long in the current byte array.
Writes the specified number of bytes to the byte array at the current position.
Get an instance of the FstInfo class that is cached for the current depth.
Notifying listeners that an object has been written to the stream at the given position.
Notifies the listener that an object has been written to the specified stream position.
Return the FstInfo for the given FstReferencee and FstClass.
Write an array to the stream.
Sets the string to be a copy of the given string.If the string is null,
Write a primitive array to the underlying output stream.
Finish tracking the current state of this Fst.
Creates a new snapshot of the state of the current state by copying the state of the current
Registers a new object for writing.
Writes the given object to the output, returning the number of bytes written.
Reads an array of bytes from the input stream into an object of the specified type.
Reads an array of bytes from the storage.
Read an int from the input stream.
back up to the specified number of bytes.
Enables or disables the thread pool.
Start the embedded cassandra daemon.
Cleans data embedded in a cassandra session.
Creates a copy of the specified resource in the given directory and returns the name of the copy
Checks if a port is available on the remote host.
Creates a subscriber state with an empty server state.
Creates a map with the name of the op and the descriptor for each op.
Calculates the shape of the output vector.If the shape of the output vector is null,
Returns true if the condition applied on all elements in the linear view is true otherwise false.
Returns true if and only if the condition evaluates to true, else false.
Returns true if the condition is true for all values in the array are true for all values
Perform an OR operation on an ndarray using the specified condition.
Apply the given condition to the given ndarray.
Returns the index of the first element of the array, with respect to the condition.
Convert this array to its flat representation.
Create a FunctionProperties from a flatProperties object.
Convert a collection of FunctionProperties to a flat array of properties, and return the number of
Sets the exception to the given exception.
Sets the throwable associated with the first exception in the queue if it is not already set.
Merges two lists of coordinates and returns a new list with the coordinates in x and y.
Returns a list of lists where each element in the list is a list of elements in the
Converts an ONNX data type to an nd4j data type.
This method should be called when the JVM is shutting down.This method should only be called
Get the current architecture of the current device.
Convert a column of data to an image.
Pooling 2d image.
Creates a new instance of CompressionDescriptor from the given byte-buffer.
Splits the given list into a list of batches with the given partition size.
Validate that all arrays have the same shape and dimension.
Set the data type of this array.
Create an array of numbers with values in [lower,upper) between [lower,upper
Convert a collection of matrices into a flattened matrix.
Computes the bilinear products between the current and the input vectors.
Creates a complex matrix from the given array of data.
Returns the complex value of the given complex number, with the given value.
Compute the complex value of a complex array with the given value in the given shape.
Returns true if the last synced time has passed since the last synced time, false otherwise.
Subtract the component of this complex number from the given component and place the result in the given
Returns the complex tangent of a complex number.
Ceiling a complex number.
Negates a complex number.
Returns the absolute value of a complex number.
Power of a complex number to a complex power.
Binarizes the feature matrix by removing elements that are less than cutoff.
Sample the data set with the specified number of samples.If withReplacement is true, the
Returns the memory footprint of the model in bytes.
Returns a string representation of the given Throwable.
Returns the simple hostname for the given full hostname, or the full hostname if it is not
Convert an array of Strings to a String.
Convert a byte array to a hex string.
Returns an array of strings from the given string, or null if the string is empty.
Splits the string using the given escape char and separator character and returns an array of strings.
Splits a string into a list of strings separated by the given separator.
Returns the index of the first occurrence of separator in the string, or -1 if the
Escapes the given string for use in HTML output.
Joins a list of strings using the given separator.
Convert a string to CamelCase, capitalizing the first word and then capitalize the word
Returns the current stack trace of the given thread.
Inverts the values of an ndarray.
Returns the nth element in the list, or null if n is out of range.
Returns true if the server is on the host side of the server's side.
Returns true if the device is on the device side, false if the device is on the
Create the shape information for the given shape.
Create the shape information for the given shape and order.
Check if the shape is a vector.
Returns the order of the elements in the vector.
Get the offset for the given indexes in the given array.
Convert an array of indices to an array of indices.
Gets the i-th element of this array as a short.
Creates a copy of the data buffer with the given length and allocates a new one.
Copy a block of data from the specified buffer to the specified buffer at the specified stride.
Gets the constant buffer for the given array of float values.
Returns the Kafka URI for the given topic name and group ID.
Performs a power function on an ndarray.The result is a copy of the input array.
Compute the logarithm of the elements of an ndarray.
Maximum function over an ndarray.
Computes the maximum of the elements in the first array and the elements in the second array.
Minimum function with a given number of elements.
Returns the minimum of the elements in the first array, using the second array as the second
Stabilize an ndarray.
Create a new ndarray with the same dimensions as ndArray, but a copy of ndArray
Log Pearson logarithm of an ndarray.
Prepare the bounds of the bounds of an ndarray to be within the bounds of the given bounds
Returns the next data set in the iterator, or null if there are no more datasets
Build an allocation shape from the given data buffer.
Checks if the given name exists in the path of the current OS.
Reads the data from the given input stream.
Sweep the tail of the buffer.This method is thread-local, so it is
Create a ndarray from a npy pointer.
Create an ndarray from a NPY file.
Allocates a page of memory for the given data type.This method should only be called
Attaches an object to this thread-local cache, creating a new reentrant read
Returns true if the server has already started, false if it has not started yet.
Execute an operation on the data store.
Flushes the queue, blocking until the queue is full.
Returns the input stream of the jar file or the file if it's a jar file.
Gets the device associated with the given thread ID.
Attach a thread to a device.
Get the next device for a given thread id.
Returns the name of the current operating system, or an empty string if the operating system is
Calculates the architecture based on the operating system.
Publish an ndarray using the current producer template.The producer template will be used if no template
Creates a new data buffer of the specified type with the specified pointer and length.
Intercept the int data type of the given operation.
Adds the components of the result vector to the component of the component of the component of the
This method processes the message received from the remote node and sends it to the remote node.
Average pooling 3d reduction operation.
Create a depth-wise convolution on the input variables using the convolution function.
Resets the state of this aggregator.This method should be called after the aggregator is reset.
Returns the op class for the given op.
Create a new array for the variable with the same shape as this one, and store it
Returns the shape of the array.
Evaluates the sameDiff function and returns the output.
Compress a double array into a new ndarray.
Flatten a vector into a vector with the complex exp values of each element in the vector.
Returns the center of the array.
Truncates an ndarray to a dimension of the specified number of dimensions.If the array is
Pad an ndarray with zeros if the shape is the same as the ndarray's shape.
Returns the index of the largest element in the vector.
Broadcast an ndarray to all the devices in the system.This method is not thread-safe
Sends a new vector aggregation message to the remote node and sends it to the remote node.
Rounds the number of significant significant digits in the given decimal context to the nearest decimal.
Calculate the square root of x.
Cbrt-Bessel function for BigDecimals.
Returns the exponential representation of the given context.
Calculates the power of x to the logarithm of the logarithm of y.
Rounds a BigDecimal to the nearest nearest power of n, using the default precision of the
Returns the hyperbolic tangent function of a big decimal.
Calculates the logarithm of the natural logarithm of the decimal value representedby x.
Acosh returns the absolute value of the absolute value of the given BigDecimal.Note that this
Change the scale of a BigDecimal to a given value.
Scale the precision of the given BigDecimal to the nearest multiple of the precision of the given BigDecimal
Convert an error number to the nearest fractional fractional fractional fractional fractional digit.The returned number is
Put the function for the given id.If the function is already in the registry, it
Returns the incoming arguments for the given differential function.
Update the array for the given variable name.
Put a shape for a variable in the graphical model.If the shape is null,
Associate an array with a variable.
Get the value of a property for a given function instance.
Adds a property to the differential function for the given property name.
Add a new outgoing function to the function output for the given variable names.
Adds the args for the given differential function to the given set of variables.
Does the given function have at least one argument in the graph?.
Execute the differential function on the given inputs and returns the results as an array.
Create a new variable with the given name and shape filled with zeros.
Return a new DataSet filled with only the ones that are not in the input.
Returns a new SDVariable with the first dimension set to zero and the second dimension set to 1
Remove the argument with the given var name from the function's arguments.
Sets the gradient for the variable with the given name to the given variable.
AvgPooling3d reduction function.
Create a new SD-Graph Dataset using the given base name and gru configuration.
Execute a list of differential functions.
Creates a while-loop statement using the given condition, loop body, and input variables.
Execute same-diff function, if debug mode is enabled, otherwise execute the same-diff
Executes the function with the given name and returns the results of the cached ops.
Execute the previous function and return the result of the last op, or null if none.
Add the given variable as a place holder.
Allocates a new instance of the given MemoryKind and returns a newly allocated instance of the
Returns the number of bytes required to store the data in the given data buffer type.
Returns a human readable string for the given allocation mode.
Gets the data buffer type from the context.
Returns the number of the op with the given name in the differential function class holder.
Destroy all workspaces for the current thread.
Prints allocation statistics for the current thread.
This method is used to perform a trimesh operation on a vector vector.This method
Computes the covariance matrix for the given variance accumulation and returns the covariance matrix.
Perform threshold decoding on the encoded data with the target data set and return the target data set
Get the name of the node with the given node name.
Apply the operation on the x-axis of the operation to the given dimension.
Asserts that no workspaces are open for current thread.
Returns the negative log likelihood for a given set of labels, alpha, mu, and sigma
Request a tick for the given timeframe in the given time unit.If the timeframe
Try to request toe access.If access state is not TOE_WAITING or
Releases the access to the toe state.If the access is in the toe state
Gets the current access-state, if the current access-state is toe, or
This method is called when a message is received from the server.This method must be called
This method initializes the current data set from a list of data sets.
Initialize the host collectors.This method initializes the unified garbage collection threads.
This method returns the device pointer of the given buffer.This method returns the device pointer of
Synchronize the host data with the data buffer.This method should be called only when the
Apply the update to the given gradient and update the state of the state machine.This method
If the allocation point is not constant, wait till finished.
Creates an array of indices from a matrix or a vector of indices.
Gets properties for function.
Checks if there are any place holder inputs in the args.
Computes the difference between the outputs of this operation and the inputs of this operation.
Format the given INDArray as a human-readable string.
Creates a SameDiff instance for the given graph and creates a new instance of the graph.
Convert an ndarray to a Blob.
Load a complex ndarray from a binary blob.
Saves an instance of the INDArray in the database with the given id.
Copies the real values of the linear view to the given array.
Copies the imaginary values from this linear to the given ndarray.
Adds a complex number to the end of the linear system, where the difference between two numbers
Assign a new ndarray to this ndarray.
Get the rows for the given indices in this matrix.
Adds a row of data to the row map.
Put a column of this matrix into a new matrix.
Subtraction of this vector with the specified result vector and returns the new result vector.
Add the elements of another matrix to the result matrix and return the result matrix.
Subtract two complex vectors and store the result in a new complex vector.
Add another ndarray to result.
Assign a new number to each element in the vector.
Get the diagonal elements of this matrix, where each element in the resulting matrix is a complex
Compute the eigenvectors of the eigenvalues of a matrix.The eigenvalues are assumed to be the
Computes the generalized eigenvalues between A and B.
Returns the index of the largest element in the array, or -1 if the array is
This method copies the data from one buffer to another.
Scales a vector by a scalar.
This method processes a message received from the server.
Counts the number of non-zero weights.
This function performs a reduction on the loss, and returns the loss info for the reduction.
Gets the no-arg constructor for the given class.
Gets a constructor for the given class and all of its parameters.
Invokes the given method handle, catching and throwing any runtime exceptions.
Returns the first annotation of the given type, or null if there is none.
Gets the declared annotation for the given annotation type on the given on class.
Checks if the given class is annotated with the given annotation.
Creates a proxy for the given interference and result.
Load the given entity from the database.If the entity doesn't exist, it will be
Save the given POJO and return the result as an entity.
Creates a proxy for the given memcache service.
Returns the metadata for the given kind, or throws an exception if the metadata does not exist
Query for keys only.
Runs a key-based query and returns the results as a sequence of key-based results
Execute a query on the entity store, and return the results as a list of objects.
Executes the given projection query and returns the results as a QueryResults object.
Returns the number of keys returned by the query, or 0 if there is no results.
Returns an iterator that iterates over the elements in the input iterator in a partitioned order.
Loads the results for the given iterator of keys, and returns an iterator of the results.
Creates a message for the given path and the given message.The path is assumed to be
Create a key for the given POJO.
Compares two objects with the identity hash code of the first object and returns -1 if the
Converts a raw key to a key object.
Converts a typed Key to a Google Cloud Datastore key.
Returns the kind of the given class, if the class is a derived class, or a
Checks if the given type has a missing number of type parameters in it.
Return true if the given type is a super type of the given type, false otherwise.
Returns an array of the direct super types of the given type.If the given type is
Captures the given type. If the type is not a parameterized type, returns the given
Returns the translator for the given type key, using the given context and path.
Get a populator for the given class and path.
Returns true if the given class has an index instruction, false otherwise.
Check if the method is of interest.
Returns a list of all the properties declared in the given class.
Returns the key metadata for the current populator, or null if the populator is not
Gets the value for the given key in the session.If the key is not in the
Executes the query and translates the results if the query needs to be executed.
Fetches the pending entities from the cache and returns them as a Map of key-value pairs
Adds the discriminators of the given class and its superclasses to the list of disjoint
Register a subclass of the given translator.
Returns the component type of the given collection type, or null if it is not a collection
Returns the type for the key of the given map type.
Returns the forward path of the given path, starting from the root of the path.
Returns the path of the final path in this forward path, or null if there is no
Returns a string representation of this tree as a path string.
Returns the depth of this path.
Puts a collection of buckets into the cache, if they are not already in the cache.
Adds the given keys to the cache, but does not remove them from the cache.
Performs a cache put if the buckets are not cacheable and the cache is untouched.
Gets all of the cache entries for the given keys in the given collection.
Returns a set of all keys in a collection of buckets.
Sets the key of this entity to the value of the given pojo.
Sets the id of the given POJO to the given long id.
Returns the parent key of the given POJO, or null if there is no parent.
Registers a subclass of the given type key with the given translator.
Returns true if the two types of the second types can be used as a common subtype of
Transforms the given owner of the given class to the given class.If the given owner is
Returns the annotation of the given annotation type, or null if it doesn't exist.
Adds the contents of the given session to this session.
Load the result for the given key from the cache.
Execute the next round in the queue.
Translates the raw result into a map of key-value pairs.
Fetches a set of entities from the Cloud Datastore and returns a Map of entities.
Load a single entity from the datastore.
Creates a new key with the given parent key, the given kind and the given id.
Returns the raw key of the given key, or null if the key is null.
Returns the id value for the given key, or null if the key is not a valid
Convert the given key to a Google Cloud Datastore key.
Create a new TransactorNo with the same session as the parent.
Creates a new transaction and executes the given work indefinitely with the given parent object
Executes the given work in a new transaction and commit the transaction once the transaction is committed.
Returns true if any of the conditions return true if at least one of the conditionsreturn true
Create a new instance of the class with the same name and type as the current object.
Creates an async datastore based on the configuration specified by the parameters.If global cache is enabled
Returns the metadata for the given entity.
Allocates a key range for the given incomplete key and returns it as a typed key range
Open a new Objectify instance with the given options and transactor supplier.
Remove an object from the top of the stack and remove it from the stack.
Homogenize the indexes of the given list by removing any items from the list that
Returns a new ref with the key and value of the given value.
Get the value for this key, throwing a NotFoundException if the value is null.
Adds a new value to the list for the specified key.
Returns true if the future is done and false if it is not.
Generates an array of conditions for the specified if classes.
This method is called when all of the tasks have been completed.This method will be called
This method returns the container of the specified type at the specified path.
Returns the stat for the given kind.
Unwraps the given exception and throws it if it is not a runtime exception.
Returns the translator for the given type key, creating one if it does not already exist.
Returns a new translator instance for the root entity of the given class.
Creates a new instance of the translator for the given type key, using the given context.
Load the property from the container and put the value into the given POJO.
Returns the value of the property from the given container, or null if the property is not
Sets the value of a property on the given POJO.
Saves the given property into the given POJO using the given save context.
Returns the value of the property, or null if the property is not defined.
Writes the extensions of the given message to the given JsonGenerator.
Writes a content category to the JSONGenerator.
Writes a list of content categories to the JSON generator.
Process the given snippet and return the result as a URL encoded string.
Returns an iterable over the BidResponseBids for the given response.
Gets the bid with the given ID from the bid response.
Updates the bids in the response.
Removes all bids that match the given filter from the given response.
Read extensions from the JSON.
Returns true if the current token is empty or the next token is null.
Registers a new OpenRTBJsonExtReader instance for the specified message class name.
Register an OpenRTBJsonExtWriter for the given message type and field name.
This method processes the bid items in the response and adds them to the given context.
Process the field values for the bid's bid.
Updates all the objects in the given iterable with the given function, and returns true if the
Returns a copy of the list that contains only the objects that satisfy the given predicate.
Get the name of the current element in the parser or an empty string if the current element
Returns true if the next token is a start object.If the next token is not a
Read the next token from the JSON parser and throw an exception if the next token is not
Returns the next token from the parser, or null if there is none.
Writes a boolean field to the JSONGenerator.
Writes a list of strings to the JSONGenerator.
Writes a list of ints to the JSONGenerator.
Writes a list of longs to the given field to the given JsonGenerator.
Writes a list of enums into the given field name into the given JsonGenerator.
Returns a new URL based on the given base URL and the given target URL.
Fixes the target URL for a pure-query URL.If the target URL is a
Get the segments of the host part of the given URL.
Returns the host part of the given URL, or null if it doesn't exist.
Get the content of the specified page.
Loads a list from the storm configuration.
Extract a configuration element from the configuration map.
Get the protocol associated with the given URL.
Generates a WARC file ID.
Returns the refresh url for the given value, or null if the value is not a valid
Gets the metadata for a link between the targetUrl and the sourceUrl.
Filter the given metadata and return a filtered version of the metadata.
Adds a new URL to the queue.
Returns a clean form of the given field name.The field name is case-insensitive.
Get the charset from the BOM of the given byte array.
Gets the charset from the given byte array, and returns the charset if the charset is not
Gets the charset from the meta data.
Returns true if clue is found in the byte array, false if not.
Sets the value for the specified key.
Get the first value from the metadata, or return null if the first value is blank.
Gets a list of cookies from a list of cookies strings.
Check if the cookie domain matches the url host name.
Returns the cache key for the given URL.
Get the cached RobotRules for the given URL from the cache.
Extract the meta tags from the given document fragment.
Acknowledges the given tuple with the given URL.
Returns true if the URL should be filtered out, false if it should be filtered out.
Filter a URL string by replacing all the rules in the URL string with the values in the
Reads the rules from the specified rules file and returns the rules as a list of rules.
This method processes the query elements in the URL and returns the result.
Creates a navigation filters object from the given storm configuration.
Add a record format to the list of supported record formats at the given position.
Throttles the number of queued queries that have been sent to the server and returns the number
Triggers queries if necessary, and returns true if the query should be trigger, false otherwise.
Create a parse filter from the parse configuration file specified in the stormconf.
Append a new node to the current node.
Add a processing instruction to the end of the document.
This method is called when a comment is encountered.This method is called when a comment is
Start a DTD with the given name and public ID and system ID.
Returns the value of the URL field in the tuple, or null if the value is not
Trims the text if it is longer than MAX_LENGTH_TEXT characters.
Checks if a custom interval is present for a given status.
Create a new URL from the storm conf.
Sets the number of items in the wheel.
Resolves the size and state of the given measure spec to the given size and the measure spec
Set the drawable that will be used to display an empty item.
Set the angle of the wheel.
Updates the selected position based on the current angle and the angle of the item being selected.
Invalidate the drawable of the item at the specified position in the cache.If the item is
Convert the raw position to the wheel position.
Updates the velocity based on the current velocity and the currentangular velocity, and updates the velocity
Gets the contrast color for the given material color, based on the entry's color name.
Clamp the given value to the given upper limit.
Write the coveralls.json file and parse the coveralls.
Returns the contents of this Iterator as a byte buffer.The returned buffer will not be modified
Sets the value of the rank-ranked matrix to the given string value.
Create a new ArrayObject with the contents of this array.The size of the array is
Make a char array from a string.
Make a char array from a String array.
Make a char array from a String array of values.
Returns the offset of the forecast time interval of the given Grib2Record.
Show this frame, and move the cursor to the top of the frame.If this frame
Shows the frame if the frame is not iconified, otherwise does nothing.
Make a size estimate for a list of grids in a grid dataset.
Grib1RecordScanner is a simple scanner that scans a Grib1 file.
Creates a new unit name with the given name and plural forms.
Create a new unit name with the given name, plural and symbol.
Makes the plural form of the given name.
Returns true if the given date is included in this interval.
Returns the intersection between this range and the given date range.
Extend this date range by a given date range.If the date range is empty, the
Extend the start and end dates with the given date.If the date is before the start
Sets the start date of the animation.
Set the end date of the animation.
Set the duration of the time series.
Add a new map bean to the map menu.
Print the error message and the stack trace.
Returns the name of this NCData object.
Returns a string representation of this Earth's parameters.
Open a dap file from the given raw data.This method is not thread-safe
Computes and returns the bounds of the given lat-lon rect using the given horizstride
Synchronize the min and max and duration fields with the date range.
Computes the unlimited chunking for the given list of dimensions.If the unlimited chunk
Register a new directory with the file system watcher.
This method processes all the events in the queue.This method should be called in the
Wrap a NetCDF dataset with a feature type.
Returns true if the feature type is ok for the given feature type, false otherwise.
Finds the feature type of the feature file in the provided netcdf file.
Writes the HTML representation of the given catalog to the HTTP response.
Convert a catalog to its HTML representation.
Get the user css.
Get the user head for the TDS web application.
Make a dynamic catalog from the given path and base URI.
Adds the global services to the catalog.
Sets the credentials provider and user agent for the HTTP client.
Gets the content of a request as a string using the given session and urlencoded.
Puts the content into the specified URL and returns the HTTP response code.
Get the front page for the given DAP request and DAP context.
Creates a new catalog for the given URI.
Extract the geospatial coverage data from the GDS coordinate system.
Get a single Grib Dataset from the GribCollectionImmutable.If the GribCollection
Returns true if this vertcoord value is nearly equal to the supplied vertcoord value.
Create a unit ID from the given name, plural and symbol.
Parse a GradsAttribute from a string.
Reads the top element of the file, and returns the position in the file.
Convert a two-byte shorts to a four-byte int.
Convert a byte array into a 32-bit integer.
Returns a java.util.Date from the given julian date and milliseconds.
Makes a valid NetCDF object name from the given NetCDF object name.
Checks if the given string is a valid NetCDF-3 object name.
Read the record data from the given structure.
Read a subset of the records in a section.
Fill in any variables that are not in the current record.
Make a TimeStruct from the value in the array at the given time index.
Create a GradsTimeStruct from a Calendar.
Checks if the given string contains one of the time templates in the given string.
Adds a function to the list of functions to be applied on the server side.
Returns the boolean function with the given name, or creates one if it doesn't exist.
Get a BTFunction instance by its name.
Loads a new function with the given name and adds it to the list of registered functions.
Returns the level name for the given grid record.
Get the level description for this grid record.
Returns the level unit for this grid record.
Returns the projection type of the specified griddef record, or -1 if there is no
Returns true if the grid record is a vertical coordinate.
Returns true if the grid record is a layer.
Make a coordinate transform from a netCDF Dataset and an AttributeContainer.
Create a new Dataset with a dummy transform variable.
Create a projection from a coverage coverage transform.
Example of how to get the preferences from the file system.This is the main method.
Saves the current state of the collection table and the current split to the preferences.
Returns a copy of this chronology with the time zone set to the specified time zone.
Write a count to the file.
Write an array of values to the serial port, using the given daptype.
Writes the specified number of bytes to the output stream.
Write the given byte array to the output stream.
This method is called at the end of the init phase, so that it can be used
Creates a new CalendarDateRange from a DateRange.
Creates a new Grib2GDS instance.
Parses the text using the DDS parser and returns the number of times the text was parsed
Parse the given text, using the given DASParser object and return the number of parsed
Swaps the header of the grid.
Reads a grid of floats from the input file.
Prints a list of grid records in the specified IDAS file.
Write a method declaration to the output file.
Write the headers and ss.xml file to the output file.
Writes the list of operations to the output file.
Reads all files in the directory and executes the given closure for all matching files.
Scans a log file for log entries and passes them to the given closure.
Returns the grid packing type for the given grid number.
Finds a grid record for the given parm.
Returns a 2-dimensional floating-point representation of a word in a 16-bit decimal
Unpack data from the grib1.data file.
Calculate the DP-UGRB for the given input data and the given parameters.
Unpack the Grib1 binary data from the Grib1 binary binary data.
Unpacks a Grib2 record from the file and unpacks the data into an array
Print all the grids in the grid index to standard out.The grids are printed
Reads the next byte from the input stream.
Creates a new calendar date from the given arguments.
Create a new calendar date from the given java.util.Date object.
Get a calendar date from milliseconds since January 1st 1970.
Creates a CalendarDate from the given calendar and the given millisecond.
Parses a string containing a date unit and returns it as a CalendarDate.Returns null if
Gets the difference in milliseconds between two dates in this periodand returns the difference in milliseconds.
Create an AtomicArray for the given DataCursor.
Sets up the request and response for this send operation.This method will only be called once
Escape the given string so that it can be used in a SQL statement.
Creates a list of slice objects from a list of Rangelist objects.
Unwraps a file if it is a reference to a netcdf dataset.
Returns true if any dimension in the given list is a variable length.
Computes the effective shape for the given list of dimensions.
Add the specified date to the current time.
Multiply this unit by the given unit.If this unit is a ScaleedUnit, then
Divide this unit by the given unit.
Divide the current unit into the given unit.
Returns a new scaled unit which is the same as this unit but with the specified power.
Convert this unit to a derived unit.
Convert an array of float values from this unit to a derived unit.
Convert the given amount to this unit's derived unit.The returned value is the scale of
Returns the canonical string representation of this unit.
Read the data from the input stream.
Read a 2-D coordinate array from the file.
Flattens this collection into a single PointFeatureCollection using a subset of the station features
Find the service with the given name.
Get the gate size for the given datatype.
Returns the starting position of the first gate for the given data type.
Returns the number of gates to be used for the given data type.
Writes the XML representation of a NetCDF Dataset to an output stream.
Get the preferred layout size for all components in the specified container.
Verify that the specified dataset is a descendant of the specified dataset.
Generate a proxy ds resolver catalog for the given crawlable dataset, and proxy dataset handler.
Returns the calendar with the specified calendar name and the given UDUNIT string.
Create a new CalendarDateUnit object with the given Calendar and UDTUnitString.
Creates a new CalendarDateUnit from the given Calendar and BaseDate.
Get the quantity dimension of this factorization.
Returns true if the file is valid, false otherwise.
Read the data in the first section of the given section.The data is read from the
Read an array of integer values from the specified layout regular index and variable.
Read data from a section of a variable and write to a writable byte channel.
Calculates the elevation angle for the given angle.
Calculates the step value based on the given range and the number of bins.
Calculates the azimuth between az0 and az1 in the range [az0,az
calculates the data for the given record header and number of rows and data in the given
Calculate the Nyquist for a given prf and wave number.
Create a vertical transform for the given netcdf dataset and time dimension.
Sets the debug flags to be used for debugging purposes.
Sets whether or not the index should be extended by write or read.
Reads the X and Y values of a grid variable from a range of x, y,
Returns true if the record at the given indices is missing in the given grid variable.
Get the bounding box for this axis, or null if the axis is lat lon.
Finalize the sequence. This method is called when the end of the sequence is reached.
Set the character at the beginning of the given string to a tab stop character.
Pads the string to the specified width.
Returns a string of the given integer with the given number of characters padded to the right.
Pads a long value to the specified width.
Format a size in bytes as a human readable string.
shows d, sigfig in the standard output stream.
shows a 2-digit decimal number in the given decimal places.
Returns a string representation of the given shape.
This method is called by the DAP library when the application is done.This method is
Returns a string representation of the constraint.
This method composes the source slice into the target slice and returns the target slice.
Map the i-th position in the target slice to the i-th position in the
dump bytes in buf0 to buf1, buf2, buf3 and buf4.
Returns the type with the given name or null if the name does not exist.
Returns the type EarthEllipsoid for the given EPSG ID.
Decode the VLEN data from the given DataCol object into a DataArray.
Extracts a list of URLs and text from the given URL.
Gets the text content from a given URL.
Filter the input stream to only those tags that are tagged with a CDM tag.
Reads data from the input stream and writes it to the writable byte channel.
Adds all of the given attributes to the attributes of this element.
Removes the attribute with the given name from the list of attributes.
Remove the attribute with the given name, ignoring case.
Gets the offset in time units.
Add an action source listener to the list of listeners for the event type of the given listener
Liefert ein Date-Objekt in ein Date-Objekt.
Gets the standard or iso date from the given text.
Returns the date origin for this unit, or null if this unit is not a time scale
Returns the date in the local time zone as a java.util.Date.
Convert a double value to a Date.
Make the time unit value from the given date and the origin date.
Makes a standard date string from a double value.Returns null if the value is invalid.
Get grid spacing in km.
Add the grid dimensions to the NetCDF file.
Add a coordinate axis to a netCDF file.
Make the projection based on the type of the given netCDF file and return true if
Adds the specified variable to the list of DVDs for the current thread.This method
Adds a coordinate system variable to the netcdf file.
Create the LWL file for the LWL file and create the LWL
This method is used to make a point on the center of the grid.The point is
Make the mercator based on the grid definition.
Set the dx and dy parameters.
Read a dataset from the catalog.This method reads a dataset from the XML file.
Read metadata content from URL.
Returns the level of the first level of the log message.
Checks if the file is a valid version of the file.
Writes a block of bytes to the underlying output stream.
Set the clear name for this node and all of its child nodes.
Get the coordinate variable name for the given axis type.
Returns the coordinate name for the given axis type and dimension.Returns null if the coordinate name
Builds the XML response for this exception and returns it as a string.
Build a DapException from this DapExceptionBuilder.This method builds the Dap
This method returns a list of all dimensions in the specified level variable.
Make a z-dimension from a list of values and units.
Create a new set of variables for the given dataset and the given dimension level.
Make a coordinate axis from a reference variable in a netcdf dataset.
Bitwise shave the given value if the bit mask is set, otherwise return the value
Writes a grib file to a netcdf file.
Wraps a NetCDFFile in a Dataset if it is not already.
Opens a file in a netCDF dataset and returns a netCDFFile object.
Clears all coordinate systems.
Find the coordinate axis of the given axis type.
Returns the coordinate axis with the given full name or null if there is no coordinate axis with
Returns the coordinate system with the given name, or null if there is no coordinate system with
Returns the coordinate transform with the given name or null if no coordinate transform with the given name
Returns true if any mode in the given set is not already enhanced.
Sets the values of a variable to a new data point.The new data point will be
Sets the values of a variable.
Create an array of the given data type and a list of values.
Returns the index of the vector in this vector.
Returns the path to the existing file, or null if the file does not exist.
Get the list of features that intersect the bounding box.
Calculate the discretization factor for a given vector of values.
Adds a ThreddsMetadata to the collection of ThreddsMetadata objects.
Add a documentation to the list of documentation for the specified type.
Removes all docs for the given type.
Returns the maximum number of bytes in the segment starting at the given starting position.
Checks if the given NetCDFFile is a mine CDM file.
Break up a convention attribute name into a comma separated list of convention names.
Build a convention attribute from a list of convention names.
Build the coordinate systems for the given dataset.
Find the coordinate axes for all variables in the variable list.
Find all coordinate systems in the variable list and add them to the dataset.
Make the coordinate systems for each variable in the variable list.
Make coordinate systems maximal if the coordinate system is not a coordinate system and the coordinate system
Returns true if the given variable is a coordinate axis for the given variable, false otherwise.
Create a subset of the dataset.
Apply a dataset filter to this dataset.
Mark a dataset as read if it does not already exist in the catalog.
Initialize the TDSContext only once, if not already initialized.This method is only called
Counts the value for the given key in this Counter.If the key does not exist,
Adds a name and symbol pair to the list of available prefixes.
Compare this row with another table row at the specified column.
Compare the two boolean values for the specified column.The return value is the index of the
Pass all reserved attributes to the DAP node.
Checks to see if the given time range is valid for the given time duration.
Registers a new DSP class with the dap class loader.
Registers a new DSSP instance with the DSSP registry.
Returns true if the given DSP class is already registered in the registry, false otherwise.
Unregister the given DSP class from the registry.
Get the forecast time interval size in hours.
Returns the time interval offset for the given Grib2Record.
Get the vert unit for a given vertex code.
Sort the nodes in the DAP file in ascending order using the DAP Sort algorithm.
Find a variable in the Dataset that has an attribute with the given name.
Finds a variable in the dataset that has a value with the same name as the given value
Returns the name of the variable with the given attName and attValue in the dataset.
Returns the variable with the given name and value in the given structure, or null if
Returns the first structure in the given structure that is a nested structure.
Returns true if the given dataset has a netCDF3RecordStructure variable.
Get a literal value for a given key.
Get the FeatureType for a given key from a netcdf dataset.
Returns the short name of the variable with the given key, or null if the variable is
Get the value of a coordinate at a particular location in the coordinate system.
Returns the longitude value for the given connect and val.If val is not a number,
Returns the values of the coordinates of this geometric object as a double array.
Returns a new DRange object with the sections of r1 and r2.
Finds the index of the closest point in the run to the given target.
Returns the name of this dimension, or null if the name is not defined.
Adds the given action to the menu.
Returns the last match for the given path, or null if there is no match.
Demonstrates how to use a projection manager.
Returns the index of the first occurence of the given byte array starting at the given index
Adds a source picture to the cache.
Reports the current cache size and maximum cache size to the user.
Stops the background loading of all sourcepictures that have already been loaded.
Stop the background loading of the source picture with the given exemption url.
Make a HTTP GET request.
Make a mocked HTTP method for the given session and URL.The mock method will be
Generate a random number of floats of the specified type.
Returns the number of items in the DAP file, starting at the current cursor position.
Read the data for the given cdmvariable and section, and return the result as an
Returns a file system provider for the given URI.
Read the station table.
Returns the index of the element in the map, or -1 if the element is not
Remove the data variable with the given short name from the list of data variables.
Convert the height of the cloud HGT to meters, if height is not equal to "
This method reads the data of the grid from the input stream, and returns the data in
Set the number of colors.
Calculates and returns the transformation matrix that is used to transform the screen to the world.
Convert a URI to an AuthScope.
Finish the grid. This should only be called when the grid is done, or the grid
Returns true if this factor is the reciprocal of the given factor.
Gets a catalog of the files in the specified directory, filtered by the given filter pattern,
Returns the index of the first instance of want, or -1 if none is found.
Read the metadata content from the given URL.
Reads the metadata content of the mdata element and stores it in the given dataset.
Add the metadata content for the given mdata element and add it to the object.
Validate the content of a MetadataContent.
Read a CatGen configuration element.
Read a dataset source element.
Read a DatasetNamer from a XML element.
Read a dataset filter element and create a new dataset filter object from it.
Read a result service element.
Creates a JDOM2.Element for the CatGenConfig.
Create the XML element for the DatasetSource.
Create the DatasetNamer XML element.
Create the dataset filter element.
Create the XML Element for the result service.
Return true if the flag is set, false if it is not.
Construct a menu from a JMenu.This is the main entry point for this class.
Adds the parameters from the given table to the configuration.This method is only used for testing
Make a GempakParameter from a list of words.
Returns the parameter with the given name, or null if it doesn't exist.
Read the contents of the given input stream into a String.
Reads the contents of an input stream into an array of bytes.The input stream is closed
Replace the file template with the name of the given index in the filespec.
Set the station id and description of the variable in the ND4J file.
Accepts the given buffer and returns true if the buffer is valid, false otherwise.
Gets the bitmap from the given random access file.
Set the NetCDF file.
Set the debug flags to the given flag.
Parse a name and return a Name pieces object.
Returns true if the specified DType is a group type, false if it is not.
Returns the dimension corresponding to the length of the DODS attribute in the netCDF
Gets the dimension in the given group that is shared with the given dimension.
Construct a list of dimensions from a DODS array.
Returns true if the given type is an unsigned type, false otherwise.
Read data from the DODS server.
Get an image icon from a file name.
Get an image from a full image name.
Creates a new cursor with the specified name.
Reads the data of the given layout from the given file, using the given data type and
Read the data from the given data input stream at the given layout index, data type,
Reads the data from the input stream with the given layout, data type and fill value.
Make a primitive array of the given data type, with the given size.
Converts a byte array to a char array using the UTF-8 Charset.
Convert a char array to a byte array using the UTF-8 charset.
Convert a byte array to a char array.
Read a section of a UCS4 file into a UCS4 array.
Create an array structure based on the structure members of the given array structure.
Get a scalar string value from the array at the given record number.
Returns the scalar structure at the given index in the current member array of the given member array
Return an array of the specified recno for the specified member in the current record.
Computes the structure members for the given DAPVariable.
Adds the dimensions of this group to the specified NetCDF file.
Normalize the given path to ensure that it is valid and that it can be used as a
Add a new explicit dataset to the list of explicit datasets for the given cache name and location
Adds a scan to the dataset manager.
This method is called by the task manager after it has completed all the tasks in progress.
Make a set of datasets for the given cancel task.This method should only be used for
Returns the typical dataset for the current dataset mode.
Make a dataset from a string.
Put a resource-control for the given dataset.
Add a point to the curve.
Get the bounding box of this polygon.
Returns the bounding box of the bounding box of the bounding box of this Polygon.
Validates the input and writes the result to the output stream.
Return true if the dataset matches the filter.Return false if the filter does not match.
Adds all features from a dataset point to the set of features in this station.
Parses the constraint expression.
Evaluates the clauses of the given object and returns true if the expression evaluates to true, false
prints a constraint to the given print writer.
Amends a NetCDF file from an ODL file.
Sets the list of dimensions that are shared between the variable and the value of the variable.
Checks if a dimension is in the list of unknown dims and if so adds it to the
Search for a group in the parent group hierarchy that has a group with the given name.
Reads the content of the xlink file and returns it as a String.
Get the standard URI for this catalog.
Sets the projection to be the specified projection class.
Add a component to the layout.
Invalidates the layout of the specified target container.
Removes the specified component from this layout.
Get the minimum layout size for this container.
Apply the layout to the given container.
Checks if the coordinate system is a radial coordinate system.
Returns the maximum radial value for the radial axis.
Convert a geographic longitude in meters to the geocentric coordinates in radians.
Returns the distance from the start point to the end point of the current scan.
Calculates the latitude and longitude of the geos given the lamda goes and the angle of
Convert a scan geometry to a sweep angle axis.
Convert the sweep angle axis to the scan geometry.
Sets the coordinates of the runtimes for this time interval.
Writes a point-observation dataset to a file.
Rewrite point feature dataset.
Returns the sequence for the member with the given name, or throws an exception if the member
Returns the full name of the node.
Returns the unique id for this request.
Returns the access for the given service type.Returns null if the access does not exist.
Returns the dataset with the given name or null if the dataset is not in the list.
Returns the catalog of the parent of this catalog or null if this catalog has no parent.
Returns the list of metadata for the specified metadata type, or null if the metadata does not
Returns the service with the given name, or null if there is no such service.
Returns the set of variables for the given vocabulary.
Returns a list of inv catalog references in a list of datasets.
Escape the given path so that it can be used as a URL path.
Adds a stagger to the end of an array.
Returns a copy of the array with the extrapolates and returns the new array.
Returns the value of the rho given the latitude and longitude of the earth.
Returns the detail info of this object.
Creates a structure from a part name and a list of dimensions.If includeMissing is true
Make a missing variable in the NetCDF file.This method creates a new missing variable
Make a variable from the GempakParameter.
Adds the global attributes to the configuration file.
Returns the size of the variable with the given name, or -1 if not found.
Returns a 1D array of the given data type and the length of the data.
Return the state of the goto state.
Returns an error message for a given token.
prints out the result of a single rule, if debug is enabled, otherwise prints out
Read the DMR data from the DMR output stream.
Read an error message from the input stream.
Reads a number of bytes from the stream into the given byte array starting at the given offset
Reads the flags from the given input stream.Returns true if the flags were read.
Converts an ISO-8601 formatted string into a Date.
Read a table from the specified URL or file.
Transfer a group from one dataset to another.
Returns the stn file for the given location, or null if it doesn't exist.
Creates a new StanfordDataFile from the location specified in the constructor.
Gets the index of the beginning of the given index of this list, or -1 if
Returns the end index for the given index, or -1 if there is no end index
Creates all Grib source files and stores them in the GribCollectionImmutable.type.
Sets the value of the text field.
Get the data type for the given data format.
Returns the altitude and altitude components of a great circle circle defined by the given geodetic
Returns the given unit, or null if the unit is null.Returns null if the unit
Clean the name of the given string by removing any leading and trailing characters from the end.
Checks if the given unit is unit-less, i.e.
Creates a new notes object for the given note sort, type,var,dim,group
Returns the variable id of a given note.
Parse the attribute table from a DAS document and add it to the attribute table list.
Find a dods VNode with the given name in this VNode's children.
Find the DataView that holds the given DDSView and its parent.This is the
Returns the child at the given index or null if the index is out of range.
Get the parent group of this group.
Returns the dimension at the given rank.
Returns the index of the dimension with the given short name, or -1 if not found
Get the value of units attribute for the cdm.units attribute or null if there is
Get the current shape as a section.
Returns a slice of this variable with the specified index, starting at the specified value.
Sets the typedef of the enum data type.
Read the data from the input stream, using the specified ranges as the input ranges.
Read a scalar string from the stream.
Reads the contents of the file into a byte array.This method is used to read the
Reads the contents of the specified section and returns the content as an array.
Writes the CDL file.
Returns a debug string representation of this NetcdfFile.
Sets the data type of this element.
Sets the list of dimensions of this shape.
Reset the shape of this shape to the default one.
Sets the dimensions of this group.
Resets the list of dimensions to the ones that are shared by the parent group.
Sets the dimension at the given index.
Set the data to be cached in the cache.
Get a list of all the dimensions that have been added to the graphical graph.
Sets the bounding box of the bounding box of the bounding box box of this shape.
Sort the grid of the UVs in the UVs in the UVs table.
Returns a list of all the datasets in this collection.
Returns true if the path ends with one of the synextensions, false otherwise.
Open a netcdf file and create a DDMR for it.
Builds the DMR file if it doesn't already exist, and if it doesn't,
Builds the DAP sequence type for the given CDMVariable.The DAP sequence type
builddimrefs the dimensions of a dapvariable to a list of dimensions
Finds a matching enum typedef for the given varenum in the DAP file.
This method returns a list of the core dimensions of the given list of dimensions.
Scans a file for messages in the bufr format and returns the number of messagesfound.
process bufr message as dataset.
This method is called when a new request is received from the server.This method is called
Get the affine transform that will be applied to the image at the given coordinates.
Rotate the area in the map to the given width and height.If the display width and
Get the area of the map.
Converts a world coordinate to a screen coordinate.
Push the current zoom level back to the map.
Zooms the image at the given start point, using the specified width and height.
This method recalculates the bounds of the image from the bounding box of the image
Adds a listener to the list of listeners.
Removes the given listener from the list of listeners.
Send an event to all registered listeners.
Sends an event to all listeners except for the source of the event.
Print the given command to the given writer.
Print out the variable data for the given if statement.
Prints a section of a variable's data to a string.
Prints the structure data.
Prints a plain representation of the contents of an array to the given print writer.
Prints the contents of an array to the given print writer.
Write a NetCDF file as a NetCDF file to a NetCDF file
Read a double attribute from the given attribute container, or the default value if the attribute is
Add a parameter to the coordinate transform if it is not already present in the netCDF
Read an object of the specified type from the DAP data.
Returns true if the given grid record is in a positive up state.
Returns true if this unit is compatible with the given unit.
Generates a label for the given quantity ID.The label starts with the first digit, and
Sets the offset of the bit in the data file to the specified value.
Read nb bits from the input stream. nb must be less than or equal to 8.
read nb bits from input stream, convert to signed long.
Opens a connection to the given URL and executes the given command.
Execute the DAS command and return the output.The output will be a DAS file
get the local projString and localselString from the localprojStringand the localsel
Convert a projection point to a latitude and longitude coordinate.
Extract the IDV dataset catalog from an XML document.
Returns a new DateRange with the start and end dates of the given date range.
Checks to see if the given file is valid.
Handle the information about the spacecraft and norad that are contained in the header.
Read sensor information from header and parse it into a number of samples per band.
Read the root element of the document at the given location.
Cleans the character data that is not valid XML.
Escape a UTF-8 string and return the result as a UTF-8 string.
Escape the given string for use in an URL query.
Unescape the given URL string. If the given string is not a valid URL.
Returns a copy of the string s with all backslash-escaped characters removed.
Escapes a string for use in a URL.
Add the lightning global attributes to the given NetCDF file.
Swap a short from a byte array at a specific offset in the byte array.
Swaps the bits of the given byte array at the given offset.
Swaps the bits of a byte array at the given offset and returns the corresponding double.
Swap the bits of a float.
Swap the bits of a double value and return the old value.
Convert a short value to a byte array.
Convert an int to a byte array.
Convert a long to a byte array.
Create a new vertical transform by applying a subset of the given range.
Write the XML document and return it as a string.
Make a copy of the array of the same shape as s, where the first element is
Write out the start of a WFSXML file.
Writes the features to the WFS file in a human-readable format.
Add the levels of the grid records to the levels list, and sort the levels list.
Add the dimensions of the group to the netcdf file.
Adds the given group to the given netCDF file.
Find the coordinate transform for the given name and level.
Gets the index of the record in the levels array.
Cancels the timer and exits the application.
Get a file for the given file location. If the file does not exist, it is
Gets the existing file or cache the file at the given location.If the file does not
Print the contents of the cache to the given print stream.
Clean up the cache for a given directory and formatter.
Calculate the bearing between pt1 and pt2.
Calculate the bearing between two points, using the default earth and the given result value.
The main entry point for the test program.
Returns the closest point to the given point in the Earth.
Returns the closest point in the region defined by pt1, using az, az, dist
Locate a point in the Earth's great circle defined by lat1,lon1
Load the specified picture in a thread.
Load a picture at the specified URL and rotation.If the picture is already loading, the
Load the picture from the file system.
Stop the loading of the image if there is one.
Stop loading the image with the given exemption URL.
Returns the width and height of the source picture.
Sets the buffered image of the source picture.
Returns the standard URI for this catalog.
This method returns information about the transfer from the list to the given list of data descriptors.
Count the number of bits in the data.
Compares two DataDescriptors and returns true if they are equal, false otherwise.
Load the header from the input stream.
Load the data from the input stream, and return the number of rows loaded.
Returns the data object for the field with the given name, or null if not found.
Get a field as a double array by its name.Returns null if the field doesn't
Returns an array of string values for the given field, or null if the field does not
Returns an array containing all the boolean values of the field with the given name.
Returns the name of the field at the given index.If the index is out of range
Get the names of the fields.
The main method. This is the main method of the DBaseFile class.
Returns a map of DAP attribute names to their DAP attributes.
Sets a new attribute on this element and returns the old attribute.This method is not thread
Remove a DapAttribute from this DapObject.
Returns the DAP group for this DAP file, or null if this DAP file
Get the DAPContainer that this DAPVariable belongs to.
Returns the escaped short name.
Returns the path from this node to the root of the DAP hierarchy of the DAP
Gets the path from this DAPNode to the first group in the tree.
Computes the FDNN for this DapNode.
Builds the DMR from a byte array and the order of the byte array.
Puts a new bean collection under the specified key in this bean bean's context.
Get a list bean.
Returns the value for the given key name, or null if it doesn't exist.
Read data from the specified position in the specified random access file.
Prints the top-level variables of the DSP dataset.The top-level variables are
Print the compound instance.
Writes the contents of the given element to a string.
Write the given element to the given output file.
Writes the given element to the given output stream.
Writes the contents of the given element to the given writer.
Makes a dimension element from the given dimension.
Returns a coordinate transform for the given attribute container and the given units.The coordinate transform is
Returns an array of int values from an attribute in an attribute container.
Create a base unit for the given name, symbol, and quantity.
Returns a copy of the given unit definition with the given name and symbol.
Methode d'ajout d'ajout d'ajout.
Gets the singleton instance of the SIOS SDK.
Finds the element in the axis's coordinate array that contains the specified target point.This method
Finds the index of the closest coordinate to the target coordinate.
Subset the values of the axis with the given min and max values.
Open a feature dataset with the given task.If the task is cancelled, the feature dataset
Open a feature dataset.
Annotate a dataset with the name and ID of the dataset and the ID of the dataset.
Reads the data from the given file starting at the given position, starting at the given
Assembles a URI from the given set of parts, and returns the resulting URI.
Returns the canonical form of the given string if it is not null or empty.
Normalizes the given units string so that it can be used as a unit string.
Finish building the XLink URI from the XLink URI.
Returns the element with the given key in the list.
Inserts the given value into the list.If the value is already present in the list,
Returns the date of the year, month, year and month.
Prints the XML for the given DAPNode and the given DAPCEContext.
Print an XML element with the given name, value pair and the given flags.
Returns true if the given DAP attribute is part of a group or a variable.
Print all dimensions for a given variable.
Checks if the given file is a valid area file.
Set the area directory attributes of the given variable.
Add the nav block attributes to the given variable.
Get the calibrator type for the given cal name.
Set the cal type attributes for the given variable image.
Find lat, lon, time, and elev, in the table.
Returns the full name of the coordinate axis of the given axis type.
Returns the coordinate coordinate for the given axis type, or null if the coordinate is not found
Given a dataset and a axis type, find the coordinate axis that matches the supplied predicate.
Returns the dimension of an axis of the given type, or null if it doesn't exist
Finds the best coordinate system for the given netcdf dataset.
Find the dependent axis for the given axis type.
Get the base type for the given row and column and name.
Reads the marker from the given data input stream and returns it's byte position.
Writes a marker to the given data output stream.This method writes the marker to the given
Example of how to create a JFrame using a multiple-axis chart.This is a
Returns the Java array as a String array.
Returns the parameter list of all sensors in the rad.The parameter list is a copy of
Set the list of stations to be displayed on the screen.
Set the id of the station that is currently selected.
Redraw the image.
Reads a rectangle from an input stream.
Serialize this rectangle to an output stream.
Adds all units from the given DB to this DB.
Adds a unit to the unit set.
Add a symbol to this unit.
Returns the unit with the given ID, or null if it doesn't exist.
Adds a unit to the unit map if the name is non-null.
Adds a unit to the symbol map if the symbol is not null.
Adds the given unit to the given map, throwing an exception if the unit already exists
Adds the current look and feels to the given menu.
Finds a record in the Grib2 file given a relative drs position.
Reads a dataset from the file specified by the datasetName and returns true if the dataset is
Serialize the dataset to the given output stream.
Create a copy of this projection.
Opens a feature-based thredds dataset and returns a thredds data
Open a feature dataset.
Opens a netcdf dataset and returns a NetcdfDataset with the data in the dataset.
Annotate the given dataset with the information in the netcdf dataset.
Add a partition to the partition list.
Make a GribCollection from this Doradus object.
Gets instance to match on dataset name reg exp and duration time coverage enhancer.
Gets instance to match on dataset path.
Writes the XML representation of the given query capability to the specified file.
Read the structure data from the given structure and add it to the given section.
Set the picture to be displayed on the screen.
Set the image to be displayed on the screen.
Zoom the screen to the nearest zoom level.
Paint the component in the context of the specified graphics context.The component will be painted
Returns the fifth of the fifth of the time series.The fif
Converts an array of intds into a string of the format used bythe Tomcat
Gibt die Date in einen Date-Objekt, in ein Date-
Get the day of week from year, imon and dayofyear.
Returns the IVCCRD string for the specified IVCCRD number.
Reverses the values in an array starting at specified startIndex up to but not including
Returns the name of the grid packing type for the given grid packing type.
Returns the data type for the given typrt.
Read data from the given input stream.
Externalizes the contents of this bundle to an output stream.The output stream will be compressed
Returns the TagEnum for the given short code.
Returns the next image in the grid.
Returns the number of elements in the specified DAP type.
Returns the sum of all values in the given array.
Set the bounding box of this shape to the specified width and height.
Sets the overlap of the current region with the specified number of pixels.The overlap will be
Clear all rows in the grid.
Marks the given rectangle as clear if it is within the bounds of the given rectangle.
Finds the intersection of this rectangle with the supplied rectangle.
Returns the intersection of the given point with the current point in the grid.The intersection is
Find the closest point in the grid to the given point.
Returns the squared Euclidean distance between the specified point and the distance between the x and y
Gets or creates a base unit for the given unit and base quantity.
Returns the protocol of the given fragment, or null if the fragment is not valid.
Search for a service path in the given URL.
Decode the path extension and return the service type.
Checks if DODS is in the given location and if so, if so, returns
Send data from a section to an output stream and return the number of bytes written.
Returns the suffix of a fully-qualified name.
Returns the prefix of the given fully qualified name.The prefix is the first character of the
Locates a file in the local filesystem and returns the full path of the file.
Returns the relative path of the given relative path, relative to the given absolute path.
Extracts the bytes from the given byte buffer into a byte array.
Returns the path to the structure of the given variable in the form of a list of variables
Returns a null-safe string for the given path, or null if the path is
Joins the elements in the given array with the given separator, starting at the given index.
Checks if the given path contains a drive letter.
Gets the list of supported protocols for the given URL.
Convert an index into a list of slices based on the dimensions of the given DAPVariable
Returns the slices corresponding to the given offset in the given DAP variable.
Returns true if any of the slices in the given list are contiguous.
Check if a list of slices contains a single point.
Convert a list of slices to an index.
Reads data from the given input stream using the given NetCDF file and returns the data
Sets the parameters for the station.
Reads a feature collection configuration from a catalog file and returns a FeatureCollectionConfig object.
Updates the list of DAP groups to reflect the changes made to the DAP server.
Find the variable with the given name in the DAP file in this scope.
Get the axis type of the given variable, or null if no axis type is available.
Returns the Grib stat type for the given time range indicator.
Subset the region of the latitudes in the region of the geolatte bounding box
Returns a list of the ranges for this bounding box.
Set the default values for all the properties in the specified map.This method is thread-
Get the session id from the cookie store.
Set the maximum number of redirects for this request.
Sets whether sessions should be used for this request.If the value of "useSessions"
Closes the connection to the server and releases all resources held by the client.
Set the authentication and proxy for the given HTTP client.
Add a new session to the session list.
Sets the global credentials provider for the given scope and the given credentials provider.
This method validates the given URL string.
Create an index for the given shape.
Computes the stride for the given shape and stride.
Indexes a list of ranges in the given list of ranges.
Reduces the index by removing all entries that are not already in the index.
Reduces the rank of the index to the specified dimension.
Returns the transpose of the index between index1 and index2.
Returns a new Index instance with permutations of the specified dimensions.
Returns an index iterator for the given array of MAA objects.
Returns the current element, or null if there is no current element.
Sets the elements in the given array to be the rank of the array.
Set the value of the specified dimension to the specified value.The value must be between 0
Sets the elements of this index to be equal to the given values.
Returns the name of the time interval.
Create a calendar date range from the given Calendar date range.
Create a list of dates from the header row and column headers.If unique is true,
Make a list of GempakParameters for the given DMPart.
Get a list of all the stations in the file.
Returns a list of the names of all station keys.
Returns a list of dates. If the list is empty, a new list will be created
Returns the index of the station with the given id, or -1 if not found.
Returns the file type.
Increase the indentation level by the given number of characters.If the number of characters is
Sets the indent level.
Read or create a GribIndex from a single file.
Add a scan to the list of files and folders that match the regular expression pattern.
Returns true if the scan is needed for the current scan.
Scan the file, if there are any scans, return true if one scan was found.
Set the debug flags for the NetCDF4Net2.This is only used for
Adds a variable to the model.
This method writes the contents of this file to the netcdf file.This method is not
Validate the given xml object against the rules defined in this class.If strict is true,
Returns a string representation of this slice.
Set the original variable to be the same as this one.
Read the variable from the given section.If the section does not exist, it is created
Checks if any of the variables in this structure need to be converted into a new structure.
Convert the given array structure into a new array structure.If the conversion is not possible,
Convert the members of a StructureMembersWrapper object to a structure members.MemberInfo object.
Find the variable with the given name in the scope of this scope.
Returns true if the given variable has at least one data member in the given members.
Enhances all variables in this dataset.
Check if the resource control is ok for this request.Return true if the control is ok
Create an empty sequence from the given sequence.
Create an array sequence from the given sequence with the given parameters and values.
Create a sequence from a gempak.xml file.
Add a vertical coordinate attribute to the given variable if the variable is in a coordinate file.
Read a catalog from the specified XML string and store the result in the specified callback.
Read an invCatalog from an XML string and return anInvCatalogImpl object.
Read an inv catalog from a string reader.This method will try to parse the XML and
Write the XML for the catalog to the given output stream.
Returns the metadata converter for the given key.
Returns a unit name that is dimensionless, if the unit name is not dimensionless.
Multiplies this unit by the given unit.If the given unit is not a derived unit
Divide this unit by the given unit.
Convert an array of float values to a new array of floats.The output array will be
Returns true if this unit is compatible with the given unit.
Write a simple geometry to a WKT file.
Write a Point to XML string.
Write a line to a XML string.
Write a polygon to XML.
Gets all of the subnodes of the given parent node.
Pass all reserved attributes of the given node to the DAPParser.
Gets the string representation of a subset of a variable.
Create a new ArrayStructure from the given array structure.If the given array structure is already
Sets the value of a member of the current structure to the given array.
Create a matrix with the specified shape and structure members.The structure members of the structure are
Get the geometry type associated with the given name.
Create a new station with the given data and recnum.
Recursively compiles the given AST AST into a DAP AST node.
Compile the filter expression into a DAP filter expression.
Add a DAG definition for a dimension in the DAG-DAG dataset.
Create a view for the given index, creating a view with the data type and element type
Returns true if this bounding rectangle is contained in the given bounding box.
extend the given point if it is contained in the bounding box, otherwise do nothing.
Extend this lat lon rectangle with the specified rectangular area.If this lat lon rectangle is
Intersect this rectangle with the given rectangle.
Add two arrays to a new array and return the new array.
Returns true if the arrays have the same shape and values, false otherwise.
Checks if shapeA and shapeB have the same rank, i.e.
Converts an array to a new array of the given data type.
Copies the contents of an array to a result array.
Copy the contents of two arrays of type Boolean into the end of the result array.
Copy the elements of the given array into the given result array.
Returns the min and max values of an array of doubles.
Sets the value of the elements in the given array to the given double value.
Create a catalog builder for this catalog.
Creates a projection implementation for the provided projection.If the given projection is already a ProjectionImpl
Unescapes a DAP-formatted string.
URL-decode the given string and return the result as a URL-encoded string.
Unescape the given URL.
Escape the given string if it is one of the given reserved characters.
Unescapes the given string if it contains a backslash, otherwise returns the original string.
Splits an escaped name into a list of tokens.The tokens are returned as a list of
Returns the first index of the given character in the escaped name, or -1 if not
Converts a string containing a backslash to a DAP-escaped version of the given string.
Read an atom scalar from the DAO.
Get the path of the cursor.
Returns the value of the property in the given class.
Returns the class for the given component or any of it's superclasses.
This method compiles the dataset and the databuffer into a DL4J dataset.
Compile a structure array into a D4Cursor.
Compile a DAP structure into a D4Cursor.
Compiles a sequence array into a D4Cursor.
Compile a sequence into a D4Cursor.
Reads a 64-bit long from the stream.
Returns the field with the given name or null if there is no field with the given name
Returns the value of the field with the given name.
Sets the value of the specified field to the specified value.
Adds a field to the current row and moves the cursor to the next row.
Add a check box field to this field set.
Add a date field to the form.
Add a double field to this model.
Add a int field to the model.
Add a password field to this class.
Add a text field with the given name, label and default value.
Add a new text combo field to the form.
Creates a text area field with the given name, label, and default value.
Adds a new heading to this row of the table.
Adds the specified component to the layout.
Add an empty row to the grid.
Finds the frame that is currently active.
Returns the cell spacing.
Returns a copy of the factor array that contains all factors in this equation.
Multiplies the factor with the given dimension.
Returns an array of factors representing the power of the power of the factorization.
Returns true if this factor is a reciprocal of the given dimension.
Returns true if all factors are dimensionless.
Factory method to create a Grib1ParamTable from a local file or a lookup table
Create a new Grib1ParamTables instance from the given XML element.
Add a lookup file to the standard lookup table table list.
Add a new Grib1 parameter table to the standard lookup table.
Convert this unit to the specified power, and throw an exception if this unit is not a
Convert an array of float values into a new array of float values.
Initialize the unit table.
Make a vertical coordinate variable from a set of levels and a set of coordinate values.
Peeks for the next name in the file, returns null if the file is not
Grabs a short from the given byte array starting at the given offset.
Grabs an integer from the given byte array at the given offset in the given byte array
Read a float from the given byte array at the given offset.
Grab a double from the given byte array at the given offset.
Create an alias for the given unit and the given unit name.This method does not check
Adds a unit to the unit registry.
Create a converter from the given unit to the given unit.
Set the structure data.
Set the point feature data.
Draws all shapes that intersect the clipping rectangle of the specified graphics context, using the specifiedpixel
Get the list of shapes for the given graph.
Reads the contents of the given input stream and processes it.
Reads from the given input stream until at least want bytes are read, and returns true if
Get more bytes from the input stream.
Reads a number of bytes from the input stream into the given byte array starting at the given
Skips the given number of bytes from the current position, returning the number of bytes skipped
Add the dimensions to the given group in the given NetCDF file.
Returns the index of the coordinate in this grid record, or -1 if not found.
Checks if the given file is a valid local file.
Opens the NCFile and reads the NCHeader from the given RandomAccessFile.
Read the data from the specified section of the specified variable in the specified section.
Read one row of data from a byte array.
Creates the image from a netcdf dataset.This method is used to create the image.
Create a base-type for the given variable.
Set the area of the map.
Set the map area.
Set the map's center point to the given lat and long coordinates.
Set the projection to be the given projection.
Add the actions to the specified menu.
Callback method to call the redraw timer if the redraw timer is already running, or if the
Change the bounds of the screen to be the same as the bounds of the specified rectangle.
Sets the selected state of this list item to the given boolean value.
Get the double value at the specified offset in the template.
Read a double value from the array and return it as a Double.
Returns the object at the given index, or throws an exception if the index is out of
Returns the GINI name for the given GINI ID.
Read a scaled integer from the given byte buffer.
Returns the parameter with the given name in the list, or null if there is no parameter
Swaps the byte order of the data in the buffer, so that it can be used
Returns the number of times and the start time of the given file.
Returns the full path to the file for the given index of the data file.
Returns a list of the names of the files in the current directory.
Get the path to DDF file from the dd-file.dd.dd.
Get the full path for the given filename.
Add a chsub to the list of chsubs.
Convert a reference date to this time zone's time zone in the given time zone.
Read the WMMF file and return the position of the WMMF file.
Returns a portion of the uncompdata, starting at the specified offset.
Pcode 12n13n-14.
The Pcode-25 version of the pcode-25 algorithm.
This method checks the header of the message file and returns the number of bytes read.
Returns the PCode5 for the given position, and the length of the given position.
Generate the code for a 128-bit code.
Convert a short array into an array of integer levels, where each level is represented as a
Get the dualpol levels for a given array of shorts.
Adds a variable to the netCDF file and adds it to the netCDF file
Adds a parameter to the netcdf file.
Uncompresses the given buffer into a single compressed byte array.
Get a signed 16-bit unsigned short from a byte array.
Convert a byte array into an integer.
Convert a byte array into an object of the given data type.
Do a DMR command.
Returns the request state for the request and the response.This method should be called by subclasses
Send an error to the client.
Set the anchor point to point p.
Stretched the image at the given point.
Parses the given text as a date-only date-only date-time string.
Replace the data variables in the given structure members with the data variables in the given structure.
Ensures that the given size is valid for the given array size and that the given attribute is
Reads a two-byte integer from the given random access file.
Read an unsigned 32-bit integer from a RandomAccessFile.
Read four bytes from a random access file.
Read a 2-byte unsigned integer from the given RandomAccessFile and return it as a
Read a four-byte unsigned integer from the given file.
Read a four-tuple from a file in a random order.
Returns a float in the range [a,b,c,d).
Read a 8-bit long from a random access file.
Count the number of bits in the given bitmap.
Constructs a deep copy of this projection.
Returns a WKS formatted string representation.
Returns a string with all of the characters escaped.
Unescapes all non-escaped characters in the given string.
Splits a string into a list of strings separated by backslash, and returns the list of strings
Makes a FMRCInv object from a FMRCDate object.
Get the service special for the given path.
Returns the number of projected components in this matrix.
Returns the reference time of this date as a java.util.CalendarDate.
Create a new BitMatrix from an already-filled bb.If the section is null,
Main entry point for the Lucene Index Indexer.
Create a Grib1Record from a Grib1IndexProto.Grib1Record
Checks if the given NetCDF file is a mine file.
Create a UTM coordinate from a netcdf dataset.
Reacquires the area file and rereads it if necessary.
Determines if this date is before the specified date.
Returns true if the given date is before the current date of this date type.
Returns true if this date is after the given date.
Sets the value at the given index to the given new value.
Add the given coordinate system to the list of coordinate systems for this variable.
Set the units for this variable.
Returns the value of the units attribute of this variable or null if there is no units attribute
Initializes the TDSContext with the given read mode and the given preferences.
Read a catalog from the catalog-rel-path and catalog-full-path.
Process a list of datasets in the dataset tracker.
Reads the files in the specified directory and puts them in the specified directory.
Check if the given lon is between the given two lon lon normal values.
Convert a latitude value into a human readable string.
Convert a longitude value into a human-readable string.
Compares this quantity with the specified quantity, ignoring case, and returns the order of the quantity
Returns the dataset that is currently selected in the tree.
Set the selected dataset in the tree.
Create a tree path from the given node to the parent of the given node.
Open all the sub-trees in the tree.
Set the catalog to be read from the given location.
Set the catalog to be used by this instance.
Returns the alias for the given variable, or null if the variable does not have an alias
Write the specified 32-bit integer into the output stream.
Writes a sequence of bytes from the specified string, starting at the specified index.
Read a number of characters from the stream into a character array.
Set the debug flags for the NCX file read, index only, and index only
Add a new member to the list of members of this class.
Hides the member and returns the index of the member, or -1 if the member
Returns a list of the names of the members of this class.
Returns the member with the given member name, or null if the member does not exist.
Read the bitmap from the file starting at the current position.
Restore the state of this table to the current state of the user.
Returns an iterator over the rows that are currently selected in the table.
Get the index of the column model in the table.
Gets the value of the given member as an array.
Retrieve a structure member's double value.
Returns a Java double array of the contents of a StructureMembers.Member.
Returns the float value of the specified member, or null if the value is not a
Returns the float array representation of the given member.
Gets the byte representation of a scalar member.
Returns the byte array for the given structure member, or null if the member is not
Returns the value of the given member as an integer.
Returns a copy of the array stored at the given member, as an integer array.
Returns the short value of a StructureMembers.Member.
Get a Java short array from a StructureMember.
Gets the value of the given member as a long.
Gets the Java array of a StructureMembers.Member as a long array.
Returns the char value of a scalar member.
Returns the contents of the given member's data as a char array.
This method does the work for a single dataset.This method is called when a dataset is
Creates a copy of this dataset.
Copies the metadata from the given node to the given parent.
Gets the ThreddsMetadata instance that is used to inherit thredds.
Adds a new product record to the list of records associated with this product.
Show the list of all missing values in the given formatter.This method is used to show
Show a summary of the records in this list that are not present in the record tracker.
Returns the record at the specified location in the record tracker, or null if there is no
Returns a string representation of the grid file.The format of the file is defined by the
Make the long name for this level.
Create a subset of this coordinate by taking a list of lon-interval values as input.
Returns true if two byte arrays are in the same byte order and false otherwise.
Parse a DAP document into a DAP dataset.
This method processes the attributes of the given dataset and removes those attributes that are suppressed.
Add a list of coordinates to the partition.
Set the number of parallels and the distance between la1 and la2.
Parses a variable selector into a parsed section specification.
Returns a string representation of the given range of a section.
Test if a point is contained in the bounding box.
Close the cache. If the cache has been closed, this method will close the cache.
Execute the HTTP request and return the response code.If the response is not valid, throw
Identify the encoding station for a given feature type.
Returns the name of the axis with the given type and dimension in the given dataset.
Sets the input stream to be used by the block generator.
Reads the next character from the stream.
This method starts the progress bar for the specified task.If the progress bar is not yet
Parse the given string as a URI.
Return a copy of the URI without any of the URI parts specified in the excludes parameter.
Returns null if string is not null or empty.
Returns the canonical form of the given prefix and suffix.The canonical form of the prefix and
Returns true if the given dataset should be included in the result set, false otherwise.
Copy the information from a GribCollection mutable to this GribCollection.
Returns a list of filenames sorted in alphabetical order.
Sets the index file to use.
Gets the index filepath in cache.
Returns the total number of counters in this tree.
Add a global attribute with the given name and value.
Add a global attribute with the given name and values.
Delete the attribute with the given name from the global attribute group.
Renames a global attribute.
Add an attribute to the given variable name and value.
Adds an attribute to a variable in the context with the given name and the given value.
Delete a variable attribute.
Renames an attribute of a variable.
Make the file sub-type of the current file.
Write the header and bounding box to the file.
Writes the members of the geometry.
Write the station observation dataset as a XML document.
Output the station collection in XML format.
Write a DSR string to the output stream.
Send a dxr message to the remote peer.
Writes an error to the output stream.
Close the DMR channel.
Flushes the buffer to the remote server.
Returns true if want is in the range [0, stride).
Returns the index of the element at the given index in the array.
Shifts the range to the specified origin.
Reads the data from the file at the given layout index into the given data type.
Reads the data from the specified index and writes it to the given channel.
Returns a subset of this primitive vector with the elements in the specified range.
Set the values of the GDS parameter.
Convert an array of ints into a double array.
Get the bounding box of all datasets in the web.xml file.
This method checks if the requested variables are present in the grid.If not, it will
Get the DatasetSourceStructure for the given name.
Gets the resource path from the request path.
Make the vertical dimensions of the grid in the given NCDF file.
Reads the PIB from the given RandomAccess File.
This method is called after all data has been processed.This method is called after all data
Transfer the metadata of the parent dataset to the local metadata of the parent dataset.
This method transfers the metadata of this dataset to the given dataset.
Transfer the inherited metadata from the given dataset to the given target thredds metadata.
Set the contributors for thredds.
Add a dataset to the list of datasets for the specified index.
Remove a dataset from the catalog.
Replace a dataset in this catalog with a new dataset.
Adds the service to the list of available services.
Remove the given service from the list of services managed by this instance.
Set the list of services that are local to the invService.
Removes the given metadata from the local list of Metadata in the dataset's parent dataset.
Returns the value of the specified key in the user map.Returns null if the key is
This method validates the configuration and writes the result to the given builder.The builder will be
Returns a list of all the FXY descriptors contained in this object.
Construct the server path for the given HTTP servlet request.The scheme, the server name,
Get the WFS capabilities and write it to the output stream.
Get a feature from the SGCS and convert it to a WFSFeature object.
Check the parameters for errors.
This method is called by the servlet to handle the HTTP request.This method will write the
Returns the capabilities of the server at the given URL.
Returns the number of bytes in the file in bytes, or -1 if the file is
Returns the last modified date of the object in the cache, or the metadata of the object
Returns a file from the web.xml file system.This is the default implementation of the
Return the contents of a string to the response.
Sets the content length of the given response.
Get the URI of the request.
Gets the path of the request.
Returns the request URL.If the request URL contains a query string, the query string is
Returns the value of the first parameter with the given name, ignoring case.
Saves the current state of this Split.
Writes the contents of a directory to the given path.
Creates a new bit counter for the given subkey, with the given row, replication count
Counts the number of bits at the given start bit.This method is only used for testing
Append the given line to the end of the line.
Create a station collection document for the given lat lon rectangles, and a set of names
Get the document containing the capabilities of the DSGFeatureCollection.This is used by the
Gets the record at the given subset params.
Get the coordinate at the given index.
Adds the specified item to the list.
Handle the given exception and return a response entity.
Moves the iterator to the next position in the range [firstpos, lastpos).
Returns a map containing the ncep code and a map containing the ncep desc
Check if the endpoint is a CDMRF endpoint.
Set the value to the specified value.
Creates a Grib1GDS grid grid from the given center and grid number.
Copy data from the given input stream to the given output stream with the given buffer size.
Read the contents of an input stream into a String.
Read the contents of an input stream into a byte array.
Writes the contents of the given string to the given output stream.
Copy the contents of the given file to the given output stream using the given buffer size.
Copy a block of data from a RandomAccessFile to an OutputStream.
Copies all the files in the given directory to the given destination directory.If the destination directory
Reads the contents of a file into a byte array.
Reads a file and returns the content as a String.
Write the given string to the given file using the UTF-8 encoding.
Writes the contents of the given string to the file at the given name.
Writes the contents of the given input stream to the given output file.
This method is called when a parse exception occurs.This method is called by the parse exception
This method is called when a DAP2 exception is received from the DAP server.
This method is invoked when a bad URL has been requested.This method is invoked when a
This method is used to get the catalog of the current server.
Prints the server version and the version information to the given writer.This method should be called
prints the status of the request, if track is true, and if track is false
Print bad URL.
Gets the reference date of this date.
Reads the Vlen data from the file and returns an array of VlenData.
Read a NCML string and return a NCMLCollectionReader.
Open a NCML file and return a NCMLCollectionReader.
Returns a copy of x with only the characters in allowChars replaced by replaceChar.
Removes all bytes from a byte array and returns it as a UTF-8 encoded string.
Filter out characters that are not in the ok chars list.
Returns a copy of the given string with only 7-bit characters.
Make sure the given string is a valid CDM object name.
Returns the index of the first character in s1 that is not in s2.
Pads the left side of the given string with the given string to the right.
Pads the given string to the right with the given string until the desiredlength is reached
Removes the first occurrence of the given string from the given string.
Removes the specified character from the start of the specified string.If the specified character is not
Removes the specified character from the end of the specified string.
collapses all whitespace characters in the given string into a single single character string.
Replaces all occurrences of a character in a string with a character in another string.
Returns a copy of the given string with the replaced characters replaced with the given replace strings.
Replaces all occurrences of the pattern in the given string with the given value.
Substitutes the given string in the given original string with the given substitution string.
Returns the original string that contains any of the matches in the match string,substituted
Removes all the characters from sb that are not in out.
Replace all occurences of in in the given string builder with in.
Replace all the characters in out that are in in in with the characters in in.
Substitutes the specified string with the specified substitution string.
Returns a trimmed string with the first character removed from the beginning and end of the string.
This method will be called every time a new CollectionUpdateEvent is received from the server.
This method checks the state of the database and creates it if it doesn't exist yet.
Updates the collection with the given collection update type.
Gets the list of datasets.
This method releases all resources held by this class.
Creates a deep copy of the given StructureData.
Copies the contents of the given array structure to the given byte order.If the array structure
Copies the contents of the given structure to the given array structure's internal byte-buffer.
This method copies the contents of the structure data to an array and returns it as a ByteBuffer
This method copies the contents of a structure to a byte-buffer and returns the byte-
This method returns the forecast time interval size in hours for a given PDS interval.
Returns a section of this DFileWriter instance with the specified range of data.
Creates a new TableAnalyzer instance for the given feature type and the given dataset.
Analyzes the feature type and checks if it is a feature of the given type.
Synchronize the grid with the grid reader.If the grid reader is not yet initialized,
Returns an array of latitudes in the range [start,num).
Swaps the given byte array at the given offset in the given byte array.
This function swaps the bits at the given offset of the given byte array at the given
Swaps the given byte array with the character at the given offset.
Find the coordinate axes for this dataset.
Adds a parameter to the coordinate transform, if the parameter is present in the netcdf file
Returns the common parent group of this group and the other group.
Returns true if this group is a parent of the other group, false otherwise.
Sets the parent group of this group to be the given group.
Adds a new dimension to this group.
Adds a dimension to this group if it doesn't already exist.
Add a group to this group.
Adds a new EnumTypeDef to the group.
Add a new variable to the model, if it doesn't already exist in the model.
Removes the dimension with the given short name from the list of dimensions.
Make a group from a relative path.The path is assumed to be relative to the
Convert DDS-DSSAT attribute names to DDS-DSSA names.
Prints out the DAS to the specified print writer.
Returns the variable with the given name, or null if the variable is not found.
Writes a grid to the Gremlin Graphviz file.
Returns a new float array with the values in the data array replaced with the minimum value.
This method replaces missing values in the given byte array with the values in the min and max
Get the starting point of the shift from the array of lon points.
Write a coverage grid file from a Geo referenced array.The grid file will be written in
Writes the exception message to the response.
Make the top index file based on the feature collection configuration.
Gets the type of the GribCollection.
This method updates the Grib Collection according to the configuration and the given update type.
Updates the leaf collection of a Grib2 GribCollection or Grib1 partition.
Open a GribCollection from a data file.
Creates a new GribCollectionImmutable from a data file in a Grib1 format.
Return true if the given URL matches the given pattern.Returns false if there is no match
Adds a new triple to the triple cache.
Returns the value of the triple identified by the given key, or null if the triple does
Sets the well-known triplestore, if the triplestore list is empty,
Inserts a triple into the triplestore and returns the previous triple in the triplestore
Returns the list of datasets for this table, or an empty list if the table does not
Returns the dataset with the given name, or null if the dataset is not found.
Set the projection to be used by the features in the feature set list.
Returns an iterator over the shapes that are added to the given graphics object.This iterator is
Create a list of shapes from a list of features in the featList.
Compares the given string with the ID of this object and returns the order of the comparison.
Start the progress monitor task.
Returns true if the given collection index file needs to be updated, false otherwise.
Returns a new instance of the Earth Contour, with the same coordinate as the given
Set an object at the specified index in the data array.
Get the structure data at the given index.
Copy all structures from the array to the given index iterator.
Returns a scalar value for the given member in the given record record.
Convert a scalar value to a double.
Convert a scalar int value from the data type of a record to the corresponding data type.
Returns the float value of the given structure member.
Returns the byte value of the specified member in the specified record.
Returns the short value of the given member in the given record number.
Retrieve a char value from a record.
Retrieve a scalar string from a member of this StructureData object.
Get the array structure for the given record.
Returns the array sequence for the given record.
Returns the array object for the given member.
Returns the minimum and the maximum value of the given long, or the given value if the
Evaluates the given expression and returns the result.
Convert this constraint to a constraint string.The constraint string consists of a comma-separated list
Checks if a DapNode is referenced by this DapNode in this DapNode
Evaluates the expression and returns true if the expression evaluates to true, false otherwise.
Returns the number of variables in the given structure that have beenexpansion in the given structure
Computes the list of all the variables that have been added to the list of enum values.
This method is used to compute the groups that have been applied to all the groups that have
Compiles a SPE from a DAP dataset and returns a SPE from the DAP
Returns true if the file is a valid file, false if it is not.
This method creates the system of actions that will be performed when the system has been cleared.
Returns the byte order of the random number generator in the specified byte order.
Set the byte order to use for the current architecture.This method is only used for testing
Returns the key with the given name or null if there is no key with the given name
Returns the file header for the given file name, or null if it does not exist.
Get the header of a file, or null if the file does not exist.
Prints all the parts of this message to the standard output.This is useful for debugging.
Returns the data point of the specified part in the specified row and column number.If the
Reads a word from the input stream and returns it as a floating point number.
Read a string from the input stream, starting at position isword, starting at position n
Compute the unpkill for the given DMPart and IBitst.
Returns a string representation of the given bits.
Writes the contents of the given NetCDFFile to the given WritableByteChannel.
Parse the base of the given element and add it to the list of base classes.
Parses a grid.
Parse the aliases of the given element.
Convert a list of key descriptors to a list of DataDescriptors, and return them as a
Replicates the keys in the given list, and returns the resulting list.
Get the filename of the dataset.
Returns a string representation of the feature type of the Gempo Gemfile.
Returns true if the absolute difference between two values is less than or equal to maxAbsDiff
Returns true if the node is a dimension, enumeration, or dataset, false otherwise.
Parses the given unit specification and returns the unit object.
Checks if the given variable is tiled in the section.
Makes the best coordinate time from the complete array of times in the time2runtime array.
Convert a LatitudeRect to a projection rect.
Shows the time series for all the logs in the given list of log files.
Convert a list of Attribute objects into a map of Strings to Attributes.
Get the values of this field as an array of values.
Returns the value at the given index, or null if the index is out of range.
Writes the value of this property to the given formatter.
Sets the value of the property.
Set the values of this array to the values of the given array.If the array is
This method scans the input stream, and returns true if the input stream has been consumed.
Generates a proxy ds resolver catalog for the given proxy dataset handler.
Schedules the given message to be written to the queue.
Set thredds data type.
Jumpto thredds data type.
Prepares the GUI to be displayed on the user's screen.
Create the tools frame.
Creates a name from a list of coordinate axes.This method sorts the axes in the order
Returns a coordinate axis with rank lesser than or equal to the supplied coordinate axis.
Returns the coordinate axis with the given axis type lesser than or equal to the given
Get the projection coordinate transform for this coordinate transform, or null if this coordinate transform is not
Returns true if this rectangle is in a valid GeoJSON-WKB projection.
Returns true if all coordinate axes are regular, false otherwise.
Checks if a set is a subset of a set of dimensions.
Returns true if this coordinate system contains at least one of the axes in the given list.
Returns true if the axis with the given name is contained in the coordinate system.
Check if the given list of dimensions are contained in the current domain.
Returns true if one of the axis types is contained in the supplied list of axis types.
Checks if there is any coordinate axis of the given axis type.
Clone this DapNode and return it as a DapNode.The DapNode
Get the bean that is currently selected in the table.If the row is not selected,
Gets the list of all the beans that have been selected in the JTable.
Get the list of cells that are currently selected in the view.
Set the selected bean.
Restores the state of the table column.
Create an unknown unit with the given name.
Closes the underlying stream and invokes the underlying method if one is available.
Returns true if the given variable is in the list of extras, false otherwise.
Checks if the variable is a coordinate.
Find the coordinate coordinate coordinate variable for the given table and coordinate name.
Add non-data variables to the given table.
Add the join data for the current table to the parent table of the given cursor.
Create a station feature from the given data point.
This method creates a new DapNode map using the current configuration of the DapNode
Returns a unit factory for the given unit name, or null if it doesn't exist.
Creates a unit factory for the given unit name using the given unit format and exceptions.
Checks if the given unit string is compatible with the given unit string.
Returns true if the given unit is a valid date unit, false if the unit is not
Return true if the given unit string is a time unit.
Gets the conversion factor from the input unit string to the output unit string.
Converts the given value in the given unit to the given output unit.
Returns true if the unit is unknown, false if it is a derived unit.
Returns the value of this scale.
Creates a new top-level operator clause from a list of sub-clauses.
Create a new boolean function clause.
Creates a new BT function with the given function name and optional list of children.
Make a grayscale image from an array.
Crawls all datasets in the catalog, and executes the given task, if the task
Crawls a dataset and crawls it if it is a CatalogRef or a
Crawls the given dataset, if it is a catalogref, and if it is
Get the file from cache or create it if it doesn't exist.
Gets an existing file from the disk cache or cache it if it doesn't already exist.
Sets whether or not debug leaks should be generated.
Returns a sorted list of all files.
Closes the cache, releasing the lock if necessary, and releasing the lock if the
Sets the current position of the file to the given position.
Flushes the buffer to the file.
Read number of bytes from the input stream.
Reads n shorts from the input stream, starting at the specified position in the specified array
Read a 32-bit int from the stream.
Reads an n-tuple of 32-bit integers from the input stream.
Read a number of bytes from the stream into the given long array at the specified position.
Read n-byte floating point values from the stream.
Reads a double array from the stream, starting at the specified starting position.
Read a string from the input stream.
Read a string from the stream, and return the maximum length of the string.
Write a subset of a boolean array to the stream.
Write n-byte shorts from an array of shorts starting at the specified position.
Write n bytes of a character array to the underlying stream, starting at the given position.
Writes an array of ints to the underlying output stream.
Writes a sequence of 64-bit integers from the given long array to the output stream.
Write an array of float values starting at the given position.
Writes a sequence of numbers from a double array.
Write a string to the underlying output stream as a byte array.
Writes a sequence of bytes to the underlying output stream, starting at the specified offset.
Searches the file forward starting from the current file pointer, starting at the current file pointer.
appends the query to the given StringBuffer with the values from the template or the parameter value
Factory method for creating a MCollection from a top-level directory and a SLF4
Looks for the index file for the partition and returns true if found, otherwise false.
Checks if the index is a leaf.
Creates a list of children based on the specified index reader and force collection mode.
Scans the given directory for children and creates a DirectoryBuilder for them.
Reads the files from the index.
Returns a list of all the gridsets in this dataset.
Acquires a cached file for the given dataset.If the file is not cached, it
remove a file from the file cache and remove it from the NCFileCache.
This method is called when an object is removed from the cache.This method is only invoked
This method releases the NCFileCache.This method will release the NCFileCache
Returns a four-tuple in [a,b,c,d).
Update the accessed state of the given element in the shadow cache.
Clear the cache.
Create a vertical transformation for the given grid dataset and parse info.
Returns true if this figure is in the global longitude range, false if it is not.
Returns true if the vertical axis is a z-axis or a z-axis.
Returns the coordinates of the x,y, or -1 if the x and y coordinates
Finds the x-axis coordinates for the given x-axis and y-axis coordinates.
Find the nearest x-coordinate for the given lat-long coordinates.
Find the x-coordinate of the given point in the data projection.
Returns the position of the first item in the list, or -1 if the list is
Get the index of the item that corresponds to the specified pixel.
Iterate over all MO files in the collection directory and invoke the visitor for each MO
Get the contents of the remote files.
Returns the name of the subcenter of the subcenter of the given center.
Get a CalendarPeriod.Field from a unit string.
Returns a cached calendar period for the specified field, or creates a new one if it
Creates a calendar period from a string representing a string representing a unit of the time units.
Get the number of seconds between start and end.
Gets the conversion factor for the given calendar period.
Gets the value in miliseconds as a double.
Get the offset between two dates, or -1 if the start and end are equal.
Synchronize the contents of the Gemfile with the contents of the Gemfile.
Initialize the grid tables.
Put a data root ext into the cache and add it to the tree and return true if
Find the longest path in the path that matches the given request path.
Finds the data root for the given path.
Convert data root ext to data root.
Gets the date range for the given calendar object.
Reindex a list of coordinates.
Creates a new NetCDF FileWriter.
Add a new group with the given name to the given parent group.
Add a typedef to the given group.
Deletes an attribute from a group.
Renames an attribute in a group.
Add a new record structure to the NetCDF file.
Aborts the current transaction, and closes the writer if there is one.This method is
Writes the properties of this bean to the given writer.
Extracts thredds metadata from thredds dataset.
Divide this unit into another unit.If this unit is an offset unit, then the
Convert this unit to a derived unit.
Convert the given amount from the unit of this unit to the derived unit of this unit.
Convert a nested variable to an array.
Convert a top-level Variable to a DA4J array.
Convert the given data to an array of DAData objects.This method converts the data
Closes all open databases.
Opens the database for this collection, creating it if it doesn't already exist.
Convert the given integer value to a period in the given unit.
Ensures that the capacity of the array is at least the given minimum capacity.
Returns the element at the specified index in the array.
Create a catalog for the given directory.
Create a catalog for the given path and base uri.If the path is not a catalog
Gets the coordinate type of the outer dimension of the first dataset in the nested dataset list.
Creates a new Grib2PDS instance with the given template and input data.
Calculates a CalendarDate from the given starting position in the stream.
Apply the given scale factor to the given value.
Parse a local concept from a file and add it to the set of local concepts.
Add a local concept to the registry.
Cleans a single line of text by removing all whitespace characters and trimming the line.
Stores a concept in the concepts table for the given table version and parameter number.
This method writes the grib1 tables to a file in the output directory.
Write the lookup table file for the given table numbers in the given directory.
Show the local concepts for each table and print the local concepts for each parameter.
This is the main entry point for the ECMWF-Grib1 algorithm.
Gets the dataset source type by its name.
This method expands the dataset and returns the dataset with all the data in the dataset.
Expands the inv dataset and creates a new Catalog.
Name all the datasets in the given dataset container.
Add a dataset to the list of all the datasets in the dataset.This is used to
Name the dataset tree for the given dataset.
Load the picture from the given image URL.
Stop the loading of the given URL, but only if the source picture is not null.
Called when a source status changes.
Notifies all registered listeners about a source load progress.
Create a scaled picture in a new thread with the specified priority.
Returns the width and height of the scaled picture.
Returns the width and height of this image as a human-readable string.
Returns a list of all the parts that have been merged with the current one.
Make the header for the GempakStations object.
This method returns a list of all the types supported by the SNA-OS and the
Checks if the part to check is a valid DDM group parameter.
Set the root directory for the cache.
Creates the root directory.
Get the cache file for the given location.If the cache file does not exist, it
Delete all files in the cache that are older than the given cutoff date.
Clean up the cache by removing files with less than maxBytes bytes.
Returns true if the fxy is a valid table for the given FITS pixel.
Create a coordinate axis from a netcdf dataset and a VDS dataset.
Create a copy of this coordinate axis with no cache.
Returns true if the data type is numeric, false if the data type is string, or
Prints the information about this axis to the given formatter.
Returns the value of the calendar attribute, or null if the attribute doesn't exist.
Set the list of rows to select.
Get the selected row in the table.
Increments the selected row by one if increment is true, otherwise decrements by one.
Get the column model index for this table.
Sets the current index of the slider to be the value of the specified index.
sorts the array of strings in ascending order, starting from lo0 to hi0,
Swaps the elements at positions i and j in the array.
Get an existing MOSFile object for the given filename.If the file does not exist
Rotate the lonlat and return the new lonlat.
Creates a new instance of this class from the given file.The file must be in the
Create a new instance of this class from the given input streams.The input streams are used
Creates an XML object from the specified resource.
Make a standard filename from the given application name and store name.
Saves the current state of the prefs file to a file on the local file system.
Saves the current state of this object to the given output stream.The output stream will be
Write an atomic variable to the given serial writer.This method checks if the type of the
Write a DAP structure from the given DataCursor to the given SerialWriter.
Write a DAP structure from a DataCursor instance.
Writes a sequence from the given data cursor, using the given serial writer.
Write the DAP record to the output stream.
Returns true if the file is a valid file, false if it is not.
Returns the WmoId of the Gempak, if the Gempak
Read a row of data from the given data input stream, returning the number of rows read
Returns the data at the specified index in the array, or null if the data does not
Get the data from the Grib2 drs.Type0 GDRS file.
Get the data from a GDRS file.
Creates a CIF file from a grid dataset and a list of latitudes and a range
Make a grid size estimate for a netcdf file.
Generate a netcdf file from a grid dataset and a range of latlon rectangles.
Sets the list of stations for this geolocator.
Set the name of the selected station.
Picks a point on the plane in the world space of this geoloc object.
Pick the closest station to the given pick point in the world world space.
Get the currently selected station.
Returns the name of the projector for the given type.
Get the list of stations within the bounding box.
Returns the station object for the given station name, or null if the station does not exist
Get the data iterator for a given station.
Get the data iterator for the given station, starting at the given date range.
Read the data from the specified random access file, using the specified abbreviations, and
Computes the dot product of this matrix and the vector v.
Returns the Euclidean norm of this vector.
Normalizes this vector so that its value is normalized by 1.0, i.e.
Set the services for all the DatasetBuilders in the given DataSetIter.
Returns the parameter with the given id.
Returns the parameter with the specified id, or null if the parameter does not exist.
Adds a new prefix to the set of prefixes.
Adds a symbol to the prefix.
Returns the first prefix in the set that is equal to the given string, or null if
Returns true if the email is valid for the given source, false if it is not.
Returns the value of the parameter with the given name, or throws an exception if the parameter
Calculates and returns the crc32 value of this grid.
Returns true if the data is in a thick format, false if it is in a
Returns the index of the field with the given name in the DAP template.
Returns the time type name for the given time range indicator.
Returns the current time coordinating with the interval.
Set the next polygon in the chain.
Set the previous polygon to be the same as this one.If the prev is not a
Returns the value of the property with the given name, or null if no such property
Set the current projection to the given projection.
Create a subset of the coverage data based on a run date.
Register the given class name as an IO class in the class loader of the netcdf file
Registers the IOSP class with the IOManager, if the class is not already registered.
Checks if the IOSP provider is registered for the given IOSP class.
De-registers the IOSP provider with the given class.Returns true if the provider was
Returns true if the file at the given location can be opened, false otherwise.
Creates a NetcdfFile from the given byte array, using the given iosp class.
Open an in-memory netcdf file with the given name and data.
Opens a netcdf file in memory.
Opens the given URI in memory and returns a netcdf file.
Find the global attribute with the given name ignore-cased.
Convert this NetCDF document to a NCML document.
Writes the contents of this string to the given output stream as a CDL character set.
Write the CDL to the specified print writer.If strict mode is set, then only
Writes the declaration to the given formatter at the beginning of the generated source file.
Add the given attribute to the given group.
Add a new attribute to the specified group.
Adds the given group to the given parent group.
Adds a new dimension to the given group.
Removes the dimension with the given name from the given group.
Adds a variable to the given group.
Adds a new variable to the given group with the given short name, data type and dimensions
Add a String variable to the given group with the given short name and number of dimensions.
Removes a variable from the given group.
Send a ISP message to the specified ISP message processor.
Makes the record structure for the current N3IOP and returns true if the record structure
Finish the graphical data structure.This method must be called at the end of the structure
Read a variable section from the input stream.
Read a variable from the given byte channel and write it to the given writable byte channel.
Reads a list of arrays from a list of Variables.
Read an array of values from the specified section of the XML file.The returned values are
Makes a fully-qualified name for a given cdm node.
Returns the full path name for the given group and the given name.If the name is
Check if the given file should be included in the result set.
Returns true if the mfile should be excluded based on any of the excludeFilters.
Returns true if any of the filters return true, false otherwise.
Append a value to the end of the vector.
Dispatch a check value for the given attribute type to the appropriate check methods.This method is
Forces a value to be of the given type.If the value is not of the
Checks if the given string is a valid byte.
Checks if a string is a valid short.
Checks if the given string is a valid integer.
Checks if a string is a valid U.S.
Checks if the given string is a valid floating point number.
Checks if the given string is a valid double.
Get the data type of an attribute.
Returns true if the dataset is viewable, or false if it is not.
Checks if the given string is a valid boolean string.
Checks if the given string is a valid alphanumeric string.
Checks whether the given string is a valid alphanumeric string in the specified constrained set.
Returns true if the given path is a directory path, false if it is a file path
Convert a unicode code point to a percent-hex string.
Returns the value of the specified parameter, or null if the parameter does not exist.
Compares two grid-def records and returns true if they are the same, false otherwise.
Processes the contents of the given input stream.The input stream is read from the input stream
This method processes the buffer and returns the number of matching bytes in the input stream.
Removes all quotes from the beginning and end of the string.
Marks all variables in the given stack as being variables.
Write a NCML file to the editor.
Gets the value from thredds config.
Writes a CDL file with the contents of the CDL in a format suitable for inclusion
Create a new station helper.
This method validates the current state of the object.
Gets the azimuth of the message in angstonic coordinates.
Get the elevation in ang from the message type.
Returns an array of the latitude values of the rays in this surface.
Returns the longitudes of all rays in this line.
Returns an array of the altitude values of the rays in this surface.
Gets the azimuth vector of the rays of the Rythm's rays.
Get the elevations of the ray.
Returns a copy of this structure where only the members with the given names are included.
Returns a structure containing only the members of the variable with the given name.
Adds a member variable to this structure.
Set the list of member variables for this scope.
Sets the parent group for this VariableGroup.
Calculates the total size of all elements in this group.
Read a structure from the file at the specified index in the file and return the structure.
Read an ArrayStructure from the NetCDF file, starting at the given index.
Returns the data category for the given category.
Returns the name of the class that is used to generate the class.This is the name
Add a parameter to the list.
Returns the header of the JDCP file.The header is a tab separated list of
Convert a geolatte lat lon rect to a projection rectangle.
Returns the version number for the given conv name or -1 if the version is not
Returns the name of a zis coordinate in the given zaxis, which is positive.
Read the color scale parameters from the file and set the values in the newField flag.
Renders the projection and color scale to the supplied graphics context.This method should only be used
Returns true if this H5Group is a direct child of the given H5Group.
Gets a message type by its name.Returns null if the type is not found.
Installs the table in all columns of the specified alignment.
Sets the API key and API secret for the API call.
Creates a new label with the given value.
Creates a new label with the given justification and a list of lines.
Creates a new label with the specified value.
Establishes a connection to the specified socket path.
Returns a list of ip types from a Cloud Sql type string.
Establishes a connection to the MySQL server and returns the connection object.
Purges the given logger, if it is in the list of registered loggers.
Compiles the given source code and returns the class of the class with the given name.
Adds a source code for the given class name to the compiler.
Read the graphic control extension and update the state of it.This method is called when the
Returns the bitmap of the next frame, or null if there are no more frames.
Lists the persons in the repository as a selectable string.This property can be used to
Initialize the list events.
Returns the person with the specified id.
Adds a validation message for the given validator to the given list of messages.
Sets the id of the person to be shown in the welcome screen.
Creates a view model for the given view.
Load countries from ISO 3166 resource.
Creates a new java view step for the given view type and view model type.
Creates a FXML view step for the given view model and view type.
Clear the map and invoke the given consumer for each observable and the set of listeners.
Create the events that are fired when the selected index has been changed.
Access the given member with the given callable.
Load a FXML view and return a tuple with the view type and the view model.
Query for the style row related to the given style mapping row.
Returns the pixel value of the pixel in the specified pixel in the specified image.
Returns the pixel values from the given image in the given byte array.
Validate that the image type is well-formed.
Create a PNG image from the coverage data tile width and tile height.
Set the tile data from a bitmap.
Executes a raw query and returns the result set as a Cursor.
Wrap a query into a CursorResult.
Executes the query and returns the result.
Executes a user query and returns the results as a TBase.
Convert the cursor to an instance of T, and set the query and table if specified.
Get the feature row for the given geometry index.
Register a new table with the cursor wrapper.
Retrieve the tile row for the tile at the given x, y, and zoom level.
Get the coverage data.
Get the coverage data for the tile data.
Get the coverage data.
Get the coverage data tile matrix results from the coverage data request and the bounding box.
Get the coverage data tile matrix results from the request bounding box, tile matrix and overlapping pixels
Get the coverage data tile matrix results for a tile matrix zoomed in in the bounding box
Get the coverage data tile matrix results for the requested tile matrix and the requested bounding box.
Get the tile matrix for the coverage data request.
Get the value of the tile at the specified tile row and tile coordinate.
Set the icon row for the given geometry type.
Get the icon for the given geometry type.
This method initializes bindingsDb, if it's not already done, and returns it.
Creates a Bitmap from a byte array.
Convert a Bitmap object to a byte array with the given format and quality.
Create a new row in the table with the given metadata.
Delete a table from a GeoPackage.
Get or create the table metadata for the table in the geo package.
Get the id of the geo package.
Create the table metadata from the cursor's table name.
Creates the extension if it doesn't already exist.
Get the feature row for the given cursor.
Perform a raw query and return a UserCustomCursor that can be used as a custom cursor
Query for the user's custom cursor in the bounding box.
Query the user-custom cursor for the given envelope.
Returns the number of points in the given envelope.
Queries the user data table for a subset of the bounding box defined bythese parameters.
Build the where clause for a bounding box bounding box is between min and max.
Query for features in the bounding box using the provided projection.
Count the number of features in the bounding box in the given projection.
Query the feature query results for features in the given envelope.
Query for a set of features within a bounding box.
Returns the number of pixels in the specified rectangle.
Set the data of the bitmap to the given format, writing it to the output stream.
Sets the data of this image to the given bitmap in the given format and quality.
Sets the bitmap compression configuration.
Get the number of tiles in the bounding box that will be rendered in the current zoom level
Adjusts the bounding box to match the bounding box of the view.
Adjusts the bounds of the Google map to the bounds that are shown in the dialog.
Adjust the bounding box of the geo package to match the bounds of the bounding box of the
Adjusts the bounds of the GeoPackageRequestWebMercator's bounding box.
Get the bounding box of the tile grid at the specified zoom level.
Get the tile grid for the given zoom level.
Query for the tile row for the tile column, row, and zoom level.
Query for the tile with the specified zoom level, descending.
Get the closest zoom level for the given length.
Get the approximate zoom level for the given length.
Query for the tile grid for the given zoom level.
Delete the tile with the given column and row in the tile table with the given zoom level
Count the number of tiles at the specified zoom level in the tile table.
Returns true if this object is a Google Tile object and false if it is not.
Get the pixel value of the first rasters in the image.
Get the pixel values from a byte array.
Validate that the image type is supported by the GeoPackage.
Create an image of the coverage data tiff file with the specified tile width and height.
Set the value of the first pixel sample of the image at the given location.
Get the GeoPackage for the given name, or create a new one if it doesn't exist
Returns the current row of the table, or null if there is no row.
Moves the iterator to the next invalid entry in the list.
Query for all rows of the base feature with the given id.
Delete by base id and geometry type.
Get a rectangle from its width, height, boundingBox, and boundingBoxSection.
Get a rounded rectangle from the width, height bounding box, and bounding box section.
Deletes the databases that don't exist in the database table in the given list.
Create a new GeoPackage connection and close the GeoPackage.
Check to see if the database is valid or not.
Validates and closes the SQLite database, and optionally closes it if there is an error.
Validate the database and close the SQLite database.
Validates the given SQLite database and closes the database if the database is valid.
Check if the database header is valid.
Check to see if the SQLite database header is valid.
Add the internal databases from the context to the given list of databases.
Add a list of databases to the list of external databases.
Import a GeoPackage from an input stream.
Get the GeoPackage metadata from the database.
Get the GeoPackage metadata at an external path.
Create a new row in the metadata table.
Populates the geometry metadata with the data in the envelope.
Delete a GeoPackage from the GeoPackage table.
Creates or updates the given metadata if it doesn't already exist.
Update the geometry metadata in the database, returning true if the update was successful.
Count the number of features in the table within the bounding box.
Create a new geometry metadata object from the cursor.
Update records in the table with the given values and where clause, and the given arguments.
Draw a tile of the specified width and height with the specified text.
Get the rows for the specified ids.
Checks if the cursor is valid.If so, the cursor is closed and the cursor is
Get the UserMappingDAO for the given table name.
Get the Simple Attributes DAO for the table.
Get the mappings for the base of the given extended relation and base id.
Returns a list of related mappings for the given extended relation and related id.
Checks if there is already a user mapping with the given base id and related id.
Returns the number of items in the cursor, closing the cursor if the cursor is closed.
Register the cursor wrapper for the table.
Read a table and create a UserCustomDAO.
Get the tile for the bounding box.
Draw a tile using the tile results and the bounding box of the tile's bounding box.
Reproject the tile to the requested tile width and height based on the bounding box.
Retrieve the tile results from the bounding box and the tile matrix.
Calculates the overlap between the icon and the point icon.
Sets the density of the polygon.
Set the paint object that will be used to paint the line.
Set the paint that will be used to paint the polygon.
Draw a tile and return the tile data as a byte array.
Draw a single tile at the specified tile tile tile location and zoom level.
Draw the tile query at the given tile tile coordinate.
Returns the number of features in the specified tile tile tile ordered by their relative coordinates.
Query the number of features in the bounding box that are indexed in the bounding box.
Query the feature index results for the specified tile position and zoom.
Queries the feature index for features in the bounding box.
Draw a tile query with the specified tile coordinates and zoom level.If the tile query is
Simplify a list of points based on the simplify tolerance.
Get the paint that should be used for painting the point of the feature.
Get the paint for the given feature style.
Get the paint that will be used to paint the polygon of the feature style.
Get the paint that will be used to paint the polygon, depending on the feature style.
Get the style paint for the feature style.
Get the style paint for the style and draw type.
Gets the paint for the given style row and feature draw type.
Get the paint for the given style id and feature draw type.
Puts the given bitmap for the given icon row.
Wraps the given ContentValues object with quotes and returns a ContentValues object that can be used
Creates and returns a bitmap for each layer in the layered canvas, or null if none
Recycles all the bitmaps held in the layeredcanvas and the layeredcanvas.
Returns the bitmap for the specified layer.
Get the canvas for the given layer, creating it if it doesn't already exist.
Create the bitmap and canvas for the specified layer.
Get the style mapping DAO for the feature table.
Get the Style DAO.
Get the Icon DAO for the user icon table.
Get the feature styles for the feature table.
Get the styles for the feature table.
Get the table style for the feature table and geometry type.
Get the icons for a feature table.
Get the icon for the feature table and geometry type.
Get the feature styles for the given feature row.
Get the style and icons for the given feature table and feature id.
Get the styles associated with a feature row.
Get the icons for a feature row.
Get the styles for a feature.
Get the icons for a specific feature.
Sets the feature styles for the feature table.
Set the styles for a feature table.
Set the icons for a feature table.
Set the feature styles for the given feature row.
Set the feature styles for the feature table and feature id.
Sets the styles for a feature row.
Set the styles for the feature table, id and feature id.
Set the style for a feature row.
Set the default style for the feature row.
Set the default style for the feature table and feature id.
Set the icons for a feature row.
Set the icons for the feature table and feature id.
Set the icon for the feature row.
Set the default icon for the feature row.
Sets the default icon for the feature table and feature id.
Returns the style id for the style row, or creates it if it doesn't exist.
Get or insert the icon if it doesn't exist, create it if it doesn't.
Insert a new style mapping row with the given base id, related id and geometry type.
Delete the feature table style mapping for the feature table and geometry type.
Delete the feature table icon for the feature table and geometry type.
Deletes the style table mappings for the feature table.
Delete the style mapping for the feature table.
Delete the style mapping for the feature id and geometry type.
Get all the style ids for the feature table.
Get all icon ids for feature table.
Get the list of style ids for a feature table.
Get all icon ids for a feature table.
Returns the byte array containing the image data.
Flushes the output stream and closes the output stream.
Get the pixel value of the specified pixel in this image.
Reads the pixels from the image reader and returns them as an array of pixel values.
Draw the feature at the specified zoom level using the supplied bounding box, projection transform, and
Draws the given path on the given feature style on the given feature tile canvas.
Draw the polygon path for the feature style.
Adds a line string to the path.
Add a polygon to the path, removing rings that are not contained in the polygon.
Returns the cache for the given table, creating it if it doesn't exist yet.
Remove the feature row from the feature table.
Clears and resizes the cache and sets the max cache size to the given value.
Returns the cached table styles for this feature, or null if there is no cached table styles
Get the cached icons for the table feature styles.
Get the table DAO for the feature DAO.
Set the width of the gauge.
Set the value of the height column.
Get the width and height of this bitmap, but with respect to the data bounds.
Get the tile density of the specified tile width and height in pixels.
Reads a blob value from the database and sets the row's value to the value of the
Read the user custom table from the table name.
Returns the color of this button, or the default color if the button does not have a
Validate the color.
Creates a color object from the given hex color and opacity.
Get the manager from the context.
Set the progress of the feature index, feature index and rtree index.
Returns the index of a list of feature types, or -1 if none.
Index the given row and return true if the row is indexed, false otherwise.
Delete a collection of feature index types.
Delete the feature index for the given feature row and feature index types from the given row.
Delete the feature index for the given geomId and feature index types.
Delete the feature index for the specified geometry id.
Returns true if the feature is indexed, or false if it is not.
Get a list of indexed feature types.
Query for all feature index results.
Returns the total number of features in the index.
Returns the bounding box of the feature table.
Query the feature index with the bounding box and projection.
Returns the indexed feature type, or the empty feature index type if the feature index is not
Get the internal file for the given file path.If the file path is null, the
Get the absolute path of the given file path.
Get the type of the geometry that is associated with this feature.
Sets the value of the geometry type.
Returns true if the URL has a bounding box, false otherwise.
Replace the x and y coordinates in the URL with the x and y values in the tile
Returns true if the given url contains a valid xyz representation, false if not.
Replace the bounding box in the given URL with the projected bounding box of the given tile.
Replaces the bounding box values in the URL with the values in the bounding box.
Get the GeoPackage geometry data for the table's column.
Index a single row in the GeoPackage.
Update the last time the feature has been indexed.
Delete the index for the feature feature table.
Delete the feature index for the given geometry id.
Returns true if this feature was indexed, false if it was not.
Query the database and return a cursor on the results.
Query the database for features within the bounding box.
Count the number of features within the bounding box.
Query the table for features in the given geometry envelope.
Count the number of geometries in the geometry.
Returns a cursor that contains the features in the bounding box that match the specified projection.
Count the number of features within the bounding box.
Get the bounding box of the feature.
Get the geometry metadata for the cursor.
Get the feature row for the cursor.
Get the feature row for the given geometry metadata.
Get the tile DAO for the feature table.
Get the feature DAO for the tile table.
Get the bounding box for the feature tiles.
Query the UserCustomCursor using ids baseId, relatedId and return the query result.
Returns a list of unique base IDs for this user mapping table.
Get a list of unique related ids for the user mapping table.
Delete a record from the user table for the given base id.
Delete by related id.
Delete related resources by base id and related id.
Builds the where clauses for the base and related ids.
Create a new record in the GeoPackage table.
Delete the database from the GeoPackage.
Renames the given package metadata to the given new name.Returns true if the package was
Rename a column in the GeoPackage.
Get all GeoPackageMetadata.
Get the metadata for the specified database.
Get the GeoPackageMetadata for the given id.
Get the metadata for the GeoPackage, creating it if it doesn't exist.
Return true if the given database is an external package, false otherwise.
Get the metadata for the external package at the given path.
Gets the metadata for the column where name like "like" or "sort_column".
Get the list of metadata columns where the column name is not like the given string.
Get the list of metadata column names where the column name is like the given string.
Create the metadata for the GeoPackage.
This method is invoked when a view is created.
Add a parallax view to the list.
Creates a view with the given name and the given attributes.
This method creates a custom view with the given name, and the given context and attributes.
Sub-append the given event to the given cyclic buffer.
Tries to find the logback config file from the system property logback.config.file
Get the URL of a resource in the given class loader.If the URL is not found
Auto-config the joran.xml file.
Status on resource search for the given resource name and path.If path is null, the
Returns the string representation of the given socket address.
Creates a new executor service with the default pool size and default thread factory.
Start all converters starting from the specified converter.
Sub-appends the given event to the end of the list.
Adds a substitution property to the list of properties for the given key and value.
Returns the value of the property with the given key.If the property is not found in
Compile the given AST node into a converter.
parse a node from the token stream, and return it as a Node.
Returns a regular expression for the given date.
Starts the interpretation with the given name and attributes.
Called at the end of the interpretation.
Initializes the context selector with the given default logger context, and the given key.
Creates a new context selector based on the provided logger context and the context selector class.
Set up the properties for the logger.
Returns the absolute path of the external storage directory.
Get the database directory path.
Returns the absolute file path for the given filename.
This method returns true if the error level of the event is lower than the error level.
Get the discriminating value for the given event.
Updates the mask if it is less than or equal to the given time elapsed since the last
Returns true if at least one filter is able accept the event, false otherwise.
Create the key managers for the key store.If the key store is null, return null
Create the trust managers.
Create a KeyStoreFactoryBean from system properties.
Get the location from a system property.If the location is not in the system property,
Gets the URL for a resource.
Returns true if any of the converter in the chain in the chain handles a throwable.
Stop the context, if it is a ContextBase, otherwise stop the hook's context.
Prints the status of the given context in case of errors or warnings below the given threshold.
If the status manager is available, print the status message if there is an error.
Prints the current status manager for the given context to the standard output, if no status manager
Gets the entry from either the live map or the lingerer map.
Marks the key as end-of-life.
Parses the value of the given string as a format-info object.
Renames the source file to the target file.If the target file does not exist,
Checks if the given files are on different volumes.
Returns the value of the given environment variable, or null if it doesn't exist.
Returns the value of the specified Android system property, or null if the system property does not
Set the mdc property map.
Output MDCC property map as a comma-separated string.
Extracts the stack trace elements from the given throwable and returns them as a stack trace element array
Returns true if the current class is in one of the specified list of framework packages.
Add a new status to the list of existing statuses.
Adds the given status listener to the list of status listeners.
Lookup the implicit action for the given element path, attribute, and interpretation context.
Returns the list of applicable actions for the given element path and attributes.
Load the system properties from the given class loader and set the class loader to this class.
Returns the value for the given key, or null if the key is not defined.
Decapitalizes the first letter of the given string.
Returns an array of MethodDescriptors for all methods of the given class.
Returns an array of PropertyDescriptors for all of the methods of the given class.
This method is called when the stream is starting up.This method must be called before the
Adds the given OnConsoleStatusListener instance to the current status manager.
This method ends the processing of a property.This method is called from the end method of
Get the discriminating value for the given event.
Returns true if the event is a discardable event, false if it is not.
Initialize the shutdown hook.
This method is called when the interpretation is complete.This method will be called when the
Returns the list of enabled protocols.
Returns the list of cipher suites that are enabled, or the default cipher suites if none is
Returns a list of strings to include in the result set.
Convert a scope string to a Scope object.
Sets the properties of the given interpretation context, or system properties in the given scope.
Adds a new appender to the appender list.
Detach an appender from the appender list.
Removes the appender with the given name from the list of appender's.
Handles a change in the parent level of the current node.This method is called when the
Call the appenders of this logger and all parent logger's appenders.
Detach the specified appender from this instance.
Create a new child logger based on the last part of the logger name.
Call the turbo filters for the specified marker and level.
Logs the specified SLF4J event.
Creates a new socket and waits for it to be connected.If the socket is not connected
Creates the parent directories for the given file if it doesn't already exist.
Convert the log level to an integer.The integer returned will be less than or equal to
Convert the given int value to the corresponding Level object, or return the given default.
Gets the occurrence count for a given resource.
Returns the URL of the given resource in the given classloader, or null if the resource is
Returns the class loader of the given object.
Gets the class loader as privileged.
Get the class loader of the given class.
This method is invoked when the application is starting up.This method must be called before any
Returns the tag associated with the given event.
This method is called by the interpreter when it is starting up a new instance of this class
Returns the index of the separator in the given name, starting from the given index.
Checks if the given event is in the list of marker events for the given event.
Gets the name of the client thread that will be used for the given socket.
Checks if two files are on the same file store.
Appends the given event object to the cyclic buffer, if the event evaluator evaluates to true.
Send the buffer to the client.This method should only be called if the buffer is not
Adds a MDCValueLevelPair to the MDCValueLevelLevelPair.
Creates a new instance of the converter specified by the keyword node.If the converter is not
Creates a composite converter for the given composite node.
Determine the compression mode based on the file name pattern.If the file name pattern ends with
Configures the JOR using the given URL.This method will open a connection to the given
Configures the JOran instance with the configuration from the given file.
Configures the Joran instance by reading the configuration from the given input stream.
Build the interpreter.
Do the actual configuration.
This method builds the interpreter for the given list of events and then builds the interpreter.
Returns the value of the property with the specified key, or null if the key does not
Set the name of this component.
Returns true if there is at least one status listener in the status manager, false otherwise.
Returns the timestamp of the last reset message, or -1 if the message was not found
Starts the scanner. This method is called by the scanner to start parsing and compiling the
Returns the effective converter map.
Returns the header of the CSS file.
Returns the file's footer as a comma-separated string.The file's footer is a
This method is called by the interpretation point when a new instance of the class is created
Marks the end of a method as having been called.This method should only be called when
Returns a copy of the clients currently connected to the server.This method is not thread-
Adds a client to the list of clients.
Removes the given client from the list of clients.
Returns a copy of the current thread's context map, or null if there is none.
Gets the value of method for the given type.
This method is used to determine if the Turbo filter should be applied to a given
Checks if the current OS is an android OS.
Initialize Joran. This method is not thread-safe, it will be called in
Returns a list of files in the given file that match the specified stem regular expression.
Prints a list of all statuses, if the elapsed time is less than or equal to the
Returns the database file for the given filename.If the filename is null or a directory,
Clears expired logs from the database, if the last check time is greater than or equal to
Returns true if the last cleanup time is less than or equal to the given expiry time.
This method binds the logging event and the arguments of the event to the insert statement.
Merge the property map and the throwable proxy and insert it into the database.The throwable proxy
Binds the logging event to the statement.
Returns the given object as a String truncated to the first 255 characters.Returns null if the
Compute the reference mask for the given event, based on the size of the properties and the
Merges all the property maps for the given event into a single map.
Insert an exception into the database.
Returns the length of the prefix of the given element path.
Get the effective level of this list of statuses.This method returns the highest level of the
Returns true if the given class is unequivocally instantiable, false otherwise.
Returns the value of the first child of the given parent node, or null if the parent
Process an include file for the given URL.
Open the stream for the given URL, or null if the stream could not be opened.
This method trims the head and the tail of the recorder's list of events, and
Returns true if the server should be started, false if the server should be started.
Returns true if this response is a transient exception, false otherwise.
Sets read and write hosts to the default hosts.
Ensures that the local index exists for the client and application and if not, creates it.
Synchronizes the data selection with the local build executor service.This method is not thread-
Syncs the database if the last sync time has passed since the last sync time.
Wait for a task to complete, or until the timeout is reached.
Get the list of offline data from the app directory, and check if the index is offline
Reads the contents of the given stream as a character array and returnsit as a String.
This method converts the input stream to a byte array and returns it as a byte array.
Consumes the given connection, ignoring any errors, and closes the connection and closes the connection
Returns a list of hosts that are up, or the list of hosts that are up.
Sets the type of the places.
Starts the index query.
Puts a new value into the cache, and returns the previous value, or null if the
Returns the value for the given key, or null if the key is not in the cache
Waits for all threads to complete.
Report a failed test.
Copies all files in the given directory to the given target directory.
Initialize the properties from the specified file.If the file is null, the properties will be
Returns the value of a static field of the given class.
Returns the method with the given name in the given class.
Formats the given value as a percentage with the given base value.
Formats a double value as a human-readable string, padded to the specified number of digits
Formats the given long value to the given length with leading zeros to the right.
Writes a JSON-String from a byte array to the output stream.
Write a long as a JSON string.
Write a double value as a JSON string.
Read a JSON numeric character from the input stream until a non-numeric character is encountered.
Read a long value from the JSON stream.
Read a double from the JSON stream.
Read a JSON string from the stream and return the decoded bytes as a Base64-encoded
Executes the given method call and returns the result.
Invoke a request to a remote method call.
Enqueue a method call.
Gets the resource from file system.
Updates the decoration.
Refreshes the repository view of the active workbench window.
Get the resource history view for the currently active workbench window.
Open the given editor in the workbench window.
Report an authentication failure to the user.
Prompt the user for authentication.
Creates the default page for the book.
Starts the animation. If the animation is already running, it will be stopped.
Sets whether or not this Element is a DAV element that is a child of the root
Sets if this element should be removed from the DAV tree.
Set the owner of this element.
Adds a condition factor to the list of possible condition factors.This method is only used for
Create a condition term from a stream tokenizer.
Checks if this condition term matches the given condition term.
Get a DSL configuration file from the given rule source and input.
Load the configuration from the DSL configuration file if it exists.If it doesn't exist,
Reads the configuration from the given input stream.
Get the menu for this control, creating a new one if the menu does not exist.
Adds the response body to the response tree, and returns the response body.
Adds a new href to the list of hrefs for this link.If the href is
Inserts a new href before the given ref href, if the new href is not already in
Removes the given href from the list of hrefs for this element.
Add a prop stat to the propstat list of the first element in the list.
Returns the href of the element.
Returns the status of the application.
Get the stack frame of the current thread.
Returns true if class1 is a subclass of class2, false otherwise.
Checks if the proposals contains the new proposal.
Resets the input stream to the beginning of the input stream.
Creates the actions for the content assist proposals.
Adds a connection to the source and target connections of this connection.
Returns the value of the specified property.
Removes the specified connection from the source and target connections.
Sets the location of the gauge to the given new location.
Sets the value of a particular property.
Sets the size of the gauge.
Dump a constraint array to a string.
Adds a new lock entry to the root of the tree.
Adds the given vertex as a child of this vertex.
Remove this vertex as a child of this vertex.
Set the cache flag to true and set the flag to clear the cache if the cache is
This method is called when the bundle is stopped.This method cleans up resources used by
Returns the value of the key in the resource bundle, or null if the key is not
Gets the resource bundle.
Gets the rule builder for the form colors.
Sets the current date and time to the given string.
Attempts to parse the given date and returns true if the date is changed, false otherwise.
Create an error status with the given message and a given exception.
Log an error to the default logger.
Adds the given field to the list of fields.
Adjust the grid layout based on the number of columns, and the number of fields in the
Apply the font to all the fields.
Calculates the number of columns in the table.
Initializes the page and loads all the fields in the PageEditor.
Notifies all registered listeners of a property change event.
Set the active editor for the specified part.
Contributes this page to the specified tool bar manager.
Determine the dialect to use based on the given back text.
Creates a new context with the user context and the locator.
Save the current file to the output location of the editor.This method is called from the
Creates the table listeners for the table.
Add a value to the URL.
Puts the given value into the given URL.
Adds a token to the list of tokens in the document.
Add a child node to this node. If the child already exists, it will be
Sets the file offset and the length of the file to the specified offset and length.
Adds the given condition to the list of conditions for this DAV object.
Adds a state token condition to the DAV condition list.
Check if the given condition matches any of the existing conditions.
Return the property for this element.
Get the current status of the server.
Set the prop for the root element of this element and the child elements of this element.
Returns the last line of the input text.
Get the last non-dash line from the given back text.
Binds the given string value to the given id in the given binding string.
Bind the two given parameters to the given id.
Bind the given id to the given bindings.If the id is null, return null.
Create a new process for the given example type.The example type should be one of the
Creates the JVM compilation unit for the given example type.The jvm compilation unit is
Returns the current runtime ID for this KnowledgeBase instance.
Visits the given Rete. This method walks the entry point graph of the rete
Visits the given node, if it is a MapEntry, and if it is a Map
Generates a dot-notation id for the given object.
Adds a remove element to the prop tree.
Add a set of properties to this prop.
Create a new locator for the given resource URL and label.
Get the presentation reconciler for the given source viewer.
Returns true if the given status object is the same as this status object, false otherwise.
Returns true if the given condition term is present in the list of conditions, false otherwise.
Creates a new DAV condition factor from the given tokenizer and returns it.
Add the pages for the text editor and the rete viewer.This method can be overridden
Sends a HTTP DELETE request to the Kie REST endpoint and returns the job id.
Sends a HTTP POST request to the Knowledge Base REST endpoint and returns the response.
Get the status of a job.
Executes the pull operation and collects the results of the pull operation.If the pull operation fails
Handles the results of a pull request.
Replaces the element at the given index with the given string value.
Adds an active lock to the lock list, if it is not already in the lock list
Removes all proposals that start with the given prefix from the given list of proposals.
Reads a prefix from the document, starting from the given document offset.
This method calculates the number of rows in the graph.The number of rows is determined by
Returns the edit part for the given model element.
Gets the image descriptor for the given path.
Declares an image for the given key in the image registry.If the image is already
Adds a new vertex to the graph at the specified depth.
Returns the row index for the given vertex, or -1 if the vertex is not in
Returns the maximum width of the rows in this table.
Dump the vertices of all the rows in this matrix to the standard output stream.
Optimize the rows in this table.
Initialize the graphical viewer.
Draw a new Graph.
Returns the DroolsLineBreakpoint for the given source or null if it doesn't exist.
Set the href of the link.
Check to see if we can talk to the DAV.If yes, return true.
Copy the contents of this DAV object to another DAV object.
This method examines a multi status response and examines the status of the response.
Returns the URL of the prop-stats file for the given multi-status.
Gets the content from the DAV service.
Returns an enumeration of all active lock locks in the DAV.
Retrieves the property with the given property name from the DAV properties directory.
Performs a HEAD request to the DAV and returns the result as a java.lang.
Creates a shared lock on this DavFile.
Move all objects in this collection to the destination.This method does not modify the destination.
This method checks if the DAV file is available and returns a stablelocator for it.
Refreshes the lock with the given lock token.
Remove a collection of properties from this DAVObject.
Removes the property with the given qualified name from this DavObject instance.
Sets the content of the current page to the specified content type and reads the content from the
Sets the collection of properties to be used for the DAV operation.
Sets the value of the given property.
Unlocks the given lock token.
Updates the current version of the DAV.
Get the version of the DAV file and verify it is a valid DAV version.
Deletes the resource from the DAV and checks if the resource exists.If it does not
Examines the status code and throws an exception if the status code is not valid.
Returns true if this property has a direct child of the property with the given qualified name.
Writes the request body to the given OutputStream.
Convert a byte array to a hex string.
Convert an array of integers to a hex string.
Sets the value of isAllProp to true if the first child of the current element is
Sets the value of the "isPropName" property of the first child element of the
Sets the value of the first child of the root node of the current node.
Strips the last word from the prefix.
Updates the tree viewer with the current state of the application.
Writes the contents of this stream to the given output stream.
Step over the current state of the state machine.If the state machine does not exist,
Adds the parser errors to the list of markers, and adds them to the list of markers
Skips over any white space characters in the string.
Add a resource to the guvnor.
Commit the changes made to a selected file.
Returns the current age of the item, or -1 if the item does not exist.
Returns the value for the content length property, or -1 if there is no attribute.
Gets the value of the "max forwards" property.
Returns true if the value of "overwrite" should be set, false otherwise.
Returns true if the parameter passthrough is set, false if not.
Returns the number of seconds to wait until the timeout is reached or -1 if the timeout
Put a property value.If the value is null or empty, the value is removed.
Set the timeout value.
Opens a DAG file and returns a buffered reader, or null if the file could not
Parse the file and add the entries to the map.
Returns the object metadata for the given text.
Strips out any object metadata from the end of the string.
Adds a list of tokens to the root node of the tree.
Returns the children of the given text node.
Get the children for the given object and text.
Add a prefix to the list of child nodes of this node.If prefix is null,
Print the tree of all the nodes in the rooted tree.
Recursively prints the contents of the given node to the standard out.
prints the specified number of tabs to the standard output.
Read a JSON value from the given text.
Returns the image descriptor for the given id, creating it if it doesn't already exist.
Invoke the specified request and return the response.
Set the value of a field in the request header of this request.
Create a rule sample launcher for the current version of the launcher.
This method creates the project and rule.xml file if it does not already exist.
Creates the project and rule flow files.
Create the project.java file for the rule flow launcher.
Gets the list of selected IUI elements.
Create an image from the current display and write it to the given output stream.
Returns the field name of this node.If the node's constraint is a FieldReader,
Returns the constraint for this node, or null if the constraint is not a MVEL constraint
Get the value of this field in the MVEL constraint.
Add the properties from a Guvnor resource.
Apply the given baseline to the current view and return the new view.The baseline must be
This method binds the given member to the given source object.The source object must be a
Gets a member by its name.This method checks to see if the locator is stable.
This method sorts the vertices in the order in which they are added to the graph.
Initializes the resource group and sets the file name of the file to the original file name.
This method checks if the resource group is valid and if so, the resource is valid.
Generate an entity tag for the current thread.This method will generate a unique ID for the
Returns the opposite of this vertex, or null if this vertex is the vertex itself.
Validates the list of OTPs against the YubiKey server and returns true if the
Checks if the user is a right user for the given public id.
Gets the username for a given public ID from the given file.Returns null if the file
Add a yubikey to a user's yubikey file.
Verify the OTP for a given user name and return true if it was valid.
clears the password from the list of stored secrets.This method is used to clear the
Returns the public id for the given string.
Returns true if the given string is a valid OTP, false otherwise.
Create an evaluation for the given node and the given source.
Creates a new evaluation object for the given node and source.
Clears the cache of all the caches for this class.This should only be used for testing
Returns true if the current JDK version is jdk-15, false otherwise.
Returns the package name of the given object.
Returns the package name of the given class.
Returns a unique descriptor for the given object.
Returns the type of an argument, or null if the argument is not a type.
Checks if one of the given classes is more specific, or if one of the classes is
Returns the value of the specified property on the specified object.If the property is not found
Returns a map of property descriptors for the given target class.
Returns the property descriptor for the given class and name, or null if not found.
Returns a public read method for the given class and method name.
Reads a char from the input stream.
This method is used to execute a projection expression on the current node.This method is used
This method is used to select all elements in the table.
Convert the value to a Long, or return 0 if conversion is not possible.
Convert an Object value to a Double.
Convert the given value to a BigDecimal.
Converts value into BigDecimal.
Convert the given value to a string, trimming the string if trim is true.
Get the numeric type of the given value.
Convert the given value to the given type.
Gets the int value of the given value.
Get the numeric type of the given two integer values.
Get the numeric type of the two objects.
Creates a number of the given type and long value.
Pop the current evaluation and return the new one.
Generate the OGNL getter method.
Generate the OGNL value setter for the given field.
Flattens the children tree into a new array of child nodes of the same class.
Initializes the iterator with the given node and source.
Escapes the character at the end of the image.
Sets the root of the OGNL context.
Returns the value of the expression in the given context, using the given root object as the
Set the value of an OGNL expression in the given root object.
Sets the value of the given value in the given tree under the given root object.
Checks if the given expression is a constant constant.
Gets the default watch service id.The default service id is returned if the watch service is
Reloads the current application's class loader.
Returns the archiver with the given name, or null if no archiver with the given
Checks if there are any problems in the archiver.
Reads the contents of the specified file as a string.
Create the project.
Add a system property to the java.properties file.
Add a system property to the java.class.
Changes the selected directory.
Refreshes the state of the button confirm button.
Create a FileObserver for the given path.
Return the path of the currently selected folder, or null if no selected folder was selected.
Creates a new folder if it doesn't already exist.
Returns true if the given file is a valid file.
Start a background job for the given message id.If the job is already running, it
Start a list of paragraphs.
Marks the end of a list of paragraphs, if the list is not empty then it ends
Handle the motion of the specified edge.This is called when a child of the edge is
Get the cropping rectangle.
Computes and returns the layout of the image based on the current crop rectangle and the matrix.
Registers the given listener and media factory with the given listener and media factory.
Adds a span watcher to the text if the text is spanned by this span.
Inflates the spinner, and returns the view.
This method returns the DropDownView for the item at the given position.
Convert the given spanned text to the specified format.
This method determines if the given text is inside a paragraph of the given text.
Create a new file in the target folder with the same extension as the original file.
Determine the original file for the given URI.
Returns the namespace for the given name, or the default namespace if the given name is not
Returns the local name of the given name, or the given name if it is not a
Sets the value of an attribute.
Set the value of an attribute.
Gets the font name from the given file path.
Returns the name of the font, or null if the font does not exist.
This method determines if a new buffer needs to be created.
Writes the contents of a byte array to the output stream.
Writes a single byte to the buffer.
Writes the data from the given input stream to the current buffer, and returns the number of
Writes the contents of this buffer to the given output stream.
Returns a copy of the contents of this buffer as a byte array, or an empty array
Set the font size.
Convert windows path separators to unix path separators.
Recomputes the focus of the highlight views.
Makes sure that the highlight view is visible to the user.
Center based on highlight view.
Resets the document locator to the given public id and system id.
Validates the given value against the set of regular expressions and returns the result as a string.
Create an element type with the given name, model, memberOf, and flags.
Sets the value of the specified attribute of the specified element.
Add a child element type to the parent element.
Returns the ElementType with the given name, or null if the name does not exist.
Returns the id of the entity with the given name, or -1 if the entity does
Cleans up the paragraphs of the given editor, excluding the paragraphs that are excluded from the
Apply the given value to the given editor's selection.
Returns true if the given domain is valid, false otherwise.
Called when an operation has been executed.
Redo the last operation on the given RTEditor.
Replace all occurence of the search string with the replacement string.
Returns the ThreadStatus for the given Thread, creating one if it doesn't already exist.
Sets the decoding options for the given thread.
Returns true if the given thread can be de-compressed, false otherwise.
Attempt to decode a file descriptor and return a bitmap. If the current thread is not
Returns a list of all the fonts available in the context.The returned list is sorted by
Returns a map of asset font names to file paths.If the font name is not found
Returns a map of all system font names to the file path.The key is the font
This method initializes the schema, scanner, and the attributes.
Get a reader for the given input source.If the input source is a character stream,
Get the input stream for the given publicid and systemid.
This method is called by the SAXParser when a new element is added to the document.
Expands all non-ASCII characters in the given string into a space-separated list of
Look for the first character in the buffer, and return the index of the character in the
If the element is in the stack and the saved element is in the given element, then
Pop an element off the top of the stack.This method is used to pop an element
Pops the current element from the stack, if possible, and restarts the element if
Returns the prefix of the given name, or the empty string if the name is not a
Returns true if the given prefix is part of a foreign namespace, false otherwise.
Remove leading and trailing quotes from the end of the string.
Splits a comma-separated list of strings into a list of strings.
rectifies the given element if it is not already in the stack.
Save the current state of the toolbar.This method is called when a toolbar is saved.
This method is called when the instance is being destroyed.
Called when the thread is running in the main thread.If the thread is running in a
Called when a link event is received from the fragment manager.This method removes the fragment from
Calculates the base rotation matrix for the given bitmap and sets it to the base rotation matrix.
Returns the maximum zoom factor of the bitmap displayed in the image.
Returns true if there is at least one span in the text in the selection.
Finds spans for the given spannable string and paragraph and removes them from the span processor
Picks up a directory and starts an activity with it.
Rotates the bitmap by the specified degree.
Set the writer to use for the output.
Write a character to the output.
Writes a string to the output, throwing an exception if an IOException is thrown.
Returns true if the given attribute matches the given value, false otherwise.
Write a substring of a string as an escape-escape string.
Write the namespace declaration.
Write an element or attribute name.
Attempts to create the given stream if it doesn't already exist.
Waits for the given stream to become active, or until the given timeout is reached.
If there is no transaction id in the previous snapshots, then we replace it with a new
Wait the minimal duration between requests to execute the next provisioning request.
Returns a list of records for the given request, or an empty list if no records are
Perform an Amazon action, retrying up to the specified number of times.
Try to retrieve an object from Amazon with the given action label.If the object is not
Checks if a bucket is accessible on S3.
Loads the latest snapshot transaction id from the snapshot store and applies the post-processor to the
Call the wildcard expander handler if one is available.
Replaces all occurrences of the old pattern with the new pattern in the input string.
Deletes any character in the given string from the given string, if it is in the given
Adds the given resource lint report to the list of report to be linted.
Updates the given properties object with the properties from the filter configuration.If the filter configuration is
Gets the config properties.
Creates an input stream for the given WRO file.
Convert a map of pre-processor to a map of post-processor.
Compiles a Rhino JS code into a JS code.
Reload the cache with a new value.
Reloads the model with the new value and notifies all registered listeners.
Wraps the given request in a WroServletRequest and wraps it in a WroServlet
Returns a transformer that transforms the input into a base name with the given suffix and extension.
This method is called when an error is received from the server.This method will be called
Sends a redirect to the specified location.
Process a single resource and add it to the given group.
Create an expander handler for the given resource, and the given group and resource name.
Locates an input stream for the given URI.
Creates and returns the WroConfiguration for this WroApplication.The WroConfiguration is
Register the property change listeners for the cache update period.This method is used to register the
Process the request and set the response headers.
Sets the Wro configuration to be used by the Wro application.
Identifies duplicate group names in the given collection of groups, and throws a WroRuntimeException
Merge a WroModel into this WroModel.
Locates the specified URI in this context and returns the input stream that contains the specified URL
Apply post processors to the content of the cache key, and return the result.
Decorate the given resource post processor to call the beforePostProcess and afterPostProcess callbacks
This method processes the request and writes the result to the given writer.
Splits the given option string into an array of options.
Load properties from an input stream.
Parses the properties from the given string.
Creates a WroManagerFactory from the WroManagerFactory class in the context classloader.
Persists the resource fingerprints for all the resources in the given group.
Checks if the given group is a target group.
Extend the plugin classpath with the plugin class path.This method is called when a plugin is
Gets the model resource as a stream.
Initializes a WroManagerFactory instance based on the given Wro configuration properties.
Set the list of transformers to be applied to the model.
Compiles the given content and returns the result as a String using the given compiled function name.
Process a list of resources and merge them into a single string.
Process a list of resources and merges them into a single string.
Executes the given list of resources in parallel, and returns the result as a string.
Apply the pre processors to the given resource and return the result as a string.
Decorate the given pre-processor with the given processing criteria.
Persists the data from the fallback storage to the local file system.
Returns a collection of all the fields of the given object.
Rewrite a CSS URL to an image URL.If the url is valid, prepend the context
Compute the new image location based on the given CSS uri and the image URL.
Adds a model transformer to the list of transformers that will be applied to Wro models.
Serves the processed bundle and returns the output stream to the output stream.The output stream
Initialize the aggregated folder path.
Extracts the variables from the body of the template and returns the result as a map.
Parse a css string and return it as a string, or null if the input string is
Replace all variables in the given CSS string with the values in the given map.
Converts a resource post processor into a pre processor that can be used to perform post processing.
Checks if the resource is eligible for the given resource type.
GZip the response and write it to the given http servlet response.
Creates a new PathPatternProcessorDecorator that includes the given object as a path pattern.
Creates a new instance of PathPatternProcessorDecorator that excludes the given patterns from the given processor
Creates a new instance of WroResourceChangeHandler with the given WroManagerFactory and
Forces the given resource to be saved in the WroFile.
Apply the function func on each imported CSS file.
Returns a list with only the items in the given collection that are not null.
Returns true if the request should be minimized or false if it's not.
Finds all resources that are imported from the specified resource URI.
Computes the absolute url for the given relative resource URI and the import url.
Creates a string representation of the given list of items as a comma separated list of tokens.
Get the list of aliases from the alias csv file.
Create a context for the given initial scope.This method creates a context for the given initial
Evaluates the expression with the given source name from the given reader and returns the result.
Evaluate the given script in the given source name and return the result.
Performs the actual processing of the file and writes the file to the output file.This method
Check if the request is a handler request.
Create the handler request path for the given cache key and servlet request.
Renames an input stream to a new group name.
Computes the destination folder for the given resource type.If the destination folder does not exist,
Process a group of files.
Checks if a change is required for a group.
Attempts to locate the input stream for the given URI in one of the context folders.
Create a new object pool with the given object factory.
Locates an input stream for the given URI in the given folder.
Opens the given jar file and returns a file-like object that represents the jar file.
Extracts the path portion of the given URI.
Returns true if the request is minimized, or false if the request is not minimized
Add a list of URI Locators to the factory.
Decorate the given WroModelFactory with the given list of transformers.
Adds a require to the list of requires for the package.
Process the given content and return the result as a string.
Logs a summary of the number of found errors and the number of resources with errors.
This method is called when a resource is being processed.
Returns the read write lock for the given key, creating it if it doesn't already exist
Create a process from the given source file and return it as a Process object.
Parse a list of properties into an array of Property objects.
Returns a copy of the current task list as an array of TaskInfo objects.
Returns the compilation command for the given input.
Parses the given header and adds it to the headers map.
Add no cache headers to the given map.
Gets the path information from the given location.
Gets the servlet path from the given location.
Returns true if the request URI matches the given path.
Loads a property from a file in the Wro.properties file and returns the value.
Writes the contents of the given reader to the given writer, throwing an exception if the copy
Creates a temporary file with the given extension.
Cleans an image URL by removing the leading and trailing characters and trimming the image URL.
Sets the value of the specified attribute to the specified object in the servlet context.
Generates the data URI from the given input stream and file name.
Generate a data URI from the given bytes.
Sets the given context with the given configuration and registers it as a context under the correlation id
Removes the context from the context map, and removes the correlation id from the context map.
Checks if the group of the given key has changed and if so calls the given callback.
Called when an exception occurs during the execution of the application.
Check if the resource is changed in the group and call the given callback if it is changed
Updates the current hash for the given group.
Checks if there is at least one resource of the given type.
Creates a process for the given source file and dest file.
Parses the group definition.
Creates a group from the given XML element.
Parse a resource element.
Returns a collection of resources for the given group name.
Stop a timer with the given name and thread id.Returns -1 if timer is not
Gets a timer with the given name and todo flags for the current thread.
Returns the timer with the given name, or creates it if it doesn't already exist.
Print the statistics of the current state of the application.This method is used to print the
Wake up all workers, if there are contexts to process, otherwise do nothing.
Updates the number of processed workers based on the number of jobs submitted for the current context.
Updates the statistics for the number of finished jobs in the job queue.
Updates the counter only if the value of the counter is smaller than the given value.
This method is called by the visitor to perform the default visit of the rule.
Inerts the property into a taxonomy if it is in the hierarchy.This method is
Makes sure that the loading is complete and there is at least one input loading stage.
Restores the state of the current stage to the previous state of the current stage.
Checks if the current state of the EDL is consistent with the current state of the E
Restores the taxonomy to the state of this instance.This method is only called by the
Restores the instance taxonomy from the state of the ontology.
Returns a proof of entailment inference for the given conclusion.If the conclusion
This method is called before the worker is ready to be executed.This method must be called
Invalidates this reasoner and all its sub-stages.
Returns a collection of the individual to be added to the index, or null if none.
Returns the set of individuals to be removed from the index.
Thrown when the method is not supported by the Wowl API.
Removes the element at the given position from the given array.
Removes the element at the specified position from the tree under the specified key.
Returns the index of the first occurrence of the specified element in the specified array, or -
Returns true if there is an element in the array that is equal to o, false otherwise
Adds the specified element to the specified array if it does not already exist in the array.
This method checks if the occurrence numbers are valid.
Adds the given timer to this timer.
Adds the given timer to the list of timers.The timer is added to the list of
Puts a value for the given key in the given array if it does not already exist.
Removes the entry for the given key from the array of keys and values in the given array
Enlarges the size of this map by enlarging the keys and values.
This method shrinks the memory used by the class loader.
Saves the given configuration object into the given file on disk.
Prints the declaration axioms of all classes in the class taxonomy.
Gets the all instance nodes from the given node.
Clears the cache. This method is not thread-safe, it is thread-safe.
Returns the combined hash code for the given list of hash codes.
Copy the contents of the given input stream to the given output stream.
Returns an incompleteness monitor that reports the incompleteness of this reasoner.
Processes the taxomomy and writes the result to the given writer.
Submits the given input to the queue.
Appends the given ELFObject to the given Appendable.
Marks the query as not computed and removes all related nodes.
Adds a direct type node to the list of direct type nodes.
Checks that the given chain matches at the given position in the given subobject property expression.
Returns a set that contains the results of applying the functor to each element of the input
Adds the element at the specified position in the vector.
Removes the specified object from the bitfield.
Adds the given counter to this class conclusion.
Log memory usage for the given logger.
Set the configuration options for this reasoner.
Shuts down the server and returns true if the shutdown was successful, false if the shutdown
Print the header.
Prints the specified values to the log.
Returns a string from the given character and the specified number of times.
Adds the given rule counter to this rule counter.
Writes a resource to the specified XHTML writer.
Returns the action input parameter with the given name.
Returns the property descriptor for the given property path and the given property type.
Returns a map of all of the parameters that are required for this action.
Returns true if the given class is a single value type, false otherwise.
Adds a rel parameter to the link.
Sets the media type of the link.
add a hreflang parameter to the list of hreflangs for this link.
Adds a new revision parameter to the link.
Add a link parameter with the given name and values to the list of link parameters.
Expands the URI template with the given arguments and returns the resulting affordance.
Returns a list of rel.paramName = > rel.paramName; or an empty
Returns the list of revs for this link.
Returns true if any of the action input parameters are not satisfied by any of the actions.
Returns the value of this property as a formatted string.
Returns true if the given property is hidden in the method parameter.
Checks if the property contains a value of "include" or "read-only" or
Returns true if the property value should be included in the result of an explicit or implicit property
Returns true if the request is required, false if it is not.
Returns the default value of the request parameter or the default value of the request header.
Returns the name of the parameter, or null if the parameter is not defined.
Gets the property from the expose annotation or the param name of the given action input parameter.
Gets the vocabulary for the given bean, using the given mixin source and the class of the
Returns the query string for the query head and tail of the query.
Append the form to the affordance.
Write a button with the given type and value.
Append an input parameter to the parent input parameter.If the input parameter is an array or
Adds the affordance of the given affordance builder to this affordance.
Returns a list of URI template components as a list of URI template components.
Returns a partial template with optional variables stripped out of the given action descriptors.
Get the first node with the given name in the list of nodes.
Get the first UberNode with the specified rel.
Returns an iterator over the children of this UBER node.
Creates a persistent map from an equality function and an iterable of entry pairs.
Creates a persistent tree from an iterable of Map.Entry objects.
Returns an empty persistent tree map using the given comparator.
Returns the sorted set of entries in this map.
Returns the key of the last entry in the map.
This method applies the given operations to the given source, and returns the result of applying the
Drops all elements in the stream while the given predicate evaluates to true.
Folds a single value into a single value, using the suppliedreducer function.
Returns a tuple of the key and value of the given map entry.
Matches the current selector and returns the result of the supplied function.
Register a set of classes.
Returns the ENode at the specified index, or null if it doesn't exist.
Append the given element to the end of the vector.
Returns a new Vector composed of the same elements, but with the elements in the Iterable.
Creates a mutable set from the given items.
Returns a mutable list of the items in the given array.
Creates an immutable set from an array of items.
Returns a mutable view of the items in the given array.
Creates an iterable from an array of items.
Returns a string builder with the given number of spaces added to the beginning of each line.
Returns a string representation of the given array of objects.
Creates a lazy ref from a producer.
This method is called when a new instance of this class has been created.This method will
Inserts the specified item into the array at the specified index in the specified class.
Returns an array of the same class as the given array but with the same length as the
Suspends the current thread if the current thread is already inaccurate.
This method is called before an AsyncOperation is started.This method must be called before any
Build a list of components for the given service descriptor file.The list of components will be
Checks that the given directory exists and is a directory and that it can be read.
Creates the inheritance link for the concrete class and the super class.
Copies all methods from the source class to the destination class.
Copies the methods from the given array to the given destination class.
Remove the sbb entity with the current class loader.
Returns true if the parameter is enabled, false if it is disabled.
Returns the set of resource-adapters that are referenced by the given service component.
Installs the given service component.
Uninstalls a service.
Checks to see if the raLinkName is contained in the list of ResourceAdaptorEntityLinks
Get the usage parameter sets for the specified SBDB object.
Resets all usage parameters to their default values.
Displays the result of the command.This method is called when the user enters the result
Unfolds the given array of objects.
Executes the specified event on the specified activity handle.
Binds an object to a name in the cache.
Unbinds a named attribute from this cache.
Looks up the value of a child node with the given name in this cache node.
Returns a map with the name and value of the last element in the map.
Get the next entity in the set of entities that have been handled by the SleeContainer
Returns true if this trace level is higher than the specified trace level.
Extracts the given jar file into the given destination directory.
Reads data from the input stream and writes them to the output stream.
Puts an object in the object cache of this node.If the value already exists, it
Attach a SB-B entity to the SBEL tree.
Detach the specified SBBS entity from the world model.
Returns true if there are no SBBS entities attached to the node.
Returns a set of SBBS entities that are attached to the current SBBS node
Adds a timer to the list of timers attached to this context.
Detaches a timer from the graph.
Returns true if there are no timers attached to the current node.
Returns the names of the timers attached to this node.
Adds a name to the list of names bound to the current node.
Unbinds the given name from the current node if it is bound to it.
Returns true if there are no names bound to the current node.
Returns a copy of the names bound to this node.
Sets the value of the specified attribute in the specified cmp attribute of the specified component.
Returns the value of the attribute with the specified name from the cmp attributes node.
Returns a copy of the attributes of this node, where the key is the fqn of the
Initialize the list of notification types that should be sent to the client.
Send a usage notification for the given value and sequence number.If the notification is enabled,
Download a DU file from the given URL and return the location of the downloaded file.
Updates the list of installed components in the deployment.
Install a deployable unit.
Uninstalls a deployable unit.
Processes the internal undeploy action for the given deployable unit.
Show the current status of the application.This is a convenience method for getting the status of
Returns true if the record should be logged, false if the record should not be logged.
Returns the logger for the given log record.
Returns the set of sbb entities contained in the root node.
Get the permissions for the given code source and principals from the current policy holder.
Gets the code sources of the current policy.
Method to check if a profile exists in the profile table.
Remove the profile from the SLEE.If isUninstall is true the profile will be
Updates the configuration properties.
Indicates that the slee is currently running, and that the slee is still running.
This method is called when the object is being suspended.This method will be called when the
Activates the resource adaptor.
Deactivates this entity and deactivates the object if it is in the stopping state
Schedules all the activities to be executed after the transaction has completed.This method should only be
Remove the current object from the context.
Returns the resource adaptor interface of the specified type.
This method is called when a service is active.If there are receivable events,
Returns the activity handle for the given activity handle reference, or null if the handle is not
Called when an activity is ended.
This method updates the configuration properties in the object.This method is used to update the object
Verify that the new configuration properties are valid, and if not, throw an exception if the
Notify the resource system that the resource is stopping.
This method notifies the resource system that the resource adapter is in the inactive state.
This method should be called when the object is no longer in the state of the object.
This method unsets the ResourceAdaptorContext.This method should be called by the ResourceAdaptor
This method unsets the fault tolerant resource adaptor context.
Build the map of profile attributes defined in the profile comparator.
Resumes the execution of the application.This method is called when the application is resumed
Returns the set of activity context handles associated with this activity.
Gets the usage information for a given parameter set name.
Returns true if the abstract class has been decorated, false if it was already decorated.
Fire an event for the given SBEntity.
Fire an event to the congestion control.If the congestion control is not
Get the SLEE profile comparison function for the given SLEE entity and profile id
Returns a map containing all abstract methods declared in the given class.The key is the name
Get a map of all methods declared in the interface, except those declared in the given interface
Creates the SLEE object pool for the given profile table and the slee transaction manager
Remove the SLEE object pool for the given SLEE profile table.
Returns true if the notification source of the given alarm is the same as the given source.
Raises an alarm if the alarm is alive, otherwise throws an exception.
Returns the usage parameter set for the specified profile object, or null if the profile does not
Gets the specs descriptor.
Check if a given deployable unit can be deployed on the local file system.
This method initializes the deployableUnitWrapper with the given deployableUnitUrl and deployable
Starts the deployer with the given URL and unit name.This method will try to start
Stop a specific deployable unit.
Displays the deployment status of the SLE SDK and returns it as a string.
Execute after commit actions.
Executes the after-commit-priority actions if any.
Execute after rollback actions.
Executes the beforeCommitActions if any.
Executes the beforeCommitPriorityActions if there is one.
Returns the names of all tracers which are explicitly set the tracer level.
Creates a new tracer instance for the given tracer name.
Removes the replicated data from the cache, if it exists, and the data with the failover
This method processes the given SLELE component and tries to load the usage parameters interface.
Returns the SBB object pool for the given service and SBB object id.
Create an object pool for the specified serviceId and component.This method creates the object pool
Executes the specified activity handle.
Start the given activity with the given handle and flags.If the activity is already running,
Called when an activity is ended in a transaction.
This method checks the validity of a fire event and checks the validity of the event.
This method is called when an event is received from the SLEE activity.This method
Generate a concrete class for the SBDBLocalObject.This method is used to generate
Make the getter method for the bean's getter field.
Convert an opt-arg string to a Java object.
Sets the profile table name and the name of the profile.
Extracts the message from the result and returns it as a string.
Returns true if the given object is in the cache, false if it is not.
Returns true if the given collection contains all elements in this collection.
Removes all of the items in the given Collection from the list.
Returns true if this level is higher than the other one, false otherwise.
Reads the next value for the current level.This method returns the value of the current value
Removes all the classes from the class pool and removes them from the class pool.
Add a profile call to the profile.
Returns the profile object for the given profile name, or null if the profile is not
Passes a profile object to SLEEAD to the SLEE transaction manager.
Sets the value of this field as the text of the field.
Generate the concrete activity context interface.
Generate concrete methods for the given map of interface methods.
Set the value of a data attribute in the cache.
Adds a new name binding to the cache and notifies the acReferences handler that a new name
removes the names bound to the current activity context handle.
Removes the name binding for the given aci name.
Attaches a timer to the cache.
Removes the timer from the SLEE container.
Attach a SBBE entity to the cache.
Detach the SBB Entity from the cache.
Returns the set of SBS entities sorted by their priority, i.e.
This method is called by the SLEE container to mark the end of the activity.
Add a deployable component to the deployment.
Returns a list of all the external dependencies of this component.
Returns true if any of the dependencies in this project are satisfied, false otherwise.
Return true if there are any duplicate entries in the collection, false otherwise.
Returns a collection of management actions for installing the package.
Get the list of uninstall actions that should be performed when the application is uninstalled.
Returns true if there is a DAO that is referring to it.
This method closes the SLEE container for the specified profile table and profile name.
Gets the object name for the given profile table and profile profile name.
Write the current profile to SLF4J.
Sets the cmp field to the value of the profile table.If the profile table is writable
This method is invoked after the profile table has been updated.This method suspends the transaction
This method is invoked before the profile has been set to get the value of the comparison field
This method is invoked after the transaction has been activated.This method should be called after the
This method is invoked before the SLEE container is created.
Called after a transaction has been activated.This method is invoked after a transaction has been activated
Deletes a file or directory and all of it's sub-directories.
Create a default constructor for the concrete class.
Creates the default usage parameter getter for the given concrete class.
Creates the SBBEntity getter and setter methods for the SBEntity.
Create the fire event methods for the given collection of EventEntryDescriptor.
Create the getSBBActivityContextInterface method for the given concrete activity context interface class.
Adds the given query expression to the list of query expressions to be executed.
Bind the given object to the given key.
rebinds the given target object to the given name.
Returns true if the SBB abstract class is found in the class pool, false otherwise.
Invokes the method with the given name and returns the result of the method with the given name
Gets the real field name for the given field name.
Sets the value of the field with the given name in the current activity context.
Get the value of the field with the given name and return the given return type.
This method initializes the profile with the given profile name.If the profile name is null,
This method will unset the profile context for the current thread.If the profile context is not
Gets the profile local object for this SLEE instance.
Fires the add-or-updated event if the profile entity is not yet dirty.
This method initializes profilecmp_slee10_wrapper.
Creates a class with the given name and interfaces.
Create the inheritance link of the given concrete class.
Adds the member values to the given annotation.
Returns the ActivityContextInterface for the given activity.
Returns the class pool for this class loader, creating it if it doesn't exist.
Add a deployable unit to the deployable unit.The deployable unit must not be
Undeploys all resources that are used by this deployer.
Execute an activity on the SLEE endpoint with the given handle and the given flags.
Returns the class of the given interface or the interface of the given class if the interface is
Returns a map of all methods declared on all interfaces in the given class.
Check if the given tracer name is valid for the given notification source.
Executes a static query on the profile table and returns a collection of ProfileLocalObjects.
Create a temporary DU for the given deployment unit.This method creates a temporary DU
Returns the entity manager for the SLEE profile specification.The entity manager is used to
This method is called when the application starts up.This method will start the application.
Switchs the class loader of the given profile object to the classloader of the given class loader
Makes a proxy call using the given method name and the signature of the given parameter values.
Checks if the current transaction is the same as the current one.
Converts the given access timeout to a TTL string.The TTL is based on the current time
Returns true if the profile class is visible, false if it is not.
Returns the profile object that is valid in the current transaction.
Returns a list of names of all loggers matching the given regular expression.
Resets the log level of the JMX server to the default log level.The default log level
Clear all loggers for the given name.
Add a new logger to the management console.
Removes the handler for the given logger and handler name.
Convert the tracer name to the log4j string.
Synchronizes the log4j level with the local log4j level.
Assign the log4j trace level to the given log4j level.
Reset the cache flags for the current trace level to the default trace level.
Sends a trace notification to the SLEE for the given trace level.
Checks if the given tracer name is valid for the given notification source.
Writes a vendor data object to the given output stream.
Reads a Vendor-Data object from the given input stream.
Adds a direct dependency to the list of dependencies for the given domain.
Returns a list containing all of the dependencies of the application.
Tries to find a class with the given name in the class loader.This method acquires
Override findResource to return the URL for the requested resource in the context of this class.
Returns an enumeration of URLs for all of the resources in the classpath.This implementation uses the
Creates and registers a profile m for the given profile name and profile table.
Resume the specified transaction.If the transaction is already suspended, this method will be called.
Returns a set of ids of all the sbb components in the specified component repository.
Gets the resource adaptor entity link for all the resource adaptor entity bindings in the specified component repository
Initialise the SLEE state machine.
Shuts down the SLEE.
Validate the state of the SLEE, and throw an exception if the state is invalid
Generate a named usage parameter getter method for the given concrete class.
Set the value for the field with the given field name in the given value object.
Creates a new instance of Jdbc configured with the parameters in this builder.
Adds a value to the list of values for the field to be inserted in the query.
Executes the given TransactionWrapper, committing the transaction and returning the result.
Creates a new region request from a string.
Returns the region of this rectangle.
Get the on-type string for the given deserialization context.This is the name of the
Sets the list of viewing hints supported by this viewing hint type.
Add a viewing hint for the resource.
Sets the list of other content that should be rendered.
Add rendering to this resource.
Merges a list of profile instances into a single image api profile.
Creates a new RotationRequest instance from a string.
Creates a new SizeRequest from a string.
Initializes the adb connection.
Get the XML dump of the current device.
Execute the pop box command and return true if the command was executed successfully, false otherwise.
push the gps2 device to the temp directory.
Clean up the temp file system by deleting all data in the temp file system.This method
Pulls a dump of the device's serial number and returns the path to the temp file
Get crash log file name.
Determines the line so far of the text, and truncates the text at the
Add a number of spaces to the start of each line.
Tokenize the given text into a collection of HTML tags and nested tags.
Converts the given text to a Markdown string.
Escape special chars within tag attributes.
Adds the given exception to the list of exceptions, if the list is non-empty.
Closes the statement cache, removing any statement that is associated with the cached statement, and then
Returns the fully-qualified class name of the parent of the given type element.
This method writes the barber-shop.java file to the given filer.
Write a bit vector divider.
Appends a bit vector from a string array to a bit vector.
Reads data from the given input stream.
Returns a list of objects from the given path with the given expected class and filters.
Sets the klov report for the KLOV component.
Add a screen capture from the given image path.
Sets the system info for the given key to the supplied value.If the key does not
Creates a selector that selects a property on the given property name.
Create a selector that applies a function to each value of a property on a specific alias.
Returns a list of annotations that are valid for the given set of packages.
Extracts all annotations for the property of the given class and all superclasses.
Finds the annotations for the given property on the given class.If the property doesn't exist
Returns the property descriptor for the given property name in the given class.Returns null if the
Creates a new instance of the given class from the given map.
Create an instance of the given class using the properties from the given map.
Convert the given object to a Map, ignoring any Strings in the given array.
Convert the given object to a map, ignoring the given set of Strings to ignore.
Returns a map containing the values of the given annotation.
Create a composite validator for the given validation meta data.
Lookup the list of validators and initialize them with the validation meta data properties.
Looks for a validator in the application context for the given meta data name.
Apply the properties from the validation meta data to the validator.
If the property is blank, remove it from the properties map.
Sets the time of this timer to the given time.The time of the timer is set
Returns the number of elements in this cache, i.e.
Computes the hash value of the given object, using the current hash code as the seed.
Open a database and return true if the database is open, false if it is not.
Puts all the values in the given map into the database in a batched write operation.
Remove all entries with the given keys from the database.
Returns an iterator over the entries in the database, starting at the given key.
Load all by keys into a map.
This method closes the database, and closes it if it fails to close the database.
Reduces an array of doubles into a single double.
Performs a double-reducer on the given array of doubles and returns the sum of
Returns the variance of the array of values in the range [start,start + length).
Computes the mean of a range of values.
Invokes the given method on the given object with the given arguments.
Reduce an array of float values using the given reduce function.
Converts a timestamp in YYYYMMDDTHHMMSSZ format to a string representation.
Returns true if the given object matches at least one of the given criteria, false otherwise.
Creates a Criterion that evaluates to true if the value of the criterion is not in any of
Creates a Criteria object from a list of objects.
Creates a new Criteria object from a JSON string.
Adds an array of integers to the array.
Returns the maximum value in the array, or null if the array is empty.
Gets the first N elements of a list, or null if the list is empty.
Returns the last item in the list, or null if the list is empty.
Returns the last N items of the list, or null if the list is empty.
Returns the least count items from the given list, or null if the given list is empty
Returns the minimum item in the sorted list or null if the sorted list is empty.
Returns the minimum element of the array, or null if the array is empty.
Process an array of maps.
Handle a collection of maps and set the value of the field to the new instance.
Create an instance of the class represented by the key "class" in the given map.
Gets the value associated with the given key.
Create a tool tip from the resource bundle, using the field name as the name space.
Adds a 16-byte hexidecimal character to this char sequence.
Processes the queue of write operations and sends them to the output data queue.
Starts the write queue, and waits for it to be processed, if the queue is
Returns the string at the given index, or null if the character is not in the string
Returns the slice of the given string starting at the given index.
Checks if any of the characters in the char array is in the given string.
Adds the given char to the end of the string.
Add the given objects to the string, and return it as a string.
Returns a copy of the string with all the characters in the compact form.
Splits the given string into a number of characters.
Splits the given string by space, and returns an array of the split string.
Splits a string on a pipe character, and returns the result as a String array.
Convert a char array of array to a string array.
Convert the input string to camel case.
Checks if the character in the given string is inside the given string.
under bar case.
Returns a string representation of the given number.
Returns a new Sort that will be used to sort the results of the given Sorts.
Sorts the given list according to this Comparator, using the ordering of the given fields.
Returns a comparator for the given fields.
Returns the list of comparators that should be applied to the children of this sort order.
Checks if the given value is in the given map.
Returns true if the expected value is equal to the expected value, false if the expected value
Compares two arrays of integers and checks if they are equal.If they are, throws an
Returns the sum of the numbers in the range [start, start + length).
Rounds a given number up to the nearest power of 2.
Sorts the given list of fields in the given order by the given field names in the order
Sort a list of objects based on a field name and a ascending or descending order.
Sets the value of the given field from the given map.
Converts an object to a list.
Creates the SQL statement to load all versions of a table.
Returns a deep copy of the given list.
Returns true if the given value1 has a String field with the given name.
Checks if the given class has a field with the given name.
Checks if a class has a field with the given name.
Returns the first field name of the first comparable or primitive field of the given class.
Gets the sortable field from value1.
Compares two cache entries for the same type and returns the order in which they were added.
Compares the timestamp of this cache entry to the timestamp of the given cache entry.
Sorts the given list according to the given sorts.
Sorts the list according to the given sort-by field.
Returns a sorted collection of entries of the given component type from the given map using the given
Sorts the values of the given map using the given sort order and ascending or descending order.
Sorts the keys of the given map by the given property name.
Sorts the given array of objects by the given field.If the field is null, the
Returns a comparator that compares two values using the given field as the field's value.
Returns a comparator that can be used to sort objects according to the order ofthe objects.
Gets the value associated with the given key in the cache, or null if there is no
Returns the value for the given key, null if the key is not in the cache.
Deletes all entries from the cache, if the number of entries in the cache is less than
Dynamically init the range with the given value, if the value is not already initialized.
Attempts to allocate a buffer from the recycle channel or allocates a new buffer if the recycle
Returns true if we should exit, false if we should stop.
Attempt to manage the input channel.If the channel is available, it will be used.
Checks if the queue is empty and if so, if so, flushes the queue.
Starts the monitor. The monitor will wait for the monitor to be started, and then the
Starts the simulation. This method should only be called when the simulation is started.
Returns the value for the specified key, or null if the key does not exist in the
This method returns the results of the main query plan based on the given criteria.
Do the filtering for the given group.
Updates the time and checks if the file time out is too long or if the time is
Syncs the contents of the output stream to disk.
Tries to close the output stream if the output stream is not null.If it fails,
Writes the contents of the given buffer to the output stream.If the buffer is dirty,
Writes the contents of the given buffer to the underlying output stream.If the output stream is
Initializes the output stream.
Puts all of the values in the given map in the underlying store.
Returns the byte array for the specified key, or creates it if it doesn't exist.
Reads the meta data for the given property from the properties file and returns a list of Meta
Extract the meta data from the string representation of a validator's property.This method uses the
Read the meta data for the specified property from the cache.
Extracts the validator meta data for the given property name from the given validator meta data list.
Extracts validator meta data from annotations.
Convert annotation data to validator meta data.
Splits the given string using the given split character and returns the result as a String array.
Splits the given string by white space and returns an array of substrings.
Splits the given string by the given delimiters.
Removes the characters from the given string, that are not contained in the delimiters.
Splits a string into an array of Strings, where each element is a character sequence, and
Parses a double from a string.
Parse an int from the given buffer starting at the given position.
Parses a long from the given string starting at the given position in the given buffer.
Returns the value of the property at the specified path in the given object or null if the
Returns a map of field names to field access objects for the given object.
Returns the type of the property from the given object rooted at the given property.
Injects the specified value into the specified object property in the specified path of the specified object
Sets the value of the property at the given path in the given class.
Returns the value of the property at the given path from the given object.If the path
Gets the value of a property on the specified object.
Gets the int value of one or more properties of the given object.
Set up the detail message for this component.
Creates a message with the specified key and the specified arguments.The message is created with the
Creates a validation message with the given message and the given actual arguments.
Convert a list of keys to a list of values.
Gets the subject for the current validation step.
Parses the given JSON string and returns an object representation of the JSON object.
Sends a request to the server and sends it to the given response handler.
Deletes the database with the given name.
Create a new DB with the given name.
Gets a list of UUIDs for the given number of times.
Triggers the replication operation and returns the result.
Query for a value in the document.
Specifies whether the view should be descending or not.
Synchronizes all documents in the design document store with the data in the database.
Gets the design document for the given ID from the database.
Gets all DesignDocs from Desk and returns them as a List of DesignDocument objects.
Gets the design document for the given id.
Saves the replicator doc to the database, and returns the response.
Returns the replicator document for the given replicator id and revision.
Returns a list of all replicator documents in the database.
Removes a replicator from the data store.
Find an instance of the specified class type with the given id and parameters.
Returns the list of documents that match the given json query.
Returns true if the given id exists in the database, false if it doesn't.
Create or update a list of objects in a single request.
Makes a PUT request to the given URI and returns the response.
Sends a PUT request to the given URI and returns the response.
Execute a POST request.
Execute a HTTP DELETE request and return the response.
This method checks if the HTTP status code is valid and if so, if so, if
Sets the entity to the given JSON string and sets the content-type to "application/
Adds an attachment to the list of attachments associated with this message.
Gets the changes for the current user.
Reads the next row from the input stream and returns true if there is at least one row
Convert the money to a human readable string.The money is represented as a decimal number.
Release all locks and wait for all locks to be released.
Writes the contents of an observable into a servlet output stream.
Add a set of tags to the given metric.
Verify and create the temp tables for the current date and time.This method blocks until the
Get the project id for the given namespace name.
Returns true if the request method is GET or DELETE, false otherwise.
Sends the authentication request to the client.
Get the verb from the exchange.
Generate the subject access review for the given verb and resource.
Releases the connection back to the pool.
Called when a request fails due to a connection failure.
Initializes the session with the given RX session.
Finds all scheduled jobs for the given date range.
Converts a map of bucket points to a list of bucket points.
End the exchange with the given status code and reason phrase.
Returns an observable sequence of all rows in the bucket starting at the given timestamp.
Creates a new buckets object from the given start, end, and step.
Sends the given message to the Kafka broker and returns true if the message was sent successfully.
Send one way message to the consumer.
Sends a message to the specified topic and tag with the specified delay level.
Returns the results of a scan on the given cursor, using the given scan parameters.
Adds a file to the zip archive.
Replace the specified entry in the zip file with the specified text.If the file does not
Builds the zip file and returns the path to the zip file.
Generates metrics for the given component and product.The generated metrics will be added to the
Fetches the content for the given content id from the resource cache and returns the content result.
Fetches the content of the order item.
Upload the given export transformation as a zip file to the server.
Generates a file from the given iterator of components and returns a FileGenerationMetrics object.
Creates a random file in the given parent directory, creating it if it does not exist.
Add a new child object to the end of the tree.
Register a model adaptor for the given model type.
Registers an attribute renderer for the given type in the given group.
Creates a template for the given prototype, model variable, and content info.
Add a domain object to the assembler.
Sets the value of the property with the given name to the given value.
Adds a child configuration object to the list of child configuration objects for the given collection.
Returns a supplier that will create a new file in the given directory with the given prefix and
Copy the contents of the given input stream to the given output stream using the given hash function
Parses the given file and returns a Document object.
Parse the content of the given reader as a DOM Document.
Returns stream of all elements in parent element.
Returns a stream of all of the nodes in the given parent element.
Get the first child element of the parent element with the given names.
Returns a stream of elements that are named in the parent element or any of its child
Validate the given XML document using the given XML schema and the given human-friendly document type
The main entry point for the file archiver.
Creates a new content builder using the content from the given input stream.
Creates a content builder from the given resource.
Processes a single entry in this ZIP file and invokes the given processor for each entry.
Encode the given string using the UTF-8 encoding of the URL-encoded character set.
Sets the signature for a given access key and the given signature date and time.
Removes all white space characters from the end of the array.If the array is null,
Signs the given request handler with the signature of the call back.
Sets the data in the recorder to the data in the JSON format.If the recorder is
Complete a multi-part upload.
This method is called when a notification is added to the list of notices that have been
Adds the notification state for the given entry id.
Returns true if the timer has expired or false if the timer has expired.
Get a single notification with the given id.
Get the list of add-ressees for the given id.
Returns the Addressee with the given id from the given notification.
Get a list of all events for a given notification.
Retrieve the event for the given notification id and event id.If the event is not found
Get the REST URL for a single notification in the web.xml file.
Gets the JPAEntry for the given entry id.
Returns an authentication token. If the token is expired and forceUpdate is true, the token
Returns the total number of entries in the notification list.
Add all the new notification categories to the list of new notification categories.
Fetches the SSP notifications for the current user.
Creates a notification error with the given error message and adds it to the notification response object.
Maps the given response to a notification response, based on the given request and the response body
Returns a notification entry for the given row index, or null if there is no notification entry
Attaches a list of actions to the specified notification entry.The list of actions will be
Normalizes the link. If the link starts with "ssp" then return the SSP
Gets the notification category from the request's preferences.
Gets the notification source for the given portlet request.
This method is called when a notification is being invoked.It checks if the notification has been
Reads the notification response from the file specified by the filename.If the file does not exist
Gets the user's school id from the user's user info.
Extracts the user id from the response body and returns it as a string.
This method is called when the notification is being invoked.
Returns a map containing all of the attributes of this notification as a key-value pair.
Normalizes the components of the vector by dividing its x and y and z components.
Checks if the rectangle A is contained in the box B.
Finds the closest point to the given point.
Returns the sign of the line segment.
Sets the values of this SE3 from the given SE3F64 object.
Sets the value of this quaternion to the given x,y,z components.
Convert the input vector to the output vector.The output vector must be the same size.
Convert an array of d values into a quadrilateral-f64 values.
Calculates the bounding rectangle of the quadrilateral f64.
Calculates the bounding box of a polygon.
Returns the center of the quadrilateral distribution of the given quadrilater
Calculates the average value of the vertexes in the input matrix.
Creates a convex hull from a list of points.
Removes vertexes that are almost parallel than a given tolerance from the given polygon.
Returns the average of the closest point error between the target and the given model.
Computes the area of the line segment between the two points.
Returns true if the given quadrilateral frustum contains the given point.
Returns true if the specified point is inside the triangle of the specified triangle.
Returns the intersection between the two points.
Calculates the intersection of two line segments and returns the intersection point, or null if the intersection
Computes the intersection between two lines and returns the output pixel values.
Computes the intersection of target and l, and returns the distance between the target and l.
Returns the intersection of two vectors.
Returns true if the specified ellipse contains at least one point.
Calculates the area of the intersection between two points.
Returns the value at the given index in the matrix, or -1 if the index is
Convert a DMatrix to a Quaternion.
Create a new rotation matrix rotated around the x-axis.
Sets the rotation around the x-axis of a rotation matrix.
Rotate the y-axis of a rotation matrix and return the resulting matrix.
Rotates a rotation matrix around the z-axis of the given angle.
Sets the rotation matrix to the given angle in degrees z-direction.
Converts an euler transformation matrix to a rotation matrix.
Create a rotation matrix that rotates around the given angle about the given axis.
Sets the angle of the line in radians.
Convert se3_f64 motion to twist coordinate.
Sets the initial translation and rotation of the frustum to the translation of the initial frustum
Interpolate the matrix by the given translation using the given initial translationand the given translation.
SVD returns true if the SVD is true for the given set of points, false
Solves a point on the plane and returns true if the point is found in the plane
Returns the length of the side at the given index.
Returns true if the point p is inside this point, false otherwise.
This function converts the given ConicGeneralF64 object into a DataBufferExon.
Copy a ConicGeneralF64 vector to another ConicDouble.
Convert a ConicGeneralF64 object to a ParabolaGeneralF64 object
Convert a ParabolaGeneralF64 to a ConicGeneralF64.
Divide the point by v.
Convert a matrix from x-coordinate space to z-coordinate space to a matrix.
Convert a Tuple3D to a GeoPackage's x, y, and z components.
Set the parameter vector of the unit axis rotation and unit-axis rotation.
Calculates the Euclidean distance between two angles.
Determines if two points are intersecting with the line described by the argument.
Returns true if the plane is contained in the plane.
Returns true if the line and sphere are intersect, false otherwise.
Interpolates the components of two complex numbers using the specifiedinterpolation factor.
Extracts the quaternion from a quaternion matrix and stores it in the quaternion matrix.
Computes the distance from the input point to the hull.The distance between the input point and
Sets the first component of the SE3 to the identity of the SE3 to no motion
Convert a SE3.F64 to a homogeneous representation.
Convert the Se2f64 to a homogeneous transformation matrix.
Creates a new Se3D3F64 from given x,y,z-coordinate
Checks if two vectors are identical, i.e., i.e., i.e
Convert a latitude and longitude to a unit vector.
Checks if the circle is inside the circle.
Returns the square of circle radius between x1 and x2.
Returns the closest point on the line segment l0 to l1, i.e.
Returns the closest point on the line to the given point on the line.
Finds the closest point origin to the plane.
Finds the point on the line closest to the given point on the plane.
Find the closest point on the triangle to the given point.
Computes the transformation between the 2-D projection matrix and the 3-D projection matrix.
Transforms a set of points in the SE2-F64 coordinate system into a set of
Checks if this quadrilateral is equal to the given quadrilateral
Calculates the acute angle between the two vectors.
Convert a Vector3D to a Vector2D.
Convert a Vector2D to a Vector2D.
Convert a DMatrix into another DMatrix object.
Convert the A and B values of D into a B, and return the D.
This function converts a 2D array to a 2D array and stores the result in a
Converts a pair of p, b, and ret to a new D-clamping
Convert a Point2D into a Point2D.This method converts a Point2D
Copy the data from the source image to the result in the specified D object.
Convert a Point2D into a Point2D.
This function converts the input matrix into the output matrix.The output matrix is not modified.
Convert the input vector to the output vector.
Convert a plane to a world coordinate.
This function converts a Point2D into a Point3D.
Convert a plane to a world.
Returns true if this matrix is identical to the given one, i.e., if the
Returns a deep copy of this matrix.
Returns the square of the sum of all elements.
Returns the t-value at which the point lies on the line.
Check if the EJML element is uncountable, i.e.
Checks if this parabola is equivalent to the specified parabola.
Sets the center of this quaternion to the absolute values of this quaternion.
Calculates the angle between two lines.
Checks if the given point is infinite, with respect to the given tolerance.
Generate a random n-dimensional vector from a center point and a standard deviation.
Convert a Huffman matrix into an ECP1D matrix.
Returns the difference of the components of two vectors, in terms of x and y.
Returns true if two points are identical, i.e., if they have the same sign
Set this rectangle to be a copy of the supplied rectangle.
Convert an ellipseRotatedF64 object into a quadratic quadratic model.
Computes the point at a given angle, and returns it in the given output vector.
Computes the angle of a point in the f64 ellipse.
Computes the tangent of an ellipse rotated by a tangent tangent.
Selects the tangential intersection between the ellipse and the center of the tangent line.
Get the corner at the given index.
Returns the Euclidean distance between the two line-vectors l0 and l1.
Returns the squared Euclidean distance between two points.
Computes the Euclidean distance between the given point and the point l.
Calculates the distance between the plane and the given point.
Returns the distance between this cylinder and the given point.
Calculates the Euclidian distance between two segments.
Returns the square root of the squared distance between the segment A and the segment B.
Returns the Euclidian distance between the quad and the specified point.
Calculates the Euclidean distance between a point and a point on the quadrilateral
Returns the Euclidean distance between the specified poly and the specified point.
Returns the minimum squared Euclidean distance between a polygon and a point p.
Calculates the origin of the line from the origin point to the line's slope.
Returns the Elevation's distance between the given point and the given ellipse.
Computes the 2-dimensional Earth distance between the given ellipse and the given point.
Adds a transform to the end of the path.
Finds the point on the line that is closest to the given point.
Returns the closest point on the plane of the ellipse rotated by the given ellipse.
Solves a polynomial curve from the given data starting at the given offset and length.
Create a random vector with x,y,z values in [min,max)
Returns a canonical perpendicular representation of the input object.The canonical representation of the
Checks if two points are in the same z-axis, with a given tolerance.
Normalizes a vector so that x,y,z = 1.0.
Creates a matrix from an array of values.
Converts a 2D matrix into a 4D matrix.
Returns the Euclidean distance between this Point and the given point.
Set the ellipse to be rotated.
Normalizes this vector so that it is normalized by its magnitude.
Calculate the Euclidean distance between two points.
Returns the 2-D triangle of the quadrilateral triangulation.
Calculates the total number of points in the polygon.
Calculates the mean of a sequence of points at a certain offset in a given array.
Orders a list of points according to the CCW algorithm.
Computes the covariance matrix for a set of points using the mean of the points.
Returns true if the given polynomial is a convex polynomial, false if it is not.
Multiplies each element of this Vector by the given scalar.
Finds and returns the maximum absolute value.
Returns the Euclidean distance from the specified points.
Calculates the squared Euclidean distance between the given point and the given z-coordinate.
Returns a list of random points from a plane.
Returns a list of random points from the given mean.
Generate a list of random points from a gaussian distribution with the given mean and standard deviation.
Calculates the mean of a list of points.
Calculate the mean of a list of points.
Invalidates all credentials in the given iterable.
Invalidates all tokens in the cache that match the given predicate.
Combines a collection of Strings into a single set of Strings, and returns it as a
Get the set of features supported by the dropins server.
Get the list of features that should be applied to the dropins.xml file in the
Returns the set of features that should be applied to the server XML file.The set of
Parse the "include" node and return the set of result.
Parse the feature manager node and return the feature names as a set of strings.
Download the JSON files for the given product id and product version.
Get a set of feature names from a set of open liberty feature files.
Check if there are only open liberty features to install.
Returns true if the reference contains all elements in the target collection, i.e.
Extracts the next product version from the given version.
Extracts the symbolic name from a jar file.
Get the map of install kernel jar files for the given directory, if any, otherwise return
Returns true if the two jar files have the same version as the one in the jar.
Extract the version from the given file name.
Compares two version strings and returns the order of the string comparison.
Executes the given action on the given install directory.
Check if the given jar file is a Spring Boot Uber jar.
Get an arquillian property by its key.If the class is liberty-
Returns true if the given file is working in this environment and is not headless.
Moves the cursor back to the center of the screen.
Returns true if s1 and s2 are equal, false otherwise.
Loads an integer from the given string or returns the default value if the string can not be
Method to throw pizza party tortoise, cecil, mic
Verify the turtle.
Swaps the blank cells of this puzzle and returns a copy of the puzzle.
Calculates the total distance between all cells and returns the sum of the total distance of each cell
Print to standard output stream.
Print to System.out.println with the given locale and format and arguments.
Creates a Fisher-Bayes object with the specified number of Fisher-B
Prints the given variable to standard output, if the variable is not set, or if the
Returns a uniform number between a and b.
Returns the uniformly distributed random number between a and b.
Returns the poisson coefficient for a given lambda.
Returns the number of elements in an array that are discrete.
Capitalize the first letter of a word.
Converts the first character of a word to upper case, and returns the rest.
Make sure that the path ends with a trailing slash if it doesn't end with a slash
Converts a CriteriaJoin object to a String.
Returns the token sentence for a given token.The token sentence will be stored in the cookie
If the token is expired and the token is not expired, redirect to the login page.
Extract auth token from cookie list.
Registers all Jersey classes in the given injector with the Jersey environment
Gets all the role permissions for the given role and adds them to the given set of permissions
Adds a projection and alias to the list of projections to be included in the result.
Convert JobInfo to JobDetail.
Convert a TriggerInfo to a Trigger.
Sets the repeat count and repeat interval values in the builder.
Sets the start and end time of the trigger builder based on the specified TriggerInfo object.
Add an item to the queue and send it to the server.
Writes the contents of this instance to the given output stream, using the specified output stream.
Initializes the scheduler and the job manager.
Returns a sorted list of all fields in the specified class.The order of the list is
Returns a map of all the fields of the given class.
This method configures the encryptor to use the given token based auth configuration.
Generate a hash for the given attributes.
Generate the token string.
Send a message to all receivers of the given mail item.
Generate a strong password for the given user.
Returns the user with the given account name, or null if the user does not exist.
Hashes the given password using the SHA-256 hash of the given account name.
Verifies that the given account name is valid for the current account strength.
This method is called when the transaction is successfully completed.This method will commit the transaction if
Rollbacks the transaction if the transaction is in error status.
Starts the transaction. If the transaction is in progress, it will be started and completed.
Returns true if the token is authorized, false otherwise.
Parses a date from the given object and field as a java.util.Date.
Builds and returns the response for the internal error.
Creates a new restriction that tests whether the specified parameter is equal to the specifiedvalue.
Creates a new restriction that ensures that the given parameter is not equal to the given value.
Creates a restriction that requires an object to be less than the given object.
Creates a restriction that tests if the provided property is less than or equal to the given value
Creates a new greater than restriction with the given parameter name and value.
Creates a new restriction that requires an object to be greater or equal to the given value.
Creates a restriction that allows to find an object in the collection that contains the given value.
Create a new in restriction.
Adds a new namespace to the namespace manager.
Returns a copy of this resource representation with the given content as the content of the resource.
Returns a copy of this resource with the specified relationship updated.
Returns a copy of this representation with a new value.
Create a new ResourceRepresentation instance with the given namespace and href set.
Returns true if the given range of bytes can be decoded, false otherwise.
Encode a string into a byte array.
Tests if two Reader's are equal.
Moves a file from src to dst.
Creates and updates the last modified time of the files in the array.If the file does
Get the base name of the given file.
Adds padding to the end of the block, if the block is larger than the current block
Returns the short name of the given class.
Returns an unmodifiable set of all super types of the given class.
Verifies that the given password matches the given hash.
Read a string from System.in using the specified character set.
Appends a single byte to the end of the buffer.
Appends the contents of a byte array to the end of the buffer.
Creates a deep copy of the given array.
Returns the sum of this fraction and the sum of this fraction and the given fraction.
Returns the difference of this fraction and the given fraction.
Multiplies this fraction by the given fraction, and returns the result.
Returns a new fraction that is divided by the given fraction.
Find and return the max value among the given array of values.
Returns the smallest value in the array of long values.
Throws an IllegalArgumentException with the given message if the condition is false.If the condition is false
Fetches content from the meteo service for the given latitude, longitude and altitude.
Fetches the sunrise content for the given coordinates and date from the meteo server.
Fetches sunrise data from the meteo server and returns it as a SunriseData object
Returns a list of forecasts for the forecasts from the current date.The first forecast
Finds the nearest forecast for the given date.
Performs a forecast query and returns the result as a meteoData object.
Create a simple forecast for the current day, if there are any forecasts in the index
Create a forecast on the day of the day of the date series of this object.
Creates a new location from a string representation of a latitude, longitude and altitude.
Fetch the content of the meteo server and return the content as a MeteoData object
Create a wind symbol name from the given point forecast.
Find the beaufort level for a given point forecast.
Convert a string representation of a URI to a meteo.org URI object.
Returns true if the given date is within the sun period.
Gets the point forecast for the given date.
Returns the best fit period forecast for the given date range, or an empty optional if no
Fetch the content for the given longitude and latitude, using the default language.
Get the weather data for the given latitude and longitude and language from the meteo server.
This method updates the db with the data from the user and password specified in the constructor.
Invokes a method on the given thiz object, and returns the result as a String.
Acquires an object from the data source.
Gets a referenced object from a class and a reference name.
Returns a wrapped object that wraps the specified object in the specified class.
Gets the configuration object from the configuration file in descending order, and throws configuration exception if the
Checks if the substitutor is enabled for the given bootstrap configuration.
Creates a class iterator for the given service and service name using the given class loader.
Returns a decoder for the given configuration.The default decoder is returned if no decoder is configured
Returns a list of all the services for the given interface.
Returns the module with the given name for the given interface implemented, or null if the module
Acquires an input stream for the given data source.
Returns the size of the data in the given data source.
Creates a new referenced data object with the given ref and the given byte array data.
Gets the component at the given index.
Get the prefix of the component at the given index.
Returns true if the type is plain, false if it's a coloured type.
Execute a regular expression, and return true if the result is true, false otherwise.
Returns true if a cycle is found, false if there is no such cycle.
Adds a subset of the regular expression to the list of matched regular expressions.
CBRDISCOLVERIES a subexpression, returning true if the subexpression is
Clones the out chains of the given state to the given state.
Optimize the tree of subtrees, starting from the root of the tree.
Recurse through the tree rooted at t, adding it to the inuse flag.
Returns the number of nfa nodes in the tree starting at t.begin and t.
Parse a subre starting from the given stopper state.
Walks the tree starting from s to the leftmost state, freeing the state if
Computes the complement of a non-word in the state nfa.
Clones the nFA's wordchrs and returns the state of the wordchrs
Searches for a digit in the input stream, and returns the index of the next digit.
Matches a bracket, starting from lp and starting from rp.If bracket is not matched,
Scan a plain string, and return the next string, or null if nothing was found.
Create a new lacon in the current state, and return the index of the newla
Process one character of the input sequence.
Do a single vector.This is a helper function that takes a UnicodeSet and returns a
Returns the short value of the specified color, or throws an exception if the color is not
Returns the pseudo-color of the current color.The pseudo-color of the current color
Subrange the range from the given range to the given state.
Check if all of the color descriptors are valid for this NFA.
Change the color of an arc to the color of the arc's co-direction.
Change the colorchain of an arc to its uncolorchain color.
Print the color descriptions for all the colors in this object.
Parse the start of a lex token.This is the beginning of the lex token.
LexicalNegate the interpolated string and save the current state of the interpolated string.
Get the color for the given codepoint.
Initialize the state with the given start index, starting at the given start index.
Returns the last seen number of states in the stateSet that has a noprogress flag
Returns a set of all case-codes for the given character.If the given character is
Returns the UnicodeSet for a given cclass name.If the casefold flag is true,
sorts the arcs in the given range from the given starting at the given starting index.
Creates a new state with the given flag and returns it.If the flag is true,
Moves all edges from the old state to the new one.
Move all instructions from old state to new state.
copy all ins from old to new state, and add them to new state.
Copy the out chains of old state to new one.
Drops all the arcs in the given state and frees the resources in the state.
Freestate the state s in the state tree.The state s must not be
Creates a new arc from the given arc, starting from the given state to the given state
Copy the state s to the state stmp, creating a new one if necessary.
Special colors for colors that are not color-less and are color-less.
Prints the current state of the NFA and prints the state of all of the states.
Print out the state of this state.
Print all the parcs in the current state to the given string builder.
Dumps out-chained parts of an arc into a string.
Optimize the NFA and return the number of results.
Scans the outchain of the pre and post chains to find a link to the post.
Combines the given arc with the current arc, and returns the number of matched elements.
Remove all states from the pre and posttraverse, and remove all states from the post
Mark all out chains in the state that s is reachable from from the given state.
Mark a state so that it can be reached by any of its in-chain chains.
Fixes all non-empty states, and unmark them as in-progress.
Return true if the arc is not empty, and false if the arc is empty.
Get the rule parameters from the properties file.
Returns a map containing all rule-interpreter plugins in the repository.
Get the report plugins for a given report context.
Returns a rule selection for the given rule set.
Run the CLI with the given command line arguments. The command line options are gathered and
Returns the error message for the given exception.
Gathers the standard options and adds them to the given Options object.
Gathers the task options from the given task factory and adds them to the given options.
Returns a comma-separated list of task names for the given task factory.
Interprets the given command line with the given task factory and the plugin repository.
Get the command line from the given command line arguments and the given options.
Executes the given task, with the given options, and the plugin repository and properties.
Reads properties from the properties file specified in the command line.
Prints the usage for the task.
Returns the JQassistant home directory.
Create the plugin class loader.
Returns a set containing the ids of all cells in the bounding box that are contained by the
Get the IDs of all the cells in the tree that intersect the specified boundaries.
Returns the URI for the given target and parameters, or null if there is no router for
Add a route for the given path pattern to the router.
Returns the total number of routes in the chain.
Adds a route for the first route in the chain.
Adds a route to the other router.
Add a route to the router that matches the given path pattern on the last route.
Returns true if any of the request path matches at least one of the request pathtokens.
Checks if the given property is equal to the given value.
Returns the name of the store file for the given owner and name.
Compares two entries to see if they appear in the same folder order.
Compares two entries and returns the order of their names, note, created and modified date.
Compare two bookmark entries.
Set the last modified time of the servlet class.
Returns a list of the names of the dependants for this JSPSource.
Finds the class with the given fully qualified class name in the class path.
Parses the Authorization header of the request.Returns null if the authorization header is not present or
Creates a new instance of the ProtectedFunctionMapper class.
Maps a function to a method on a class.
Return a map for the given function.
Resolve the function for the given prefix and local name.If the function doesn't exist,
Sets the values of the char array to the values of the given char array.
Resolve the value of an EL expression in the current page context.If the expression is not
Parse a Jasper file into a tree of nodes.
Parses a Jasper jar file and returns a tree of nodes.
Parses a file of tag-file directives and returns a Node.Nodes object.
Creates the JSP compiler.
Gets the resource as stream.
Calculates and returns the last modification time of all the channels, or null if there are no
Find all classes in the current class context, and return the list of found classes.
Checks if this class loader is a parent of this class loader.
Start the loading cycle for a given class and resource if it hasn't already been loaded.
Reads the stream header from the given input stream.
Paginates the given full data set using the given start page and page size.
Create a MetaKey from the given string.
Adds RPMLI requirements to the list of RPMLI requirements.
Returns the TagFileInfo for the given tag name.
Parse an implicit TLD from the given resource path.
Gets the checksum for the given file name and algorithm.Returns null if the checksum is not
Returns the size of a file in bytes.
Check if the given string is a valid channel name.
Seeks to the given block number, starting at the current position in the input stream.
Locates the block at the given position in the given block.
Returns a list of Maven artifacts for the given group and artifact id.
Updates the state of the current opt state and the number of reps in the previous opt
Calculate the price of a single byte in the range [pos, posState, avail,
Calculates the prices for a single rep.The price is calculated according to the match len and
Calculate the normal match price for a given position.
This method throws an exception if the byte at the given position is not present in the stream
Throw an exception if the byte is not in the range of bytes.
Scan all the TLDs and add them to the list of TLDs.
Scans the resource path for a TLD entry and returns a TLDInfo object.
Add a JSP servlet wrapper to the list of registered JSP servlets.
Returns the parent class loader of the current thread context class loader, or the class loader of
Set the bytecode for the given name.If the bytecode is null, this method will remove
Returns the time at which a method was invoked, or 0 if the method was not
Saves the bytecode of the given class to the given file name.
Checks if there is any JSPS that are compiled in the current context of this JSP
Initialize the classpath. This method is called when the class path is not set in the context
Starts the background thread. This method must be called before the background thread is started.
Stops the current thread.
This method is called when the application is started.This method is called when the application is
Finds the channel instance with the given name.
Finds the channel instance with the given id.
Updates the deploy group cache for the given channel service access model.
Copy the contents of the input stream to the output stream.
Parses a Jasper page and returns a tree of nodes.
Parse the attributes from the given Jasper XML reader.
Adds the include attributes to the given node.
Parses the value of a JSP attribute and the value of a JSP body.
Adds an attribute to the list of attributes for this element.
Add a child node to the list of children of this node.
Returns an iterator over the names of the attributes associated with this node, or an empty iterator
Returns an iterator over the children of this node, or an empty iterator if there are no
Returns an iterator of the children of this node whose name is equal to the given name.
Convert this MavenCoordinates object to the base Maven coordinates.
Returns the alias for the given variable name, or the given variable name if no alias is
Sets up the thread for writing data to the file.
Returns the current thread's output buffer, or null if there is no current output stream.
Returns the current stream, or the wrapped one if it's not already been created.
Writes the value of a field to the writer, if the value is not null.
Write a field to a writer.
Add a new element to the given parent element and return it as the new element.
Adds an element to the parent element and inserts it as the first child ofthe element.
Writes the next character to the given writer.If the writer is null, the next character
Sets the writer used to write the output.
Re-allocates the buffer to contain the specified number of bytes.
Map a page of AST nodes into a JasperCompiler AST node tree.
Finds the state with the given meta key in the given parent.
Registers a new storage provider with the given key, and returns the registration of the model.
Returns true if the given meta key is in the data directory and false if it is not
Request a job and return the model and view.This method will return the job's state
Returns true if the request is authenticated, false if the request is not authenticated.
Finish writing and close the output stream, closing the output stream, closing the output stream.
Creates a new Gson instance with the default gson adapters for node and byte arrays.
This function returns true if the data should be encoded for LZM or LZM
Computes the union of the provided and extracted meta data and returns the resulting map.
Get the throwable from the request.
Checks if the given coordinate is a Check-Sum extension, or null if it is not
Finishes the compressed compressed output stream.
Get the exception that caused this request.
Evaluate an EL expression and return the value of the expression.
Makes the prefix from the OSGi OSOS configuration properties.
Checks if the given path points to an XML file.
Parses a tag file and returns a TagInfo object.
Loads the tag file for the given page.
Removes all generated proto-type files for the given class file.
Set the URI root.
Scan the files in the given directory and add them to the list of pages to be included
Locates the root directory of the given file, and returns the path of the root directory
Moves the cursor to the next available position in the LZ tree, returning the number of
Returns true if the input string matches any of the characters in the input string.
Returns true if the given string matches exactly one or more spaces followed by a single space.
Skips until the given limit, or the end of the string is reached.
Skips the given string until the end of the string has been reached.
Skips the tag until the end of tag.
Parse the next token and return the result as a string.
Returns true if there is a file in the file system, false if it is not.
Returns a copy of this coordinates with the unclassified version of the original coordinates.
Returns a list of aspect information that matches the given predicate, or null if the predicate is
Returns an array containing the ids of the aspects that are not present in the assigned aspects.
Sets the schema resource prefix.
Set the DTD resource prefix.
Convert the given node to a tree node in the given parent node.
Merges all errors from a binding result into a binding result.
Initializes the binder. This method is called from the constructor to initialize the binder.
Scans the bundle for aspect information and returns a map of channel names to channel aspect information.
Unqualifies the given path so that it can be used as part of a URL.
Invoke the tag plugin associated with a custom tag.
Returns an array of the specified size, filled with zeros if the array is null.
Returns an array of the specified size, filled with zeros if needed.
Convert a collection of artifact results into an Aether result.
Returns the specified resource as a stream.
Validate this page against the tag library and return the validation messages or null if the validation fails
Pushes the contents of a stream to the stack.
Get the XML encoding for the given fname in the given jar file.
This method reports a fatal error to the error handler.
Get the real path for this resource.
Returns the URL of the resource at the given path, or null if the resource is not
Gets a resource as an input stream.
Returns a list of all the paths in the given path relative to the base path.
Logs the given message and exception and logs the stack trace.
Add a new filter to the list of filters that will be applied to a given class.
Returns the number of bytes that can be used to store the contents of the dictionary.
Gets the memory usage for the given dictionary.The memory usage will be determined based on the
Sets the preset dict to the given byte array.
Move the window to the beginning of the current window.
Fills the current window with data from the given byte array starting from the given offset.
This method processes the pending bytes for the current thread.
Returns the number of bytes necessary to match the given distance from the end of the buffer.
Returns the number of characters in the buffer that are equal in the specified range of characters.
Verify that the matches are in the range of available matches.This method checks if the matches
Moves the buffer to the next position in the read buffer, and returns the number of bytes
This method is called when the buffer is flushed or closed.This method should be called only
Flushes the current buffer to the underlying output stream.
Clears the buffer. If the buffer size is less than zero, the buffer will be cleared
Flush the output stream to the underlying output stream.
Close the response stream.
Writes the given byte array to the output stream.
This method throws a JasperException from an error report.
Make a list of the fields from the given meta data.
Generate the class using the JASPER compiler.This method is called by the Jas
Compiles the given class using the configured Jasper compiler.This method will attempt to compile
Initialize the JASPER compiler.
Checks if a system jar is in the webinf.
Returns a string representation of the given character, quoting if necessary, and quoting if necessary.
Generate the list of declarations for the given page.
Compile a list of tag handler pool names into a single pool name.
Generate the XML prolog.
Generate the common postamble.
Generates the postamble of the given page.
Generates the XML prolog for the given Node.Nodes.The XML prolog will be
Generates the tag handler attributes for the given tag.
Reads the properties from the given input stream and returns a map with the key-value pairs
Exports a channel to the given output stream.
Validates the given XML view to make sure that all the tag libraries are valid.
Returns the next handler for the given tag, or null if there are no handlers.
Parses an EL expression and returns a list of nodes representing the resultingEL expression.
Select a property from either the previous property group or the current one.
Returns true if the specified URI is a JSP page.
Prints a comment, including the start and stop mark.
prints a single line of text to the output stream.
prints a string followed by a newline.
Print a multi-line line of a string to the output stream.
Returns the expression in XML format.
Checks if the given scope is valid.
Escape a string so that it can be used as an XML attribute name.
Validates a list of expressions and passes them to the expression factory.
Returns the name of the tag handler class for the given path.
Convert a path to a java package identifier.
Splits a path into components starting from the beginning and ending at the given pat.
Makes a Java identifier from the given string.
Mangles the given character into a string that can be used in a URL.
Checks if the given string is a valid Java keyword.
Add a property to the properties map.
Returns the modifier string for the given prefix and modifier.If the prefix is null, returns
Returns a set of metadata keys that are in the specified namespace and with the specified key.
Updates and removes users from the user store, if the user has a valid email token.
Returns the basename of the given name, or null if the name is not a basename.
Put a value into the cache. If the value already exists, it will be replaced.
Loads the metadata for a given locator and key from the database.
Build metrics collection from pre-aggregated payload.
Resolve a number to a long or a double.
Writes the given object to the given output stream without tagging it.
Returns the TTL for the given locator and rollup type and the given granularity.
Creates a list of prepared statements that can be executed when a query is executed.
Track delayed metrics for the given tenant.
Track all delayed metrics for the given tenant.
Read a double or long from the stream.
Put a double or long value out to the output stream.
Returns an immutable map containing all the properties in the configuration.The key is the property name
Create a container in the local file system and store it in the given location.
Schedules all eligible slots for the given max age in milliseconds, and the given rollup delay
Removes the given slot from the list of running slots.This method is thread-safe.
Registers an event listener for the specified event.
Attaches a listener to the given event and invokes the given listener when it is called.
Remove all callbacks for the given event.
Emits an event to all registered callbacks.
Gets the list of callbacks for the given event.
Returns the name of the remote file.
Append a rollup event to the rollup output stream.
Parse the timestamp from the file name.
Start the web server.
Gets the rollup computer for the given rollup type and rollup granularity.
Creates a new instance of the IOIO class configured in the configuration.This is only used
Adds a new TTL value to the given table builder, based on the configuration key.
Computes and returns the maximum length of the headers and the outputs.
Formats an array of headers into a comma-separated string.The headers are separated by a
Format the results of the given OutputFormatter objects into a comma-separated list of strings.
Registers the metrics for the given object name in the given metric registry.
Create a new ThreadPoolBuilder with the given name.
Add the metric index to the set of metric names with the given number of documents.
Returns the complete set of metric names from the given metric index map.
Returns a list of tokens for the metric name in the given locator, or an empty list
Sets the value of the specified locator to the specified value in the specified rollup period.
Calculates the granularity for points that are less than or equal to the requested duration.
Sets the time when the server is running.
Returns the set of hosts that are unique in the cluster.
Calculates the maximum number of connections per host for the given number of hosts.
Returns an iterator over the metric column families.
Insert the given collection of metrics into the metrics table.
Insert a set of metrics into Cassandra.
Returns a set of Locator objects for the current rollup execution context.
Given a query string, returns the regular expression that matches the current query and the next query
Starts the uploader thread. This method must be called at the beginning of the uploader thread.
Stops the file uploader thread.
Returns true if the specified locator is currently in the batch layer, false otherwise.
Returns true if the given locator is currently in the current discovery layer, false otherwise.
Checks if the given locator is currently in the token discovery layer.
Determines if there is already a delayed locator for a specific slot in the slot slotmap.
Set the given locator as a delayed locator in the specified slot.
Returns a map of ranges between the given range and the next range in the given granularity.
Returns an iterable over the ranges within the given interval.
inserts a batch of metrics into the keyspace.
inserts a set of metrics into the given column family.
Returns true if the given metric should be delayed due to the maximum age limit.
Gets the bound statement for the given metric, or null if the metric is not delayed.
Returns a map of metadata values for the specified locator.
Check if the content-type is valid.
Returns true if the accept header is valid, false otherwise.
Insert a batch of documents into the index.This method is not thread-safe, it
Returns true if there is at least one value in the data set, false otherwise.
This method does the actual work of checking if the file manager is available and if so,
Gets a new instance of the extractor.
Returns true if the OS is the same as the one in the os name and version.
Starts the RabbitMQ download and extraction process.
Stops the rabbitmq server.
Return a default PNSignalingParams instance.
Adds the list of ICE servers for this peer to the specified list of ICE servers
Adds an ICE Server to the list of ICE servers for this peer.
Transmit a message to a user.
Send a message to all peers.
Gets the value of the weitereAdresse property.
Gets the value of the user-defined simplefield property.
Gets the value of the userDefinedAnyfield property.
Set the value of the apiSoffelder property.
Gets the value of the multimediaAnhang property.
This method returns the value of the statusVBM field.
Returns the value of the status field, if set, or the aktiv status field.
Gets the value of the status_hp property.
Liefert einen Importieren in der Modus.
Get the value of the adressdruck property.
Gets the value of the waehrung property.
Liefert die Bodenbelag in der Bodenbelag.
Sets the value of the region property.
Sets the value of the area property.
Sets the value of the address property.
Sets the value of the description property.
Sets the value of the rentCollectionPeriod property.
Sets the value of the furnished.
Sets the value of the phone1.
Sets the value of the phone2 property.
Sets the value of the contactName property.
Set the value of the phoneInfo property.
Sets the value of the mainEmail property.
Sets the value of the ccEmail property.
Sets the value of the externalId property.
Sets the value of the agentId property.
Sets the value of the ePart property.
Sets the value of the jahrgang property.
Sets the value of the Gebaeudeart property.
Sets the value of the bueroType property.
Checks if a string is a valid numeric value.
Sets the value of the gebiete property.
Sets the value of the gruppe property.
Sets the agent.
Gets the value of the property property.
Sets the value of the stand property.
Gets the user defined extend.
Sets the value of zeiteinheit.
Gets the value of the zimmer property.
Gets the value of the haus property.
Gets the value of the bueroPraxen.
Gets the value of the gastgewerbe property.
Gets the value of the land undForstwirtschaft property.
Gets the value of the sonstige.
Gets the value of the zinshaus renditeobjekt property.
Gets the value of the terrain property.
Sets the value of the UMFang.
Sets the value of the Wohnungtyp property.
Returns the ISO 2166 country code for the given country or null if the country is not
Get the country is ISO 3166-1 country code from ISO3166-2 code
Returns the ISO 3166 country code for the given country.
Get the country ISO 3166-1 code from the ISO 2166-3 code.
Returns the country name for the given country and language.
Translate a country to a display name.
Gets the value of the anbieter property.
Sets the value of the category property for this business element.
Gets the value of the pdf property.
Sets the value of the aktionart property.
Sets the value of the realestateitems property.
Sets the value of the Pacht property.
Upgrades the document from the previous version to the new OpenIMMO version.
Gets the content.
Returns the field names of this meta data type.
Sets the value of the blick.
Set the value of the pauschalmiete.
Sets the monatsmiete.
Gets the parkplatz.
Sets the value of the lastenaufzug property.
Sets the value of the zustandart property.
Gets the value of the feld property.
Write the contents of this list to the given writer using the given line separator.
Returns the value at the given position or the default value if the value is null.
Returns an iterable of strings representing the contents of the table.This is the same as print
Set the value at the given position in the map.
Sets the value of the ctype attribute of the check.
Sets the value of the haustyp property.
Gets the value of the energiepass property.
Sets the value of the Keller.
Sets the value of the grundstueck.grundstType property.
Sets the Geschlecht's GeschlAttribute.
Sets the value of the Hallen-Lager Hallen-Lager.
Gets the wiederholungstermin.
Gets the value of the teilungsVersteigerung property.
Upgrade the given document from the previous version of immo 2.3.
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art of the uebertragung.
Sets the uebertragung's modus.
Gets the value of the emailSonstige property.
Gets the value of the telsonstige property.
Sets the value of the handel type.
Set the value of the apiSuchfeld1 property.
Set the value of the api_suchfeld2 property.
Sets the value of the apiSuchfeld3 property.
Gets the value of the row property.
Sets the value of the distanz_zu_sport property.
Gets the value of the anhang property.
Liefert die Kategorie, von GaragenKategorie
Get the value of the objektzustand.
Gets the value of the haus kategorie.
Gets the value of the ausstattungsqualitaet property.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Liefert einen Wert der uebergebene Wert.
Sets the value of the ackerland property.
Sets the value of the bauerwartungsland property.
Set the value of the Bootsstaende.
Sets the value of the buero.
Sets the value of the camping property.
Sets the value of the doppelhaus property.
Sets the value of the einfamilienhaus property.
Sets the value of the einzelhandelGross property.
Sets the value of the einzelhandelKlein property.
Sets the value of the garagen property.
Sets the value of the garten property.
Sets the value of the gastronomie property.
Setter for the gewerbe property.
Set the value of the hotel.
Sets the value of the industrie property.
Sets the value of the keineBebauung property.
Sets the value of the kleingewerbe property.
Sets the value of the lager property.
Set the value of the mehrfamilienhaus property.
Sets the value of the obstpflanzung property.
Sets the value of the parkhaus property.
Sets the value of the produktion property.
Sets the value of the reihenhaus property.
Sets the value of the stellplaetze property.
Sets the value of the villa property.
Sets the value of the wald property.
Sets the value of the ANBIOMER.
Gets the value of the wohnung.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the value of the hallenLager prod property.
Gets the value of the parken property.
Gets the value of the freizeitimmobilieGewerblich
Gets the value of the objektartZusatz property.
Gets the value of the stellplatzart property.
Sets the value of the maxDauer property.
Gets the feature.
Sets the value of the zimmertyp property.
Upgrades the contents of the given document from the previous version to the new OpenIMO
Sets the value of the keine-angabe property.
Sets the value of the erdwaerme property.
Sets the value of the solarheizung.
Gibt den Pelletheizung-Objekt.
Sets the value of the gas.
Sets the value of the OEL property.
Sets the value of the fernwaerme property.
Sets the value of the strom property.
Sets the value of the kohle.
Returns a random string of the given length.
Generate a random alphanumeric string of the specified length.
Generates a random string of the given length using the number generator.
Gets the value of the wohnungKategorie property.
Sets the value of the benutzer.
Sets the value of the objekte property.
Gets the value of the feed property.
Set the value of the moeb property.
Gets the value of the serviceleistungen.
Sets the sub-adminative area.
Sets the city.
Sets the locality of the location.
Downgrades the given document to the previous version of OpenImmo 2.0.
Upgrades the given document from the previous version to the new version.
Sets the value of the landType property.
Gets the value of the field property.
Upgrades the document from the previous version of the IMODocument to the new version
Gets the value of the ad.
Sets the value of the GastgewType property.
Set the value of platzart.
Liefert die Daten verkabelung.
Gets the value of the klimaanlage property.
Gets the value of the image property.
Sets the value of the priceType property.
Sets the value of the newDevelopmentAvailability property.
Sets the value of the directions property.
Sets the value of the co2Rating property.
Sets the value of the energyRating property.
Set the value of the viewingDetails property.
Sets the value of the propertyStatus property.
Sets the value of the pictures property.
Sets the value of the bebaubar attribute.
Upgrades an immo version from the previous version of the given ImmoDocument.
Sets the value of the parkenType property.
Sets the value of the alter attribute.
Sets the value of the freizeit_typ property.
Sets the value of the telefonart.
Sets the value of the emailart property.
Sets the value of the overseas-sales property.
Sets the value of the overseas_rental property.
Create a user-defined simplefield.
Gets the value of the fehler property.
Sets the value of the erbpacht property.
Gets the value of the stpsonstige property.
Gets the value of the valuelist property.
Sets the value of minDauer.
Sets the value of the zinsType property.
Gets the value of the photo property.
Sets the metadata for the feed.
Sets the value of the projects property for the feed.
Sets the properties of this feed.
Upgrade the Kyero version from the previous Kyero version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Get the value of the fehlerliste property.
Gets the value of the status property.
Sets the value of the Sonstige.sonstigeTyp.
Sets the value of the distanz_zu_value property.
Gets the value of the distanzen property.
Gets the value of the distanzenSport property.
Returns true if the given exception is an instance of one of the declared exceptions.
Set the bindings for this instance.
Binds a namespace URI to a prefix.
Removes the binding for the given prefix from the list of registered prefixes.
Returns true if the given string contains an open tag, false otherwise.
Consumes the comment tokens and returns the first non-comment token, or the end of
Consumes the given line and returns the rest of the line if it is a comment.
Returns the index of the first occurrence of the token in the line, or -1 if
Initializes the logging.xml file or the property file specified by the location parameter.
This method is called when a new prefix needs to be bound to a new URI.
Adds a new iterator to the queue.
Add the given option to the list of options for this command.
Add a string option.The short form and the long form of the option will be used
Add a new integer option to the command line.
Add a long option with the specified short and long form characters.
Adds a new double-option to the list of available options.
Adds a new boolean option to the command line option list.
Parse the command-line arguments and return the option values.
Creates a new instance of the given class.
Decreases the concurrency counter, if it is greater than the limit, and notifies the monitor
Sets the target object.
Prepare the target class and method to be called.This method will first try to find the
Finds the best matching method for the target method and its arguments.
Convert an int value to a string.
Serialize the given object to a byte array.
Deserializes an object from a byte array.
Gets the first child element of the given element with the given tag name.
Gets the text value of the first child of the given element with the given tag name.
Returns a list of all child elements of the given element.
Returns true if the node's name matches the desired name.
Returns true if the node's name matches one of the desired names.
Sets the length of the string to the given value.If the string is longer than the
Monitor the given handle for release events and call the given listener when it is released.
Adds the given reference to the list of entries to be released when the reference is released.
Returns true if the monitoring thread is alive, false if the monitoring thread is not alive.
Get the mobile city for the given mobile number.
This method starts a prefix mapping for the given prefix and namespace if the namespace is different from
This method is called at the end of a prefix mapping.
Adds the given callback to the list of callbacks.
Parse the jar and return the root node, or null if the jar doesn't exist.
Get the text color for the given item, based on the current scroll position.
Sets the list of values for this item.
Calculates the color of the item at the given scroll position.
Sets the text size of the view.
Returns the x position of the item in the range [0, itemWidth + dividerSize
Gets the intro.txt from the remote library.
Get the list of available keyword names.
Returns the list of arguments for the given keyword, or an empty string if the keyword is
Get the documentation for a given keyword.
The main method starts the remote server using the given command line arguments.The command line helper
Stop the server and wait for it to stop after the specified timeout.If the timeout is
Starts the server and logs the result in the log.
Convert properties from file to json string.
Convert properties from file to json string.
Converts the given input stream into a JSON string.The input stream will be closed after the
Convert properties to JSON string.
Converts a map of properties into a JSON-encoded string.
Converts the given map of properties into a prettified JSON string.
Given a map of properties and a list of domains, return a filtered map of properties.
Convert properties to json string.
Calculates the radius of the shadow rectangle and circle circle rectangle.
Creates a new builder for OCSP fetcher.
Finds the first X509Certificate in the list of intermediates, or throws an exception
This method is called when the plugin is executed.This method is called when the plugin is
Preprocesses the markdown files in the given input directory and returns true if the markdown files are
Substitutes the variables in the given template using the given pattern string, and returns the
Returns the first line of the list that starts with 'title' or 'title' if
Adds the title to the html file if the title is not null, otherwise returns the html
Replaces the variables in the given content with the values in the given map.
Updates relative paths in the given HTML string according to the current site-base prefix and folder
Copies all files from one directory to another.
This method checks if the path is valid and returns the rest of the path.
Wrap the content of the child view at the given index in order to display the content of
Fades the game up to the specified duration.
Fades the screen down by the specified amount of time.
Calculate the percentage of the width of the image based on the current width of the image.
Check if there are any views that overlap with the given width.
Returns an intent to launch the given activity class in the target package.
Launches the activity and waits for the activity to be started.
Get a list of all FactSheets.
Download file from response.
Build the HTTP client.
Creates an access control entity.
Update the given data model in the given workspace with the given data model body.
Create a new job with the given export type and start date and end date.
Set the host to use when connecting to the token provider.
Sets the client credentials for the client to be used by the API.
This method will process the provided graphQL query string and return the result as a Ql
Gets a list of all the bookmarks for the specified group key and sharing type.
Adds the given graph permissions to the graph identified by the given graph name.
Writes the given set of permissions to a Graph.
Sets the rulesets to be applied to the logic dataset graph.
Cancels the write buffer and cancels the timer if it has been created.
Execute a SPARQL select statement, returning a handle to the given input stream.
Create a dataset graph for the given host, port, user, password and authentication type.
Limits the number of threads that the device is allowed to run in.
Resizes the image to the specified width and height.
Rotate the image by the specified angle using the given RotationAnnotation.
Set the gravity of the GMPE.
Remove all the profiles from the GMQL profile table.
Set the font style and the size of the rectangle and fill it with the specified color.
Add an image from a file to the GMQL source file.
Add an image to the command line.
Parses a list of arguments and returns a list of strings.
Prints out usage information for the given target object.
Extracts the time unit from a time string.
Parse the specified target object with the specified arguments.
Execute the slide at the specified URL.
Executes the specified file.
Interprets a single PPTX file and returns a list of actions.
Sorts a list of rectangles based on their width and height, in ascending order.
Render the given template text with the parameters defined.
Gets the XML file for the specified slide number.
Checks if the given mouse event is inside the screen region.
Selects elements that overlap vertically with the specified element.
Sends the message to SQS and executes an outbound message on the queue.
Sends a message to SNS and dispatches the message to SNS in case of failures.
Gets the file with the given name and options, or throws an exception if the file does
Get or create a temporary directory for this Extractor instance.If the directory does not exist
Returns a new log value map from the given key-value pair.
Sends an arbitrary message to log at level TRACE according to the formatdefined in the class description
This method logs an event, level and a message at the TRACE level.
Sends a debug level message.
Logs an event and stack trace if DEBUG logging is enabled.
Logs a formatted message and stack trace if INFO logging is enabled.
This method logs an information event with the default throwable.
Logs a two-dimensional information message.
Simple method for logging a message at the WARN level.
Logs a message and stack trace if WARN logging is enabled.
Simple method for logging a single error.
Simple function for logging a single error message.
Adds the source line and method to the context of the join point.
Write the start of the steno serialization.
Writes a list of key-value pairs to the JSON generator.
Serialize a throwable to the JSON generator.
Returns a log value that contains the current state of this object.
Returns the caller data for the given logging event, or null if there is no caller data
Create a database in the temporary folder.
Checks if the mapping for the given array position is valid.If so, removes the mapping
Parse the save-attribute of the given cell.
Save this data to an object in this context.
Refreshes a sheet row from the context.
Parse the save attribute string.
Gets the save-attribute-list from a row.
Get the saved attribute for the given column index from the given save attribute list.
Sets the value of the save-objects attribute in the hidden column of the given row.
Sets the save attributes for all rows in the specified sheet.
Sets the save attributes for all the cells in the given row.
Get the saved attributes from the cell's row and column index in the cell's context.
Format a double value as a string.
Put the shift attributes for the given full name, using the given config range's unit rows
Sets the workbook to the given workbook.The workbook will be wrapped in a XSSF
Gets the WBWrapper associated with the current WB.If the WB is not
Get the formula evaluator.
Calculates and sets the maximum number of columns in the sheet.
Load a web sheet from the given input stream.
Load a web sheet from the given workbook.
Load the work sheet with the given tab name.
Export the workbook to a file, and save it to the file in the export file.
This method is called when the user wants to save the data.This method will be called
This method is called when the application is submitting the MDE.
This method is called when the user wants to enter a new cell.
Get the sheet configuration for the current tab.
Reads the contents of the document from the given input stream.
Returns the locale for the given component's locale attribute or the locale from the view root.
Gets the picture.
Gets the cell helper.
Gets the PicturesHelper associated with this node.
Gets the validation handler.
Gets the chart helper.
Convert a list of ptgs to a list of ptgs with shared formulas.
Converts the given ptg to the correct ptg class.If the ptg is a
Converts the given Peggs to a list of Peggs, where each row is
Creates a new ptg with a single operand class and the number of operands changed.
Returns a list of all rows mapped to the given current row in the current rows mapping list
Assembles a list of rows from a list of rows.
Build a dynamic row for a ref-ptg base object.This method is used to
Get the background color for the given theme table.If the theme table doesn't have a
Gets the color from the SPPP color.
Find the automatic color to fill for the given table and color.
Get the XColor from the CtsColor and the ThemeTable.
Get the XSSF color from the CTS color.
Returns an XDataframe with the given index and the tint value.
Convert XSSF color to RGB color.
Get the triplet from XSSF color.
Gets the bg color from the cell's cell style.
Attempts to find the component name from the class name of the component.If the component is
Populate the input attributes of the given component with the values of the component's input properties.
Try to find the method with the given name in the class of the given object.
Set the value of a property on an object.
Gets the value of a property on an object.
Sets the control attributes for the given cell based on the cell attributes of the given cell.
Find the validation attributes for the given cell in the given origin row index.
Setup the pictures for a faces cell and the chars data of the cell.
Sets the chart properties for the given faces cell and the given chart id.
Setup a faces cell's pictures.
Initialize the charts map for the given workbook.
Gets the pie title.
Set the style of a single series.
Create the pie3d chart.
Setup the style for the bar for the given chart and chart data.
Initialize XSSF charts.
Gets the chart id from the parent of the chart.
Initialize the anchors map from the XSSF workbook and the charts data.
Generate a single xSSF chart.
Transforms the given expression engine and context into a Collection object.
Gets the full name from row.
Rebuilds the upper-level formula for the given action full name.
Sets up the upper level formula for the given cell and adds it to the build ref.
Builds the cell formula for the shift formula for shift rows of the sheet.
Returns the rows mapping for the given full name, or null if no such mapping exists.
Changes the index number in the shift map to the new index number in the shift map.
Change the final length of the given shift map to the new length.
Change the index number in the hidden column.
Set the full name in the hidden column of the given row.
Returns the row number of the original row number in the hidden column, or -1 if
Sets the original row number in the hidden column of the given row.
Finds the rows mapping from the shift map for the given parts, based on the config range
Returns the child rows mapping for the given full name, based on the shift map.
Returns the item in the given collection at the given index or null if not found.
Build the current config range from the source config range and the sheet and insert position.
Returns true if the given row is in the source config range, false if it is a
Returns true if the row is in a static row reference of the given source config range.
Replace the expression in the attribute value with the cell value in the sheet.
Returns a map of cell range addresses to the merged region in the given sheet.
Returns the list of cell addresses of the merged regions of the sheet1.
Adds the given cell range address to the given list of cell range addresses to the skip cell
Build a sheet comment from a list of TiltCommandAliases.
Build the comment from the given list of tie-command aliases for the given cell.
Returns a map of sheet configurations, where the key is the sheet name and the value is
Get the sheet configuration from the sheet and the form name and sheet right column numbers.
Build a form command from a sheet configuration.
Returns the column index of the last cell in the row, starting from the given stoppoint
Build a sheet from the given sheet configuration map and the cell attributes map.
Check and repair the last row of the sheet to ensure that it's a valid row.
Build the command list from the sheet and cell comment.
Sets the parent for a child command.
Checks to see if there is a command in the command list that is a "each"
Match command to sheet config form.
Copy the template for the tie commands to the sheet.
Build a command list from a cell's comment.
Processes a line of text that represents a method line.
Process a command line.
Move the comment from the cell to the new comment in the sheet to the sheet comment map
Create a config command from the given command name and the given sheet and row numbers.
Build a map of attribute names and their values from the command line.
Get the sheet configuration from the given form command and the sheet's right column.
Set the footer of the sheet configuration.
Set the body of the sheet based on the row and column numbers of the given command.
Set the header of the sheet configuration based on the given row and column numbers.
Deletes the row at the given index.
Removes the list of ranges from the shift map, and removes them from the shift map.
Returns a list of all the full names in the given sheet that are not in the given
Gets the each command from the parts name.
Inserts an empty object into the data context.
Deletes an object in the context of the given data context.
Prepares a collection to be inserted into the data context and returns the index of the object in
Recursive method to index all commands in the source config range.
Returns true if the row is allowed to be added to the sheet, false otherwise.
Insert each template in the source config range into the source config range in the source config range
Evaluate the given value against the given context and add the result to the given cell.
Evaluate the user formula and set the formula in the cell.
Returns true if the given string is a valid user formula, false otherwise.
Create a comment for a cell.
Evaluates the given script and returns the result as a boolean.If the result is not a
Removes all rows in the specified sheet from the specified cell list.
Removes a single row in a sheet.
Removes the cached cell for the row at the given index.
Remove the rows in the body, starting at rowIndexStart, starting at rowIndexEnd
Load a picture from the current page, and return the id of the picture in the session
Gets the chart view id for the given row and column index.Returns null if the chart
Assembles a new value from the cell's value and returns it as a String.
Gets the cell value with the given formula evaluator and the given data formatter.
Get the cell value without the cell format.
Get cell string value with cell type.
Gets cell string value with number type.
Set the value of a cell.
Sets the value of a cell as a string.
Sets the value of a cell as a boolean.
Set the value of a cell as a date.
Sets the cell value as a numeric.
Copies rows from the source sheet to the destination sheet.
Copies a single row from the source sheet to the destination sheet.
Copies the specified cell from the source sheet to the new sheet.
Copy the cell's value from the source cell to the new cell.
Copy the cell's style from the source cell to the new cell.
Clone the comment from the source cell to the new cell.
Creates a client anchor for a comment cell.
Create or insert a comment in a cell.
Matches the source cell to the target cell, using the source cell and the target cell.
Get the VML drawing from a cell.
Get the shape of the cell from the VML source cell.
Get the cell style from the source cell.
This method converts a cell to a cell range in the given cell range map.
Gets the row and col index from the component attributes.
Get the initial number of rows from the sheet configuration.
Gets a faces row from a body row.
Gets the faces cell from the given faces row in the given top row and left column.
Gets poi cell from sheet.
Gets the skey from the given poi cell.
Gets or adds a T tie cell to the given map, creating it if it doesn't
Returns the name of the current data context.
Evaluates a JEXL expression and returns the result.
Evaluates the Jexl expression and returns the result.
Private helper method to write the row index of the current row of the table to the given
Remove a row from the grid.
Merges the rows in the specified map with the rows in the specified map.
Recovers the rows of this sheet.
Returns the chart type for the current plot area.
Convert a style string into a BasicStroke instance.
Initialize chart data from an XSSF chart.
Set up chart data from a chart object.
Initialize the XSSF file for the given chart data and the XSSF sheet.
Initializes the xssf object.
Get the chart id associated with the anchor's graphic frame.
Get chart id from child node attributes.
Build each object in the collection, and add it to the current rows mapping list.
Save this value in the context of this cell.
Recalculates the result of the evaluation of the formula.The result is evaluated in the
Gets the poi cell with the row and col index from tab.
Gets the face cell from the current page.
Restores the data context for the given full name.If the full name does not exist
Gets the last collect from the given full name.This method is used to get the last
Check if we need to restore a data context name.
Start restore data context.
Shifts the row ref by the given number.
Sets the first row reference of the cell.
Sets the row and cell addresses of the last cell in the sheet, at the given position
Build all cells for a single row.
Build a single cell and add it to the context.
This method is used to read the data context from the given input stream.
Build a list of categories from the cell range address.
Build the series list from a list of objects.
Build chart series in list.
Gets the color list from a list of Cell.
Gets the dpt with the given index in the given list of DPTs.
Set the command index map.
Get the Pictrues map from XSSF workbook.
Get the map of pictures in a BioPAX workbook.
Index the picture in the map if it exists in the xssf Drawing object.
Generate a picture style string from the given cell and the given sheet and the given picture.
Generate a chart style for the given cell, the chart id and the given chart id.
Returns the regular expression to use for parsing.
Get the chart content.
Recover the cell from the given sheet.
Get the cell style for a row.
Gets the font style of a cell.
Get the cell font color.
Gets the font decoration for the given cell's font.
Returns the cell style for the given poi cell and input type.
Get the web style for the given cell in the given row.
Get the alignment from the cell style.
Get the vertical alignment from the cell style.
Calculates the total height of a sheet.
Setup the cell style for the given cell based on the given cell and row height.
Get the cell input type from the cell's type.
Gets the set of resource paths for the given path.
Gets the resource from the context as an input stream.
Removes the prefix path from the given resource if it starts with the given prefix.
Returns true if the input contains a value of the given type, false otherwise.
Finds the bean with the given name from the ELContext.
Returns a string representation of the given array of shorts separated by the given string.
Round a double value to the specified number of decimal places.
Returns the tab type of the active tab view.
Returns the style of the active tab.
Returns the default date pattern for the locale.
Gets the decimal separator by default locale.
Gets thousand separator by default locale.
Set the tie command alias list.
Build the watch list from the configuration range and the command list from the sheet.
Build the watch list for a cell.
Adds the row to the watch list if it is not already in the watch list.
Checks if the given string is a valid command string.
Parses the widget attributes from a comment.
Get the attribute key from a cell in the map.
Parses a cell's comment and adds the cell attributes to the cellAttributesMap.
Returns the position of the first pair bracket in the string starting at the given start position.
Parse the attributes of a Tango command.
Parse the input attributes for the given control and add them to the givenCellFormAttributes
Parse the validation attributes for the given list of cell form control attributes.
Splits the attribute data by the eual sign and returns the name and value as an array
Parse a list of cell attributes for a specific type and add it to the cell attributes map
Process the calendar attributes and add the default date pattern to the cell attributes.
Process select item attributes.
Gathers the special attributes for the given type and add it to the sAttr.
Parses a comment string and converts it to a map of Strings to the comment string.
Returns the index of the first character in the given string that is not a letter or a
Returns a copy of the input string with the characters removed from the start and end positions.
Returns the Excel column name for the given column number.
Convert a column name to an integer.
Returns the cell with the given cellRef from the given sheet, or null if the cell
Convert height units to pixels.
Check if the given string is a valid date.
Parses a date string from a string like "yyyyMMddThhmmddThh
Returns true if string is a valid numeric value.
Returns true if the given character should continue with the given parameter.Returns false if the parameter
Sets the value of a property on an object.
Returns the difference between this cell and another cell.Returns -1 if the row and column
Returns true if the child range is inside the parent range.
Clear all the hidden columns in the sheet.
Delete the hidden columns from the row.
Deletes the cell with the given cell number from the given row.
This method is invoked when a system event is received from the event queue.
Updates the status of a cell after a change in the status of a form.
Validates that the given row and column are in the current page.Returns true if the validation
Validate by Tie-Web Sheet Validation Bean.
Check if the error message is in the context and if so, set the error message.
Validate all rules for single cell.
Performs the actual validation of the given cell value and returns true if the value passes.
Checks if the cell is visible in the current page, and if so, if it is
Checks if all rows in the current page are valid.
Validates that the row in the current page is indeed a valid row.
Validates that all cells in the row in the sheet are indeed in the page.
Refresh the cached cells in the current page.
Refreshes the cached cells in a row of the given table.
Sets whether or not the submit mode of the view should be set to full or not.
Checks if the current tab is valid and if so, checks if the current tab is valid
Clears the contents of the cell.
Load the header rows from the sheet configuration and add them to the parent sheet.
Load the header row of the sheet without the configuration tab.
Fills the header cells to fill to the max column counts of the parent.
Returns the column style for the given cell.
Get the cell width style for the given cell width and total width.
Returns the cell width style for the given cell and cell index.
Initialize the tabs for the parent sheet.
This method loads data from the underlying serial data context.
Refreshes the data for the given row.If the row is null, no data is
Refresh the data for a cell, if the full save attribute is set, and the row
Returns the index of the tab with the given name, or -1 if not found.
Load the work sheet from the specified tab name.
Sets the active index of the given tab to the active sheet of the given tab name.
Set the first page of the data table.
Setup the row information for the given faces row and the row index for the given sheet.
Assembles the body rows from the sheet configuration.
Refreshes a cell in the cache.
If the value of the cell is different from the cell's cached value, update the cell
Creates the dynamic columns for the given tab name.
Adds a new row to the repeat list.
Refresh the body rows in the sheet in the specified range.
Set the unsaved status flag for the given request context.
Checks if the current view is in the unsaved state.
Return the most-specific constructor for the given type.
Writes the given input stream to the given output stream.
Write long value.
Writes the given line to the given writer, if the line is not null, or the
Set the tag to be used for the traffic stats.
Add a bitmap to the result.
Adds an asset file descriptor to the result.
Remove the parameter with the given name.
Add a header with the given name and value to the request.
Clears out the information of the current request.This method should be called by subclasses to clear
Call this method to play the given uri with the given volume and params.
Bind the context to the service.
Unbinds the service connection from the context.
Drops the listener from the streaming playback.
Stores the image to disk. If the image is already on disk, this method does nothing
Returns the content of the given input stream as a string, using the given character set.
Convert the given input stream to a UTF-8 string.
Send the content of the content to the given output stream.The content of the output stream
Returns the number of bytes that can be read from the input stream.
Closes the underlying input stream, releasing any resources held by the pool.If the pool
Reads the next number of bytes from the input stream.
Resets the state of the underlying file system to its initial state.This method should be called
Send the start part of the message.
Sends the content disposition header to the given output stream.
Send the content-type header to the given output stream.
Send the header of the Transfer-Encoding header.
Writes the end of the header to the given output stream.
Send the end of a crlf message.
Send the given parts to the given output stream with the given part boundary.
Returns the total length of the parts in the given boundary byte array.The boundary byte array
Returns true if the given URI is a redirect, false if the URI is not.
Send the "NotModified" response to the client.
Sets the date header.
Sets the date and cache headers.
Sets the content type header for the given file.
Closes the channel if it is still open, and notifies the listener to close the channel.
Send the disposition header.
Sends data to the specified output stream.
Installs the cache with the given version.
Ensures that the working directory exists, and if not creates it if it doesn't.
Reads the cache entry for the given request info and returns the cache entry's response.
Returns an input stream for the body of the entry.
Resets the internal state of the bitmap to the specified width and height.
Gets the singleton instance for the given keystore, creating it if it does not already exist.
Validate a keystore using a password and a key password.
Replace the current scale type with the given scale type.
Gets the PendingIntent for the given request builder and flags.
Disconnects the given connection from the HTTP server.If the connection is a URLConnection,
Binds the service to the context.This method must be called before the service is started.
Unbinds the service.
Notifies the listener about the view that is being loaded.
This method is called when the channel is opened.
On accept data.
This method should only be called once all the data has been received from the server.
Wait for the loader to finish, and log an error if it fails.
Helper method to set the text of a TextView or hide it if the text is null or
Hide the soft input of the given textView.
Shows the soft input of the given text view.
Toggles the soft input of the given text view.
Computes the width of a pixel given the density of the display metrics.
This method is called when an exception is thrown during the port unification process.
Clear the cache for the given URL.
Populate the image of the given view with the given URL.
Cancels the image loading of the specified view if it is an image consumer.
Creates an image consumer for the given view.
Sets the result image to be displayed.
Sets the loading image to the image of the given image consumer.
Starts the image loader task for the given image request.
Add the image to the memory cache, if the image is already in the memory cache.
Adds a buffer to the buffer pool, if it is not already in the pool.
This method is called when a URL is being sent to the client.This method is invoked
Adds a simple parameter to the request.
Try to connect to the GingerBread API, if it is not a Ginger
Returns the MD5 hash of the given text.
Returns the CUBLAS_GEMM_GEMM_ALG_
Returns a String identifying the given CUBLAS_STATUS code.
If the given result is not cublasStatus.CUBLAS_STATUS_SUCCESS
If the result of cUBLAS is not cUBLAS_STATUS_SUCCESS
Adds a lexeme to the frequency table.
Add a new ending to the frequency table.If the ending id has already been added,
Returns the estimated frequency of the word, based on the ending ID and lexeme ID.
Print a long description of this token and its attributes to the given print stream.
Verify and set the value of the attribute in the tag at the given index in the given
This method removes the formating of a KAMOLS tag and returns the result.
Gets a list of metric data from the Appsd server.
Returns the query string to be used in the request.
Returns a list of MetricData objects created from the given JsonNode.
Convert a json string to a List of AppInfo objects.
Gets the connection configuration.
Execute a request to the SignalFx server for a list of apps and metrics.
Creates a genericode reader for Gnucleotide V04 Code List Document.
Creates a new reader for the GCL code list set.
Returns a new reader for the Garbage-collected column set.
Returns a code list reader for the GC10 code list document.
Creates a CodeListSetReader for the Gnuplot version-10 code list set.
Read the column set from the GML file for GML1 and GML2.
Get the ID of the passed column element.
Get the value of the column with the passed ID from the passed row.
Get the column with the specified id from the passed column set.
Get the IDs of all keys in the passed column set in the passed collection.
Get the key with the specified ID from the passed column set.
Check if the passed column ID is a column in the passed column set.
Create a column with the specified ID, short name, long name and data type.
Create a new key with the passed parameters.
The number of lines to skip.
Add a new column at the specified index.
Returns a writer for the GCodeList document.
Returns a new CodeListSetWriter instance.
Returns a writer for the GC-04 column set.
Returns a writer that writes a list of all generated code files in the GNU format
Create a new GCodeListSetDocWriter for the GCodeListSetDocument.
Gets the column set using the G-column-set algorithm.
Creates a validator for a GCodeListDocument.
Validator for GCC04 code list set.
The GColumnSet validator creates a new genericode validator for GColumnSet documents.
Returns a new validator for GCodeList documents.
This validator creates a validator for GCodeListSet documents.
Returns a validator that will validate the G-column-set document.
Send logs to server.
Sets the context that will be used by this application.This method will be called by the
Gets the current log level from the thread pool.If the thread pool doesn't exist,
Returns true if the capture operation was successful, false if there was an error.
Sets the maximum size of the log file in bytes.
Prepend the metadata to the given message.
Adds the stack metadata to the given JSON object.
Creates a new JSON object with the given level, message, timestamp, metadata,and exception
Sets the user identity for the given user.If the user does not have a user context
Gets the byte array from file.
Starts location updates if the user has permission to view fine and coarse-location.
Changes the size of the given region to the given number of entries.
Counts the sizes of all entries in the partitioned region of the given region.
Size the region or local region if the size of the region is smaller than the local region
Reads a snapshot record from the stream.
Dumps the time stamp to the given print writer.
Returns the number of milliseconds since the given index in milliseconds since the beginning of this series.
Convert the specified file into a chart.
Get a pool for a given server.
Get the pool for the locator for the given JMX JMX server.
Checks if the specified region is already on the server.
Get a member of the JMX bean, or null if there is no such bean.
Get a list of all the host names of all the members of the given JMX bean.
Lookup the network host for the given host.This method will look for the host in the
Checks if the data is a Throwable and if so sends it to the ResultSender.
Executes the given function and returns the results as a collection of objects.
Recursively flattens a collection of objects into a collection of objects.
Executes a query using the given query object and returns a collection of the results.
Returns a CacheListenerBridge for the given consumer after the entry has been put.
Creates a bridge for a CacheListener that will be invoked after the cache has been deleted.
This method is called when an exception is thrown during the processing of the request.This method
Gets the on region filter key facts.
This method executes the cache and calls the execute method on the result sender of the cache.
Returns a list of all the host names in the given JMX JMX bean.
Executes the function and returns the result.If the result is not cached, it will be
Returns the application name of the first resource in the array, or null if none.
This method is used to initialize the security provider.
Returns the region with the given name.
Get a region from the client cache, or create it if it doesn't exist.
Construct the comparison between the source and the target map.
Returns true if the timestamp at the given index is less than or equal to tsAtInsert
Closes the stream. This method closes the underlying input stream and the underlying input stream.
This method converts GFFS stats files to CVX files.
Read a GFF4 file from the GFF4 archive and write to a CSV file
Attempt to reconnect to the JMX server.If the server is not connected to a JMX server
Stop all members on the host and return the number of stopped members on the host.
This method shuts down a member of the JMX server.
Shuts down all the members of the given JMX bean and returns the names of all the
Shuts down all members in the given redundancy zone.
Stores a page-by-page map in the storage.
Read results by page.
Import the given region into the local file system.
Checks if the remote locators and locators match.
Executes the check-sum function on the given region name.The region name passed in is
Builds a region check-sum map from the given region.
Returns the value of the column with the given column name, or the value if the column
Returns true if the given type mirror is one of the integer types, false otherwise.
Serializes the given object to a byte array.
Deserializes an object from the given byte array.
Creates an instance of the given class.
Checks the given element to see if it is a valid table id for the given table object
This method checks if the column element is a valid field annotation and if it is present,
Checks if the given type is a direct supertype of the given element.
Brew the java.lang.PrintWriter to the given writer, and emit a comment
Emits a method which returns the id of the target object.
Returns a observable sequence that contains the results of this query as a sequence of rows.
Checks that the given column name exists in the table.
Returns the given string value or the given default string if the given string is blank or
Capitalize the first character of the given string.
Returns true if the given type mirror is in the list of real types, false otherwise.
Add a "descending" clause to the query.
Read the temperature from the device file.
Returns the supported cursor methods for the given type.
Log an error message.
Returns a list of the Fonts that are used to display the icon.
Get the list of all icon codes.
Get the HTML markup to display in the background of the dialog.
This function returns the value of the given point at the givenexponent.
Set the values of this table from an array of float values.
Returns the integer represented by the given BigDecimal, where the result is rounded to the given
Returns the integer value of the root element of the decimal number represented by the given index.
Calculates the taylor factorial for the given number of significant digits.
Returns a new BigDecimal that is equal to x, divided by the given number of decimal places
Returns the newton of the given BigDecimal, with the given number of decimal places.
Convert the given BigDecimal to the tangent of the specified number of decimal places.
Calculates the taylor coefficient for the given number of decimal digits.
Returns the square rooted at x, where x is the square root of the scale.
Prints the given pi string to standard out.
Returns a string representation of the given timestamp.
Sets the minimum and maximum values of the bounds of this rectangle.
Put a float value into the ring buffer at the head of the ring buffer.
Prints the contents of this object to the output stream.
Adds a complex to this complex number, and returns a new complex number.
Subtract a complex number from this.
Multiply this complex number with another complex number.
Returns the complex product of this complex number and the given complex number.
Set the values of this matrix to be equal to the values of the given matrix.
Get a row of this matrix.
Returns a column of this matrix as a column vector.
Sets the rows and columns to the given array of values.The values are assumed to be
Returns the transpose of this matrix.
Add a matrix to this one.
Subtracts this matrix from this one and stores the result in the new matrix.
Returns a new matrix with all elements multiplied by k.
Multiplies this matrix with the given matrix and returns the result.
Print the contents of this matrix to the passed print stream.
Sets the image to be displayed on the page.
This method checks if the coefficients are valid and if so, if so, the coefficients are
Computes and returns the next position of the function in the MFCAR tree.
Clears out the state of the SLD.
Converts a StyledLayerDescriptorInfo into an XML string.
Convert a StyledLayerDescriptorInfo into a StyledLayerDescriptorInfo.
Validates a styled layer descriptor.
Check if the SLD is valid, return true if the SLD is valid, false
Calculates the area of a rectangle given by x1, x2 + h.
Set the rows and columns of this matrix from another matrix.
Sets the rows and cols of this matrix to the given array of values.
Returns the inverse matrix of this matrix.The inverse matrix is the identity matrix.
Returns the determinant of this matrix.
Returns the Euclidean norm of this matrix.
Solve a linear equation on a Bayesian system.
Print the decomposition of this matrix as a decomposed matrix to the supplied print stream.
Computes the forward elimination factor for a given set of scaling factors.
Returns the forward substitution matrix for the given column vector.
Substitutes the column vector y to the column vector y in the back-subtraction
This method will improve the matrix by adding a new column vector to the matrix b, and
Convert a square matrix to a row-major matrix.
Returns the next von neumann from the next von neumann.
Performs a single iteration procedure.
Computes the next position of the function at which the function should be applied to.
Checks if the current position is consistent with the previous position of the root file.
Computes the next position.
Check if the two points are in the same function.
Add an amount to the end of the list, if it is not already in the list
Returns the product of two numbers.
Rounds the given base up to a power of m, and returns the result.
This method is used to perform a single iteration of the iteration procedure.This method does not
This method initializes sldManager.
converts a long to a char array.
Decompose the given bit array into an array of bits, and store the result in the
Print the current state of this object to the passed print stream.
Checks if the given value is a valid floating point number.
Checks that the given value is a float in the range [0, float_exponent_
Checks if the given value is a valid double biased exponent.
Checks if the given value is a valid double unbiased exponent.
Returns the next central distance between the current point and the central distance from the point in the
Returns the next random number in the range [0.0,1.0)
Returns the next random ratio in the image.
Returns the prime sieve for the given number of bits.
Returns the factors of a prime-sieve.
This method performs the iteration of the given number of times.This method should only be invoked
Computes the next position in the linear function.
Checks if the position of the root node is equal to the previous position of the root node
Set the JavaFX application.
Sets the configuration from a file in the XML configuration file.If the file is null,
Sets the default configuration.
Initialize the FXML loader with the specified target class, location, resources, charset, and
The latitude and longitude for the geocoding request.
Get the host port pair from the service metadata.
Returns the applicable attribute definition for the given attribute definition uuid, or null if no such attribute
Evaluate the given attribute filter expression and return true if the expression is true or false if the
Sanitizes a tag to be used in an HTML document.This method is used to remove
Specifies the address of the geocoding request.
Query for all names in the database.
Query the service tracker for the instances of the given service.
Returns a list of all to-by-logged-in collaboration records.
Returns the meta data for a decimal value as defined by the meta-data-prefix parameter
Changes the password for a logged in user.
Gets a listing of all the users in the system.
Gets the gravatar for the given email address and size.
Gets the Gravatar image for a user.
This method is called by Fluo to populate the data from the ElasticSearch API.
Returns the type of the field to be searched for in the Elasticsearch index.
Create a new flow step.
Updates the given flow step and returns the updated flow step.
Returns the flow step with the given id and step type.
Gets a flow step by step.
Returns a list of all steps for a given flow.
Deletes the specified flow step.
Force deletes the given flow step and returns the new flow step.
This method is used to populate the list of form fields for the table.The list of
Closes the connection. This method is thread-safe and is not thread-safe.
This method handles the message received from the client and processes the message received from the client.
This method is called when the connection is closed.
Get the echo messages from the return value.
Gets a listing of all items in the current user's personal inventory.
Create a new table record.This method is used to create a new TableRecord.
Deletes the specified form container.
Gets the list of historic data for a given form.
Gets the form and field historic data.
Gets the most recent form and field historic data for the given form.
Lock the form container for the given job view and job view.If the lock is not
Unlock this form container.This method is a shortcut method for lockFormContainer.
Unlocks the specified user in the form and returns the result as a new form.
Creates a form container from the given result set parameters.
Convert a role listing parameter into a list of Role objects.
Creates a new form definition.
Updates the given form definition.
Returns the form definition with the given id.
Returns the form definition with the given name.
Gets a listing of all form records for the logged in user.
Deletes a form definition.
Returns the storage key for the given form definition and field definition.
Initializes the memcached client. If the memcached client is not already initialized, it is created.
Shuts down the memcached client. If the memcached client is already shut down, the memcached
Attempts to parse the given string as a long, returning -1 if the string is invalid
Convert a document to a PDF file.
Gets the field values for a form from cache, or null if the form is not in
Creates a flow step rule.
Creates a new flow step rule.
Create a new flow step rule.
Updates the flow step rule.
Updates the flow step exit rule.
Updates the given flow step rule and returns the updated flow step rule.
Move the flow step rule to the front of the next step.
Moves the entry rule down in the specified flow step rule.
Deletes a flow step rule.
Deletes a flow step rule.
Deletes a flow step rule.
Initialize the session with the password and the response from the server.
Sends a request to the user query service and returns the user query listing.
Returns the list of all the roles that have been added to the account.
Get the service ticket in upper case hex.
Create a field in a form field with a field's text masked value.
This method creates a new form field with a text barcode.
This method creates a new Field using the field parameter as the field's type is "decimal
Creates a field that allows to enter a decimal value.
Creates a field that can be used to enter a table in a form.
Updates the field's text field with the given mask value.
This method updates the given field with the given text barcode.
Updates a form field's value with a decimal spinner.
Updates a field's decimal slider.
Updates a field in a form definition.The field will be updated only if the service ticket
Returns a Field with the specified field name.
Gets the fields by form name and logged in user.
Gets the fields by form type id and logged in user.
Deletes the given field.
Force the deletion of a field.
Get the meta data for a table field based on the given form definitionparam.
Updates the user field value.
Gets or creates an index if it doesn't already exist.
Create a new flow.
Updates an existing flow and returns the updated flow.
Returns the flow with the given id.
Gets a flow by name.
Deletes a flow.
Force deletion of a flow.
Update the field value with the given global field.This method is used to update the field
Returns a list of all the field values for all the fields defined in this component.
Returns a map containing the form definition ID and the title of the form definition.
This method is used to decrypt the encrypted data packet and return the decrypted data packet.
Closes the connection and cleans it up.
Initializes a new request and returns the request id.The request id will be returned by the
Get the exception message for the given prefix parameter and number of sent items in verbose format.
Creates a new admin user.
Gets an access token.
Gets the user profile information.
Execute a JSON-RPC call and return the result as a JSON object.
Execute the form and return the result as a json object.
Get the response handler for the given url called param.
Returns true if the connection is valid, false if it is not.
Returns the client to be used for closing the HTTP client.
Gets the path to the system property "fluid-system-trust-store".
Closes the connection if the connection is not already closed.
Gets a list of Fluid items for a given job view.
Send a form to a flow.
This method is called when the client has closed the session.
This method is invoked when a message is received from the server.If the message is a
This method sends a message to the client.
Send a message to the remote endpoint.
Closes the user session.
Execute a native SQL query and return the results as a list of SQL statements.
Execute a license request.
Apply license to the given license cipher text and service ticket.
Create a Field that represents a FieldText.
Create a Field for Paragraph Text.
Create a new Field for ParagraphText.html.
Create a multi choice select many field.
Create a Field with the type "DATE" and "DATE_TIME".
Update the given Field in the current Service with plain data.
Updates the given field as a paragraph text field and returns the updated field.
Update a field's date and time.
Update the given field's decimal field.
Updates the value of a field in the current service ticket.If the service ticket is not
This method is used to create a field value for a specific item in a fluid.
Gets the configuration for the given configuration key.
Returns a list of all configurations.
Create a new attachment.
Retrieves and returns the attachment with the given attachment id.
Deletes an attachment.
Force to delete an attachment.
Parse the contents of the given jar file and add it to this class loader.
Sets the class loader for the given jar path.
Check if the parent is an instance of XSDSchema and the name is set.
rule 3.name.schema.schema.xsd.xsd.xsd.
Checks if there is at least one reference to a simple type or form tag.
Get the schema node from the given file path.
Checks if the current element is a XSD schema and if so, throws an exception.
rule 3.4.ref.ref.ref.ref.ref.ref.
Convert the given value to an instance of the reflected class, or null if the value is
Creates a new instance of the given cli class.
Creates a CLI instance using the given options.
Parses the given arguments into an object of the given class.The arguments are parsed using the
Parses the given list of arguments using the specified options and returns the instance of the option.
Returns a builder for the given path.
Remove the given view from the list of views that have been added to the footer.
Returns the value at the given location in the current position of the BayesianTransform.
Returns the value of a 3d Gaussian function with the given seed.The seed is used
Returns the value of a 3-D Gaussian function.
Returns the value of a cubic interpolation function with the specified parameters.
Bessel function for calculating S-curve.
Sets the lower and upper bounds of the current bounds and recalculates the scale bias.
Processes the specified cloud trail event by calling all plugins for the event, and then calling the
Processes the given CloudTrailEvent and passes it to the given fullstop plugin.
Returns the account id for the given event, or null if there is no account id.
Returns true if the rule entity matches at least one rule entity in the whitelist, false otherwise
Returns the serializer for the given log file.
Create a file with the given file name.
Creates a new directory in the temp directory.
Restores all properties that have been previously saved to the current state of the instance.
Creates a new implementation for the delegate map.
Adds the given object to the collection of soft-linked soft-objects.
Sets the value of a property.
Get an array property from the property manager.If the property is not in the property manager
Moves to the next state for the given action name.
Process the queue of soft-references and remove them from the map and remove them from the
Returns the value for the given type, or null if the given type is not supported.
Gets the parameterized type for the given parameterized type.
Returns the type variable for the given type variable.
Prints the stack trace of this throwable to the given print stream.
Prints the stack trace of this exception to the given print writer.
Replace the remote object with the stub.If the object is a remote object, the stub
This method is called when the server is listening and it is ready to be used by the
Sets the task to be run.
Returns true if the task was accepted, false if it was not.
Notifies the task that the task has been rejected with the given exception.
Returns true if the task started, false otherwise, false if the task was not started.
Tells the task that the task has completed, and logs a warning if an exception is
Stop the task and log the exception if it fails.Return true if the task was stopped
Returns the executable for the current job, or null if the job is not yet executed.
This method is called when a new job is added to the queue.This method is called
Convert a blocking mode name into a blocking mode object.
Reads an object from the input stream and resolves it to a real object.This method is
Copy the readers from the old catalog to the new one.
Creates a new catalog instance.
Load all system catalogs and add them to the list of system catalogs to the catalog files.
Parse a catalog from a given URL.
Parses all catalog files in the local file system and returns a list of the catalog files.
Parse the given catalog file and return the catalog object.
This method is called for each string in the vector.This method is called every time a
Resolve the doctype for the given entity name, public ID, and system ID.
Resolves the URL and returns the resulting document.
Resolves a system ID.
Returns the local URI for the given URI.
Make the given sysId absolute.
Normalize the given URI to ensure it is valid UTF-8.Returns null if the URI
Returns the string representation of the given byte.
Add a delegate to the list of delegate entries for the given entry.The delegate entries are
Create a SoftValueRef for the given key, value, and reference queue.
Notifies all registered listeners that an exception has been thrown.
Adds an exception to the list of exceptions for the specified type.
Creates a new implementation of the delegate list, if the delegate list is not already one.
Compares the next execution time of this timer task with the given timer task and returns the number
Get the value of this field as an Object.Returns null if this field is not a
Returns the object at the given index in the list, or null if there is no such
Sets the object at the given index in the list.If the index does not exist,
Remove all soft objects from the queue and add them to the list of soft objects.
Adds a new entry type to the list of entry types for the given name and number of
Get the entry type.
Get the entry argument count for a given entry type.
Returns the entry argument with the given number of arguments as a String, or null if the
Sets the context class loader for the given thread.
Swaps the two specified elements of the specified array.The order of the elements in the
Remove the node at the given index.
Clean up the given timeout.
Loads the class with the given class name.
Preloads the URL cache for each supported protocol.This method will try to load the URL
Creates a new URL from the given protocol and returns it as a java.net.URL
Check if there is a known handler package in the system property.If so, check if
Gets the value of the property.
Creates a new implementation of the delegate set, if the delegate is not already an instance of
Creates a synchronized version of the given counter.This method ensures that the given counter is synchronized
Make the given counter directional according to the given flag.
Returns true if the extension namespace is in the namespace stack, false if it is not.
Check if the given result is valid and if so, the notification will be sent to the
Returns an instance of the object with the given name.If the object is already in the
Substitutes the given string from the given string, replacing all occurrences of the specified substring
Splits a string using the specified delimiter and returns an array of Strings delimited by the given delimiter
Join a byte array into a single string.
Appends the object to the given JBuffer with a default hash code and the object's class
Gets the value of this property as a blocking mode object.
Creates the entry map and sets the current time to the current time.The entry map is
Returns the value associated with the given key, or null if there is no value associated with
Returns the value associated with the given key, or null if there is no value associated with
Removes the entry with the given key from the entry map and destroys the entry if it
Flushes all entries to the cache.This method is thread-safe and should only be
Gets a list of all keys in the map that are valid for the current time.
Set the resolution.
Returns the entry for the given key, or null if the entry doesn't exist.
Returns the iterator of children of the given element whose tag name matches thegiven tag name.
Gets the first child element with the given tag name, or throws an exception if no child
Returns the first child of the given element with the given tag name, or null if no
Get the content of an element.
Returns the content of the unique child of the given element with the given tag name.
Gets the content of the first child of the given element with the given tag name.
Sets the maximum queue size.
Set the blocking mode.
Sets the blocking mode to the given string.
Executes the given task using the given executor and rejects the given task if an exception occurs
Resolve a system by resolving the external system URL.
Resolve the public URL for the given public id using the given resolver.
Query the resolver and return the resolver object.
Append a vector to the end of the vector.
Resolve all the system IDs in reverse order.If the system ID is not in reverse order
Resolves a system ID to a relative URL.
Resolve all the local system entries for the given system ID.
Reads a catalog from a file URL.
Read a catalog from an input stream.
Establishes a connection to the file. If the connection is already open, it is
Get an output stream for the file.If the file doesn't exist it will be created
Remove a value from the linked list, removing it from the linked list if necessary.
Get the value of this header.If this value is a header, return the value.
Creates a snapshot of the current state of this entry.
Creates a logger for the given class, creating it if it doesn't already exist.
Print the list of objects to the given buffer.
Gets the class short name.
Returns the implementation of this class as a string.
Returns an iterator over the names of all properties in the system.
Get the PropertyGroup for the given basename.
Gets the compatible constructor for the given type and value.
Returns a copy of the given object, or null if the object is not serializable.
Dereference the object and cast it to the expected type.
Initialize the JNDI context by loading the system properties and setting them in the system properties.
Updates the JNDI cache with the given name and value.
Returns a set containing all keys in this binder.The returned set is synchronized, so that
Returns a set of the entries in this context.
Removes the given property listener from the list of listeners.
Notify all listeners that a property has been added to the list.
Notifies all registered PropertyListeners that a property has been removed.
Notify all listeners that a property has changed.
This method is called when a property has been changed.
Make a property name based on the given base property name, and the given prefix.
Loads the properties from the given PropertyReader and loads them into this Properties object.
Load a property from the given class name.
Returns the property group for the property with the given basename and index.
Returns true if the entity has been resolved, false if it has not been resolved yet.
Resolve the input source for the given system id.
Returns the input source for the given system ID, or null if the system ID is null
Resolve the classpath name for the given system ID.If the system ID is null, this
Sets the value of this element to the specified text.
Returns a normalized version of the given public id.
Encodes a public ID as a valid URN.The resulting URN will be a valid
Decode a public URN into a public ID.
Replace the old string with the new string.
Start the timer. If the timer is already running, the timer will be reset.
Stop the timer and return the number of milliseconds elapsed since the last stop.
Make a synchronized stop watch for the given StopWatch.
Compares this object to the given object.
Generates a hash code from the given byte array.
Generates a hash code for the given array of objects.
Creates the map and list of all the elements in this list.This method must be called
Sets the value of the field.
Returns the next token from the token stack, or an empty string if there is no next
This method initializes the date format and the default date format.This method does not use the
Adds a vertex to the graph.
Sets the root vertex of the graph.
Remove a vertex from the graph.
Performs a depth-first search using the given visitor for the graph and vertex v.
Traverses the graph starting from the given vertex and then calls the given visitor for each edge
Returns the vertex with the given data if found, or null if there is no vertex with
Finds all cycles in the graph.
Convert a string to a canonical version.
Parses the given XML string and returns the root Element.
Parse an XML document from an input stream.
Parse the given input source, and return the root Element.
Creates an element from the given local name in the owner document of the current thread.
Resolve a qualified name in the namespace of the given element and return a QName object.
Copy the attributes from the source element to the destination element.
Return true if the given node has at least one child element.
Returns an iterator over the child elements of the given node.
Returns the text content of the given node.
Returns an iterator over all child elements of the given node.
Returns the parent element of the given node or null if there is no parent.
Adds the given resource to the list of waiting resources for the given holder.
Read a catalog from the given file URL.
Gets the host address.
Sets the value of a system property to the given class name.
Displays information about the given class in the given buffer.
Prints a description of the given class and its interfaces.
Strip the package name from the end of the class name.
Returns the package name of the given class.
Force the given class to be loaded.
Get the primitive wrapper for the given type.
Gets all interfaces of the given class and all of its superclasses and superclasses.
Returns an array containing all of the interfaces of the given class and all superclasses.
Checks if the given type is a primitive wrapper type.
Creates a new instance of the class specified by the given property.If the class is not
Returns the getter method for the given class and attribute name.If the method is not found
Returns a setter method for the given class and attribute name.
Converts the given class name to a Java class.
Gets a property from the System.properties file, using the given name and default value.
Returns an array of filenames for the given property name.
Maintains the set of weak objects in the queue and removes them from the set.
Returns an iterator over the objects in this weakset.
Creates an instance of the URL class for the given protocol.
Returns a set of the entries in this map that start with the basename of this map.
Adds a property listener to the list of listeners that are notified about changes to the properties.
Removes the specified listener from the list of listeners to be notified when a bound property has been
Checks if the given string is null or not.
Find a PropertyEditor for the given type.
Registers an editor for the given type name.
Convert a string value to an object of the given type name.
Get the context class loader for the given thread.
Checks if the given Throwable is an ApplicationDeadlockException.
Schedules the specified timeout for execution until the specified time elapses, or until the specified timeout
Executes the next work in the queue, blocking until the queue is empty or the queue is
Create a subcontext for the given context and name.
Looks up an object by its name and returns it as an object of the given class.
Checks that the given object is of the given class type.
Appends information about the given class and its interfaces to the given string buffer.
Gets the transition with the given name.If the transition is not found, null is returned
Read the properties from the property file.
Query the user's verbosity, and return it as an integer.If the property is not
Query for relative catalogs.
Query for the catalog list from the system property or the properties file.
Returns the list of catalog files.
Query whether the system property "PREFER_PUBLIC" is set, or the system property
Query whether to use a static catalog or not, depending on whether the system properties or the
Resolve an entity from the system or public id. If the entity is not in the system
Resolves the given URI and returns the resulting Source.If the URI is not in the URL
Make the given URI absolute relative to the current working directory.If the URI is not absolute
Resolve a class using the current thread's context class loader.If the class is not found
Invoke the setter for the given value.If the setter returns true, the setter will be
Get the local name of the given element.
Returns the namespace URI for the given node, or null if the given node is not a
Returns the namespace URI for the given element.
Convert an enumeration into a List.
Returns an input stream for the given filename.
Loads properties from the specified file into the specified Properties object.
Reads properties from the input stream and returns the properties as a Map.
Adds the given edge to the list of outgoing edges and returns true if the edge was added
Adds an outgoing edge to the graph.
Adds a new incoming edge to the graph with the given cost.
Returns true if the given edge is in the graph, false otherwise.
Removes the given edge from the list of incoming and outgoing edges associated with this node.
Returns the edge with the given destination vertex, or null if no such edge exists.
Returns the edge if it is in the graph, or null if it is not in the
Returns the cost of the edge between this vertex and dest vertex.
Writes a jar file to the specified output stream.
Returns true if at least one iterator in the chain has an next element, false otherwise.
This method will fire an event to all registered listeners.
Installs the JVM type provider for the given resource set.The JVM type provider will be
Dispatches the given action to the FX application thread if the platform is a FX
Gets the event stream for the given action type.
Convert a collection of rights into a stream of T2 objects where the first element is the
Convert a collection of rights to a stream of T2<L, R> objects.
Returns true if the robots of the page are allowed to access the robots.txt file.
Verifies that the drink maker executes the given command and verifies that the command was generated
Returns the sum degree of the words.
Returns a copy of the given map containing the arguments of the superclasses.
This method overrides the default resource loader, so that it can be used as the resource loader
Checks if the datasource is valid and if so, checks if the datasource is valid.
Returns a list containing all instances of the given class, or an empty list if the class
Connect with url driver class name and username and password and return true on success.
Execute a SQL statement in the database with the given name.Returns true if the SQL statement
Execute a query in the specified database and return the first row of the result set.
Add a new row to the query that contains the example of the given object.
Called when the database changes to a different version.This method is called when the database is
Write the contents of this table to a CSV file.
Restores the current state of the table from the given SQ-SQL database and suffix
Set the empty text of the list view.
Dump the database to a CSV file with the given suffix.
Unescapes the quotes in the given string and returns the result as a quoted string.
Returns a list of all the values in the given CSV row.
Convert a comma separated list of strings into a map.
Converts a map of strings to a CSV string.
Join a list of strings into a single string.
Join a list of strings into a single string.
Read a database model from an index file.
Write the database info to the given output writer.
Inspect the id field of the entity model and return the id if it's not null.
Get the base DAO class for the given entity.
Returns the bind type of the converter.
Imports a SQDB from a CSV file in the local file system.
Backup all tables to CSV with the given suffix.
Restores all tables from a CSV file.
Writes the index.html file to the file specified in the constructor.
Creates and returns a query that can be used to perform the rendering.
Create a new typed query using the given entity manager, and the given type.
Returns a string representation of this query.
Delete the row with the given id from the table.
Saves the given object in the database.
Updates an object in the database.
Add a "where not in" clause to the list of items for this query.
Add a new WhereSubquery to the builder and add it to the list of items.
Returns the next stack that is currently active, or null if none is active.
Gets the empty intention stack from the top of the stack.
Adds a plan to the list of belief assignments for the given plan.
Selects a specific plan based on the given plan selection policy.
Selects a plan at random from the bindings in the plan map and returns it if found.
Sets the variables of the plan instance based on the belief of the agent's result.
Returns the belief at the given index, or null if the index is out of range
Returns the array of parents of this node.
Returns children of this node as a byte array.
Increases the length of the byte array by the given amount.
Creates a logger with the given name, level and file.
Performs the next step in the body.
Set the goals from an array of bytes.
Pause for user input.
Initialize the intention selection pools.
Initialize the intention selection threads.
Starts the intention selection threads.
Shuts down all the intention selection threads.
Register a Jill extension, if it is not null, it will be added to the
Resets the internal state to the initial state.This method should be called before any other methods
Load the agents for the given class name, and add it to the list of agents.
This method processes the plans for the specified goal type and returns true if any of the plans
Creates the agents in the catalog, if they don't already exist in the catalog.
Load a class by name and check that it is assignable from the given type.
Loads a Jill extension by its fully-qualified class name.Returns null if the extension
Returns true if the name of the first object is equal to the name of the second object
Returns the usage string for this application.
Parses the command line arguments and makes sure that all the arguments are valid.
Parses an argument with the given option and returns the value of the configuration object.
Executes the specified query and logs the time it took to run the given query.
Returns the object at the specified index.
Returns the first object with the specified name in the list of objects, or null if none
Pushes an object onto the stack.
Returns the value at the specified index in this map, or null if there is no value
Pushes the given object onto the stack, and returns true if the object was added to
Removes and returns the last element of the queue.
Returns the type of the given object.
Return true if the belief and the query matches the given belief and query.
Main entry point for the belief-base tool.
Convert a string to a byte array.
Pushes the given goal onto the stack and adds it to the main pool.
Send the message to the agent with the given id.
Sends a message to an agent.
Returns a copy of the goals in the byte array.
Creates a new belief set with the specified name and fields.
Add a new belief with the given name and tuple of values.
Evaluates the query and returns true if the query was executed successfully, false otherwise.
Suspends this agent.
Returns the field with the given name, or null if the field does not exist.
Registers the given number of neighbours as belief.
Generate a random name.
This method is run in a background thread.It will wait for the thread to exit.
Checks if the given stack is valid for the given agent.
Remove a set of agents from the list of finished agents.
Manages the goal of an agent and returns true if it is a goal.
Shuts down the pool. This method should be called only when the pool is stopped.
Marks the given agent as idle, if it is not already in the idle state.
Moves the specified pin from one location to another pin.
This method initialises the configuration and returns true if the configuration was successfully initialized, false if
Wait until the current thread is idle, or the thread is interrupted.
Called after all data has been written to the file system.This method is called after all
Returns true if any of the pool's intention selectors are idle.
Returns the poolid for the given agentid.
Picks the expression from the current expression, and returns it, or null if the expression
Sets the expression to be used when evaluating the expression.
Creates a join expression for the given path attribute and the given from object.
Recursively joins properties starting at the given index into the given Join instance.
Returns the root join for the given property, or creates a new one if none exists.
Returns true if the end of the range is reached, false if the end of the range
Gets the upload stream from the request.
Invokes the registered REST method for the given request and dispatches the response to the appropriate handler
Checks if parameter with given name and value is equal to given value.
Get the value of the parameter with the given name.
Parses the given expression and returns a map of parameter names to their values.
This method is used to configure the transaction manager.This method should only be used for testing
Gets the target file for the given artifact name and filename.
Writes the artifact to the target file.
This method is called after a managed class instance has been created.This method is called after
Get the declared constructor for the given implementation class.
Builds a string representation for the given configuration descriptor.
Returns the method for the first implemented interface of the given method.If the method is not
Returns the type of the field, or null if it is not a List.
Returns the value of the dependency of the given type in the given host managed class.
Persists the current state of this object to the persistent storage.If the object is already
Sets the default links for the given rel and hrefs.
Sets the default link template for the specified rel and href.If href is null, the
Handle links in the given response.
Handle the links from the response headers.
Handles links in the body of the request.
Parse a link from a JSON object.
Gets the value for the given key in the given map, creating it if necessary.
Sets the allowed methods from the response.
Checks if the given method is allowed by this handler.
Register all instance processors.
Registers an instance factory for the given instance type.
Registers an instance processor.
Registers a class processor with the list of registered class processors.This method will throw a Bug
Adds an argument to the list of arguments.
Creates and returns the list of target files.
Returns the XML representation of this object.This method uses the JAXBHelper to create the JAXB
Initializes the template, arguments and target files, and the TflProducerConfig.
Returns true if the given file is a reference to the template file in the given directory.
Create a parameterized template model from a XML document.
Creates a Parameterized TemplateModel from a XML file.
Sets the request path for this request.
Returns an Observable that will be observable by reading all items in the specified range starting at the
Create a new instance of the given type and return it as a new object.
Sets the value of the given field to the given value in the context.
Add a capture appender to the given logger.
Remove the appender from the given attachable and add it to the capture queue.
Clears the capture buffer for the given logger and the given appender.
Parse the model. This method is called when the model has been parsed, or if the
Resolve all proxies in the resource set, and throw exceptions if any proxies are unresolved.
Gets the list of files in the given directory, and returns them as an array of File
Parse the files in the given directory and add them to the list of files in the directory
Returns true if any cross-references have been resolved, false otherwise.
Returns a set of all the Notifiers in the given resource set.
Sets the directory where the model files will be created.
Sets the file extensions to be used.
Set the resources of the resources for the model.
Reads the next record from the reader and splits it into parts and returns true if the record
Set the array of string values for the parameter with the given parameter name.
Converts the given string value to an instance of the given value type.
Merges the given velocity template into the existing velocity template and adds it to the velocity context.
Returns the directory where the model files should be stored.
Gets the template directory.
Writes the value to the output stream.
Starts the web page.
Configure the given web window with the current settings.
Print the contents of the given view.
Writes the contents of the given input stream to the given output stream.
Invoke the given method on the given proxy object using the given app factory.
Attaches the request and response to the request.
Detaches the cookie from the request context.
Returns the Cookies associated with this request.
This method prints out information about the request.This is useful for debugging purposes.
Gets the list of meter objects for all managed methods in the container.
Configures the EventStream from the given configuration object.
Sets the remote host.
Returns the value of the parameter with the given name converted to the given type.
Removes the prefix from the path.
Gets the first parent directory that is equal to the second one, or null if the first
Convert absolute path to relative path.
Convert a relative path to an absolute path.
Returns the depth of the given directory path.
Dump the given Throwable to the log and the request context.This method logs the current thread
Sends a JSON object to the client.
Adds a parameterized template to the list of parameterized templates.
Adds a list of parameterized templates to the model.
Initializes the parameter templates in the given context with the given map of variable names and values.
Finds all references to the specified template file in the specified template directory.
Sets whether the save button should be visible, and whether it should be read-only.
Asks the user to confirm that the deletion of the resource is completed successfully.
Deletes the element from the file system and notifies the event bus that the element was deleted.
Creates a new instance of the given managed class using the given constructor arguments.
Returns an array of File objects in the order in which they were added to the fit.
Get the summarizing counts for all the files.
Generates a summary row of the contents of this table.The summary row includes the number of
Get the summary row for a sub-directory of the given path.
Creates a new instance of the given managed class.
Get the setup class for the class name.
Returns the list of model directories for this XTextParser instance.
Returns the list of URI's for the model resources.If the list is empty, returns
Sets the list of candidates to be selected.
Loads the XML configuration from the given input stream using the given loader.
Show a notification for the given exception.
Returns true if the formal parameter type is an object type, false if it is not.
Reads an array of parameters from the HTTP request body and returns the result as an object array
Reads the given input stream as an object of the given type from the given input stream.
Extracts the cell parameter from the fit value of the cell.
Gets the value of the hints.
Checks if the request is an X-Requested-With header.
Checks if the user agent is Android.
Updates the endpoint if the new endpoint is the same as the current one.
Returns a list of all properties of the given bean type that are annotated with the given annotation
Returns the annotation associated with the given property on the given bean type, or null if the
Log a message at the severe log level.
Look up a domain in the whois web interface.
Returns true if there is a parser for the given whois host.
Gets the managed class for the given interface name.
Gets a managed method from the given managed class.
Process a message that contains an exception, and if found, the cell is right.
Process a not contains expression.
Serialize the HTTP response to the output stream.
Get cookie value by cookie name.
Add a cookie with specified name and value.
Remove cookie with given name.
Returns an iterator over the cookies in this request.
Returns the target file list producer.
Add a new field to the constant pool.
Compiles the class using the class loader and returns the class loader.
Verify if the response for the given token matches the one in the tokened image file.
Returns the value of the file name in lower case and remove all non-numeric characters.
Ensure that the URI path ends with a trailing slash.
Get the http servlet request.
Invoke a managed method on behalf of the wrapped managed object.
Execute the given SPI managed method in a mutable transaction, and returns the result of executing the
Execute the managed method using a read-only transaction.
Returns an array of all files contained in this directory that match the specified filter.
Gets the last file in the directory.
Gets the concrete parser configuration for the given parser configuration.
Checks if the given path starts with the given path component.
Returns the list of factories for the model of the given type.
Gets the HTTP session for the given instance key.
Serializes the response to the output stream.
Read the metadata of the file.
This method is invoked when a request is received from the client.This method is called when
Tears down the underlying statement and cleans up the resources.
This method is called when the component is being removed from the event stream.This method is
Handles the allowed methods on the endpoint.
Called when the file is being uploaded.
Deletes the endpoint if the user asks the user to confirm, otherwise ask the user to
Extracts the column parameters from a fit row.
Returns the names of the arguments for the command.
Schedules a periodic task for the given period.
Timeouts the given task for the given amount of time.If the task has already been
Loads the configuration from the config repository.
Returns the next file in the file list.
This method configures the application with the configuration from the configuration file.This method should be called
Prints the welcome banner.
Prints a banner of the stopped state of the application.This is useful when the application is
Creates a new Ria instance based on the command line arguments.
Register a hook to shutdown the RiaChameleon.
Triggers the notification.
Call this method to trigger the endpoint.
inserts a new row into the table and replaces the old row with the new one.
Returns the counts of the files in the data set.
setter for score - sets.
getter for variants - gets.
setter for variants - sets.
getter for questionType - gets.
setter for questionType - sets.
getter for token - gets.
getter for depLabel - gets the label of the dep.
setter for depLabel - sets.
getter for semanticType - gets.
setter for semanticType - sets.
getter for sections - gets the sections of the document.
setter for sections - sets Sections in a document.
indexed getter for sections - gets an indexed value -.
indexed setter for sections - sets an indexed value -.
getter for uris - gets A list of strings of type uima.julielab.
setter for uris - sets A list of URI's associated with a Concept.
getter for types - gets A collection of objects of type uima.julielab.
setter for types - sets.
getter for targetType - gets.
setter for targetType - sets.
getter for rank - gets.
setter for rank - sets.
getter for queryString - gets.
setter for queryString - sets the query string of the search result.
getter for candidateAnswers - gets.
setter for candidateAnswers - sets.
indexed getter for candidateAnswers - gets an indexed value -.
indexed setter for candidateAnswers - sets an indexed value -.
getter for query - gets.
setter for query - sets.
getter for hitList - gets A collection of objects of type uima.julielab.
setter for hitList - sets.
indexed getter for hitList - gets an indexed value -.
indexed setter for hitList - sets an indexed value -.
getter for abstractQuery - gets.
setter for abstractQuery - sets.
getter for searchId - gets the id of the search.
setter for searchId - sets the id of the search.
setter for docId - sets.
getter for offsetInBeginSection - gets.
setter for offsetInBeginSection - sets.
getter for offsetInEndSection - gets.
setter for offsetInEndSection - sets.
getter for beginSection - gets.
setter for beginSection - sets.
getter for endSection - gets.
setter for endSection - sets.
getter for aspects - gets.
setter for aspects - sets A collection of objects of type uima.julielab.
getter for triple - gets.
setter for triple - sets.
getter for sourceRelation - gets The source relation of the passage.
setter for sourceRelation - sets.
getter for subject - gets.
setter for subject - sets subject.
getter for predicate - gets the predicate of the triple.
setter for predicate - sets.
getter for isObjURI - determines if the triple is an object URI.
setter for isObjURI - sets.
getter for operator - gets the operator associated with the complex query concept.
setter for operator - sets.
getter for operatorArgs - gets.
setter for operatorArgs - sets.
getter for concept - gets.
getter for score - gets.
getter for text - gets.
setter for text - sets.
getter for id - gets the id of the concept.
setter for id - sets Identifier of the Concept.
getter for name - gets the name of the concept.
getter for abbreviation - gets.
setter for abbreviation - sets.
setter for concept - sets.
getter for variants - gets.
setter for variants - sets.
getter for namedEntityTypes - gets.
setter for namedEntityTypes - sets.
getter for conceptType - gets.
setter for conceptType - sets.
getter for occurrences - gets A collection of objects of type uima.julielab.
setter for occurrences - sets.
getter for concepts - gets A collection of objects of type uima.julielab.
setter for concepts - sets concepts of the abstract query.
getter for originalText - gets.
setter for originalText - sets the original text of the concept.
getter for args - gets.
setter for args - sets.
getter for label - gets.
setter for label - sets.
Returns the index of the first clear bit starting at the given index, or -1 if
Sets the value of the word at the given index to true if the word is set.
Frees the given byte buffer, if the buffer is not null, null is returned.
Returns a new instance of the CacheValue class with the given directory and file name.
Rehashes the values in an array, returning a new array with the original size.
method to generate a HELM file from the list of Notations.
Check if there are open and closing brackets.
Add the details of the source and target unit from the given notation string.
Returns the HELP representation of this rule.
method to add an element to the validation group.
Checks if the given polymer ID is a valid polymer id.
Checks if the given polymer id is a valid polymer id.
Checks if the given string is a connection or hydrogen or hydrogen bond and returns true
Checks if the given string is a valid group ID.
Checks if the given string is repeating or not.
Returns true if the last polymer element is a peptide or rna.
This method converts the notation container to a JSON string.
This method returns the PolymerNotation for the given PolymerNotationID.
Get the current grouping notation, or null if there are no current groupings.
Returns the HELP representation of this HL4Properties object.
method to convert the list of polymers to HELM notation.
Converts the list of connections into a HELLO connection string.
This method converts the list of groupings into a HELP-formatted string.
Convert the annotation section to a human-readable string.
method to get all polymers and group ids.
method to get the PolymerNotation with the given id.
Sets the elements of the polymer.
Do the conversion of the given string to the current format.
Sets the value of annotation.
Sets the value of the count property.
method to get the MonomerNotation for a given MonomerNotation.
method to decide which one MonomerNotationGroupElement is a MonomerNotationGroupElement.
This method decides what entity to use based on the string passed in parameter.
Gets the current value of the interval.
Parses the test string and returns true if the test string is a valid state machine.
Method to set the value of the RNA-NA attribute of theNotation.
This method defines the ambiguity of a grouping mixture or a grouping mixture.
Returns the current statistics of this queue.
Creates an A-D graph from a Collection of edges.
Creates a new graph from a collection of nodes and a collection of edges.
Initializes the internal list of incoming paths, if it hasn't already been initialized.
Returns a list of nodes sorted by their reachability.
Subscribes to the given pattern and invokes the given method on the given class.
Subscribes to the server and returns the number of times the server was subscribed.
Unsubscribes from all the functions that match the given pattern.
This method returns an Erlang response from the Erlang server to the Erlang protocol.
Send a return sync message to the Ethereum server.
Returns true if the poll request was successful, false if the poll request is rejected.
Send a SHUTDOWN message to the server.
If the given exception requires local handling, it will be wrapped in a unchecked exception.
Unlocks the run state, if the lock is held.If the lock is held,
Creates a worker thread, and starts it if it is not already started.
Try to add a worker to the pool. If the worker is already in the pool,
Registers the given worker thread as a worker thread in the work queue.
De-registers a worker with the given exception.
Signal a queue that a work has completed.This method will block until the work has completed
Run the worker. This method will grow the queue, if necessary, and run it.
This method waits for a work to complete, and returns true if it was successful, false
Returns the first queue in the pool that is a submitter, or null if the pool
Returns the number of tasks that can be completed with the given task, or -1 if
Submits a task for execution by the fork join manager.
Creates and returns a pool of fork join threads that will be used to create a new pool
Returns a value from the queue, or null if the queue is full, or until the
Builds a string from the given code block.
Gets the statistics for all queues in the local queue.
Create an array with the elements in the given array.
Returns the reverse of the sequence of elements in this sequence.
Returns true if the predicate returns true for all elements in the collection, false otherwise.
Folds the elements in the supplied collection into a single value, starting from the supplied start
Folds the value of the previous element of the given list into the given value.
Pushes a task onto the queue.
Converts a nullable object to A-T or A-N, if the object is null
Create an A-tuple from the given keys and values.
Create an empty A with the specified equality.
Creates an ASeq composed of the elements of the elements in the given sequence.
Creates a new AMap from the given keys and values, using the supplied AEquality operator
Returns a set of all the keys in the delegate map.
Returns a normalized resource name by removing the protocol from the start of the given name.
Marshals the given value to a string.
Return a sub-sequence from the start index to the end index.
Returns a binary search instance for the given list.
Creates a new binary search instance for the given list using the specified comparator.
Sends the given email message to the mail server and returns a future that fires when the message
Binds the given route binding to all registered route bindings for the given application accept version.
Binds the given filter handler to all methods in the application.
Returns true if the body of the tag has at least one role, false otherwise.
Returns the int representation of the given long.
Removes duplicate strings from an array of strings.
Returns a string like the given string.
This method is called when a new instance of the class is created.This method will be
Check if the user's password matches the given password and if it matches, set the user
Gets the login user from the session.
Check if a password matches a given salt and a plain password.
Saves the given user in the user's login cookie, if save is true, otherwise deletes
Generate the login key for the given user, IP, and user agent.
Returns the user object for the cookie, or null if the cookie is not found.
Forward the request to the path in the given web context.
Gets a long parameter from the request, or the defaultValue if the parameter is not present.
Log a debug message.If recordCaller is set to true, the message will be logged
Get the CallInfo for the given level of the current stack trace.
Convert a char array to a simple byte array.
Convert a char sequence to a simple byte array.
Converts a byte array to a simple char array.
Converts a char sequence to a byte array.The first character of the returned array will be
Looks up the locale data for the given locale code, creating it if it doesn't exist
Schedules the job to run in the given number of seconds.
Crops the specified image to the specified destination image.
Schedules the specified invocation for the specified period of time.
Executes the given invocation in a thread-safe way.
Returns the REST Template to be used by the REST template.
Renders an error message for the given error and exception in the ajax response.
Render an ajax forbidden response.
Processes the given template and returns the result as a String.
Parses the given URL and returns the action path.If the URL contains a slash, the
Render the data tables for the given class.
Render the empty data table with the given criterias.
Sets the list of items for the list of items in the combo box.
Sends the response to the web context.
Returns a list of all the providers in the specified injector that are bound to this injector.
Get the name of the current method in the stack trace.
Garbage collects unused memory, and cleans up the system memory.This is useful for
Propagates the given metrics to the local metrics collection.
Encode the given string as a UTF-8 string.This method returns the encoded string.
Copies data from the given input stream to the given output stream.
Copy the contents of the given input stream to the given output stream.
Copy data from the given input stream to the given output stream using the default encoding.
Copy the contents of the given reader to the given writer.
Copies the specified number of bytes from the specified reader to the specified writer.
Copy the contents of the given reader to the given output stream.
Copy the contents of the Reader to the given OutputStream.
Checks if two input streams are equal.
Returns true if the two input readers are equal, false if they are equal.
This method applies all stages to the given IO, and returns the result of the first stage
Returns the SQL for the given group name and SQL ID.
Unmarshals a string into an object of the given class.
Unzip a zip file to a destination directory.
Creates a new instance of PermissionDialogFragment with the specified bean and request code.
Set the key listener on the dialog and set the key listener on the key listener.
Adds a value type to the list of value types to be used by the given converter.
Return true if the given regular expression matches the given value.
Checks if the given string is a mobile phone number.
Checks if the given string is a valid phone number.
Returns true if the given string is a valid birth day.
Returns true if the string is a valid URL, false otherwise.
This method is called by the filter implementation.It invokes the configured web-context pipeline.
Encode a string in Base64.
Decode a Base64 string into a byte array.
Converts a hexadecimal string to a byte array.
Read UTF-8 properties from the given input stream.
Read content from input stream as string.
Read content of a file as a string.
Writes the given byte array to the given file.
Copies the source directory to the target directory.The target directory is created if it doesn't
Serialize a DOM tree into a XML string.
Get the document from the given file.
Gets the document from the given XML string.
Gets the document from the given input stream.
Check if the given document is valid for the given public key.
Sign the given document with the specified public key and private key.
Returns true if the given class loader is cache-safe, i.e.
Checks if the given class is an array of primitives.
Returns true if the given class is an array of primitive wrappers, false otherwise.
Resolves a primitive type if the given class is not a primitive type and the given class is
Returns true if the lhs type is assignable to the rhs type, false otherwise.
Returns true if the given value is an instance of the given type, false otherwise.
Returns an array of all interfaces implemented by the given instance.
Returns all interfaces of the given instance as a set.
Writes the current configuration to a temporary file.
Returns a map of variables mapped by the given URI.
Add a new permission to this bean with the given message.
Bind the given extension point to the given class.
Returns the built-in context for the given type, or null if the given type is
Returns a primitive for the given type.
Convert the given object to the given type.If the conversion is not possible, return null
Convert user-defined value type to a Java value type.
Returns the value of a parameter in the given type, or null if the parameter is not
Returns the value of the cookie with the given name, or null if the cookie doesn't
Returns the value of the named session attribute, or null if the attribute is not found.
Initialize the data source.
Sets the parameter for the given field to the given value for the given condition.
Sets the value of the given field to the given value.
Shows a permission dialog fragment for the given PermissionBean.
This method checks if all values have been granted in the result map.
Check if any value of the result map contains the value of the permission in the result map
Returns a list of records matching the given SQL select.
Returns the first record matching the SELECT query, or null if there are no records.
Returns true if the primary key value of the model is greater than or equal to 0.
Checks if the given method declares an exception of the given type.
Process the queue and remove all soft values from the queue if there are any.
Put a new value into the queue.
Returns true if the given string matches the given regular expression pattern, false otherwise.
Reads the command line arguments and returns an instance of the specified interface.If the command line
Returns the protobuf entity associated with the given class or null if the class is not annotated with
Returns true if the given class is a ProofBufferEntity, false otherwise.
Get all protobuf fields for a given class.The fields are stored in the cache.
Returns the name of the protobuf getter for the given field in the given protobuf attribute.
Returns the POJO setter name for the given protobuf attribute and field.
Gets the mapper for the current thread.
Returns the json factory for the current thread, creating one if it doesn't already exist.
Convert the given object to a JSON string.
Set the borders of this rectangle.
Gets a user record from the specified domain and user name.
Copy out the values of the JMX attributes to the target object.
Copy out the values from the JMX attributes to the target object.This method will call the
Add this application to the frame and add it to the content pane.
Saves the given token to the cache.
Returns the access token for the current user or null if the user is not logged in.
Returns the default class loader for the current thread, or the system class loader if none is
Returns the URL of a resource in the given class loader or the system resource if not found
Returns an input stream for the specified resource, or null if the resource is not found.
Get the class as stream.
Initializes this URI with data from the other URI.
Initialize the scheme based on the URI specification.
This method initializes the path from a URI spec.
Sets the scheme of the URI.
Sets the userinfo component of the URI.
Sets the host part of the URI.
Sets the port for the URI.
Append a path to the end of the path.If the path is already a URI,
Sets the query string for this URI.
Set the fragment of the URI, or null if the URI is not a URI.
Returns the URI for this URI specification.
Create a prepared statement from an iterator of parameters.
This method is called after the constructor has been called.This method is called by the constructor
Get the muffin value for this param.
Set the value of this param in the muffin file.
Gets the contents of the clipboard.
Set the clipboard contents.
Load services from the service loader and return a map with the service id as key and the
Sets the parameters of the given ParametrizedOperation to the given Map of parameters.
Returns a map with the parameter name as the key and the value as the value.
Find a parmetrized service with the given id.
Finds the first instance of the given class in the given collection of services.
Parses the response and returns the type of response object.
Returns an iterator over the elements in the buffer.
Returns the encoding of the given XML string.
Returns a Connection instance for the given Connection.
Read the authorization information from the given authorization URL and return it as a string.
Visit a PackageDeclaration. Visit all the classes and interfaces in the given PackageDeclaration.
Visit a ClassDeclaration. This is the primary focus of the visitation of the class.
Visit an executable declaration.
Returns the value of the option with the given key in the given map of properties.
Create a filter that returns true if all modifiers are present in the given collection.
Returns a filter that only accepts declaration of the given kind, i.e.
Returns a new DeclarationFilter that returns true if and only if the given filters return true
Returns a filter that returns true if this filter matches the union of thisfilter and the
Returns a map with the key name as the key and the value as the value.
Makes the given constructor accessible.
Prepare an object to be executed by a query.This method will first check if the object
Replace all backslash characters with a hyphen and return the resulting string.
Convert a byte array to a hex string.
Get the indexes for the given name.
Parse a named SQL statement and return the name of the first column in the result.
This method converts a collection of non-protobuf objects into a collection of protobuf objects.
Sets the value of a field in the protobuf object.
Sets the value of a field in a POJO from a protobuf attribute.
Check if this file should be included.
Gets an instance of the ResultSet class loader for the given result set.
Creates a map from a list of labels and an index of the corresponding label in the list
Returns the component type of the generic superclass at the given index.
Polls the queue until the queue is empty, or the queue is full.
This method polls all the objects and returns true if any of the objects was polled
Returns the field with the given name in the given class or in any of its superclasses
Returns the declared methods for the given class and all super classes.
Returns a declared method from the given class or its super class.
Returns an array of all declared methods that are annotated with the given annotation.
Returns the declared constructors for the given class that are annotated with the given annotation.
Print the given byte to standard output.
Returns the index of the first index of substr in the given string, or -1 if
Removes all characters from a string that are not in the chars list.
Clean up the state of the state machine.
Initialize the audit component.
Initialize the message queue.
Initialize the password validator.
Initializes the password authenticator.
Resolve locale code.
Lookup the locale information for the given locale code, creating it if it doesn't exist.
Returns a Statement instance for the given statement.
Removes all elements from the queue, and removes all of them from the queue.
Removes and returns the last element in the stack, or throws an EmptyStackException.
Returns an input stream for this input file.If the input file doesn't exist, it
Parses the command line parameters into a Properties object.
Returns true if the given tokens match at least one of the given patterns, false otherwise.
Move the rectangle by adding the specified offsets to the specified x and y offsets.
Returns true if this rectangular encloses the otherrectangular.
Returns true if the specified point is contained in this rectangle.
Computes the intersection of this rectangular with the supplied rectangular.
Returns the union of this rectangle and the supplied rectangle.
Returns a new rectangular with x1 and x2 set to the same values as this
Returns a copy of this rectangular with the same values but but y1 and y2
Returns the starting position of the specified column of this table.
Returns the offset of the specified row of the matrix.
Get the bounds of a cell relative to this rectangle.
Calculates the number of columns to use based on the number of columns in the table.
Calculate the total number of rows in the table, based on the number of rows in the
Unwraps the given throwable, if it is an invocation target exception or an undeclared
The main method that starts the application and waits for it to exit.The main method will
This method is called when a WAM code update is received.This method should be called
Copy and resize the code buffer.
This method initialises the configuration.This method should only be called after the configuration has been
Returns a copy of this QueryParameter, excluding elements in the excluded list.
Add a child node to the tree.
Remove all children from this node and remove all children from the parent node.
Returns the next element in the list, or null if there are no more elements.
Adds the given functor body to the list of instructions.The list of instructions will be
Adds the given list of instructions to the parent.
This method is invoked when a property is changed.This method is invoked by the PropertyChangeListener
Registers the given work panel with the work panel manager.
Updates the present component flags based on the information in the component map.
Create a new instance of this class with the given name, precision,scale,min and
Returns true if the given term is a variable or a variable that is bound to another variable
Optimize the given list of instructions, returning a list of instructions that can be optimized.
Compares two collections and returns the order of the elements in the two collections.The order of
The service method is invoked when a servlet request is received.This method is invoked by the
Do the start of the tag.This method is called by the start of the tag.
Render the HTML for a button.
Resets the state of this model to its initial state.
This method initialises the instance of this class.This method must be called before any other
Returns the value associated with the given key.
Returns the index of the given key in the map, or -1 if the key
Sets the value at the given index in this vector to the given value.
Removes the value associated with the specified key from the map.
Removes the element at the specified index from the list.
Returns true if the given property is defined in this bean.
Sets the value of the specified property in the callee object.
Returns the value of the specified property of the specified callee object.
Returns true if the given primitive type is assignable from the given wrapper type.
This method is called by the constructor to initialize the object.This method is called by the
Returns the decision tree for the given state.If the tree does not contain any decision tree
Initialize the lookup table for the given decision tree node.This method is used to initialize the
Returns a list of the variables that are unified by the terms in the term query.
Returns true if left and right are the same, false if left and right are the same
Compiles the given clause into a SQL statement.The statement will be executed in the context of
Find the maximum number of arguments in the given clause.
This method allocates the registers needed for a permanent query.This method is used to allocate
Gather position and occurrence information for a given term clause.
Displays the compiled predicate.
Displays a compiled query.
Returns a string from the given byte buffer, with the given length.
Get the current value of this field as a String.
Sets the value of this attribute to the value of the given string.
Read a single term from the content handler and add it to the content handler.
Checks if the given class exists and is loadable.
Checks if the given class is a sub-type of the given parent class.
Checks if the given parent is a sub-type of the given child.
Checks if the given class is a sub-type of the given class.
Returns the class with the given fully qualified name.If the class with the given name is
Creates a new instance of the given class.
Creates a new instance of the given constructor with the given arguments.
Calls a method on the given object, throwing an exception if the method does not exist.
Calls a method on the given object using the given method name and parameters.
Call a static method with the given parameters.
Gets the constructor for the given class and argument types.
Returns a set of all the setters that match the given property name.
Returns a transactional queue that wraps the given queue in a thread-local queue.
Gets a queue that will requeue items from the given queue.The queue will be re
Gets the Java type from the given object.
Reset the state of the manager.This method should be called before the manager is destroyed.
Creates a type with the specified name and minimum and maximum bounds.
Adds a timezone name to the list of supported tz names for the end-point.
Adds a supported tz to the database.
Add a dimension to the list of tables and dimension names.
Returns a set of free variables for which the given query is free.
Returns a set of variables that are free, but are non-anonymous.
Compares two nodes to see if they are less than or equal, if they are equal.
Writes the given object to the given output file.
Read the contents of an InputStream as a String.
Creates a heuristic search node for the given state.
Generate a new trace indent.
Returns true if this term is the last term in the argument position of the body of the
Choose the best property to decide from the output property and the list of input properties.
Returns a functor with the given name and arguments.
Returns a new Variable instance with the given name.The name is interned if necessary.
Executes the given ActionForm using the given ActionMapping and the given ActionErrors.
Returns the element at the given index in the list.
Set the paint object to be used as a texture for rendering.
Override paint immediately to perform double-buffering on the repaint manager if double-buffering
Creates a buffered image of the given width and height, with the given image type.
Creates a binary image with the specified width and height, using the given pixel bits.
Creates an image of the specified width and height using the specified pixel bits.The returned image
Set the queue search algorithm to use.
Main entry point for the prolog-parser.java script.
Returns a clause representing the expression.This clause can be used as a part of an expression
Parses a list of terms and returns them as a list of terms.
Function functor = functor|function|function|function|function|functor
Consumes the token and returns the name of the variable, or null if it is not
Parse an Integer literal from the source code and return it as a TermIntLiteral object.
Parses a floating-point literal, and returns it as a Double.
Consumes a string literal and returns a TermString literal.
Reads the next directive and returns it's state.Returns null if there is no directive.
This method interns an operator with the given name, priority, and associativity.
Initializes the built-ins.
Consumes the next token from the source code.
Peeks the token source until the next token of the given kind and returns true if the
This method binds the server to the server and registers the server with the server-to-
This method rolls back the state of this object to the previous state.This method is
Collects the elements from the iterator into the target collection.
Convert seconds since 01-01-01-01-01 to milliseconds.
Converts a tick ticks to a number of years in the range [0,1970).
Returns the ticks given in milliseconds, with the given hours set to the given value.
Returns ticks in milliseconds with minutes set to the given number of minutes.
Returns the specified ticks with the specified seconds set to the specified value.
Creates a copy of ticks with the year set to the given value.
Returns a copy of the given ticks with the month set to the given month in the future
Returns the given ticks with the given date set to the given value.
Given a year number, returns the starting time of the year in nanoseconds since the epoch
Reads a block of bytes from the input stream.
Returns the entry for the given key, or null if there is no such entry.
This method returns the CuckooEntry for the given entry, or null if the entry
Rehashes the hash table, if any, and rehashes the hash table if necessary.
Called when an action has been performed.
Sets whether the next item in the queue is available, or if not, the next item
Sets the state of prevAvailable to true if prevAvailable is true or false if prevAvailable
Sets the state of the progress bar to "DONE", depending on whether the progress bar is
Create a new WAM instance using the given symbol table.
Returns an iterator over the set of variables in this scope.
Computes the expected I-probability for the given array of probabilities.The expected I-probability
Returns the probability distribution for the given array of counts.The array contains the probabilities of the
Sets the year, month, and day fields from the given ticks.
This method is called by subclasses to perform the actual action.This method will be invoked by
Creates a new URL from the given URL spec.
Get the information about the current request.This method is used to get information about the request
Returns the headers as a HTML string.
Returns the cookie names of the current page context.This method returns an empty string if no
Get the values of all the parameters in this page, as a HTML string.
Get the current request scope as an HTML string.
Returns the current page scope as a HTML string.
Returns the HTML to display in the session scope.
Get the current application scope as a HTML string.
Get the user principal for the logged in user.
This method is called by the start of the tag.This method is called when the start
Returns the html representation of the property name and the values in the given map as a String
Set the current work flow screen state to the specified work flow screen state.
Walks the tree starting from the given term.
Compare two SearchNodes based on their F1 and F2 values and return -1 if
Updates the registers of the WAM.
Notifies all registered listeners that have been registered for the property change events.
This method is called when we leave a clause in the tree.This method is called by
Returns true if this context is in a top-level functor.
Sets the list of arguments for this term.
Returns the fixity of this transformation, based on this transformation's associativity.
Returns true if this transformation is contained in an infix, false otherwise.
Compares the priority of this op symbol with the priority of the given object.
This method is called when a property value has changed.
Registers a new WorkFlowController with the work flow controller manager.
Gets the factory for the given class.
Creates a component factory for the given component class name.
Returns the storage cell for the given variable, or null if there is none.
Returns true if the variable is in the context of a binding, false otherwise.
Set the column attributes for the specified column.
Sets the row attributes for the specified row.
Returns the column attribute at the specified index or null if the column does not exist.
Returns the row attribute for the given index or null if the index is out of bounds.
Internal method to insert a new cell into the table at the given location.
Creates a new instance of the Type class with the given name, minimum and maximum values.
Create a new instance of the StringPatternType with the given name, max length and pattern
Returns true if the specified character sequence is a valid instance of this class, false otherwise.
Creates the initial context for the given term.
Updates all registers of the given layout and notifies the registered observers of any changes.
Returns the value of the variable in the current scope, or the name if the variable is
Find the path of the goal of the current node.
Returns a list of objects in the cache with the given block number.The returned list is
Returns the properties for the given resource name.
Sets the rate of the sound to the given value.
Reads a number of bytes from the remote file.Returns the number of bytes read.
Skips the given number of bytes from the source.
Gather the disjunctions from a list of terms and add them to the disjunctions
Reads an integer from the given byte array at the given offset.
Writes the given 32-bit integer to the given byte array at the given offset.
Writes the given 24-bit int value to the given byte array at the given offset.
Reads a 24 bit integer from the given byte array at the given offset.
Gets a short from a byte array starting at the given offset.
Writes the given 16-bit short to the given byte array at the given offset.
Returns the tree search state for the given operator, or null if this node is not a
Returns an iterator over the valid operators for this tree.
Returns the id of the object in which this record was created.
Returns the value of the field, or null if the field does not exist.
Sets the value of this attribute to the given value.
Convert a comma-separated list of strings into an array of strings.
Converts an array of strings to a list of strings with the given delimiter.
Convert a camel-case string to a camel-cased string.
List the given handlers and append them to the given string buffer.
Resolves a call-point for the given functor name.
Set the code address for the given functor name and the given offset and length.
Returns true if the given category is a sub-category of this category.
Returns the id of the object in the cache.If the id is not in the cache
Returns the value of the attribute at the specified level.
Gets the last value of the path.
Writes the object to the given output stream.This method is used to write the object's
Reads the object from the given input stream.
Computes the hamming distance from the given node to the puzzle state.
Returns the number of times the given long value is less than or equal to or less than
Add an error message for the given key to the list of errors for the user.
Writes a string to the output stream.
Classify all attributes in the given state and return a map of all the attributes.
Returns a negative number if the two objects are in the same order, or +1 if
Returns an iterator over the elements in the distributed iterator.
Returns the most significant significant digit of the value, which is represented as a 16-bit
Convert a base-256 integer to a base-256 integer using the 256 log-table
Convert the given integer to a base 10 integer using the Big Endian standard library.
Returns the corresponding int value for the given integer using base 10 for the version 3.
Returns the number of base 10 bits of the given long.
Converts the given long value to a base-10 integer in the range [0, MAX
Returns the number of characters in the given integer.
Returns the number of characters in the given 64-bit long.
Gets the number of character characters that are represented by the given long value.
Sets the instructions to be executed at the beginning of the list.
Emits the code for the given WAMMachine.This method is called by WAM
Sets the current screen to be the given work flow screen.
Evaluates the expression and returns true if the expression evaluates to true, false otherwise.
Gets the iterator for the given key and modifier.
Creates the array properties.
Set the current rate of the sound to the given Hertz.
Evaluates the expression and returns the result as a numeric type.This method returns null if the
Find all the properties for this component.This is called when the component is created.
Get the properties using the system property, or null if the system property is not set.
Get the properties from the classpath.
Gets the properties from the current working directory, and returns them as a Properties object.
Called when the traverser leaves the given functor.If the functor is not in
Gets the value of this term.
Sets the term to be bound to when this node is bound to the given term.
Creates a queue for the nodes in the tree.The queue is sorted in ascending order by
This method cleans up the underlying output stream.This method closes the output stream if it
This method appends an event to the log file.
This method initializes the connector, and starts it if it is not already started.
Initialize the printers.
Commit the transaction. This method is called by the transaction manager after it has been committed.
This method rolls back the transaction associated with this instance and removes it from the list of
Sends the given transaction operation to the transaction manager, making it write-transaction if necessary.
Add a CachedWriteOperation to the cache for the given transaction.
Acquires the global write lock for the given transaction.
This method releases the global write lock.This method should be called only when holding the global
Enlist the transaction with the session associated with the current transaction in the transaction manager.
Enter the given rule set node.
Inserts the specified element into the queue, waiting if necessary for the specified amount of time
Polls for an element from the queue, blocking if necessary if the queue is empty.
Puts an object into the queue, blocking until the queue is full.If the queue is
Returns the next element from the source.
Returns the value of the specified property as a Boolean.
Returns the value of the property with the given name as an Integer.
Returns the value of the specified property as a long, or null if the property is not
Call a mixin on this scope with the given name and arguments.
Sets the addition visitor to be used when visiting nodes that have been added in order to
Backtrack the unexamined successor count of the given node.
Retrieves the code from the buffer for the given WAM call point.
Executes the given WamQuery and returns the set of variables in the result set.
Decodes a single term from the heap, starting at the given index.This method uses the
Captures the current state of the window.This method is not thread-safe, it
Restores the state of the given object to its original state.This method must be called
Returns the value of the specified attribute for the specified class.
Sets the value of the specified attribute on the specified class.
Returns a collection of all field names for the given class.
This method is called by the mojo to execute the mojo.This method does not
Adds an element to the queue.
Create a new search node with the given state.
Returns a queue that contains the nodes in the tree.The elements are sorted in increasing order
Creates a simple term walker using a depth-first search and a default traverser.
Creates a simple walker based on the given visitor and set the goal of the walker.
Creates a term walker that walks the tree rooted at the given positional term.
Creates a walker that walks the terms in the tree starting at the givenpositional predicate
Create a term walker that traverses all terms in the tree after a post-fix search
Reads properties from an input stream.
Gets the properties from the given file.
Gets properties from the given URL.
Gets the properties from the properties file at the given pathname.
Computes the width and height of the grid based on the width and height of the model.
Initialize the font metrics.
Add a property change listener to the list of listeners to listen for changes on the properties of
Add a PropertyChangeListener to the list of PropertyChangeListeners associated with the specified property.
Remove a PropertyChangeListener from the list of listeners associated with this PropertyChangeListener.
Notify listeners that a property has changed.
Creates an instance of the type with the given name, minimum and maximum values.
Fades a group of colors to the specified target color.The group name is used to
Show the horizontal bar of the dialog.
Shows the left bar.
Show the right bar.
Sanitize radio controls in the given form.
Waits for the specified object to become available, and returns once the wait is complete.
Waits for the specified value to be set to true, or until the specified timeout occurs.
Execute the mojo.
Appends classpath elements to the given command line.
Create a new instance of type with the given name, date-only-from and date
Prints the introduction to standard out.
Initialize the console reader for the command line.
Evaluates the given sentence and executes the query if it is a query.If the sentence is
Evaluate the query and return the result, or null if the query is not found.
Gets the MultiTypeData for the given boolean.
Gets the multi type data for the given byte.
Returns the MultiTypeData for the given character.
Get the MultiTypeData for the given short.
Gets the MultiTypeData for the specified index.
Returns the MultiTypeData for the given LHS.
Get the multi-type data for the given floating point float.
Get the MultiTypeData for a given double.
Get the multi-type data for the given string.
Returns the multi-type data for the given object.
Sets the value of a named attribute in the context of this PageContextContext.
Clear the range from the specified key to the end of the range, if the key is
Expands the given key in the cache.
Internal method used to insert a character into the column and row of the table.
Returns -1 if object1 is less than path2, 0 if object2
Parses a list of operators into a term.
Get the operators matching the given fixity name, or null if there is no operator with
Looks for a symbol in the op symbol table for one of the given fixities.
Creates a new node with the given successor.If the successor node already exists, it will
Returns a string describing the errors that have been logged in the log file.
Returns the list of available options in force mode for the current user.
Returns the usage string for this command line tool.
Add the trailing properties to the properties.
Adds the options from the parsed properties to the given properties object.
Add an option to the list of options.
Checks if the argument is valid for the given command line option.If the argument is valid
Compares the iterators and returns an error message if they do not match.
Returns the list of options for the selected stemmers.
Get the options for the stemmer and the name of the stemmer and the name of
Sets the stemmer to the selected tag.
Returns the actual stemmer, or null if the stemmer is not yet defined.
Returns the stem of the given word.
Entry point for testing.
Create a new instance of Type with the given name and minimum and maximum values.
Resets the state of the manager.
Returns a human-readable description of the current trace frame.This is used for debugging.
Returns a human-readable string describing the current choice frame at the current position of the current
Call a function in the internal data structure.This method does not check the validity of the
Returns the index of the next frame in the stack, or -1 if there is no
Returns true if we should backtrack, false if we should backtrack, false otherwise.
Mark the end of the stack at the specified address as at the end of the stack.
Unwinds the trail of a pair of numbers, starting at a1, starting at
Tidy the trail by removing all the leading and trailing characters from the beginning of the trail
Returns true if the two positions are in the same order, false if they are in the
Return true if the constant at the given address has been unifyed, false otherwise.
Print the given slot in the given stack mode.
Get a random EightPuzzleState for the current EightPuzzle instance.
Returns true if the Eight Puzzle state is solvable, false otherwise.
Get the state of the puzzle for the given operator.
Returns an iterator over the operators that are valid.
Returns a pretty printed version of this board.
Swaps the given tile coordinates.
Convert a string to a list of character objects.
Converts a list of characters to a state of the Eight-Puzzle.
Convert the log record to a log4j message.
Convert the log4j level to org.apache.log4j.log4j
Requeues an element to be requeued by the queue.
Adds an element to the requeue queue, and returns the requeueselected element
Increments the size and count for the given record, and increments the size and count.
Decrement the size and count for the given record.
Signal the signalable if the old size is smaller than the threshold and the new size is
Returns the list of naming types for the given name, or null if the name is not
Returns a list of bindings for the given name.
Add a new property to the environment.
Removes the value of the specified property from the environment.
This is the main method that runs the garbage collector, if it is not already running.
literal | "literal" | "color" | "dimension" | "string"
Resolve the mixin reference and return true if the mixin reference was resolved, false otherwise.
Pushes a variable reference onto the stack.
Set the maximum height of a row.
Updates the width of a column, if the new width is smaller than the previous value.
Make a heuristic search node for this node and successor.
Executes the action form and forward the result to the action mapping.If the action mapping is
Substitutes the built-in symbols in the given term with the symbol table.
Initialise the symbol table for the given term clause.
Performs a top-level check on the terms of the given clause.
Convert a list of arguments to a string.The first argument is treated as a list of
Evaluate whether or not the second number is equal to the first number and returns true if the
Marks the thread as running.If the thread is not running, this method will wait for
Signal that the server is now in the state that it is shutting down.
Signals that this thread is being terminated.
Adds an object to the queue, if it is not already in the queue.
This function compares two nodes and returns -1 if they are equal, 0 otherwise.
Inserts a new node into the list of nodes for the given node.
Restarts the server and restarts it if it is not already running.
Returns the set of objects returned by the given search method, or an empty set if no
Returns a bag of objects based on the specified search method.
Finds all solutions and adds them to the result.
Returns the next object in the sequence, or null if no object is in the sequence.
Restores the values from the given object to the given map.If the map does not
Returns the value of the specified property of the given class, or null if the property does
Puts a new value into the map for the specified property in the specified class.
Sets the value of a property on the given class.The property value will be added to
Captures the current state of the current state of the state machine.This method is called
Removes and returns the oldest element from the queue, or null if the queue is empty.
Returns a string representation of the given modifiers.
Convert the given string to an integer.
Convert a string representation of a date into a Date object.
Checks if the given string is a valid date.
Checks if the given string is a valid time string.
Checks if the given string is a valid date time string.
Creates a token source for the given string.
Gets the token source for the given file.
Gets the token source for the given input stream.
Checks if the given WAMP instruction is a constant WAMP instruction.
Return true if the instruction is a void variable.
Check if the instruction is a non-arg instruction.
Returns an iterator over all the children of this node.
Returns the argument at the given index.
Returns an iterator over the children of this operator.
Returns a string representation of this term's arguments.
Retrieves a summary of the results of a SELECT query and returns the first row of the result
Executes a query and returns the results as a list of objects of the given class.
Execute the query and return the list of results.
Emits the given code buffer to the given machine.The code buffer is passed to the
Set the basic type for the given class.
Get the source code from the given input stream.This is useful if you want to get
Print a variable binding.
Expands the result set to a map.
Read the input stream from the input stream and process the input stream.This is a blocking
Read the XML document from the input stream, and parse it as a DOM tree.
Returns the current time, and increments the sequence counter if the new time is less than the
This method returns the current UUID. If the current UUID is different than the current one,
Updates the track information for the specified playlist.
Updates the play status of a playlist and the progress and volume of the playlist.
This method is called when a player is playing or playing the music.
Handle a resource request. If the resource is permanent, then only the resource is processed.
Submits a request for the given event to the event queue.
Fire the start request for the given EventModel.
Initializes the connection counter. This method is called when the connection is ready to be used.
Starts the connection reader thread.This method will be called every time a connection is closed.
This method is called when the server is shutting down.This method is called when the server
Reset the parser to the beginning of the input stream.
Parse packets from the XML file and process them.This method blocks until a packet is parsed
This method processes the given packet. If the packet is null, this method does nothing.
Set the cli option. If the option has a description, the description will be set.
Create a chat for the user with the specified user jid.
Changes the content manager and updates the internal state of this object.This method must be called
Resets the contents of the map to a new state.
Sets the value of a property. If the value is different from the previous value, the
Add a filter to the list of filters to be applied on this packet.This method is
Process the given request and return a list of feedbacks.
Resets all the properties to their default values.This method is intended to be used by the
Initialize the writer and start the thread to write packets.
Sends the given packet to the client.
Returns the next packet in the queue.
Opens the stream for the connection.
Returns a list of all informations.
Returns true if the given descriptor is in the list, false if it is not.
Add an event life cycle listener.
Shuts down the executor and cancels the timer if there is one.
Checks if the entry is valid for the current thread, or if the entry is deleted or
Returns null if the key is null, otherwise returns the key itself.
Returns true if x is equal to y, false if x is not equal to y.
Gets the entry for the given key.Returns null if there is no such entry.
Resizes the table to the given number of entries.
Puts all of the entries in the given map into this map.
Removes the value for the given key from the cache.
Removes the entry for the specified key from the map.
Removes the given entry from the hash map, if it is mapped to a key.
Adds a new entry to the table at the specified bucket index.
Creates a new delegate map from the given base map with the given keys and the augmentation
Encode the value as a binary XML attribute string.
Encodes the given byte array as a hex string.
Encode the given string as a Base64 string.
Encodes a portion of a byte array into a Base64-encoded string.
Iterate over a collection of items, returning the number of times each item was found.
Sets the track selector controller to be called when a track is selected.
Set the controller that will be notified when a jump is requested.
Set a controller that will be called when the playback is changed.
Sets the controller to be invoked when the volume of this volume is changed.
Broadcasts a list of playlists that can be played by the user.
Handle all command resources.
Handles the volume change.
Handles a jump event.
Handles the selection of a track.
Returns the thread cache for the given name, creating one if it doesn't exist.
Returns the request cache for the given name, creating a new one if it doesn't exist
Gets the alt field for the given field and stream id.
Returns the path of the shard for the given id.
Adapts the given object to a session.
Invokes the method with the given name with the given arguments on the given target object.
Deletes a path and all of its children from the content manager, and then deletes it.
Updates the specified object with the specified properties.If no properties are specified, the object
Set the ping interval. If the current ping interval is equal to the new ping interval,
Schedule a periodic ping server task to send ping packets to the client and send ping messages to
Add multiple options to the application.
Returns true if the given option is already in the list of options used by this parser.
Parses the command line and returns the parse exception if one occurs.
prints the help for the given app.
Parses the command line arguments and prints an error message if an exception is encountered.
This method initialises the connection to the server.This method should be called before any other
Start a TLS connection.
Returns the first handler that supports the requested compression method, or null if none.
Request stream compression.
Start the stream compression process.This method should only be called when the stream is closed.
Notifies that a connection error has occurred.
Notifies the reconnection listener that the client has re-connected to the server.
Registers an instance of the SASL service with the specified name.
Gets a list of all registered SASL implementations that have been added to the system.
Returns the output plugin behaviour for the given identifications.If the output plugin behaviour is not
Log a message and a Throwable at the INFO level.
Logs a message and stack trace if an error has occurred.
Writes a log message to the given print stream with the specified prefix, message and exception.
Creates a StartEvent request for the given Identification.
Creates a StartEvent object for the given IdentificationSource.
Notify the listeners that the given string has been written.This method is thread-safe.
Checks if the given resource is already present in the list of resources.
Returns true if there is at least one resource with the given source id, false otherwise.
Returns true if at least one of the resources in the list is included in the list.
Provide a list of ResourceModel from a list of resource ids.
Gets the value for the given key from the cache if it is not already in the cache
Returns the cache key for the given key space, column family and key.
Remove a key from the cache, if it is cached.
Puts a cached value into the cache.If the value is already in the cache, it
Returns a map from URI to file paths, where the key is URI and the value is
Includes a file or directory in the jar, if it is a directory, or if it
Includes the contents of the given jar file into the current location map.
Add a Sasl mech to the list of registered Sasl mechs
Add a list of SASL mechs.
Create the debug information for debugging purposes.
Activates the postprocessor.
Register the standard events.
Register an event listener.
Registers an event ID with the given description and key in the event properties file.
Attempts to acquire an exclusive lock on the file channel and passes it to the given consumer.
Returns true if the event can be run, false if the event is not.
Creates a new DSE session for the given DSE cluster and keyspace.
Creates a PlayerError instance for a given identification and error string.
Starts playing the player's music.
Stop the player's music and trigger a stop music event if it's playing.
Sends a command to the server to get information about the player's player.
Create a playlist request.
Create a new broadcaster playlist with the given identification provider and the given playlist.
Append the given string to the end of the URL.
Add a query parameter to the URL.
Add a query parameter with the given name and value.If the value is null, then
Adds a query parameter to the URL.
Add a query parameter to the URL.
Returns the playlist for the given event if it exists, or an empty playlist if none.
This method is called when the application launches a button that has been performed.
Check whether the startup is finished.
Return true if the given URL exists in the local file system.
This method is called when the browser button is applied to the screen.
Create an image icon.
The main entry point for the nakamura-launch-nakamura.
Set the value of this int array.The array must be the same length as the array
Export the current state of the Level as a map of key-value pairs.
Returns the value at the given index as a JSON object.
Returns the value for the given key, or a new JsonValue if the value is not
Returns the value as an integer, or the given default value if the value is null.
Get the value converted to a double or a default value if conversion is notpossible.
Returns the value as a String.
Creates a command resource for the given command and capabilities.
Verify that the given command is supported by the system.
Verify the capabilities for the given command.
Verify that the command is valid and that the capabilities are compatible with the command.
Execute a batch of statements in the current session.If the callback is not null, the
Returns a set of all subclasses of the given class.
Returns a set of all subclasses of the specified class name.
Returns a set of all classes found in the given directory or in the given location.
Searches the given directory for classes that are assignable from the given class and returns a map of
Convert this resource to a list of resources.
Returns the number of elements in the set.
Process the given Packet and add it to the result queue if the packet filter is not null
Returns the volume of the source resource of the source event if the source is a volume.
Sends a RSM message to the server and returns an error response.
Create an error response.
Checks if there is an identifiable object on the target of the given event model.
Set the value of the login enabled period field to the specified date and time value.
Decorate the given set with a synchronized set.
Set the name of this component.
Update the state of the subscription.
Returns a collection of all the groups in the roster.
Appends an rsm element to the given query element.
Parses an rsm query element and returns a new rsm object.
Creates an instance of LeavingEvent with the given identification source and optional descriptor list.
Reload the roster.
Creates a new entry in the Xmpp database.
Returns a copy of all the roster entries in this roster.
Gets the presence resource for the given user with the given resource.
Set all presences that are not available for the current user.
Notify listeners that the rosters are updated or deleted.
Sets the digest for the given connection id and password.
Generate a music resource based on the resource model and the event model.
Creates a new player request.
Returns the time passed from the list resource container, if available, else returns null.
Registers an update listener to be notified of changes in the properties assistant.The listener will be
Initialize the properties file and load the default properties if the default properties file doesn't exist.
Loads the properties from the properties file.
Parses a stream error element.
Parses the mechanisms element and returns a collection of mechanisms as a comma-separated list
Parse the compression methods of the given XML element.
Parses a PacketExtension from the given XMLPullParser and returns the PacketExtension object.
Returns the value converted to the given type, or null if the conversion is not possible.
Verify if the event is a play request from outside or a player that is a player.
Get playback state from resource.
Returns the secret key for the given subdomain.
Returns true if the given subdomain is allowed to be accessed multiple times, i.e.
Associates the specified value with the specified key in this map.
Returns the set of keys in this map.
Get the collection of values for this reference.
Purges the cache for the specified reference.
Returns the entry associated with the given key, or null if there is no such entry.
Returns the hash code for the given key and value pair.
Returns a new reference entry for the given key and value, starting at the given hash code
Returns true if the event should be handled by this indicator.If this indicator is not handled
Sets whether the player is present in the Vague.If the player is not present,
Updates the most vagues.
Delivers the given message to all the registered listeners.
Generate the script for the given class and targetMap.The script will be added to the
Initialize the output directory.
Loads a properties file from the classpath or from the classpath if the file is not found.
Write the contents of the Stable to the given file.This method returns the number of
Gets the progress from the list resource container.
Decorates a Collection with a synchronized version of the supplied collection.
Returns a list of ServiceResolver objects for each host in the specified range.
Get the current configuration, if any, and return it as a JSON object.
Gets the thread pool.
Create a stop music request.
Checks if the player is in the event model and if it is a stop music.
Get a cluster with the specified hosts and ports.The authorizationId is used to identify the
Adds a connection listener to the list of connection listeners registered with this connection manager.
Add a packet listener to the list of listeners that will be notified when a packet is received
Adds a packet listener to the list of listeners that will be notified when a packet is received
Notify all listeners that a new packet has been sent to the client.
Add a PacketInterceptor to the interceptor chain.
Notifies all registered interceptors that a packet has been received.
Convert the value of a parameter to an instance of the requested parameter type.
Called when the connection is lost.
Returns the current thread id.
Checks if the given node is valid for the given thread.
Gets the key for the given value.
Returns the value at the specified index in the current thread, or null if there is no
Returns a valid node for the given data, starting at the given index, or null if
Returns the node at the specified index in the tree, or null if there is no such
Compares two objects at the specified index with the comparators defined in the constructor.
Returns the least node in the tree starting at the given index in the given node.
Returns the node at the given index, or null if there is no such node.
Returns the next node in the subtree that is greater than or equal to the specified node.
Returns the most valid node in the tree starting from the given node starting at the given index
Returns the least-recently-valid node at the given index in the given node.
Copies a color from one node to another.
Checks if the node at the given index is a red node.
Returns true if the node at the given index is black, false otherwise.
Returns the grand parent of the given node at the given index.
Returns the parent of the node at the given index or null if the node is null.
Returns the right child of the node at the specified index.
Returns the left child of the given node, or null if the node is null.
Rotate the left child of the node at the given index.
Rotates the right child of the node at the given index in the tree.
Perform red black insertion of the given node at the given index.
Performs a red-black deletion of the given node in the given red-black tree.
Checks that the given object is non-null and is not comparable.
Recursive function to insert a new value into the tree under the specified thread id.
Returns true if the object with the specified key is in the cache, false if not.
Checks if the value is contained in the value store for the current thread.If the value
Gets the value associated with the given key from the cache.
Removes the value associated with the specified key from the cache.
Removes all entries from this map.
Copies entries from this map to the given new map.
Deletes all entries that have expired in the cache.
Causes the cache to be re-used if the cache has been re-used.
This method is called when the component is activated.This method is called when the component is
Get the player details for the playlist with the given name.
Creates a default roster store with the given base directory.If the roster store is
Creates a default roster store from the specified base directory.
Scans for the given address and returns the addresses in the range.If addr is null,
Convert an IPv4 address into an IPv4 address within a subnet of the specified bits.
Export the metadata as a hash map.The key is the name, the value is the
Import track information from a hash map.
Adds all classes from the given set to the class map.
Executes the specified application and returns the number of executed scripts.
Print the list of classes and their names.
Prints the usage of the application and all its sub-modules to the standard output.
Main method for running the Sonolog script.
Create a mute event.
Creates a mute event for the given identification.
Returns the schema with the given name, or null if the schema doesn't exist.
Write the given lines to the given file.If the file already exists, it is deleted
Checks if the manifest file is in the exec.jar file.
Adds an option to the application.
Returns a sorted list of all fields in the Galaxy.The order of fields is
Returns the field with the given name, or null if the field does not exist.
Returns the package name for the given jar entry.
Map the content of the given map to the key-value pairs of this map.
Creates an event listener for the given descriptor, description, and descriptorId.
Sets the state of the iterator.
Iterate over the given collection and return the first non-null result.
Do the actual iteration of the given iterator, and return the result of the iteration.
Gets the track information for the given event model.
Exports the state of this buffer as a hash map.The key is the name of the
Imports the specified resource and returns the progress object.
Create a buffered image of the error lines.
Gets an image from the given URL.
Get a JSON object from the given URL.
Reverses the keys in the source map to the values in the target map.
Returns the result of the multiplication of the left and the right-hand side of the function
Starts the background thread. This method is called when the background thread of the background thread is
Return this object to the pool.
Creates an End-of-Event request for the given identification source.
Gets the current track in the queue, or null if there is no track in the queue
Update a track in the playlist.
Shuffle the playlist.
Verifies if the capabilities are valid for the playback.
Export the current state of the player's data.
Escape a string so that it can be used as an XML string.
This method is called when a challenge has been received from the server.
Returns the JSON representation of this object as a byte array.
This method is run in a thread-safe manner.This method will be run in a
Handles the given event. This method checks if there is a content index handler for the topic
Join all the queues in the queue manager.
Sets the value of a property in the context of this bean.
Removes the property for the given key.
Adds a principal to the list of principals.
Removes the specified principal from the list of principals.
This method is called when the root window is closed.
This method is called when the user enters the presence of the agent.
This method is called by the event manager when an event is fired.This method determines if
Returns true if the resource is permanent, false otherwise.
Set the name of the user in the roster.
Returns true if the map contains the specified key, false if it is not.
Checks if the given value is in the list of entries, or if the value is equal
Puts the value under the specified key in the hash map.
Removes all entries from the hash map.
Calculates the hash code for the given key.
Returns true if key1 and key2 are equal, false otherwise.
Checks if two values are equal.
Ensure that the capacity is at least as large as possible to hold at least the specified capacity
Calculates a new capacity for the given proposed capacity.If the proposed capacity exceeds the maximum capacity
Returns an Iterator over the entries of this Map.EntrySet.
Load a column family from an input stream.
This method initializes the context for the add-on operation.
Notifies all connection listeners that the reconnection has failed.
Notifies the connection listeners that a connection has beenreconnected in the given number of seconds