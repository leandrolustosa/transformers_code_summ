Performs a fast path ordering.
Wraps an observable.
Returns an observable that is sorted by the given comparator.
Observes a connectable observable using the given scheduler.
Creates a new unicast processor with the specified capacity hint.
Creates a new unicast processor with the specified capacity hint.
Try to convert a publisher to a scalar publisher.
Convert a scalar value to a flowable.
Resets all handlers to default values.
Create an Maybe from a completable source.
Creates a new Maybe from a single source.
Executes the given predicate retrying at the specified number of times.
Throws a NullPointerException if the object is null.
Returns the identity function.
Creates a just-value callable for the given value.
Creates a just-value function.
Casts a class to a function.
Creates a new unicast subject.
Creates a unicast subject with the specified capacity hint.
Creates a unicast subject with the specified capacity hint.
Creates a new unicast subject.
Waits for the current thread to complete.
Waits for the result to complete and returns the error.
Blocks until the thread is interrupted or the timeout expires.
Drains the queue until the max value is reached.
Requests a prefetch value for a subscription.
Completes the operation.
Returns the value of the notification.
Returns the error of the notification.
Validates the upstream and the next disposable.
Atomically sets the value of the upstream atomic reference once.
Validates a subscription.
Atomically sets a subscription once.
Increases the cap of two long values.
Multiply two long values.
Adds the specified number of elements to the requested long.
Converts the given exception to a null pointer exception.
Adds the specified object to the end of the list.
Shuts down the pool.
Creates a new scheduled executor service.
Sets the subscription.
Emits a loop.
Wraps the given exception and wraps it in a runtime exception.
Flattens a throwable into a list of Throwables.
Throws the given exception if it is an exception.
Clears all resources.
Returns the number of resources in this set.
Try to convert an observable source to a scalar.
Converts an observable value into a scalar value using the given mapper.
Accepts the given subscriber.
Accepts an observer.
Starts the stream.
Starts the unbounded queue.
Offers a new item to the queue.
Returns the disposable object for this resource.
Completes this observer with the given value.
Called when an error occurs.
Completes the stream.
Waits for the given number of items to complete.
Requests the specified number of items from the upstream.
Adds a subscriber to the list of subscribers.
Removes a subscriber from the list of subscribers.
Observes a flowable.
Parses the annotations of a service method.
Sets the delay.
Creates an error response.
Calculates the delay for a given time unit.
Creates the sample data.
Returns the value of the given HTTP method.
Performs a LDAP search for the specified user.
Encodes the given password.
Returns true if the given password matches the given raw password.
Perform version checks.
Returns true if the specified Spring security version should be disabled, false otherwise.
Returns the version of the spring security core.
Configures an attribute exchange.
Returns an OAuth2 client.
Returns an OAuth2 resource server configured for OAuth2.
Compares the given attribute name with the given value.
Retrieves an entry from a directory.
Search for multiple attribute values.
Search for a single entry in a directory.
Builds a new search controls object from the given controls object.
Lookup primary keys.
Builds a pre-authenticated granted authorities web authentication details.
Creates the embedded server bean definition.
Create the servlet api filter.
Create the jaas api filter.
Create a type resolver builder that whitelists default typing.
Inserts the spring security filter chain.
Get a persistent remember me token for a series.
Returns a list of granted authority attributes.
Creates a new cipher with the specified algorithm.
Override afterPropertiesSet in order to set the properties.
Performs the actual authentication.
Returns true if the principal has changed, false otherwise.
Authenticates the request.
Checks the content length.
Maps a collection of authorities to a set of authorities.
Sets the login processing URL.
Updates the authentication defaults.
Updates the access defaults.
Maps a password value to a string.
Extract remember me cookie.
Encodes the cookie tokens.
Sets the cookie for the given tokens.
Resolves an argument to the reactive security context.
Get the query string from the request.
Gets the service port from the service url.
Returns the principal of the current user.
Invalidates the session and clears the context.
Authenticates the given authentication.
Sets the context environment properties.
Returns the full URL to redirect to.
Render the secured ui suffix.
Initializes the user details service.
Gets the user details service.
Adds the parameters for the pkce algorithm.
Checks if the service ticket request requires authentication.
Service ticket request.
Proxy ticket request.
Returns true if the user is authenticated.
Checks if the proxy receptor matcher matches the request.
Creates a new MethodSecurityExpressionRoot.
Gets the cached jwk set.
Encodes the given value using UTF-8.
Returns the set of granted authorities based on the current user.
Load user details by assertion.
Gets the pre authenticated principal.
Concatenates two byte arrays into one.
Returns a sub-array of the specified array.
Returns the list of granted authorities for the given attributes.
Pre-process a map of granted authority.
Gets the granted authority collection.
Adds the granted authority collection to the given collection.
Gets the pre authenticated principal.
Returns the shared object for the given type.
Builds the https redirect URL for the given request.
Invokes the interceptor.
Checks if the given string is a valid role.
Returns an array of roles that have any of the given roles.
On login success.
Tries to switch to a new user.
Attempts to exit the authentication process.
Sets the redirect URL for the exit user.
Display public index.
Filter spring security filter chain.
Decodes a JWT token.
Authorizes this filter using the given access expression.
Checks if the user is allowed to access the URL.
Convert the JWT to a collection of granted authority.
Generates a new CSRF token.
Display admin page.
Displays the add permission page for a contact.
Adds a permission to a contact.
Gets the role with the default prefix.
Creates a UserDetailsResourceFactoryBean from a string.
Returns the values of the attribute with the given name.
Returns the value of the first attribute with the given name.
Encodes the given string into a byte array.
Decodes the given byte array into a string.
Looks up the parameter names for the given type.
Adds a new contact.
Returns a collection of config attributes for the given method and target class.
Adds a secure method to the map.
Returns a collection of all config attributes.
Checks if the given method name matches the given mapped name.
Returns a configurer for any request.
Handle bind exception.
Returns a random contact.
Removes all authentication attributes from the session.
Returns the field with the given name from the given class.
Creates the service URL.
Create redirect url.
Extracts the prefix from the passed string.
Attempts to commence the authentication process.
Checks the stack of filters.
Returns an array of all registered throwable types.
Extracts the cause from the given throwable.
Register an access manager.
Converts a collection of user authorities to a set of Strings.
Compares two byte arrays for equality.
Sets the default failure url.
Sets the function that resolves hidden inputs.
Builds the request URL.
Checks if the given URL is an absolute URL.
Creates a list of attributes for the given identifier.
Convert a serializable identifier to a serializable identifier.
Creates the entries for the given acl.
Creates an object identity.
Updates the object identity of the given ACL.
Saves the given request.
Creates a new matcher for the given path matchers.
Returns a server web exchange matcher that matches any exchange.
Creates a new TextEncryptor using the specified password and salt.
Creates a text encryptor using the specified password and salt.
Create a text encryptor for queryable text.
Writes the headers to the response.
Determines the target URL.
Determine the target URL.
Sets the target url parameter.
Gets directory with immediate parent populated.
Builds a distinguished name from the given username.
Creates the shared objects.
Configure jaas using a loop.
Returns the current date.
Parses a date.
Updates the cache with the given key and value.
Set authentication details.
Returns the security name for the given subject.
Get web sphere groups.
Builds a distinguished name for a group.
Checks if the allowed sessions have exceeded the maximum allowed sessions.
Copy details from one authentication token to another.
Returns the list of filters that match the request.
Returns a list of all filters for the specified URL.
Returns the application context for the given page context.
Gets the full distinguished name.
Sets the session attributes.
Creates a basic authentication scheme.
Add a list of filters.
Adds a filter to the rest assured.
Creates a basic authentication scheme.
Creates a new authentication scheme.
Creates an authentication scheme form.
Creates a proxy for the given URI.
Prints the response body.
Redirect rest assured config.
Sets the default query parameter charset.
Sets the default object mapper type.
Creates a new JAXB object mapper factory.
Creates a new Rest assured mock mvc config.
Creates a new rest assured mock mvc config with the given session configuration.
Creates a new Rest assured mock mvc config object.
Creates a new Rest assured mock mvc config.
Creates a new Rest assuredMockMvcConfig with the given XML configuration.
Returns a new REST assured mock mvc config with the given encoder configuration.
Sets the header config.
Creates a new REST assured mock mvc config with the given async config.
Creates a mock mvc config.
Creates a new Rest assured MockMvcConfig with the given MultiPartConfig.
Creates a new mock mvc config object.
Creates a new Rest assuredMockMvcConfig with the given matcher configuration.
Allow all hostnames to be used.
Declare namespaces.
Create a new XmlPathConfig with the given prefix and namespace URI.
Sends a request to the server.
Sets the request headers.
Sets the default proxy.
Sets the name of the control.
Adds a header with the given name and value.
Configure basic authentication.
Configures the ntlm authentication scope.
Creates a new HttpHeaders with the specified header and additional headers.
Resets the state of the MockMvcFactory.
Sets the value of a header.
Build the Rest assured response.
Matches a cookie with the given value matcher.
Matches a cookie with the given comment matcher.
Sets the expiry date matcher.
Sets the domain matcher.
Matches a cookie path with the given matcher.
Returns a detailed cookie matcher that matches the given secured matcher.
Matches a CookieMatcher that matches the given HTTPOnly matcher.
Sets the version matcher.
Sets the maximum age matcher.
Expects a header with the given name and value matcher.
Expect a header.
Expect a cookie.
Returns a copy of this proxy specification with the specified host.
Create a new JsonPathConfig with the given number return type.
Sets the default parser type.
Returns a new LogConfig instance with the default print stream.
Enable logging of request and response if validation fails.
Creates a new http request.
Sets the default boundary.
Adds an attribute to the request specification.
Add a header to the request specification.
Adds a multi part to the request specification.
Add result handlers.
Sets a new request parameter.
Creates a new HttpClientConfig with the given HTTP client params.
Returns a new HttpClientConfig with the specified HttpClientFactory.
Sets the HTTP multipart mode.
Returns the value of the given path.
Returns the integer value for the given path.
Returns the byte at the given path.
Returns the short value for the given path.
Returns the float value for the given path.
Gets the double value for the given path.
Returns the long value for the given path.
Get a list of objects from the path.
Returns the map for the given path.
Get object from path.
Sets the body of the request.
Adds a cookie to the request specification.
Adds a parameter to the request specification.
Adds a parameter to the request specification.
Sets the update strategy for the form parameters.
Creates a response logging filter that logs responses to the given print stream if the matcher returns true.
Creates a list of cookies for the given cookie.
Clean up the backing map for the given keys and sources.
Index the bindings for this level.
Get a binding or throw an exception.
Convert a constant string binding.
Cleans up the dependencies of the given binding.
Removes a JIT binding from the list of failed JIT bindings.
Returns the internal dependencies of the given binding.
Creates an uninitialized binding for the given key.
Returns an array of all parameters from the given parameter injectors.
Binds the given injector to the state.
Binds a logger to the given injector.
Checks if the given member has misplaced binding annotations.
Returns true if the two methods override.
Initializes the delegate.
The provider type.
Resolves all the types in the given array.
Canonicalizes a type literal for a key.
Prepare the built-in converters.
Canonicalizes the given class loader.
Checks if the given class loader has the same version of cglib.
Returns true if the given member is a publicly-callable.
Fixes the annotations of the given key.
Requests an initializable injection.
Validates all pending injections.
Creates a new instance of this class.
Creates a scope for the given key.
Creates an injectable instance of the given scoping.
Normalizes the given path.
Generates an annotation for the given type.
Returns true if the given annotation is retained at runtime.
Finds a scope annotation.
Returns the key for the given type and member.
Returns the name of the given key.
Initializes the delegate provider.
Adds a direct type binding to the given binder.
Returns the constructor injector for the given injection point.
Returns true if the given interceptor class has a scope annotation.
New real map binder.
Returns the key for a new value.
Provisions a new instance of the given class.
Replaces the source strings with the corresponding errors.
Returns the module for the given module.
Returns a collection of assisted methods.
Checks if the given type is not specified.
Checks if the given constructor has parameters matching the given parameters.
Returns the dependencies of the given ctor point and implementation.
Removes the assisted dependencies from the given dependencies.
Checks if the dependency set is valid for optimized assisted inject.
Get the binding from the new injector.
Invokes the method on the proxy.
Returns a string representation of the error message for the given key, using the given injector.
Creates a new real-set binder.
Returns the key for a new item.
Find the next filter matching the request.
Returns true if the given constructor has at least one inject annotation.
Gets the internal constructor.
Returns an immutable set of internal dependencies.
Creates a module instance for the given module using the given scanner.
Returns the annotation for the given method.
Returns the line number of the given member.
Initializes the injector with the given errors.
Validates that the given object is valid and canonicalizes the value.
Returns a copy of the current state of the model.
Creates the members injector for the given type.
Returns a list of single member injectors for the given set of errors.
Returns a new Key instance for the given type and annotation strategy.
Creates an annotation strategy for the given annotation.
Creates an annotation strategy for the given annotation type.
Prunes the stacktrace from the given throwable.
Returns the binding source.
Creates a new message with the specified format and arguments.
Creates a new message with the specified message format and arguments.
Creates a new message with the specified message format and arguments.
Converts the given object to an object of the correct type.
Returns true if the given class should be skipped.
Get the source object for the given module class names.
Main entry point for the manager.
Pushes a dependency onto the stack.
Pushes a new state onto the stack.
Creates an initializable for the given instance.
Provisions a dependency.
Called when a connection event is received from the server.
Adds a connection event processor.
Gets the result of a future task.
Causes the given throwable to be wrapped in a runtime exception.
Registers a remoting processor for a command code.
Registers a default remoting processor.
Returns the processor for the given command code.
Try to get the URL from the cache.
Decodes the protocol code.
Gets all connections.
Scans the connection pools.
Returns a connection to the given URL if it does not already exist.
Creates the connection and heal if needed.
Remove a connection pool from the pool.
Heals the connection pool if needed.
Create a connection from a connection pool.
Closes a connection to the given address.
Called when the connection is closed.
Closes the connection.
Sets an attribute if it is absent.
Registers a user processor.
Registers a multi-interest user processor.
Dispatches a command to the user processor.
Deserializes a request command.
Pre-process a remoting request command.
Logs a request timeout.
Logs a request command in debug mode.
Processes the given message with the given executor.
Writes the command to the remote server and flushes it.
Convert a BitSet to a byte.
Convert an integer to a BitSet.
Adds a new reconnect task.
Converts a request to a remoting command.
Filters a list of connections.
Close fresh select connections.
Get a system property boolean.
Logs a message at the INFO level.
Is request timeout.
Returns the user processor for the given class name.
Returns a random connection from a list of connections.
Returns the value associated with the given key.
Returns the value of the property with the given key.
Resolves a response object.
Converts a RpcResponseCommand to a response object.
Converts a RpcResponseCommand to a throwable.
Detail error message.
Creates a server exception from the given throwable.
Print connection trace log.
Creates a new EventLoopGroup.
Parses the remote address of a channel.
Parses the local address of a channel.
Parses the remote IP address.
Parses the remote host name from the given channel.
Parses the local IP address of a channel.
Parses the remote port from the given channel.
Parses the local port from the given channel.
Parses the given socket address to the host IP address.
Adds a connection to the pool.
Remove and try to close a connection.
Registers a custom serializer for a class.
Returns the custom serializer for the given class name.
Registers a custom serializer for a command code.
Get custom serializer for command code.
Returns true if the given remote address is connected.
Initializes the write buffer water mark option.
Returns a FrameDataImpl1 for the given opcode.
Sends a batch message to the given socket.
Sets the code.
Validates that the payload is UTF-8.
Updates the payload.
Checks if the handshake state contains the requested protocol.
Translates a single frame check length limit.
Translate a single frame check packet size to a single frame check packet size.
Generate the final key.
Process a frame in continuous mode.
Process a binary frame.
Logs a runtime exception.
Process the frame text.
Process a frame is fin.
Process a frame that is not fin.
Process a close frame.
Checks if the buffer size exceeds the limit.
Gets the payload from the byte buffer list.
Returns the total number of bytes in the list.
Translates a HandshakeHttpServer into a HandshakeBuilder.
Translates a handshake http client to a handshake client.
Decodes the given socket buffer.
Close connection due to wrong handshake.
Closes the connection due to internal server error.
Generate the http response due to an error.
Sends a message to the client.
Resets the connection to the initial state.
Starts the connect read thread.
Returns the port of the web socket.
Sends a handshake to the server.
Sets the connection lost timeout.
Stops the connection lost timer.
Starts the connection lost timer.
Restart connection lost timer.
Executes the connection lost detection.
Cancels the connection lost timer.
On websocket handshake received as server.
Sends a ping frame to the websocket.
Stops the connection.
Returns the port of the server.
This method is used to perform additional read.
Accepts a new selection key.
Reads data from the server.
Sends a read request to the server.
Setup the selector and server thread.
Do ensure single thread.
Shuts down the server.
Returns the socket for the given connection.
Broadcasts the given data to the given clients.
Broadcasts the given text to the given clients.
Broadcasts the given data to all the clients.
Fills a map of frames for a given draft.
Transfers a byte buffer to another byte buffer.
Starts all the persistence units.
Returns the entity manager for the given name.
Adds a transaction to this entity manager.
Convert args to scala buffer.
Wrap args to list if needed.
Returns the message for the given key.
Get a message for a list of key-value pairs.
Checks if the given key is defined at the given language.
Provide the preferred messages for the given messages.
Returns the messages that are preferred for the given request.
Sets the language of the given result.
Binds the given modules to the delegate.
Returns the bindings for the given modules.
Bind the given bindings to this guiceable.
Creates a new instance of this builder with the specified modules overrides.
Defines the overrides for the given modules.
Defines the overrides for the given bindings.
Disable the given modules.
Executes the request and returns the result.
Returns the existing file for the given path.
Returns an in binding for the given scope.
Creates a tuple from two tuples.
Creates a tuple with 5 elements.
Converts the given execution context to an executor.
Creates a new PersistenceUnit with the given name and unit name.
Creates a new JPAUnit with the given parameters.
Creates a new DTO from the given map of persistence units.
Creates a flow that executes an ECMA script.
Creates a flow from a JSON node.
Adds a constraint validator for the given key.
Creates a new instance of the given key.
Find a method by name and parameter types.
Handles a client error.
Handles a bad request.
Handles a forbidden request.
On not found.
Handles a server error.
Logs a server error.
Converts a Throwable to a useful exception.
On dev server error.
On prod server error.
Build doc handler from resources.
Creates a DocHandler from a directory.
Builds a DocHandler from a directory and a jar file.
Builds documentation handler from directory and jar.
Creates a DocHandler from a jar file.
Consume data from the data stream.
Creates a new HttpEntity from the given content.
Creates a new HttpEntity from the given string.
Creates a chunked HTTP entity from the given data.
Creates a new status object with the given status code and content.
Sends a status message.
Creates a new result with the given status code and content.
Sends an input stream to the given status code.
Sets the status of a file.
Finds a user by its id.
Returns the preferred language for the given candidates.
Returns a unique call to the server.
Returns a new call with the specified fragment.
Returns the absolute URL for the given request.
Returns the web socket URL for the given request.
Creates a function that executes the given runnable on the given connection.
Creates an abstract function that wraps the given Callable.
Creates a new server for the given mode and port.
Convert an object to a JsonNode.
Converts a JSON node into an object of the specified class.
Parses a JSON string into a JsonNode.
Parses a JSON node from an input stream.
Returns the relative path between startPath and targetPath.
Returns the canonical form of the given URL.
Returns a list of all displayable constraints.
Convert a constraint descriptor to a list of displayable constraints.
Waits for the given completion stage to finish.
Parses a cron expression.
Returns the next interval in the given date.
Creates a new ws client.
Returns a builder for the guice application.
Displays the todo page for the given request.
Adds a new session to the session.
Adds a flash value to the flash.
Returns the qualified name of the given instance.
Returns the qualified name of the binding key for the given annotation.
Converts the underlying binding to the specified implementation.
Binds the underlying binding to the given provider.
Converts the underlying supplier to the given instance.
Convert the binding key to a Java binding.
Returns the binding for the given provider.
Returns the available languages for the given application.
Returns the preferred language for the given language list.
Creates a simple evolutions reader from a map of evolutions.
Returns a reader for the default evolutions.
Cleans up the evolutions for a database.
Creates a new builder with the given configuration loader.
Creates a new guice application builder with the given module loader.
Creates a new guice application with the given modules.
Loads the application with the given modules.
Loads the application with the given modules.
Loads the guice application with the given bindings.
Creates a new guice application builder.
Encodes the given cookie.
Returns the first entity manager in the stack.
Gets the current entity manager stack.
Push or pop an entity manager onto the stack.
bypasses the given flow by applying the given splitter function.
Creates a new flow by bypassing the given flow with the given merge strategy.
Convert error arguments to a list of errors.
Fills the form with the given value.
Returns a list of validation errors.
Returns a JSON representation of the errors for the given language.
Returns the value associated with the given key.
Creates a new dynamic form with the given value.
Parses the given text into an object of the given class.
Parses the given text into an object of the given field.
Prints the given object to a string.
Prints the given field to the given string.
Prints the given object to a string.
Register optional formatters.
Register a formatter for the given class.
Encodes a cookie.
Returns a list of nodes matching the given path.
Convert a java.util.List to a Sequence.
Converts an array of primitives to a Sequence.
Returns an immutable sequence containing the elements of the given array.
Creates a new WebSocket acceptor for the given class.
Accept or result flow.
Get the cost of a primitive promotion.
Returns the total transformation cost of the given executable.
Calculates the cost of an object transformation.
Returns the messages for the given key.
Returns the messages for the specified keys.
Creates a new database using the given driver, url and configuration.
Creates a new parallel sorter with the given arrays.
Sorts the elements in the specified range using the specified comparator.
Sorts the elements in the specified range using the specified comparator.
Invokes the F1 method.
Loads the argument at the given index.
Emit a field instruction.
Jump to zero or null.
Unbox or zero.
Process an array.
Generates code to compare two null labels.
Resolve all the bridged classes.
Filter the constructors of a class.
Sets the superclass of this object.
Generates code to get a field.
Adds the given method to the list of exceptions.
Returns the cardinality of this set.
Sets the naming policy.
Finds all methods in the given array of names and descriptors.
Resolves the given child path.
Reads a string from the given path.
Sets the host of the HTTP request.
Creates a new HTTP request with the specified method and destination.
Creates a new HTTP request to connect to the specified destination.
Create a GET request.
Create a POST request.
Create a HTTP PUT request.
Creates a HTTP PATCH request.
Creates a DELETE request.
Create a HEAD request.
Creates a new Request configured to send HTTP TRACE requests to the specified destination.
Creates a new request with options set to the given destination.
Set the path to the request.
Add cookies to the request.
Add a query parameter to the request.
Add query map.
Set the query string.
Returns the query string.
Returns the host URL.
Sets the basic authentication header.
Set the host header.
Returns a buffer for the request.
Removes the specified range from the first handler.
Gets the exception table length.
Collect all action interceptors.
Collects all the action filters.
Collects all action results.
Collects all action runtimes.
Set simple property.
Returns the value of the named property.
Extracts the reference to the given property name.
Returns a writer that can be used to write to the output.
Sets a reference to an object.
Returns the object reference for the given name.
Looks up an object by its name.
Returns the table descriptor for the given table reference.
Find table descriptor by column ref.
Returns the alias for a table reference.
Register a table reference.
Looks up the entity descriptor for the given table reference.
Registers a new hint.
Serializes the given value to the given JSON context.
Inject attributes.
Inject parameters.
Inject uploaded files.
Convert property name to column name.
Converts a column name to a property name.
Apply the given column name to the given column name.
Stores the value at the given index.
Prepare get value.
Returns all wrappers.
Resolves the given wrapper class.
Creates a wrapper for the given class.
Converts a path to a system path.
Gets the path from a file.
Splits the given filename into an array of prefixes and extensions.
Returns the relative path of the target path relative to the given base path.
Registers a new madvoc component.
Adds an action config to the web app.
Starts the web app.
This method registers the required components.
Excludes a set of jars.
Include jars.
Include rules entries.
Exclude rules entries.
Scans a jar file for classes.
Scan class path.
Returns the bytecode signature of the given class.
Scans the given paths.
Starts the scan.
Create a new transaction.
Returns the default or scope for the given class.
Gets or init scope.
Creates a new madvoc scope with the given scope type and consumer.
Prepares a new CSRF token.
Ensures that the given token set size is within the maximum allowed range.
Checks if the given value is a valid CSRF token.
Creates a copy of the given object.
Creates a copy of the bean util.
Visit a property.
Initializes the table reference.
Resolves the scope for the given type.
Register a petite bean.
Register a bean definition.
Remove a bean from the registry.
Resolves the bean names for the given type.
Registers a ctor injection point for the given bean.
Registers a new property injection point.
Register a new petite set injection point.
Register a method injection point for a bean.
Registers the init methods for the given bean.
Registers the destroy methods for the given bean.
Register a new petite provider.
Register a provider for a static method.
Iterate over all bean types of the given type.
Defines the parameters in the given map.
Intercepts an action request.
Returns the java version of the given version.
Makes the given visitor visit an int value.
Checks that the argument index is valid.
Returns the name of the advice field.
Gets the advice method name.
Load special method arguments.
Load static method arguments.
Load method arguments.
Loads a method argument.
Store a method argument.
Prepares the return value for the given method.
Create method signatures key.
Makes the given visitor visit the given component type.
Stores the given component into an array.
Extracts the encoding from the given content type.
Returns true if the given flags are empty.
Resolves the bearer token from the Authorization header.
Require authentication.
Prepare download response.
Prepares the response.
Returns all cookies with the given name in the given request.
Reads the request body from the request reader.
Reads the request body from the stream.
Stores the path of the given page context.
Store a context path variable in the servlet context.
Returns true if the parameter with the given name is present in the request.
Prepare parameters.
Copies all parameters from the servlet request to the attributes.
Invokes the given body.
Render the given body as a char array.
Renders the given body to a String.
Invoke all init methods in the bean definition.
Call all destroy methods on the bean definition.
Creates a new bean instance.
Inject parameters.
Rewrite action path.
Add a header.
Add a new props entry.
Put base property.
Associates the specified value with the specified profile key.
Returns the profile property.
Resolve the macros for the given value.
Extracts the profiles from the target map.
Converts a byte array to a word.
Hashes a password.
Hashes a plaintext using the SHA-256 algorithm.
Copies all bytes from this input stream to the given output stream.
Copy max bytes from the input stream.
Parses an action definition.
Resolve action config.
Detects and registers the action path alias.
Read action interceptors.
Read action filters.
Read package action path.
Read method action path.
Parses the method alias.
Creates an action runtime.
This method is called before the response is commited.
Returns the advice for the given target class.
Inject target into proxy.
Visits an annotation.
Resolves the real name for the given JSON name.
Resolves a JSON name.
Looks up the type data for the given type.
Looks up the type data for the given type.
Find the subclass type data.
Resolves a JSON name for a type.
Resolves the real name of a type.
Returns the content of the file.
Copy bootstrap methods.
Sets the major version and class name.
Put constant pool.
Put bootstrap methods.
Adds a constant reference to the constant pool of the class.
Adds a constant reference to the constant pool of the class.
Adds a constant reference to the constant pool.
Adds a constant reference to the constant pool.
Adds an integer or float constant.
Adds a constant integer or float to the constant pool of the class being build.
Adds a long value to the constant pool.
Adds a long value to the constant pool of the class being build.
Adds a constant name and type.
Adds a constant name and type entry.
Adds a utf8 constant to the constant pool.
Adds a utf8 constant.
Adds a constant method handle entry.
Adds a constant dynamic reference to this symbol.
Adds a constant invokedynamic reference.
Adds a dynamic reference to the constant pool.
Adds a constant dynamic or invokedynamic reference.
Adds a utf8 reference to the constant pool.
Adds a constant utf8 reference to the constant pool entry.
Adds a bootstrap method.
Adds the given types to the merged type table.
Returns the hash value for the given name.
Removes all entries from the map.
Returns all values with the given name.
Returns an iterator over the elements in this map.
Returns a list of all entries in the map.
Increases the capacity of the buffer if necessary.
Appends a char sequence to the end of the buffer.
Visits an annotation of the current method.
Visits the end of the chain.
Create the first chain delegate.
Create the first chain delegate.
Parses a path string into a Path object.
Adds a field to the path.
Configure servlet context.
Executes the method.
Returns an array of all field descriptors.
Create bean definition for registration.
Convert a JtxTransactionMode object to a DBTransactionMode object.
Read a property from the source object.
Put all entries in the map.
Appends a buffer to the end of the list.
Writes the contents of the list to the given writer.
Writes the contents of the list to the given output stream.
Writes the response to the given output stream.
Returns the string value for the given key.
Returns the integer value associated with the given key.
Returns the value associated with the given key as a long.
Returns the double value associated with the given key.
Returns the float value associated with the given key.
Returns the value associated with the given key.
Associates the specified value with the specified key in this object.
Uses the specified folder.
Receives messages from the folder.
Updates the flags of a received email.
Closes the folder if it has been opened.
Lookup named parameter by name.
Validates the action.
Adds a violation to the validator.
Set the mime type.
Sets the download file name.
Sets the target stream.
Sets the target class name.
Sets the target class.
Processes the target class.
Creates a new instance of this class.
Creates a new instance of this class.
Dump class in debug folder.
Sets the from address for the given personal name.
Sets the email address.
Sets the TO address for the given personal name.
Sets the email address to reply to.
Sets the cc addresses to be sent to the server.
Adds a text message with the specified encoding.
Adds an HTML message to the email.
Adds a header to the response.
Returns the value of the system property with the given name.
Returns the boolean value for the given name.
Returns the value of the named property as an integer.
Returns the value of the named property as a long.
Returns the resolved method parameters.
Serialize key value.
Looks up the action path for the given alias.
Resolves the alias of a string.
Resolves the result path with the given value.
Resolve result path string.
Returns the index of the last slash in the given string.
Returns the last index of dot after slash.
Returns the index of the first occurrence of the specified string after the specified slash.
Resolves the schema name for the given type.
Resolve column descriptors.
Initializes the hash table with the given key and tweak.
Multiply this vector by a given number of elements.
Demix a vector.
Key schedule.
Initialize the hash table with the given key message and tweak.
Encrypt a block.
Converts a byte array to a long array.
Remove any bounding character from a string.
Returns the path of the methref.
Create a zlib file from a file.
Gzip a file.
Ungzip a file.
Returns a list of all the entries in the given ZIP file.
Unzips the given file to the given destination directory.
Adds a file to a ZIP output stream.
Adds content to a ZIP output stream.
Returns the field descriptor for the given field name.
Returns the PropertyDescriptor for the given property name.
Sets the bundle name of the request.
Sets the locale of the session.
Returns the locale of the session.
Filter parameters for bean name.
Sets the profiles for the entries.
Reads a big-endian 64-bit long from the given byte array at the given
Reads the contents of the given input stream into a byte array.
Reads a label for the given bytecode offset.
Returns the bytecode offset for the type annotation at the given index.
Reads the bootstrap methods attribute.
Inspects the constructors of the given class.
Returns the ctor descriptor for the given arguments.
Gets the request map.
Create the request map.
Converts an array value to an array of longs.
Initializes the filter.
Adds a file to the search path.
Adds a file to the search path.
Find files that match the given patterns.
Exclude files that match the given patterns.
Adds a path to the path list.
Finds all files in the directory.
Initializes the todo list.
Returns an iterator over the files in this directory.
Resolves the wiring mode of a bean.
Resolves the bean name.
Returns a writer for this output stream.
Returns the servlet output stream.
Returns the class name for this element.
Returns the descriptor for the given constructor.
Gets the method descriptor.
Returns the descriptor for the given method.
Appends the descriptor.
Returns the number of elements in this array.
Get the number of arguments and return sizes.
Sets the transaction rollback status.
Commits or rollbacks all resources.
Rollback all resources.
Requests a transaction resource.
Pops a name from the stack.
Write a string.
Writes a Unicode character.
Write char sequence.
Sets the logging level for parsing errors.
Starts a new region.
Returns true if the given string is a subset of this string.
Registers a pseudo function for the given class.
Looks up a pseudo function by name.
Visit a WDProxy.
Visit an annotation.
Make the static initializer block.
Makes the proxy constructor.
Processes all super methods.
Finds the index of the last occurrence of the specified range.
On string.
Replace the ASM instructions in the given class file.
Gets the attribute prototypes.
Register SQL type.
Looks up the SQL type for the given class.
Lookup the SQL type for the given class.
Creates a new SOCKS4 proxy.
Creates a proxy info for a SOCKS5 proxy.
Creates an HTTP proxy.
Returns the total number of thread transactions in the transaction stack.
Returns the total number of threads with the given status.
Associates the given transaction with the transaction stack.
Continues a transaction.
Lookup the resource manager for the given resource type.
Creates a proxy object for the given target class.
Appends the path and method name to the path.
Align left and pad string.
Converts a string to a camel-case string.
Formats a paragraph.
Convert tabs to spaces.
Escapes the given string for use in Java.
Unescapes a java string.
Returns the bean for the given type.
Returns the bean with the given name.
Initializes the bean definition.
Invokes the provider.
Adds a bean to the scope.
Set a bean property.
Get a bean property by its name.
Shuts down the application.
Resolves the parameters of a method or constructor.
Populates the body of the page.
Returns the value of the macro.
Ends the current node.
Create the element node for the given tag.
Removes the last child node if it is empty.
Returns the SQL query string.
Gets the action class name.
Calculates the to value.
Replaces all occurrences of the given string with the given string.
Replaces all occurrences of a character in a string with another.
Replaces all occurrences of the first occurrence of the first occurrence of the first occurrence of the second
Replaces the first occurrence of the given string with the given string.
Replaces the first occurrence of the given character with the given character.
Replaces the last occurrence of the given string with the given string.
Replaces the last occurrence of the specified character with the specified character.
Removes the first occurrence of sub from s.
Remove a character from a string.
Check if all strings in the given array are empty.
Check if all the given strings are blank.
Converts an object to a string array.
Change first character case.
Returns the title of the given string.
Compresses the given string with the given character.
Returns true if src starts with sub s.
Checks if the string ends with the specified character.
Count the number of times the source string is ignored.
Compares two String arrays for equality.
Returns the index of the first non-whitespace character in the given string.
Strips the leading character from a string.
Strips the trailing character from the given string.
Strips the given character from the given string.
Strips the given character from the given string.
Strips the given character from the given string.
Crops a list of strings.
Removes leading and trailing whitespace characters from a string.
Removes leading and trailing whitespace characters from a string.
Returns the index of the specified region in the string.
Joins a collection of strings with the given separator.
Joins an array of objects using the given separator.
Converts the given source string to a new charset name.
Checks if the character at the given index is equal to the given character.
Surrounds the given string with the given prefix and suffix.
Returns the given string with the given prefix.
Adds the given suffix to the given string.
Cuts the given string to the given substring.
Cuts the substring from the beginning of the string.
Cuts a prefix from a string.
Cuts the suffix from the given string.
Cuts the given string with the given prefix and suffix.
Inserts the specified string at the specified offset.
Repeat a string.
Reverses a string.
Returns the longest common prefix between two strings.
Finds the common prefix of the given strings.
Shorten the given string to the given length.
Converts a string to upper case.
Remove quotes from a string.
Converts a byte array into a hexadecimal string.
Convert a string to a byte array.
Detect quote char.
Visit a Java enum value.
Visits an annotation with the given name and descriptor.
Register an entity type.
Registers an entity with the database.
Remove an entity from the database.
Create entity instance.
Sets the target interface for the wrapper.
Inject target into wrapper.
Looks up the annotated properties for the given type.
Detect database and configure db oom.
Closes the output stream.
Writes a byte to the buffer.
Invalidates the session id from the request.
Returns the encoded name of the mail.
Serializes this buffer to a byte array.
Writes the data source to a file.
Writes the data source to the given output stream.
Append an argument to the argument list.
Prepend argument.
Change return type.
Appends all whitespace characters to the end of the text.
Register a type converter.
Looks up a converter for the given type.
Returns a list of selectors matching the given query.
Selects a collection of selectors.
Process selectors.
Selects the first node matching the given query.
Iterates over the descendants of the given nodes and adds them to the result.
Recursive method to walk the tree.
Selects the given node and adds it to the result.
Unpacks a char array from a String.
Refills the input buffer.
Get page data.
Remove the select from the SQL string.
Remove the first occurrence of the first occurrence of the given sql string.
Remove the last order by from the SQL string.
Decodes a HTML string.
Detects the name of an entity.
Build the SQL ORDER BY clause.
Builds the SQL for a page.
Resolve columns and properties.
Find by column name.
Find column descriptor by property name.
Returns the property name for the given column.
Returns the column name for the given property.
Returns the id value of the given object.
Sets the value of the id property of the given object.
Returns the key value for the given object.
Append a string to the end of the string buffer.
Sets the index of the string array.
Expands the capacity of the array.
Calculates the length of the array.
Create the mixing message.
Create scoped proxy bean.
Initializes the map.
Accepts a file.
Sets the watch file for the directory.
Starts the watch task and waits for it to finish.
Called when the file changes.
Adds an enumeration to the list.
Computes the size of the field info.
Put field info.
Creates a new target with the given value and scope data.
Write a property value to the injection point.
Decorates the given page content with the given decora content.
Parses a page.
Writes the decorated page.
Writes the region of the decora tag.
Starts the server.
Runs the given process.
Gets the store for the imap.
Creates a gzipped response stream.
Initializes this template with the given data.
Append column name.
Adds a rule to the list of rules.
Applies the rule to the given value.
Process includes.
Processes excludes.
Returns the pseudo class name.
Adds all elements in the given collection to the end of this list.
Finds the insertion point for the given element.
Binds the action configuration for the given annotation type.
Register new action configuration.
Lookup the action configuration for the given action type or annotation type.
Registers an action configuration with the given consumer.
Sets the system mail properties.
Validates the given value within the validation context.
Find the last table in the tree.
Fixes all the elements in the fostered list.
Register session beans.
Returns the session beans as a map.
Initialize the proxy.
Add advice init method.
Ends the action.
Adds a key-value pair to a section.
Extracts profiles and adds them to the list.
Adds a key-value pair to the list.
Convert a typedesc string to a class name.
Convert a type reference to its name.
Convert a type to a typeref.
Adds a list of consumers to the list.
Creates a collection of the given length.
Convert the given value to a single element collection.
Convert value to collection.
Convert collection to collection.
Adds a line number to the end of the list.
Visits the label, line numbers, and other line numbers.
Puts the given byte vector into the given byte vector.
Adds a forward reference to the buffer.
Marks this basic block as belonging to the given subroutine.
Compare two digits.
Fixes the accent of the given character.
Puts a byte into the byte vector.
Puts two bytes into this byte vector.
Puts a short value into the byte array.
Puts a 12 byte integer into the byte vector.
Puts two unsigned short values into the byte vector.
Puts an integer into the byte vector.
Put 122 bytes into the byte vector.
Puts a long into the byte array.
Puts a byte array into this byte vector.
Enlarges the buffer to the specified size.
Authenticate user via http session.
Authenticate user via token.
Authenticate user via basic auth.
Finds the default message for the given key in the given locale.
Returns the resource bundle for the given bundle name and locale.
Support the subscript operator with a subscript operator for an array.
Sets the id of the given entity.
Saves the given entity to the database.
Update an entity.
Updates a property of an entity.
Updates a property of an entity.
Find by id.
Find entity by property.
Find one entity by criteria.
Delete by id.
Delete an entity by its id.
Count the number of entities of the given type.
Increases a property by a given amount.
Decreases a property by a given amount.
Find related entities.
List all entities in target class.
Removes all the attributes from this set.
Returns a set of all the attributes.
Associates the specified value with the specified key in this map.
Removes the mapping for the specified key from this map.
Gets the current stack trace.
Get the stack trace of the given throwable.
Gets the stack trace chain of the given throwable.
Gets the exception chain.
Returns the stack trace of the given exception.
Converts a Throwable to a String.
Builds a message for the given cause.
Unwraps the wrapped throwable.
Registers the class scanner as consumer.
Adds a component class to the madvoc container.
Gets the system class loader.
Gets the resource as stream.
Get a resource as an input stream.
Get class as stream.
Get class as stream.
Add a new route chunk.
Find or create a child route chunk with the given value.
Parses the request.
Convert value to collection.
Invokes a setter.
Sets the value of the array at the specified index.
Create bean property object.
Extracts the type of the bean property.
Stops the auth session.
Start the auth session.
Converts a local date to a Date.
Converts a local date time to a calendar.
Defines a proxy.
Adds a check to the list.
Returns a validation context for the given class.
Adds all checks for the given class.
Collect annotation checks for a property.
Collect annotation checks.
Copy default check properties.
Encodes a URI component.
Encodes the given string using the given encoding.
Encodes the given scheme with the given encoding.
Encodes the given host with the given encoding.
Encodes the given port with the given encoding.
Encodes the given path with the given encoding.
Encodes a query string using the given encoding.
Encodes the given query param with the given encoding.
Encode the given fragment using the given encoding.
Inspects the properties of the class.
Returns an array of all property descriptors.
Returns an array of all cookies in the response.
Unzip the response body.
Closes the HTTP connection.
Returns true if the given scope is applicable to this scope.
Encrypts the given content.
Decrypts the given content.
Convert a Map to an object of the specified type.
generify a list of beans.
Sets the value of a property descriptor.
Generate a map from a map.
Compares two entity column descriptors.
Sets the default header.
Sends a request to the server.
Send a request to the client.
Adds the default headers to the request.
Reads the cookies from the response.
Adds the cookies to the request.
Sends a message to the specified email.
Sets the subject of the email.
Sets the date of the message to be sent.
Sets the headers for the given email.
Sets the recipients of an email.
Sets the recipients.
Adds the body data to the email.
Sets the content of an email message.
Create attachment body part.
Returns the content type of the given data header.
Save result set.
Close all result sets.
Closes the query.
Close the query.
Sets the fetch size.
Sets the maximum number of rows in the result set.
Executes an UPDATE statement.
Executes the query and returns the first row of the result set.
Get the generated columns.
Returns the query string.
Creates a proxy for the given aspect class.
Create a collection from an iterator.
Creates a stream from the given iterator.
Compares two objects.
Sets the default wiring mode.
Prints a message and throwable.
Returns the class name of the caller.
Shorten the class name.
Set the types to exclude.
Serializes the source object to the target object.
Serializes the given object to a string.
Clones an object using serialization.
Writes an object to a file.
Reads an object from a file.
Convert an object to a byte array.
Converts a byte array to an object.
Resolves the names of the mapped types.
Creates the table names for the given types.
Read column value.
Cache result set entities.
Resolves the provider definitions for the given type and name.
Apply the entity name to the given table name.
Checks if a connection is valid.
Renders the action request to the specified target.
Locates the target for the given action request.
Returns the writer to write to.
Returns the output stream of the response.
Write content to response.
Sets the content type.
Prints a string to the output stream.
Performs the login.
Returns the token as a JSON object.
Login using basic auth.
Converts the given URL to a container file.
Creates a directory if it does not already exist.
Creates a directory if it does not exist.
Copies a file from one location to another.
Copies a directory from one location to another.
Moves a file from one location to another.
Moves a directory from one location to another.
Deletes a directory and all its sub-directories.
Reads the contents of a file into a char array.
Reads the contents of a file into a char array.
Writes a character array to a file.
Writes a string to a file.
Appends a string to a file.
Reads a number of bytes from a file.
Writes a byte array to a file.
Appends a byte array to a file.
Copies a file or directory.
Deletes a file or directory.
Create a temporary directory.
Checks if the given file is a binary file.
Checks if srcDir exists and destDir is a directory.
Checks if a file is a copy of another file.
Print command usage.
Resolves the method for the given action class.
Registers an action with the given action class and method name.
Register a path alias.
Moves to the next value in the iteration.
Creates a new char array from the given char array.
Executes the proxy.
Match upper case boolean.
Creates a char sequence from the input starting from the given index.
Returns an array of URLs for the specified class.
Sets the BCC addresses for the email.
Registers a serializer for the given type.
Looks up a serializer for the given type.
Parses a request stream.
Returns the value of the request parameter with the given name.
Returns the values of a request parameter.
Returns the value of a request file parameter.
Returns the uploaded files for the given request parameter.
Initialize the filter.
Parses a template into the SQL builder.
Find the end index of a macro.
Counts the number of escapes in a macro.
Build query string from query map.
Parses a query string.
Prepare header parameter name.
Extracts the media type from the given content type.
Returns a string representation of the given node.
Returns the inner HTML representation of the given node.
Configures the servlet with the given servlet context.
Resets this object to its initial state.
Sets lazy flag.
Replaces the target class with the mapped type for the path.
Parses the given string as a list.
Parses the given string as a map.
Resolve lazy value.
Skips an object.
Parses a string.
Parse string content.
Parses a unicode character from the input.
Parse unquoted string content.
Parses a number.
Parses the array content.
Create empty ctor.
Create a simple method wrapper.
Resolves the raw type name.
Resolves a reference to a bean reference.
Resolves a bean reference from the given parameter references.
Reads all references from a method or ctor.
Build default bean references.
Builds a default bean reference for the given property descriptor.
Remove duplicate names from all bean references.
Converts an array of references to an array of bean references.
Convert an ann value to an array of bean references.
Runs a joy consumer.
Finds a declared method on a class.
Finds a constructor for the given parameter types.
Resolves all interfaces of the given type.
Compares two arrays for equality.
Force access to the given object.
Creates a new instance of the given class with the given parameters.
Returns the superclasses of the given class.
Returns the child class of the given object.
Returns the jar file of the given class.
Sleep for a given amount of time.
Sleeps for a period of time.
Waits for an object to become available.
Creates a thread factory that daemonizes the specified thread.
Returns the current value.
Visits a parameter of this method.
Visits an annotation of the current method descriptor.
Visits a field instruction.
Visits a method instruction.
Visits a method invokedynamic insn.
Visits a jump instruction.
Visits a MultiADescriptor.
Visits a try catch block.
Convert the base and profile properties to a writer.
Copies the contents of the input stream to the output stream.
Moves to the next element in the list.
Moves the cursor to the next position in the list.
Join an array of arrays.
Joins an array of arrays into an array of the given component type.
Resizes the given buffer to the given size.
Appends a new element to the end of the buffer.
Removes the specified component from the specified array.
Returns the index of the first occurrence of the specified character in the specified array.
Returns the index of the first occurrence of the given value in the given array.
Returns the index of the first occurrence of the first occurrence of the first occurrence of the first occurrence
Enable XHTML mode.
Parse lagarto content.
Parse the lagarto document.
Computes the maximum stack size and local size.
Ends the current basic block with no successor.
Collect attribute prototypes.
Injects the context for the given target object.
Registers a class as a pseudo class.
Looks up a pseudo class by name.
Invokes the given action request.
Get all bean property names.
Visits the bean.
Returns true if the given property name matches the given rule.
Resolves a method injection point for the given type.
Read filter config parameters.
Sends the bundle file to the server.
Looks up a bundle with the given ID.
Looks up a ZIP bundle file.
Registers a bundle.
Creates the digest for the given source.
Creates the bundle.
Resets the cache.
Fix relative urls.
Updates a column of an entity.
Create table ref name.
Returns the DBSession associated with this transaction.
Convert the given value to a single element array.
Parse signature for generics.
Resolves the set of injection point for the given type.
Returns true if the given property type is one of the ignored property types.
Opens a connection for a query.
Opens a transaction.
Closes the transaction.
Commits a transaction.
Rolls back a transaction.
Creates a new Properties object from a file.
Creates a new Properties object from a String.
Load properties from a string.
Returns a subset of properties.
Creates a new Properties object from the classpath.
Get the value of a property from a map.
Resolves all variables in a properties object.
Resolves the value of a property.
Resolve the scope pattern for the given type and method.
Returns the transaction mode for the given type and method name.
Registers an array of annotations.
Read transaction annotation.
Accepts the given node.
Returns true if the given node matches this node's element.
Accepts the given node.
Unescapes the given string.
Build the JRE packages for the given java version number.
Clones this node to the given node.
Detaches this node from its parent.
Add child nodes.
Inserts a child node at the specified index.
Inserts the given node before the given node.
Inserts the given children before the given child.
Inserts the given node after the given node.
Inserts a new child node after the given child node.
Remove all child nodes.
Returns the child node with the given name.
Returns an array of child nodes that match the given predicate.
Check if this node is a child of this node.
Initializes the child element nodes.
Initialize the sibling names.
Initializes the child nodes.
Changes the owner document of a node.
Returns the previous sibling node with the given name.
Returns the text content of this node.
Returns the inner HTML representation of this document.
Visits all child nodes of this node.
Returns the CSS path of this node.
On decora tag.
On id attr start.
Defines the decora tag.
Add a proxy aspect.
Adds a root package to the list of packages and mappings.
Adds the root package of the given action class.
Finds the root package for the given action path.
Resolve validation message.
Remove duplicate names.
Add named props file.
Iterates over all targets and calls the given consumer for each target.
Iterates over all targets and invokes the given biConsumer for each target.
Iterates over all targets and invokes the given biConsumer for each target.
Extracts the parameters values.
Makes the targets for the given action.
Create action method argument.
Called when a new session is created.
Called when a session is destroyed.
Add a value to the array.
Add an array to the end of the list.
Removes the element at the specified position.
Resolves the target of an action request.
Target not found.
Convert a value object to a string.
Registers an action filter for the given action filter class.
Returns the name of the pseudo function.
Resolves the given type into an array of property injection points.
Creates a SOCKS4 proxy socket.
Returns the total number of attributes in this set.
Gets all action results.
Returns true if c equals match.
Returns the index of the first occurrence of the given character sequence equal to the given match.
Finds the first occurrence of the given character in the source array equal to the given character.
Sets the command line arguments.
Sets the environment variable.
Runs the process.
Invokes the given listener with the given type.
Copies the contents of the given frame to this frame.
Reads the abstract type from the descriptor.
Set the input frame from the api format.
Returns the index of the local variable at the given index.
Sets the local index of the abstract type.
Pushes an abstract type onto the stack.
Pushes a type descriptor onto the stack.
Pops the specified number of elements from the stack.
Pops the first argument from the stack.
Adds the initialized type.
Gets the initialized type.
Puts an abstract type into the given byte vector.
Removes all expired values from the cache.
Visits a module.
Visits the class of the class with the given name and descriptor.
Visits an annotation of the class.
Get the thread session.
Closes the current thread session.
Creates the execution array.
Invokes the action method.
Read the request body from the stream.
Calculates the first item index of a page.
Calculates the index of the first item of a page.
Returns true if the specified value is equal to the specified value.
Convert a char array to a byte array.
Find the first occurrence of match in source array at index.
Resolves the name of the node.
Resolves the name of an attribute.
Load properties from a file.
Load properties from a file.
Load properties from an input stream.
Load properties from a map.
Load properties from a map.
Load properties from classpath.
Returns the value associated with the given key or the default value if the key does not exist.
Sets the value of the property.
Extracts the properties from the target map.
Extracts the properties from the target map.
Extracts sub-properties from the target map.
Returns the inner map for the given prefix.
Add inner map.
Resolve the active profiles.
Returns an array of all profiles.
Get the profiles for the given property key name wildcard.
Adds a property injection point.
Adds a set injection point to the set.
Add method injection point.
Adds the init method points.
Adds the destroy method points.
Resolve the target class for the given proxy.
Inject target into wrapper.
Gets the target wrapper type.
Finds the field descriptor for the given field name.
Returns the type of this field.
Resolves the key type.
Resolves the component type.
Creates a new JSON result from the given object.
Creates a JSON result from an exception.
Resolves the http method name from the method name.
Matches a string against a pattern.
Resolves the loading of the given class.
Load a class from the classpath.
Returns the URL of the resource with the given name.
Waits for the current thread to finish.
Detect annotation type.
Builds an injection point from an annotation value.
Visits the class.
Returns an array of URLs for the given class loader.
Sets the bean.
Update the bean.
Loads the property descriptor.
Connect to the database.
Adds an iterator to the list.
Prints the logo.
Stops the application.
Creates a socket for the given host and port.
Creates a new SSL socket.
Returns the default SSL socket factory.
Returns a socket factory for the given proxy.
Returns a random string with the specified number of characters.
Generate a random string.
Returns a random string representation of the specified number of ranges.
Creates a new array instance.
Inject value into object.
Convert the given value to the given target type.
Visits the given service and providers.
Creates a default type cache.
Associates the specified value with the specified type.
Returns an array of all method descriptors.
Resolves the IP address for the given hostname.
Returns the IP address as an integer.
Checks if the given string is a valid againt IP address.
Resolves the host name of an IP address.
Downloads the content of a URL into a byte array.
Downloads a string from a URL.
Downloads a file from the given URL.
Creates a new socket with the given hostname and port.
Creates a socket connection to the given hostname and port.
Returns the index of the primitive class with the given name.
Loads a class from the classpath.
Load array class by component type.
Shuts down all registered beans.
Creates a binary search for the given array.
Creates a binary search for the element in the array using the given comparator.
Excludes the specified rules.
Include rules.
Includes all bean properties in the specified template.
Starts the tag at the given index.
Registers a bean with the madpc service.
Resolves the SQL type of a column.
Preprocess SQL string.
Create result set mapper.
Finds the generated key for the given type.
Populate generated keys.
Creates a wrapper for the given class.
Set bean.
Sets a map of parameters.
Set the specified objects.
Inserts a new chunk after another one.
Looks up the descriptor for the given entity.
Finds the entity descriptor for the given column reference.
Resolve table.
Resolves the class of the given object.
Append missing space.
Returns an enumeration of file parameter names.
Includes the specified page in the specified request.
Returns the URL for the given request.
Returns the request URI for the given request.
Resolves the parameter names for the given action class method.
Starts the application.
Stops the container.
Filter by subject.
Sets the message id.
Filter by email address.
Filter by email address.
Add a cc address to the email.
Set the BCC address for the email.
Sets the search flags.
Sets the email filter flag.
Add a received date search term.
Add sent date search term.
Set the size of the email filter.
Returns a new EmailFilter that is a conjunction of the given EmailFilters.
Appends the OR clauses of the email filters.
Add a not-clause to this EmailFilter.
Concatenates the given search term.
Encodes the given byte array into a base 32 string.
Returns true if the request is a gzipped request.
Validates the given target object against the validation context.
Validates the given target object against the validation context.
Set the profile to use.
Set the enabled profiles.
Returns true if the given check profiles match.
Parse the request body.
Returns the number of milliseconds since the epoch.
Adds the given date to this date.
Returns the sub date of this date.
Sets the value of an integer to the given value.
Emit a comment.
Prints an error message to the visitor.
Creates a hash value for the given password.
Generate a PBKDF2 secret key.
Converts a hex string to a byte array.
Resolve provider definitions.
Sets the name of the email attachment.
Sets the content id from the name if it is missing.
Resolves the MIME type of the file.
Parses a type signature.
Computes the size of the symbol table.
Writes the attributes to the given byte vector.
Decodes the given string using the given encoding.
Decodes a query string.
Starts the application.
Check connection provider.
Makes the given visitor visit this method.
Visits the end of the class.
Create a method signature.
Converts an array of objects to a CSV string.
Convert a line to an array of strings.
Resolves the injection point for the given type.
Creates a class reader for the given advice class.
Gets the cached advice class reader.
Encrypt a string using UTF-8.
Decrypts the given string.
Returns the logger with the given name.
Sets the name.
Creates an action request.
Creates a wrapper for the given class.
Destroys a bean.
Shuts down the destroyable beans.
Get the received emails.
Starts the clustered service container.
Runs the report loop.
Print error message.
Prints a rate message.
Maps an existing file to a byte buffer.
Closes the replay destination.
Do the work.
Returns the position of the log.
Offers the given direct buffer vector to the buffer.
Appends padding to the buffer.
Closes the session and the context.
Polls for an error response.
Stops a replay.
Event available image.
Event unavailable image.
Reads the status of a channel.
Reads a status indicator for a channel.
Sets the limit.
Appends a buffer to the end of the buffer.
Polls for a control session.
Maps a loss report to a byte buffer.
Returns a snapshot of the streams.
Creates the default header.
Sets the flyweight key buffer.
Sets the label buffer for the flyweight message.
Connects to the Aeron archive.
Tries to connect to an AERON archive.
Closes the session with the given id.
Starts a new recording.
Stops a recording.
Replays a sequence of messages.
Stops a replay.
List recordings.
Lists the recordings for a URI.
Lists a recording.
Extends a recording.
Gets a recording position.
Gets the stop position.
List recording subscriptions.
Checks if the given UDPChannel matches this UDPChannel.
Returns the destination address for the given channel URI.
Returns the description of this multicast interface.
Add a new transport to the list of transports.
Inserts a packet into the buffer.
Finds a control toggle record.
Associates the specified value with the specified key in the request.
Returns the channel tag.
Gets the entity tag.
Adds a session id to a channel.
Returns the tag of the given parameter value.
Appends padding to the log condition.
Update the publisher limit.
Allocates a new buffer position.
Returns the label name for the given type id.
Scans the buffer for available frames.
Clears the fields of this builder.
Validates this channel URI.
Sets the prefix for the channel URI.
Sets the media type.
Sets the control mode.
Sets the term length.
Sets the term offset.
Specifies the number of bytes to linger for this URI.
Closes the transport.
Check if a frame is valid.
Receives a datagram from the server.
On nak retransmit.
Processes the timeouts of the retransmits.
Returns a string representation of the given status.
Allocate an atomic counter.
Resets this vector to a new position.
Validates this vector.
Validates and computes the length of a vector.
Calculates the length of the producer window.
Validate socket buffer lengths.
Validates the page size.
Validate session id range.
Validates that the given timeouts are valid.
Sets the flyweight error code.
Resets the state of this instance.
Encode cluster members as a string.
Add member status publications.
Close member publications.
Checks if the given cluster members have an active quorum.
Returns the quorum position of the members.
Resets the log positions of all cluster members.
Returns true if any of the cluster members have a vote at the given position.
Checks if a quorum of members has won a quorum of votes on the given candidate term.
Checks if the cluster members have a majority vote.
Determines the member of the given cluster.
Validates the endpoints of a member.
Checks if two cluster members have the same endpoints.
Checks if the given cluster members are unanimous.
Returns true if the given cluster member is a quorum candidate.
Checks if the given endpoints are not duplicated.
Returns the index of the member with the given id in the cluster members array.
Removes the member with the given id from the given members array.
Gets the highest cluster member id.
Maps an existing CNC file to a mapped byte buffer.
Checks if the driver is active.
Checks if the driver is active.
Checks if the driver is active.
Requests the termination of a driver.
Returns the frame length volatile.
Writes the length of a frame to the buffer.
Write a frame type to the buffer.
Writes the flags of a frame.
Writes the given term offset to the given buffer.
Frames a term id into the given buffer.
Find counter id by recording.
Find counter id by session.
Returns the recording id for the given counter.
Checks if a counter is active.
Add application specific feedback to the frame.
Reloads the cache.
Finds the last entry in the list.
Creates a recovery plan.
Creates a RecoveryPlan from snapshots.
Appends a term to the cluster.
Appends a snapshot to the cluster.
Commits the log position for the leadership term.
Writes the given entry to the cluster.
Closes the client.
Offers a vector to the publication.
Unblock a term buffer.
Returns the channel name.
Sets the flyweight channel.
Checks term length.
Checks that the given page size is valid.
CASes the current log active term count.
Computes the position of an active term.
Compute log length.
Stores the default frame header.
Applies the default header to the given buffer.
Rotate log.
Initialise tail with term id.
Returns the term offset for the given tail and term length.
Gets raw tail volatile.
CAS raw tail.
Terminates a flyweight token buffer.
Allocates a counter.
Finds the counter id for the given counters.
Checks if a counter has been replayed.
Get snapshot recording id.
Convert a short flags to a char array.
Sets the flyweight channel.
Offers a buffer to the cluster.
Wraps the given buffer at the given offset and length.
Commits the frame to the buffer.
Aborts the handshake.
Starts the media driver.
Closes all the resources.
Returns the position of the term.
Allocate a counter.
Find counter id.
Allocates an atomic counter.
Closes the connection.
Dispatches the given recording descriptor to the given consumer.
Adds a new Slab size to the pool.
Sets the byte at the specified index.
Adds the given statistics to the page.
Convert an array type to a group type.
Convert a struct type to a group type.
Annotate a message at the given position.
Ends the previous bit packed run.
Read one struct.
Reads a list of footers from a file.
Reads the footers of a summary file.
Reads the footer of a file.
Reads the next row group.
Reads the next filtered row group.
Reads a dictionary from the given column chunk.
Adds a writer to the pool.
Removes a writer from the list of writers.
Updates the allocations.
Register a new scale call back.
Starts the stream.
Starts a new block.
Starts a new column.
Writes a dictionary page.
Writes a data page.
Ends the current block.
Copies the specified range of bytes from the given input stream to the destination stream.
Ends the parquet file.
Merges a list of files into a parquet metadata block.
Writes the given list of files to the given output path.
Writes the metadata to a file.
Merges the given file meta data into the given global meta data.
Reads the current value.
Returns true if the given schema is null.
Returns the first non-null value in the given array of objects.
Returns the value of the given string.
Deserialize a thrift meta data from a map of meta data.
Convert a thrift class to a thrift meta data object.
Returns the extra meta data for this instance.
Writes a null value.
Writes the row data to the parquet file.
Initializes the delta binary packing data from the specified input stream.
Allocate a values buffer.
Checks that the expected enum value is a valid enum value.
Calculates the bit widths for a delta block buffer.
Throws the given exception if it is an instance of the given class.
Returns statistics based on the given type.
Returns a builder for reading a primitive type.
Merge statistics.
Gets the non-null schema.
Creates a new TaskAttemptContext instance.
Invokes the given method on the given object.
Displays the members of this class as a string.
Merges the fields of the given group type into this group type.
Initializes the counter from a reporter.
Gets the filter instance for the given configuration.
Returns a list of all the footers in the given configuration.
Generate splits.
Writes a record to the log.
Validates the mapping for the given descriptor.
Serializes the given message class to a string.
amend missing required fields.
Checks the set.
Reads a file meta data from the given input stream.
Closes the record writer.
Sets the schema for the given job.
Adds a primitive type to a class.
Asserts that the given column has a valid type.
Casts a long value to an int.
Creates a schema mapping from an arrow schema.
Creates a schema mapping from the given parquet message type.
Maps the arrow schema to the corresponding parquet schema.
Write data page header.
Skip records read to match.
Write object to conf as base64.
Removes the value for the given key from the cache.
Associates the specified value with the specified key in the cache.
Returns the current value for the given key.
Writes a value to an avro schema.
Set the regular expression.
Writes the given content to the output file.
Opens an input stream for the given filename.
Creates a record filter for the given column path.
Convert the given struct to a thrift schema.
Creates a wrapper for a group type list.
Create a list of elements.
Returns the merged key value metadata.
Creates a new parquet input split.
Returns a map of field names to class names.
Resolves the schema access.
Gets the input files.
Check parquet files.
Gets the input files from the given directory.
Creates a record filter that accepts records from the specified range.
Creates a list consumer for a class.
Initializes the partition info.
Merges the given tuple into a summary data structure.
Sum up a tuple.
Reads a struct from the stream.
Reads a map entry.
Writes an integer to the stream.
Reads an int from the buffer at the given offset.
Sets the schema for the given job.
Creates a Kafka topic if it does not already exist.
duplicate pipeline stage beans.
Creates a list of interceptors for the given stage library.
Creates a new interceptor bean.
Parses the given schema.
Convert milliseconds to days.
Get the avro schema from the given header.
Upgrades V1 to V2.
Copy blobstore resources to staging blobstore.
Resets this object to its initial state.
Reports the health of a thread.
Register a new thread health gauge.
Store control hub configurations.
Authenticates the current user with the given credential.
Upgrades the pipeline if necessary.
Upgrade a stage library if needed.
Upgrades the stage definition if needed.
Upgrades the services if needed.
Upgrades the stage if needed.
Gets the fields to null.
Checks if the given package is a system class.
Adds the specified element to the end of the list.
Adds an entry to the cache and gets evicted.
Returns the value associated with the given key, or the default if the key does not exist.
Add reports errors if needed.
Reads a descriptor file.
Gets all file descriptors in the given set.
Populate defaults and extensions map.
Gets the descriptor for the given file.
Convert a protobuf message to a SDC field.
Converts a SDC field to a protobuf message.
Converts a SDC field to a protobuf message.
Upgrades a list of configs to jersey config bean.
Checks the connection to the kudu server.
Convert kudu type to field type.
Creates a field from a row result.
Intercepts the given records with the given interceptors.
Returns the text of the line.
Add missing configurations to stage.
Parses the response and returns the record.
Adds the response headers to the record.
Write response header to field.
Write response header to record header.
Saves the metadata for this stage.
Configures the client for the given issues.
Parses the request headers and returns the source offset.
Increment the source offset by the given amount.
Parses a paginated result.
Adds the response headers to the response.
Resolves the request headers.
Process the response.
Returns true if the specified property is defined in the configuration.
Convert a DataParserException to a DataParserException.
Convert a DataGeneratorException to a DataGeneratorException.
Reads credentials from a file.
Creates a new preview of the given stage outputs.
Copies characters from startChar to currentChar.
Removes all logical duplicates from a set of packages.
Finds the next main line in a live file chunk.
Resolves a live file chunk.
Closes the connection.
Escapes a single quoted substring.
Returns the flow control settings.
Gets the grpc channel provider.
Puts the given offset and result into the cache.
Compile a grok expression.
Compute the digest expression from the original expression.
Adds a dictionary from an input stream.
Adds a dictionary from the given reader.
Stops the aggregator.
Rolls the new data into the aggregators.
Serializes an object to a string.
Deserializes the given body using the given return type.
Deserializes an object from the given file.
Writes a record to the file.
Resolves a string value from an EL expression.
Generate the inner field from the list.
Gets the table name from the metadata record.
Get the database name from the metadata record.
Returns the value of the internal field of the given metadata record.
Returns the location of a hive record.
Get the custom location from the metadata record.
Get the avro schema from the metadata record.
Get the data format from the metadata record.
Creates a new schema metadata field.
Validates the partition information of a hive table.
Generate a partition path from a list of partitions.
Serializes an avro schema to hdfs.
Sets the parameters for a record.
Returns the configuration for the server.
Parse RFC 3164 time.
Formats a template.
Starts a new batch context.
Checks if the record contains the solr fields.
Filters the field names that are not in the autogenerated field names map.
Send on record error exception to handler.
Parses a jar name into a dependency object.
Parses the given URL into a dependency object.
Gets the instance of couchbase connector.
Closes the bucket and cluster.
Returns the label for the given string code.
Verifies that the dependency with the given key exists in the definitions map.
Get the write operation type from the header.
Builds a subdoc mutation.
Generate SQL string for alter table.
Configures the SASL login context.
Takes the data from the control channel.
Commits the transaction at the given offset.
Sends an error message to the consumer.
Injects the given stage into the given stage.
Get the definitions for this stage.
Get the lineage publisher definition.
Formats the given column name.
Formats the given value as a string.
Get information about a pipeline.
Create a draft pipeline fragment.
Get a list of pipelines.
Import a pipeline fragment.
Gets the file path for the given record.
Get the operation code from the SDC record.
Returns the path to the field for the given column.
Polls the queue for an enriched event.
Returns the runner for this pipeline.
Gets the idle runner for the given time.
Returns a runner to the pipeline.
Destroys the pipeline.
Validates that the pipeline is not destroyed.
Checks if the given stream exists.
Gets the last shard id of a stream.
Process the queue.
Handle SQL exception.
Returns a hash code for the given column op.
Compares two files.
Tries to retrieve the pid of the process if it is feasible.
Validates and extracts the fields to hash.
Gets the proxy user information for the given user.
Roll the stats.
Creates a snapshot of the active stats.
Ensures that a directory exists.
Writes a batch of records to the database.
Writes a batch of records.
Writes a record to the database.
Generates a no more data event.
Detect a new partition.
Update the HDFS record for hdfs.
Process the given group and value.
Returns true if the two stages have the same version.
Starts the Mesos application.
Configures the auth token and builds the client.
Resolves the headers for a record.
Evaluates a method expression and returns the corresponding HTTPMethod object.
Fills the bindings with null values.
Returns the value of the field with the given path or null if the field is null.
Load a schema from the registry.
Registers a schema.
Load a schema from the registry.
Get the schema id from the subject.
Load a schema from the registry.
Writes the given schema id to the given output stream.
Detects a schema ID from a byte array.
Get the default values for the given schema.
Parses all records in the given stage context.
Logs the details of this dependency.
Gets the bad records.
Initializes this stage with the given configuration.
Gets the outward edge vertices for a vertex.
Gets the inward edge vertices for a vertex.
Serializes an offset map to JSON string.
Deserializes the offset map.
Sends a report to the queue.
Gets the report for the given id.
Checks if the check point file exists or not.
Writes offsets to the main offset file.
Deletes a blob.
Handles an error.
Handles an archive.
Returns a reader for the current file.
Releases a reader.
Set the DPM base URL.
Add a default header.
Parse a date from a string.
Escapes the given string.
Returns the client for the given base path.
Initialize the connection to the kinetica server.
Get the metadata for a table.
Creates an event builder for the given stage.
Builds a schema from a map of fields.
Convert Oracle code to SDC code.
Add jars to job.
Checks if the given field name is in the field order by list.
Check condition expressions.
Returns the lag time for the given file offset.
Sets the instrumentation to be used for the bootstrap.
Returns the parallelism of this stage.
Runs a query.
Get the table description.
Validate that the table accepts inserts.
Get the column type.
Check if the field is nullable.
Get the schema of a table.
Get the column properties for the given table.
Get the class for the given type name.
Initializes the Aerospike client.
Get the topic expression from the publisher conf.
Returns an input stream to the underlying file.
Returns an output stream for this file.
Checks if the file exists.
Parses an fs permission string.
Validates that all the services are available.
Creates a simple aggregator instance.
Gets the aggregator unit for the given class.
Creates a new AggregatorData instance.
Create a new group by aggregator.
Starts the data provider.
Stops the aggregator.
Rolls a new data window to the aggregator.
Releases the login manager.
Converts a glob string to a regular expression.
Returns a list of objects sorted in descending order.
Stops the pipeline.
Produce empty batches for idle runners.
Creates a failure snapshot for the given pipeline.
Converts the given record to a bound statement.
Sets all configuration values in the given map.
Generate lookup key.
Reads a line from the reader.
Rolls the usage timer down.
Enable DPM.
Disables DPM.
Normalizes the base URL.
Retrieve user token.
Logout the user from DPM.
Updates the token file.
Update DPM properties.
Creates a schema for the given field.
Creates a complex schema for the given field.
Get the decimal scale or precision for a field.
Returns the default value for the given schema.
Initializes the metrics if needed.
Compares two paths.
Returns the index of the group with the given name.
Returns a list of group names.
Returns true if the character at the given position is a valid escaped character.
Returns true if the given string is a slash escaped character.
Returns true if the given string is inside a class of a character class.
Count the number of open parens in a string.
Extracts the group info from a named pattern.
Replaces all occurrences of the given regular expression with the given replacement.
Handles the GET request.
Refresh the schema for the given table.
Returns true if the given entry has expired, false otherwise.
Returns the offset of the file.
Fast forward.
Convert a string to an appropriate number.
Parses a part.
Parses the values from the buffer.
Looks up the primary keys for the table.
Creates the custom field mappings.
Convert a field type to a SQL string.
Returns the table name.
Sets the primary keys for the given record.
Handle SQL exception.
This method is called when a batch of data is processed.
Prepare the batch context.
Finish the given batch context.
Flattens the entire record into a map.
Creates a detached stage runtime instance.
Executes the given record.
Gets the columns to parameters.
Gets the condition for the given partition column.
Validates that the given table context has a valid offset for the given table.
Returns a list of bundle content generator definitions for the given generators.
Gets the non empty args.
Returns the operation for the given table.
Convert bytes to display format.
Scans a live file.
Returns the number of pending files for the given live file.
Returns true if the given name is in the specific whitelist.
Returns true if the set of expected versions matches the set of expected versions.
Main method for running Spark Streaming.
Propagate runtime configuration to all registered listeners.
Validates the report description.
Upgrades v1 to v2.
Extract named groups from raw data.
Adds a commit message to the queue.
Creates a new SDC object.
Sets the fields in the record.
Gets the remote pipelines with changes.
A convenience method to create a RemoteDataCollectorResult from a Future.
Creates a gauge with the given name, pipeline name and rev.
Gets the columns to parameters.
Generate the header attributes for the given file.
Validates a record.
Handle old temp files.
Gets the avro input stream for the given record.
Creates a new DataFileReader from an input stream.
Write parquet to file.
Checks that the input field is encrypted.
Checks that the given field is encrypted.
Checks that the input field is a byte array.
Checks that the given field is a decryption field.
Prepare encrypt.
Set the pattern to use for this matcher.
Appends a replacement string to the given string buffer.
Returns a map of named groups.
Replaces all properties of this pattern with the given replacement.
Gets the global variable.
Creates the start event record.
Creates the stop event record.
Fix offset.
Extracts the value of a field as a runtime value.
Execute alter table add partition query.
Execute alter table set tbl properties query.
Executes describe database query.
Execute a hive query.
Executes a query.
Executes a batch operation.
Runs the given consumer for all the pipes in the pipeline.
Gets the offset commit trigger.
Returns true if any of the pipes have been stopped, false otherwise.
Accepts a consumer.
Gets insert id for record.
Gets the value of the field from the given field path.
Set fragment in record.
Sets the document in the record.
Set the n1 QL query row.
Handles the whole file data format.
Returns true if the given gtid and seqNo are in the incomplete transactions set.
Internal method for creating a new instance of the given class loader.
Logs out the subject.
Sets the exceptions from the given configuration.
Replaces all variables in the path.
Ensures that the permissions are granted to the given path.
Starts the emr binding.
Returns the directory path for the given date and record.
Renames the given path to the final name.
Returns true if the given record should be rolled.
Returns true if the given string matches the given pattern.
Returns the offsets of the underlying file.
Gets the remaining wait time.
Gets offsets lag.
Create a new stage library delegate.
Creates a new stage library instance.
Get the value of a metric.
Find the end of the header.
Returns the number of bytes required to encode the body.
Saves the contents of a byte buffer to a temporary file.
Creates an SSL instance for the given key-and-trust store classpath.
Returns the mime type for the given URI.
Handles the given session.
Stops the server and waits for it to finish.
Adds the mappings for the error404.
Sends a chunk of data to the output stream.
Creates a new fixed-length response.
Returns true if the request should be gzipped.
Adds a cookie to the cookie queue.
Unloads the queue.
Decodes the given base64 value.
Base64 encodes a cookie value.
Sets the table name.
Returns the name of the given principal.
Inserts a spring session repository filter into the servlet context.
Resolves the principal name from the session.
Returns the session with the given id.
Returns the JNDI name for the given model node.
Returns the canonical parameter types for the given view method.
Registers an interposed synchronization.
This method is called before the task is completed.
Returns the current transaction.
Deploys the kernel deployment.
Returns true if the persistence unit name is the same as the cache region name.
Gets the server config dependencies.
Decrements the read lock count.
Increments the read lock count.
Adds a service to the deployment archive.
Handle restoration calculation.
Deploys the module.
Make all the top-level BDAs visible from static modules.
Creates a new jse object from the deployment.
Sets the configuration name and file.
Get security meta data.
Gets the servlet url patterns mappings.
Gets the servlet class mappings.
Resolves all views.
Gets the available connectors for the given operation.
Parse the core environment element.
Parse the process id environment element.
Returns the path address for the given operation.
Sets the address of the path operation.
Returns the value of the given operation.
Returns true if the given operation should include defaults.
Creates a composite operation.
Creates a new ADD operation.
Create an ADD operation on the given address and index.
Create a read attribute operation.
Creates a write attribute operation.
Create an operation that undefines an attribute.
Returns the value of the context.
Adds a url context factory.
Removes a URLContextFactory from the registry.
Loads all providers from the given class loader.
Modify the deployment.
Configures the endpoints for the given deployment.
Modify the deployment context root.
Get the transport class name from the deployment.
Set the outgoing run as identity.
Pops the outgoing run as an identity.
Process the deployment resource support.
Injects the specified property value into the specified object.
Checks if the given class type matches the given property type.
Finds the method with the given name and property type.
Finds the field with the given name and type.
Derive useful info from the request.
Runs the jdr report on a standalone server.
Collect the report information.
Register a resource adapter deployment.
Unregister a resource adapter deployment.
Registers the transformers for the given subsystem.
Writes the parameters to the output stream.
Reads an exception from an input stream.
Gets the lock owner.
Releases the lock for the given instance.
Adds a log entry.
Adds the cdi to the deployment.
Gets the component view.
Invokes the given endpoint with the given invocation.
Gets the component view method.
Checks if the given method matches the given view method.
Returns the ejb security meta data for the given endpoint.
Returns the old security domain, or the new one if the new domain is null.
Ensures that the two security domains are the same.
Sets the idl name.
Returns the absolute name of this entry.
Creates a new JNDIName from the given JNDI name.
Deploys the JAX-WS deployment.
Handles a request.
Returns true if this synchronization is in a transaction.
Returns the cached transaction synchronization registry.
Returns the cached connection factory.
Returns the last component of the given name.
Checks if the given name is empty or not.
Returns the name of the exception that was not found in the given context.
Creates a new naming exception with the specified detail message.
Creates a new naming exception with the specified detail message and remaining name.
Creates a CannotProceedException with the given resolved object and remaining name.
Creates a naming enumeration from a collection of objects.
Rebinds the given value to the given context.
Gets the active MQ for the given operation.
Creates a new instance of this component.
Gets the Spring Integration JAR file.
Resolves the name of the runtime.
Creates an XML listener builder for the given persistent resource definition.
Returns the primitive analysis for the given class.
Shuts down the server.
Returns a list of URL patterns.
Gets the servlets.
Gets the servlet mappings.
Get the security constraints for a jboss web.
Gets the login config.
Gets the context params.
Get the web resource collections for the security constraint.
Gets the servlet init params.
Creates a new security constraint meta data.
Creates a new WebResourceCollectionMetaData.
Creates a new servlet.
Creates a new servlet mapping.
New auth constraint meta data.
Creates a new UserDataConstraint.
Factory method to create a new param value.
Creates a new ParameterValueMetaData object.
Register session bean interceptors.
Stop the weld service.
Returns the JNDI name of the JNDI model node.
Resolves an attribute.
Returns the type of the URL pattern.
Determines if a connection factory should be used for a pooled connection factory.
Returns true if the given resource adapter should be used as an external pooled connection factory.
Gets the active mq.
Gets the default persistence unit name.
Starts the transaction.
Stops the transaction.
Called when the server is suspended.
Resumes the transaction.
Completes the execution of this transaction.
Called when a transaction is created.
Starts the service based naming store.
Stop the service based naming store.
Returns the service name for the given capability base name and dynamic parts.
Creates the resource roots for the given deployment unit.
Returns all class loaders for the given deployment unit.
Determines if the given persistence unit metadata needs a class file transformer.
Allow two phase bootstrap.
Allow default data source use.
Skip mixed synchronization type check.
Get orb from server and port.
Initializes an applet.
Initialize method handles.
Set the naming store to use.
Validates the default values of a list of parameters.
Checks the type of a method parameter.
Looks up the default value of an annotation array.
Validate the base type.
Returns an array of all deferred entity managers.
Returns a string representation of the given status.
Adds the cache dependencies for the given classification cache type.
Extract database dialects.
Examines the database and detects the database dialect.
Identifies the dialect.
Checks the database.
Convert a date string to a scheduler date.
Sets the node name.
Marks the given deployment unit as a child of this deployment unit.
Reads the parameters from the given input stream.
Writes the retval to the output stream.
Writes an exception to the output stream.
Looks up an object in the class hierarchy starting from the given index.
Starts the creation of the sfsb.
End sfsb creation.
Gets the current sfsb.
Pushes the given map of extended entity managers onto the stack.
Pops the last call from the stack.
Gets the current call.
Deploys the module.
Returns the type idl of the given class.
Inserts a primitive into the given CORBA Any object.
Convert a java name to an idl name.
Returns true if the given string is a reserved idl string.
Returns the signature of the given class.
Returns the signature of the given method.
Convert a Java primitive type to a Java primitive type.
Returns the permission for the given name.
Get or create transaction scoped entity manager.
Associates the specified value with the specified key in this map.
Convert security role to model node.
Returns the most recent entity version of the given timer.
Gets the timers for a timed object.
Gets the directory for the timed object.
Adds a listener to the target scope.
Remove a naming listener.
Fire a naming event.
Returns a consumer that closes the cluster.
Adds a private credential to a subject.
Get an object instance.
Add transaction management interceptor for view.
Recursive method for substituting a string.
Creates the transport configuration for the in-vm transport.
Add ear prefix if relative name.
Returns the root deployment unit of the given deployment unit.
Returns the service name.
Creates a new view configuration.
Creates the injection source.
Returns the view interceptors for the given method.
Add a view interceptor.
Adds a view interceptor for the given method.
Returns a list of client interceptors for the given method.
Adds a client interceptor.
Adds a client interceptor.
Put private data.
Throw an exception if an unexpected element is encountered.
Gets the list of EJB endpoints for the given deployment unit.
Gets the jaxws endpoints for the deployment.
Get the endpoint name from the servlet meta data.
Get the endpoint class name from the servlet meta data.
Get the servlet with the given name.
Returns the required attachment for the given key.
Get optional attachment.
Gets the JUnit.
Returns the jboss webservice component with the given name.
Returns the EJBEndpoint for the given jaxws deployment.
Gets the context root.
Returns the class for the given name.
Returns the URL of the resource with the given name.
Returns the set of resources for the given name.
Returns a list of servlet resources for the given path.
Pops a call from the stack.
Returns the entity manager for the given scoped name.
Register a clean up listener.
Deploys the deployment.
Returns true if the class is all fields public.
Creates a new HTTP endpoint.
Creates a new archive deployment from the given deployment unit.
Checks if the given deployment is a jaxrs deployment.
Sets the next timeout.
Sets the timer state.
Merges the given deployment data into this deployment.
Deploys the module.
Adds the remote transactions dependency.
Returns a set of all the container interceptors.
Returns true if the specified method is a level method.
Check that only one of the two elements is required.
Returns the class for the given class name.
Returns the component type at the given index.
Parses the given name into a Name object.
Converts an ins string to a stringified components array.
Parse a name component from a string.
Deactivates the object.
Convert an object servant to an object reference.
Authenticates the user with the given username and password.
Returns true if the given class is a type matched.
Lookup a managed reference for the given name.
Unbinds a JNDI binding.
Instantiates a bean.
Configure bean meta data.
Dispatches a lifecycle joinpoint.
Returns the current namespace selector.
Convert a service name to a bean name.
Returns the service name for the given class and state.
Returns the class with the given name.
Processes the annotations for the given composite index.
Post parse steps.
Validates the given descriptor.
Create the deployment descriptor.
Create web app descriptor.
Get the auth method from the deployment.
Deploys the deployment.
Handle stateless session bean.
Create a stub class.
Gets an anonymous object id.
Returns a copy of the list of registered persistence providers.
Remove all cached deployment specific providers.
Adds the given persistence provider to the list of registered class loaders.
Finds the parent class loader for the given class loader.
Deploys the deployment.
Adds the PU service to the deployment.
Sets the annotation indexes for the deployment.
Gets the persistence provider adaptor.
Saves the persistence provider adaptor for a shared persistence provider.
Lookup the persistence provider for the given deployment unit.
Gets annotated classes.
Creates an EJB archive.
Build enterprise bean meta data.
Refreshes the participant.
Returns the container analysis for the given class.
Looks up a container analysis for the given class.
Creates the work in progress for the given class.
Returns the idl module name.
Convert an integer to a hex string.
Converts a long to a hex string.
Returns true if the method is an accessor method.
Returns true if the given method is a mutator method.
Returns true if the method has any non-app exceptions.
Reads the name of an accessor.
Writes the name of an accessor.
Fixup overloaded operation names.
Fix up case names.
Escapes characters in the given name.
Parses an XML document and sets the environment parameters.
Parse the default context propagation element.
Process the attributes of an XML document.
Loads a provider module by name.
Create add step handler.
Deploys this deployment to the given phase.
Writes an attribute to the given writer.
Create a remote session.
Infers the destination name from the given address.
Register a set of endpoint handlers for the given endpoint class.
Returns an unmodifiable set of job names for the given job name.
Initializes the class loader.
Returns the URI of the request.
Creates a new ResolveResult using the given URL.
Looks up an object by its name.
Binds the specified object to this composite with the specified name.
Call the unbind method on the given path.
Returns an enumeration of all bindings for the given name.
Call the destroy method of the JNDI context.
Destroy a subcontext.
Bind a new context to the given path.
Create a subcontext with the given name.
Looks up a link for the given name.
Adds a property to the environment.
Remove a property from the environment.
Adds the transformations to the transformation description.
Remove the security domain.
Look up a JNDI context.
Creates a new modular reference for the given type and factory.
Creates a modular reference for the given class name and factory class.
Creates a new modular reference.
Returns the idl for the given type code.
Waits for the service to become up.
Computes the masked password.
Initializes the security vault.
Starts a new security vault session.
Displays an attribute created in the specified vault block.
Displays the configuration of the vault.
Returns the configuration for the vault.
Returns the specified value if it is not null.
Get the service name for the deployment.
Inserts a string value into the given Any object.
Returns true if the given permission implies this permission.
Returns the action string.
Returns the log name.
Sends a state change notification.
Returns the value of the given type.
Returns the name of the context service.
Returns the set of all interceptors.
Adds a method interceptor.
Adds a service to the dependency list.
Returns the component interceptors for the given method.
Returns the list of timeout interceptors for the given method.
Add a timeout view interceptor.
Add a AroundConstruct interceptor.
Adds a post-construct interceptor.
Adds a pre-destroy interceptor.
Adds a pre-passivate interceptor.
Adds a post-activate interceptor.
Sets the component create service factory.
Removes the JNDI bindings from the operation context.
Accept the EJB.Builder.
Returns the service name for the given component.
Returns the service name for the given module.
Returns the bind info for the given application, module, and comp.
Returns the bind info for the given JNDI name.
Returns a cache of principals and domains.
Gets the value members.
Get the value members for a type code.
Create the subsystem root model node.
Parses the configuration.
Starts the naming service.
Returns the name of the job operator service.
Adds a component to the deployment.
Adds a message destination.
Returns the view descriptions for the given view type.
Returns a set of component descriptions for a given component.
Returns a set of view descriptions for a specific component.
Resolves a message destination.
Builds the transformers 2 1.
Rejects the defined attribute with the default value.
Pop identity.
Loads the ids manually.
Check the version integrity.
Computes the slot for the given jsf version.
Returns the constant type code for the given class.
Adds a type code for a class.
Ensure that the given package exists in the given container.
Returns the list of interfaces implemented by the container analysis.
Add the abstract base valuetypes to the analysis.
Adds the given class to the list of classes.
Add an interface to the interface analysis.
Add a value to the value analysis.
Add an exception analysis to the exception definition.
Returns the class level injection type for the given annotation.
Start the service based naming store.
Stops the root context.
Checks if the given method type is allowed.
Checks if the transaction is synced.
Gets all component classes.
Gets waiting on transaction completion timers.
Returns the extra parameters for the given set of parameters.
Returns a map of parameters for the given operation context and configuration.
Converts the given type to a Class.
Converts the given value to the given class.
Returns an array with the types of the given values.
Checks if the given types are compatible with the given types.
Returns the next binding in the list.
Returns true if there are more bindings to be added.
Maps the binding name to a Java naming object.
Observes a health check event.
Closes all health check instances.
Handles an EJB locator.
Convert a model node to an enum.
Skip amount of bytes from the input stream.
Check that two elements are not both of the given set.
Adds a component to this module.
Adds the given class loaders to the given set of class loaders.
Unbinds a component.
Looks up a naming context by name.
Returns a list of name class pairs.
Returns a list of bindings for the given name.
Adds a factory to this context.
Saves the given context object properties to the store.
Creates the io subsystem for the given path.
Create welcome content handler.
Get a bean from the pool.
Calculates the operation analysis map.
Collects metrics for a resource.
Prepare the deployment unit.
Deploys the service to the given unit.
Publish the deployment context.
Stops the web app.
Starts the deployment.
Registers a new endpoint configuration.
Retries the given timer.
Posts the given timer to the timer service.
Returns the declared methods of the given class.
Returns the declared fields of a class.
Returns the constructor for the given class.
Get a method by name and parameters.
Adds the messaging active mq to the migration operations.
Returns true if the given parameter is allowed for the given resource type.
Migrates the generic transport to a new one.
Cancels the current state.
Runs the task if it is not cancelled.
Sets the type of the schema.
Returns true if the target function can be executed without an index.
Find all classes in a directory.
Finds all classes of the given interface in the given package.
Gets the generic multivalue type for a field.
Evaluate a record.
Derives a field type from the record.
Update the record.
Finds a record in the cache.
Get minimal set of nodes for sharded query.
Move flatteded equalities left.
Adds the order by projections to the query planning info.
Extract sub queries from the query planning info.
Checks if the cluster name is in the filter clusters.
Handle class with index for sort only.
Returns true if the given class is a diamond hierarchy.
Returns the order direction of the query.
Returns true if the key condition requires multiple index lookups.
Finds the best index for the given indexes.
Computes the common factor for the given index search descriptors.
Creates a new instance of the given strategy.
Allow the user to access a role.
Check if a rule is defined.
Compact server status.
Initialize the system database.
Load local databases.
Called when a member is removed from the cluster.
Attempts to elect a new lock manager for this instance.
Assigns lock manager from cluster.
Commits the commit.
Rolls back the transaction.
Update identity after record commit.
Update the record cache after a rollback.
Prepare for file creation or replacement.
Atomically moves the source path to the target path using the specified requester.
Returns a list of patterns that are disjoint from this pattern.
Execute only locally.
Appends a character array to the end of the string.
Returns true if this connection is connected.
Merges two byte buffers into a short.
Split a short into two byte buffers.
Executes the command.
Puts a single value into the dictionary.
Removes the value associated with the specified key.
Executes the command.
Execute the query and return the first result of the query.
Creates a new channel.
Checks if the given offsets and length are valid.
Replaces the content of the file with the new content.
Sends a command to the server.
Ends the request.
Add a host to the host list.
Starts a new request.
Returns the owner of the database.
Returns a connection to the specified channel.
Kills a connection.
Interrupts a connection.
Disconnects the client from the specified channel.
Pushes clients to the distrib server.
Swaps the value at the specified index.
Releases all locks.
Synchronize the schema of the database.
Updates the metadata for the given metric.
Moves the cursor to the last record in the list.
Reads the next character from the stream.
Executes the query.
On async replication error.
Registers a new compression class.
Returns the limit of the number of files to be opened.
Returns true if the operator allows an indexed function execution on the target.
Moves the buffer to the specified position.
Fills the buffer with the specified number of bytes.
Execute until return.
Executes all the commands in this script line.
Evaluate the record.
Executes the database.
Loads a configuration from the storage.
Parse the request.
Execute this request.
Updates the schedule for a schedule starting at the given node.
Adds an index definition.
Splits the expression for the given aggregation.
Determine the type of the source object.
Returns the collate of the given document.
Returns the value of this property as a String.
Advances the probe to the next value.
Executes the cluster.
Builds a JSON object from a file.
Check the password against the given hash.
Create a hash of the input string using the specified algorithm.
Returns true if the given algorithm is supported.
Creates a new index.
Returns an iterable of all vertices in the graph.
Returns an iterable of all edges in the graph.
Returns the partition key.
Returns the distributed timeout for this task.
Returns the set of features.
Checks if the changes are filled up to the given page index.
Parses a timeout.
Parses the lock strategy.
Create a cluster.
Frees the cluster with the given id.
Starts the application.
Shuts down the underlying application.
Creates a new instance of the specified entity using the specified transformer.
Grant access to a specific resource.
Revoke a specific access to a resource.
Returns true if the given record is a result of a compiled filter.
Resets the table to the initial state.
Returns the index of the given item in the seed array.
Spread an integer to a random number generator.
Create a new index.
Drops all indexes related to this object.
Returns the index for the global ref.
Returns the linked class.
Serializes the document to a stream.
Removes a listener from the list of listeners.
Register a database.
Timeouts a request for a message.
Creates a copy of the database.
Attempts to merge this object with the given object.
Replaces the tree bag with the given collection pointer.
Transforms the given result into an object.
Add a cluster to the database.
Closes all resources in the pool.
Called when a storage is unregistered.
Get the names of all functions.
Gets the names of all the collate factories.
Returns the names of all available command factories.
Reads the field size and type from the current position.
Write the HTTP status code and reason.
Write the headers to the response.
Write the records to the response.
Write a record to the response.
Send an object to the server.
Send a stream to the client.
Opens a database with the given name and user and password.
Closes the connection pool.
This method listens for changes to a collection.
Completes the operation of a component.
Push component counters to the snapshot.
Pushes a writ cache counters holder.
Pushes a new StorageCounterHolder to the snapshot.
Pushes a wal to the snapshot.
Pushes a performance counter for a component.
Stop writing cache flush timer.
Stops the fuzzy checkpoint timer.
Stops the full checkpoint timer.
Stops the commit timer.
Stops the wal timer.
Stops the wal timer.
Parses a SQL statement.
Initializes the receive messages.
Initializes the check disconnect timer.
Removes the record from the current transaction.
Sets the value of the specified property.
Removes the property with the given key from the database.
Checks if the given class is in the schema.
Wraps a cursor.
Define a strategy for a vertex attribute.
Defines a strategy for the edge of an attribute.
Get new record entries by class.
Get new record entries by cluster ids.
Add an index entry.
Merges two sets into one.
Returns true if the given record is an update edge or an update edge.
Returns true if the given index can be executed without an index.
Prepares the keys for the given index.
Writes a page to the page cache.
Reads a page from the disk.
Truncates the buffer to the given page index.
Opens the journal file.
Check if replication is active.
Gets the new node strategy.
Check if the execution mode is synchronous.
Check if the cluster configuration contains a read-and-write field.
Get the server cluster map.
Get the set of servers for the given cluster names.
Checks if a server is contained in a collection of clusters.
Checks if the server is contained in the cluster.
Returns the list of master servers.
Get all configured servers.
Returns a set of clusters for the specified node.
Returns the set of clusters owned by the specified node.
Get the cluster owner.
Returns the owner of the cluster.
Returns the list of configured servers.
Returns the set of registered servers.
Get the set of data centers.
Get the quorum of servers to write to.
Returns true if the cluster is sharded.
Returns a list of servers configured for the specified data center.
Get the data center of a server.
Get the global read quorum.
Returns the quorum for writing to the specified server.
Get the cluster configuration.
Get the data center configuration.
Clear the initialization stack.
Gets the index for the given index name.
Drops an index.
Adds a new vertex to the graph.
Adds a new edge to the graph.
Returns the vertex with the given id.
Returns an iterable of vertices of the specified class.
Returns an iterable of edges of the specified class.
Gets the edge with the given id.
Reuse the given database.
Shuts down the database.
Returns the base type of the vertex.
Get the type of the vertex with the given name.
Create a new orient vertex type.
Drop the vertex type.
Get the type of the edge.
Create an edge type with the specified class name and number of clusters.
Returns the orient element with the given id.
Drops an index for the given key.
Removes the specified listener from the list of listeners.
Fires an exception to all registered listeners.
Stop monitoring.
Registers an MBean with the JMX server.
Unregisters the MBean with the given storage name and storage id.
Fetches the write cache counters.
Fetches the system counters.
Fetches the component counters for the given component.
Returns the value of the property with the given name.
Detaches the specified object from this object.
Returns the version of the specified object.
Create a new SQL command.
Sets the dirty state of the specified object.
Unset the dirty state of the specified object.
Returns a set of index types.
Returns a set of index engines.
Returns the list of missing nodes.
Returns a list of servers that have conflicts with the best responses group.
Gets the best response group.
Computes the quorum response.
Returns a list of received responses.
Get the execution plan for the given statement.
Returns true if the operator allows an indexed function execution on the given target.
Get the library name.
Release a database engine.
Gets the next page position.
Updates the size of the bag.
Returns the value at the given index.
Returns true if the index can be used by order by after filter.
Returns the index of the first occurrence of the specified character in the specified string starting from the specified
Jump to the end of a white space.
Tries to find the index of the first occurrence of the specified character in the specified text.
Sets the fetch plan.
Enqueue repair record.
Cancel repair record.
Enqueues a repair of a cluster.
Returns the dependencies of the given pattern.
Create a POJO with the specified class name.
Register entity classes.
Registers the entity classes for the given class.
Set the class handler.
Acquire a database connection.
Returns the number of available connections for the given name and user.
Acquire a database connection.
Executes the update operation.
Returns an iterator that iterates over the elements of the given class using theorient class loader
Check the cache memory configuration.
Create a GraphsonVertex from a JSON object.
Create an edge from a JSON object.
Creates a JSON representation of an element.
Create an object node from an XML element.
Executes an import on the server.
Returns the status of the job.
Returns a map of active data center configurations.
Splits the given cipher transform into a separate algorithm.
Creates an object from the given key configuration.
Creates an object from a file with the specified algorithm and path.
Create an object from an input stream.
Encrypts the given bytes using the given transform.
Saves this object to the specified output stream.
Saves the keystore to the given output stream.
Set the child context.
Adds the given object to the list of unique result.
Get the field value as object or map.
Authenticates the user with the given username and password.
Get the value of the specified key in the specified map.
Gets the record.
Read the current record.
Returns the orient graph of the database.
Gets the no-tx graph.
Setup the pool.
Returns the value of the property with the given name.
Stops a transaction.
Get the next token from the source.
Returns the token at the given index.
Returns an iterable of all the vertices in the current graph.
Remove this vertex from the graph.
Adds a new edge to the graph.
Add an edge to the graph.
Returns the connection class name for this edge.
Get the connection for the given field.
Process broken rids.
Returns a map of all console methods.
Executes a task on a local node.
Returns the number of nodes with the given status.
Waits for the next retry.
Returns the argument at the specified position.
Returns the number of parameters in the request.
Connect to the server.
Lists all databases.
Returns information about the server.
Checks if a database exists.
Drop a database.
Freeze a database.
Releases a database.
Returns the cluster status.
Get the current orient graph.
Parses the retry token.
Save a record to the database.
Delete a record.
Gets the authentication header.
Authenticates the user with the given username and password.
Check if user is authorized.
Runs the server.
Adjust the beginning of the line and column.
Sets the bucket pointer.
Gets the bucket pointer.
Ends an atomic operation.
Acquires an exclusive lock on an operation.
Changes the maximum amount of memory in the read cache.
Start listening to the given host and port range.
Read parameters from the server configuration.
Shuts down the log manager.
Adds an item to the cache.
Remove a key from the map.
Acquires an entry for the given key.
Returns the value associated with the specified key.
Clears the state buffer.
Closes the file with the given key.
Clears all read buffers.
Adds a task to the state buffer.
This method is called after the entry has been read.
Put entry in read buffer.
Returns the closest power of two.
Called when a push request is received from the database.
Convert the value of the given key to its corresponding enum value.
Convert all of the underlying values to their corresponding enum values.
Returns the serializer for the given type.
Initializes the shutdown queue.
Returns the engine with the given name.
Adds a state to the state list.
Authenticates the database with the given auth token.
Creates the metadata for the database.
Try to acquire a read lock.
Returns the vertex in the current thread with the given direction.
Returns the id of the element.
Sets the value of a property.
Removes a property from the graph.
Clears the contents of the cache.
Deletes the tree.
Ends the importer.
Creates a new vertex.
Parses a strategy.
Gets the positions from the embedded collection.
Executes the command.
Checks if the field value is a valid or persistent link.
Fills the given record with the contents of the given Orid.
Set the version of a record.
Get the type of a record.
Initializes the database instance.
Prints the stack trace of an exception.
Convert a link to a record.
Register a server command.
Create server user configuration.
Analyzes the given SQL condition.
Creates an indexed property.
Attaches this object to the given object.
Gets the index class.
Moves to the next value.
Truncates all classes in the database.
Add a base class to the list of subclasses.
Add the cluster ids to the cluster list.
Link the record to a stream.
Releases a pointer from the pool.
Checks if memory leaks are detected.
Removes all pointers from the pool.
Convert a byte array to an int value.
On open.
Installs clusters of the given class.
Dump the server status.
Returns the index of the first occurrence of the given comparable object in the given array.
Returns the index of the specified object in the specified array.
Returns the set of clusters that are involved in the query.
Handle the result.
Get the temporary rid of this query.
Report a tip.
Parse fetch plan.
Parse the NoCache keyword.
Optimize the sort for the given schema class.
Returns the status of the batch.
Execute this command.
Handle jvm error.
Validate put index value.
Rolls back a transaction.
Executes the specified command.
Registers a cluster.
Sets the value of a property.
Executes the command.
Installs a database.
Delete an existing orid.
Pushes the hooks for the given type and id.
Delete a record.
Returns the number of views with the given name.
Count the number of classes in this schema.
Activates this object on the current thread.
Register an encryption.
Returns the index of the relative index for the given position.
Parse the next word.
Parse the next word.
Parses the next characters.
Parse an optional keyword.
Checks if the given character is one of the given separator chars.
Executes the command.
Clears the configuration files.
Returns the position of the buffer as a byte array.
Extracts the access token from the token.
Acquires an access token for the resource.
Copies the access token from the current context.
Returns true if there are no more characters to read.
Reads a line from the stream.
Skips the specified number of bytes in the buffer starting from the specified offset.
Ensures that the given array offset and length are within the bounds of the given array.
Swaps the specified number of elements of the specified swapper.
MurmurHash3 64-bit hash function.
MurmurHash3 64-bit hash function.
Writes a byte buffer to the underlying stream.
Truncates the file to the given size.
Sets the position of the file.
Calls the refresh end metrics reporting method on the given refresh metrics.
Awaits the completion of the current tasks.
Finds the matches for the given query.
Finds all the targets that are dependent on any of the targeted types.
Deletes all snapshots.
Returns the hash code for the given field.
Removes all references that are referenced outside the closure.
Called when an announcement is complete.
Called when the cycle completes.
Reads the header tags from the given data input stream.
Extracts the primary key from an object.
Clears all the elements in this queue.
Reads the ordinals from the given data input stream.
Returns the number of bits used in this set.
Returns the field value for the given row.
Copies the specified number of bytes from the specified byte array starting at the specified position.
Copies data from srcPos to destPos.
Returns true if range start equals compareTo.
Copies a segmented byte array starting at srcPos to destPos.
Copies bytes from srcPos to destPos.
Reads data from an input stream.
Write len bytes from startPosition to os.
Ensures that the segment at the given index is not null.
Returns the position of the field with the given name.
Calculates the total number of select buckets.
Returns true if the dataset contains all schemas in data set.
Generate all the files in the given directory.
Generate the files for all the schemas in the dataset.
Returns true if the given key matches the given ordinal.
Returns the record key for the given ordinal.
Creates a field path for a primary key.
Create a field path for hash index field.
Puts an object into the hash table.
Initializes the field path.
Returns true if the prefix index contains the given key.
Adds a field to the filter.
Returns a list of schemas ordered by schema name.
Initialize with the major version defaults.
Returns the value at the given index.
Finds matching records for the given field name and value.
Finds matching records for the given type and field name.
Sets the paths of the element to match.
Sets the element key paths.
Restores the data model from the last state.
Runs the incremental cycle.
Excludes a key from the primary key index.
Exclude all referenced objects.
Write a hollow blob header to the data output stream.
Calculates the total heap footprint and populated ordinals of the type.
Writes the field data to the given byte data buffer.
Write fixed length int.
Write fixed length long.
Returns an ordinal to the pool.
Sorts the set of free ordinals in ascending order.
Computes a hash code for the given key and field types.
Returns a hash code for the given key.
Resizes the storage.
Finds a free ordinal for the given ordinal.
Prepares the bucket for write.
Compares the given key with the given serialized representation.
Grows the key array by one.
Rehash previously added data.
Returns an empty key array with the specified size.
Returns true if the two indexer values are equal.
Find match.
Swaps the current read state with the pending state.
Returns the hash table size.
Runs the compaction cycle.
Writes a snapshot of the shards.
Write the delta to the given output stream.
Adds the given schema names to the given set if not primitive or collection.
Normalizes a field path to a parameter name.
Reindex the hash index.
Finds the matches for the given query.
Triggers an async refresh with a random delay.
Triggers an async refresh with the given delay.
Add a type diff.
Writes a 32 bit integer to the output stream.
Writes a 32 bit integer to the byte array at the given position.
Reads a 32 bit integer from the input stream.
Reads a 64-bit long from the given input stream.
Add a view to the layout.
Refresh the loading views size.
Update the UI.
Pull the event.
Creates a new rule builder with the given name and value.
Adds the given facts to the rule.
Creates a new rule builder with the specified rule class and action type.
Creates a rule builder for the golden rule.
Returns a new rule builder with the specified fact type.
Creates a new rule builder with the specified result type.
Creates a new rule builder with the given name and value.
Creates a new rule builder for the given rule.
Creates a new then rule builder with the given action.
Returns the instance of the given rule.
Returns the annotated field for the given annotation.
Returns the annotated method for the given annotation and class.
Gets an annotation from the given class.
Registers an auditable rule.
Updates the rule status.
Gets rule status map.
Returns a builder for the specified result type.
Adds an action to the rule.
Allows the execution of the given action on the rule.
Resets the default value.
Adds a new rule to the rule book.
Returns a list of rules annotated with the JAXB annotation.
Read empty line or end table.
Converts a list of services to an array of service objects.
Get the list of ports from the image configuration.
Extracts the ports from the config.
Parses the port mapping.
Adds the port to the list if it is not null.
Shifts the given list of service ports or null if the list is empty.
Add missing service parts.
Appends an image stream resource to the target file.
Check if the ports match.
Returns the service port or null if the service is not running.
Returns the host and port of a service.
Puts a value in the given map if it doesn't already exist.
Merges the given map with the given map if it is absent.
Merge two maps.
Put all if not null.
Waits until a pod is ready.
Validates a Kubernetes ID.
Converts an entity to a list of HasMetadata objects.
Returns the resource version of the given entity.
Checks if a pod is ready to be run.
Gets the current context.
Checks if the given list builder has a route with the given name.
Checks if the project has a resource with the given paths.
Reads and enrichs a fragment from the given file.
Converts a map of environment variables to a list of environment variables.
Merges two resources.
Merge maps and remove empty strings from original map.
Checks if the given pod spec is a local customisation.
Reads the configuration from a file.
Adds the port if it is valid.
Get docker config string.
Returns the plugin configuration for the given system and id.
Returns the secret configuration for the given id.
Downloads a file from the specified URL.
Compares two versions.
Blend profile with configuration.
Looks up a profile with the given name and directory.
Reads a profile from the classpath.
Read all profiles from classpath.
Find the profile yaml file in the given directory.
Returns a list of profile paths for the given extension.
Reads a list of profiles from YAML.
Gets the image pull policy.
Is open shift mode?.
Returns the number of replicas in the xml resource config.
Returns the first child element with the given name.
Installs a template.
Removes a tag by its name.
Apply a namespace to an entity.
Applies a project to a project.
Apply a project request to a project.
Returns the namespace for the given metadata entity.
Called when an error occurs.
Create the kubernetes list.
Enrich the given platform mode with the name of the namespace.
Get the environment variables for the fat jar.
Returns the duration in seconds.
Parses a duration string into a BigInteger.
Scans the files in the build output directory.
Disables open shift features.
Checks if a service has an ingress rule.
Parses the given input stream and returns the content as a Map.
Returns the default icon ref.
Copies app config files from the given directory to the given app config directory.
Loads properties from a resource.
Gets the Spring Boot version.
Enriches the given platform mode with the given list of enrichers.
Returns the raw configuration for this processor.
Builds a flattened map from the source map.
Returns a singleton template for the given list of resources.
Returns the build reference date.
Returns the value of the generator property.
Returns an unmodifiable map of configuration values for the given name.
Prepares a list of named processors for the given type.
Adds the from image to the builder.
Returns the default value for from mode.
Returns the name of the image.
Get the registry.
Returns true if the server is online or not.
Returns the external service URL for the specified service.
Returns the value of the given property as a boolean.
Creates a new JestClient.
Creates the internal node.
Scans all the plugins in the classpath.
Parses a american express rewards balance from a JSON string.
Get rewards balance.
Creates a PaymentResource from a JSON string.
Overrides the super method to perform a GET request to the API.
Posts the given data to the server.
Parses a venmo configuration from a JSON object.
Collects device data from a braintree fragment.
Collect device data.
Collect pay pal device data.
Gets the pay pal client metadata id.
Checks if the signature is valid.
Get a property as a string.
Parses the payment method nonces from a JSON string.
Returns the checkout configuration for the browser.
Get the Browser billing agreement configuration.
Executes a get request.
Post data to a path.
Send a POST request to the specified path.
Approves a local payment.
Adds a listener to be notified about changes in the braintree.
Removes a listener from the braintree.
Request the billing agreement.
Handles an activity result.
Parses the response from the paypal request.
Adds a list of words to the dictionary.
Removes a word from a dictionary.
Converts a list of korean tokens to a list of java strings.
Extracts the korean phrases from the korean token.
Detokenize a list of tokens.
Fetches a buffer of size bytes from a channel.
Join a list of nal units into a new byte buffer.
Join a list of nal units into a byte buffer.
Returns the profile for the specified integer.
Normalizes the taps and generates fixed precision.
Reads data from the channel to the next marker.
Reads to the next marker buffer.
Returns the maximum number of available frames.
Modify a file.
Gets the duration of the edited track.
Returns the time value of a frame.
Returns the frame of the given time-to-frame.
Convert the given media box to the edited version.
Convert the edited TV box to a media time.
Convert a frame number to a qt player frame number.
Get the qt player time.
Convert a timecode track to a timecode frame.
Formats a timecode for a given track and counter.
Builds a 7-bit integer from two 4-bit integers.
Sets the value of the specified list to the specified value.
Returns true if the given color matches this colorspace.
Returns the size of the specified component.
Creates a new movie movie from the specified input stream.
Reads the next word from the cache.
Creates a wav header for the given audio format and samples.
Creates a multi-channel wav header.
Parses an AAC profile from a byte array.
Encodes the given symbol into the context.
Split a movie into edits and edits.
Decodes a frame.
Sets whether or not this byte array is big endian.
Deblock a Mbp.
Encode a native frame.
Encodes the given long into a byte array of the specified length.
Returns the number of bytes required to encode the given long.
Adds a packet to the buffer.
Repositions the file.
Decodes a bin.
Decodes a bin bypass.
Tries to goto a marker.
Returns the sample frequency for the specified integer.
Predicts a plane.
Starts a new block.
Computes the coefficients of an array of integers.
Finishes an array of blocks.
Concatenates two bits.
Rewinds the reverse 32 bit integer to the given length.
Seek to a key frame.
Get the picture from the first frame.
Returns the gain change point id for the given lngain.
Converts an array of bytes to an array of ints.
Convert an integer array to a byte array.
Converts an audio format to a float.
Converts a float buffer to a byte buffer.
Interleaves the input buffer into the output buffer.
Deinterleaves the input buffer into the output buffer.
Returns the size of the coded video.
Build the wipe map.
Reads a UL array from the given byte buffer.
Read an int32 batch from the given byte buffer.
Calculates the MVB value of two vectors.
Encodes the given picture into an encoded frame.
Encodes a Picture into a byte buffer.
Encodes a P frame.
A list of supported codecs.
A list of supported codecs.
Adds a reference to the JVM.
Removes all references to the current thread.
Flushes all valid references.
Loads the given application name from the given library.
Unpacks a library from the classpath.
Delete temporary files.
Returns the default layout for the specified number of channels.
Get the channel type from the layout at the given index.
Make a new media packet.
Gets the version information.
Returns the default time base.
Returns a new Demuxer instance.
Plays a video.
Display video at correct time.
Creates a new codec descriptor.
Prints an option to the given print stream.
Register a factory for the given protocol prefix.
Generates a unique name for the given source object.
Creates a new audio resampler.
A list of supported video frame rates.
A list of supported video formats.
A list of supported audio sample rates.
A list of supported audio formats.
A list of supported audio channel layouts.
Sets the value of the given flag.
Sets the value of the two flags.
Returns the decoder associated with this context.
Get the demuxer.
A collection of muxer formats.
Make a new filter graph.
Get the bit stream filter type.
Returns a copy of the buffer at the specified offset and length.
Creates a new audio frame with the specified audio format.
Resample the input image using the given resampler.
Validates the image.
Validates the given picture.
Get the filter graph.
Returns the meta data for this key value bag.
Returns the Java CPU architecture for the given java CPU name.
Get a CPU from a Gnu string.
Returns the operating system for the given name.
Get the operating system from the given Gnu string.
Plays a sound.
Loads the library with the specified name and major version.
Set the version of a library.
Loads a candidate library from a list of libraries.
Initializes the search paths.
Check if a library is already loaded.
Deletes this object from the database.
Returns a stream for this stream at the specified position.
Returns the current muxer.
Make a set script transaction.
Decodes the given string into a byte array.
Generate a random string.
Returns the transaction with the given id.
Returns a list of transactions for the given address.
Returns a list of transactions for the given address.
Get the block header seq.
Get the block with the given signature.
Sends a transaction.
Compiles a script.
Compiles a script.
Write primitive array.
Flushes the buffer to the output stream.
Writes an object to memory.
Reads the class from the file.
Converts an object to a byte array.
Sets the MMF file and channel.
Returns the specificity of the given class.
Resizes the store to the given number of bytes.
Removes a binary value from the cache.
Write string asc.
Sets the output stream.
Creates a JSON configuration object.
Creates a new fst configuration for the struct.
Calculates the number of bytes required to represent an object.
Clears the caches.
Get the object input from the input stream.
Get an object input from the stream.
Returns a copy of the input array.
Get the object output from the given stream.
Register cross platform class mapping.
Returns the name of a class.
Writes a big-endian 32-bit integer.
Writes a raw integer to the stream.
Writes an integer to the output stream.
Write a raw byte array to the buffer.
Returns a cached FST object for the given classes.
Called when an object is written to the stream.
Called when an object has been written to the stream.
Get the serialization information for the given class.
Writes an array.
Sets the contents of a string.
Writes an array to the output stream.
Finishes tracking of changes.
Takes a snapshot of the changes.
Register an object for write.
Writes an object to a byte array.
Reads an object from the input stream.
Read len bytes from the stream.
Reads an integer from the stream.
Moves the queue to the specified position.
Sets whether or not the thread pool is enabled.
Starts embedded Cassandra.
Clean data embedded in Cassandra.
Copy a resource to a directory.
Returns true if the remote port is taken.
Returns an empty subscriber state.
Returns a map of onnx op descriptors.
Calculates the output shape of the larg.
Returns true if the condition evaluates to true.
Returns true if the condition evaluates to true.
Performs a logical AND operation on an ndarray.
Perform a logical OR operation on an ndarray.
Applies the given condition to the given value.
Executes the given condition on the first element of the given array.
Returns the value of this property as a flat property index.
Convert flat properties to function properties.
Convert a collection of properties to an array of flat properties.
Sets the given throwable.
Sets the first exception if it is null.
Merges two lists of coordinates.
Partitions a variable list into a list of lists.
Convert an onnx data type to a nd4j data type.
Shuts down the JVM.
Returns the architecture of the current device.
Convert a column to an im.
Pooling 2D function.
Creates a new compression descriptor from the given byte buffer.
Splits a list of aggregates into a list of batches.
Validates that the given arrays have the same shape as the given array.
Sets the data type of this buffer.
Generate an array of doubles from a range of numbers.
Flattens a collection of matrices into an array of intervals.
Solves the bilinear product of two vectors.
Create a complex number from an array of doubles.
Returns the complex value of the specified number.
Returns the complex value of the specified shape.
Returns true if the last synced timestamp is greater than the last synced timestamp.
Subtracts the real and imaginary parts of the component.
Returns the angle between the real and imaginary parts of this number.
Rounds the given number to the nearest whole number.
Negates a complex number.
Returns the absolute value of the given number.
Raises the given number to the given power.
Binarizes the feature matrix.
Sample data set.
Returns the memory footprint of the image.
Returns a string representation of the given exception.
Returns the simple hostname of the given hostname.
Convert an array of strings to a string.
Converts a byte array to a hex string.
Get an array of strings from a string.
Splits the given string by the given separator.
Splits a string into an array of strings with the given separator.
Finds the next character in a string.
Escapes the given string for use in HTML.
Joins an iterable of strings using the given separator.
Camelizes the given string.
Returns the stack trace of the given thread.
Inverts an array.
Returns the nth element of the array.
Is actual on host side?.
Is actual on device side?.
Create the shape information.
Create the shape information.
Checks if the shape info is a vector shape.
Get the order of an array.
Returns the offset for the given array and indexes.
Convert an array of indices to an array of indices.
Returns the short value at the specified index.
Reallocates the buffer to the given length.
Copies n bytes from one buffer to another.
Returns the constant buffer for the given float array.
Returns the URI of the Kafka topic.
Raises the power of the array.
Returns the logarithm of the array.
Max element of an ndarray.
Finds the maximum value between two input values.
Returns the minimum element of the nd array.
Finds the minimum of two numbers.
Increases the specified number of elements in the specified array by k.
OPERATIONS ON NONDESTRUCTIVE FUNCTIONS.
log1p log function.
Prepare bounds.
Returns the next data set.
Builds an allocation shape from a data buffer.
Returns true if the given name exists in the given path.
Reads the data from the given input stream.
Sweeps the tail of the allocator.
Create a new ndarray from a numpy pointer.
Create an ndarray from a npy file.
Allocate a new paged pointer.
Attaches an object to this reader.
Returns true if the server is started.
Executes the given op.
Blocks until the queue is empty.
Get the input stream for this resource.
Returns the device associated with the given thread.
Attach a thread to a device.
Returns the next device for the given thread id.
Returns the name of the operating system.
Calculates the operating system architecture.
Publish an array to the producer.
Creates a new data buffer with the specified type and length.
Intercepts the given op for the data type.
Adds the given component to the result.
Process the message.
Average pooling 3d function.
Depth wise conv2d operator.
Resets the counters.
Returns the op class for the given op.
Store and allocate new array.
Gets shape.
Evaluates the same diff.
Compress a double array.
Computes the Euclidean norm of a complex number.
Returns the center of an array.
Truncates the specified vector to the specified dimension.
Pads the given ndarray with zeros.
Computes the maximal value of an ndarray.
Broadcast an ndarray to all devices.
Sends a vector aggregation message to the client.
Gamma function.
Computes the Euclidean norm of a BigDecimal.
Bessel function of the first kind of order 1.
Returns the exponential value of the given MathContext.
Raises x to the power of y.
Rounds a number to the nearest integer.
Computes the tanh of a number.
Returns the logarithm of the logarithm of the given number.
Calculates the acosh of a number.
Divide a decimal by a scalar.
Scales the given BigDecimal to the nearest decimal precision.
Convert a BigDecimal to a Precise Number.
Puts a function for the given id.
Returns the inputs for a differential function.
Update the array for the given variable name.
Puts the shape for a variable name.
Associates the given array with the given variable.
Gets property for function.
Adds a property to a function.
Add an outgoing function to this function.
Add arguments for a differential function.
Check if there are any incoming arguments for the given function.
Evaluates the operator.
Create a new variable with the given shape.
Finds the ones that are like the given input.
Like zeros.
Remove arg from function.
Set the gradient for a variable.
Average pooling 3d average.
Returns the GRU output variables for the given base name.
Execute a list of differential functions.
Create a WhileStatement.
Executes the given function.
Execute a list of differential functions.
Backward and end result.
Adds a place holder for the given variable name.
Allocate a memory pointer.
Returns the length of a data buffer of the given type.
Returns a string representation of the data buffer type allocation mode.
Get the data buffer type from the context.
Returns the number of operations with the given name.
Destroy all workspaces for current thread.
Print allocation statistics for current thread.
Processes a trmv call.
Computes the derivative of the given accumulation.
Decodes a threshold from the given encoded and target.
Returns the node name for the given node name.
Invokes a scalar operation with the given dimension.
Asserts that no workspaces are active for the current thread.
Computes the negative log likelihood for a given sigma.
Requests a new tick.
Try to request a toe request.
Releases the toe state.
Returns the current access state.
Process the message.
Initialize the curr data set from a list of examples.
Initializes the host collectors.
Get the device pointer.
Synchronize the host data.
Applies the updater to the given gradient.
Synchronizes the given allocation point to the host.
Creates an array of indices for the given index.
Gets properties for function.
Has place holder inputs?.
Computes the difference of the two vectors.
Formats the given array.
Imports the same diff between the graph and the given graph.
Convert an ndarray to a blob.
Load a complex value from a blob.
Save an ndarray to the database.
Copies the real values from the given array to this array.
Copies the real values of this vector to the real values of the vector.
Computes the Euclidean distance between two numbers.
Assigns the elements of an array to this object.
Returns a copy of this matrix with the specified row indices.
Puts the specified row into this table.
Puts a column into this matrix.
Performs a sub operation on this vector and returns the result.
Adds the specified result to this vector.
Subigate this vector to another.
Add this vector to another.
Assigns the given value to all elements in this vector.
Returns the diagonal elements of this vector.
Returns the eigenvalues of the given matrix.
Returns generalized eigenvalues of two matrices.
Returns the index of the largest element in the array.
Copies x to y.
Computes the product of a vector by a scalar.
Process the message.
Count the number of non-zero weights.
Performs a Reduce operation.
Returns the no-arg constructor for the given class.
Returns the constructor for the given class and arguments.
Invokes the given method handle with the given arguments.
Get an annotation from an array of annotations.
Gets the declared annotation for the given class and annotation type.
Returns true if the given annotation is present on the given class.
Creates a new proxy instance for the given result class.
Load an entity.
Saves the given POJO.
Creates a proxy for the given memcache service.
Returns the metadata for the given entity kind.
Query keys only.
Executes a query and returns the results of the query.
Performs a normal query.
Executes a projection query.
Count the number of keys in the datastore.
Performs a safe partition on the given iterator.
Loads the given keys into the cache.
Formats a message for a path.
Creates the key for the given POJO.
Compares two identity hash codes.
Creates a new Key from a Google Cloud Key object.
Convert a key to a Google Cloud Key.
Returns the kind here for the given class.
Checks if the given type is missing type parameters.
Checks if the given type is a super type of the given type.
Returns the exact direct super types of the given type.
Captures the given type.
Returns the translator for the given type key.
Gets the populator for the given class and path.
Returns true if the given class is an index instruction.
Checks if the given method is of interest.
Returns the declared properties of the given class.
Gets the key metadata.
Returns the cached value for the given key.
Executes the query.
Fetches pending entities.
Adds indexed discriminators for the given class.
Register a subclass of this class.
Get the component type of a collection type.
Gets the map key type.
Creates a new forward path from the given path.
Returns the final path of this path.
Returns a string representation of this node.
Returns the depth of this path.
Put all the given updates into the cache.
Clears the cache for the given keys.
Cache put if untouched.
Gets all cache entries for the given keys.
Returns a set of keys from a collection of buckets.
Sets the incomplete key.
Sets the id of the given POJO.
Gets the raw value of the parent meta data.
Registers a subclass of this class.
Checks if two types have the same common subtype.
Transforms the owner of the given class.
Returns the annotation for the given type, or null if not found.
Adds all the objects in the other session to this session.
Loads a result from the cache.
Executes the current round.
Translates the given raw result into a result cache.
Fetches a set of keys from the datastore.
Loads an entity from the datastore.
Create a raw key with the given kind and id.
Returns the raw value of the given key.
Gets the id value of the given key.
Convert a URL safe key to a Google Cloud Storage Key.
Create a transactionless transactor.
Transact a work to a new transaction.
Transact work once.
Returns true if the given value matches the given conditions.
Returns an objectified version of this class.
Returns a new async datastore with the specified global cache.
Returns the metadata for the given entity.
Allocates a key range for the given incomplete key.
Opens a new objectify.
Closes the stack.
homogenize indexes.
Creates a reference to the given value.
Returns the value associated with this key, throwing an exception if the key does not exist.
Adds the specified value to the specified key.
Returns true if this task has completed.
Generate the conditions for the given if classes.
Executes all the runnables.
Returns the container for the given type and path.
Returns the stat for the given kind.
Unwrap and throw the given exception.
Returns a translator for the given type key.
Gets the root translator.
Creates a translator for the given type key.
Loads the entity from the container.
Gets the property from the container.
Sets the value of the property.
Saves the entity to the database.
Gets the value of the property.
Writes the extensions for the given message.
Writes a category.
Writes a list of categories to the JSON stream.
Processes the given snippet.
Returns an iterable of bids from the given response.
Returns the bid with the given id in the given response.
Updates the bids in the given response.
Remove bids from the given response.
Reads the extensions for the given message.
Returns true if the current token is null.
Registers an RRBJsonReader for the given MsgClass.
Registers a writer for the given type and field name.
Process the snippet processor context.
Processes the fields of the snippet.
Updates the given collection of objects using the given updater function.
Filters the given list of objects using the given filter.
Returns the current name of the given parser.
Starts an object.
Start an array.
Peek token.
Write a boolean field.
Writes a list of strings to a JSON array.
Writes a list of integer values to the given JSON generator.
Writes a list of longs to the given JSON generator.
Writes a list of enums to the given JSON generator.
Resolves a base URL to a target URL.
Fixes a pure query target.
Get the host segments from the given URL.
Returns the host of the given URL.
Get the page from the given URL.
Loads a list of string values from storm conf.
Extracts the configuration element from the given map.
Returns the protocol associated with the given URL.
Generates the warc version and main id.
Extracts the refresh URL from the given value.
Get the metadata for an outlink.
Filters the given metadata and returns the filtered metadata.
Adds a new URL to the queue.
Cleans the name of a field.
Get charset name from byte array.
Get charset from text.
Gets the charset from the meta data.
Attempts to sniff the given content.
Sets the value for the given key.
Returns the first value of any of the given keys.
Get a list of cookies from a list of cookies.
Check if domain match to url.
Returns the cache key for the given URL.
Gets the robot rules from the cache.
Extracts the meta tags from a document.
Called when a tuple is acked.
Returns true if the URL matches the given metadata.
Filters the URL string by replacing all the substitutions in the URLString.
Reads rules from a file.
Process the query elements.
Create a new navigation filters from storm configuration.
Adds a record format to this bolt.
Returns the number of queries that have been sent.
Triggers the queries.
Parse filters from storm conf.
Appends the given node to the current node.
Adds a processing instruction to the document.
Parses a comment.
This method is called when the start of an XML document is reached.
Returns the value of the url field of the tuple.
Trims the text from the end of the text.
Checks if the custom interval is valid for the given status.
Create a new URL from storm conf.
Sets the number of items in the wheel.
Resolves the size and state of the given measure spec.
Set the drawable of the empty item.
Sets the angle of the wheel.
Update the selected position.
Invalidates the wheel item at the specified position.
Converts a raw position to a wheel position.
Update the velocity of the view.
Returns the contrast color for the given entry.
Clamps the given value to the given upper limit.
Writes the coverage files to the given JSON writer.
Returns the contents of this iterator as a byte buffer.
Set a string value.
Makes a 1D array.
Make a char array from a string.
Make a char array from a string array.
Make a char array from a string array.
Get the forecast time interval offset.
Shows the frame.
Shows the frame if it is not iconified.
Makes a size estimate.
Entry point for testing.
Creates a new unit name with the given name and plural.
Creates a new unit name with the given name, plural and symbol.
Returns the plural form of the given name.
Returns true if the given date is included.
Intersects this date range with the given date range.
Extend this range by another date range.
Extends this date with the given date.
Sets the start date.
Sets the end date type.
Sets the duration.
Add a map bean to the menu.
Prints an error message.
Returns the name of the NCD.
Returns a string representation of the parameters.
Opens a DSP file.
Computes the bounds of the given LBB.
Synchronise the slider with the UI.
Computes the maximum chunk size for a list of dimensions.
Registers a directory.
Process events.
Wrap a dataset.
Returns true if the given feature type is ok.
Finds the feature type for the given netcdf file.
Write catalog to HTML.
Convert catalog to HTML.
Gets the user-defined CSS URL.
Get the user head.
Makes a dynamic catalog for the given path and base URI.
Add global services to the catalog.
Initialize the HTTP client with the given credentials provider and user agent.
Returns the content of the given HTTP session as a string.
Sends the given content to the given urlencoded request.
Get the front page.
Create a new catalog.
Extracts the geospatial information from the given gc group.
Get single dataset or by type name.
Checks if two vert coord values are nearly equal.
Creates a new unit id.
Parse an attribute specification.
Reads the top of the file.
Convert two shorts to an int.
Convert a byte array to an integer.
Get the date from the given julian days and msecs.
Makes a valid NetCDF object name.
Returns true if the given string is a valid NetCDF3 object name.
Read the record data for a given section.
Read record data subset.
Fill non-record variables.
Create a TimeStruct from the values of this grads.
Creates a new TimeStruct from the given calendar.
Returns true if the given string contains a time template.
Adds a function to the list of functions.
Returns the boolean function with the given name.
Returns the function with the given name.
Load a new function.
Get the level name of a grid record.
Get the description of the level of a grid record.
Get the level unit of a record.
Returns the projection type of the given grid definition record.
Returns true if the given record is a vertical coordinate.
Returns true if this record is a layer of a grid record.
Create a coordinate transform.
Create a dummy transform variable.
Creates a projection for the given coverage transform.
Main method for testing.
Saves the table state.
Returns a copy of this chronology with the specified time zone.
Writes a count to the output stream.
Write an atomic array to the stream.
Writes a byte array to the output stream.
Writes a byte array to the output stream.
Finish initialization.
Creates a new DateRange from the given DateRange.
Creates a Grib2GDS object from the given template.
Parse the given text and return the number of ddsparses.
Parse a DAP parse string.
Swap the grid header.
Reads the data of a grid.
Prints a list of grid records.
Writes the name to the file.
Write the headers and ss.
Write the list of operations to the file.
Scans all files in the given directory.
Scans a log file.
Returns the packing type for the given grid number.
Find a grid by its parm name.
Returns the RPM for the specified word and nword.
Unpack data.
This method is used to convert a dpugrb data set to a float array.
Unpack grib1 data.
Unpacks data from a Grib2 record.
Prints the grids.
Get the next byte from the buffer.
Creates a new date from the given calendar.
Creates a new Date from a java.util.Date.
Returns a new Calendar instance with the given milliseconds.
Creates a new Date from the given Calendar.
Parses the given UDUnits string into a CalendarDate object.
Returns the difference between two dates.
Create atomic var.
Sets up the request and response.
Escapes a string.
Create a list of slices from a list of ranges.
Unwraps a netcdfFile.
Checks if a list of dimensions contains a variable length.
Computes the effective shape of the dimension set.
Adds the given date to this date.
Multiply this unit by another.
Divides this unit by another unit.
Divides this unit into another unit.
Raises this unit to the specified power.
Converts the given amount to a derivable unit.
Convert this unit to its derived unit.
Converts the given amount to a derivable unit.
Returns the canonical representation of this unit.
Reads the data from the given section index.
Read data from collection 2.
Flattens the time series into a point feature collection.
Find a service by its name.
Returns the gate size for the given datatype.
Get the start of the gate.
Returns the gate count for the given datatype.
Writes the XML representation of a dataset to an output stream.
Returns the preferred size of all the components in the given container.
Verify that the descendant dataset of the given path matches the given filter.
Generate the proxy dataset catalog.
Returns the date unit for the given calendar name and udunit string.
Returns a copy of this date unit with the specified calendar.
Returns a new CalendarDateUnit with the specified period field and base date.
Returns the quantity dimension of this unit.
Checks if the file is valid.
Reads data 1 from the input stream.
Read integer data from a variable.
Reads the variable v2 data into a byte channel.
Calculates the elevation of an angle.
Calculates the step of a given range.
Calculates the AZ value between two shorts.
Calculates the data for a data point.
Calculates the nyquist of a wave.
Make a vertical transform for the given dataset.
Sets the debug flags.
Enables or disables the extend of the index.
Reads the XY values of a grid variable.
Checks if a point is missing in a grid variable.
Get the lat-lon bounding box of this axis.
Finishes the sequence.
Appends a tab character to a string buffer.
Pads the given string to the given width.
Returns a string representation of the specified integer with the specified width.
Returns a string representation of the specified long with the specified width.
Formats a byte size.
Displays the given double and sigfig.
Display a 2D double.
Returns a string representation of the shape array.
Finishes the slice.
Returns a string representation of the constraint.
Compose two slices.
Map a slice to a long.
Dumps the contents of a byte buffer to the output stream.
Returns the earth ellipsoid with the given name.
Gets the type of the earth ellipsoid with the given epsg id.
Decode vlen data.
Extracts a list of URLs from a URL.
Get the text content of a URL.
Filters the tag of the input stream.
Reads data from the variable v2 into a byte channel.
Adds all of the attributes in the given collection.
Removes an attribute.
Removes an attribute from the list of attributes.
Gets offsets in time units.
Add an action source listener.
Get the standard date from the text.
Returns the standard or iso date for the given text.
Returns the date origin of this unit.
Returns the current date in milliseconds.
Makes a date from the given value.
Makes the value of the date in seconds.
Convert a double value to a standard date string.
Get the grid spacing in km.
Adds the dimensions to the netcdf file.
Add a coordinate axis to a file.
Make a projection.
Adds a GD variable.
Adds a system variable with the given name and dimensions.
Makes the LHS of the ComputationGraph.
Makes the PD of the grid.
Makes the mercator.
Set the dx and dy of the grid.
Reads a dataset from the catalog.
Reads the metadata from the given URL.
Returns the level type 1.
Checks if the file is valid.
Writes a byte array to the output stream.
Sets the clear name.
Returns the coordinate name for the given axis type.
Returns the name of the coordinate for the given axis type and dimension.
Builds the XML representation of this message.
Builds the DAPException object.
Break up the levels of a level variable.
Makes a dimension based on a list of values.
Create new variables.
Makes a coordinate axis from a reference to a time variable.
Bit-Shave function.
Writes a GribToNetcdfWriter to a file.
Wrap a NetcdfDataset.
Opens a file at the given location.
Clears all the coordinate systems.
Find the coordinate axis of the given type.
Find the coordinate axis with the given full name.
Find the coordinate system with the given name.
Find a coordinate transform by its name.
Returns true if any of the given enhancers are needed.
Sets the values of a variable.
Sets the values of a variable.
Creates a new array with the given values.
Returns the offset of the index.
Returns an existing file or null if it does not exist.
Returns a list of EsriFeatures that intersect the specified bounding box.
Discretize a vector.
Adds a metadata object to the list of metadata objects.
Adds the documentation for the given type and content.
Remove all the documentation of the given type.
Returns the maximum number of bytes in the buffer.
Checks if the given ncfile is a mine file.
Returns a list of convention names from a conv att value.
Build a convention attribute.
Builds the coordinate systems.
Finds all coordinate axes in the dataset.
Finds all coordinate systems in the dataset.
Makes all coordinate systems of the given dataset.
Makes the coordinate systems maximal.
Returns true if the given variable is a coordinate axis for the given enhanced variable.
Subset the given dataset.
Sets the filter for the top dataset.
Mark a dataset as read.
Initializes the context once.
Counts the number of values for the given name and value.
Adds a name and symbol to the namespace.
Compares this row with the specified column.
Compare two boolean values.
Pass all reserved attributes to the given node.
Checks if the given time range is valid.
Registers a class with DAP.
Registers a new DSP class.
Returns true if the given class is registered.
Unregisters a class from the registry.
Get the forecast time interval size in hours.
Get the offset of the forecast time interval.
Returns the vert coord type for the given code.
Sorts this node in ascending order.
Find variable with attribute.
Find variable with attribute value.
Returns the name of the variable with the given attribute value.
Find variable with attribute value.
Finds a structure that is a nested structure.
Checks if a netcdf3 dataset has a record structure.
Returns the literal value for the given key.
Returns the feature type for the given key.
Returns the name of a variable.
Returns the coordinate value at the specified position.
Returns the longitude value of a pair.
Returns the values of the coordinates.
Returns a new DSection with the specified range.
Finds the index of the closest point in the given run.
Returns the name of the sort.
Add an action to this menu.
Returns the first match for the given path.
Main entry point for the projection manager.
Returns the index of the first failure in the given byte array.
Add a source buffered image to the cache.
Report the size of the cache.
Stops the background loading process.
Stops the background loading for the specified exemption url.
Get the HTTP GET method.
Make a mock http method.
Returns the next random float value of the specified type.
Returns the next count.
Reads the data from the given section.
Returns the file system provider for the given URI.
Reads the station table from the level2 volume scan.
Returns the index of the first occurrence of the specified gr.
Remove the data variable with the given name.
Convert HGT height to meters.
This method is used to read the contents of a grid.
Sets the number of colors to use.
Calculates the transform for the given screen and world.
Converts a URI to an AuthScope.
Finishes the horiz coord system.
Returns true if this factor is reciprocal of the given factor.
Get the catalog for a directory.
Returns the index of the first occurrence of want in the array.
Reads the metadata content from the given URL.
Read metadata content.
Adds the metadata content.
Validates the metadata content.
Reads a catalog gen configuration element.
Reads a dataset source element.
Read a dataset namer element.
Read a dataset filter element.
Reads a result service from a result service element.
Create the element for the cat gen config.
Create the XML element for a dataset source.
Create the element for the dataset namer element.
Create the XML element for a dataset filter.
Create the result service element.
Returns true if the given flag name is set.
Construct a new menu.
Adds the parameters for the given table.
Makes a parameter from a list of words.
Returns the parameter with the given name.
Reads the contents of the given input stream as a string.
Reads the contents of an input stream into a byte array.
Replaces all the ensemble names in the filespec with the specified ensemble name.
Set the station information.
Accepts the given string buffer.
Get a bitmap from the file.
Sets the netcdf file.
Sets the debug flags.
Parses a name into a name pieces object.
Returns true if the given DStruct is a Group.
Get the netcdf strlen dimension.
Returns the shared dimension for the given dimension in the given group.
Construct the dimensions of an array.
Returns true if the given base type is an unsigned integer.
Reads data from the database.
Get an icon from the classpath.
Get an image by its full image name.
Create a custom cursor for the specified image.
Read data fill.
Read data from positioning data stream.
Read data fill.
Makes a primitive array of the given size.
Converts a byte array to a UTF-8 array.
Convert a char array to a UTF-8 string.
Converts a byte array to a char array.
Reads a section from the given section spec.
Create an array structure for a section.
Returns the string representation of the given member.
Returns the structure of the member at the given index.
Get the array of members of this member.
Computes the members of a variable.
Adds the dimensions to the netcdf file.
Normalizes the given path.
Adds a dataset to the cache.
Add a dataset scan to the crawlable dataset.
Finishes the scan.
Make the datasets for the given cancel task.
Get the typical dataset.
Create a dataset from the cache.
Puts the resource control for a dataset.
Adds a point to the polygon.
Returns the upper bound of this bounding box.
Returns the lower triangular value of this bounding box.
Validates the input.
Returns true if the given dataset matches this one.
Add all point features from a dataset point.
Parses a constraint.
Evaluate the clauses of this variable.
Prints the constraint information.
amends the given ODL file to the given group.
Set the shared dimensions of a variable.
Check if the given list of unknown dimensions are in the list of unknown dimensions.
Find the group with the given name in the given parent group.
Reads the Xlink content from the URL.
Returns the standard URI for this dataset.
Set the projection class.
Adds a component to the layout.
Invalidates the layout for the given container.
Remove a layout component.
Returns the minimum layout size for the given container.
Layouts the given container.
Returns true if the coordinate system is a CUDA coordinate system.
Get the maximum radial value for this axis.
Convert the earth to sat.
Converts a point from sat-to-earth coordinates.
Returns the geos between the lamda goes and theta.
Convert a Geomajas scan geometry to the sweep angle axis.
Convert a sweep angle axis to a scan geom string.
Sets the runtime coordinates.
Write a point obs dataset to a file.
Rewrite point feature dataset.
Returns the array sequence for the given member.
Returns the full name of this node.
Returns a unique identifier for the resource.
Get the access for the given service type.
Find a dataset by its name.
Returns the catalog of the parent catalog.
Gets the metadata for the catalog.
Find a service by its name.
Returns the variables for the given vocabulary.
Find all catalog references in a list of datasets.
Escapes the path for a URL.
Add stagger to an array.
Extrapinterpolate a double array.
Computes the rho of a given latitude.
Returns the detail information.
Create a structure for the given part.
Makes a missing variable.
Create a variable for a parameter.
Add global attributes.
Returns the size of the stn variable with the given name.
Returns the 1-D array of the specified type.
goto state.
Parse a syntax error.
Reduce the print of a rule.
Reads a byte array from the stream.
Reads an error message.
Reads a number of bytes from the stream.
Reads a header from an input stream.
Convert a string to a Date.
Reads a list of records from the specified URL.
Transfers a group from one file to another.
Returns the stn file for the given location.
Opens the file at the given location.
Returns the index of the first occurrence of the given index.
Returns the index of the element at the specified index.
Creates all runtime collections.
Sets the edit value.
Returns the data type for the given format.
Computes the Euclidean distance between two points.
Cleans up the given unit.
Cleans a name.
Returns true if the given string is a unitless string.
Creates a notes object for the given sort and dsp.
Returns the variable id for the given note.
Parse the das.xml file.
Finds a child node with the given name.
Find data v.
Finds a child by its index.
Gets the parent group.
Returns the dimension at the specified index.
Returns the index of the dimension with the given name.
Returns the value of the units attribute.
Returns the shape as a section.
Returns a slice of this variable.
Sets the enum type definition.
Read an array of ranges from the file.
Reads a scalar string.
Reads the contents of the file into an array.
Reads the contents of a section into an array.
Writes a CDL formatted string.
Returns a string representation of this dataset.
Sets the data type.
Sets the dimensions of this shape.
Resets the shape.
Set the dimensions of this group.
Resets the dimensions of this shape.
Sets the dimension at the specified index.
Sets the cached data.
Returns a list of all dimensions of this dimension.
Sets the bounding box.
Sorts the grids in the order they were added.
Returns a list of all datasets contained in this dataset.
Returns true if the given path ends with any of the synextensions.
Open the CDDD file.
Builds the CDL file.
Builds the sequence types for the given CDM variable.
Builds the dimensionrefs for the given dapvar.
Finds a matching enum for the given typedef.
Get the core dimensions of a list of dimensions.
Scans a bufr file.
Process a bufr message as a dataset.
Sends a POST request to the server.
Get the affine transform.
Returns true if the map area should be rotated, false otherwise.
Get the map area.
Convert the world coordinates to screen coordinates.
Pan the map.
Zooms to the specified range of pixels.
Recalc the bounding box.
Adds a listener to the list of listeners.
Removes an object from the list of listeners.
Sends an event to all registered listeners.
Sends an event to all registered listeners.
Prints the given command to the given writer.
Print variable data.
Prints a variable data section.
Writes the structure data to the given writer.
Prints an array as plain text.
Prints an array to the given writer.
Writes a NCML file.
Read a double attribute.
Add a parameter to the transformation.
Reads an object from the DapType.
Returns true if this record is positive up.
Returns true if this unit is compatible with the given unit.
Makes a label for a quantity.
Sets the bit offset.
Convert a number of bits to a ULONG.
Convert a number of bits to a 32 bit integer.
Opens a connection to the server.
Returns a new instance of the JAR file.
Get the complete CE string.
Convert a projection point to a lat-lon point.
Get the catalog of the idv dataset.
Returns a date range that is compatible with the given date range.
Checks if a random access file is valid.
Handles the satellite information.
Handles the sensor information.
Reads the root element from the given location.
Cleans the character data from the given text.
Unescapes a string.
Escapes the given string for use in a URL query.
Unescapes the given string.
Decodes a backslash-encoded string.
Escapes the given string for use as a backslash.
Add the global attributes for the feature type and history.
Swaps the specified byte array at the specified offset.
Swaps the contents of the given byte array at the specified offset.
Swaps a double value from a byte array at a specific offset.
Swap the elements of a float with another float.
Swaps two double values.
Convert a short value to a byte array.
Convert an integer to a byte array.
Convert a long value to a byte array.
Apply a subset transformation to this vertical axis.
Writes the last modified date to an XML string.
Makes a new array with the given values.
Starts the XML server.
Writes the feature list to a file.
Adds the levels of the grid records.
Adds the dimensions to the netcdf file.
Adds the given netcdfFile to the netcdfFile.
Finds the coordinate transform for the given group.
Returns the index of the first level of a grid record.
Exits the timer.
Returns the file at the given location.
Returns the existing file or null if the file does not exist.
Displays the contents of the cache.
Cleans the cache for the given directory.
Calculates the bearing between two points.
Calculates the bearing between two points.
Entry point for testing.
Find a point in the earth.
Find a point in the world.
Find a point in the world model using the default earth, lat1 and lon1.
Loads the picture in the thread.
Loads the picture from the specified URL and rotation.
Loads the picture from the file.
Stop the loading of the image.
Stops the loading except for the given exemption URL.
Returns the size of the image.
Sets the buffered image.
Returns the standard URI for the dataset.
Transfers the given data descriptors from one list to another.
Count the number of bits in this data descriptor.
Compares two data descriptors for equality.
Loads the header from the stream.
Loads the data from the stream.
Returns the field with the given name.
Returns the double values of the field with the given name.
Returns an array of strings for the field with the given name.
Returns the boolean values for the field with the given name.
Returns the name of the field at the specified index.
Returns an array of field names.
Main method for testing.
Returns a map of all the dap attributes.
Sets the specified attribute.
Remove an attribute.
Get the group.
Returns the container of this node.
Gets the escaped short name.
Returns a list of all the children of this node.
Gets the path of the group.
Computes the fqn of this node.
Builds the DAPDataset.
Associates the specified collection with the specified key.
Returns the bean with the specified key and default value.
Returns the object for the given key name.
Reads the data from the file.
Print this dataset.
Prints a compound instance.
Writes the given element to a string.
Writes the given element to the given file.
Writes the given element to the given output stream.
Writes the given element to the given writer.
Create a dimension element.
Transform an attribute container to a coordinate.
Get an attribute as an int array.
Creates a unit with the given symbol and quantity.
Creates a new unit definition with the given name and symbol.
Create the base unit database.
Returns a singleton singleton.
Finds and returns the coordinate of the target element.
Finds the index of the closest coordinate in the axis.
Returns a subset of the values in the axis.
Open a feature dataset.
Open a feature dataset.
Annotate a dataset.
Reads data from a file.
Assemble the URI from the given set of parts.
Returns the canonical form of the given string.
Normalizes the given string.
Finish initializing the dataset.
Returns the value associated with the given key.
Associates the specified value with the specified key in this map.
Returns the current date.
Print the XML representation of a DAPNode.
Prints a name and value pair.
Returns true if the given attribute is a special attribute.
Prints the dimrefs of a variable.
Checks if the given file is valid.
Set area directory attributes.
Set the attributes for the nav block.
Returns the calibrator type for the given calendar name.
Set the calendar type attributes.
Finds the coordinates of the given dataset.
Find the name of the axis with the specified type.
Find a coordinate axis by type.
Find a coordinate by type.
Find the dimension of the axis with the specified type.
Finds the best coordinate system for the given dataset.
Finds the dependent axis for the given axis type.
Returns the variable with the given name in the given row.
Reads a marker from the given data stream.
Writes a marker to the data output stream.
Main method for testing.
Returns the string representation of the given member.
Get the parameter list.
Set the list of stations to display.
Sets the selected station.
Redraws the image.
Reads a rectangle from a stream.
Writes the bounding box of this rectangle to the specified output stream.
Adds all objects from the given DB to this DB.
Adds the given unit to this unit set.
Adds a symbol to the unit.
Returns the unit with the given id.
Add a new unit by name.
Add a new unit by its symbol.
Adds a unique unit to the map.
Add the current look and feel to the given menu.
Find a record by drspos.
Reads a single object from a dataset.
Serializes this variable to a data output stream.
Creates a copy of this view.
Opens a feature dataset.
Opens a feature dataset.
Opens a new dataset.
Annotate an inv dataset.
Add a new partition.
Create a new GribCollection.
Get an instance to match on dataset name.
Get an instance to match on a dataset path.
Writes the query capability XML to a file.
Read the structure data.
Set the picture of this sprite.
Sets the buffered image.
Zoom to fit.
Paints the component.
FTOI - FTOI - FTOI - FTOI - FTOI
Tg Tg Tg Tg Tg Tg Tg Tg Tg T
This method converts an array of ints to a TANGO string.
Get the day of the day of the year.
Returns a string representation of the ccrd of the given IVCord.
Convert an integer array to a swp4 array.
Get the packing name for a grid.
Returns the data type for the specified typrt.
Read data from an input stream.
Externalizes the given output stream.
Returns the tag for the given code.
Get the next image.
Returns the number of elements in the specified type.
Returns the sum of the elements in an array.
Sets the bounding box to the specified width and height.
Sets the overlap.
Clears the grid.
Marks the specified rectangle as clear.
Finds the intersection of this rectangle with the given rectangle.
Finds the intersection of this rectangle with the given point.
Finds the closest point in the grid.
Returns the squared distance between the specified point and the specified point.
Get or create a unit.
Search for a service type from a fragment.
Returns the service type path for the given URL.
Decode the path extension.
Checks if the given location is valid.
Send data to a section of a variable.
Returns the suffix of the given FQN.
Returns the prefix of the given FQN string.
Locates a file.
Locates a relative path.
Extracts a byte array from a byte buffer.
Get the structure path.
Returns null if the given path is null.
Joins an array of strings using the given separator.
Returns true if the path contains a drive letter.
Returns a list of protocols for the given url and breakpoint.
Convert an index to a list of slices.
Convert an offset to a list of Slices.
Checks if a list of slices is contiguous.
Checks if the slices is a single point.
Convert a list of slices to an index.
Read data from an input stream.
Set the station information.
Read feature collection configuration from catalog.
Update the list of groups.
Finds a variable by its name.
Returns the axis type of the given variable.
Returns the stat type for the given time range indicator.
Subset the bounds of the lon axis.
Returns a list of all the ranges.
Sets the default values for the given properties.
Returns the session id.
Set the maximum number of redirects.
Sets whether sessions should be used for this request.
Closes the connection.
Set authentication and proxy.
Track a session.
Sets the global credentials provider.
Validates the URL string.
Creates a new Index instance for the given shape.
Computes the strides for the given shape.
Returns the index section for the given ranges.
Reduces the index by one.
Reduces the index by dimension.
Transposes the given index to this index.
Returns a copy of this index with the specified dimensions permuted.
Returns an index iterator for the given array.
Returns the current element.
Set the index.
Sets the value of the specified dimension.
Sets this index to the given values.
Returns the name of the time interval.
Makes a CalendarDateRange for the given calendar.
Makes a list of date-time headers.
Makes the parameters for the given part.
Returns a list of all the stations in the file.
Returns a list of key names for all keys in the station.
Returns the list of dates.
Finds the index of the station with the given ID.
Gets the file type.
Increases the depth by the given number.
Sets the indent level.
Read or create a GribIndex from a single file.
Add a directory scan.
Returns true if the scan is needed.
Scans for the first time.
Sets the debug flags.
Adds a new variable.
Writes the given task to the file.
Validates the given XML object.
Returns a string representation of the constraint.
Sets the original variable.
Reads the data from the given section.
Recursive method to check if all variables need conversion.
Convert an array structure to an array structure.
This method converts members to variables.
Finds a variable from org name.
Returns true if the variable has data.
Enhances all variables in this dataset.
Check if resource control is ok.
Creates an empty sequence from the given sequence.
Creates an array sequence from the given parameters.
Create a sequence from the parameters.
Add vertical coord attribute.
Read an XM catalog from an XML file.
Reads an inv catalog from an XML string.
Reads an inv catalog from an XML string.
Writes an XML document to the specified output stream.
Returns the metadata converter for the given key.
Returns the dimensionless unit name.
Multiply a unit by another.
Divides a unit by another.
Converts an array of floats to a derived unit.
Returns true if this unit is compatible with the given unit.
Write a Geomajas feature to a string.
Writes a point to XML.
Writes a line to XML.
Writes a polygon.
Returns the list of sub-nodes of the given node.
Pass all reserved attributes of a node to the dap.
Returns a subset of a variable.
Create a new ma factory from an array structure.
Set the data array for a member.
Convert a structure to a mashape.
Returns the geometry type with the given name.
Make a time series feature for a station.
Compiles the given Ceast AST.
Compile a filter expression.
Redefines the dimension of the given node.
Creates a view of the given index.
Returns true if the specified bounding box is contained in this bounding box.
Extend the bounding box with the given point.
Extend the bounding box with the given bounding box.
Intersects this rectangle with the given bounding box.
Add two arrays together.
Checks if two arrays are conformable.
Returns true if the shape a and shape b are conformable.
Convert an array to an array of data type.
Copy the contents of the given array to the given result.
Copies all boolean values from the given array into the given array.
Copies the contents of the given array to the given result.
Get the minimum and maximum value of an array.
Sets the value of all elements in the array as a double.
Creates a new catalog builder.
Factory method for creating a projection instance.
Unescapes a DAP ID.
Decodes a URL-encoded string.
Unescapes the given URL.
Escapes the given string for use as a backslash.
Unescapes a backslash escaped string.
Tokenizes the given escaped name.
Returns the index of the given character in the given escaped name.
Convert backslash to dap string.
Read an atomic scalar.
Get the path of a cursor.
Returns the value of the given property in the given class.
Returns the class of the given component.
Compiles the dataset and databuffer.
Compile a structure array.
Compile a structure.
Compile a sequence array.
Compile a sequence.
Reads a little-endian 32-bit integer from the stream.
Returns the field with the given name.
Returns the value of the field with the given name.
Sets the value of a field.
Add a field to the cursor.
Add a check box field.
Adds a date field to this record.
Adds a double field to this field.
Adds a int field to this field.
Adds a password field to the model.
Adds a text field to this field.
Add a text combo field.
Add a text area field.
Adds a heading component to the layout.
Adds a component to the layout.
Adds an empty row to the layout.
Find the active frame.
Returns the spacing of the cell ranges.
Returns an array of factors.
Computes the multiplication factor for the given dimension.
Returns an array of factors with the specified power.
Returns true if this dimension is reciprocal of the given dimension.
Returns true if all the factors are dimensionless.
Creates a new Grib1ParamTables instance.
Factory method to create a new Grib1ParamTables object.
Adds a parameter table lookup.
Add a parameter table to the list of standard tables.
Raises a unit to the specified power.
Converts an array of floats to an array of floats.
Initialize the unit table.
Create a vertical variable.
Returns the name of the file, or null if there is no name.
Grabs a short from the given byte array at the given offset.
Grabs an integer from the given byte array at the given offset.
Read a float from the given byte array at the given offset.
Grabs a double from the given byte array at the given offset.
Add a unit alias and name to the unit.
Adds a symbol to the unit.
Creates a converter for the given units.
Sets the structure data.
Sets the point feature data.
Draws this shape in the specified graphics context.
Returns an iterator over the shape list.
Processes the given input stream.
Read a buffer from an input stream.
Read more bytes from the stream.
Read a number of bytes from the input stream.
Skips the specified number of bytes.
Adds the dimensions to the netcdf file.
Returns the index of the coordinate in the grid record.
Checks if the given file is a valid file.
Initializes the header parser.
Reads data from a section.
Read one row data.
Creates a new instance of this class from the given dataset.
Create the base type for the given variable.
Set the area of the map.
Set the map area of the map.
Sets the latitude and longitude center of the map.
Sets the projection impl.
Add the actions to the given menu.
Redraws the redraw timer after a delay.
Sets the size of the screen.
Sets the selected state of the preference.
Returns the double value of the variable at the specified offset.
Reads a double value from the given index.
Reads an object from the given index.
Returns the name of the Gini ID for the given entId.
Reads a scaled integer from the buffer.
Returns the parameter with the given name ignoring case.
Swaps the byte order.
Get time steps per file.
Returns the file name for the given eIndex and tIndex.
Gets the file names.
Gets the DDF file name.
Returns the full path to the given file.
Adds a chsub to the list.
Convert a reference date to an intv value.
Reads a random WMO file.
Returns a copy of the uncompdata array at the specified offset.
Pcode 12n13n14 n14 n14 n14 n14 n14 n14
Pcode 25.
Checks the message header.
pcode 5.
Pcode 128 bits.
Returns an array of levels for the specified level.
Returns the dualpolation levels of the given short array.
Adds a new variable to the dataset.
Adds a parameter to the dataset.
Compresses a byte buffer into an uncompressed byte array.
Returns the number of unsigned shorts in the given byte array.
Returns the int value of the given byte array.
Convert a byte array to an object.
This method is called when a DAP request is received.
Gets the request state.
Sends an error message to the client.
Moves the specified point to the end of this line.
Stretch a point.
Formats the given text to a date only format.
Replaces all data variables in the given structure.
Ensures that the memory array size is okay.
Reads a 32 bit integer from a file.
Reads a 32 bit unsigned integer from the file.
Reads a 32 bit integer from a file.
Reads a 32 bit integer from a file.
Reads a 32 bit integer from a file.
Reads a float from a file.
4-bit floating point number.
Reads a 32 bit integer from a file.
Count the number of bits in a bitmap.
Creates a copy of this projection.
Returns the WKS name and origin latitude.
Escapes the given string for use in HTML entities.
Unescapes the given string.
Splits a string by a backslash.
Makes a FBRC inv.
Returns the special service name for the path.
Returns the number of projected components.
Gets the reference time.
Creates a new bb object from the given section.
Main entry point for the indexer.
Read a grib1 record from the index.
Checks if the given ncdf file is a mine file.
Transforms a UTM coordinate to a UTM coordinate.
Reacquires the area.
Returns true if the given date is before this date.
Returns true if this date type is before the given date type.
Returns true if the given date is after this date.
Sets the value at the specified index.
Add a coordinate system to this variable.
Sets the value of the units attribute.
Returns the string representation of the units.
Initializes this object with the specified read mode and preferences.
Reads the catalog from the catalog file.
Processes a list of datasets.
Reads the cats in a directory.
Returns true if lon is between lon beg and lon end.
Returns a string representation of the given latitude.
Convert a longitude to a string.
Compares this quantity to another.
Returns the selected dataset.
Set the selected dataset.
Creates a new TreePath from the given node.
Opens all the items in the catalog.
Sets the catalog location.
Sets the catalog.
Finds the alias for a variable in the dataset.
Writes a 32-bit integer to the stream.
Writes a string to the stream.
Reads characters from the input stream.
Sets the debug flags.
Adds a member to this group.
Hide a member.
Returns a list of the names of all members of this class.
Finds a member with the given name.
Reads a bitmap from the given file.
Restore the state of the table.
Returns an iterator over the selected rows.
Returns the index of the model in this table.
Returns the array representation of a member.
Returns the scalar value of a member.
Returns the double array representation of the given member.
Gets the scalar float value of a member.
Returns an array of float values for the given member.
Returns the scalar byte value of the member.
Returns the byte representation of the given member.
Returns the scalar int value of the given member.
Returns an array of ints for the given member.
Returns the scalar short value of the member.
Returns an array of shorts for the given member.
Gets the scalar long value of the given member.
Returns an array of long values for the given member.
Returns the scalar char value of the member.
Returns the char array for the given member.
Do one dataset.
Create a copy of this dataset node.
Transfers the metadata from a dataset node to this node.
Returns the metadata for the inheritable dataset.
Adds a record to the list of records.
Shows the missing values.
Returns the number of missing records.
Finds a record for the specified ensemble and time.
Returns a string representation of this grid.
Returns the long name of the first record.
Subset this axis by the specified number of intervals.
Checks if two byte arrays are equal.
Parses a DAP dataset from a document.
Processes the attributes of a dataset.
Add a list of coordinates to this partition.
Sets the Gaussian latitudes.
Parses a variable selector.
Returns a string representation of a section spec.
Check if the bounding box is inside the bounding box.
Closes the connection.
Executes the request.
Identify encoding station.
Matches the axis type and dimension.
Set the stream to be used.
Reads the next character from the stream.
Starts the task.
Parses the given string as a URI.
Excludes the given URI from the given URIs.
Returns null if string s is null.
Joins a prefix and suffix with the given prefix.
Accepts a crawlable dataset.
Copy information from another GribCollection to this one.
Returns a list of all the filenames.
Sets the index file location.
Gets the index file path in cache.
Returns the number of ncounters of all counters in this set.
Add a global attribute.
Adds a global attribute with the given name and values.
Delete a global attribute.
Rename a global attribute.
Adds a variable attribute.
Adds a variable attribute.
Delete a variable attribute.
Rename a variable attribute.
Makes the file sub-type of the file.
Write the headers and bb.
Writes the members of this geometry.
Writes the XML representation of the station obs dataset.
Returns the XML representation of the station collection.
Writes a DSR to the stream.
Sends a byte array to the client.
Writes an error response.
Closes the connection.
Flushes the output stream.
Returns true if the specified number of elements is contained in this vector.
Returns the element at the specified index.
Shifts this range to the specified origin.
Reads the data from the file.
Reads data from a layout.
Returns a new primitive vector that is a subset of this vector.
Sets the values of this GDSParameter.
Makes a double array from an int array.
Get the dataset boundaries.
Checks that the requested variables are present in the dataset.
Get a dataset source structure by its name.
Get the resource path for the requested dataset.
Makes the vertical dimensions of the grid.
Reads a PIB file.
Finishes the job.
Transfer the local metadata from the parent dataset to the local metadata.
Transfers the metadata from the given dataset to this dataset.
Transfers the metadata from the given dataset to the given target.
Sets the contributors.
Adds a dataset at the specified index.
Remove a dataset from this catalog.
Replaces all datasets in this catalog with the given one.
Adds a service to the registry.
Remove a service from the registry.
Set the list of services to be local.
Remove the local metadata.
Returns the user property for the given key.
Validates the input.
Returns a list of the descriptors.
Construct the server path.
Gets the capabilities.
Get a feature.
Check the parameters for an error.
Handle the http handler.
Returns the capabilities for the given URL.
Returns the number of bytes in this buffer.
Returns the last modified time of the object.
Returns the filename of a file.
Returns the contents of a string.
Set the response content length.
Gets the request URI.
Gets the request path.
Returns the URL portion of the request.
Returns the value of the parameter with the given name ignoring case.
Saves this split to the file system.
Writes the contents of a directory to a file.
Create a nested bit counter.
Count the number of bits in this data descriptor.
Appends a line to the end of the list.
Create a document for the station collection.
Get the capabilities document.
Get the record at the given coordinates.
Returns the coordinate at the specified index.
Adds an item to the list.
Handles the given exception.
Returns the step between the first and last position.
Get the gen process map.
Checks if the given endpoint is a CDMRF endpoint.
Set the value of this set.
Factory method to create a grib1 grid with center and grid number.
Copy bytes from the input stream to the output stream.
Reads the contents of the given InputStream and returns it as a String.
Reads the contents of the given InputStream into a byte array.
Writes the contents of a string to an output stream.
Copy the contents of the given file to the given output stream.
Copy raf b.
Copies a directory tree from one location to another.
Reads the contents of a file into a byte array.
Reads a file and returns it as a String.
Writes a string to a file.
Writes a string to a file.
Writes the contents of the input stream to a file.
Parses an exception handler.
Handles the DAP2 exception handler.
Handles a bad URL request.
Get the catalog for the server.
Prints the catalog information.
Prints the status of the server.
Prints a bad URL.
Gets the reference date.
Read vlen data.
Read a ncml collection from a string.
Open a ncml collection reader.
Attempts to allow characters in a string.
Cleans up a string from a byte array.
Returns a string that contains only letters or digits.
Filters a string with 7 bits.
Makes sure the given name is a valid CDM object name.
Returns the index of the first occurrence of the second occurrence.
Pads the given string with the leftmost length of the given string.
Pads the given string to the right of the desired length.
Remove a substring from a string.
Removes the specified character from the end of the string.
Removes the specified character from the end of the string.
Collapse whitespace characters in a string.
Replaces all occurrences of the given string with the given string.
Replaces all occurrences of a character in a string with another string.
Replaces all occurrences of the given pattern with the given value.
Substitutes the given string with the given string.
Replaces all occurrences of the first occurence of the first occurrence of the first occurrence of the second
Removes all characters in the given string from the given string builder.
Replaces all occurrences of the given character in the given string with the given character.
Replaces all occurrences of the given string with the given string.
Substitutes all occurrences of match in sbuff with subst.
Trims the given string and returns the result.
Process a collection update event.
Checks the state of the collection.
Updates the given collection.
Gets the list of datasets.
Releases all resources held by this instance.
Creates a deep copy of the given structure data.
Copy the contents of the given array structure to the given array structure.
Copy a structure to an array.
Copies the given structure data into a new array.
Copies the structure data to a byte array.
Get the forecast time interval size in hours.
Create a new section from a range.
Creates a new TableAnalyzer for the given table.
Analyze the feature type.
Synchronise the grid data.
Get the Gaussian latitudes for a given type.
Swaps the contents of the specified byte array at the specified offset.
Swaps a float value from a byte array at a specific offset.
Swaps the character at the specified offset in the specified byte array.
Finds the coordinate axes for the given dataset.
Add a parameter to the coordinate transform.
Returns the common parent group of this group and the given group.
Returns true if this group is the same as the given group.
Sets the parent group.
Adds a dimension to this group.
Adds a dimension to this group if it does not already exist.
Adds a group to this group.
Adds an enumeration.
Adds a variable to the list.
Removes the dimension with the given name.
Makes a group relative to the given path.
Convert a DRS attribute name to a DRS attribute name.
Print the das.
Returns the variable with the given name.
Write a grid to the file.
Replace missing values in a float array.
Replace missing values in an array with a byte array.
Get the xstart of a longitude.
Writes a GeoReference array to the output stream.
Writes the response to the servlet.
Creates the top index file from the given configuration.
Gets the type of the collection.
Update the grib collection.
Update leaf collection.
Creates an immutable GribCollection from a GribDataFile.
Create an immutable GribCollection from a data file.
Returns true if the given URL matches the given pattern.
Adds a triple to the dataset.
Find a triple by key and url.
Set the well-known triplestore.
Inserts a triple into the triplestore.
Returns a list of local datasets.
Find a dataset by its name.
Set the projection for this feature set.
Returns an iterator over the shapes in the normal2device.
Makes a shape list from an iterator.
Compares this ID with the given string.
Starts a progress monitor task.
Checks if the given collection index file needs to be updated.
Normalizes the result according to the Euclidean norm.
Sets the value of the element at the specified index.
Returns the structure data at the specified index.
Copies all structures from the given member to the given result.
Returns the scalar value for the given member.
Convert a scalar number to a double.
Convert a scalar integer to an integer.
Returns the float value of the given member.
Returns the byte representation of the given member.
Returns the short value of the given member.
Get the char value of a scalar member.
Returns the string representation of the given member.
Returns the array structure of the given member.
Returns the array sequence for the given member.
Get an array object from a member.
Returns the minimum and maximum value for the given value.
Evaluate a CeastExpression.
Returns a string representation of the constraint.
Returns true if the given node is references to this dataset.
Evaluates the Ceast filter against the given variable and sequence.
Returns the number of fields in the structure that are part of the expansion.
Computes the enums.
Computes the groups.
Compile a CE string into a CE string.
Returns true if the file is valid.
Makes the actions system.
Returns a random byte order for the given kmachn.
Sets the byte order.
Finds the key for the given name.
Finds the file header with the given name.
Returns the file header for the given file name.
Prints the list of parts.
Get the data pointer for the specified part.
Reads a word from the input stream and returns the result.
Read a string from the input stream.
This method is used to unpickle a dm object.
Returns a string representation of the specified bits.
Writes the given byte channel to the given channel.
Parse the base element.
Parse a grid element.
Parse aliases.
Decodes a list of key descriptors.
Replicates a list of data descriptors.
Returns the filename of the dataset.
Get the feature type.
Checks if two floats are almost equal.
Returns true if the given node is references to this node.
Parses a unit specification.
Checks if a variable is tiled.
Makes the best coordinate time from the complete time.
Convert a LatLng to a ProjectionRect array.
Shows all time series.
Creates a map from a list of attributes.
Returns the array of values.
Returns the numeric value at the given index.
Write the CDL to the given formatter.
Sets the string value.
Sets the values in the given array.
Scans the input stream.
Generate the proxy ds resolver catalog.
Schedules a write operation.
Sets the thredds datatype.
Jump to thredds datatype.
Prepares the gui.
Create the tools frame.
Returns the full name of the given axes.
Returns the axis that is the lesser of the two axis.
Finds the axis with the given type.
Returns the projection of this transformation.
Returns true if the projection is a GeoXY projection.
Returns true if any of the coordinate axes are regular.
Checks if a subset of a collection of dimensions is contained in a set.
Check if the list of axis names contains any of the given axes.
Returns true if the given axis name is in the list of axis names.
Check if a list of dimensions contains a domain.
Check if a list of axis types contains any of the axis types.
Returns true if this axis contains the axis of the given type.
Clones this node.
Returns the selected bean.
Returns the list of selected beans.
Returns a list of the selected cells.
Sets the selected bean.
Restore the state of the table.
Creates an unknown unit with the given name.
Closes the stream.
Returns true if the given variable is one of the extras.
Returns true if the given variable is a coordinate.
Finds the coordinate variable with the given name in the table.
Adds the data variables for the given table.
Add a parent join to the cursor.
Make a station feature.
Create a node map.
Returns a factory for the given unit name.
Creates a new SimpleUnitFactory with the given name and exceptions.
Checks if two unit strings are compatible.
Checks if the given unit is compatible with the date reference unit.
Returns true if the given string is a time unit.
Returns the conversion factor for the given unit string.
Converts the given value to the given unit.
Returns true if this unit is unknown.
Returns the value of this unit.
Creates a new relation op clause.
Creates a new boolean function clause.
Create a new clause with the given function name and children.
Make a grayscale image from an array of arrays.
Crawls a catalog.
Crawl a dataset.
Crawl the direct datasets.
Gets the file or cache.
Gets an existing file or cache.
Enables or disables debug leaks.
Returns a list of all the files in the directory.
Closes the cache.
Seeks to the specified position.
Flushes the buffer to the file.
Reads an integer from the stream.
Read n bytes from the input stream.
Reads an integer from the stream.
Read n bytes from the input stream.
Read a number of bytes from the input stream.
Read a float array from the stream.
Read a number of doubles from the stream.
Read a string from the stream.
Reads the maximum number of bytes from the input stream.
Write an array of boolean values to the stream.
Writes an array of shorts to the stream.
Writes a range of characters to the stream.
Writes an array of ints to the stream.
Writes an array of longs to the stream.
Writes an array of floats to the stream.
Writes an array of doubles to the stream.
Writes a string of bytes.
Writes a byte array to the output stream.
Search for a match in the file at the end of the file.
Appends a query to the given string buffer.
Factory method to create a directory partition.
Finds the index for this partition.
Returns true if the partition is a leaf partition.
Construct the children directory builders.
Scans the directory for children.
Reads all files from the given index.
Gets the gridsets.
Acquires a cacheable object from the cache.
Remove a file from the cache.
Attempts to load the given key from the cache.
Releases a file from the cache.
Returns the 4-bit integer between 0 and 4-bit integers.
Update the cache for the given element.
Clears the cache.
Makes the grid vertical transform.
Returns true if this axis is a global axis.
Returns true if this axis is a z-axis.
Finds a coordinate in the axis.
Finds the x-axis and y-axis.
Returns the x-coordinates of the given point.
Returns the x-coordinates of the given point.
Returns the position of the item in the arrow.
Get the item for the given pixel.
Iterate over all files in the collection directory.
Get remote files.
Get the name of a subcenter.
Returns the field corresponding to the given unit string.
Returns a new CalendarPeriod instance with the specified value and field.
Parses the given UDUnit string into a CalendarPeriod object.
Subtract two dates.
Returns the convert factor for a calendar period.
Returns the value of the field in millisecs.
Returns the offset between two dates.
Synchronise the gemfile.
Initializes the grid parameters table.
Puts a date root ext into the tree.
Find the longest path match.
Finds the data root for the given path.
Convert a DataRootExt to a DataRoot.
Returns the date range for the given calendar.
Re-index a list of coordinates.
Create a new NetcdfFileWriter.
Adds a new group to the given parent group.
Adds the given enum typedef to the given group.
Delete an attribute from a group.
Renames an attribute in a group.
This method is used to add a new record structure.
Closes the underlying spiw.
Writes the properties of an object to the given print writer.
Extract the metadata from a thredds dataset.
Divides this unit into another unit.
Converts the value of this unit to a derived unit.
Converts the given amount to a derivable unit.
Convert a nested variable to an array.
Convert a top-level variable to an array.
Convert the data to an array.
Close all databases.
Opens the database.
Convert an integer to a Period.
Ensures that the array capacity is at least the given minimum capacity.
Returns the value at the specified index.
Make a catalog for a directory.
Make proxy ds resolver catalog.
Gets the coordinate type.
Creates a new PssFactory for the given template.
Calculates the time of the date.
Apply a scale factor to a value.
Parses a local concept file.
Adds a local concept to the graph.
Cleans the line.
Stores a concept in the local concept table.
Writes the local concepts.
Write lookup table file.
Shows the local concepts.
Prints the local concepts.
Get a dataset source type by its name.
Expands the dataset.
Full expand the catalog.
Names all the datasets in the given container.
Name the list of datasets.
Name a dataset tree.
Loads the image at the given URL and rotation.
Stops the loading except for the given URL.
Called when a source status has changed.
Sends a progress notification to all picture listeners.
Create a scaled picture in thread.
Returns the size of the scaled picture.
Returns a string representation of the scaled picture size.
Gets the merged parts.
Builds the header for the given gempak station.
Returns a list of all the SARL types.
Checks if the given part is valid for the given params.
Sets the root directory.
Makes the root directory.
Returns the cache file for the given file location.
Cleans the cache.
Cleans the cache.
Returns true if the given byte array is a bufr table.
Factory method to create a coordinate axis.
Creates a copy of this axis without cache.
Returns true if this data type is numeric.
Displays the information about the axis.
Gets the calendar from the attribute.
Sets the list of rows.
Returns the currently selected row.
Increments the currently selected row.
Returns the index of the columns in this table.
Sets the selected index.
Sorts the specified range of strings in ascending order.
Swap two elements of a String array.
Get an existing file or null if not found.
Rotates the given lonlat by the given rotation.
Create an XML object from a file.
Create an XML object from an input stream.
Create an XML object from a resource.
Creates a standard file name for the given application name, store name and store name.
Saves the current state of the preference file.
Saves the message to the given output stream.
Write atomic variable.
Writes the structure.
Writes a structure to a serial writer.
Writes a sequence to a serial writer.
Writes a record to a serial writer.
Checks if the given file is valid.
Get the name of the WMO ID.
Read a row n from the input stream.
Returns the data at the given index.
Reads the data from a Grib2DType0 object.
Reads the data of the grib2drs.Type0.
Create a file with the given location and grid list and date range.
Make a file size estimate.
Create a file from a list of grids.
Set the list of stations.
Set the selected station.
Pick a station from the world.
Picks the closest station in the world.
Gets the selected station.
Returns the name of the projection for the given type.
Get the list of stations for a bounding box.
Get a station by its name.
Get a data iterator for the given station.
Get a data iterator for a station.
Reads the data for a given gate range.
Returns the dot product of this vector and v.
Returns the Euclidean norm of this vector.
Normalizes the vector.
Set the services from the given datasets.
Returns the parameter with the given id.
Returns the local parameter with the given id.
Adds a new prefix to the name set.
Adds a symbol to the symbol set.
Returns the prefix of the given string in the given set.
Checks if the email address is ok.
Returns the parameter with the given name as a double.
Calculates the CRC of the grid.
Returns true if the raw data is thin.
Returns the index of the field with the given name.
Returns the time type name for the given time range indicator.
Get the time coord.
Sets the next polygon.
Sets the previous polygon.
Finds a property by its name.
Sets the current projection.
Subset from time.
Registers an IO class.
Registers an iosp class.
Returns true if the given class is one of the registered IOSP providers.
Deregisters the given iosp class.
Returns true if the given location can be opened.
Opens an in memory file.
Opens an in memory file.
Opens a file in memory.
Opens the given URI in memory.
Returns the global attribute with the given name ignoring case.
Convert this URL to a NCML URL.
Writes the CDL to the output stream.
Writes the CDL to the given print writer.
Writes the CDL to the given formatter.
Adds an attribute to the group.
Adds an attribute to the group.
Add a group to this group.
Add a dimension to this group.
Removes the specified dimension from the specified group.
Adds a variable to the given group.
Adds a new variable to the given group.
Adds a string variable to the given group.
Removes a variable from the given group.
Sends an iosp message.
Makes the record structure.
Finish this group.
Reads a variable section from the file.
Reads a variable value into a byte channel.
Reads a list of variables.
Read a variable section from the input stream.
Returns the full name of the given node.
Makes a full path name with the given name.
Returns true if the given file should be included.
Returns true if the file should be excluded.
Returns true if all the filters are satisfied.
Appends a value to the attribute.
Dispatches a check value.
Force the given value to the given type.
Checks if the given string is a valid byte.
Checks if the given string is a valid short.
Checks if the given string is an integer.
Checks if the given string is a valid U.S.
Checks if the given string is a floating point number.
Checks if the given string is a double value.
Returns the data type of an attribute.
Returns true if the given dataset is viewable.
Checks if a string is a valid boolean string.
Returns true if the given string is a valid alphanumeric string.
Returns true if the given string is a valid alphanumeric string.
Returns true if the given path is a directory or a directory.
Convert unicode code point to percent hex string.
Returns the value of the parameter with the given key.
Compare two grid definition records.
Processes the given input stream.
Processes the given buffer.
Remove quotes from a string.
Marks the stacked variables as stacked.
Write ncml to file.
Get value from thredds config.
Writes the CDL to a string.
Create the station helper.
Validates the input.
Get the azimuth in radians.
Returns the elevation of the message.
Get the latitudes of the ray.
Get the longitudes of the ray.
Get the altitudes of the ray.
Get the azimuths of all rays.
Get the elevations of the rays.
Returns a copy of this structure with the specified member names.
Selects the variable with the given name.
Add a member variable.
Sets the member variables.
Sets the parent group of this variable.
Calculates the total size of all elements in this variable set.
Reads the structure at the given index.
Reads an array structure from the file.
Gets the data category.
Returns the class name.
Adds a parameter to the parameter list.
Gets the header.
Convert a lat lon to a projection point.
Returns the version of the given convention name.
Get the zis positive value.
Set the color scale parameters.
Renders the plan view.
Returns true if this group is a child of the given group.
Returns the message type with the given name.
Installs the table in all columns.
Sets the api key and api secret.
Creates a label from a string value.
Creates a label from a list of lines.
Generates an HTML label for the given string.
Connect to the given socket path.
Returns a list of IP types.
Connect to a MySQL server.
Purges a logger from the cache.
Compiles the given source code into a class.
Adds a source code for a class.
Reads the graphic control ext.
Returns the next frame.
Returns the list of persons property.
Initialize the list events.
Returns the person with the given id.
Adds a validation message to the map.
Sets the person id.
Creates a view model from the given view type.
Loads the countries from the iso 3166 location.
Creates a JavaViewStep for the given view type.
Create a new fxml view step.
Removes all observables from the given map and invokes the given consumer.
Creates the index events.
Synchronously accesss a member.
Load a view tuple from the FXML file.
Query for a style mapping row.
Returns the pixel value of the pixel at the specified location.
Get the pixel values from the image.
Validates the image type.
Creates a PNG image with the specified width and height.
Set the tile data for a bitmap.
Executes a raw SQL query.
Wrap a SQL query.
Executes a query on the previous result.
Executes a user query.
Handles a cursor.
Get the feature row for the given geometry index.
Register a GeoPackage cursor wrapper for a table.
Retrieve a tile row from the database.
Get the coverage data.
Get the coverage data for the tile.
Get the coverage data for the tile.
Get the coverage data results.
Zooms the coverage data box using the requested bounding box and overlapping pixels.
Get the coverage data tile matrix results.
Zoom out the tile matrix.
Get the tile matrix for the coverage data request.
Get the value of the tile at the specified location.
Set the icon row.
Get the icon row for the specified geometry type.
Opens or gets the SQLite database.
Converts a byte array to a bitmap.
Converts a bitmap to a byte array.
Create a new table in the database.
Delete a table.
Get or create a table in the GeoPackage.
Get the id of a GeoPackage.
Creates the table metadata from the cursor.
Create the extension.
Get the feature row from the cursor.
Executes a raw SQL query and returns a UserCustomCursor object.
Query for features that intersect the bounding box with the projection.
Query for Geomajas cursors within an envelope.
Counts the number of elements in the given envelope.
Query for a custom cursor.
Builds the where clause.
Query for features that intersect the bounding box.
Count the number of features in the bounding box.
Query for features in an envelope.
Query for feature ids.
Counts the number of elements in the query.
Sets the data for the given bitmap.
Sets the data for the given bitmap using the given compression format and quality.
Sets the configuration for bitmap compression.
Get the tile count.
Adjusts the bounds of the bounding box according to the zoom level.
Adjusts the google bounds.
Adjust the GeoPackage bounds for the bounding box.
Adjust the GeoPackage bounds for the bounding box.
Get the bounding box for the specified zoom level.
Get the tile grid for the zoom level.
Query for a tile row.
Query for a tile in descending zoom level.
Get the closest zoom level for the given length.
Get the approximate zoom level for the specified length.
Query for a tile grid based on the zoom level.
Delete a tile from the table.
Get the number of columns in the tile table at the specified zoom level.
Is google tiles enabled?.
Get the pixel value of the first pixel of the image.
Get the pixel values from the image.
Validates the image type of a directory.
Creates an image of the tile width and height.
Sets the pixel value of the first pixel of the image.
Get or create a GeoPackage.
Gets the current row.
Moves to the next invalid state.
Query by base feature id.
Delete by base id and geometry type.
Get a rectangle with the specified width, height and bounding box section.
Get the rounded float rectangle.
Delete missing databases.
Create and close the GeoPackage database.
Check if the database is valid.
Validates the given SQLite database and closes the database.
Validates the database and closes the database.
Validates a SQLite database.
Validates the SQLite database header.
Check if the SQLite database header is valid.
Add internal databases.
Adds a collection of external databases.
Import a GeoPackage.
Get the GeoPackage metadata for the database.
Get the geo package metadata at the given external path.
Create a new geometry metadata object.
Populate a GeometryMetadata object from an envelope.
Delete a GeoPackage.
Creates or updates a geometry if it does not already exist.
Update the column metadata.
Count the number of items in a table in a GeoPackage.
Create a geometry metadata object from a cursor.
Updates the values in the table with the given values.
Draws a tile with the given text.
Returns a list of simple attributes rows for the given ids.
Integrity check.
Get a UserMappingDao for the given table.
Returns a SimpleAttributesDao for the specified table.
Returns the mappings for the base for the given extended relation.
Gets the mapping table for the given extended relation and related id.
Checks if the user has a mapping for the given base id and related id.
Counts the number of items in the cursor.
Register a cursor wrapper for the GeoPackage.
Read a user custom table.
Get a tile from the GeoPackage.
Draw a tile.
Reproject a tile to the requested tile width and height.
Retrieve the tile results from the bounding box.
Calculates the overlap between the line paint and polygon paint.
Sets the density of the feature paint.
Sets the line paint.
Sets the paint that will be used to paint the polygon.
Draws a tile at the specified location and zoom level.
Draws a tile at the specified location and zoom level.
Draw a tile query index bitmap.
Query for the number of indexed features.
Query for the number of indexed features in the bounding box.
Query for features that have been indexed.
Query for features that have been added to the bounding box.
Draws a tile query bitmap.
Simplify a list of points.
Get the paint for the point of a feature style.
Get the paint for the line of a feature style.
Get the paint for the polygon.
Get the paint for the polygon.
Get the paint for a feature style.
Get the paint for the specified style.
Get the paint for a style row.
Get the paint for the specified style.
Adds a bitmap to an icon row.
Wraps the given content values.
Creates a bitmap for the layer.
Recycle the layered bitmaps.
Get the bitmap for the layer.
Get the canvas for the specified layer.
Creates the bitmap and canvas for the layer.
Get the style mapping dao for the feature table.
Get the style DAO.
Get the icon table related tables.
Get the feature styles for the feature table.
Get the styles for the feature table.
Get the style for the feature table and geometry type.
Returns the icons for the feature table.
Get the icon row for the feature table and geometry type.
Get the feature styles for a feature row.
Get the feature styles for the feature table and feature id.
Get the styles for a feature row.
Get the icons for a feature row.
Get the styles for a feature.
Get the icons for the feature.
Sets the feature styles for a table.
Set the table styles for the feature table.
Sets the feature table icons.
Sets the feature styles for a feature row.
Set the feature styles for the feature table.
Sets the styles of a feature row.
Set the styles for a feature table.
Set the style of a feature row.
Sets the default style for the given feature row.
Sets the default style for the feature table.
Sets the icons for a feature row.
Sets the icons for the feature table.
Sets the icon of a feature row.
Sets the default icon for the feature row.
Sets the default icon for the feature table.
Gets or inserts a style row.
Gets or inserts an icon in the icon table.
Insert a style mapping.
Delete the table style for the feature table.
Delete the feature table icon.
Delete the feature table mappings.
Delete the feature table mapping.
Delete the mapping for the feature.
Returns the style ids for the feature table.
Returns the list of icon ids associated with the feature table.
Returns the style ids for the feature table.
Returns the list of icon ids associated with the feature table.
Returns the image bytes.
Flush the output stream to the output stream.
Get the pixel at the specified location.
Reads the pixels from the file.
Draw a feature.
Draw the line path for the feature tile.
Draw a polygon path.
Adds a line string to the bounding box.
Adds a polygon to the bounding box.
Returns the cache of feature features for the given table.
Remove a feature row from the table.
Clears all feature caches and resizes it to the specified maximum cache size.
Returns the cached table styles.
Returns the cached table icons.
Get the table DAO.
Sets the width of the gauge.
Sets the height of the gauge.
Get the derived dimensions of this bitmap.
Calculates the density of a tile.
Reads the blob value from the database.
Read a custom table from the GeoPackage.
Gets the color of the gauge.
Validates the given color.
Creates a color from the hex color and opacity.
Get a GeoPackageManager instance.
Set the progress of the feature table index.
Returns the index of the specified feature index types.
Returns true if the feature row is indexed with the given types.
Deletes all features in the given collection of index types.
Deletes the given index from the given row.
Deletes the given feature index types for the given geometry id.
Delete the index for the given geometry id.
Returns true if this feature index is indexed.
Returns a list of indexed feature index types.
Query for feature index results.
Counts the number of features in this index.
Get the bounding box of the feature table.
Query for feature index results.
Get the index type.
Returns the internal file for the given file path.
Gets the internal file path.
Get the geometry type.
Sets the geometry type.
Checks if the given URL has a bounding box.
Replaces the tile generator variables with their values.
Checks if the given URL contains a valid XYZ value.
Replaces the bounding box at the specified location with the specified bounding box.
Replaces the bounding box values in the URL with the values in the boundingbox.
Get the geometry from the table.
Index the feature row.
Update the last indexed feature for the given table.
Delete the feature index.
Delete a geometry from the database.
Is this geometry indexed?.
Query the database for features.
Query for a bounding box.
Count the number of features in a bounding box.
Query the geometry metadata for the given envelope.
Count the number of features in the envelope.
Query for feature bounding box and projection.
Count the number of features in the bounding box.
Gets the feature bounding box.
Returns the geometry metadata for the cursor.
Get the feature row from the cursor.
Returns the feature row for the given geometry.
Get the tile DAOs for the feature table.
Get the FeatureDAOs for a tile table.
Get the bounding box for the feature tiles.
Query by ids.
Returns a list of unique base ids.
Returns a list of unique IDs for all user related ids.
Delete by base id.
Delete by related id.
Delete by IDs.
Builds the where clause for the user mapping table.
Create a GeoPackage.
Delete a database.
Renames the name of the package.
Rename a column.
Returns a list of all GeoPackageMetadata objects.
Get the GeoPackage metadata for the given database.
Get the metadata for a GeoPackage.
Get or create a GeoPackageMetadata object.
Check if the database is external.
Get the metadata for an external package at the given path.
Gets metadata where name like.
Gets metadata where name not like.
Get the metadata where name like.
Create a GeoPackageMetadata object from a cursor.
Called when a view is created.
Add a parallax view.
Creates a view with the given name and attributes.
Creates a custom view.
Add a sub-append event to the buffer.
Find config file from system properties.
Returns the URL of the resource for the given filename.
Automatically auto-configures the status listener.
Status on resource search.
Converts a socket address to a string.
Creates a new executor service.
Starts all the converters in the given head.
Sub-appends the given event to the end of the list.
Adds a substitution property.
Returns the value of the specified property.
Compiles the given node into a converter.
Consumes the next token, and returns it as a Node.
Returns a regex for a fixed date.
Starts the interpretation.
Ends the interpretation.
Initialize the logger with the given key.
Creates a new context selector instance.
Sets up the properties for this logger.
Returns the absolute path to the external storage directory.
Gets the database directory path.
Returns the absolute path to the given file.
Evaluates the given event.
Returns the discriminating value for the given event.
Update the mask if necessary.
Returns the chain decision for the given event.
Creates the key managers.
Creates the trust managers.
Creates a KeyStoreFactoryBean from the system properties.
Returns the location of a system property.
Returns the URL for a resource.
Returns true if chain handles throwable.
Stops the context.
Print status in case of errors or warnings.
Prints a message if errors occured.
Prints the given context to the given threshold.
Returns the entry for the given key from either the live or lingerers map.
Marks the end of life for the given key.
Create a FormatInfo object from a string.
Renames a file or directory.
Returns true if srcFile and targetFile are on different volumes.
Returns the environment variable for the given key.
Returns the value of a system property.
Sets the MDC property map.
Output the mdc property map.
Extracts the stack trace from the given throwable.
Checks if the current class is in the framework space list.
Adds a new status to the list.
Add a status listener.
Looks up the implicit action for the given element path.
Returns the list of actions applicable to the given element path.
Sets the class loader.
Get a value from the system properties.
Decapitalizes the given name.
Returns an array of MethodDescriptors for the given class.
Returns an array of PropertyDescriptors for the given class.
Starts the server.
Add a listener to the console status manager.
Ends an interpretation.
Returns the discriminating value for the given event.
Returns true if the given event is discardable.
Starts the shutdown hook.
This method is called when an interpretation context ends.
Returns an array of supported protocols.
Returns an array of supported cipher suites.
Returns an array of strings that contains all the strings that are included and excluded.
Convert a string to a scope.
Sets the properties for the given interpretation.
Adds a new appender to the end of the list.
Removes the given appender from the list of appenders.
Detaches the appender with the given name from the appender list.
Handles a change in the parent level.
Call all appenders of this logger.
Detaches the specified appender from the attached appender.
Creates a new child logger with the given last name.
Call the turbo filter chain decision.
Logs the given logging event.
Creates a new socket and waits for it to finish.
Creates missing parent directories for the given file.
Returns the integer representation of the level.
Convert an integer to a level.
Get the resource occurrence count.
Returns the URL of the given resource.
Returns the class loader for the given object.
Gets the class loader as privileged.
Returns the class loader for the given class.
Starts the encoder.
Returns the tag for the given event.
Starts the interpretation.
Returns the index of the separator in the given name.
Evaluates the given event.
Returns the client thread name for the given socket.
Checks if two files are on the same file store.
Appends the given event object to the end of the buffer.
Sends the given buffer to the given buffer.
Add a mdc value level pair.
Creates a converter for the given keyword.
Creates a composite converter for the given node.
Determine the compression mode.
Configures the connection to the given URL.
Configures a file.
Configures an input stream.
Builds the interpreter.
Configures the given input source.
Configures the interpreter.
Returns the property value for the given key.
Sets the name of the property.
Returns true if the given context has a status listener.
Returns the time after the last reset.
Starts the scan.
Returns the effective converter map.
Returns the file header.
Returns the file footer.
Starts the interpretation.
Ends the appender.
Returns a copy of the list of clients.
Adds a client to the list of clients.
Removes a client from the list of clients.
Returns a copy of the context map.
Gets the value of the given class.
Get the turbo filter decision.
Returns true if the device is running on Android.
Initializes the context.
Returns an array of files in folder matching the given stem regex.
Prints the status list for the current thread.
Returns the database file for the given filename.
Clear expired logs.
Checks if the given expiry is expired.
Appends the given event to the insert statement.
Appends an event to the end of the secondary sub-append.
Binds the logging event to the statement.
Converts an object to a string.
Compute the reference mask for the given event.
Merges the properties of the event into a map.
Insert exception.
Gets the prefix match length.
Returns the effective level of this status.
Returns true if the given class is an interface or interface.
Returns the child value of the given map.
Processes the include of the given URL.
Opens an input stream for the given URL.
Trims head and tail.
Returns true if the server should be started.
Returns true if the server is transient.
Sets the default hosts.
Ensures the local index.
Synchronously syncs the data selection queries.
Performs a sync if needed.
Waits for a task to finish.
Synchronously lists all indexes in the app directory.
Reads the contents of the given input stream into a char array.
Converts an input stream to a byte array.
Consumes the input stream and disconnects the connection.
Returns the list of hosts that are up.
Set the type of places.
Starts the search.
Associates the specified value with the specified key in the cache.
Returns the value associated with the specified key.
Waits for all threads to complete.
Report a failed test.
Copies all files in the given directory to the given target directory.
Initializes the simulator properties.
Get static field value.
Returns the method with the given name in the given class.
Format a percentage value.
Formats a double value.
Formats a long value.
Writes a JSON string.
Writes a JSON integer.
Write a double.
Reads a JSON numeric character from the reader.
Read a JSON integer.
Read a double.
Reads a JSON string and returns it as a Base64-encoded string.
Executes the given method.
Sends a request to the server.
Enqueues a method call to the queue.
Get resource from fs.
Update the decoration.
Refresh repository view.
Get the resource history view.
Opens an editor.
Report authentication failure.
Prompts the user for authentication.
Creates the default page for the book.
Starts the tree viewer thread.
Sets whether or not this node should be kept alive.
Sets whether or not this node should be omit.
Sets the owner of this element.
Adds a condition factor to the policy.
Creates a condition term from a stream tokenizer.
Returns true if the condition term matches the condition term.
Finds the DSL configuration file for the given rule source.
Loads the configuration from the given input.
Reads the configuration from the given input stream.
Get the menu for this control.
Add a response to the response body.
Add a new href element.
Inserts a new href before the root element.
Removes the specified href from the root element.
Add a prop stat to this node.
Returns the href of the element.
Returns the status of the node.
Get the stack frame for the given value.
Returns true if class1 is a subtype of class2.
Checks if the given collection of proposals contains the given proposal.
Resets the stream to the initial state.
Creates the actions.
Adds a connection to the list of connections.
Returns the value of the property with the given id.
Remove a connection from the source and target connections.
Sets the location of this property.
Sets the value of a property.
Sets the size of the gauge.
Returns a string representation of the given constraints.
Add a lock entry.
Adds a child to this vertex.
Remove a child vertex from the graph.
Initializes the preference store.
Stops the plugin.
Returns the value of the specified resource as a String.
Returns the resource bundle.
Gets the rule builder form colors.
Sets the date time.
Set the date to the given pattern.
Creates an error status object.
Logs an error.
Adds a field to the list of fields.
Adjust the grid layout.
Apply the font to all the fields.
Calculates the number of columns.
Initializes the page editors.
Fire a property change event.
Set the active editor.
Contributes this item to the tool bar.
Determine the dialect for the given back text.
Creates a new Webdav Context instance.
Saves the monitor to a file.
Creates the table listeners.
Associates the specified value with the specified URL.
Puts the given value to the given URL.
Adds a new token to this node.
Add a child node to this node.
Sets the offset and length of the file.
Add a condition.
Add a condition to the state token.
Returns true if the condition matches the condition.
Returns the first child of this node, or null if none.
Returns the status of the node.
Sets the property of this element.
Returns the last line of the given back text.
Returns the last non dash line in the given back text.
Binds the given string to the given identifier.
Binds two strings together.
Binds the given identifier to the given array of bindings.
Creates the process for the example.
Create the package fragment for the process sample.
Gets the runtime id.
Visit a Revisited Node.
Visits the given node.
Returns the dot-id of the given object.
Add a remove element to the list.
Add a set element.
Creates a new locator for the given resource URL and label.
Gets the presentation reconciler.
Returns true if this status object is the same as another status object.
Returns true if the given condition term is contained in this condition term.
Create condition factor from stream tokenizer.
Add the pages to the DRL editor.
Deletes the job with the given request.
Posts a request to the kie REST endpoint.
Get the status of a job.
Executes the pull operation.
Handle pull results.
Sets the value at the specified index in the array.
Add an active lock.
Filters the proposals on a prefix.
Reads backwards from the given document.
Calculates the rete rows of a vertex.
Returns the edit part for the given model element.
Returns the image descriptor for the given path.
Declares an image in the registry.
Adds a vertex at the specified depth.
Returns the index of the row with the given vertex.
Returns the width of all the rows in this table.
Dumps all the vertices in this matrix to stdout.
Optimize all rows in this matrix.
Initializes the graphical viewer.
Draws a new graph.
Returns the drools line breakpoint with the specified source.
Sets the href of this node.
Returns true if the client can talk to the dav server.
Copies the contents of this object to the specified destination object.
Examines the multi-status response.
Extracts the prop stats for the given multistatus.
Returns the content of the document.
Returns an enumeration of active locks.
Returns the status of a property.
Returns the context of the head of the document.
Acquires a shared lock token.
Move the properties to the specified destination.
Performs a checkin.
Refreshes the given lock token.
Removes the properties for the given collection of properties.
Removes the property with the given qualified name.
Sets the content of an input stream.
Sets the properties of this davNode.
Sets the property.
Unlock a lock token.
Update an existing version of the document.
Performs a version control request.
Deletes the specified resource.
Examines the status code.
Returns true if the property has a child with the given name.
Writes the request body to the given output stream.
Convert a byte array to a hex string.
Convert an array of ints to a hexadecimal string.
Sets whether or not this node is a child of the current node.
Sets whether or not the property name should be included in the document.
Sets the property of this node.
Strips the last word from a string.
Updates the tree node.
Writes the contents of this buffer to the given output stream.
Moves the cursor over the current position.
Marks a list of parser errors as markers.
Skips white space characters.
Adds a resource to the GUVN server.
Commit changes to a file.
Returns the age of the clock.
Returns the length of the content.
Returns the maximum number of forwards.
Gets the value of the overwrite property.
Gets the value of the passthrough property.
Returns the current timeout.
Associates the specified value with the specified key.
Sets the timeout value.
Opens a DSL reader for the given file.
Parses a file.
Get the metadata for the object.
Strips the metadata from the given text.
Adds the given tokens to the given node.
Get the children of the condition.
Get the children of an object.
Adds a child to the list.
Prints the tree of the root node.
Prints a node.
Prints the specified number of tabs.
Reads a JSON value from a string.
Returns the image descriptor for the given id.
Invokes the request.
Sets a request header field.
Creates the launcher for the rule sample.
Creates the rule for the specified project.
Creates the rule flow for a project.
Creates the launcher for the rule flow sample.
Returns the list of selected IUs.
Create an image from the specified output stream.
Returns the name of the field.
Returns the evaluator for this field.
Returns the value of this alpha field.
Adds a resource to the Guvnor resource properties.
Sets the baseline control.
Binds the specified member to the specified source.
Returns the member with the given name.
Optimizes the graph.
Initializes the controls.
Validates the page.
Generates an entity tag for the current thread.
Returns the opposite vertex of this vertex.
Validates a list of OTPs.
Checks if the user is a right user.
Returns the username for the given public id and filename.
Adds the yubikey file to the user.
Verify an OTP authentication.
Clears the password.
Returns the public ID of the given OTP string.
Returns true if the given string is a valid OTP string.
Creates a new evaluation for the given node and source.
Creates a new evaluation for the given node.
Clears the cache.
Returns true if jdk 15 is checked.
Returns the package name of the given object.
Returns the package name of a class.
Returns a unique descriptor for the given object.
Returns the class of the given argument.
Checks if two classes are more specific.
Gets the value of a property of a target object.
Returns a map of property descriptors for the given target class.
Get a property descriptor from an array of properties.
Returns the read method for the given target class and name.
Reads a character from the input stream.
Parses a projection expression.
Select all expressions.
Convert a value to a long.
Convert a value to a double.
Convert a value to a big integer.
Converts a value to a BigDecimal.
Convert an object to a string.
Returns the numeric type of the given value.
Converts the given value to the given type.
Returns the int value of the given value.
Returns the numeric type of the two specified integers.
Returns the numeric type of two objects.
Creates a number from a long value.
Pops the current evaluation from the stack.
Generate the ognl getter for the given field.
Generate the ognl setter.
Flattens the tree.
Initializes this node with the given node and source.
Escapes the character in the image.
Sets the root of the context.
Evaluates the expression and returns the value.
Set the value of an accessor expression.
Sets the value of an object in a tree.
Checks if the given expression is a constant expression.
Get the default watch service id.
Reloads the current class loader.
Returns the archiver with the given name.
Checks for problems in the given archiver.
Reads a file as a string.
Creates a new Project.
Add a system property.
Add a system property.
Changes a directory.
Refresh the button state.
Creates a file observer.
Returns the selected folder.
Create a new folder.
Checks if the given file is a valid file.
Starts a background job.
Starts a list.
Ends a list.
Handles the motion of an edge.
Get the crop rect.
Computes the layout of the rectangle.
Registers the given listener and media factory.
Add the span watcher.
Inflates the view, which is used to show the title of the spinner.
Get the drop down view for the given position.
Convert the spanned text to the specified format.
This method is called when a span is within a paragraph.
Creates a unique file in the target folder.
Determines the original file name for the given URI.
Returns the namespace for the given name.
Returns the local name of the given name.
Set the value of an attribute.
Sets the value of an attribute.
Get the font name from a file.
Get the font name from the given file path.
This method is called when a new buffer is added to the buffer.
Writes a byte array to the buffer.
Writes a byte to the buffer.
Writes the data from the input stream to the output stream.
Writes the contents of this buffer to the given output stream.
Returns a copy of this buffer as a byte array.
Set the font size.
Converts windows separators to unix separators.
Recompute the focus of the highlight view.
Ensure that the highlight view is visible.
Center the view based on the highlight view.
Reset the document locator.
Validates the given string.
Create a new element type.
Sets an attribute on the given element.
Sets the parent of the element with the given name.
Returns the element type with the given name.
Returns the index of the entity with the given name.
Removes all paragraphs from the editor.
Applies the specified value to the specified editor.
Returns true if the given domain is a valid domain.
Called when an operation is executed.
redo the current operation.
Replaces all occurrences of search with replace.
Gets or creates a thread status for the given thread.
Sets the decoding options for the thread.
Returns true if the thread can be decoded.
Decodes a file descriptor.
Get all fonts.
Returns a map of font names to their names.
Returns a map of all system fonts.
Sets up the schema and the scanner.
Get a reader from an input source.
Returns an input stream for the given publicid and systemid.
Adup the content of the new element.
Expands entities in the source string.
Looks up an entity in the buffer.
Restarts the stack.
Pops the next element from the stack.
Restarts the stack if necessary.
Returns the prefix of the given name.
Returns true if the given prefix is a foreign key.
Removes quotes from a string.
Splits a string into an array of strings.
Recursive method to rectify an element.
Saves the instance state.
Unregisters all registered editors and toolbars.
On event main thread.
This method is called when an event is received from the main thread.
Calculates the base matrix for the given bitmap.
Returns the maximum zoom level for the bitmap.
Checks if the given editor exists in the selection.
Remove all spans from the paragraph.
Picks up a directory.
Rotates the image by the given degree.
Sets the output writer.
Writes a character to the output.
Writes a string to the output.
Returns the boolean attribute with the given name and value.
Write esc ut.
Writes namespace declarations.
Writes a qualified name.
Creates a stream if it does not exist.
Waits for a stream to become active.
Completes the given store snapshot with missing instance snapshots.
Waits for the next provisioning request to be executed.
Performs a getRecords operation on Amazon Kinesis.
Performs an action with retry.
Attempts to perform an amazon action.
Checks if a bucket is accessible.
Loads the latest transaction ID from the given store.
Triggers a wildcard expander.
Replaces all occurrences of a pattern in a string with a new pattern.
Delete any of the given chars from the given string.
Adds a resource lint report.
Update properties with configuration.
Returns the configuration properties.
Creates an input stream to autodetect the wro file.
Convert a map of resource pre processors to a map of resource post processors.
Compiles the given content and optional argument.
Reloads the cache with a new value.
Reloads the model with a new value.
Wraps the given request in a ServletRequestWrapper.
Create a transformer for the base name and extension.
Called when an error occurs.
Sends a redirect to the specified location.
Process a resource.
Create an expander handler.
Locates an input stream for the given URI.
Creates the wro configuration.
Registers the change listeners.
Processes the request and sets the response headers.
Sets the wro configuration.
Identify duplicate group names.
Merge the imported model into this one.
Locates an input stream for the given URI.
Apply post processors to a resource.
Decorates the given processor.
Process a request.
Splits the given option string into an array of strings.
Load properties from an input stream.
Parses the properties from a string.
Creates a custom wro manager factory.
Persists the resource fingerprints for the given group names.
Checks if the given group is a target group.
Extends the plugin classpath.
Gets the model resource as stream.
Initialize wro manager factory.
Sets the list of model transformers.
Compiles the given content with the given name.
Process all resources and merge them into a single string.
Process a list of resources and merge them with the given criteria.
Runs a list of resources in parallel.
Apply pre-processors to a resource.
Decorates the given processor with the given criteria.
Persists the fallback storage.
Gets all fields of the given object.
Rewrites the given CSS URI and image URL.
Computes the new image location.
Adds a model transformer to the factory.
Serves the processed bundle.
Initializes the aggregated folder path.
Extract variables from body.
Parses the given CSS string.
Replaces all variables in a CSS string.
Returns a decorator support for the given post processor.
Returns true if the searched resource type is eligible for the requested resource type.
Gzip response.
Create a decorator that will include the given pattern patterns.
Create a decorator that excludes the given patterns.
Creates a new resource change handler.
Attempt to remember a resource.
Apply the given function to each CSS import.
Filters a collection of objects to a list of objects.
Returns true if the request parameter is minimized.
Finds all the resources that are imported from the given CSS content.
Computes the absolute URL for a resource.
Creates a string representation of the given items.
Gets alias list.
Create the context.
Evaluates the expression and closes the reader.
Evaluates the given script and returns the result.
Processes the command line.
Checks if the request is a handler request.
Creates the handler request path.
Renames a group.
Computes the destination folder.
Process a group.
Check if a change is required for a specific group.
Locates an input stream for the given URI.
Creates an object pool with the given object factory.
Locates an input stream for the given URI and folder.
Opens a jar file.
Extracts the query path from the given URI.
Returns true if the group is minimized.
Add uri locators.
Decorate a wro model factory with a list of transformers.
Adds a string to the Require list.
Executes the update script.
Logs the summary.
Called when a resource is processed.
Returns the lock for the given key.
Creates a process from the given source file.
Parses the properties from the given string.
Gets the task information.
Returns the compilation command for the given input.
Parse the header.
Adds cache headers to the map.
Gets the path info from the given location.
Gets the servlet path from the given location.
Checks if the given path matches the request URI.
Loads a regexp property from the classpath.
Safely copy the contents of the given reader to the given writer.
Creates a temporary file with the given extension.
Cleans the image URL.
Sets an attribute on the servlet context.
Generates a data URI from an input stream.
Generate data uri.
Sets the given context with the given configuration.
Removes the context from the context map.
Check if the given cache key has changed.
Called when an exception occurs.
Check if a resource has changed.
Updates the hash for the given group.
Returns true if any of the resources of the given type is of the given type.
Create a process from a source file and a destination file.
Parses a group definition.
Create a group from an XML element.
Parses a resource.
Returns a collection of resources for a given group.
Stop a named timer.
Returns a timer with the given name and todo flags.
Returns a timer with the given name, if it exists, otherwise creates a new one.
Prints the statistics.
Wake up worker threads.
Update the number of processed counters.
Update the finished counters.
Atomically updates the counter if it is smaller than the given value.
Returns the default implementation of the given rule.
Instert the given property into the taxonomy.
Ensures that the input loading stage is complete.
Restores the saturation of the taxonomy.
Returns true if the consistency check is inconsistent.
Restores the taxonomy.
Restores the instance taxonomy.
Returns a proof of inferences for the given conclusion.
This method is called before the task is executed.
Invalidates this stage and all of its sub-stages.
Returns a collection of individual indexed individuals to add to the taxonomy.
Returns the list of individual items to remove.
Returns an unsupported operation exception for the given API method.
Removes the element at the specified position.
Removes the element at the specified position from the specified array.
Returns the position of the first element in the array del.
Returns true if the specified object is contained in the specified array.
Adds the element at the end of the array.
Checks if the occurrence numbers are valid.
Adds a timer to the simulation.
Adds a timer to this rule.
Puts a key value pair into the given array.
Removes the entry with the given key from the given array of values.
Enlarges the hash table.
Reduces the capacity of the cache.
Saves the configuration to disk.
Prints the declaration axioms of the given class.
Gets all instance nodes of the given node.
Removes all elements from the queue.
Combine list hash.
Copy the contents of the given InputStream to the given OutputStream.
Returns an incompleteness monitor for the reasoner.
Processes the taxomomy of the given taxonomy.
Submits an input to the pool.
Appends the given ElkObject to the appender.
Marks the given query as not computed.
Adds a direct type node.
Check if the chain match.
Maps the elements of the given set to the given functor.
Adds the specified element to the set.
Removes the specified object from this set.
Adds a class conclusion counter.
Log memory usage.
Sets the reasoner configuration options.
Shuts down the server.
Prints the header.
Prints the given values to the logger.
Returns a string representation of the specified character.
Adds the given rule counter to this rule set.
Writes a resource to the given writer.
Returns the action input parameter with the given name.
Gets the property descriptor for the given property path.
Returns a map of required parameters.
Returns true if the given class is a single value type.
Adds a link to this link.
Sets the media type.
Adds the hreflang parameter.
Adds a new revision to the link.
Adds a parameter to the link.
Expands the given arguments using the partial URI template.
Returns the list of link rels.
Get the revs for this link.
Returns true if any of the action descriptors have unsatisfied required variables.
Returns the value formatted.
Returns true if the property is hidden.
Returns true if the given property is included in the input annotation.
Returns true if the property has an explicit or implicit property value.
Returns true if this request is required.
Returns the default value for this request.
Returns the name of the parameter.
Returns the property name of the given action input parameter.
Gets the vocabulary for the given mixin source.
Returns the query string.
Appends the form for the given action descriptor.
Writes an input button.
Appends an input or select.
Adds the given affordance builder to this one.
Returns a copy of this URI template components.
Strip the optional variables from the given action descriptors.
Returns the first UberNode with the given name.
Get the first UberNode with the given rel name.
Returns an iterator over the nodes in this UBTree.
Creates a persistent hash map from the given equator and an iterable of entries.
Creates a persistent tree map from an iterable of map entries.
Returns an empty persistent tree map.
Returns a sorted set of entries.
Returns the last key in the list.
Folds an iterable of operations.
Drops elements until the predicate returns true.
Fold function.
Creates a tuple from a map entry.
Matches the item against the predicate.
Register a list of classes.
Returns the node at the specified index.
Appends the given element to the end of the vector.
Concatenates the given items to this vector.
Creates a mutable set from the given items.
Returns a mutable vector of the given items.
Creates an imset from an array of items.
Returns an immutable vector of the given items.
Creates an unmod iterable from an array of items.
Returns a string builder that indents the given number of spaces.
Returns a string representation of the given array of items.
Creates a lazy reference for the given producer.
Returns the result of applying the given expression to the current thread.
Inserts an item into an array at the specified index.
Copies an array of items.
Suspends the current thread if it is already in the current thread.
Suspends the transaction if the async operation is initiated.
Builds a list of ServiceComponents from a service descriptor file and a JAR file.
Validates that the passed directory is valid.
Creates the inheritance link for the given class.
Copies all declared methods from the source class to the destination class.
Copy the given methods to the given class.
Remove sbb entity from current class loader.
Returns true if notifications are enabled for the given param.
Returns the referenced RA link names of the service component.
Install a service.
Uninstalls a service.
Returns true if the given resource adaptor link name is inactive.
Returns an array of usage parameter sets for a given SBB.
Resets all usage parameters.
Displays the result.
Performs the actual unfolding of an array.
Executes an event.
Binds the given name to this node.
Unbinds a name from the cache.
Looks up a node by its name.
Returns a map of the name bindings of this cache node.
Moves the cursor to the next sbb entity.
Returns true if this trace level is higher than the given trace level.
Extracts the jar from the given jar file into the given destination directory.
Writes the contents of the input stream to the output stream.
Associates the specified value with the specified key in this map.
Attaches the specified SBB entity to this SBBNode.
Detaches a SBBEntity from the attached SBBNode.
Returns true if there are no SBB entities attached.
Returns the list of SBB entities attached to this node.
Attaches the specified timer to this node.
Removes the timer with the given id from the list of attached timers.
Returns true if there are no timers attached.
Returns the set of attached timers.
Set the name bound.
Returns true if the node with the given name is unbound.
Returns true if this node has no names bound.
Returns a copy of the names bound.
Sets the value of a cmp attribute.
Returns the value of the attribute with the given name.
Returns a copy of this map.
Initializes the notification types.
Sends a usage notification.
Downloads a du file from the deployment root to the deployment root.
Updates the list of deployed components.
Installs the given deployable unit.
Uninstalls a deployable unit.
Process internal undeploy.
Shows the status of the job.
Returns true if the given log record is loggable.
Returns the logger for the given log record.
Returns the set of SBB entities for this service.
Returns the permissions for the current policy.
Returns the code sources for this policy.
Checks if the profile with the given name exists in the database.
Remove the profile table.
Updates the configuration properties.
Called when SLE is running.
This method is called when the transaction is stopping.
Activates this entity.
Deactivates this resource adaptor.
Schedules the end of all activities.
Remove this notification source.
Returns the resource adaptor interface for the given resource type.
Called when a service is active.
Returns the activity handle referenced by the given resource handle.
Called when an activity is ended.
Update ra configuration properties.
Verify that the given configuration properties are valid.
Call this method when the resource is stopping.
Call this method when the resource is inactive.
Unconfigures the resource adaptor.
Unsets the resource adaptor context.
This method unsets the fault tolerant resource adaptor context.
Build the profile attribute map.
Resumes the activity.
Returns the set of activity context handles.
Returns the usage parameter set with the given name.
Decorates the abstract class for the given component.
Fires an event to the SBB entity.
Fire an event to the SLE container.
Gets the profile cmp.
Returns a map of abstract methods from the given class.
Returns a map of interface methods from the given interface.
Create the object pool.
Remove the object pool for the given profile table.
Checks if the given notification source is the owner of the given alarm.
Throws an alarm on the given notification source.
Get the usage parameter set for a profile object.
Gets the descriptor for the SPECTRUM.
Checks if the given url accepts the given deployable unit.
Initializes the deployment.
Starts the deployment.
Stops the given deployable unit.
Displays the status of the deployment.
Executes the afterCommit actions.
Execute after commit priority actions.
Executes the after rollback actions.
Executes before commit actions.
Executes the actions for the beforeCommit priority.
Returns an array of the names of all registered tracers.
Creates a tracer with the given name.
Remove the replicated data.
Process the given component using the given usage parameters interface.
Returns the object pool for the given service and sbb id.
Creates an object pool for the given service and sbb component.
Executes an activity.
Start an activity.
Ends an activity.
Checks the preconditions for creating a fire event.
Fires an event.
Generate the local object class for the local object.
Make getter for boolean field.
Convert a field name to an object.
Sets the profile table name and address.
Extracts the message from the result.
Checks if the given object is in the cache.
Returns true if all elements in the given collection are contained in this collection.
Removes all elements from the specified collection.
Returns true if this level is higher than the given level.
Reads the object from the stream.
Removes all classes from the class pool.
Add a profile object to the SLE.
Returns the profile object for the given profile name.
Passivate the profile object on the transaction end.
Sets the value of this field as a text string.
Generate the concrete class for the activity context interface.
Generate concrete methods.
Sets the value of a data attribute.
Adds a name binding to the cache.
Removes all naming bindings from the cache.
Remove a name binding from the cache.
Attaches a timer to the cache.
Removes all timers from the timers.
Attaches a SBB entity to this activity context.
Detaches a SBB entity from the cache.
Returns a sorted set of SBBAttachments.
Ends the activity.
Add a deployable component.
Returns the list of external dependencies.
Returns true if the dependencies are satisfied.
Returns true if there are any duplicates.
Returns a collection of install actions.
Returns the list of uninstall actions.
Returns true if there is a referring duplication.
Close a profile table.
Returns the object name for the given table and profile name.
Writes the profile mode.
Before set cmp field.
Suspends the transaction manager to suspend the cmp field.
Before get cmp field.
Called after the cmp field has been set.
Invoked before the JNDI management method invocation.
Invoked after the JNDI management method invocation.
Deletes the given path.
Creates the default constructor.
Creates the default usage parameter getter.
Creates the getter and setter methods for the SBB entity.
Create fire event methods.
Creates the method to add the SbbActivityContextInterface to the given concreteActivityContextInterface.
Add a query expression.
Associates the specified object with the specified key in the map.
Rebinds the given object to the given target object.
Decorates the abstract sbb class.
Invokes the method with the given name and arguments and returns the result.
Gets the real field name.
Sets the value of the field with the given name.
Returns the value of the field with the given return type.
Initializes the profile object.
Unsets the profile context.
Gets the profile local object.
Notifies all the listeners that the profile has been added.
Gets the profile cmp slee10 wrapper.
Creates a class with the given name and interfaces.
Creates the inheritance link.
Add member values to annotation.
Returns the activity context interface for the given activity.
Returns the class pool.
Sets the deployable unit.
Undeploys the class loader and permissions.
Executes an activity.
Checks if the given class or interface is one of the given interfaces.
Returns all methods implemented by the given interface.
Checks if the given tracer name is valid.
Returns a collection of profiles by static query.
Creates a temporary du file.
Gets the entity manager.
Starts the server.
Switches the given class loader to the given profile object.
Make a safe proxy call.
Checks if the current transaction is the same as the current transaction.
Converts the last access time to a TTL string.
Returns true if the profile class is visible.
Returns the profile object that is valid in the current transaction.
Returns a list of logger names that match the given regular expression.
Reset the logger levels.
Clears all loggers for the given name.
Add a logger to the management console.
Remove a handler from the management console.
Convert a notification source to a log4j logger name.
Synchronizes the log level with the log4j log.
Assigns the log4j level to the log4j level.
Resets the cache flags.
Sends a trace notification.
Checks if the given tracer name is valid.
Writes the given object to the given output stream.
Reads an object from the given input stream.
Adds a direct dependency.
Returns a list of all the dependencies.
Finds the class with the given name locally.
Finds a resource locally.
Find resources locally.
Create and register profile m.
Resumes a transaction.
Returns the set of SBBs in the given component repository.
Gets the resource adaptor entity links.
Initializes the SLE state.
Shuts down the SLE state.
Validates the state transition.
Generate named usage parameter getter.
Sets the value of the field with the given name.
Builds the database.
Adds a value to the query.
Executes the given transaction and returns the result.
Parses a region request from a string.
Returns the region of the relative box.
Gets the on type.
Sets the list of viewing hints.
Adds a viewing hint to the resource.
Sets the list of renderings.
Adds renderings to the resource.
Merges a list of profile objects into one.
Parses a rotation request from a string.
Parses a size request from a string.
Initializes the ADB connection.
Get the dump of the current device.
Handles a pop box.
Pushes the GPS2 device to the local location.
Cleans the temp file.
Takes a dump of the device and pulls the dump to the temp directory.
Get the crash log file.
Detabify the given tab width.
Returns a new text editor that indents the specified number of spaces.
Tokenizes the text.
Convert a Markdown string to a Markdown string.
Escape special chars within tag attributes.
Adds an exception to the exception list.
Closes the statement cache.
Find the parent fqcn of the given type element.
Writes the barbershop to a file.
Write a bit vector header divider.
Appends the given bit strings to the given bit vector.
Reads data from the given input stream.
Gets a list of type from a path.
Set the Klov report.
Adds a screen capture to the current step.
Sets the system info for the given key.
Creates a selector that selects a property.
Creates a selector that selects the given property name and alias.
Extract validation annotation data.
Extracts all annotations for a property.
Finds the annotations for the given property.
Returns the property descriptor for the given property name in the given type.
Creates a new instance from the given map.
Creates a new FieldMapper from a map of properties.
Converts an object to a map.
Convert an object to a map.
Returns a map of values for the given annotation.
Creates a composite validator for the given validation meta data.
Lookup the list of validators and initialize them with the validation meta data properties.
Looks up a validator in the registry.
Apply validation meta data properties to validator.
Removes a property from the properties map.
Sets the time of the clock to the given time.
Returns the total size of all caches.
Computes a hash code for the given object.
Opens a database.
Put all values into the database.
Removes all keys from the database.
Returns an iterator that iterates over the elements in the database starting at the specified key.
Load all by keys.
Closes the database.
Reduce by double array.
Reduces an array by r.
Calculates the variance of a vector.
Returns the mean double value of the given long array.
Invokes a method from an object argument.
Reduce by double array.
Returns a string representation of the given timestamp.
Returns true if the given object matches the given criteria.
Creates a criterion that requires a field not in one of the specified values.
Creates a criteria from a list of objects.
Creates a criteria object from a JSON string.
Adds an array of integers to the end of the array.
Returns the largest element of an array.
Returns the first element of the given list.
Returns the last element of the list.
Returns the last element of the list.
Returns the least count elements in the list.
Returns the minimum element of a list.
Get the minimum element of an array.
Process an array of maps.
Handle collection of maps.
Loads the class from the given map.
Returns the value associated with the given key.
Creates a tool tip with the given name space.
Appends a hexidecimal number to the end of this sequence.
Process the write queue.
Starts the write queue.
Support the subscript operator with a char for a string.
Get the first character of a string.
Checks if the given string is in the given character array.
Add a character to a string.
Add objects to a string.
Compacts a string.
Splits a string into an array of strings.
Splits a string by space.
Splits a string by a pipe.
Converts a char array of array to a string array.
Converts the given string to camel case.
Checks if the start string is inside of the end string.
Under-bar-case string.
Convert a number to a string.
Sorts the given array of sorts.
Sorts the given list according to the natural order of the given fields.
Returns a comparator for the given fields.
Returns a list of child comparators for the given fields.
Returns true if the given value is in the given map.
Test if two ints are equals or die.
Test if two arrays are equals or die.
Returns the sum of the values in the array.
Rounds a number up to the nearest power of 2.
Sorts the specified list using the specified sort-by and fields.
Sorts the specified list using the specified sort-by and fields.
Sets the value of a field from a map.
Converts an object to a list of objects.
Create the SQL to load all version data from the given table.
Deep copy of a list.
Checks if a value has a string field with the given name.
Checks if a class has a string field with the given name.
Returns true if the given class has a field with the given name.
Gets the first comparable or primitive from the given class.
Returns the sortable field of the given value.
Compares two cache entries.
Compares the current time with the given time.
Sorts the given list according to the given sort criteria.
Sorts the specified list using the specified sort-by option.
Sorts the entries of the given map using the given sortBy and nulls first.
Sorts the values of the given map according to the given sort-by and nulls first
Sorts the keys of the given map using the given sortBy and nulls first.
Sorts the specified array using the specified sort-by option.
Returns a universal comparator for the given field, using the given ascending and nulls first.
Returns a universal comparator.
Returns the value associated with the given key.
Returns the value associated with the given key.
Evicts all cache entries from the cache if needed.
Dynamically initialize the minimum and maximum values if needed.
Allocate a buffer of the given size.
Determines if we should exit.
Manages the input writer channel.
Enqueue empty maybe flush.
Starts the monitor.
Starts the timer.
Returns the value associated with the given key.
Returns the main query plan for the given expressions.
Filters a group.
Tick the timer.
Synchronously syncs the output stream to disk.
Cleans up the output stream.
Writes the next buffer to the output stream.
Writes a byte buffer to disk.
Initializes the output stream.
Put all values in the map.
Returns the key bytes for the given key.
Reads the meta data from the properties file.
Extracts the meta data from a string.
Returns the list of validator meta data for the given property.
Extracts the validator meta data.
Extracts the validator meta data from a collection of annotations.
Convert annotation data to validator meta data.
Splits a string into an array of strings.
Splits a string by white space.
Splits a string by the given delimiters.
Removes all characters from a string with the given delimiters.
Splits a string by chars none empty.
Parses a double from a string buffer.
Parses an int from a string buffer.
Parses a long from the specified range of the specified string.
Get a property by its path.
Gets the fields from the given object.
Gets the type of a property.
Injects the given property into the given object.
Sets the value of the property at the given path.
Returns the value of the property with the given name in the given path.
Returns the value of a property of an object.
Returns the integer value of a property.
Initializes the message.
Creates a message with the specified key and arguments.
Creates a new message with the given message and subject.
Converts a list of keys to an array of values.
Returns the subject of the validation context.
Parses the given text as a JSON object.
Sends a request to the server.
Delete the database with the given name and confirm.
Creates a database with the given name.
Returns a list of uuids.
Triggers a replication operation.
Query for a value of the given type.
Sets whether or not the view should be descending.
Synchronize all design documents with the database.
Returns the design document with the given id.
Get all design documents from the desk.
Get a design document from a desk.
Saves the replicator to the database.
Finds a replicator document.
Find all replicator documents in the database.
Remove the replicator from the database.
Finds an object by its id.
Returns a list of objects that match the given json query.
Checks if the document with the given ID exists in the database.
Bulk create a list of objects.
Adds an object to the repository.
Executes an HTTP PUT request.
Executes a POST request.
Executes a DELETE request.
Validates the response.
Sets the entity of the request.
Adds an attachment.
Returns a list of changes.
Reads the next row.
Convert the money to a string.
Shuts down all locks.
Writes a byte array to an output stream.
Add tags to a metric.
Verify and create the temp tables.
Returns the namespace ID for the given namespace.
Checks if the request method is a query.
Send authentication request.
Get the verb from the HttpServerExchange.
Generate the subject access review.
Called when a connection is received from the server.
Handles a client request failure.
Initializes the session.
Find all scheduled jobs in the given time slice.
Convert a map of buckets to a list of buckets.
Ends an exchange.
Find all data from a bucket.
Creates a new Buckets from the specified range of buckets.
Sends a message to the producer.
Send one way message.
Sends a message to the specified topic and tag.
Scans the given string starting at the given cursor.
Adds a file to the zip.
Replaces the given file with the given text.
Builds the zip file.
Generates metrics for the given component.
Fetches the content for the given content id.
Fetches the content of an order item.
Uploads the given export transformation to the link container.
Generates a file generation metrics from the given components.
Creates a random file in the given parent directory.
Ends the document.
Registers an adaptor for the given type.
Registers a renderer for the given type and attribute renderer.
Prepares the template for the given domain object.
Adds a domain object to the list.
Sets the value of a property.
Adds a child object to this configuration object.
Creates a supplier that builds a file from a directory.
Copy the contents of the given input stream to the given output stream.
Parses a document from a file.
Parses an XML document from the given reader.
Returns a stream of elements in the given parent element.
Returns a stream of child nodes in the given parent element.
Returns the first child element of the given parent element with the given names.
Returns a stream of named elements in the given element.
Validates the given XML against the given XML schema.
Main entry point for the archiver.
Create a ContentBuilder from an input stream.
Create a ContentBuilder from a resource.
Processes the given entry with the given processor.
Encodes the given string using the Ascii characters encoding.
Sets the signature of the request.
Remove white space from a char array.
Sign the request handler.
Sets the upload data for the given object key.
Completes a multi upload.
Handles the request for a single notification.
Adds the notification state for the given entry id.
Returns true if the cache has expired, false otherwise.
Returns the notification with the given id.
Returns the set of addressees for the given id.
Get an addressee by id.
Returns a list of events for a notification.
Returns the event with the given id.
Gets the rest for a single notification.
Returns the entry with the given id.
Gets the authentication token.
Returns the total number of items in the notification.
Adds a list of notification categories to the notification.
Fetches a notification from SSP.
Creates a notification object with the given error message.
Maps a response entity to a notification response.
Reads a notification entry from the database.
Attaches the actions to the notification entry.
Normalizes a link.
Gets the notification category.
Get the notification source from the portlet preferences.
This method is invoked when a notification is received from the server.
Read notification response from file.
Returns the school id from the request.
Extracts the user id from the response.
This method is invoked when a notification is snoozed.
Gets the attributes map.
Normalizes a vector.
Checks if two boxes are contained.
Calculates the closest point between two points.
Computes the sign of this vector.
Sets the values of this object to the values of the given object.
Sets the value of this quaternion to the given values.
Convert the input point to the output point.
Convert the input quadrilateral to the output quadrilateral.
Computes the bounding box of the given quadrilateral.
Computes the bounding box of a polygon.
Computes the center of a quadrilateral.
Computes the average of all vertices in the input.
Calculates the convex hull of a list of points.
Remove the polygon almost parallel.
Calculates the average of the error between two points.
Computes the area between two vectors.
Checks if the given quadrilateral contains the given point.
Check if two triangles contain one another.
Computes the intersection between two points.
Computes the intersection of two vectors.
Computes the intersection of two lines.
Returns the intersection of the two vectors.
Computes the intersection of two vectors.
Returns true if the given ellipse contains the given ellipse.
Returns the intersection of the two points.
Returns the value at the specified index.
Convert a matrix to a quaternion.
Replies the x-coordinate of the given vector.
Sets the x-coordinates of a vector.
Replies the y-coordinate of the specified point.
Rotate a vector by a scalar.
Sets the z-coordinates of a rotation matrix.
Convert a rotation matrix to a rotation matrix.
Calculates the rotation angle of a rotation around an axis.
Sets the angle of the slope.
Create a new twist coordinate.
Sets the initial and end transforms.
Interpolates the vector by the given where value.
Computes the svd of a list of points.
Solves the given point on the plane.
Returns the length of the side of the vertex at the given index.
Returns true if this node is inside the given node.
Convert a Discrete Fourier Transform to a Discrete Hartley Transform.
Convert a ConicGeneralF64 to a Discrete Fourier Transform.
Convert a ConicGeneralF64 to a ParabolaGeneralF64.
Convert parabola general f64 to conic general f64.
Divides p by v.
Convert a matrix to a matrix.
Convert a 3D Rx3D object to a 3D tuple.
Sets the parameter vector.
Returns the Euclidean distance between two points.
Returns true if the two lines intersect.
Returns true if the plane is contained in the plane.
Returns true if the line intersects the sphere.
Interpolates two vectors using the given where value.
Extracts the quaternion from a Q3D matrix.
Processes the given input array and stores the result in the hull.
Sets the motion of a Discrete Fourier Transform to no motion.
Convert a F64-encoded object to a Homogeneous object.
Converts a F64-F64-F64-F64-F64-F64
Rotates the axis by the given values.
Returns true if the two vectors are identical.
Convert a lat-lon coordinate to a unit vector.
Draw a circle between two points.
Calculate the squared radius between two points.
Returns the closest point between two points.
Returns the closest point of the line to the given point.
Returns the closest point in the plane to the given plane.
Calculates the closest point on the line.
Finds the closest point between two vertices.
Transforms the given F64 object to the equivalent F64 object.
Transforms a F64 object into a vector of points.
Returns true if this quadrilateral is equal to the given quadrilateral.
Calculates the acute angle between two vectors.
Convert the source point to the target point.
Convert the angle and distance from the source to the destination.
Convert a point to a point.
Convert a Java object to a Java object.
Convert a point to another.
Convert a point to another.
Convert the source point to the target point.
Convert the source point to the target point.
Convert a point to a slope.
Convert the input to the output.
Convert the input to the output.
Convert a plane to a world.
Point2DTO3 d.
Convert a Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing Boeing 737
Returns true if t is equal to tol.
Returns a copy of this vector.
Returns the squared norm of this vector.
Computes the tangulation of a line.
Returns true if this element has uncountable values.
Returns true if the given parabola is equivalent to this parabola.
Returns the center of the poi.
Calculates the acute angle between two lines.
Returns true if p is an infinite hierarchies.
Generate a list of random n-dimensional points.
Convert H to E.
Subtract two vectors.
Returns true if the two vectors have the same sign.
Sets this rectangle to the specified rectangle.
Convert an ellipse rotated f64 to a quadratic f64.
Computes the point of a rotated ellipse.
Computes the angle between the ellipse and the rotated ellipse.
Computes the tangent of the given point.
Selects the tangent of the line.
Returns the corner at the given index.
Returns the Euclidean distance between two vectors.
Returns the Euclidean distance between two points.
Calculates the Euclidean distance between two points.
Returns the distance between the plane and point.
Replies the distance between the specified point and the specified cylinder.
Returns the Euclidean distance between two segments.
Returns the squared Euclidean distance between two segments.
Returns the Euclidean distance between the quadrilateral and p.
Computes the squared Euclidean distance between two quadrilaterals.
Calculates the Euclidean distance between two points.
Computes the squared Euclidean distance between two points.
Returns the distance from the given line to the origin.
Returns the Euclidean distance between the given ellipse and the given p.
Returns the Euclidean distance between the given ellipse and the given p.
Adds a new transform to the path.
Returns the closest point of the line to the given point.
Returns the closest point in the specified ellipse.
Computes the polynomial curve.
Creates a random number generator.
Computes the canonical form of the output.
Checks if two vectors are identical.
Normalizes a vector.
Creates a matrix from a matrix.
Convert the given matrix to a new matrix.
Returns the Euclidean distance between the specified points.
Sets the rotated ellipse.
Normalizes this vector.
Calculates the distance between two triangles.
Returns the quadrilateral of the given quadrilateral.
Returns the simple polygon of a polygon.
Calculates the mean of a vector.
Returns the order of the points in CCW.
Computes the normal of a set of points.
Returns true if the poly is convex.
Multiply this vector by a scalar.
Returns the maximum absolute value.
Computes the Euclidean distance between two points.
Computes the squared Euclidean distance between two points.
Returns a list of random points in the plane.
Returns a list of random values.
Returns a list of random n-dimensional values.
Calculates the mean of a list of points.
Calculates the mean of a list of points.
Invalidate all the JWTs with the given credentials.
Invalidates all cache entries that match the given predicate.
Combines a collection of strings to a set of strings.
Get server features from server directory.
Get the configuration dropins features.
Get the parsed xml features from the server file.
Parse the include node.
Parse the feature manager node.
Downloads the json files for the given product id and version.
Get a set of liberty features from a set of JSON files.
Checks if there are only open liberty features in the list of features to install.
Returns true if the given collection contains all of the elements of the given collection ignoring case.
Extracts the next product version from the version string.
Extracts the symbolic name from a jar file.
Gets the map based install kernel jar.
Returns true if the two files have a replacement jar.
Extracts the version from the given file name.
Compares two versions.
Get product info.
Checks if the given artifact is a Spring Boot Uber jar.
Returns the property of the given key in the given class.
Checks if the file extension is working in this environment.
Moves the given length back to the center.
Checks if two objects are equal.
Loads an integer value from a string.
Throw pizza party.
Verify the turtle.
Swaps the blank index of the target puzzle.
Gets the distance between the goal and all cells.
Prints a formatted string with the specified format and arguments.
Prints a formatted string with the specified format and arguments.
Make a number of fish from a given number of fish.
Prints a variable to System.out.
Returns a uniform integer between the two specified integers.
Returns a uniform value between the two specified values.
Returns the index of the poisson function.
Discrete an array of doubles.
Capitalize the first character of a word.
Uncapitalize the first character of a word.
Fixes the given path.
Convert a CriteriaJoin to a String.
Returns the token sentence for the given token.
Filters the request context by extracting the auth token from the cookie list.
Extract auth token from cookie list.
Registers all Guice bindings in the given environment.
Recursive method to get all permissions for a role.
Adds a projection to this list with the specified alias.
Convert JobInfo to JobDetail object.
Converts a Trig to a Trigger.
Sets the count interval values.
Sets the start and end time of the given trigger.
Sends an item to the queue.
Writes the data to the given output stream.
Initializes the scheduler with the given properties.
Returns a collection of all the fields in the given class.
Returns a map of field names to field values.
Configures the encryptor with the given configuration.
Generate attributes hash.
Generate a token string.
Sends a message to the specified item.
Generates a strong password for the given user.
Returns the user with the given name.
Hashes the given password with the given account name.
Verifies the strength of the given account name.
Commits the transaction if it is active.
Rollbacks the transaction if it is active.
Starts the transaction.
Checks if the given token is authorized.
Parses the given object as a date.
Gets the response.
Restriction for Equality.
Create a Criterion that is NOT equal to the given value.
Creates a Restriction that requires an object to be less than the specified value.
Creates a Restriction that requires a value to be less than or equal to the given value.
Creates a GreaterThan restriction.
Creates a Restriction that requires a value to be greater than or equal to the given value.
Creates a Restriction that accepts only elements that are not equal to the given value.
Restriction for an IN operator.
Creates a new namespace manager with the given namespace and href.
Returns a copy of this representation with the specified content.
Returns a copy of this representation with the specified rel.
Returns a new representation with the given value.
Creates a new resource representation with the given namespace and href.
Returns true if the given byte array can be decoded.
Encodes a string into a byte array.
Compares two Readers for equality.
Moves the source file to the destination file.
Touches the given files.
Returns the base name of the given file.
Adds padding to the buffer.
Returns the short name of the given class.
Returns the set of interfaces and superclasses of the given class.
Verifies that the given password matches the given hash.
Reads a string from the system input stream.
Appends a byte to the end of this buffer.
Appends the specified number of bytes to the end of this buffer.
Returns a copy of the given array.
Returns the addition of this fraction to the given fraction.
Subtract a fraction from this fraction.
Multiplies this fraction by the given fraction.
Multiply this fraction by the given fraction.
Returns the maximum value in an array of longs.
Returns the minimum value in an array of longs.
Throws an exception if the given condition is true.
Fetches the content of a location forecast.
Fetches the content of a date from the Meteo server.
Fetches the content of the specified latitude and longitude.
Finds hourly point forecasts from now.
Finds the closest forecast for the given date.
Fetches the weather data for a given query.
Create a long term forecast.
Create a long term forecast.
Parses a Geomajas coordinates string into a Location object.
Fetches the content of the question mark.
Create the name of the wind symbol for a point.
Returns the beaufort level for the given point.
Creates a new URI from the given URI.
Returns true if the current date is a sun date.
Returns the point forecast for the given date.
Get the best fit period forecast.
Fetches the weather data for the given longitude and latitude.
Fetches the weather data for the given latitude and longitude.
Update the database.
Invokes a method on the given script engine.
Acquires an object from the cache.
Gets referenced object.
Gets wrapped object.
Reads the configuration from the service path.
Returns true if the substitutor is enabled.
Create a class iterator.
Returns the decoder for the given configuration.
Returns a list of services for the given intf.
Returns the module for the given interface and module type.
Acquires an input stream from the pool.
Returns the size of this data source.
Creates a new referenced data object.
Returns the component at the specified index.
Returns the prefix for the given upper index.
Returns true if the compiler is colored.
Executes the given HSRE pattern with the given data.
Finds a loop.
Subset the given subexpression.
Returns true if the given subexpression is disjoint from the given subexpression.
Clones all the outgoing states in the given state.
Adjusts the left and right of a subre.
Set the marks of the given subre.
Computes the nfa node for the given subre.
Parses a subre.
Deltraverse a state.
Draws a non-word segment.
Clones the wordchrs.
Scans a number.
Brackets the current state.
Scans a plain string.
Creates a new Lacon state.
Add a onechr to the state.
Processes a set of unicode characters.
Returns the color of the given character.
Returns a short representation of the pseudo-color.
Processes a subrange of the given state.
Confirms that all the colors in the nfa are OK.
Sets the colorchain of the given arc.
Uncolorchain the given arc.
Dumps the current colors.
Starts the regular expression.
Sets the lexnest pattern.
Returns the color for the given codepoint.
Initializes the state set.
Returns the number of times the state was lastcold.
Returns a set of unicode codes for the given character.
Returns the unicode set for the given cclass name.
Sorts the arcs by carc color.
Creates a new state with the given flag.
Moves the arcs from old to new.
Moves the arcs from old to new.
Copy a state from one state to another.
Copies all out chains of old state to new state.
Drops a state from the graph.
Frees the given state.
Moves the arc from one state to another.
Copies the state s into stmp.
Special colors are not colorless.
Dumps the state of the NFA.
Dumps a state to the log.
Dumps all the arcs in this state to the given string builder.
Dumps the arcs in the given state to a string builder.
Optimizes the NFA.
Analyzes the arc.
Combines two arcs.
Cleans up all states.
Marks the given state as unreachable.
Marks a state that can be reached by another state.
empties the NFA.
Returns true if the given arc is empty.
Get the rule parameters.
Get the rule interpreter plugins.
Returns a map of plugin names to the report plugins.
Returns the rule selection for the given rule set.
Runs the command line.
Returns the error message for the given execution exception.
Gathers the standard options.
Gathers the tasks options from the task factory.
Gathers the task names from the given task factory.
Interprets the command line.
Parses the given arguments and returns the command line.
Executes a task.
Reads properties from the command line.
Prints usage information.
Gets the home directory.
Creates the plugin class loader.
Returns the set of containing IDs of all cells in the grid.
Returns the set of IDs of all cells intersecting the given bounds.
Returns the URI for the given method and target.
Add a route to the router.
Returns the number of routes in this list.
Add a route to the first route.
Add a route to this router.
Add a route to the last route.
Returns true if any of the given tokens are matched.
Returns true if the given property is strictly equal to the given value.
Get store file name.
Compare two folders.
Compares two entries.
Compares two bookmarks.
Sets the last modified time of the servlet.
Get the list of dependants.
Finds the class with the given name.
Parses the Authorization header.
Gets the instance of the FunctionMapper.
Maps a function to a method.
Returns a function mapper for the given method name and arguments.
Resolves the method for the given prefix and local name.
Sets the contents of the buffer to the specified values.
Resolves a variable.
Parses a node.nodes file.
Parses the given jar file into a Node.
Parse the tag file directives.
Create a JSP compiler.
Get a resource as stream.
Calculates the last modification timestamp for all channels.
Find all the class loaders in the stack.
Checks if the given class loader is a parent of this classloader.
Start loading the named resource.
Reads the header of an input stream.
Paginates a list of data.
Extracts a meta key from a string.
Fill requirements.
Get the TagFileInfo for the given tag name.
Parses the implicit tld.
Returns the checksum for the given file.
Returns the size of a file.
Validate channel name.
Seeks to the specified block number.
Locates a block by its position.
Get Maven artifacts.
Update the state and reps.
Calculate 1 byte prices.
Calculate the long rep prices.
Calculates the normal match prices.
Throws an exception if the expected byte is not a valid UTF-8 byte.
Throws an exception if the given byte is invalid.
Scan the tlds.
Scans the given resource path and returns the tld information.
Adds a servlet wrapper to the list of servlet wrappers.
Gets the parent class loader.
Sets the bytecode for the given name.
Returns the birth time for the given name.
Saves the bytecode of a class.
Checks if the jsp files are compiled.
Initializes the class path.
Starts the thread.
Stops the thread.
Runs the task.
Finds a channel by its name.
Finds a channel by by.
Update deploy group cache.
Copy the contents of the given input stream to the given output stream.
Parses a JSP node.
Parse attributes from a jsp reader.
Add a list of files to the parent node.
Parse the jsp attribute and body.
Adds an attribute.
Adds a child node to this node.
Returns an iterator of all the attributes.
Returns an iterator over the children of this node.
Finds all children with the given name.
Converts this coordinates to a Maven coordinates object.
Finds the alias for the given variable.
Sets the current thread.
Unsets the thread.
Finds and returns the current print stream.
Write an optional field.
Writes a string value to a writer.
Add an element to a parent element.
Add an element to a parent element.
Writes the next character to the given writer.
Sets the writer to use.
Reallocates the buffer.
Map a page of nodes.
Finds the state with the given key in the given parent state.
Registers a new model with the storage provider.
Streams data to the given consumer.
Returns a model and view for the given job.
Checks if the given request is authenticated.
Closes the output stream.
Creates a new Gson instance.
Encode for LZM.
Returns the union of provided meta data and extracted meta data.
Get the jsp exception from the request.
Checks if the given coordinates is a check sum.
Finishes writing to the file.
Get the exception that caused this request.
Evaluate expression.
Makes a prefix from the OSGi properties.
Checks if the given path is an XML file.
Parse the tag file directives.
Loads a tag file.
Removes all generated class files for the given class file name.
Sets the URI root.
Scans all files in the given base directory for jsp pages.
Locates the URI root of a file.
Moves the cursor to the next position.
Return true if the given string matches the pattern.
Returns true if the given string matches any optional spaces followed by the given string.
Skips characters until the end of string is reached.
Marks the end of the string as skip until the ignore esc character is encountered.
Marks the end of this line for the given tag.
Parses a token.
Pop a file from the stack.
Makes this coordinates unclassified.
Filters a list of aspect information based on a predicate.
Returns the missing IDs of all the aspects in this aspect.
Sets the schema resource prefix.
Sets the dtd resource prefix.
Convert a tree node to a tree node.
Merges errors from the given result into the given result.
Initializes the given binder.
Scans all channel aspect factories for channel aspect information.
Unqualify the given path.
Invokes the plugin for the given node.
Returns a byte array of the specified size.
Returns an int array of the specified size.
Create an AetherResult from a collection of ArtifactResults.
Get the resource as stream.
Validates the given page.
Pushes a stream to the output stream.
Get the encoding of a jar file.
Report a fatal error.
Returns the real path of the resource.
Returns the URL of the resource at the given path.
Returns the contents of a resource as a stream.
Returns a set of resource paths for the given path.
Logs a message and exception.
Add a filter.
Returns the number of bytes required to encode a dictionary.
Get memory usage.
Sets the preset dictionary.
Moves the window to the new location.
Fills the window with data from the given byte array.
Process pending bytes.
Returns the length of the match.
Returns the number of matches in the buffer.
Verifies that the match len is equal to the match len.
Moves the cursor to the given position.
Recycles the buffer.
Flushes the buffer to the output stream.
Clears the contents of the buffer.
Flushes the output stream.
Closes the response.
Writes a string to the output stream.
Throw a JasperException with an error report.
Makes a list of key-value pairs from the given meta data.
Generate the class.
Compiles the class.
Initialize the java compiler.
Checks if a system jar is in webinf.
Quotes the given character.
Generate the declaration declarations.
Compile the tag handler pool list.
Generate the prolog for the given page.
Generate the common postamble.
Generate the postamble for the given node.
Generate the jasper tag handler page.
Generate tag handler attributes.
Reads the properties from the given input stream.
Exports a channel to a zip file.
Validates the given XML view.
Returns the handler for the given class.
Parses the given expression.
Selects a property from a property group.
Check if the given URI is a jsp page.
Prints a comment.
Prints a string to the output stream.
Prints a string to the console.
Prints a multi-line string.
Returns the expression in XML.
Check if the given scope is valid.
Escapes the given string for inclusion in an XML document.
Validate expressions.
Get the tag handler class name.
Returns the java package name for the given path.
Splits a path into an array of strings.
Convert a Java identifier to a Java identifier.
Mangles a character to a string.
Returns true if the given key is a java keyword.
Adds a property to the given map.
Returns a string representation of the given modifier.
Returns the set of metadata for the given namespace and key.
Runs the user write operation.
Returns the basename of the given name.
Puts a string value into the cache.
Loads the metadata for a database.
Builds a collection of metrics from the given payload.
Resolves a number.
Writes an object to the given output stream.
Returns the TTL for the given rollup type and granularity.
Create prepared statements.
Track delayed metrics for a tenant.
Track delayed aggregated metrics for a tenant.
Reads an unversioned double value from the stream.
Write an unversioned double or long value.
Returns an unmodifiable view of all properties.
Creates the container in the blob store.
Schedules all slots that are eligible for rollup.
Clears all running slots for the given slot key.
Registers a callback for the given event.
Registers a callback for the given event.
Removes an event from the queue.
Emits a single event.
Returns the list of listeners for the given event.
Returns the name of the remote host.
Appends a rollup event to the output stream.
Parses a timestamp from a file name.
Starts the server.
Get the computer type for a given rollup type.
Creates a new instance of IO from the configuration.
Puts a TTL configuration into the builder.
Computes the maximum lengths of the given headers.
Formats a header.
Formats an array of output formatters.
Registers ZooKeeper metrics.
Sets the name of the thread pool.
Adds a metric index to the set of metric names.
Get the complete metric names from the metric index map.
Returns a list of tokens for the given locator.
Asynchronous put operation.
Creates a Granularity from points less than or equal to the requested duration.
Sets the server time.
Returns a set of unique hosts.
Returns the maximum number of connections per host.
Returns an iterable of MetricColumnFamily objects.
Insert metrics from a collection of metrics.
Insert metrics for the given granularity.
Returns the set of locators for the metrics.
Attempts to grab the current and next level of the given query.
Starts the uploader thread.
Stops the uploader.
Returns true if the locator is currently in a batch layer.
Returns true if the given locator is currently in the discovery layer.
Returns true if the given locator is currently in the token discovery layer.
Returns true if the given locator should be inserted before the given slot.
Sets the delayed locator for a slot.
Maps a range to its finer ranges.
Returns an iterable over the ranges for the given interval.
Inserts the given metrics into the cache.
Insert metrics for the given column family.
Returns true if the given metric is delayed, false otherwise.
Gets the bound statement for the metric if it is delayed.
Gets the metadata values for the given locator.
Check if the Content-Type header is valid.
Check if the accept header is valid.
Inserts a batch of metrics into the elasticsearch rest.
Returns true if the gauges and sets are valid.
Checks if the file manager is still running.
Returns a new instance of the extractor.
Returns true if the given OS name and version are compatible with the given OS name.
Starts the download process.
Stops the RabbitMQ process.
Returns a default instance of PnSignalingParams.
Add a list of ICE servers to the list of peers.
Adds the ice servers to the peer.
Sends a message to a user.
Sends a message to all peers.
Gets the value of the weitereAdresse property.
Gets the value of the userDefinedSimplefield property.
Gets the value of the userDefinedAnyfield property.
Sets the value of the apiReferencfelder property.
Gets the value of the multimediaAnhangType property.
Gets the status of the VBM.
Returns the status of the Aktiv status.
Gets the status.
Gets the value of the importmodus property.
Gets the value of the adressdruck property.
Gets the value of the waehrung property.
Gets the bodenbelag type.
Sets the value of the region property.
Sets the value of the area property.
Sets the value of the address property.
Sets the value of the description property.
Sets the value of the rentCollectionPeriod property.
Sets the value of the furnished property.
Sets the value of the phone1 property.
Sets the value of the phone2 property.
Sets the value of the contactName property.
Sets the value of the phoneInfo property.
Sets the value of the mainEmail property.
Sets the value of the ccEmail property.
Sets the value of the externalId property.
Sets the value of the agentId property.
Sets the value of the epart property.
Sets the value of the jahrgang property.
Sets the value of the gebaeudeart property.
Sets the value of the buero_typ property.
Checks if the given string is a numeric value.
Sets the value of the gebiete property.
Sets the value of the gruppe property.
Sets the value of the agent property.
Gets the value of the property property.
Sets the value of stand property.
Gets the value of the userDefinedExtend property.
Sets the value of the zeiteinheit property.
Gets the value of the zimmer property.
Gets the value of the haus property.
Gets the value of the bueroPraxen property.
Gets the value of the gastgewerbe property.
Gets the value of the land undForstwirtschaft property.
Gets the value of the sonstige property.
Gets the value of the zinshausRenditeobjekt property.
Gets the value of the terrain property.
Sets the value of the umfang property.
Sets the value of the wohnungtyp property.
Returns the country code for the given country.
Returns the country code for the given iso3 code.
Returns the country code for the given country.
Returns the country code for the given iso2 code.
Returns the name of the given country.
Returns the name of the given country.
Gets the value of the anbieter property.
Sets the value of the category property.
Gets the value of the pdf property.
Sets the value of the aktionart property.
Sets the value of the realestateitems property.
Sets the value of the pacht property.
Upgrades the document from the previous version.
Gets the value of the content property.
Returns the names of all the fields in this data type.
Sets the value of the blick property.
Sets the value of the pauschalmiete property.
Sets the value of the monatsmiete property.
Gets the value of the parkplatz property.
Sets the value of the lastenaufzug property.
Sets the value of the zustand art property.
Gets the value of the feld property.
Dumps this record to the given writer.
Returns the value at the given position.
Returns a list of all the records in the table.
Sets the value at the given position.
Sets the value of the ctype property.
Sets the value of the haustyp property.
Gets the value of the energiepass property.
Sets the value of the keller property.
Sets the value of the grundst_type property.
Sets the value of the geschlAttr property.
Sets the value of the hallen_type property.
Gets the value of the wiederholungmin property.
Gets the value of the teilungsteigerung property.
Upgrades an open immo document from the previous version.
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art property.
Sets the value of the modus property.
Gets the value of the emailManstige property.
Gets the value of the telNstige property.
Sets the value of the handelType property.
Sets the value of the apiReferencant1 property.
Sets the value of the apiReferencant2 property.
Sets the value of the apiReferencfeld3 property.
Gets the value of the row property.
Sets the value of the distanz_zu sport property.
Gets the value of the anhang property.
Gets the value of the objektKategorie2 property.
Gets the value of the objektzustand property.
Gets the haus kategorien type.
Gets the value of the ausstattungsqualitaet property.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Sets the value of the wert property.
Sets the value of the ackerland property.
Sets the value of the bauerwartungsland property.
Sets the value of the bootsstaende property.
Sets the value of the buero property.
Sets the value of the camping property.
Sets the value of the doppelhaus property.
Sets the value of the einfamilienhaus property.
Sets the value of the einzelhandel gross property.
Sets the value of the einzelhandel_klein property.
Sets the value of the garagen property.
Sets the value of the garten property.
Sets the value of the gastronomie property.
Sets the value of the gewerbe property.
Sets the value of the hotel property.
Sets the value of the industrie property.
Sets the value of the keineBebauung property.
Sets the value of the kleingewerbe property.
Sets the value of the lager property.
Sets the value of the mehrfamilienhaus property.
Sets the value of the obstpflanzung property.
Sets the value of the parkhaus property.
Sets the value of the produktion property.
Sets the value of the reihenhaus property.
Sets the value of the stellplaetze property.
Sets the value of the villa property.
Sets the value of the wald property.
Sets the value of the anbieter property.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the value of the hallenLagerProximity property.
Gets the value of the parken property.
Gets the value of the freizeitimmobilieGwerblich property.
Gets the value of the objektartZusatz property.
Gets the value of the stellplatzart property.
Sets the value of the maxDauer property.
Gets the value of the feature property.
Sets the value of the zimmer_zimmer_typ property.
Upgrades an open immo document from the previous version to the new version.
Sets the value of the keine angabe property.
Sets the value of the erdwaerme property.
Sets the value of the solarheizung property.
Sets the Pelletheizung property.
Sets the value of the gas property.
Sets the value of the oel property.
Sets the value of the fernwaerme property.
Sets the value of the strom property.
Sets the value of the kohle property.
Generates a random string.
Generates a random string with the specified number of letters.
Generates a random string of the specified length.
Gets the value of the wohnungKategorienType property.
Sets the value of the benutzer property.
Sets the value of the objekte property.
Gets the value of the feed property.
Sets the value of the moebliert.
Gets the value of the serviceleistungen property.
Sets the value of the subAdministrationArea property.
Sets the value of the city property.
Sets the value of the locality property.
Downgrades an open immo document to its previous version.
Upgrade the document from the previous version to the new version.
Sets the value of the landType property.
Gets the value of the field property.
Upgrade the document from the previous version to the new version.
Gets the value of the ad property.
Sets the value of the gastgewType property.
Sets the value of the platzart property.
Gets the daten verkabelungs typ.
Gets the klimaanlage.
Gets the value of the image property.
Sets the value of the priceType property.
Sets the value of the newDesignAvailability property.
Sets the value of the directions property.
Sets the value of the co2Rating property.
Sets the value of the energyRating property.
Sets the value of the viewingDetails property.
Sets the value of the propertyStatus property.
Sets the value of the pictures property.
Sets the value of the bebaubarAttr property.
Upgrades an open immo document from the previous version.
Sets the value of the parken_type property.
Sets the value of the alter attribute.
Sets the value of the freizeitimmobilizitType property.
Sets the value of the telefonart property.
Sets the value of Emailart.
Sets the value of the overseasSales property.
Sets the value of the overseasRelevantProperty property.
Create a simplefield with the given name and value.
Gets the value of the fehler property.
Sets the value of the erbpacht property.
Gets the value of the stpMorphstige property.
Gets the valuelist property.
Sets the value of the minDauer property.
Sets the value of the zinsType property.
Gets the value of the photo property.
Sets the value of the metadata property.
Sets the value of the projects property.
Sets the value of the properties property.
Upgrades the document from the previous version to the new version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the value of the sonstige_typ property.
Sets the value of the distanz_zu property.
Gets the value of the distanzen property.
Gets the value of the distanzen sport property.
Checks if the given exception is compatible with throws clause.
Sets the bindings for this namespace.
Binds a namespace URI.
Remove the binding for the given prefix.
Checks if the given content contains an opening tag.
Consumes a comment token.
Consumes a comment from the given line.
Returns the index of the given token in the given line.
Initializes logging for the given location.
Starts a namespace mapping with the given prefix and URI.
Adds an iterator to the list of iterators.
Adds the given option to the list of options.
Adds a string option with the given short form and long form.
Adds an integer option.
Adds a long option with the given short form and long form.
Adds a double-option with the given short form and long form.
Adds a boolean option with the given short form and long form.
Parses the command line arguments.
Creates a new instance of the given class.
This method is called after the access has been completed.
Sets the target object.
Prepares the target class and method.
Finds the matching method.
Converts an integer into an unsigned string.
Serializes the given object to a byte array.
Deserializes a byte array into an object.
Get the first child element with the given tag name.
Get the text value of a child element by tag name.
Returns a list of all child elements of an element.
Returns true if the node name matches the desired name.
Returns true if the node name matches the desired names.
Set the size of a string.
Monitors the release listener for an object.
Adds an entry to the reference monitor.
Keep monitoring thread alive.
Calculates the mobile city of a mobile number.
Starts a prefix mapping.
Ends a prefix mapping.
Adds a new callback to the list of callbacks.
Parses the tree.
Returns the text color of the specified item.
Sets the values of the layout.
Returns the color of the divider at the specified position.
Sets the size of the text paint.
Get the x position of the divider.
Get the intro file from the remote library.
Returns a copy of the keyword names.
Returns an array of keyword arguments.
Returns the documentation for a keyword.
Starts the remote server.
Stops the server.
Starts the server.
Convert properties from properties file to json.
Convert properties from a file to a JSON string.
Converts an input stream to a JSON string.
Converts a properties object into a JSON string.
Convert a map of properties to a JSON string.
Convert a map of properties to a JSON string.
Converts a map of properties to a string.
Convert the properties to a JSON string.
Returns the radius of a shadow.
Returns a builder for the OCSP fetcher.
Finds an intermediate certificate.
Executes the mojo.
Preprocess Markdown files in the given directory.
Substitutes variables in a pattern string.
Extracts the title from a list of raw text.
Adds the title to the HTML file.
Replaces the variables in the given content with the new content.
Updates the relative paths of the given HTML string.
Copy files from one directory to another.
Checks if the given path is valid.
Wraps the slider content.
Fades the gauge up to the specified duration.
Fades the gauge down to the specified duration.
Calculates the percentage of the width.
Computes the overlap view for the given width.
Creates an intent to launch an activity.
Launch the activity.
Returns a list of facts for a given type and relation types.
Download file from response.
Build http client.
Create an access control entity.
Update a data model.
Create a full export.
Specify the host to use for the token provider.
Sets the client credentials.
Processes a graphQL query.
Get a list of bookmarks for a specific bookmark type.
Add permissions for a graph.
Writes the permissions for a specific graph.
Mark logic dataset graph with rulesets.
Closes the client.
Executes a SPARQL select.
Create a dataset graph.
Limit the number of threads per process.
Resize the geometry to the specified width and height.
Rotate the clock by the given degrees.
Sets the gravity value.
Strips all the profiles from the current user.
Sets a font with the specified style, size and color.
Adds a GIF source to the image.
Add a file to the GIF server.
Parses the arguments from the given object.
Prints usage information for the given object.
Extracts the time unit from a string.
Parses the given object into the given properties object.
Executes the specified URL on the screen.
Executes a file.
Interprets all slides in the specified file.
Sorts a list of rectangles according to their size.
Renders the template text.
Get the slide XML file for the given slide number.
Checks if the mouse event is in the range of the screen.
Intersects the specified element vertically with the specified element.
Executes an outbound operation.
Sends an outbound message to the SNS server.
Loads a file from the classpath.
Gets or creates a temporary directory.
Creates a new log value map.
Logs a message at the TRACE level.
Logs a message at the TRACE level.
Logs a formatted message and stack trace if DEBUG logging is enabled.
Logs a formatted message and stack trace if DEBUG logging is enabled.
Logs a formatted message and stack trace if INFO logging is enabled.
Logs a formatted message and stack trace if INFO logging is enabled.
Sends an INFO message.
Logs a formatted message and stack trace if DEBUG logging is enabled.
Logs a formatted message and stack trace if DEBUG logging is enabled.
Logs a formatted message and stack trace if ERROR logging is enabled.
Logs a formatted message and stack trace if ERROR logging is enabled.
Add to context line and method.
Starts a steno wrapper for an event.
Write key value pairs.
Serialize throwable.
Returns the log value.
Get the caller data for the logging event.
Creates a database in the temporary folder.
Checks the mappings for the given position.
Parse save attributes.
Save data to object in context.
Refresh the sheet row from the context.
Parse the save attribute string.
Get the save attributes list from a row.
Get save attribute from list.
Sets the save objects in hidden column.
Set the save attributes for a sheet.
Sets the save attributes for a row.
Prepares the context and attrs for a given cell.
Format a double value.
Put shift attributes.
Sets the workbook's serial wb.
Gets the value of the wbWrapper property.
Gets the formula evaluator.
Recalculate the max col counts.
Load a web sheet from an input stream.
Load a web sheet.
Load work sheet by tab name.
Exports the content to a file.
Saves the current workbook.
Submits the job.
Populates the given component.
Get the current sheet configuration.
Reads an encrypted document from a stream.
Returns the locale for the given component.
Get the picture of the response.
Gets the cell helper.
This method initializes picHelper.
Gets the validation handler.
Gets the chart helper.
Convert shared formulas.
Convert a PTG object to an array of PTG objects.
Convert a PTG for a watch list.
Returns an array of PTG objects representing a single PTG object.
Gets the rows list.
Assembles a list of serial rows from a list of serial rows.
Build dynamic row for ref ptg base.
Get the background color of the plot.
Get color from sp pr.
Finds an automatic fill color.
Get the X value of the cts color.
Convert a CTR color to an XColor object.
Get the x-schema for the given index.
Convert a xssf color to a color.
Get triplet from xssf color.
Get the bg color from the cell.
Finds the component name from the class.
Populates the attributes of the given component.
Returns the attributes type that match the given method name.
Sets a property on an object.
Returns the value of an object property.
Setup the control attributes.
Find cell validate attributes list.
Set up the faces cell picture charts.
Setup the faces cell charts.
Sets the picture style of the faces cell.
Initializes the charts map.
Get the pie title for a chart.
Set the style of a series.
Create a 3D pie chart.
Setup the style for the bar.
Initializes the xssf diagram.
Gets the chart id from parent.
Initializes the anchors map.
Generate single xssf chart.
Transforms an expression to a collection object.
Get full name from row.
Rebuilds the upper level formula.
Sets up the upper level formula.
Build the cell formula for the shifted rows.
Gather rows mapping by full name.
Change index number in shift map.
Change upper level final length.
Change the index number in hidden column.
Sets the full name of the hidden column.
Gets the original row number in hidden column.
Sets the original row number in hidden column.
Find parent rows mapping from shift map.
Find child rows mapping from shift map.
Returns the item at the given index in the given collection.
Build the current config range.
Checks if the given row index is a static row.
Checks if the given row is a static row.
Replace expression with cell value.
Returns a map of cell range addresses to cell range addresses for all cells in the specified sheet.
Returns a list of all the skipped regions in the specified sheet.
Add skip cell to list in the region.
Build a sheet comment from a list of tie-command aliases.
Build the cell comment from the tie command alias list.
Builds the sheet configuration map.
Get the sheet configuration.
Build form command from sheet config.
Verifies that the last cell in the given row is in the given stoppoint.
Build the sheet.
Check and repair the last row of the sheet.
Build command list from sheet comment.
Set the parent for a child command.
Check if the command list contains each command in the list.
Match command to sheet config form.
Copy template for tie commands.
Build the command list.
Processes a method line.
Process the command line.
Move a comment to a map.
Creates a new config command.
Builds a map of attributes from the command line.
Get the sheet configuration from the command.
Sets the footer of the form command.
Sets the body of the sheet configuration.
Sets the header of the sheet configuration.
Delete a row.
Remove all the ranges from the given shift map.
Finds a list of full names that should be removed from the given sheet.
Get each command from parts name.
Insert empty object in context.
Delete object in context.
Prepare collection data in context.
Index command range.
Check if a row can be added to a sheet.
Insert each template in the configuration range.
Evaluates a normal cell with the given value.
Evaluate the user formula.
Checks if the given string is a valid user formula.
Creates a comment for a cell.
Evaluate boolean expression.
Removes all cached rows in the given sheet.
Removes a single row from a sheet.
Removes the cached cell for the given row.
Removes the rows in the body.
Loads the picture from the current page.
Loads a chart from the current page.
Assemble the new value.
Get the cell value with format.
Gets the cell value without format.
Returns the string value of the cell with the given cell type.
Gets the cell string value with number type.
Set the value of a cell.
Set the cell value string.
Set the cell value boolean.
Set the date value of a cell.
Set the cell value number.
Copy rows from srcSheet to destSheet.
Copy a single row from one sheet to another.
Copy a cell from one sheet to another.
Copy the value of the source cell to the new cell.
Copy the style of the source cell to the new cell.
Clones the comment of a cell.
Creates a client anchor for comments.
Creates or inserts a comment for a cell.
Match comment settings.
Get the vml drawing from a cell.
Get the shape of a cell from a VML source.
Get the cell style from the source cell.
Convert a cell to a cell range.
Gets the row and col from the component attributes.
Get the init rows from the sheet configuration.
Gets the faces row from the body row.
Gets the faces cell from the body row.
Get the poi cell from a sheet.
Gets the skey from a poi cell.
Gets or adds a tie cell in a map.
Returns the name of the current data context.
Evaluate an expression.
Evaluate the expression.
Writes the current row to the given output stream.
Removes a row from the table.
Merges the given rows mapping into this one.
Recovers all the serial rows from the given sheet.
Get the chart type for the given chart.
Convert a style string to a stroke object.
Initialize chart data from xssf chart.
Set up the chart data.
Initialize xssf charts data.
Initializes the xssf drawing.
Get the chart id associated with the given anchor.
Get the chart id from child node attributes.
Build each object.
Save data in context.
Recalculates the formula.
Get the poi cell with the given row and column index.
Gets the faces cell with row col from the current page.
Restore data context.
Returns the last restore data context for the given full name.
Check if we need to restore the current data context.
Start restore data context.
Shift row ref.
Set the first row ref.
Set the last row plus ref.
Builds the cells for the given row.
Build single cell.
Reads an encrypted document from an input stream.
Build the category list.
Build a list of chart series from a list of chart objects.
Build chart series in list.
Get a list of colors from a list of dpts.
Returns the dpt at the specified index in the list.
Sets the command index map.
Get pictrues map.
Get the picture map from the XSSF object.
Index the picture in the map.
Generate the picture style.
Generate the chart style.
Gets the pattern.
Get the chart data.
Recover this cell from a sheet.
Get the row style for the given cell.
Get the font style for the given cell.
Get the cell font color.
Gets the cell font decoration.
Get the cell style.
Get the style for a column.
Get the alignment of the poi cell.
Get the vertical alignment style from the cell style.
Calculates the total height of a sheet.
Sets the cell style for the poi cell.
Gets the input type from a cell.
Returns the set of resource paths for the given path.
Gets the resource as stream.
Removes the prefix path from a resource.
Evaluate input type boolean.
Find a bean by its name.
Joins an array of shorts into a string.
Rounds the given value to the given number of places.
Returns the tab type.
Get the tab style.
Returns the default date pattern.
Gets the decimal separator by default locale.
Gets the thousand separator by default locale.
Sets the tie command alias list.
Build form watch list.
Build watch list for a cell.
Adds a new row to the watch list.
Checks if the given string is a valid command string.
Parse widget attributes.
Get attribute key in map by cell.
Parses the validate attributes.
Finds the position of a pair in a string.
Parse command attributes.
Parse input attributes.
Parse validation attributes.
Split by eual sign.
Parse special attributes.
Process calendar attributes.
Process select item attributes.
Gather special attributes.
Parse comment to map.
Find the first non-cell name position in the input string.
Removes all chars from a string.
Get the name of the Excel column.
Convert a column name to an integer.
Get a cell by cell reference.
Convert the height units to pixel pixels.
Checks if the given string is a valid date.
Parses a date entry.
Checks if the given string is a numeric string.
Returns true if the given character should be considered a continue parameter.
Sets a property on an object.
Compares two cells.
Check if the given config range is inside the given parent config range.
Clears all hidden columns in the given sheet.
Deletes the hidden columns in the given row.
Delete a cell from a row.
Process event.
Updates the status of the given cell after the status has changed.
Validate with row and column in current page.
Validate by tie web sheet validation bean.
Check the error message from the object in the context.
Validate all rules for single cell.
Do the validation.
Validates a single cell.
Validates the current page.
Validates a row in the current page.
Validates a single row.
Refreshes the cached cells in the current page.
Refresh cached cells in a row.
Sets whether the view should be submitted to the user.
Checks if the current sheet configuration is valid.
Clears all data.
Load the header rows.
Load header row without configuration tab.
Fills the list of header cells to the maximum number of columns.
Get the style for the header column.
Get the width style for the cell.
Get the column width style.
Initializes the parent tabs.
Loads the data from the data context.
Refresh the data for the given row.
Refresh the data for a cell.
Finds the index of the tab with the given name.
Load work sheet.
Prepare work shee.
Sets the page of the data table.
Setup the row info.
Load body rows.
Refreshes a cached cell.
Process refresh cell.
Creates the dynamic columns for the given tab.
Add a repeat row.
Reassembles the body rows in the given range.
Sets the unsaved status.
Returns true if the state of the view is unsaved.
Returns the common constructor for the given type.
Write input stream to output.
Write long.
Writes a string to the given writer.
Set the traffic stats tag.
Adds a bitmap to the result.
Adds a file descriptor to the result.
Removes the parameter with the given name from the result.
Adds a header to the request.
Clears this request description.
Call the play service.
Binds to the service.
Unbinds the connection.
Drops the listener from the streaming stream.
Stores the image to disk.
Transfers the contents of the given InputStream to a String using the given charset.
Converts an input stream to a string.
Sends the data to the output stream.
Returns the number of bytes available.
Closes the input stream.
Reads the next byte from the stream.
Resets the stream.
Sends the start of the message.
Sends the disposition header.
Sends the content type header.
Send transfer encoding header.
Send the end of the header.
Sends the end of the stream.
Sends an array of parts to the output stream.
Returns the length of the given part array.
Checks if the given URI is a redirect.
Sends a NotModified response.
Sets the date header.
Sets the date and cache headers.
Sets the Content-Type header for the given file.
Closes the given channel on flush.
Sends the disposition header.
Send data to the output stream.
Installs the cache.
Ensures that the working directory exists.
Get the cache response.
Creates an input stream for the body.
Resets the bitmap to the given width and height.
Returns an instance of the SSLContext for the specified keystore.
Validates a keystore with the given password.
Replace the scale type with the given scale type.
Gets a pending intent.
Disconnects from the given connection.
Binds the service to the current context.
Unbind the service.
Notifies the listener that the view has changed.
Opens a channel.
On accept data.
This method is called when the connection is reset to its initial state.
Wait for the loader to finish.
Sets the text or hides the given text view.
Hide soft input.
Show soft input.
Toggles the soft input of the given text view.
Returns the width of the pixels in the specified density range.
Called when an exception occurs.
Clears the cache for the given URL.
Populates the image of the given view with the given url.
Cancels the image loading for the given view.
Creates an image consumer for the given view.
Sets the result image.
Sets the loading image for the given consumer.
Start the image loader task.
Adds a bitmap to the cache.
Releases a buffer to the pool.
Adds the request parameters to the URL connection.
Adds a simple parameter to the request.
Attempts to connect to the server with a workaround for Gingerbread.
Returns the MD5 hash of the given text.
Returns a string representation of the given number.
Returns a string representation of the given CublasStatus object.
If the given result is not cublasStatus.CublasStatus.Cublas
If the last result is not cublasStatus.CublasStatus.Cublas
Adds a new lexeme to the lexicon.
Adds the ending to the frequency.
Returns the estimate for the given wordform.
Prints a long description of the token and attributes.
Verify and set kamols attribute.
Removes the kamols markup from a tag.
Returns a list of metric data for the app.
Returns the query string.
Process a JSON node and return a list of MetricData objects.
Parses a JSON string into a list of AppInfo objects.
Returns the connection configuration.
Performs a metric data request for the given list of apps.
Create a genericode reader for GC04 code lists.
Create a genericode reader for GC04 code list set.
Create a new column set reader.
Create a genericode reader for GC10 code lists.
Create a genericode reader for the GCodeListSet document.
Create a genericode reader for column sets.
Get the id of a column element.
Get the value of a row.
Get the column with the passed ID from the passed column set.
Get all key i.
Get the key of the passed ID from the passed column set.
Check if the passed column set contains the passed column id.
Create a new column.
Create a new key.
Sets the number of lines to skip.
Add a new column.
Create a writer that writes GC04 code lists.
Create a writer that writes GC04 code lists.
Create a writer that writes the column set document to GC04.
Create a writer that writes GC10 code list.
Create a writer that writes GC10 code list sets.
Create a writer that writes the column set document to GC10.
Creates and returns a genericode validator, which allows to validate the GCodeList document.
Creates and returns a genericode validator, which allows to validate the GCodeListSet document.
validator method for columnSet.
Creates and returns a genericode validator, which allows to validate the GCodeList document.
Creates and returns a genericode validator, which allows to validate the GCodeListSet document.
validator method for columnSet.
Sends the logs to the server.
Sets the context.
Gets the current log level.
Gets the capture flag.
Sets the maximum size of the log store in bytes.
Prepends the given metadata to the message.
Appends the additional metadata to the stack.
Creates a JSON object.
Sets the user identity.
Reads a byte array from a file.
Starts location updates.
Sizes the given region to the given number of entries.
Counts the number of entries in a partitioned region.
Counts the number of entries in the given region in replicated or local region.
Reads a snapshot record from the stream.
Dumps the time stamps to the given print writer.
Returns an array of time stamps since the specified index.
Convert a file to a chart.
Returns the pool for the specified server.
Returns a pool for the specified JMX instance.
Returns true if the given region is already on the server.
Returns the member with the given name.
Returns a list of host names for the specified JMX object.
Looks up a network host.
Is error and send exception boolean.
Executes the given function with the results of the given execution.
Flattens a collection of objects into a collection of objects.
Queries the given query object using the given parameters.
Factory method for creating a cache listener bridge.
Creates a new cache listener bridge for the given consumer.
Handles an exception.
Gets the on region filter key facts.
Executes the function.
Returns a set of host names for the given JMX object.
Executes the function.
Returns the application name of the given resources.
Initialize the security properties.
Returns the region with the given name.
Get a region from the cache.
Construct the key comparison.
Checks to see if the next idx is within the value time stamps.
Closes the stream.
Converts the given directory to cvs files.
Main entry point for the gfstats reader.
Reconnect to JMX server.
Stops all members on a host.
Shuts down a member.
Shuts down the given JMX object.
Shuts down the specified redundancy zone.
Store pagination map.
Read results by page.
Imports the specified region.
Checks if remote locators match.
Executes the function.
Build check sum map.
Returns the value of the given column.
Returns true if the given type mirror is a type of the given type.
Serializes the given object to a byte array.
Deserializes a K object from a byte array.
Creates an instance of the given class.
Check for table id.
Check for fields.
Checks if the given element is a super type of the given type.
Writes the Java code to the given writer.
Emits a method to get the id of the class.
Converts the query to an Observable.
Checks that the given column name is declared in the table object.
Returns the value of the given string or the given default string if the string is null.
Capitalizes the given string.
Returns true if the given type mirror is a type of the given type.
Returns a builder for descending query.
Reads the temperature from the device file.
Returns the value of the cursor for the given type.
Prints an error message.
Gets the icon fonts.
Returns a list of all icons.
Gets the background decoration.
Raises the given floating point value with the given exponent.
Sets the matrix values.
Calculates the power of a number.
Calculates the root of a floating point number.
Exponential exponential function.
Multiply a decimal by a given scale.
Returns the newton of the given decimal.
Calculates the arctan of a decimal.
Computes the arctan taylor of a decimal.
Computes the Euclidean norm of a BigDecimal.
Prints a pi string.
Returns the timestamp of the given time.
Sets the minimum and maximum limits.
Put a float value into the map.
Prints the contents of this object to the console.
Adds a complex number to this complex.
Subtract a complex number.
Multiply this complex by another.
Divide a complex number by another complex number.
Sets this matrix to a new matrix.
Get a row of this matrix.
Get a column of this matrix.
Sets the matrix to the given values.
Returns the transpose of this matrix.
Adds the given matrix to this matrix.
Subtract a matrix from this matrix.
Multiply this matrix by a scalar.
Multiply this matrix by another.
Print the matrix to the given print stream.
Sets the image resource.
Validates the coefficients.
Compute the next position.
Clears the internal data structures.
Convert a styled layer descriptor info to an XML representation.
Convert a SLD object to a SLD object.
Validates the given SLD.
Validates the given SLD.
Returns the area of the specified point.
Sets the rows and columns of the matrix.
Sets the rows and cols of this matrix.
Returns the inverse of this matrix.
Returns the determinant of this matrix.
Returns the Euclidean norm of this matrix.
Solve Ax = b for Ax = b.
Print the matrix decomposed.
Perform forward elimination of the matrix.
Perform forward substitution on a column vector.
Back substitution for a column vector.
Reduces the size of a column vector by a factor of 1.
Convert a square matrix to a matrix.
Returns the next von neumann.
Performs an iteration on the specified number of elements.
Compute the next position.
Checks that the position of the root finder is unchanged.
Computes the next position.
Check if the specified interval is valid.
Adds the specified amount of items to the end of the list.
Multiplies two integers.
Raises an exception with the given base and exponent.
Performs an iteration on the specified number of elements.
Gets the sld manager.
Convert a long value to a char array.
Decomposes the bits.
Prints the contents of this object to the supplied print stream.
Validate that a float biased exponent is valid.
Validate float unbiased exponent.
Validate double biased exponent.
Validate double unbiased exponent.
Returns the next central point.
Returns the next polar value.
Get the next ratio.
Returns the prime sieve of the specified number.
Returns the prime factors of the given integer.
Performs an iteration on the specified number of elements.
Compute the next position.
Checks that the position of the root finder is unchanged.
Sets the JavaFX application.
Sets the configuration file.
Sets the default configuration.
Initialize the fxml.
Sets the latitude and longitude of the geocode request.
Returns the host port pair for the given service.
Returns the applicable attribute definition with the given uuid.
Evaluate attribute filter expression.
Sanitizes a tag.
Set the geocode address.
Query for names.
Query for instances by name.
Get all to by logged in collaboration.
Gets the meta data for decimal as.
Change password for logged in user.
Returns a listing of all users.
Get the Gravatar for an email.
Get the Gravatar for a user.
Populate from elastic search json.
Returns the elastic search field type.
Create a new flow step.
Update flow step.
Get flow step by id.
Get flow step by step.
Get all steps by flow.
Delete a flow step.
Force delete flow step.
Populate table fields.
Closes the connection.
This method is called when a message is received from the server.
Indicates that the connection has been closed.
Gets the echo messages from the return value.
Get the personal inventory items for the logged in user.
Create a new table record.
Delete a form container.
Get the historic data for a given form.
Get the form and field historic data.
Get the most recent form and field historic data.
Acquires a form container for the given job view parameter.
Unlocks a form container.
Unlock a form container.
Maps a form container to a form container.
Convert role listing param to a list of roles.
Create a new form definition.
Update a form definition.
Get a form definition by id.
Get a form definition by name.
Get all by logged in user.
Delete a form definition.
Returns the storage key from the given parameters.
Initializes the memcached client.
Shuts down the memcached client.
Converts a string to a long.
Convert a document to a PDF file.
Returns the field values for the given form from the local cache.
Create a new flow step rule.
Create flow step rule exit rule.
Create a new flow step rule.
Update flow step rule.
Update flow step rule.
Update flow step rule.
Move a flow step rule up.
Move a flow step rule down.
Delete a flow step rule.
Delete a flow step rule.
Delete flow step rule rule.
Initializes the session with the encrypted data.
Returns a listing of all user queries.
Returns a listing of all the roles.
Returns the service ticket as hex upper case.
Create a masked field.
Create a text barcode field.
Create a decimal field.
Create a decimal slider.
Create a table field.
Update field text masked.
Updates a field's text barcode.
Update field decimal spinner.
Update field decimal slider.
Updates a field in a table.
Get a field by name.
Get Fields by form name and logged in user.
Get Fields by form type id and logged in user.
Delete a field.
Force delete field.
Gets the meta data for a table field.
Update user field value.
Gets the index with the given index param.
Create a new flow.
Update flow.
Get a flow by id.
Get a flow by name.
Delete a flow.
Force delete flow.
Updates the value of a field.
Returns a list of all global field values.
Gets the form definition id and title.
Decrypt init packet.
Closes this connection and cleans it.
Initialize a new request.
Returns the exception message for the given unique request id param.
Create an admin user.
Get an access token.
Get user profile info.
Executes the HTTP method with the given parameters.
Executes a form.
Get the JSON response handler.
Returns true if the connection is valid.
Returns the closeable http client.
Returns the path to the Fluid Specific Trust Store.
Closes the connection.
Get a list of fluid items for a job view.
Send a form to a flow.
Called when the connection to the user is closed.
Called when a message is received from the client.
Send a message to the client.
Sends a message to the remote endpoint.
Closes the user session.
Execute a native SQL statement.
Request a license request.
Apply a license to a service ticket.
Create a plain field.
Create a field that represents a paragraph text.
Create a ParagraphText field.
Create a MultiChoiceSelectMany route field.
Create a date field.
Update field text plain.
Update field paragraph text html.
Updates the date and time of a field.
Update field decimal plain.
Update route field value.
Create a new field value.
Get configuration by key.
Returns a listing of all configurations.
Create an attachment.
Get an attachment by id.
Delete an attachment.
Force delete attachment.
Parses a jar file from an input stream.
Set the class loader for the given jar path.
Rule 2. Throw an exception if the name is null.
Rule 3.
Checks if the ref tag is valid.
Returns the schema node for the given file path.
Checks that the xsd element is a xsd schema.
Checks if the ref tag is a xsd schema.
Converts the given value to an instance of the appropriate type.
Creates a CLI interface for the given class.
Create a CLI instance with the given options.
Parse command line arguments.
Parses the given arguments using the given options.
Returns a base URL builder for the given path.
Remove a footer view.
Returns the value of a module.
Returns the value of the 3D value noise function.
Returns the value of the 3D value noise function.
Computes the cubic interpolation between two points.
Returns the 5-squared curve of the given double.
Sets the bounds.
Processes the given cloud trail event.
Process a cloud trail event.
Gets the account id of the event.
Applies the rule entity to the rule entity.
Gets the event serializer.
Creates a file in the root folder.
Creates a directory.
Restores all properties that have been previously saved.
Creates the implementation of the delegate map.
Adds an object to the queue.
Sets the value of a property.
Get an array property.
Returns the next state for the given action name.
Processes the queue of comparable soft reference objects.
Returns the value of the given type.
Returns the parameterized type for the given type.
Returns the type variable for the given type variable.
Prints the stack trace.
Prints the stack trace.
Replaces a remote object with a stub object.
Runs the task.
Sets the task.
Returns true if the task has been accepted.
Returns true if the task has been rejected.
Returns true if the task has started.
Returns true if the task has completed.
Stops the task.
Gets the job impl.
Puts the given job into the job list.
Converts a blocking mode name to a blocking mode.
Reads an object from the input stream.
Copy the readers to the new catalog.
Creates a new catalog.
Load system catalogs.
Parses the catalog from a URL.
Parse pending catalogs.
Parses the catalog file.
This method is called by the catalog manager when an unknown entry is encountered.
Resolves the doctype of an entity.
Resolves the document.
Resolves a system.
Resolves the local URI of a catalog entry.
Makes the given sysid absolute.
Normalizes a URI reference.
Encodes a byte as a hex string.
Add delegate catalog entry.
Creates a new soft value ref.
Fire a throwable to all registered listeners.
Adds a throwable to the list of throwables of the specified type.
Creates the implementation of the delegate.
Compares this task with another.
Returns the value of this field as an object.
Returns the object at the given index.
Sets the object at the specified index in the list.
Removes all objects from the queue and removes them from the list.
Adds an entry type.
Returns the entry type for the given name.
Returns the number of entry arguments for the given type.
Gets the entry argument.
Sets the context class loader for the given thread.
Swaps the elements of two integers.
Remove the node at the given index.
Cleans up the timeout object.
Loads a class from the classpath.
Loads all protocols from the classpath.
Creates a new URL with the specified protocol.
Checks if the handler pkgs are set.
Returns the value of the property.
Creates the implementation of this set.
Makes a synchronized long counter.
Makes a counter that is directional.
Returns true if the current namespace is in an extension namespace.
Check the notification status.
Get an object instance.
Returns a subst of a string.
Splits a string into an array of strings.
Joins a byte array into a string.
Convert an object to a string representation.
Returns the value of this field as an object.
Creates a new instance of this class.
Returns the value associated with the specified key.
Returns the value associated with the specified key, or null if the key does not exist.
Remove a timed entry.
Flushes the map to disk.
Returns a list of all valid keys.
Sets the resolution.
Returns the timed entry for the given key.
Returns an iterator over the children of the given element with the given tag name.
Get a unique child element by tag name.
Get an optional child element by tag name.
Get the content of an element.
Gets the unique child content for the given element.
Get the content of an optional child element.
Sets the maximum queue size.
Sets the blocking mode.
Sets the name of the blocking mode.
Executes the given task.
Resolves the external system with the given resolver.
Resolves the external public for the given id.
Query the catalog for a command.
Appends the given vector to the given vector.
Resolve all system reverse.
Resolves the given system ID and returns the result as a String.
Resolves all the local system with the given id.
Reads a catalog from the specified URL.
Reads a catalog from an input stream.
Connects to the server.
Returns an output stream for this connection.
Tries to delete this node.
Returns the value of this header, or null if this header is invalid.
Creates a snapshot of the map.
Creates a logger for the given class.
Appends a collection of objects to the given buffer.
Returns the class short name.
Returns a string representation of this class.
Returns an iterator of the names of the current properties.
Returns the property group for the given basename.
Get a compatible constructor for the given type and value.
Copies the given object to this object.
Dereferences an object.
Initializes the context manager.
Updates the jndi cache.
Returns a set view of this map's keys.
Returns a set containing all the entries in this map.
Remove a property listener.
Notifies all registered listeners that a property has been added.
Fire a property removed event to all registered listeners.
Notifies all registered PropertyChangeListeners of a property change.
Fired when a property has changed.
Creates a prefixed property name.
Loads properties from the given property reader.
Loads a class from the classpath.
Returns the property group with the given basename and index.
Returns true if the entity is resolved.
Resolves the input source for the given system id.
Resolves the input source for the given system id.
Resolves the classpath name of the given system.
Sets the value of this property as a text value.
Normalizes a public ID.
Encodes the given public ID as a URN.
Decodes a URN.
Replaces all occurrences of oldString with newString.
Starts the timer.
Stops the timer.
Make a synchronized stop watch.
Compares two hash codes.
Generates a hashcode for the given byte array.
Generates a hash code for the given array.
Creates a new empty list.
Sets the value of the field.
Returns the next token from the token stack.
Initializes the  privileged action.
Adds a vertex to the graph.
Sets the root vertex.
Removes a vertex from the graph.
Performs a depth-first search on a vertex.
Computes the spanning tree of a vertex.
Finds a vertex with the given data.
Finds all cycles in the graph.
Normalizes a string.
Parse an XML string into an Element object.
Parse an XML document from an input stream.
Parses an XML document from the given input source.
Creates an element for the given local part.
Resolves a qualified name to a qname.
Copy attributes from srcElement to destElement.
Returns true if the given node has any child elements.
Returns an iterator over all child elements of the given node.
Returns the text content of the given node.
Returns an iterator over the child elements of the given node.
Returns the parent element of the given node.
Adds a waiting resource.
Reads a catalog from the specified URL.
Returns the address of the host.
Sets the system property class value.
Displays information about a class.
Provide a description of a class.
Removes the package name from a class name.
Returns the package name of the given class.
Force the load of the given class.
Returns the primitive wrapper for the given type.
Get all interfaces of a class.
Returns an array of all unique interfaces of the given class.
Returns true if the given class is a primitive wrapper of the given type.
Instantiates an object from the given property.
Returns the getter method for the given attribute.
Returns a setter method for the given attribute.
Convert a class name to a java class.
Returns the value of a system property.
Get the filenames for the given property name.
Removes all weak objects from the queue.
Returns an iterator over the elements in this set.
Creates a new URL for the given protocol.
Returns an iterator over the entries in this map.
Add a bound property listener.
Remove a bound property listener.
Checks if the given string is null.
Finds a property editor for the given type name.
Registers an editor for the given type name.
Converts the given text into an object of the given type.
Returns the context class loader for the given thread.
If the throwable is an application deadlock exception, returns null.
Schedules a timeout for the given time.
This method will take all the work from the queue and wait for it to complete.
Create a subcontext with the given name.
Looks up an object by name.
Checks that the given object is of the given class.
Appends the class info for the given class.
Returns the transition with the given name.
Reads properties from the properties file.
Query the verbosity of the resource.
Query whether or not the catalogs should be fetched.
Query the catalog files.
Returns a vector of catalog files.
Query whether or not the user prefers public resources.
Query whether or not static catalogs should be used.
Resolves an entity.
Resolves the URL for the given href.
Makes an absolute URL for the given URI.
Resolves a class from an object stream.
Invokes the setter method.
Returns the local name of the given element.
Returns the namespace URI for the given node.
Returns the namespace URI for the given element.
Returns a list of all elements in the enumeration.
Returns an input stream for the given file.
Loads properties from a file.
Reads the properties from the file.
Adds an edge to the graph.
Adds an outgoing edge to the graph.
Adds an incoming edge to the graph.
Returns true if the edge has the given edge.
Removes an edge from the graph.
Finds the edge with the given destination vertex.
Finds the edge for the given edge.
Returns the cost of the given vertex.
Copies the given jar file to the given directory.
Returns true if the iterator has at least one more element.
Fires an event to the queue.
Internal install jvm type provider.
Dispatches an action to the fx application thread.
Returns the event stream for the given action type.
strict many to one stream.
strict one to one stream.
Returns true if the robots are allowed in the given page.
Test if the instruction generated should be executed.
Returns the sum degree of all words.
Returns the superclasses of the given arguments.
Informs this reader that the resource has been read from the database.
Check the datasource.
Returns a list of objects of the given type.
Connect JDBC on with url and driver and username and password.
Runs the SQL in the database.
Query in with SQL.
Build a filter by example.
On upgrade.
Backup this table to a CSV file.
Restore the data from the database.
Set the empty text of the list view.
Dump the contents of the table to a CSV file.
Unescapes a CSV string.
Reads the values from a CSV file.
Convert a CSV string to a Map.
Convert a map to a CSV string.
Join a list of strings.
Joins an array of strings.
Reads a database model from the index.
Writes the database to the index.
Inspects the id field.
Gets the base dao class.
Gets the bind type.
Import a database from a CSV file.
Backup all tables to csv.
Restore all tables from csv.
Writes the index.
Creates a query with all the parameters.
Create a typed query with the given type.
Renders the query.
Deletes the record with the given ID.
Saves an object to the database.
Update an object in the table.
Adds a where expression to the list of items.
Create a subquery with the given lhs predicate.
Returns the next active stack.
Returns an empty intention stack.
Adds a plan to this belief set.
Selects a plan based on the policy.
Selects a plan at random.
Sets the plan variables for the given agent.
Returns the belief at the given index.
Returns the parents of this node.
Returns the children of this node.
Grows the given byte array by increment.
Creates a logger with the specified name, level and file.
Moves the step to the next body element.
Sets the goals from the given byte array.
Pause for user input.
Initializes the intention selection pools.
Initializes the intention selection threads.
Starts the intention selection threads.
Shuts down the intention selection threads.
Registers a JillExtension.
Resets this class to its initial state.
Load an agent from the classpath.
Process the plans for a goal.
Create the agents in the catalog.
Loads a class from the given class name.
Loads the extension for the given class name.
Returns true if the two specified objects have the same name.
Returns the usage string for the application.
Parses the command line arguments.
Parses an argument with an option.
Evaluates a belief.
Returns the object at the specified index.
Finds the object with the given name.
Pushes an object onto the stack.
Returns the value at the specified index.
Pushes an object onto the stack.
Pops an object from the top of the stack.
Returns the type of the given object.
Returns true if the given belief matches the given query.
Main method for testing.
Convert a string to a byte array.
Posts a goal to the pool.
Sends a goal to the specified agent.
Sends a goal to the specified agent.
Returns the goals array.
Create a new belief set.
Adds a belief to this beliefset.
Evaluates a query against this belief.
Suspends the agent.
Returns the belief set field with the given name.
Registers a number of neighbours in the beliefset.
Generate a random name.
Runs the idle timer.
Checks if the given stack is valid.
Removes all active agents from the given set.
Manages a goal.
Shuts down the pool.
Sets the idle state of the agent.
Moves the specified pins to the specified position.
Initializes the configuration.
Wait until the connection is idle.
Finishes the job.
Returns true if all pools are idle.
Returns the pool id for the given agent id.
Picks an expression from this expression.
Sets the expression.
Returns the join expression for the given attribute.
Recursively joins the properties at the specified index.
Finds or creates a join for a property.
Returns true if the end of the range is reached.
Gets the upload stream from the request.
Handles a request.
Returns true if the parameter with the given name and value is equal to the given value.
Returns the value of the parameter with the given name.
Parses the given expression into a map of parameters.
Configures the transaction with the given configuration.
Gets the target file.
Writes the given artifact to the target file.
Post process instance.
Gets the declared constructor for the given implementation class.
Builds the string representation of the configuration.
Gets the interface method for the given method.
Returns the type of the given field.
Returns the dependency value of the given type from the host managed class.
Persists the current state of the model.
Sets the default link for the given rel.
Sets the default link template for the given rel.
Handles the links from the response.
Handles the header links.
Handles JSON body links.
Parses a link object.
Gets or adds a map to the given map.
Handles the capabilities response.
Returns true if the given method is allowed.
Registers the instance processors.
Registers an instance factory for the given instance type.
Registers an instance processor.
Register a class processor.
Adds an argument to the list of arguments.
Create the target file list.
Serialize this object to an XML string.
Initializes the tfl producer.
Returns true if the given template has a reference to the given file.
Create a parameterized template model from a reader.
Create a parameterized template model from a file.
Sets the request path.
Returns a stoppable observable.
Returns a new instance of this scope with the given string and type.
Sets the value of a field.
Add a capture appender to the logger.
Remove appender from logger.
Clear the capture appender with the given name.
Parses the model.
Resolves all proxies in the resource set.
Returns an array of all files in the given directory.
Parses a directory.
Returns true if the model is fully resolved.
Finds all notifiers in the given resource set.
Sets the model dirs.
Sets the file extensions.
Sets the model resources.
Read the next record from the reader.
Set the value of an array parameter.
Convert the given string to an instance of the given type.
Merges the given template into the target file.
Gets the model directory.
Gets the template directory.
Writes the given value to the response.
Starts the web view.
Configures the window.
Prints the given view.
Writes an input stream to an output stream.
Invokes the specified method on the specified interface.
Attaches the given HTTP request and response to this request.
Detaches the cookie from the request.
Returns the cookies associated with this request.
Dumps the request to the log.
Returns the list of invocation meters.
Configures the event stream configuration.
Sets the remote host.
Returns the parameter with the given name and type.
Removes a prefix from a path.
Returns the common directory between two directories.
Convert an absolute path to a relative path.
Convert relative path to absolute path.
Get the depth of a directory.
Dumps an error message to the log.
Sends a JSON object to the client.
Adds a parameterized template.
Adds a list of parameterized templates.
Initializes the parameters with the given context and variables.
Finds all references to the given file in the given directory.
Sets whether the save button should be enabled or not.
Deletes the confirm dialog.
On delete.
Creates a new instance of the given managed class.
Returns an array of all the files in the model.
Returns the summary of the results.
Gets the summary row.
Get the sub summary row.
Creates a new instance of the specified managed class.
Gets the setup class.
Returns the list of model dirs.
Gets the model resources.
Sets the collection of entities to be selected.
Loads the XML from the given input stream.
Called when an error occurs.
Returns true if the given formal parameters are an object.
Reads an array of parameters from the given HTTP request.
Reads an object from the given input stream.
Extracts the parameter from the fit cell.
Gets the value of the hints property.
Returns true if the request is an X-Requested-With header.
Returns true if the X-Requested-With header is set to android.
Handles an element event.
Returns a list of properties that have the specified annotation on the specified type.
Gets the annotation for the given property and annotation type.
Logs the given message.
Looks up a whois resource.
Returns true if the script has a parser for the given whois host.
Returns the managed class for the given interface name and request URI.
Returns the managed method for the given name and request URI.
Process not contains exception.
Process not contains event.
Serializes the given HTTP response.
Returns the value of the cookie with the given name.
Adds a cookie to the response.
Removes the cookie with the given name.
Returns an iterator over the cookies.
Gets the target file list producer.
Adds a field to the class.
Compiles the class.
Verifies whether the response is valid for the given token.
Returns the value of the given file.
Ensures that the given URI ends with a trailing slash.
Gets the http servlet request.
Invokes a managed method.
Executes a mutable transaction.
Executes an immutable transaction.
Returns an array of all files in the directory.
Returns the last file in the directory.
Gets the concrete config.
Returns true if the request path starts with the given path component.
Returns the list of artifact factories for the given model type.
Returns the http session for the given instance key.
Serializes the given HTTP response to the given HTTP response.
Reads the meta data from the server.
Override handleRequest in order to handle the request.
Closes the statement.
Pre-destroys the event streams.
Handle allowed methods.
Uploads the blob.
Deletes the endpoint.
Extracts the column parameters from the fit row.
Returns an array of the names of the arguments.
Schedules a periodic task.
Schedules a timeout task.
Configures the repository with the given configuration.
Returns the next file in the cache.
Configures the application.
Prints the welcome banner.
Prints the banner of the stopped banner.
Creates a new ria instance based on the command line arguments.
Register shutdown hook.
Triggers the notification.
Triggers the event.
Inserts a new row into the fit table.
Returns the counts of all files in this file count set.
setter for score - sets.
getter for variants - gets.
setter for variants - sets.
getter for questionType - gets.
setter for questionType - sets.
getter for token - gets.
getter for depLabel - gets.
setter for depLabel - sets.
getter for semanticType - gets.
setter for semanticType - sets.
getter for sections - gets.
setter for sections - sets.
indexed getter for sections - gets an indexed value -.
indexed setter for sections - sets an indexed value -.
getter for uris - gets.
setter for uris - sets.
getter for types - gets.
setter for types - sets.
getter for targetType - gets.
setter for targetType - sets.
getter for rank - gets.
setter for rank - sets.
getter for queryString - gets.
setter for queryString - sets.
getter for candidateAnswer - gets.
setter for candidateAnswer - sets.
indexed getter for candidateAnswers - gets an indexed value -.
indexed setter for candidateAnswers - sets an indexed value -.
getter for query - gets.
setter for query - sets.
getter for hitList - gets.
setter for hitList - sets.
indexed getter for hitList - gets an indexed value -.
indexed setter for hitList - sets an indexed value -.
getter for abstractQuery - gets.
setter for abstractQuery - sets.
getter for searchId - gets.
setter for searchId - sets.
setter for docId - sets.
getter for offsetInBeginSection - gets.
setter for offsetInBeginSection - sets.
getter for offsetInEndSection - gets.
setter for offsetInEndSection - sets.
getter for beginSection - gets.
setter for beginSection - sets.
getter for endSection - gets.
setter for endSection - sets.
getter for aspects - gets.
setter for aspects - sets.
getter for triple - gets.
setter for triple - sets.
getter for sourceRelation - gets.
setter for sourceRelation - sets.
getter for subject - gets.
setter for subject - sets.
getter for predicate - gets.
setter for predicate - sets.
getter for isObjURI - gets.
setter for isObjURI - sets.
getter for operator - gets.
setter for operator - sets.
getter for operator_args - gets.
setter for operator_args - sets.
getter for concept - gets.
getter for score - gets.
getter for text - gets.
setter for text - sets.
getter for id - gets.
setter for id - sets.
getter for name - gets.
getter for abbreviation - gets.
setter for abbreviation - sets.
setter for concept - sets.
getter for variants - gets.
setter for variants - sets.
getter for namedEntityTypes - gets.
setter for namedEntityTypes - sets.
getter for conceptType - gets.
setter for conceptType - sets.
getter for occurrences - gets.
setter for occurrences - sets.
getter for concepts - gets.
setter for concepts - sets.
getter for originalText - gets.
setter for originalText - sets.
getter for args - gets.
setter for args - sets.
getter for label - gets.
setter for label - sets.
Returns the index of the next clear bit at the specified index.
Sets the bit at the specified index.
Frees the given buffer.
Creates a new cache value for the given directory and file name.
Rehashes an array of values to a new size.
method to generate HELM notation.
Checks if brackets are valid.
This method extracts the details from a string.
Returns a human-readable representation of the source and target.
method to add an element to the group.
Checks if the given polymer id is valid.
Checks if the given polymer id is valid.
Check if a connection is connected.
Checks if the given string is a valid group ID.
Checks if the given string is repeating.
Is peptide or rna polymer?.
This method converts the notation to a JSON string.
method to get a simple polymer by its id.
Returns the current grouping notation.
Returns a human-readable representation of this object.
method to generate HELM notation for polymers.
Returns a HELM string representation of the connection.
Returns the HELM notation of the groupings.
Returns a string representation of the annotation section.
method to get all polymer and grouping i.
method to get the polymer with the given id.
Sets the polymer elements.
Convert a String to a String.
Sets the annotation.
Sets the count.
method to decide which MonomerNotation to use.
method to decide which monomer notation in group.
method to decide which entity to use.
Returns the value of this interval.
Parses the given test string.
method to set the rna string.
Defines the ambiguity of the given string.
Returns a snapshot of the statistics for this job.
Creates a new graph from a collection of edges.
Creates a new graph from the given nodes and edges.
Initializes the list of incoming paths.
Returns a list of nodes sorted by their reachability.
Subscribes to a method with the given pattern and method name.
Get the number of occurrences of a pattern.
Unsubscribe from a pattern.
Get a message from the server.
Get an Erlang version tag from the server.
Polls for the next item in the queue.
Send a shutdown message to the server.
Throws a Throwable if the given Throwable requires non-local handling.
Unlocks a run state.
Creates a worker.
Try to add a worker.
Registers a worker.
Deregister a worker.
Signals the work queue to terminate.
Runs a worker.
Wait for work to complete.
Get the common submitter queue.
Returns the number of tasks that should be completed for the given task.
Submits a task to the queue.
Makes a common pool.
Returns the current status.
Builds a string with the given code.
Get the statistics about the local queues.
Creates a new array with the specified elements.
Reverses the elements of this list.
Returns true if any of the elements in the given iterable evaluates to true.
Folds the elements in the given iterable starting at the given start value.
Fold right fold.
Pushes a task onto the stack.
Converts nullable object to an object of type T.
Converts an iterable of keys and values into an unmodifiable collection of values.
Returns an empty object for the specified equality.
Converts an iterable of keys and values into an array of values.
Creates a new Equality object from the given keys and values.
Returns an unmodifiable set view of the keys in this map.
Normalize the resource name.
Marshals a bound type to a string.
Returns a sub-sequence of this sequence.
Creates a binary search for the given list.
Creates a binary search for the element in the list using the given comparator.
Sends a message to the server.
Binds the given route binding.
Binds the given filter handler.
Returns true if the tag body should be shown, false otherwise.
Gets the int value of the given long.
Removes duplicated strings from an array.
Like string.
Runs the task.
Attempts to login a user.
Gets the login user from the session.
Checks the given password against the given salt and plain password.
Save member in cookie.
Returns the key to use for the login.
Returns the user with the given uuid.
Forwards this request to the specified context.
Returns the value of the request parameter as a long.
Logs a message at DEBUG level.
Returns the information about the caller at the specified level.
Convert a char array to a simple byte array.
Converts a char sequence to a byte array.
Convert a byte array to a simple char array.
Converts a char sequence to a byte array.
Looks up the locale data for the given code.
Returns a future that will be executed in the given number of seconds.
Crops the given image to the given location.
Invokes the given invocation with the given wait time.
Invokes the given direct invocation in a thread.
Gets the REST operations.
Renders an error message.
Renders a forbidden message.
Returns the template for the given view.
Parses the action path from the URL.
Render the data tables for the given criteria.
Render empty data tables.
Sets the list of items.
Redirects this request to the specified URL.
Returns a list of all the bindings in the given injector.
Returns the current method name.
Compacts the memory.
Propagates the given metrics to the local metrics collection.
Encodes the given string.
Copy the contents of the given InputStream to the given OutputStream.
Copy the contents of the given InputStream to the given OutputStream.
Copy the contents of the given InputStream to the given OutputStream, using the default encoding.
Copy the contents of the given reader to the given writer.
Copy the contents of the given reader to the given writer.
Copy the contents of the given reader to the given output stream.
Copy the contents of the given reader to the given output stream using the specified encoding.
Compares two input streams.
Compares two Readers.
Applies all functions and predicates to the given object.
Get the SQL statement for the given group.
Unmarshals the given string into an object of the given class.
Unzips the given file to the given destination directory.
Creates a new instance of the PermissionDialogFragment.
Resumes the dialog.
Registers a converter for the given core value type.
Returns true if the given string matches the given regular expression.
Returns true if the given string is a mobile phone number.
Checks if the given string is a phone number.
Returns true if the given string is a valid birth day.
Returns true if the given string is a valid URL.
Apply the filter to the request.
Encodes the given string as Base64.
Decodes a Base64-encoded string to a byte array.
Converts a hex string to a byte array.
Read properties from an input stream.
Reads the content of the stream as a string.
Reads the content of a file as a string.
Writes a byte array to a file.
Copies the source directory to the target directory.
Serializes the given document to a string.
Parses the given file and returns a Document object.
Parses the given XML string into a Document object.
Parses an XML document from an input stream.
Validate signature.
Sign a document with the RSA public key and private key.
Returns true if the given class is cache safe.
Returns true if the given class is an array of primitives.
Returns true if the given class is a primitive wrapper array.
Resolves a primitive type if necessary.
Returns true if lhsType is assignable from rhsType.
Returns true if the given value is assignable to the given type.
Returns an array of all interfaces implemented by the given instance.
Returns all interfaces of the given instance as a set.
Writes the configuration to a temporary file.
Returns a map of variables for the given URI.
Add a permission to this bean.
Binds the given class to the given extension point.
Returns the builtin context for the given type.
Returns the primitive value of the given type.
Convert the given object to the given type.
Convert the user defined value type to the given type.
Query the request parameter with the given name.
Adds a cookie to the request.
Add a session parameter.
Initialize data source.
Adds a parameter to the request.
Sets the value of the named parameter.
Show the permission dialog.
Checks if all values are granted.
Returns true if any value is denied.
Find records by sql select.
Finds the first record in the database.
Returns true if the given primary key column is new.
Checks if the given method declares the given exception type.
Process the queue.
Adds a new value to the queue.
Checks if the given string matches the given pattern.
Read arguments from the command line.
Returns the protobuf entity for the given class.
Returns true if the given class is a protobuf entity.
Returns all the protobuf fields of the given class.
Returns the getter name for the given field.
Returns the setter name for the field.
Returns a mapper for the current thread.
Gets the thread-local json factory.
Convert an object to a JSON string.
Sets the borders.
Returns the user record for the given domain and user name.
Copy out attributes to the target object.
Copy out attributes.
Add this app to the frame.
Saves the given token.
Returns the access token and secret.
Returns the default class loader.
Returns the URL for the resource with the given name.
Get a resource as an input stream.
Gets the class as stream.
Initializes this URI from another.
Initializes the scheme for the given URI spec.
Initializes the path with the given URI specification.
Sets the scheme of the URI.
Set the userinfo.
Set the host.
Sets the port.
Appends a path to the path.
Set the query string.
Set the fragment of the URI.
Returns the URI portion of the request.
Create a prepared statement with the given parameters.
Initialize this applet.
Get the muffin value for this param.
Set the value of a muffin parameter.
Returns the contents of the clipboard.
Set the clipboard contents.
Load services by type.
Set service parameters.
Returns the service parameters for the given parametrized operation.
Find a parmetrized service by its id.
Find service by class.
Parses a query response.
Returns an iterator over the elements in this buffer.
Returns the encoding of the given XML string.
Creates a new connection instance.
Get the authorization from the given URL.
Visit a package declaration.
Visit a class declaration.
Visit an executable declaration.
Returns the value of an option.
Returns a declaration filter that matches the given modifiers.
Returns a declaration filter that matches the given kind.
Returns a declaration filter that matches this filter and the given filter.
Returns a declaration filter that matches this one or another.
Returns the object as a Map.
Makes the given constructor accessible.
Prepares an object query.
Replaces a slash with a hyphen.
Converts a byte array into a hex string.
Returns the indexes for the given name.
Parses a named SQL statement.
Converts a collection of non-protobuf entities to a collection of protobuf entities.
Sets the field value for the given attribute.
Sets the value of a field of a POJO.
Returns true if the file should be included.
Creates a new result set proxy.
Maps a list of labels to a map of expected labels.
Returns the generic supertype of the given type, starting at the given index.
Polls for the next item in the queue.
Polls the queue individually.
Returns the declared field of the given class.
Returns the declared methods of the given class.
Returns the declared method of the given class.
Returns an array of all declared methods for the given annotation class.
Returns an array of constructors that are annotated with the given annotation class.
Dumps a byte to stdout.
Returns the index of the first occurrence of substr in s ignoring case.
Remove all chars from a string.
Cleans the state of the state machine.
Initializes the audit.
Initializes the message queue.
Initializes the password validator.
Initializes the password authenticator.
Resolves the locale code for the given locale.
Looks up the LocaleInfo for the given locale code.
Returns a statement instance for the given statement.
Removes all elements from this list.
Pop an element from the top of the stack.
Returns an input stream to read the contents of the file.
Parses the command line arguments.
Returns true if the given tokens match the given patterns.
Moves this vector by the specified number of points.
Returns true if this rectangle encloses the given rectangle.
Returns true if the specified point is inside this rectangle.
Returns the intersection of this rectangle with the given rectangle.
Returns the union of this rectangle and the given rectangle.
Replaces the x-coordinates of this rectangular with the same x-coordinates
Replaces the y-coordinates of this rectangle with the y-coordinates of
Returns the column of the abspos.
Returns the row of the matrix.
Returns the bounds of the cell at the specified location.
Calculates the columns of the table.
Calculates the number of rows in the table.
Unwraps the given throwable.
Starts the application and waits for it to finish.
On code update.
Copy and resize code buffer.
Initializes the instance of this class.
Creates a copy of this query parameter.
Adds a child node to this node.
Clears all children of this node.
Advances to the next internal element.
Adds the given instructions to this function.
Adds the instructions and this to the parent.
This method is called when a property is changed.
Register a work panel.
Updates the component flags that are present in the component map.
Creates a new instance of the decimal type.
Returns true if the given term evaluates to true.
Optimize the given instructions.
Compares two collections.
Performs the actual service.
Do the start of the tag.
Renders a button.
Resets the input and output properties.
Initializes the classifier.
Returns the value associated with the specified key.
Returns the index of the given key.
Sets the value at the specified index.
Removes the mapping for the specified key from this map.
Removes the element at the specified index.
Returns true if the property with the given name exists.
Sets the property of the callee.
Get a property from the callee.
Checks if the given primitive type is assignable from the given primitive type.
Initializes this object with the given callee.
Chooses a decision tree for the given state.
Initializes the lookups for the decision tree.
Given a query and a statement, return a list of variables that have been unifyed.
Returns true if left and right are the same.
Compiles a query.
Finds the maximum number of arguments in the given clause.
Allocates the permanent query registers for the given clause.
Gathers position and occurrence information from the given clause.
Displays a compiled predicate.
Displays a compiled query.
Converts a byte buffer to a string.
Returns the value of this property as a String.
Sets the value of the attribute.
Reads a term.
Checks if the given class exists and is loadable.
Returns true if the given class is a subtype of the given class.
Returns true if parent is a subtype of child.
Returns true if the parent class is a sub-type of the child class.
Returns a Class object for the given class name.
Creates a new instance of the given class.
Creates a new instance of the given constructor with the given arguments.
Call method overriding illegal access.
Calls a method on an object.
Call a static method.
Returns the constructor for the given arguments.
Finds all setters for the given property name in the given class.
Gets the transactional queue.
Gets transactional requeue.
Returns the type of the given object.
Resets this object to its initial state.
Creates a new instance of the specified type.
Add a supported timezone to the end point.
Adds a new timezone to the SQL table.
Adds a dimension to the table.
Finds all free variables that match the given query.
Returns a set of variables that can be used to free non anonymous variables.
Compares two search nodes.
Writes an object to a file.
Reads a string from the given input stream.
Creates a new search node.
Generate the indent for the trace.
Is last body term in arg position only.
Chooses the best property to decide on.
Returns a new functor with the given name and arguments.
Returns a new variable with the given name interned.
Forward execute with error handling.
Returns the elements at the specified index.
Sets the texture of the gauge.
Paints the gauge immediately.
Create a buffered image.
Creates a buffered image of the given pixel bits.
Create the SGI image.
Sets the queue search algorithm.
Starts the prolog parser.
Returns the clause of the query.
Parses a list of terms.
Consumes a functor token.
Parses a variable.
Parse an integer literal.
Parse a double literal.
Parses a string literal.
Peek and consume a directive.
Interns an operator.
Initializes the built ins.
Consumes a token from the source.
Peeks and consumes the next token of the given kind.
Binds this binder to this binder.
Rollback the transaction.
Collects the elements from the given iterator into the target collection.
Convert time of day to ticks.
Converts ticks to years.
Returns the ticks with the given hours set to the given value.
Converts the given ticks to the given number of minutes.
Converts a set of ticks to a given number of seconds.
Converts a set of ticks to a new year.
Converts a set of ticks to a given month.
Returns the number of ticks with the given date set to the given date.
Returns the start time of the given year in milliseconds.
Reads a block from the source.
Returns the entry for the given key.
Returns the Cuckoo entry for the given entry.
Rehashes the hash table.
Called when an action is performed.
Sets whether or not the next available space is available.
Sets whether or not the previous available space is available.
Sets whether this task has finished.
Get an instance of the WAM library.
Returns an iterator over the variables in this set.
Computes the expected probability for the given probabilities.
Returns an array of probabilities for the given distribution.
Sets the ticks.
Performs the action forward.
Creates a new URL with the specified spec.
Gets the request information.
Returns the request headers.
Returns the cookies for the current request.
Returns the request parameters.
Gets the request scope.
Gets the page scope.
Returns the scope of the current session.
Returns the application scope.
Returns the user principal.
Starts the tag.
Convert a map of properties to a HTML table.
Set the current screen state.
Walks the tree starting from the given term.
Compares two search nodes.
Updates the properties of the given registers.
Notifies all registered PropertyChangeListeners of the given property change events.
Leaves the given clause.
Returns true if the given positional context is in a top-level functor.
Sets the arguments.
Returns the fixity of this node.
Returns true if this chord is infix.
Compares the priority of the given op symbol.
This method is called when a property is changed.
Register a work flow controller.
Returns an enum attribute factory for the given class.
Creates a component factory for the given class name.
Returns the storage cell for the given variable.
Returns true if this variable is bound.
Sets the column attributes for the given column.
Sets the row attributes.
Returns the attribute set for the given column.
Returns the row attribute or null if not found.
Internal insert method.
Creates a new instance of the specified type.
Creates a new string pattern type.
Returns true if the given character sequence value is an instance of this class.
Creates the initial context for the given term.
Updates the registers for the given layout.
Returns the value of this expression.
Finds the goal path.
Caches a block of data in the cache.
Returns the properties for a resource.
Sets the rate of the clock.
Reads a block from the source.
Skips the specified number of bytes.
Gathers the disjunctions for the given disjunction and its expressions.
Reads an integer from a byte array at the given offset.
Writes an integer to a byte array at the given offset.
Writes a 24 bit integer to a byte array at the given offset.
Reads a 24 bit integer from a byte array at the given offset.
Reads a short from the given byte array at the given offset.
Writes a short value to the given byte array at the given offset.
Returns the child state for the given operator.
Returns an iterator over the operators that are valid for this tree.
Returns the id of this node.
Returns the current value of this property.
Sets the value of this attribute.
Convert a list of strings to an array of strings.
Convert an array of strings to a list of strings.
Converts the given name to camel case.
Lists the handlers in the given array.
Resolves the call point for the given functiontor name.
Sets the code address for the given functiontor.
Returns true if this attribute is a sub-category of the given hierarchy attribute.
Returns the id of this node.
Returns the value at the given level.
Returns the last value in the path.
Writes the object to the given output stream.
Reads an object from the given input stream.
Computes the h-coordinate of the given search node.
Computes the mod of a long.
Adds an error message to the list of errors.
Writes a string to the output stream.
Classifies the given state.
Compares two objects.
Returns an iterator over the elements in this list.
Returns the log base 2 log value.
log base 2 v2 log.
log base 10 v2.
log base 10v3 version.
Returns the log value in base 10.
log base 10v2 version.
Get the character count for a 32 bit integer.
Get the character count for a 64-bit long.
Get character count decimal.
Sets the function head.
emmits the code from the given buffer.
Sets the current screen.
Evaluates the evaluation of the given object.
Returns an iterator for the given key.
Creates the array properties.
Sets the rate of the clock.
Evaluates the given first number.
Finds the properties.
Get the properties using system property.
Gets the properties using the classpath.
Get the properties using the current working directory.
Replaces the given functor with the new one.
Returns the value of this term.
Sets the substitution term.
Creates a queue of search nodes.
Closes the connector and closes the connector.
Appends a logging event to the logger.
Fires the connector.
Initialize the printers.
Commits the transaction.
Rollback the transaction.
Requests a write operation.
Adds a cached operation to the cache.
Acquires a global write lock for the given transaction id.
Releases the global write lock.
Enlists the current transaction with the current session.
Enter a rule set.
Inserts the specified element into the queue waiting up to the specified wait time for the element to
Returns the next element from the queue, or null if the queue is empty.
Puts an element into the queue.
Returns the next object from the source.
Returns the value of the named property as a boolean.
Returns the value of the specified property as an integer.
Get a property as a long.
Mixins arguments to a scope.
Sets the addition visitor.
Backtracks the given search node.
Retrieves the code for the given call point.
Executes the given query and extracts the bindings.
Decodes a heap term.
Captures the current event.
Restores the object to its original state.
Returns the attribute value for the given class and attribute.
Sets the value of the specified attribute on the specified class.
Returns all the field names for the given class.
Executes the mojo.
Inserts the specified element into this queue.
Creates a new search node.
Creates a new priority queue.
Creates a simple walker for the given visitor.
Creates a goal walker for the given unary predicate.
Create a PositionalTermWalker for the given visitor.
Creates a PositionalTermWalker for the given unary predicate and the given visitor.
Create a positional walker for the given visitor.
Reads properties from an input stream.
Reads properties from a file.
Get the properties from the given URL.
Returns the properties for the given pathname.
Computes the size of the grid.
Initializes the font metrics.
Add a property change listener.
Add a property change listener.
Remove a property change listener.
Fire the property change event.
Creates a new instance of a type with the specified minimum and maximum values.
Fades the specified color delta to the specified target color delta.
Shows the horizontal bar horizontally.
Shows the left bar.
Shows the right bar.
Sanitizes all radio controls in the given form.
Waits for the given object to complete.
Waits for the given object to become available.
Executes the mojo.
Appends the classpath to the command line.
Creates a new instance of the given type.
Prints the introduction.
Initializes the console reader.
Evaluates the given sentence.
Evaluates the query.
Gets the multi type data.
Returns the multi-type data for the given byte.
Returns the multi type data for the given character.
Returns the multi type data for the given short.
Returns the multi type data at the given index.
Returns the multi type data for the given long.
Returns the multi type data for the given float.
Returns the multi type data for the given double.
Get a MultiTypeData object from a string.
Returns the multi-type data for the given object.
Adds an attribute to the current page context.
Clears the range with the given key up to the given index.
Expands the given key.
Internal insert method.
Compares two search nodes.
Parse operators from an array of terms.
Returns a map of operators matching the given name.
Checks if the candidate symbol is valid and resolves to the given fixities.
Creates a new search node for the given successor.
Returns the error message.
Returns the options in force.
Returns the usage string.
Adds trailing properties to the given properties object.
Adds the options to the given properties object.
Adds an option.
Checks that the argument format is valid.
Compares two iterators using the given mapping function.
Returns an enumeration of the available options.
Gets the options.
Sets the selected stemmer to the given value.
Gets the actual stemmer.
Returns the stemmed version of the given word.
Main method for testing.
Creates a new instance of a type with the given minimum and maximum values.
Resets this object to its initial state.
Returns the trace frame for the current environment.
Returns the trace choice frame.
Calls the given function with the given number of permutations.
Returns the next frame in the stack.
Returns true if the request should be backtracked.
Jump to the given address.
Computes the unwind trail between two adjacent blocks.
Cleans up the trail.
Returns true if the two specified integers are identical.
unify a const.
Prints a slot.
Get a random start state.
Returns true if the given state is solvable.
Returns the state of the child state for the given operator.
Returns an iterator of valid operators.
Pretty prints the board.
Swaps two tiles.
Convert a string to a char list.
Convert a character list to an eight puzzle state.
Converts a log record to a log4j message.
Converts an org.apache.log4j.Level to an org.apache.log4
Requeues the given element.
Requeues an element from the queue.
Increments the size and count of the given record.
Decrements the size and count of the given record.
Signals the signalable that the given size is between the low and high water sizes.
Returns an enumeration of the given name.
Returns an enumeration of the bindings for the given name.
Adds a property to the environment.
Remove a property from the environment.
Runs the GC.
Parses a literal node.
Resolves a mixin reference.
Pushes a variable reference to the stack.
Sets the maximum height of a row.
Updates the max column width for the given column.
Makes a new node for the given successor.
Executes the action.
Substitutes the built-in transform for the given term.
Initialise the symbol table.
Checks the top level of a symbol table.
Convert a list of arguments to a string.
Evaluates two numeric types.
Signals that the state machine is running.
Signals that the state machine terminates.
Signals that the state machine is terminated.
Inserts the specified element into this queue.
Compares two nodes.
Inserts a new node into the tree.
Restarts the server.
Returns a set containing all of the elements of the given search method.
Returns a collection containing all elements of the collection that match the given method.
Find all solutions.
Returns the next element in the sequence.
Restores the values of an object from a map.
Returns the value of the specified property.
Stores a multi-type data value for the given property.
Sets the value of the specified property.
Captures the event.
Removes and returns the last element from the queue.
Converts the modifiers in the input event to a string.
Converts a string to an integer.
Convert a string to a Date.
Checks if the given string is a valid date.
Checks if the given string is a time.
Checks if the given string is a valid date time.
Creates a token source for the given string.
Returns the token source for the given file.
Creates a token source for the given input stream.
Returns true if the given instruction is a constant.
Returns true if the instruction is a void variable.
Returns true if the instruction is a non-arg instruction.
Returns an iterator over the children of this clause.
Returns the argument at the given index.
Returns an iterator over the children of this operator.
Returns a string representation of the arguments.
Retrieves the summary of a measure.
Retrieves a list of records from the database.
Execute a SQL query.
Transmits the code from the given byte buffer to the given WAM machine.
Sets the basic type of the given class.
This method consults an input stream.
Prints a variable binding.
Expand result set to map.
Reads the data from the input stream.
Reads the contents of the document.
Returns the current time.
Returns the current UUID.
Update the track info for the given playlist.
Update the play info.
Renders the final output.
Handles a resource request.
Handles an event request.
Fire the start music request.
Initializes the connection manager.
Starts the reader thread.
Shuts down the server.
Resets the parser.
Parses the Packets from the inner reader.
Process a packet.
Sets the CLI option.
Creates a chat for the given user.
Internalizes the content manager.
Resets the content to a new map.
Sets the value of the property with the given key.
Adds a filter to the packet.
Process the given request.
Resets all properties.
Initializes the connection manager.
Sends a packet to the server.
Returns the next packet.
Opens the connection stream.
Returns a list of all the informations for this type.
Returns true if the given descriptor is contained in this descriptor.
Add a new event life cycle listener.
Shuts down the executor and cancels the timer.
Checks if the given entry is valid.
Masks null values.
Test if two objects are equal.
Returns the entry for the given key.
Resizes the table to a new capacity.
Adds all keys in the given map to this map.
Removes the mapping for the specified key from this map.
Removes the entry for the given key.
Removes an entry from the map.
Adds a new entry to the specified bucket.
Creates a delegate map.
Encodes a binary attribute value.
Encodes a byte array into a hexadecimal string.
Encodes the given string using Base64.
Encodes the given byte array into a base 64 string.
Iterates over the given collection of objects.
Sets the controller for the track selector.
Sets the controller that will be used to jump progress.
Sets the controller that will be used to play the playback.
Sets the controller that will be notified when the volume changes.
Broadcasts a function to all available playlists.
Handle command resources event.
Handles a volume change event.
Handles a jump event.
Handles the select track event.
Returns the thread cache for the given name.
Returns the request cache for the given name.
Gets the alt field.
Returns the shard path for the given id.
Adapts an object to a Session.
Safely invokes a method on the target object.
Deletes the tree at the given path.
Updates the given object with the given properties.
Sets the ping interval.
Schedules a periodic ping server task.
Adds an array of application options.
Returns true if the given option has been set.
Parses the command line arguments.
Prints usage information for the given application.
Parses the command line arguments.
Initializes the connection.
Starts the TLS connection.
Gets the compression handler.
Sends a stream compression request.
Starts the stream compression.
Notifies the client that a connection error occurred.
Notifies the connection manager about reconnection.
Register a SASL mechanism.
Returns a list of all SASL mechanisms registered in the system.
Returns the output plugin behaviour for the given identifications.
Logs a message and stack trace if INFO logging is enabled.
Logs a formatted message and exception.
Logs a message and stack trace.
Creates a new start event.
Creates a new start event.
Notifies all registered writers that the given string has been written.
Returns true if any of the resources provides the given resource.
Returns true if any of the resources with the given source id exists.
Returns true if one of the resources provides a resource.
Provides a list of resources.
Returns the cached value for the given key space and column family.
Returns the cache key for the given key space and column family.
Remove a cached key from the cache.
Puts a cached property into the cache.
Returns a map of URIs to their location names.
Recursively include a jar file.
Includes a JAR file.
Adds a SASL mech to the list of default SASL mechs.
Adds a collection of SASL mechs.
Creates the debug information.
Activate safe post processors.
Registers all standard event listeners.
Registers an event listener.
Registers a new event id.
Acquires a file lock.
Returns true if the event can be run.
Creates a new dse session with the specified keyspace.
Creates a player error.
Starts playing this music.
Stops playing this music.
Add a command to the player.
Creates a new broadcaster playlist request.
Create a playlist answer.
Appends the given parts to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter.
Returns the list of playlists for the given event model.
Invoked when the launch button action is performed.
Checks if the startup is finished.
Checks if the given URL exists.
Browser button action performed.
Creates an image icon for the given path and description.
Launch the Nakamura server.
Returns a copy of this int array with the specified values.
Exports the configuration to a map.
Returns the value at the given index.
Returns the value associated with the given key.
Returns the value of the property as an integer.
Returns the value of the property as a double.
Returns the value as a string or the default value if the value is null.
Creates a new command resource.
Verifies whether the given command is valid.
Verifies whether the given command supports the given capabilities.
Verifies the given command and capabilities.
Executes a batch of statements asynchronously.
Returns all subclasses of the given class.
Returns all subclasses of the given class.
Search for classes in the given location.
Searches the directory for classes in the given package.
Returns a list representation of this resource.
Returns the number of elements in this vector.
Process a packet.
Get volume from event model.
Create an error response for an IQ.
Creates an error response.
Checks if the given event is a target of the given identifiable.
Sets the value of the enabled_period property.
Decorate a set.
Sets the name of the resource.
Updates the state of the subscription.
Returns a collection of all the roster groups.
Appends the given RMS to the query element.
Parses a RTMP query element.
Creates a new leaving event.
Reloads the roster.
Create a new entry.
Returns a collection of all entries in this roster.
Returns a Presence object for the given user.
Populates the presence packet with unavailable resources.
Fire a roster changed event.
Set the digest for the connection.
Generate the resource.
Creates a player request.
Returns the time passed for the event.
Registers a listener that will be notified when the property changes.
Initializes the properties file.
Reloads the properties file.
Parses a stream error element.
Parses a list of mechanisms.
Parses a list of compression methods.
Parse a packet extension.
Decodes the given value to the given type.
Verifies if the given event model matches the given capabilities.
Get the playback state from a resource.
Returns the secret key for a subdomain.
Returns true if the subdomain is allowed to allow multiple subdomains.
Puts the specified key-value pair into this map.
Returns a set of key-value pairs.
Returns a collection view of the values contained in this map.
Purges a reference from the cache.
Returns the entry for the given key.
Returns the hash code for the given key and value.
Creates a new reference entry.
Returns true if the presence indicator should be enabled.
Sets whether the element is present or not.
Updates the most vague state.
Delivers a message to all registered listeners.
Generate the script.
Initializes the output directory.
Loads properties from a file.
Write a file to the file system.
Returns the progress for the given event model.
Decorate a collection.
Discovers a collection of service resolvers.
Returns the current configuration.
Gets the value of the threadPool property.
Creates a stop music request.
Verifies if the given event model is a target of the given player.
Returns the cluster for the given host and port.
Adds a connection listener.
Add a packet listener.
Add a packet sending listener.
Fire the packet sending listeners.
Add a packet interceptor.
Notifies all registered interceptors of a packet.
Convert an object to a value.
Called when the connection is lost.
Returns the current thread id.
Checks if the given node is valid for the given thread.
Returns the key for the given value.
Returns the value at the specified index.
Looks up the node at the given index in the data array and returns it.
Looks up the node at the given index in the tree.
Compares two objects at the specified index.
Returns the least node at the given index.
Returns the node at the given index in the tree.
Returns the node at the given index greater or equal to the given node.
Returns the node at the given index in the given node, or null if the node is not
Finds the node at the given index in the given node and returns it if it is not
Copies the color from one node to another.
Returns true if the node at the given index is a red node.
Returns true if the node is a black node.
Get grand parent node.
Returns the parent node at the given index.
Returns the right child of the node at the given index.
Gets the left child of the node at the given index.
Rotates the left child of the node at the given index.
Rotates the node at the specified index.
Inserts a node at the specified index in the tree.
Deletes a node from the red-black list.
Check that the given object is not null comparable.
Inserts a new value into the tree.
Returns true if the given key is present in the cache.
Checks if the given value is contained in the current thread.
Returns the value associated with the specified key.
Removes the mapping for the specified key from this map.
Removes all entries from the map.
Copies all entries from the given map to the new map.
Delete expired entries.
This method is called when the cache is being culled.
Activates this component.
Get a player request for a playlist.
Initializes the default roster store.
Opens a new roster store.
Scans a range of IP addresses.
Subnet address 0.
Exports the album.
Imports a track from the given hash map.
Adds all applications from the given set.
Executes the application.
Prints the list.
Prints the usage of this class.
Main method for running the command line tool.
Creates a new mute event.
Creates a new mute event from the given source.
Get the goodwill schema for the given schema name.
Writes a list of lines to a file.
Checks if the script is in the exec jar.
Adds an application option to the command line.
Gets the thrift schema.
Get a thrift field by its name.
Returns the package name of the given entry.
Maps the content of a map to its values.
Creates an event listener for the given descriptor, description, and identifiable.
Sets the state of this iterative state.
Iterates over the given collection of objects.
Iterates over the given iterator.
Returns the track information for the given event model.
Exports the data to a map.
Imports a resource from the given resource model.
Creates a buffered image with the specified error lines.
Get a buffered image from the given URL.
Returns a JSON object from the given URL.
Reverses the keys in the source map.
Returns the multiplication of two elements.
Starts the daemon.
Returns this object to the pool.
Creates a new ended event.
Returns the current track info.
Update a playlist.
Shuffles the tracks in the queue.
Verifies whether the current playback mode is valid.
Exports the queue and position.
Escapes the given string for inclusion in an XML document.
Called when a challenge is received from the server.
Serialize this object to a JSON stream.
Blocks until all events are processed.
Handles an event.
Join all queues.
Sets the property to the given value.
Removes the property with the given key.
Adds a principal to the list of principals.
Removes the given principal from the list of principals.
Called when the root window is closing.
This method is called when a user is encountered.
Called when an event is fired.
Returns true if the given resource is permanent.
Sets the name of the group.
Returns true if this map contains the given key.
Returns true if this map contains the specified value.
Associates the specified value with the specified key in this map.
Removes all entries from this map.
Returns the hash code for the given key.
Returns true if key1 equals key2.
Returns true if the two values are equal.
Ensures that the capacity of the hash table is at least the given capacity.
Calculates the new capacity.
Returns an iterator over the entries in this map.
Loads a map from a binary stream.
Initializes the add-on.
Notifies all connection listeners that a reconnection has failed.
Notifies all connection listeners about a reconnect attempt.