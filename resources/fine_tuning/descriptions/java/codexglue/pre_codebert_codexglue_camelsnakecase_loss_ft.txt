Iterates over the specified value.
Wrap an Observable from the given source.
Returns a list of elements in a sorted order.
Searches for a connectable observable.
Creates a new unicast processor with capacity.
Creates a new Queast processor.
Attempts to try a subscriber to the given subscriber.
Creates a flowable from a scalar.
Resets the configuration.
Creates a new Completable from a Completable.
Creates a Java from a single source.
Retrieves the next retry.
Ensure object is null.
Returns a function that returns a function.
Returns a Callable that wraps the given value.
Creates a function that returns a function that evaluates to the given value.
Returns a cast function to a cast function.
Creates a new unicastore subject.
Creates a new unicastore subject with capacity.
Creates a new unicastore subject.
Creates a new UnsafeSubject.
Gets the error.
Gets the error from the timeout.
Wait for the given timeout.
Drains a queue from a queue.
Requests the given subscription with the specified number of bytes.
Completes the given number.
Get the value associated with this notification.
Get the error message.
Validates if the stream is valid.
Sets the AtomicReference to the given stream.
Validates a subscription.
Sets the AtomicReference to the given Stream.
Add a long to a long.
Multiply a long.
Adds a number to the specified long.
Converts an exception to NullPointerException.
Adds an object to the list.
Shutdown scheduled executor.
Creates a scheduled executor service.
Sets a subscription.
Emit the loop.
Wraps an exception to a RuntimeException.
Flattens a throwable into a list of exceptions.
Throw exception if an exception is thrown.
Removes all resources from the resources.
Returns the number of resources.
Try to determine whether the observer is a scalarable.
Creates a new Observable with the given function.
Accepts a subscriber.
Accepts the given observer.
Starts the queue.
Starts the queue.
Adds an object to the queue.
Gets the resource.
Completes the given value.
Handles an error.
Completes the stream.
Asynchronously returns the number of times.
Requests the specified number of items in the queue.
Adds a subscription to the queue.
Removes all registered subscribers.
Searches for the given connectionable.
Parses the given method from the request.
Sets the delay.
Create error response.
Calculates the delay between the given time.
Create sample data.
Returns the HTTP method for the given method.
Searches for the given username.
Encode the raw password.
Checks if the given password matches the provided password.
Checks if the given spring version is valid.
Disables the checksum for the given spring version.
Gets the spring security version.
Specify an attribute exchange configurer.
Gets the OAuth2 client.
Get OAuth2 auth2 server.
Compare the given attribute with the given value.
Retrieve an entry from the specified dir.
Searches for multiple attribute values.
Search for a single entry.
Builds a Control for the given Control.
Lookup all primary keys.
Build the web authentication details.
Create the embedded bean definition.
Create servlet filter.
Creates the JAAS API for the JAS API.
Creates a default type builder for the default type.
Adds the spring security filter chain to the servlet context.
Gets the token for a specific series.
Gets the granted authorities.
Creates a new cipher with the given algorithm.
Override this method to override this method.
Executes the given request and returns the filter.
Check if the principal has been changed.
Implements the authentication process.
Checks the content length of the response.
Maps the authorities to the given collection.
Sets the login process URL.
Updates the authentication defaults.
Update the access defaults.
Map the password to a string.
Extract the cookie from the request.
Encodes a cookie into a string.
Sets the cookie.
Resolve an argument.
Gets the query string from the request.
Returns the service port for the given URL.
Get the principal principal.
Log out a request.
Authenticate the given authentication.
Sets the environment properties.
Returns the full redirect URL.
Render the tag.
Initialize the user details.
Returns the user details for the given application.
Adds pce to the given map.
Checks if the request is required for the request.
Implements authentication request.
Check service ticket request.
Checks if the authentication token is authenticated.
Determine if the request is proxied.
Creates the method root security expression root.
Gets the jwk set.
URL-Encodes the given String value.
Gets the collection of granted authorities.
Load user details from the given assertion.
Gets the preauthenticated principal.
Concatenates arrays into a byte array.
Returns a copy of a byte array.
Gets the granted authorities from the given collection.
Pre-processes the given map.
Returns a collection of granted authorities.
Adds the authorities to the given collection.
Extract the pre-authenticated principal from the request.
Returns the shared object associated with the specified type.
Build the url for the given request.
Invokes the method.
Checks the given role.
Checks if any of the given roles.
Called when a login attempt is successful.
Attempt to switch the user to the given user.
Exit the given user.
Sets the exit user URL.
Displays the public index.
Gets the filter chain filter.
Decode the given token.
Authorizes the access expression.
Authorizes the URL for the given URL.
Convert a JWT to a collection of authorities.
Generates a new CCRF token.
Displays the admin page.
Displays the add permission for the given contact.
Adds a new permission.
Returns the role with the default prefix.
Factory method for creating a new UserDetails instance.
Returns the values of the given attribute.
Returns the first value of the given attribute.
Encodes a string into a byte array.
Decode a byte array.
Looks up the parameter names for the given parameter.
Adds a new contact to the given form.
Find all config attributes for a given method.
Adds a method to the cache.
Get all config attributes.
Check if a method name matches the given name.
Sets any request configuration.
Handles bind exception.
Get a random number.
Clear authentication attributes from the request.
Returns the field with the given name.
Create service url.
Create redirect url.
Extract prefix from a string.
Called when a request is reached.
Validates the given filters.
Gets all registered types.
Extracts the cause of the given throwable.
Register access manager.
Converts a collection of authorities to a set of authorities.
Checks if the given byte array matches the given array.
Sets the default failure url.
Sets the resolve hidden inputs for the request.
Build the request URL.
Checks if the given URL is an absolute URL.
Creates a list of attributes for a given identifier.
Converts a ResultSet to a Serializable Identifier.
Creates an ACL.
Creates an object primary key.
Update object identity.
Save request to the request.
Creates a new PathMatcher for the given methods.
Matches an HTTP GET pattern that matches any of the given exchange.
Encrypt a password.
Encrypt the given password.
Encrypt the given password with the given password.
Writes the headers to the response.
Determine the target URL for the given request.
Determine the target URL for the target URL.
Sets the target URL parameter.
Finds the directory from the given id.
Build a distinguished name.
Creates the shared keys from the configuration.
Configures the JAAS configuration for the loop.
Gets the current date.
Attempts to parse the given string to a date.
Updates the value in the cache.
Sets the details of the authentication request.
Get the security name for the given subject.
Get the list of web sphere groups.
Build a distinguished name from a group.
Thrown if the session exceeds the given number of sessions.
Copies the details of the given authentication token.
Returns the filters for the given request.
Returns a list of filtered filters.
Returns the web application context for the given page context.
Get the full name of a given dn.
Sets the session attributes.
Sets the basic authentication scheme.
Adds a list of filters to the REST endpoint.
Adds a filter to the given filter.
Creates a new BasicAuth scheme.
Returns a new NtlM scheme for the given user.
Creates a new AuthenticationSchema.
Sets the proxy to the given URI.
Pretty prints the response body.
Creates a new REST endpoint.
Configures the default encoder with default charset.
Configure default object mapper.
Configure JAXB object mapper factory.
Sets the mock configuration config.
Sets the mock configuration config.
Configure mock mapper config.
Sets the mock configuration config.
Sets the mock configuration config.
Sets the mock configuration config.
Sets the mock configuration config.
Sets the rest config config.
Sets the mock configuration config.
Sets the mock configuration config.
Set the mock config parameter config.
Sets the mock configuration config.
Returns a list of all hostnames configured for the hostname.
Declare the default path configuration.
Sets the namespace configuration for the given namespace.
Perform a HTTP request.
Sets the headers.
Sets the default proxy.
Sets the control name.
Adds a header to the request.
Sets the basic authentication.
Sets the nptm for the given host.
Returns a new copy of the given header.
Resets the configuration.
Sets the response header.
Build the restart response.
Matches a cookie matcher with the given value.
Matches a comment matcher for the given comment.
Create a new cookie matcher that matches the given matcher.
Sets the domain matcher for the given domain.
Matches a path matcher for the given path.
Matches the given cookie matcher for the given matcher.
Matches the HTTP cookie matcher for the given matcher.
Matches a VersionMatcher for the given version.
Matches a custom cookie matcher for the given max age.
Specify a header for a response.
Specify a header for the response.
Sets the cookie for the given cookie.
Returns a copy of the given host specification.
Configure the JsonPath.
Configures the default path for the given parser.
Sets the default logging configuration.
Enables the request validation on the request.
Create a new HttpRequest for the given uri.
Sets the default boundary.
Adds an attribute to the request.
Adds a header to the request.
Adds a multi-part request to the request.
Adds the result handlers to the request.
Sets the parameter.
Adds the given params.
Sets the HTTP client configuration.
Configure the HTTP client configuration.
Retrieve the value from the given path.
Retrieve an integer value from the path.
Returns the byte value from the specified path.
Retrieve a short value from the path.
Get a float value from the path.
Get a double from the path.
Retrieve long value from path.
Returns a list of objects from the given path.
Returns the value associated with the given path.
Retrieve the object from the given path.
Sets the body.
Adds a cookie to the request.
Adds a parameter to the request.
Adds a parameter to the request.
Marks the given update parameter with update parameters.
Returns a filter that matches the given pattern.
Creates a new cookies from the given cookie.
Clean up all keys from the given collection.
Index the binding to the given state.
Returns the binding for the given key.
Converts a key string into a binding string.
Cleans up the bindings for the given binding.
Removes the given binding from the given injection point.
Returns the internal dependencies of the given binding.
Creates uninitialized binding.
Get all parameters for the given parameter.
Binds an injector to the given injector.
Binds a logger to the given injector.
Checks if the given member is found.
Returns true if the given method is overridden.
Initializes the delegate member.
Returns the type of the provider.
Resolves all the types of the given types.
Calculates the type for the given type.
Prepares the built converters for converters.
Returns the class loader for the given class loader.
Checks if the given class loader has the same name.
Checks if a member is public.
Fixes the given key.
Requests an injection on the given instance.
Validates the pending injections.
Creates a new instance of the given arguments.
Creates a new scope for the given scope.
Make a scoped scoped instance.
Normalize the given path.
Returns the annotation for the given annotation type.
Checks if the retention policy is retained.
Finds scope annotation.
Returns the key for the given type.
Returns the name of the given key.
Initializes the delegate provider.
Adds a direct type binding to the given type.
Returns the constructor for the given injection point.
Checks if the given interceptor is present on the given interceptor.
Creates a new real map binder for the given key.
Returns a new key for the given key.
Creates a new instance of the given context.
Writes the source code to the source file.
Returns a module for the given module.
This method returns the list of Effort methods.
Returns true if the given configuration exception is not null.
Checks if the given constructor matches the parameters.
Returns the dependencies for the given injection point.
Removes all the extensions from the given set.
Checks if the optimization is valid for the given implementation.
Gets the binding from the given injector.
Invokes the method on the given proxy.
Creates a missing implementation for the given key.
Creates a new Multibinder for the given key.
Gets the key for a new item.
Find the next filter for the given request.
Checks if the given class is annotated with the given class.
Returns the internal constructor for this factory.
Returns all internal dependencies for this class.
Creates a module for a given module.
Returns the annotation for the given method.
Returns the number of lines in the given member.
Initializes the lookup.
Validates the given value to ensure that the given key is valid.
Returns the type of the model.
Creates a new instance of the members of the given type.
Returns a list of all the members of the given injection point.
Returns a Key instance for the given type.
Returns an annotation strategy for the given annotation.
Returns an annotation strategy for the given annotation type.
Prune the stack trace.
Gets the binding source.
Creates a new message with the specified message.
Creates a new message with the specified message.
Creates a new message with the given arguments.
Convert an object to an object.
Checks if the given class should be skipped.
Retrieves the source from the given module names.
Entry point for the module.
Pushes the given dependency.
Push state to the given key.
Returns an initializable instance of the given instance.
Instantiates the given dependency.
Called when an event is registered.
Adds a new connection event.
Gets the result of a future.
Locks the given throwable.
Register the given command.
Register default processor.
Returns the default processor for the given command code.
Try to get a URL from a URL.
Decodes the protocol code from the input stream.
Retrieve all connections from the server.
Scan the connection pool.
Retrieves a connection if it exists.
Attempts to reconnect the specified connection if necessary.
Removes the given pool from the pool.
Tests if a connection pool is needed.
Creates a new connection.
Close connection.
Called when a connection is closed.
Close the remote connection.
Sets the value for the specified key.
Registers a user with the given user.
Registers a user processor with the specified user.
Dispatch a command to a user.
Deserialize request command.
Pre-processes the remote context.
Logout timeout.
Log a command.
Process the given message.
Called when a remote request is received from the remote server.
Convert a BitSet to a byte array.
Convert an integer value to a BitSet.
Adds a reconnect to the specified URL.
Converts a request to a remote command.
Filter connections.
Closes the last select connection.
Gets a boolean property.
Logs a formatted message.
Is request timeout.
Returns the user processor for the given class name.
Get a random connection.
Returns the value associated with the given key.
Returns the value associated with the given key.
Resolves the response object from the given response.
Converts a response command to a response object.
Converts a response to a throwable.
Extract the error message from the response.
Create a ServerServerException from the given Throwable.
Print a connection trace log.
Creates a new EventGroupGroupGroup.
Parses the remote address from the remote server.
Parses the local address from the given channel.
Parses the remote IP address from the remote channel.
Parses the remote hostname from the remote channel.
Parses the local IP address from the local channel.
Parses the remote port from the given channel.
Returns the local port from the given channel.
Parses an IP address from the given socket address.
Adds a connection to the pool.
Removes a connection from the pool.
Registers a custom serializer with the given class name.
Returns a custom serializer for the given class name.
Registers a custom serializer for a given command.
Get custom serializer for given command code.
Checks if a remote address is connected.
Initialize write buffer.
Constructs a frame for the given opcode.
Pushes the given socket to the given socket.
Sets the code.
Validates the given byte buffer.
Updates the payload.
Checks whether the given protocol protocol contains the requested protocol.
Translates a single frame number to a single length.
Translate a single packet to a single packet.
Generate the final key for the given string.
Processes the frame with the given frame.
This method is called when the frame is received.
Logs a web socket exception.
Process the frame text.
Processes the frame.
Processes the frame.
Processes the frame and closes the frame.
Checks that the buffer size is exceeded.
Get the payload from the buffer list.
Returns the total number of bytes in this buffer.
Translate the HttpServer.
Translate the HttpClient to a HttpClient.
Decodes the given socket.
Close the error.
Close the error.
Generates a HTTP response for the given error code.
Send text to the server.
Resets the socket.
Connects to the remote server.
Returns the port for the given URI.
Send the request to the server.
Sets the connection timeout.
Stop the connection timer.
Starts the connection timeout.
Restart the socket timeout.
This method is called when a web socket is detected.
Cancel the connection timer.
Called when a websocket handshake is received from the server.
Called when a websocket frame is received from the server.
Stops the shutdown.
Get the port.
Reads the data from the stream.
Accepts the given selection key.
Reads an input stream from the input stream.
Writes the given selection key.
Setup the selector and wait for the server.
Ensure that a single thread is open.
Shutdown the server.
Gets the socket.
Broadcasts the given data to the given collection.
Broadcasts the given text to the given collection.
Broadcast the given list of websocket frames.
Fill the data from a pre-processing header.
Transfer bytes from source to destination buffer.
Starts the JPAX repository.
Returns the entity manager for the given name.
Creates a new transaction with the given block.
Convert arguments to scala.
Wrap a list of arguments.
Gets the message with the specified key.
Get the message for the given key.
Checks if the given key is defined in the language.
Selects the preferred messages.
Selects the preferred message.
Sets the lang result.
Sets the bindings for the given modules.
Set the bindings for the given modules.
Set the bindings for the given bindings.
Returns a copy of the given modules.
Returns a copy of the specified modules.
Returns a copy of the given bindings.
Disables the given modules.
Executes the given request.
Returns the file for the given path.
Returns a binding for the given scope.
Creates a tuple from the specified values.
Creates a tuple with the specified values.
Converts an ExecutorContext into an Executor.
Creates a JPAP instance for the given name.
Creates a JPAP object from the given unit.
Creates a JPAP object from a Map.
Creates a string from a string.
Creates a new flow node.
Adds a constraint for the given key.
Creates a new instance of the given key.
Returns a method that matches the given method name and parameter types.
Called when a client is received from the client.
Called when a request is received.
Called when a request is forbidden.
Called when a request is found.
Called when a server error occurs.
Log the error message.
Converts a Throwable to a BadException.
This method is called when a device error is detected.
This method is called when a client error occurs.
Creates a new doc handler for the given resources.
Creates a new documentation handler for the given directory.
Creates a new DocHandler from the given directory and jar files.
Creates a new documentation handler for the given directory and the given directory.
Creates a new documentation handler for the given jar file.
Consume data from the data stream.
Creates a new entity from the given content.
Creates a new HttpEntity from a String.
Creates a new chunked chunked from a byte array.
Create a new result with the given status code.
Sends a response with the given status code.
Creates a result from a byte array.
Sends an input stream to the given status.
Sends a status message.
Find a user by id.
Selects the preferred language for the given collection.
Creates a new call for this URL.
Creates a new call with the specified fragment.
Returns the absolute URL for the given request.
Returns the URL for the given request.
Creates a new connection function.
Creates a new connection function.
Creates a new ServerServer instance for the given mode.
Convert an object to a JSON node.
Converts a JSON node into an object.
Parses the given source string.
Parses an InputStream from a stream.
Returns the path relative to the target path.
Returns the canonical URL for the given URL.
Displays the given set of constraints.
Returns a tuple of the given constraint.
timeout for a given duration.
Parses the given cron.
Get the next interval from the given date.
Factory method to create a new WMS client.
Creates a builder for the given application context.
Wraps the given request.
Adds a session to the session.
Sets the value of the given key.
Returns the binding key with the given instance.
Returns the binding key with the given annotation.
Returns the binding to the given implementation.
Returns the binding of the given provider.
Returns a new binding from the given supplier.
Returns the binding of the given key.
Convenience method to return a new binding.
Returns the list of available languages.
Selects the preferred language for the given application.
Creates a new EvolutionReader from the map.
Creates a new EvolutionReader for the given default values.
Removes all evolutions from the given database.
Returns a builder for the given configuration file.
Adds a module loader to the module loader.
Load a Guice application from the given modules.
Loads the given modules.
Loads the given modules.
Load the given bindings.
Returns a new Guice application builder for the given builder.
Encodes a cookie.
Get the entity manager.
Returns the entity manager for the current thread.
Pushes an entity to the given entity manager.
Pass the given stream to the given stream.
Disconnects from the given graph.
Converts an array of arguments to a list of errors.
Fill the given value with the given value.
Get all validation errors.
Returns a JSON representation of the error messages.
Returns the value associated with the given key.
Fill this form with the given values.
Parse the given text.
Parse the given text.
Returns a string representation of the given object.
Prints a single field descriptor.
Returns a string representation of the given type.
Registers the given converter.
Register a formatter for the given type.
Encodes a cookie.
Selects all nodes in the given path.
Convert a list of Java List to a Sequence.
Convert an array of objects to a sequence.
Convert an array of arguments to a sequence.
Create a mapped web socket acceptors.
Accepts and returns a web socket.
Calculates the promotion cost for a primitive class.
Returns the total transformation cost for the given executable.
Calculates the cost of the given object.
Gets a localized message.
Get the message at the specified key.
Creates a new database from the given configuration.
Creates a new ParallelSorter.
Sort the specified index.
Merges the given index into the given sorted list.
Invokes the given object.
Loads a single argument.
Emits a field in the given opcode.
Push zero or null.
Unbox the given type.
Processes an array of elements in the given type.
Generates code that is null.
Resolves all the bridges.
Filter the given list of constructors.
Sets the super class.
Gets field.
Adds a method to the given method.
Returns the cardinality.
Sets the naming policy.
Finds all methods in a given array of methods.
Resolves a path.
Reads a string from a file.
Sets the host host.
Creates a new Request with the given method.
Creates a new HTTP request for the given destination.
Creates a GET request.
Creates a new HTTP request.
Creates a PUT request.
Creates a HTTP request for a given destination.
Creates a HTTP DELETE request.
Creates a HEAD request.
Creates a new HTTP request for the given destination.
Creates a new HTTP request.
Sets the path to the given path.
Adds cookies to the request.
Add a query parameter to the request.
Sets the query map.
Sets the query string.
Returns the query string.
Returns the host URL.
Sets the base64 authentication.
Sets the host header.
Creates a buffer for the specified request.
Removes the handler from the given handler.
Returns the number of exception handlers for the given handler.
Collect the action interceptors.
Collect all action filters.
Collect all action results.
Collect all actions for the action.
Sets a simple property.
Returns the property value for the given property.
Extract the reference from the property name.
Get the PrintWriter for this file.
Sets an object reference to the specified object.
Returns the object reference for the given name.
Looks up an object reference by its name.
Returns the table descriptor for the given table.
Find table descriptor by column name.
Returns the alias for the given table.
Registers a table reference.
Looks up a table descriptor for the given table.
Registers a specific hint.
Serialize the value to JSON.
Inject attributes from the servlet request.
Inject parameters from the servlet request.
Inject all uploaded files in the request.
Convert a property name to a column name.
Converts a column name into a property name.
Convert the given column name to a column name.
Stores the given value.
Prepare the value for the given object.
Returns a set of all wrappers contained in this set.
Resolves a wrapper for the given wrapper class.
Creates a wrapper for the given class.
Convert path to system separators.
Returns the path from the given filename.
Splits the given filename into a string.
Returns a relative path.
Registers a custom component.
Adds an action to the action config.
Starts the server.
Registers the Firmios components.
Remove all classes in the given jar file.
Includes all classes in the given jar file.
Includes all entries in the given class.
Remove all entries in the given class.
Recursively scans the given jar file.
Recursively scans the given file.
Returns the signature of the given type.
Scan for given paths.
Starts the jar file.
Creates a new transaction.
Gets the default scope type.
Returns the specified scope with the specified type.
Iterates over the specified scope.
Prepare a css token for the given session.
Ensure that the given token is valid.
Check if the given token is valid.
Creates a clone of the given object.
Creates a copy of this bean.
This method will be called when a property has been set.
Initializes the entity reference.
Resolve a scope.
Register a bean definition.
Register a bean definition.
Removes a bean from the cache.
Resolve bean names for a given type.
Register ctor injection point for the given bean.
Register a property injection point for the given bean.
Registers a setter for the given property.
Registers a method injection point for the given bean.
Registers the init method for the given bean.
Registers the bean method for the given bean.
Register pite provider.
Register pite provider.
Iterate through the given type.
Defines the parameters for the given map.
Intercept the action.
Returns the Java version of the given version.
Pushes an integer value into the stack.
Validates the given argument.
Returns the advice field name.
Returns a method name with the given index.
Load special method arguments.
Load static method arguments.
Load virtual method arguments.
Load method argument.
Store method argument.
Prepare the return value for the given method.
Create a string key for a method signature.
Creates a new array for the given type.
Store the given method to the given type.
Extract the encoding from the given content type.
Checks if the given flags are empty.
Resolves an authentication token from the request.
Requests that the given realm is authenticated.
Prepares the download response for the given response.
Prepares the response for a response.
Get all cookies for a given request.
Read the request body from the given request.
Read the request body from the request.
Store the context path.
Store the context path.
Checks if a request is a GET request.
Prepare the parameters for the given array.
Copy the parameters from the servlet request to the request.
Invokes the given fragment.
Renders the given fragment into a HTML fragment.
Renders the given fragment into a String.
Invoke all init methods.
Call all destroy methods.
Creates a new bean instance.
Inject parameters into the bean.
Rewrite action path.
Adds a header to the request.
Puts the given value into the given key.
Put base property.
Puts the given profile into the given key.
Returns the value of a profile property.
Resolves the given value with the given value.
Extracts the target from the given profiles.
Reads a stream from a byte array.
Hashes a password.
Checks if the given plaintext is a password.
Copy all bytes from the given stream to the given output stream.
Copy max bytes from the given stream to the given output stream.
Parses the action runtime.
Resolve action config.
Detects the alias for the action.
Reads the action interceptors for the given action.
Read the action filters from the given action.
Reads the action path.
Reads the action path.
Extracts the alias from the action annotation values.
Creates the action runtime.
Called when the request is modified.
Applies an advice to the given target class.
Inject the target proxy into the proxy.
Visit an annotation.
Resolves the real name for the given json name.
Resolves a JSON name to a JSON name.
Looks up the type data for the given type.
Looks up the type data for the given class.
Find the type data for the given type.
Resolve a JSON name for a given type.
Resolve the real name for a given type.
Returns the content of this file.
Copy the bootstrap methods from the given class.
Sets the major version.
Put constant pool pool.
Put bootstrap methods.
Adds a constant field reference.
Adds a constant reference to this symbol.
Adds a constant reference to the constant pool.
Adds a constant reference to the constant pool.
Adds a constant to the constant pool.
Adds a constant to the constant map.
Adds a constant to the constant pool.
Adds a constant to the constant map.
Adds a constant name to the constant pool.
Adds a constant name and type.
Adds a constant to the constant pool.
Adds a constant.
Adds a constant handle to the constant map.
Adds a constant to the constant pool.
Adds a constant.
Adds a constant reference to the constant pool.
Adds a dynamic reference to the constant pool.
Adds a constant to the constant pool.
Adds a constant to the cache.
Adds a bootstrap method.
Adds the merged type to the given list.
Calculates the hash for a given name.
Removes all the headers from the map.
Returns all values for the given name.
Returns an iterator over the elements in this map.
Returns a list of all entries in this map.
Grows the buffer.
Append character sequence.
Visits an annotation.
This method will be called by the proxy method.
Creates the first delegate chain delegate.
Create the first chain of the first method.
Parse a path from a string.
Adds a field to the path.
Configure the servlet context.
Executes the target method.
Returns all the field descriptors.
Creates a bean definition for the given type.
Converts the given Jtx to a DB transaction mode.
Reads the property from the given object.
Put all values in the given map.
Adds a buffer to the buffer.
Writes the contents of this file to the given writer.
Writes the contents of the given stream to the given output stream.
Writes the given stream to the given output stream.
Returns the string value for the given key.
Returns the integer value associated with the given key.
Returns the long value associated with the given key.
Returns the double value associated with the given key.
Returns the float value associated with the given key.
Returns the value associated with the given key.
Puts a string into the map.
Use this method to create a new folder.
Receive messages from the given filter.
Update the flags of the mailbox.
Close the folder if it is opened.
Looks up a named query parameter by its name.
Validates the action.
Adds a violation.
Sets the raw data type.
Sets the download data to download.
Sets the target input stream.
Sets the target class.
Sets the target class.
Processes the proxied input stream.
Create a proxy class.
Create a new instance of this class.
Dump the class in the debug folder.
Sets an email address.
Sets the email address.
Adds a new email address to the specified personal address.
Sets the reply to the email address.
Sets the CC address.
Adds a text message to the specified text.
Adds a HTML message to the specified HTML.
Adds a header to the request.
Retrieve the value of a property.
Gets a boolean property.
Get an integer value from the given name.
Get the long value from the given name.
Gets the resolved parameters.
Serialize the key value to the given key.
Lookup the path for the given action.
Resolves the alias for the given value.
Returns the result path for the given path.
Resolve the result path for the given path.
Returns the last index of the given string.
Returns the last index of the given string.
Returns the index of the given string.
Resolves the schema name for the given type.
Resolves column descriptors for the given property descriptor.
Initializes the given key.
Adds the values to the given point.
Determine the given point.
Key schedule schedule.
Initializes the key with the given key message.
Encrypts a block.
Convert byte array to long array.
Removes the bounding box from the given string.
Returns the path to the target class.
Creates a zlib file from a given file.
Gzip a file from a given file.
Unzip the given file.
List all entries in a zip file.
Unzip the given zip file into the given destination directory.
Adds a file to the zip output stream.
Adds a file to the zip output stream.
Returns the field descriptor for the given field.
Returns the property descriptor for the given name.
Sets request bundle name.
Sets the locale for a session.
Returns the locale for the given session.
Filters the parameters for the given bean name.
Adds profiles to the properties file.
Get long endian unsigned long.
Reads bytes from input stream.
Reads a label from the given byte array.
Returns the bytecode offset for the given type annotation.
Read bootstrap method attribute.
Returns all the constructors of this class.
Returns the ctor descriptor for the given arguments.
Returns the request map for the request.
Creates a map from the servlet request.
Convert an array to an array of Long.
Initializes the servlet.
Adds a file to the search path.
Adds a path to the list.
Includes the given patterns.
Remove files that match patterns.
Adds a path to the file.
Find all files in the given directory.
Initialize the tree.
Returns an iterator over the contents of this file.
Determine the binding for the bean type.
Resolve bean name.
Returns a PrintWriter for this output stream.
Returns the output stream for this servlet.
Returns the class name of this element.
Returns the String descriptor for the given constructor.
Returns the method descriptor for the given return type.
Returns the method descriptor for the given method.
Append the value to the string builder.
Get the size of this object.
Returns the number of arguments for the given method descriptor.
Set the rollback for the given transaction.
Commits the transaction.
Roll all resources in the transaction.
Requests a resource for the specified resource type.
Pop a single name from the stack.
Write a string to the stream.
Write a unicode character.
Write character sequence.
Sets the parsing log level.
Start the region.
Check if the value is contained in the given string.
Register a new pseudo function.
Lookup a pseudo-function by name.
This method is called by the proxy.
Visits an annotation.
Create static static initialization block.
Create a proxy constructor.
Process all super methods.
Find the last index in the given range.
Adds the given string to the log.
Replace the instructions from the given class file.
Returns an array of Attribute prototypes of this class.
Register a new SQL type.
Looks up the type for the given class.
Lookup the SQL type for the given class.
Creates a new ProxyInfo for the given proxy address.
Creates a new ProxyInfo for the given proxy address.
Creates a new ProxyInfo.
Returns the total number of transactions in this thread.
Count total number of threads in the given status.
Associate a transaction.
This method ensures that the given transaction is valid.
Lookup the resource manager.
Creates a proxy object.
Append a method to the path.
Align the given text and returns the left and padding.
Convert a string to a camel-case.
Formats a string to a string.
Converts a line to spaces.
Escape the given string.
Unescape a string.
Returns the bean associated with the specified type.
Returns the bean associated with the given name.
Initialize bean definition.
Invoke the provider.
Adds a bean to the bean.
Sets the bean property.
Get bean property.
Shuts down the resources.
Resolve method parameters for a given method.
Puts the body of the body.
Returns the value of the property value.
End the end of the document.
Creates the element for the given tag.
Removes the last child node if it is empty.
Get the SQL string for this query.
Returns the class name for the given action.
Calculates the number of bytes in the given range.
Replace the given string with the given string.
Replace the given string with the given substring.
Replace all occurrences of a string with the given substring.
Replace the given string with the given string.
Replace the given string with the given character.
Replace the last occurrence of the given string.
Replace the last character with the given string.
Removes the given substring from the given string.
Removes the given character from the given string.
Checks if the given strings are empty.
Check if any of the given strings are blank.
Convert an object to a String array.
Changes the first character of the given string.
Converts a string to a title.
Compress all characters in a string.
Checks if the given string starts with the given index.
Check if the given character is ending with the given character.
Count the number of occurrences of the given source.
Check if two arrays are equal.
Returns the index of the first whitespace in the given string.
Strips the leading character from the given string.
Strips the trailing character from the given string.
Strips the given string.
Strips the given character from the given string.
Strips the given character from the given string.
Crops all strings from a String.
Trims all whitespace characters from a String.
Trims all whitespace characters from a String.
Returns the index of the given string.
Join a collection of objects into a single String.
Join an array of objects into a String.
Converts a source to a String.
Checks if the given character is at the given index.
Adds a string to the given string.
Adds a string to a prefix.
Adds a string to a string.
Cut the given string from the given string.
Cut a string from a string.
Cut the prefix from a string.
Cut the suffix from a string.
Removes the surrounding string from the given prefix.
Inserts a string into a String.
Creates a string from the given source string.
Reverses a string.
Returns the common prefix of two strings.
Find common prefix.
Shortcut to shorten the given string.
Convert a string to upper case.
Removes the quotes from the given string.
Converts a byte array to a hexadecimal string.
Get byte array from string.
Detect the quote character.
Visits an enum value.
Visit an annotation.
Register a new entity descriptor.
Registers an entity with the given type.
Removes the given entity descriptor from the given type.
Creates an entity instance of the given class.
Sets the target interface.
Inject the given target field into the target wrapper.
Looks up all the properties for the given type.
Detect database server.
Closes the output stream.
Writes a byte to the output stream.
Processes the given URL.
Get the name of the mail header.
Returns the byte array as byte array.
Writes the contents of the file to the given destination file.
Writes the contents of this message to the given output stream.
Append argument.
Prepend the argument to the given type.
Changes the return type.
Adds the text to the given text.
Register a type converter.
Looks up the type converter for the given type.
Selects all elements matching the given query.
Selects all elements from a collection.
Processes the given list of nodes.
Selects the first node from the given query.
Iterate over all descendants of a list of nodes.
Walks the given root node.
Selects the given node and adds it to the list.
Unpacks a CZZIP array.
Fills the zz buffer.
Execute a page data query.
Removes the select from the given SQL statement.
Remove from the given SQL statement.
Remove last order by name.
Decode the given HTML tag.
Detects the name of a character from the given entity.
Adds the order to the order.
Build the SQL statement.
Resolves all columns and properties for the given type.
Finds a column descriptor by its column name.
Find column descriptors by property name.
Returns the property name for the given column.
Returns the column name for the given property.
Returns the id value associated with the given object.
Sets the value of the property.
Returns the key value for the given object.
Append a string to the buffer.
Sets the index.
Expand the buffer size.
Calculates the length of this array.
Creates the glue message for the given bean definition.
Creates a scoped proxy bean.
Initializes the file.
Accepts a file.
Use this method to create a new watch file.
Starts the watch interval.
Dispatch a file watcher.
Adds an enumeration to the list.
Computes the total size of this field.
Put the field info.
Creates a target object from the given value.
Writes a property value to the given injection point.
Decrypts the given page content.
Parses the content of the given page.
Writes the decorated page content.
Writes the region to the given decodes.
Starts the server.
Runs a process.
Creates and returns the store for the given client.
Creates the output stream for the response.
Initializes this template.
Append column name.
Adds a rule to the list.
Processes the given value.
Processes the given value.
Processes the given value.
Returns the name of the pseudo class.
Adds all elements in the given Collection.
Finds the insertion point in the given range.
Bind an annotation to the given annotation type.
Registers a new action configuration.
Lookup the action with the given action type.
Adds the given action to the given action type.
Sets the system properties.
Validates the given value.
Find the last table for the given node.
Fixes the elements of the last element.
Registers the session beans for the given http session.
Extract the bean data from the session.
Initializes the proxy class.
Adds an advice method to the advice.
End the bundle.
Adds a string to the given section.
Extracts the list of profiles from the given key.
Helper method to add a single value to the list.
Convert a typed type to a Java type.
Convert a type to a Java type.
Convert a type to a Java type.
Add all consumers.
Creates a collection of elements.
Converts value into single single element.
Converts the value into a Collection.
Convert a collection to a Collection.
Adds a line number to this line.
Marks this label.
Puts the given instruction into the stack.
Adds the forward reference to the given instruction.
Marks a subroutine.
Compare two digits.
Fix the accent.
Puts a byte into the buffer.
Puts two byte arrays into the buffer.
Puts a short value into the buffer.
Put 16-bit integer.
Put 32-bit integer.
Puts an integer into the buffer.
Put 32-bit integer.
Puts a long value into the buffer.
Puts a byte array into the buffer.
Increases the size of the given size.
Authenticate user via HTTP request.
Authenticate the user via the token request.
Authenticate user via basic authentication.
Find the default message for the given locale.
Returns the bundle with the given name and locale.
Returns the value at the specified index.
Sets the id value for the given entity.
Save the given entity into the database.
Updates the given entity.
Update property.
Update the property with the given name.
Find by id.
Find by name.
Find an object by its criteria.
Delete an entity by id.
Delete an entity by its id.
Count the number of entities in the given entity type.
Increases the property with the given id.
Decreases the property on the given entity.
Find all related objects in the given target object.
Returns all objects for the given class.
Removes all attributes from the cache.
Returns all the entries in this map.
Puts the value into the cache.
Removes the value from the cache.
Get the current stack trace.
Get the stack trace for the given throwable.
Gets the stack trace chain.
Returns an array of Throwable from a Throwable.
Convert an exception to a String.
Converts a Throwable to a String.
Build the message for the given message.
Unwraps a throwable.
Registers the given class as a consumer.
Accepts the specified component class.
Get the system class loader.
Returns an input stream for the given resource name.
Returns an input stream for the given resource name.
Gets the class as input stream.
Loads a file from the given classloader.
Adds a new route.
Finds a child chunk.
Parses the request.
Converts the given value into a collection of objects.
Invokes the given setter method.
Force the given array at the given index.
Create a bean property.
Extract the type of the bean property.
Stop the http session.
Starts the http session.
Converts a local date to a Date.
Converts a local date to a Calendar.
Define a proxy for the given target class.
Adds a new check.
Resolve validation context for a given class.
Adds all class checks for the given target class.
Collects all annotation checks for the given property descriptor.
Collect all annotation checks for the given type.
Copy the default checks for the given annotation.
Encodes a URI into a String.
Encode the given string.
Encode a URI.
Encode the given URI.
Encode the given port.
Encode a URI path.
Encodes a query string.
Encode a query param.
Encodes a fragment.
Returns a map of all properties of this class.
Returns all property descriptors.
Returns a list of cookies from the headers.
Unzip the body.
Close the HTTP response.
Accepts a reference to the given scope.
Encrypt a byte array.
Decrypts the given encrypted content.
Convert map to bean type.
Generate a list of objects from the given list.
Sets the value of the property.
Generate a map from the given map.
Compares two entity columns.
Sets the default header.
Sends a request to the server.
Send a request.
Adds headers to the given HTTP request.
Read cookies from the response.
Adds cookies to the request.
Send an email to the specified email.
Sets the subject subject.
Sets the sent date.
Sets the headers in the given message.
Sets the recipients of the specified email.
Sets the recipients of the email.
Adds the body data to the message body.
Sets the content of the email.
Creates a body part of an attachment.
Get the content type from the data header.
Saves a result set to the result set.
Closes all the result sets.
Closes the given query.
Closes the database.
Sets the number of fetch size.
Sets the maximum number of rows.
Executes the given update.
Executes the count of the query.
Get the generated columns.
Returns the query string.
Creates a new instance of the specified target object.
Returns a collection of objects from the given iterator.
Returns stream from iterator.
Compares two objects.
Set default wiring mode.
Prints a single message.
Returns the caller class for the given exception.
Shortcut to shorten the given class.
Excludes the types of the given types.
Serialize the given object to a JSON string.
Serialize the object to a string.
Creates a clone of the given object.
Write object to file.
Reads an object from a file.
Convert an object to a byte array.
Convert byte array to Object.
Resolves all mapped types for the given type.
Creates a table names for the given types.
Read the value from the given column.
Cache the given result set of entities.
Resolves the provider with the given name.
Applies the given table to the given table name.
Validates connection data.
Render the view.
Locates the target view for the given path.
Returns the writer for the response.
Returns the output stream for the response.
Writes content to the response.
Sets the content type.
Prints a string.
Logs the user in the request.
Returns a JSON string as a JSON string.
Logs the user via the request.
Convert url to a file.
Creates a directory.
Creates a directory.
Copies the given file to the given destination file.
Copies a directory.
Moves a file to a given destination.
Moves a directory to the given source directory.
Deletes a directory.
Read UTF8 bytes from a file.
Read chars from a file.
Writes bytes to a file.
Writes a string to a file.
Append a string to a file.
Read bytes from a file.
Write bytes to a file.
Append bytes to a file.
Copies the given file to the given destination directory.
Deletes a file.
Creates a temporary directory.
Checks if a file is binary.
Checks if the source directory exists.
Checks if the given source file exists.
Prints the usage of the given command.
Resolve action method.
Register an action on the given action.
Register a path alias.
Moves to the next iteration.
Creates a char array from the specified byte array.
Executes the proxy method.
Checks if the given string is upper case.
Returns a char sequence for the specified range.
Returns an array of URLs for a given class loader.
Sets the recipients of the email address.
Register a type for the given type.
Looks up the serializer for the given type.
Parses the input stream into a multipart request.
Get the request parameter from the request.
Get the values for a request parameter.
Get file upload request.
Returns a list of uploaded files for a request.
Initializes the filter.
Parses the given template.
Find the index of the macro.
Count the number of escapes in the given template.
Build query string.
Parse a multi-part map.
Prepare the header name for the given header name.
Extracts the content type from a string.
Convert a node to a String.
Convert a node to an inner HTML string.
Configures the servlet with the given parameters.
Resets the value of this Path.
Configures the JSON parser.
Replace the mapped type for the given property.
Parses a string into a list.
Parses a string into a map.
Resolves the value for the given value.
Skip the object.
Parse the string content.
Parse the content of the given character.
Parse a unicode.
Parse unquoted string content.
Parses a number.
Parse array content.
Create empty constructor.
Creates a simple wrapper for the given method signature.
Resolves the raw type name for the given type.
Resolves a bean reference to a bean reference.
Resolve bean references from the given parameter.
Read all bean references from the given annotation.
Build default references.
Build bean reference.
Removes all duplicate names from the bean references.
Convert a list of bean references to an array of bean references.
Converts a string value into an array of bean references.
Runs the JVM.
Finds a method for a given method name.
Finds a constructor for the given parameter types.
Resolve all interfaces of the given class.
Compare parameters.
Force an object on the specified object.
Creates a new instance of the specified class.
Get all superclasses of a given type.
Returns the class of the given instance.
Returns the jar file for the given class.
Sleep for the given number of milliseconds.
Sleep for a thread.
Wait for an object.
Creates a new ThreadFactory for the given thread.
Returns the value associated with the given supplier.
Visits a parameter.
Visit an annotation.
Visits a field instruction.
Visits a method instruction.
Visits an invoke-instant method.
Visits a jump instruction.
Visits a multi-partition.
Visits a catch block.
Convert properties to a writer.
Processes the input stream.
Moves the element to the next element.
Moves the cursor to the next line.
Join an array of arrays.
Join two arrays.
Resize the given buffer.
Append the given buffer to the given buffer.
Removes the given buffer from the given array.
Returns the index of the given char array.
Returns the index of the first occurrence of the given array.
Returns the index of the first occurrence of a byte array.
Enables or disables the XHTML tag.
Parses the given content.
Parses the lago command.
Computes the max and local stack and local variables.
End the current basic block.
Collects the prototype of an attribute.
Inject the given target object into the context.
Register a new pseudo class.
Lookup a pseudo class by name.
Executes an action request.
Get all bean property names for the given type.
Visit all properties in the source map.
Checks if the given property name matches the given property name.
Resolves the injection point for the given class.
Read the configuration parameters from the given filter.
Sends a bundle file to the output stream.
Looks up the bundle file for the given bundle id.
Looks up the gzip file in the given file.
Registers a bundle.
Creates the digest for the given source string.
Creates a bundle file.
Reset all resources.
Fixes the URLs relative to the given source URL.
Updates the given entity field with the given entity.
Create table name for entity class.
Gets the JDBC connection.
Convert the given value into singleton array.
Parses the signature for the given signature.
Resolves the given property with the given type.
Check if the property type is ignored.
Open a connection to the database.
Open a transaction.
Close the transaction.
Commits the transaction.
Rolls a transaction.
Loads properties from a file.
Creates a new Properties object from a string.
Load properties from a string.
Subtract properties from a given prefix.
Creates a new Properties object from the given classpath.
Retrieve a property from a map.
Resolve all variables in the given properties.
Resolve a property from a map.
Resolves the scope for the given type.
Returns the transaction mode for the given method.
Registers the annotations for the given class.
Reads the transaction annotation values from the given method.
Accepts a node.
Checks if the given node is a valid element.
Accepts the given node at the given index.
Unescape the given string.
Build a list of packages for the given Java version number.
Clones this node.
Detaches the parent node from the parent node.
Adds a child node to this node.
Inserts a child node at the specified index.
Inserts a new child into this node.
Inserts a new child.
Inserts a new child into this node.
Inserts a new child with the specified ref.
Remove all childs from this node.
Finds a child node by its name.
Filter all child nodes in the given predicate.
Check if this node is valid.
Initializes the child element nodes.
Initializes the sibling names.
Initialize child nodes.
Changes the owner of the given node.
Returns the previous sibling name.
Get the text content of this node.
Get the inner HTML fragment.
Visit all children of this node.
Get the CSS path.
Called when a decora tag is set.
Callback method for the id attribute.
Initialize the decoded tag.
Add proxy aspect.
Adds a root package.
Adds the root package to the given action class.
Find the root package for the given action path.
Resolves the validation message for the given request.
Removes all the names of this bean references.
Add props file name.
Executes the given target consumer.
Executes the given targets in the given scope.
Executes the given targets in the given scope.
Retrieves the values of the parameters from the parameters.
Creates the target target for the given target.
Creates the action method argument.
Called when a session has been created.
Called when a session has been destroyed.
Adds a value to the array.
Adds an array to the list.
Removes the given position from the list.
Resolves the target string to the target value.
Called when an action is found.
Convert an object to a string.
Filter the given action filter.
Returns the name of the pseudo function.
Resolve all property injection points for the given class.
Creates a socket socket socket.
Returns the number of attributes in this batch.
Gets all action results.
Check if the given character is equal.
Find the first index of the given character sequence.
Find the first index of the given character in the given array.
Set the command line arguments.
Set the value for the given key.
Runs the process.
Invokes the given listener.
Copy the given frame from the given frame.
Extract abstract type from descriptor.
Sets the input frame from the given symbols.
Returns the local local variable at the given index.
Sets the local variable.
Push the given type into the buffer.
Push the type to the given symbol.
Populates the elements from the output stack.
Pop an argument from the given descriptor.
Adds an initialized type to the given type.
Returns the initialized type of the given type.
Put abstract type.
Prune the cache.
Visit a module.
Visits the outer class.
Visits an annotation.
Gets the db session.
Closes the current thread.
Creates the execution of the action.
Invokes the action method.
Read the request body.
Calculates the index of the first page.
Calculates the index of the first page.
Match the given integer value.
Convert char array to byte array.
Find the first difference between the given index.
Resolves the node name for a given node.
Resolves the given attribute name.
Loads properties from a file.
Load props from a file.
Load props from input stream.
Load properties from a Map.
Loads properties from a given map.
Loads properties from the given classpath.
Retrieve the value for the given key.
Sets a string property.
Extracts the properties from the target map.
Extract properties from the target map.
Extract all sub props from a map.
Retrieves the inner map for the given prefix.
Adds a map to the internal map.
Resolve active profiles.
Get all the list of all profiles.
Get all profiles for a given property name.
Add property injection point.
Adds an injection point to the set of InjectionPoint.
Adds a new injection point.
Adds the init method points to the list.
Adds the method to the destroy method.
Returns the target class for the given proxy.
Inject the given wrapper into the given wrapper.
Get the target wrapper for the given wrapper class.
Find the field with the given name.
Returns the type of the property.
Returns the key type for the given field.
Returns the component type for the given field.
Returns a json result from the given object.
Returns a json result from an exception.
Resolves the HTTP method name from the given method name.
Checks if the given string matches the given pattern.
Resolves the given class name with the given strategy.
Loads a class from the cache.
Returns the resource with the given name.
Wait for the lock.
Detect annotation type.
Build an injection point from the given property value.
This method is called by the class.
Returns an array of URLs for a given class loader.
Sets the bean.
Update bean.
Load property descriptor.
Connect to the OOM.
Adds an iterator to the queue.
Print logo.
Stops the server.
Creates a socket connection.
Creates a socket for the given host and port.
Gets the default SSL socket factory.
Returns the socket factory for the given proxy.
Returns a random string with the given number of characters.
Generate a random string.
Generates a random number from the given ranges.
Creates a new instance of the given type.
Inject the given value into the target object.
Convert the given value to a target type.
Visit provider.
Creates a default type cache.
Puts a value into the map.
Gets all MethodDescriptors.
Resolve IP address from local hostname.
Extracts an IP address from a string.
Validate if the input string is valid.
Resolves the host name for a given byte array.
Download bytes from URL.
Downloads a string from a URL.
Download file.
Connects to a socket.
Connects to the specified hostname and port.
Returns the index of the primitive type.
Loads a class from the given class name.
Loads an array class by its component type.
Shuts down all registered resources.
Returns a binary search for the given array.
Returns a binary search for the given array.
Remove all rules that match the given patterns.
Includes the given patterns.
Includes bean properties.
Start the start tag.
Register a component.
Resolves the SQL type for the given column descriptor.
Pre-process the SQL.
Creates a new instance mapper for the given result set.
Find the generated key for the given type.
Populates the generated keys for the given entity.
Creates the wrapper for the given action.
Sets the bean.
Sets the query parameters.
Sets the given objects to the specified collection.
Inserts the specified chunk.
Lookup the type descriptor for the given entity.
Find the entity descriptor for the given column.
Returns the table name for the given entity.
Returns the class for the given object.
Append missing whitespace.
Returns an enumeration of file names of the file.
Includes the given page.
Returns the URL for the given request.
Returns the request URI for the given request.
Resolve parameter names for action method.
Starts the server.
Stops the server.
Filter the subject.
Method allow to filter an email message.
Method allow to filter the email addresses.
Method allow to filter a list of recipients to the specified address.
Method allow to filter a recipient by email address.
Method allow to filter a recipient by email address.
Filter the flags with the given flags.
Filter the given flags.
Method allow to filter a date with the given milliseconds.
Method allow to add a date to the email.
Method allow to filter the given size.
Filter the given email filters.
Filter the given email filters.
Filter the given email filter.
Concatenate the given search term.
Encodes a byte array.
Checks if the request is eligible for the given request.
Validates the given target object.
Validates the given target object against the given target.
Sets the given profile.
Enables or disables the given profiles.
Checks if the given profiles matches the given profiles.
Parse the request body.
Returns the milliseconds as milliseconds.
Add a new DateDate to the given Date.
Subtract a new Date from the given Date.
Sets the value at the specified integer.
Emit a comment.
Generate an error message.
Create a hash for the given password.
Encrypt the given password.
Converts a hexadecimal string into a byte array.
Resolve provider definitions for a given type.
Sets the name of the email attachment.
Set the contentId from the email attachment.
Resolves the content type for the given content type.
Parses the given signature.
Computes the number of attributes for this attribute.
Put attributes into the byte array.
Decode the given source string.
Decode the given source string.
Starts the server.
Check connection provider.
Visits the given method.
Visit the end of the end of the model.
Creates a method signature for a method.
Converts the given elements into a CSV string.
Convert a line to a String array.
Resolve the injection point for the given class.
Creates a class reader for the given advice advice.
Returns the cached class reader for the given advice.
Encrypt a string.
Decrypt the given string.
Gets a logger by name.
Sets the label.
Creates a new action request.
Creates the wrapper for the given action.
Destroy bean.
Shutdown all registered beans.
Returns an array of messages from the target folder.
Starts the clustered service.
Runs the report.
Print error message.
Print rate rate.
Maps a file to a read-only file.
Closes this archive.
Executes the work.
Returns the position of the log.
Adds a buffer to the buffer.
Append padding.
Closes the connection.
Returns the error message from the error response.
Stop replay.
Event handler for an image.
Event handler for an image.
Send status indicator.
Reads the status of a channel.
Sets the limit.
Append a direct buffer to the buffer.
Gets the value of the Control.
Map the loss of a file to a loss file.
Creates a snapshot of the current counters.
Creates the default header for the given session.
Adds a key buffer to the given key buffer.
Adds a label buffer to this weight buffer.
Connects to the server.
Try to connect to the server.
Sends a close session request.
Starts a recording request.
Stops the recording request.
Replay the buffer with the given parameters.
Stop replay.
Lists recordings for a specific record.
Lists recordings for a given URI.
Lists the given recording id.
Extend the recording request.
Gets the recording position.
Gets the stop position.
List recording subscriptions.
Checks if the given udp channel matches the local channel.
Returns the socket address for the given channel.
Returns a textual description of this interface.
Adds a destination to the network.
Inserts a packet into the buffer.
Find the control for the control.
Puts a string into a string.
Gets the channel tag.
Gets the entity tag.
Adds a session id to the channel.
Gets the tag from a string value.
Append padding for the given term.
Update the publisher limit.
Allocate unsafe buffer.
Returns the label name for the given type id.
Returns the number of available bytes from the buffer.
Resets the contents of this URI.
Validates the parameters.
Sets the prefix.
Sets the media URI.
Sets the control mode.
Sets the term length.
Sets the term offset.
Sets the socket timeout.
Close the connection.
Check if the buffer is valid.
This method receives a socket from the datagram.
Called when a retry is received.
Process the retry timeout.
Returns a string representation of the given status.
Allocate a counter with the given name.
Resets this buffer.
Validates this buffer.
Validates the given array of vectors.
Calculate the total number of non-zero-zero-window-window-window
Validates socket buffers.
Validates the given page size.
Validate session id.
Validates the unblocking timeout period.
Sets the error code.
Resets the current state.
Encodes cluster members.
Adds a list of members to the given list of members.
Close all the members of a cluster.
Checks if the cluster members are active.
Returns the quorum of the quorum.
Resets the log positions.
Checks if the given position is assigned to a cluster.
Checks if the vote is a vote on the cluster.
Checks if a cluster member is a vote on the cluster.
Determine the member from the given list of members.
Validates the given member endpoints.
Checks if the cluster members are the same.
Checks to see if a cluster member is a candidate candidate.
Checks to see if a cluster member is a quorum.
Checks if the given list of members are not duplicate.
Finds the index of a cluster member with the given id.
Removes the specified member from the given array.
Get the high ID of the given cluster members.
Map a CNC file to a new existing CNC file.
Checks if the given driver is active.
Checks if the given driver is active.
Checks if the driver is active.
Requests the driver for the given connection.
Returns the length of the specified buffer.
Writes the number of bytes to the given buffer.
Writes a type to the given buffer.
Writes the flags to the given buffer.
Puts a buffer offset into the buffer.
Writes the term id into the buffer.
Finds the counter id for the given record.
Finds the counter id for the given session id.
Returns the recording id from the given counter.
Checks if the given counter is active.
Sets the background of the application.
Reloads the contents of this file.
Find the last term.
Creates a new recovery plan for the given archive.
Creates a recovery plan for the given snapshot.
Append term.
Append snapshot.
Commits the log position.
Stores a tombstone entry.
Close the connection.
Adds a buffer to the buffer.
Unlock the given term.
Returns the ASCII channel.
Sets the channel.
Checks that the given term length is valid.
Validates the given page size.
Sets the active term count.
Computes the position of the given term.
Computes the log length of the given term.
Store default frame header.
Applies the default header to the given term buffer.
Rotate log log.
Initializes the tail of the given term.
Returns the offset of the given tail.
Returns the long tail of the given metadata buffer.
Sets the raw tail tail of the raw byte buffer.
Puts the given token buffer into the buffer.
Allocates the cluster.
Finds the counter id for the given counters.
Checks if the given counter is replay.
Gets snapshot recording id.
Convert the given flags to a character array.
Sets a single channel.
Adds a buffer to the queue.
Wrap the given buffer.
Commits the contents of the buffer.
Aborts the data from the buffer.
Launch the media driver.
Closes the thread.
Returns the position of this frame.
Allocate a counter with the given parameters.
Finds the counter id for the given counters.
Allocates a new AtomicCounter with the given name.
Closes the connection.
Dispatch recording descriptor.
Adds a new spare size.
Sets the byte at the given index.
Adds the given statistics.
Convert a list of ArrayType to a ArrayType.
Convert a StructType into a group type.
Annotate the message at the given position.
Closes the previous packed run.
Reads a struct.
Reads a list of footers from a file.
Reads the summary file from the given configuration file.
Reads a ParquetMetadata from a file.
Reads the next row group.
Reads the next row group.
Reads a dictionary from a dictionary.
Adds a new ParquetWriter to the pool.
Removes a writer from the pool.
Updates the number of memory allocations.
Registers a callable for the given call.
Starts the reader.
Starts a block.
Starts a new column.
Write a dictionary page.
Write data page.
End a block.
Copies the contents of the given offset from the given input stream.
End the stream.
Merges the given list of Metadata files into a Parquet file.
Writes the given list of metadata to the given file.
Writes the metadata file.
Merges the given file into the given file.
Reads the value from the stream.
Checks if the given schema is null.
Searches the given object from the given collection.
Convert a string to an object.
Creates a ThriftMetaData from the given metadata.
Returns a ThriftMetaData from the given thrift type.
Returns the extra meta data for this type.
Writes null values.
Write a single page.
Initializes the value from the stream.
Allocate the values for the values buffer.
Checks the enum value for an enum value.
Calculates the bit widths for the delta buffer.
Throw an exception if an exception is thrown.
Get statistics for a type.
Returns a builder for the given type.
Merges two statistics.
Gets the non-null schema.
Returns a new TaskAttemptContext with the given task id.
Invokes the given method on the given object.
Print the members of this member.
Merges the fields into a single field.
Initializes the counter with the given reporter.
Gets the filter for the given configuration.
Gets the list of footers from a file.
Generates a list of splits from the given input stream.
Writes a record to the given record.
Checks if the given descriptor is valid.
Serialize the given message.
Adds the required fields to the given schema.
Checks if the given event is set.
Read file metadata from input stream.
Close the record writer.
Sets the schema for a job.
Adds a Parquet type to a Parquet.
Asserts that the given column type is valid.
Cast the given long value to the given long.
Creates a new schema mapping from an arrow schema.
Creates a new schema mapping from Parquet schema.
Creates a new schema mapping from the given Arquet schema.
Write data page header.
Skips the next record to the next record.
Writes the object to the given key.
Removes the value from the cache.
Puts a new value into the cache.
Returns the value associated with the given key.
Writes the value to the given avro schema.
Sets the given glob.
Outputs the content of a file.
Open a stream for a given filename.
Returns an unbound filter that matches the given column path.
Convert the given StructType to a Java type.
Creates a new GroupTypeWrapper for the given repeated type.
Creates a new GroupType from a list of elements.
Gets merged key values.
Returns a ParquetSplitSplit from the given input file.
Find all the fields in the given class.
Resolves the schema access to the given schema.
Get the list of input files.
Checks if a list of Parquet files are valid.
Get input files from the given partition.
Returns an unbound filter that matches the specified page.
Creates a list consumer for a given consumer.
Initializes the path.
Merges two tuples into a tuple.
Summarize tuples into a tuple.
Reads a struct from the stream.
Read a map entry.
Write an integer value.
Read a little endian integer from the given byte buffer.
Sets the schema for the given job.
Creates a Kafka topic if necessary.
Creates a list of all stages in the pipeline.
Creates a list of interceptors for the given stage.
Create an interceptor for the given stage.
Parses the given schema.
Returns the number of days to the given time.
Get avro schema from the given record.
Updates the version of a config file.
Copies the blobstore resources to the given pipeline resources.
Resets the contents of this table.
Reports a thread for the given thread.
Register a thread-safe gauge.
Stores the configuration for the given runtime.
Check if the given web credential is logged.
Upgrade the given pipeline to the given dependencies.
Upgrade the given configuration.
Upgrade a single version of the deployment.
Upgrade service if needed.
Updates the version if needed.
Returns null if the field is null.
Checks if a class name is a system class.
Adds an element to the queue.
Adds an element to the queue.
Returns the value associated with the given key.
Adds a list of error errors if needed.
Reads a descriptor from a file.
Get all file descriptors.
Populates the default values for the given file descriptor.
Create a descriptor from a file set.
Convert the proto field to a Sdc field.
Converts the given record into a protobuf field.
Convert the proto field to protobuf.
Updates Jersey configuration bean.
Checks the connection to see if it is running.
Convert the given Kuduuuid to a Java type.
Create a field from a row.
Interceptors the given interceptors.
Returns the content of this chunk.
Adds missing configurations to the given stage.
Parses the response from the given stream.
Adds response headers to the record.
Write response headers to the response.
Writes the response header to a record.
Synchronously saves the metadata.
Configure the client.
Parses the headers from the request.
Increment the source offset.
Parses a single pagination result into a single page.
Adds headers to the response.
Resolves the request headers.
Process the response from the given batch.
Checks if a configuration property is defined in the configuration file.
Convert a DataParserException to a DataParserException.
Convert a DataGeneratorException to a DataSourceException.
Gets the credentials from the server.
Get preview information from the given stage.
Copy the given character to the buffer.
Removes all duplicate duplicates from the given packages.
Find the next main line.
Resolves the given chunk chunk.
Closes the connection.
Escapes the given string.
Returns the flow control settings.
Gets the default channel provider.
Puts an offset into the given batch.
Compile expression.
Determine the regular expression.
Load a dictionary from input stream.
Adds a dictionary to the specified reader.
Stops the aggregator.
Rolls a new aggregator over all aggregators.
Serialize an object to a JSON string.
Deserialize the given string.
Deserialize the given file.
Writes the given record to the given record.
Resolves an EL expression.
Generate an inner field from a list of fields.
Get the table name from the given record record.
Get the database name for the given metadata record.
Gets the value of the internal field.
Extracts the location from the metadata record.
Extracts the custom location from the given metadata record.
Get the Avro schema from the given metadata record record.
Get the data format for the given record record.
Returns a new FieldMetadata instance for the given Hive schema.
Validates the partition information.
Generates a string representation of a partition.
Serialize Hadoop schema to Hadoop file.
Sets the parameters for the given operation.
Get the configuration.
Parses the given string as a RFC 3d compliant format.
Formats the given template.
Creates a batch context.
Checks if the given record is valid.
Filter the list of autogated fields from the given list.
Sends an error message to the handler.
Parses a dependency name from the given jar name.
Parses the given URL.
Creates a new instance of the Couchbase connector.
Closes the cluster.
Extracts a label from a string.
Verifies that a dependency exists in the config file.
Extracts the write operation from the header.
Builds a subdoc fragment.
Returns the SQL string for the given table.
Configures the configuration for the given configuration.
Take a batch of messages from the consumer.
Commits the given offset.
This method is called when an error occurred.
Injects a stage to the given stage.
Get definitions for a stage.
Returns the definition for the given name.
Format a column name.
Formats the given value into a string.
Get information about a pipeline.
Create a new pending pipeline fragment.
Returns a list of pipelines for the specified filter.
Import a pipeline fragment into a pipeline.
Returns the path for the given template.
Returns the operation from the given record.
Returns the path for the given column.
Returns the event from the queue.
Returns the runner from the queue.
Returns a new runner with the specified time.
Returns a new runner.
Destroys the pipeline.
Validates that the container is destroyed.
Checks if a stream exists in the configuration.
Get last shard ID from the given stream.
Processes the given batch records.
Handles SQL exception.
Returns the column hash for the given record.
Compare two files.
Retrieve the pid if necessary.
Validates the fields of the given record to the given map.
Extracts a proxy user from a user.
Rolls the active stats.
Creates a snapshot of this stats.
Ensure that the given path exists.
Writes the given batch to the given batch.
Writes the given table to the given table.
Writes an iterator to the given key iterator.
Generate no more data event.
Detects a new partition information.
Updates a record for the given hdfs.
Processes the given value.
Checks if the given version is the same version.
Entry point for the Mesos cluster.
Configure Jersey client.
Resolves headers for a given record.
Returns the HTTP method for the given method expression.
Fill null types.
Returns null if the specified field is null.
Loads a schema from the registry.
Registers a schema for the given schema.
Loads a schema from the registry.
Gets the schema id from the given subject.
Loads a schema from the registry.
Writes the ID to the output stream.
Detects schema id from byte array.
Gets the default values from the given schema.
Parses all records from the given message.
Log the information about the dependencies.
Extracts bad records from the error sink.
Initializes the schema.
Get the outgoing edges for a given vertex.
Returns the set of outgoing edges for the given vertex.
Serialize an offset map.
Deserialize the offset map.
Executes a report.
Retrieve a report.
Checks if the sdc point file exists.
Writes offsets to the main offset file.
Deletes the blob from the storage.
Handles an error.
Handles the error from the given blob.
Returns the reader for the live file.
Releases the reader.
Sets the dpm url.
Adds a default header.
Parses the given string.
Escapes a string.
Gets the client.
Initializes the connection.
Get the metadata for a given table.
Creates a new EventBuilder.
Build the schema from the given map.
Converts the given code to an Oracle OS code.
Adds jars to the configuration file.
Checks the field order by name.
Check if the given field expressions are valid.
Returns the offset for the given file offset.
Executes the command line arguments.
Get the parallelism for this stage.
Executes a query on the specified query.
Get the table description.
Validates that the given table is valid.
Returns the type for the given field.
Checks if the field is null.
Get the schema for a table.
Get the properties for a table.
Returns the class for the given type name.
Initialize Aerospike network.
Returns the topic.
Returns an input stream for this file.
Returns the output stream for this file.
Returns true if the file exists.
Parse fs permission.
Validates all services available in the registry.
Creates a simple aggregator for the given class.
Gets the aggregator unit.
Creates an aggregator for the given class.
Create a GroupByAggregator.
Starts the data provider.
Stops the aggregator.
Rolls the data from the aggregator.
Release the cached login.
Converts the given glob to a regex.
Lists objects from Amazon S3 bucket.
Stop the snapshot.
Produces the number of idle runners for the given idle time.
Creates a snapshot of a pipeline.
Convert the given record to a BoundStatement.
Sets the value of this configuration.
Generate a lookup key for the given record.
Reads a line from the input stream.
Roll a new usage timer.
Enables the dpm installation.
Disable dpmpm.
Normalize dpm url.
Retrieve a user token from a URL.
Log out the specified user.
Update the token file.
Update dpm properties.
Returns the schema for the given field.
Creates a complex schema for the given field.
Returns the precision for the given field.
Returns the default value for the given schema.
Initializes the gauge if needed.
Compare two files.
Returns the index of the given group.
Returns a list of all the names of the cluster.
Checks if the given string is an escaped character.
Checks if the given string is a slash character.
Checks if a string is inside a char class.
Count the number of openpals in a string.
Extract group info from a named pattern.
Replaces all occurrences of a regular expression in a regular expression.
Retrieve the response.
Refreshes the schema for the given table.
Returns true if the transaction is expired.
Returns the offset of the file.
Reads the data from the stream.
Convert string to integer.
Parses a single part of the given field.
Parse the values from the given byte array.
Lookup the primary key table.
Creates custom field mappings.
Returns the SQL string for the given field type.
Returns the table name.
Sets primary key.
Handles SQL exception.
Processes a single stage.
Prepares a batch context.
Finishes the given batch context.
Flatten the given field into a map.
Creates a detached stage runtime instance.
Executes the given record.
Get the parameters for the given record.
Returns the condition for a partition.
Validates the given offset.
Returns the list of bundle definitions for the given generators.
Get the array of non-empty arguments.
Returns the given Operation for the given Operation.
Convert bytes to human readable format.
Scans a live file.
Returns the number of pending files in the given live file.
Checks if the given name is whitelist.
Checks if the given versions are equal.
Entry point for the Spark SDK.
Propagate runtime configuration to the runtime configuration.
Validates the report description.
Updates the cache configuration.
Extract named groups from raw data.
Commits a consumer to the consumer.
Creates an instance of the SdcClient.
Sets the fields in the record map.
Retrieves all pipelines from the pipeline.
Returns a remote data collector from the given future.
Creates a gauge with the given metrics.
Extract the parameters from the given record.
Generate header attributes.
Validates the given record.
Deletes the old temp file.
Returns an input stream for the given record.
Returns a file reader for a given input stream.
Writes a Parquet file.
Check if the input field is encrypted.
Check if input field is encrypt.
Check if the input field is valid.
Validates the input field.
Prepare the encrypt field.
Use this method to create a new pattern.
Append replacement string.
Returns a map containing all the names of the given pattern.
Replace all properties in the given string.
Get the global variable from the given variable.
Create start event record.
Create a stop event record.
Fixes the offset of the given offset.
Extract the runtime value from the given field.
Executes a query add-partition to the table.
Method to alter the table table.
Describe the given database.
Executes the given query.
Executes the given query.
Executes a batch.
Iterate through the pipeline.
Get offset commit commit.
Checks if the pipeline error is stopped.
Accepts a consumer.
Returns the row id for the given record.
Extract the value from the field path.
Sets the fragment in the record.
Sets the document in a record.
Sets the ndarray value for the specified record.
Handles the entire data format.
Checks if the given gt transaction is incomplete.
Creates a new instance of the given classloader with the given exception.
Log out the user.
Clears all exceptions from the given configuration.
Replace variables in the given path.
Ensure that the given path is valid.
Entry point for the emitter.
Returns the path for the given date.
Renames the given path to the given file.
Determine if the given record is rollback.
Checks if the given pattern is matching the given pattern.
Returns a map of offsets from the file.
Gets the remaining wait time.
Gets the offsets of the file.
Create a new instance of the stage library.
Create a new instance of the stage library.
Extracts metric value from metric.
Find the index of the header.
Get the body size of this request.
Saves a byte buffer to a temp file.
Create a new SSL certificate from the given key store.
Returns the mime type for a file.
Handles the HTTP request.
Stops the server.
Adds the mappings to the map.
Send body to the given output stream.
Creates a new response with the given data.
Use this method to determine whether the response should be accepted.
Sets a cookie.
Unload queue from the queue.
Decode the given base64 string.
Encodes the cookie into a Base64 string.
Sets the table name.
Returns the name of the specified principal.
Inserts a new session repository.
Resolves the principal name for the given session.
Loads a session from the given id.
Extract the mail name from the given model node.
Get canonical parameter types.
Register an interposed synchronization.
This method is called when the task is completed.
Get the current transaction.
Deploys the BeanFactory.
Checks if the cache region name is cached.
Gets server config dependencies.
Decrement read lock count.
Increments read lock count.
Adds the given service to the given class.
Processes the restore interval.
Deploys the search dependencies.
Make the top-level bdarray of the given modules.
Creates a JSE-SE-SE-WS-processer.
Sets the config name and file.
Extract security meta data from security constraints.
Returns the list of servlet mappings for the given pojo.
Returns the servlet mappings for the given pojo endpoint.
Resolves the view for the view.
Returns the list of available connectors for the given operation.
Parse the core environment element.
Parses the process ID.
Returns the path for the given operation.
Sets the path for the given operation.
Returns the value of the given operation.
Returns whether the given operation is included in the given model.
Create a composite composite operation.
Create a AddOperation from the given path.
Creates a new add operation.
Create a read attribute operation.
Create write attribute.
Create undefields the given attribute.
Returns the value associated with this context.
Adds a new URLFactory to the cache.
Removes an object from the cache.
Loads validation providers.
Modify the deployment context.
Configures the endpoints for the deployment.
Modifies the context root.
Get the transport class name.
Sets the runasas as the identity as the given principal.
Populates the runas as a single run.
Processes the servlet.
Inject the given object into this object.
Checks if the given class matches the given parameter type.
Finds the method with the given name and property name.
Finds the field with the given name and its type.
Derives the info about the given request.
Runs a standalone report.
Collect the report.
Registers a resource adapter deployment.
Unregisters a resource adapter.
Register all chained transformers.
Writes the parameters to the output stream.
Read an exception from the input stream.
Returns the lock owner for the given transaction registry.
Release lock.
Adds a log file.
Adds cdiagram to the given deployment.
Returns the component view.
Invokes the given endpoint.
Finds the component method for the given component.
Checks if the given view method matches the given view method.
Get the EJB security meta data from the endpoint.
Returns the domain domain for the new security domain.
Ensure that the security domain has the same security domain.
Sets the id of the given identifier.
Returns the absolute name of the entry.
Creates a JNDI name from the given string.
Deploys the javacamar resources.
Handles the request.
Checks if the transaction is in the transaction.
Returns the synchronized synchronization registry.
Returns the cached connection factory.
Returns the last component of the given name.
Checks if the given name is empty.
Thrown when a name is not found.
Creates a naming exception for the specified detail message.
Creates a naming exception for the specified detail message.
Creates a UnsafeException for the given object.
Create a naming enumeration for a given collection.
Binding object with given name.
Get the active MQQ.
Creates a new component instance.
Returns the virtual file for the webapp.
Resolve runtime name.
Creates an XML listener for the specified resource definition.
Get a primitive type analysis.
Shuts down the pool.
Returns a list of URLs for a given URL.
Gets the servlet.
Gets the servlet mappings.
Gets security constraints.
Gets login config.
Gets the context params.
Gets web resource collections.
Returns the initParams for the given servlet.
Creates a new SecurityConstraint.
Creates a new web resource collection.
Creates a new servlet.
New servlet mapping.
New auth constraint.
Creates a new UserDataDataMetaData.
Factory method for new ParameterMetaData.
Factory method for creating new ParameterMetaData.
Registers the session interceptors for the given component.
Stops the thread.
Returns the JNDI name for the given model.
Resolves the given attribute on the given model.
Returns the type of the given URL.
Checks if a pooled connection pool is pooled.
Determine if a pooled connection pool is connected.
Gets the active MQMQ server.
Returns the default persistence unit name for the given JVM.
Starts the activity.
Stops the activity.
Suspends the active transaction.
Resume this deployment context.
Called when the transaction is complete.
Called when a transaction has been created.
Starts the service.
Stop the controller.
Returns the service name for the capability.
Creates a list of resource roots for deployment resources.
Returns all the classes loaded in the deployment unit.
Returns true if the persistence unit file is transient.
Checks if the given persistence unit is allowed for the given persistence unit.
Allow default data source for default data source.
Checks if the given property types are compatible with the same type.
Gets the orb.
Initializes the given application object.
Initializes the method handles.
Set the active naming store.
Validates the default values.
Checks the parameter type for the given parameter.
Looks up the default value for the given annotation.
Validate base type method.
Returns an array of deferred entities.
Returns a string representation of a transaction.
Adds cache dependencies to the cache.
Extract dialects from database.
Investigates the database connection.
Identifies the SQL for the given dialect.
Checks if the database is available.
Parses the given date string as a date string.
Sets node name.
Marks the given deployment unit as a tag.
Read parameters from input stream.
Writes the result to the output stream.
Writes an exception to the given output stream.
Lookup a new instance of the given class.
Starts the creation of the SFS bean.
Ends the creation of SFS.
Retrieves the current SFS server stack.
Push the given entity managers to the current transaction manager.
Pop the current call manager from the stack.
Retrieves the current call manager from the current stack trace.
Deploys the JVM dependencies.
Returns the id of the given class.
Insert a primitive type.
Convert a Java name to an ID.
Checks if the given string is a valid identifier.
Returns the signature for a given class.
Returns the signature of the given method.
Convert a primitive type to a primitive type.
Returns the batch permission for the given name.
Returns the transaction manager for the given context.
Puts a value into the cache.
Convert security role to a security role.
Returns the most recent timestamp version for the given transaction.
Load timers from a file.
Returns the directory for the given timer id.
Adds a new listener to the specified scope.
Removes a naming listener.
Fire an event to the given name.
Returns a consumer that will be closed.
Adds a private credential.
Retrieves an object from the given context.
Add tx-manager for view.
Subtracts the given string from the given string builder.
Creates a transport configuration.
Adds a string to the ear-qualified resource name.
Get the root deployment unit.
Get service name.
Creates a view configuration.
Creates the injection source for the given service name.
Returns the view interceptors for the given method.
Adds a view to the view.
Adds an interceptor to the given method.
Returns the list of client interceptors.
Adds an interceptor to the cache.
Adds an interceptor to the given method.
Puts the private data from the given type.
Throw an exception if an exception occurred.
Gets the JAX-WS endpoint for the given deployment.
Returns a list of JAX-WS JAX-WS JAX-WS JAX
Returns the name of the given servlet.
Returns the endpoint class name for the given servlet.
Find the servlet metadata for a given servlet.
Gets required attachment from deployment unit.
Get optional attachment from deployment unit.
Returns the javadoc associated with the given deployment unit.
Returns the JBoss component with the given name.
Returns the webservice metadata for the given class.
Returns the context root for the deployment.
Returns the class for the given name.
Returns the resource with the given name.
Returns a collection of resources with the given name.
List all the servlet resources.
Pop a close call.
Returns the entity manager with the given name.
Registers a cleanup listener.
Deploys a deployment.
Checks if the given class is public.
Creates a new HTTP endpoint.
Creates a new deployment deployment.
Checks if the deployment unit is a JAR deployment unit.
Sets the next timeout.
Sets the timer state.
Merges the given deployments from the given deployments.
Deploys the module.
Adds remote transactions to the remote peer.
Gets all container interceptors.
Checks if the given method is a specific method.
Checks if the given element is present in the given set of elements.
Returns the type of the given class.
Returns the component type of the given type.
Parses a string representation of a given name.
Converts a string into a string representation of the components.
Parses the given string into a Java component.
Deactivates the resource.
Translates a POJO to a POJO.
Authenticate the given username and password.
Checks if the given class is compatible with the given type.
Lookup a reference from the given name.
Unbind JNDI.
Creates a new bean instance.
Configures the bean with the given properties.
Dispatch a joinpoint to the given bean.
Returns the current namespace selector.
Converts a service name into a bean name.
Converts the given class to an InstanceName.
Returns the class with the given name.
Processes the metadata.
Post process parses the persistence steps.
Validates the given string.
Creates a new WAR application.
Create the web application descriptor.
Returns the authentication method for the given deployment.
Deploys the service definition.
Handles the state of the given component.
Create a stub for the given class.
Extracts the anonymous object id from the given object.
Returns a copy of the persistence providers.
Clear all cached providers for the given deployments.
Adds a PersistenceProvider for the given deployment.
Find the class loader for the given class loader.
Deploys the deployment.
Adds the given unit to the deployment list.
Sets annotation index.
Returns the persistence provider adaptor for the given persistence provider.
Saves the persistence provider for the given deployment unit.
Looks up persistence provider for the given persistence unit.
Returns all annotated classes for the given set of annotations.
Creates an EJB archive from the given deployment deployment.
Build the enterprise bean metadata.
refresh participant.
Returns the analysis analysis for the given class.
Lookup the container analysis.
Creates a new WorkTask instance.
Get the ID of the module.
Convert an integer to a hex string.
Convert long to hex string.
Checks if the given method is an accessor.
Checks if a method is a mutator.
Checks if the given method is non-empty.
Reads the name of an attribute.
Returns the name of the given string.
Fix overloaded method names.
Fixes the case names of the analysis.
Escapes the given string.
Parses the given XML file.
Parse default context propagation.
Processes the attributes of the given reader.
Loads providers from the given module name.
Create add step handler.
Deploys the deployment phase.
Writes an attribute to the given XML node.
Creates a remote session.
Returns the destination name from the given address.
Register a set of endpoint handlers.
Returns the set of job names for the given job.
Initializes the class loader.
Returns the URI of the request.
Creates a new instance of the given URL.
Lookup a Java type by name.
Bind the given object to the given name.
Unbinds the given path.
Returns a list of bindings for the given name.
Calls the given naming context.
Destroy a subcontext.
Bind a new context to the given path.
Create a new context for the given name.
Lookup a link.
Add a property to the environment.
Removes the property from the environment.
Adds the transformations to the model.
Remove a security domain from the security domain.
Lookup JVM JVM.
Creates a modular reference.
Creates a modular reference to the specified class.
Creates a modular reference.
Returns the ID of the given type.
Wait for the given service controller.
Compute the masked password.
Initialize the security vault.
Starts the vault session.
Displays the value of an attribute on the vault.
Displays the vault configuration.
Returns the vault configuration.
Checks if the service is not null.
Returns the deployment service name for the activation.
Inserts a string value into the given CORBA Any object.
Checks if the given permission has the given permission.
Returns the action string.
Returns the name of the log.
Send a new state change notification.
Returns the value associated with the given type.
Get the context service name.
Returns all the interceptors for this class.
Adds an interceptor to the method.
Adds a dependency to the service.
Returns the list of components of the given component.
Gets the interceptors for the given method.
Adds a timeout to the timeout.
Adds an interceptor to the specified interceptor.
Adds an interceptor to the post-constructors.
Adds a preDestroyException to the preDestroyInterruptor.
Adds an interceptor to the pre-processors.
Adds an interceptor to the post.
Sets the service create service.
Removes JNDI bindings from the given model.
Accepts a JAX-B connection.
Returns the service name for the given component.
Returns the service name for the given module.
Returns the bindInfo for the given environment entry.
Returns the bindInfo for the given JNDI.
Returns a cache of all the domains in the cache.
Returns an array of ValueMembers of this node.
Returns an array of ValueMembers for this type.
Create the root subsystem root.
Parse the given XML element.
Starts the service.
Returns the job name for the given deployment.
Adds a component to the component.
Adds a message destination to the container.
Returns all components for the given view type.
Returns all components of the given component.
Returns all components of the given component.
Resolve the message destination for the given message.
Build transformers.
Try to reject an attribute with the given default value.
Populates the Identity from the context cache.
Loads the IDs from the module.
Checks the validity of all versions.
Computes the slot for the given JSF version.
Returns the constant type code for the given class.
Adds a type code to the given class.
Ensure that the package exists in the package.
Add interfaces to a container.
Add abstract base base list of abstract values.
Adds a class.
Adds an interface definition to the interface.
Adds a value definition to the given value.
Adds an exception to an exception.
Determine the entity type for the given annotation.
Starts the service registry.
Destroy the root context.
Check if the method is allowed.
Check transaction sync.
Get all component classes for the given deployment.
Returns a map of timers that have been completed.
Get the extra parameters from the given parameters.
Extract the parameters from the given configuration.
Convert the given type to a Class.
Converts the given object to a Java object.
Get the types of values in the array.
Check whether the given types are valid.
Returns the next element from the queue.
Gets the next batch.
Map the binding to a Java binding.
This method is called when a health check is registered.
Close the health check.
Returns the object for the given locator.
Converts the given value into an EnumNode.
Skips an input stream.
Checks if the element is not null.
Adds a component to the component.
Adds the given class loader to the given classloader.
Unbind the given name.
Lookup the given name.
Returns a list of names of the given name.
Lists bindings for a given name.
Adds a factory to the context.
Save the context to the given context.
Creates a file system subsystem.
Create the welcome content handler for the deployment.
Retrieve the object from the pool.
Calculate the operation map.
Collects the MetricMetric metrics for a given resource.
Prepare the deployment unit.
Deploys a service target.
Publish the given deployment unit.
Stops the web application.
Starts the thread.
Registers an endpoint for the given endpoint class.
Retry the retry timeout.
This method is called after the timer processing.
Get all declared methods for the given class.
Get all declared fields.
Get the constructor for the given class.
Looks up a method by its name.
Adds an active MQMS message to the migration.
Check if the parameter is allowed by the resource type.
Method for generic transport.
Cancel the current thread.
Runs the thread if it is not cancelled.
Set the type of this schema.
Checks if the given function is executed.
Find all classes in the given directory.
Get the class for the given interface.
Returns the generic type of the given field.
Evaluate the left of this record.
Derives the specified field type from the specified field.
Updates the given record.
Find the record in the cache.
Get the minimal set of nodes for a sharded query.
Moves all elements in the given list.
Adds the order to the given query.
Extract sub-queries from the given query.
Checks if the given ID is from a cluster.
Checks if the given query is sorted.
Checks if the given class is a diamond class hierarchy.
Returns true if the query should be ordered.
Checks if the given index has multiple indexes.
Find the best index for the given block.
Returns a list of common factors for the given index.
Creates a new instance of the given strategy.
Check if a resource is allowed.
Check if a rule is defined.
Gets the server status.
Initialize the system database.
Load local databases.
This method is called when a member is removed from the cluster.
Obtains a new lock manager.
Assigns the lock manager from the cluster.
Commits the transaction.
Roll a rollback rollback.
Updates the identity after a record commit.
Update the record cache.
Prepares a file if it exists.
Moves the given source file to the given path.
Gets the list of disjoints from this node.
Executes the local node locally.
Append the given character.
Checks if the connection is connected.
Merges two-byte arrays from the given buffers.
Splits a short value into a byte array.
Executes the given field.
Puts a single value into the map.
Removes the value from the given key.
Executes the given arguments.
Execute the first action.
Creates a new instance.
Checks if the region is valid.
Replace the content of the given file.
Executes the specified command.
End the request.
Adds the host to the host.
Send a request to a network.
Returns the object associated with this instance.
Get a connection.
Kills the specified connection.
Interrupts a remote channel.
Disconnects from the remote channel.
Push the client configuration to the server.
Swap the specified value to the specified value.
Closes all locks.
Synchronize the database schema.
Update the Metric metadata.
Returns the last record.
Reads the next character from the stream.
Executes this query.
Executes the async replication error.
Register a compression method.
Get the number of open files.
Checks if the given target expression is mapped to the given target.
Move this buffer to the specified position.
Fill a byte array with the specified length.
Executes the return call.
Executes the execution.
Evaluate this record.
Executes the given arguments.
Loads the configuration from the given configuration.
Parse the request.
Executes the request.
Updates the schedule starting from the given path.
Adds an index to the collection.
Split this aggregation into the given aggregation.
Convert a document to a Java object.
Returns the collate field from the given document.
Gets the value of the string.
Advances the probe.
Executes the given command.
Build json from file.
Check the password with the given hash.
Create a hash from the input stream.
Checks if the given algorithm is supported by the algorithm.
Creates an instance of the given index.
Returns an iterable over all vertices.
Returns an iterable over the graph.
Returns the partition key.
Returns the distributed timeout.
Returns the features of this feature.
Checks if changes in the given page.
Parse timeout.
Parse lock strategy.
Create a cluster.
Free cluster.
Initializes the internal state.
Shutdown the database.
Returns a singleton instance of the given entity.
Grant access to a resource.
Revoke the given resource.
Check if this record is valid.
Resets the bitmap.
Returns the index of the given item in the given item.
Spread the given integer.
Create a new index.
Removes all the indexes from the database.
Returns the index of the primary key.
Returns the linked class.
Converts the document into a stream.
Removes the given listener from the list.
Register a new database.
timeout for a request.
Create a copy of this database.
Attempts to merge the given value into this tree.
Replace the object with the given object.
Transforms the result into a Map.
Executes a cluster.
Close all resources.
This method is called when a storage is registered.
Returns a set of names of all function names.
Returns a set of all the names of all registered types.
Returns a set of all the command names of this class.
Extract the field size from the current position.
Write the status code.
Write headers.
Write the records to the output stream.
Write the record to the output stream.
Send a response to the response.
Send a stream to the output stream.
Open a database connection.
Close the connection.
Listen for a collection of objects.
Completes the component operation.
Pushes all registered components to the given component.
Pushes the write cache to the cache.
Push storage counters.
Pushes the given data to the given snapshot.
Push the component counters for the given component.
Stop the write cache timer.
Stop fuzzy checkpoint timer.
Stop the full checkpoint timer.
Stop the commit timer.
Stop the wal record.
Stop the journal.
Parse the given SQL statement.
Initializes the receive messages.
Initialize disconnects server.
Removes the record from the graph.
Sets the property on this object.
Removes the property from this object.
Check if a class exists in the schema.
Wrap the given cursor into an object.
Define a new vertex attribute strategy.
Define an edge attribute strategy.
Get all records for the specified class.
Get all records for the cluster IDs.
Add an index entry.
Merges the given set to the target set.
Check if this record is a valid record.
Check if the given function is executed.
Prepare the keys for the given index.
Writes a page to the buffer.
Reads a page from the cache.
Truncate the specified page.
Open the file.
Checks if the cluster is active.
Gets new instance strategy.
Check if the configuration is synchronous mode.
Checks if the configuration is read.
Returns a map of all servers in the cluster.
Get all the servers in the cluster.
Checks if the given server is contained in the cluster.
Checks if the given server is contained in the cluster.
Returns the list of master servers.
Gets all configured servers.
Get all clusters on the specified server.
Get all clusters owned by this server.
Get the owner of the cluster.
Get the owner of this cluster.
Get the list of configured servers.
Get all registered servers.
Get all datacenter names for the Datacenter.
Get the write quorum.
Checks if the cluster is sharded.
Get list of servers for a given datenter.
Get the DataCenter for the given server.
Get the global read quorum for this cluster.
Returns the write quorum for the given server.
Get the cluster configuration.
Gets the data point.
Clear the initialization of the graph.
Returns an index for the given index.
Drop the given index.
Adds a new vertex to the graph.
Adds an edge to the graph.
Retrieves the vertex from the given id.
Get all vertices for the given class.
Returns an iterable over the specified class.
Returns an edge from the given id.
Reset the database.
Shutdown the database.
Returns the type of the graph.
Get the type of a specific type.
Create a new vertex type.
Drop a vertex type.
Get the type of the given type.
Create an edge type.
Returns the element associated with the specified id.
Drop the index for the given element.
Removes the background exception listener from the background thread.
Fires a background event on the background thread.
Stop monitoring.
Register a MBeanServer.
Unregister a MBean.
Fetches the cache for write cache.
Fetches the system counters from the system.
Fetches the component counters for the given component.
Returns the property value for the specified name.
Attaches the given object to the proxy.
Get the version of the object.
Execute the SQL command.
Set the dirty state of this object.
Unset the dirty state of this object.
Returns a set of all the types in the system.
Returns all the names of all available engines.
Returns a list of missing nodes.
Returns a list of all conflicts in the response groups.
Get the best response group.
Computes the quorum response.
Returns a list of received responses.
Retrieve an object from the cache.
Checks if the given function is indexed by the given target.
Get the library.
Release database engine.
Gets the next position in the cache.
Update the size of the bag.
Returns the value at the specified index.
Checks if the given field is filtered by the given index.
Returns the index of the given string inside the given string.
Jump all whitespace spaces.
Jump to the specified text.
Sets the fetch plan.
Enqueue a record.
Cancel the record.
Adds a cluster to the queue.
Returns the dependencies for the given pattern.
Create a new POJO.
Register all entity classes in the given collection.
Registers the given class.
Set the class handler for this entity.
Acquires a new connection.
Get number of available connections for a given user.
Acquires a connection.
Executes a cluster.
Lookup an iterator with the specified class loader.
Check if the cache size is valid.
Creates a new vertex from a JSON string.
Create an edge from a JSON representation of a given json.
Generates a Graph from an Element.
Creates a GraphNode from the given Element.
Executes the import.
Returns the status of this job.
Returns a map containing all the active data centers for the server.
Splits the cipher transform.
Creates an instance from the given keystore configuration.
Parses the given file from the given path.
Creates an object from an input stream.
Encrypt the given string using the given transform.
Save this stream to the given output stream.
Save the given keystore to the given output stream.
Set the child context.
Adds an object to the unique result.
Convert the value to a map.
Authenticate the given username and password.
Get the value from the map.
Returns the record associated with this record.
Read the current record.
Gets the transaction.
Gets the graph.
Setup the pool to create a new pool.
Returns the object associated with the specified name.
Stops the transaction.
Returns the next token.
Returns the token at the given index.
This method returns all vertices in the graph.
Remove all edges from the graph.
Adds a new edge to the graph.
Adds an edge to the graph.
Get the name of the connection class.
Get connection.
Processes a list of IDs from the document.
Returns a map of all console methods.
Executes the given task.
Get the number of nodes in the given collection.
Wait for the next retry.
Get the argument at the given position.
Check if the request parameters have a request.
Connects to the remote server.
Lists all databases.
Get the server info.
Check if a database exists.
Drops a database.
Takes the given storage for the given storage type.
Release a database connection.
Get the cluster cluster.
Gets the graph.
Parse retry.
Save this record to the database.
Delete this record.
Returns the header for the given database.
Authenticate the given username and password.
Check if a resource is authorized.
Starts the server.
Adjusts the line column.
Sets the bucket pointer to the bucket.
Gets bucket offset.
End the operation.
Acquires an exclusive lock.
Set the maximum amount of memory pages.
Listen for the given host and port.
Read parameters from server.
Shutdown the log.
Adds an item to the cache.
Removes the entry from the cache.
Acquires an entry.
Returns the value associated with the given key.
Removes all data from the cache.
Closes the given key.
Empty read buffers.
Adds a task to the pool.
This method is called when the read buffer has been read.
Puts an entry into the buffer at the specified index.
Finds the closest power of two given value.
Handles an event.
Convert the given key to a value.
Convert all enum values to the enum.
Get the serializer for the given type.
Initialize the shutdown queue.
Returns the engine associated with the given name.
Adds a reader to the reader.
Authenticate the given authentication token.
Creates the metadata for the database.
Attempt to acquire a read lock.
Get the vertex from the current direction.
Returns the id of the element.
Sets the value of the property.
Removes the property from the graph.
Clears the contents of the cache.
Deletes the contents of the file.
Stops the database.
Adds a vertex to the graph.
Parse a strategy.
Extracts the positions from the embedded collection.
Executes the given command.
Fixes the given field value.
Fill this record with the specified id.
Set the version.
Get the type of a record.
Initializes the database instance.
Returns the stack trace for the given exception.
Convert the link to a record.
Register an instance of the specified server.
Create server user.
Analyze the given condition.
Create an indexed property.
Attaches the given object to this proxy.
Returns the class for the given index.
Returns the next value for the given value.
Truncate all classes in the database.
Adds a base class to this class.
Add polymorphic cluster id.
Convert this link to a stream.
Release the specified pointer.
Checks all memory leaks.
Removes all pointers from the pool.
Convert a byte array to an integer.
Called when a remote server is open.
Installs the specified class.
Dumps all the servers in the cluster.
Returns the index of the given object.
Returns the index of the given object in the given array.
This method returns all the active clusters.
Processes the specified record.
Returns the id of the given query.
Reports the tip of a single tip.
Parses a fetch plan.
Parses a string.
Optimize the given schema.
Get the status of this batch.
Executes the command.
Handles JVM errors.
Validates an index value.
Rolls a single transaction.
Executes the specified command.
Registers a cluster.
Set the value of the specified property.
Executes the given class.
Executes the database.
Deletes this object from the specified record.
Callback method for hooks.
Delete this record from the specified record.
Count the number of views in the database.
Count the number of classes in this schema.
Activates the current thread.
Register encryption encryption.
Returns the relative index of the given position.
Parses the next word.
Parses the next word.
Parses the next word.
Parses an optional keyword.
Check if the given character is valid.
Executes the given schema.
Removes configuration files from the configuration file.
Returns the offset as byte array.
Extract the string from the token.
Acquires an access token.
Copy the access token.
Returns true if there are no more characters.
Reads a line from a byte array.
Skip the number of bytes from the stream.
Ensure that the given array is valid.
Swaps the elements of the elements of the given array.
Hashes the given integer.
Hashes the given long.
Writes the given byte buffer to the output stream.
Truncate the given size.
Sets the position of this file.
Refresh the refresh metrics.
Waits for all pending tasks.
Find all matching matches.
Find all the compaction targets that are compaction.
Removes all snapshots from the cache.
Returns the hash code for the given field.
Removes the referenced closure from the given state.
This method is called when a peer is complete.
Called when a cycle is complete.
Read the header tags from the input stream.
Extract primary key from object.
Clear all non-null threads.
Read all ordinals from the input stream.
Returns the number of bits in this set.
Returns the string value for the given row.
Copies data from the given byte array to the given byte array.
Copies the data from the given array to the given byte array.
Checks if the byte array is equal to the given length.
Orders the given byte array with the given length.
Orders the data from the given array.
Reads a length from the input stream.
Writes the data to the given output stream.
Ensure that the given segment is available.
Returns the position of the given field.
Calculates the total sum of the elements in the given list.
Checks if a data set contains all collections in the data set.
Generate files for the given directory.
Generate the files for the given directory.
Checks if the given key matches the specified keys.
Returns the record key for the specified record.
Create a field path for the given type.
Create a field path for a hash index.
Puts an object into the cache.
Initializes the field.
Checks if the given key exists in the cache.
Adds a field to the specified type.
Returns the dependencies ordered by the given collection.
Initialize the next major version.
Returns the value at the given index.
Find all records matching the given field name.
Find the matching records for the given type.
Sets the elements of the elements to be matched.
Sets the elements of the elements in the given path.
Restores the state from the last state file.
Runs the cycle.
Adds the primary key to the given primary key.
Excludes references from this object.
Writes the given blob header.
Calculates the total statistics for the given type.
Writes the data to the given byte buffer.
Writes a fixed 32-bit integer to the given byte buffer.
Writes a fixed long long length.
Returns the given ordinal value to the pool.
Sort the elements in this order.
Computes the hash of the given object.
Hashes the given field.
Resize the storage.
Find the free ordinal for the given preference.
Prepare the pointer for the pointer.
Compare the given key with the given key.
Grows the key array.
Rehashes the data in the cache.
Create an empty key array.
Checks if the given value is equal to the given value.
Find the matching type for the given key.
Swap the read state of the current state.
Calculates the hash table size.
Run the compaction.
Writes a snapshot of this type.
Write the delta to the output stream.
Adds a set of schema to the given set.
Normalize the given field path to a parameter name.
Rewrite hash index.
Finds the matches the given query.
Triggers the async refresh.
Trigger the refresh refresh.
Adds a type diff to the given type.
Writes an integer to the output stream.
Writes a 32-bit integer to the given byte array.
Read a 32-bit integer from the input stream.
Read a 32-bit integer from the input stream.
Adds a view to the specified index.
Refresh the size of the view.
Updates the UI component.
Handles the pull event.
Adds a rule to the rule.
Adds a rule to the rule.
Creates a new rule builder for the given rule type.
Creates a new rule builder.
Adds a rule to the rule type.
Sets a new rule type.
Adds a new rule to the rule.
Returns a new rule builder with the specified name.
Appends a rule to the given action.
Returns a new instance of the given rule.
Returns the field from the given annotation.
Returns the method annotated with the given annotation.
Gets the annotation from the given class.
Registers a rule.
Updates the audit status.
Gets the audit status map.
Returns a new RuleBook with the given result type.
Adds an action to the rule.
Adds an action to the rule.
Reset the value to the default value.
Adds a rule to a rule.
Returns the list of pojo rules for the given package.
Reads a line from a table.
Convert a list of services to an array of services.
Extracts the ports from the build configuration.
Extract the list of ports from the configuration file.
Parse the port mapping.
Adds a port to the list.
Moves the given port from the list of ports.
Adds the service parts to the service.
Append an image resource to the target resource.
Checks if the given port is compatible with the given port.
Returns the port to the given service name.
Gets service host and port.
Puts a value into the map.
Merges the given map into the given map.
Merges two maps.
Put all values in the map.
Wait for a pod.
Validates the given string.
Converts an entity into a List.
Returns the resource version.
Checks if a pod is ready.
Get the current context.
Checks if the given list is a route.
Checks if the given path is available.
Reads a fragment from a file.
Convert the given map to a list of environment variables.
Merges two resources.
Merges the given map with empty strings.
Checks if a pod is a custom custom pod.
Reads the configuration from the given file.
Adds a port to the map.
Gets docker config string.
Returns the configuration for the given system.
Returns the secret configuration for the given id.
Downloads a file from the given url.
Compare two versions.
Blend profile with given configuration.
Lookup a profile from the given directory.
Reads all profiles from the given classpath.
Reads all profiles from the given classpath.
Finds the profile yaml file.
Get a list of all profile files in the profile directory.
Creates a list of profiles from the input stream.
Returns the image pull policy.
Is openShift mode.
Gets the replica count.
Returns the first child element with the given name.
Installs the given template.
Removes a tag by its name.
Applies the given entity to the cache.
Applies the given project to the given project.
Applies the given entity to the given entity.
Gets namespace.
This method is called when an exception occurred.
Creates a list of Kubernetes.
Enables the list of Kubernetes.
Returns the environment variable for the given class.
Returns the duration of the given duration.
Parses a duration from a string.
Scans all files in the given project.
Disables the open shift features.
Checks if the given service is in the service list.
Parses the given input stream into a map.
Returns the default icon for the default icon.
Copies the app config files from the given app directory.
Load properties from a given URL.
Gets the spring bootstrap version.
Enumerates the given platform using the given platform mode.
Returns the raw config map.
Build a flattened map from the given source.
Gets the singleton template for the given kube list.
Gets the build reference date.
Returns the value of the given key.
Gets the configuration map.
Prepares the named list of processors for the given type.
Adds an image to the builder.
Returns the default value for the given mode.
Gets the image name.
Gets the registry for the project.
Returns true if the configuration is online.
Get external service url.
Returns the boolean value as a boolean.
Creates the JBoss client.
Create internal node.
Scans the list of plugins.
Parses the given json string.
Gets the rewards balance.
Create paypal resource from json string.
Retrieve the given path.
Perform a POST request.
Convenience method to create VMs from json.
Collect all device data from the fragment.
Collect device data from Fragment.
Collect paypal device data.
Gets payal client metadata.
Check if the given package is valid.
Retrieve a string from a JSON object.
Parses the payment method.
Returns the checkout configuration for the browser.
Get the billing account for the billing account.
Executes a GET request.
Submits a POST request to the given path.
Perform a POST request.
Asynchronously approve payment.
Add listener.
Remove listener.
Request the billing account for the given fragment.
Called when a Fragment is received.
Parses the response.
Adds a dictionary to the dictionary.
Remove word from dictionary.
Convert a list of tokens to a list of tokens.
Extract a list of phrase from a token.
Determine the given list of tokens.
Fetches bytes from channel.
Joins a list of nal units into a byte buffer.
Joins a list of nal units into a byte buffer.
Returns the profile for the given integer.
Calculate the fixed precision for the given precision.
Reads the next byte from the stream.
Reads a new byte buffer from the specified marker.
Returns the maximum number of available frames.
Modify a file.
Returns the duration of the track.
Convert a time to a long value.
Convert a time value to a frame.
Translates a movie to a movie.
Translates a movie to a movie.
Convert a movie frame number to a long frame.
Formats a movie for a movie.
Convert a timecode to a Timecode frame.
Formats a timecode into a string.
Calculate the 8-bit unsigned 32-bit integer.
Sets the given value to the given value.
Checks if this color space matches the given color.
Returns a copy of the specified size.
Creates a stream from the input stream.
Reads data from the buffer.
Create a WAV header.
Create a WAV header from the given headers.
Parses the given byte array.
Encodes the given symbol.
Splits the movie into a single line.
Decode the specified frame.
Sets whether or not the byte array is bigendian.
Unlock the given mb bp.
Encodes a video frame.
Encodes a long value into a byte array.
Returns the length of the given long.
Adds a packet.
Reposition the file.
Decodes a binary bin.
Decode the binary code.
returns a marker from the specified buffer.
Returns the sample frequency for the specified integer.
Predict the plane on the plane.
Starts a block.
Adds a constant.
Finishes the given array.
Concatenates bits into a BitBuffer.
Rewinds a 32-bit integer.
Sets the seek to the specified key.
Get the image buffer from the video frame.
Get the gain change id.
Converts a byte array into an array of bytes.
Convert an array of bytes into a byte array.
Convert the given audio format into a float buffer.
Convert a float buffer into a byte buffer.
Intercept the specified input stream into the output buffer.
Intercept the specified input stream into the specified output stream.
Returns the size of the video.
Builds a mask map from the image.
Reads a byte array from a byte buffer.
Read 32bit integer from byte buffer.
Calculates the mv for a vector.
Encodes the given picture into a single frame.
Encodes a picture into a PNG file.
Encodes a photo into a byte buffer.
Get all supported codecs.
Returns a list of supported codec names.
Adds a reference to the JNI.
Gets garbage collection.
Flushes all registered references.
Load the Json library.
Unpacks the given file.
Deletes all temporary files.
Returns the default layout for the given number of channels.
Gets the channel from the given layout.
Make a new MediaPacket.
Returns the version of the package.
Get the default time base time.
Create a new Dialer.
Play a video.
Displays the video at the given time.
Make a codec for a given ID.
Prints a single option.
Register IOFactory for the given protocol prefix.
Generates a unique name for the specified object.
Creates a new MediaInputStream for the given output channel.
Gets supported video frames.
Gets supported video formats.
Gets the supported audio samples.
Gets the supported AudioFormat.
Gets the supported AudioChannel layouts.
Sets the flag for the given flag.
Sets the flag to be used as a flag.
Returns the decoder for the given decoder.
Get the Demuxio Server.
Get all muxio formats.
Creates a new filter graph from the network.
Get the type of this filter.
Returns a ByteBuffer from the given offset.
Create a new AudioFrame from the given AudioFormat.
Resample a picture of a picture.
Validates the image.
Validates the given picture.
Get the filter graph.
Get the meta data for the current thread.
Returns the CPU for the given java.
Gets cpu.
Determine the operating system.
Determine the operating system for a given string.
Play the specified sound.
Loads a library from the given library.
Sets the specified library.
Loads a candidate library.
Initializes the search paths.
Checks if a library is loaded.
Deletes this node.
Returns a stream for the given position.
Gets the muxio server.
Make a set of script transactions for the given script.
Decode the given string.
Generate a random seed.
Gets a transaction.
Returns a list of all transactions in the given address.
Returns a list of transactions in the given address.
Gets a list of block headers.
Gets the block.
Send transaction.
Sends a script to a script.
Compile the given script.
Writes an array of primitives to the given array.
Flushes the contents of the buffer.
Writes the given object to the specified address.
Reads a class.
Writes an object to the output stream.
Set the mmf file.
Returns the specificity of a class.
Resizes the memory to the given memory.
Removes the given key from the cache.
Write an asc string to the output stream.
Sets the output stream.
Create a new JSON configuration object.
Creates a StructConfiguration object.
Calculates the size of an object.
Clear all cached caches.
Returns the object input from the input stream.
Get the object input stream.
Get a copy of this object from a byte array.
Gets the fst.
Register cross-platform mapping.
Returns the class name for the given class.
Write an integer value.
Writes an integer into the stream.
Write an integer packed number.
Writes an integer to the given byte array.
Returns a cached cache for the specified class.
Called when an object is written.
Called when an object has been written.
Returns the fst class info for the given reference.
Writes an array of objects to the output stream.
Sets the string.
Writes a primitive array.
Closes the given updates.
Snapshot changes to the given buffer.
Registers an object for the given object.
Writes an object to the given byte array.
Reads an object from the input stream.
Reads a byte array.
Read an integer from the stream.
Downwards the number of bytes from the buffer.
Enables or disables the thread pool.
Starts embedded MySQL.
Removes all data embedded with the given keyspace.
Creates a copy of the given resource.
Check if a remote port is a remote port.
Returns a new subscriber state.
Returns a map of all of the operations on the network.
Calculates the shape of the output.
Returns true if the given ndarray is a complex.
Returns true if the given ndarray condition.
Returns true if the given condition.
Bitwise OR condition.
Applies the given condition to the given condition.
Returns the first index of the given array with the given condition.
Returns a flat representation of this map.
Convert a FlatProperties object to a function.
Converts a collection of properties into a flat-memory representation.
Sets the exception.
Sets the exception if it is not null.
Merges two points into a list of coordinates.
Splits a list of values into a list of numbers.
Convert an ontology type to nd4j.
Shuts down the pool.
Get the hardware architecture for the current thread.
Convert a column to an image.
Pooling 2darray pool.
Creates a compression descriptor from the given byte buffer.
Splits the given list into batches.
Validates the given dimension.
Sets the data type.
Returns a random number of numbers in the given range.
Convert a collection of matrices to a flattened matrix.
Calculates the product product of the input.
Create a complex ndarray.
Creates a complex number of complex values.
Creates a complex array with the specified value.
Determines if the last record has the same time.
Subtracts this component.
Returns the mean of the given number.
Evaluates the given number.
Negate the given number.
Returns the absolute absolute value.
Raises a power of a power.
Binary binarizer.
Randomly shuffle the data set.
Gets the memory footprint of this network.
Convert an exception to a String.
Returns a simple hostname from a full hostname.
Convert String array to String.
Converts a byte array to a hexadecimal string.
Returns an array of strings from a delimited string.
Splits the given string into an array of Strings.
Splits a string into an array of strings.
Finds the next character in the given string.
Escapes the given string.
Joins a list of strings with the given separator.
Convert a string to a camelize string.
Gets the stack trace for the given thread.
Invert an ndarray to a matrix.
Returns the value at the specified number.
Determine if this host is actual.
Determine if this device is actual.
Returns the shape information for the data buffer.
Creates a shape for the data buffer.
Checks if a shape is a vector.
Get the order of an ndarray.
Returns the offset for the given ndarray.
Convert an array of indices into an array of indices.
Returns the short value at the given offset.
Resets the data buffer.
Copies the data from the specified stride to the specified stride.
Returns the constant data buffer.
Returns the uri for the Kafka broker.
Raises an ndarray.
Log an ndarray.
Returns the maximum value for a given vector.
Returns the max of ndarray.
Get the min of a vector.
Returns the min of two arrays.
Starts the given ndarray.
Executes the given nmarray.
Log the logp.
Prepare the bounds for the given bounds.
Returns the next data set.
Build the allocation shape for a data buffer.
Checks if a given path exists in the given path.
Reads an object from the given input stream.
Scans the tail of the device.
Create ndarray from ndarray.
Create an ndarray from npy file.
Allocates a paged pointer to the given memory.
Attaches an object to the lock.
Checks if the server is started.
Executes the given op.
Flushes the queue.
Returns an InputStream for the given URL.
Returns the device for the given thread id.
Attaches a thread to a thread.
Get the next device from the thread.
Gets the platform name.
Calculates the architecture for the current platform.
Publish an ndarray.
Creates a new DataBuffer.
Intercept the given int type.
Add this vector to this one.
Processes the payload.
Average pooling operation.
Computes the depth of the given inputs.
Resets the internal state.
Returns the type of the given op.
Allocate the ndarray.
Get the shape of this variable.
Evaluate this SDDiff.
Convert a double array to a INDArray.
Convert the given ndarray to an ndarray.
Center the given shape.
Truncate the ndarray to a given dimension.
Pads the given ndarray to the given array.
Returns the index of the ndarray.
Broadcast an ndarray to the given ndarray.
Processes an aggregation.
Calculate the sum of the given fraction.
Returns the squared Euclidean.
Returns the root of a BigDecimal.
Evaluates the given precision.
Raises the given number.
Raises a BigDecimal.
Calculate the sum of the given number.
Calculate the sum of the given number.
Calculate the sum of the given number.
Scales BigDecimal.
Scales the given BigDecimal.
Convert a BigDecimal to an error.
Put a function for the given id.
Get the input for the given function.
Update an ndarray for the given variable.
Put the shape for a variable.
Associate a variable with the given shape.
Gets property for a function instance.
Adds a property to the given function.
Adds a function to the outgoing function.
Adds the arguments for the given function.
Checks if the given function is incoming.
Evaluates the input.
Create a new variable with the specified shape.
Create a new array with the given name.
Create zeros.
Remove argument from function.
Sets the gradient for the given variable.
Average pooling operation.
Returns a tensor for the given network.
Executes the given equations.
Adds a continuation statement.
Executes the given function.
Executes the given function.
Executes the current INDArray.
Adds a variable to the map.
This method allocates the given number of bytes.
Returns the length of the given data buffer.
Returns a string representation of the data buffer.
Get the data type from the context.
Returns the operation number for the given name.
Destroy all workspaces for current thread.
Print allocation statistics for current thread.
Triggers a matrix.
Executes the activation function.
Detects the given ndarray.
Returns the name of the given node.
Invokes a scalar operation on the specified dimension.
Asserts that all workspaces are available.
Negates the negative log.
Requests that a waiting time for the specified time.
Attempt to fetch the sink from the current request.
Releases the value associated with the current slot.
Get the current access state.
Processes the data from the current task.
Initializes the current dataset from the given dataset.
Initializes host collectors.
Returns the device pointer for the given data buffer.
Synchronize host data from the data buffer.
Applies the given grader to the network.
Synchronize the allocation point.
Create an array of ndarray.
Get properties for this function.
Checks if there is a place holder.
Computes the difference.
Format the given ndarray.
Import the given tensor to the given tensor.
Convert a ndarray to a ndarray.
Load a complex type from a blob.
Saves an ndarray to the given id.
Copy the real real values from the given array.
Copies all the elements of the given ndarray.
Sets the epsilon.
Assign the given ndarray to the given array.
Get the ndarray for the given indices.
Put the given ndarray.
Puts the given ndarray into the given vector.
Subtract the elements of this instance.
Add this ndarray.
Subtract the result from this result.
Add this vector to this one.
Assigns the given value to this vector.
Returns the ndarray.
Evaluates the nigenvalues of a vector.
Computes the generalized eigenvalues of a matrix.
Returns the index of the ndarray.
Copies the given ndarray to the given vector.
Scans the given vector.
Processes the message.
Returns the number of elements in the given weights.
Performs a reduction operation.
Returns the constructor for the given class.
Returns the constructor for the given class.
Invokes the method handle with the given parameters.
Returns the annotation for the given type.
Returns the declared annotation for the given type.
Checks if the given annotation is present on the given class.
Creates a new instance of the given result.
Load the entity from the given entity.
Save the given entity in the given context.
Create a new proxy service.
Returns the metadata for the given kind.
Query all keys in the given query.
Queries the given key with the given key.
Executes the query results from the given query.
Queries the given projection query.
Query for a query.
Splits an iterator over the given input stream.
Loads all keys from the given iterator.
Creates a string representation of the specified path.
Creates a key for the given object.
Compare two keys.
Converts a raw key into a Key.
Converts a typed typed key to a Cloud Datastore.
Returns the kind of the given class.
Checks if the type parameters are missing.
Checks if a subtype is a super type.
Get the direct type of the given type.
Capture a type of a type.
Returns a translator for the given type.
Returns the populator for the given type.
Returns true if the given class is uninstruction.
Is this method?.
Returns all the properties of the given class.
Returns the key metadata for the key.
Returns the value associated with the given key.
Executes the translation.
Fetches pending entities in the database.
Adds the indexed discriminals for the given class.
Register a subclass of the given class.
Returns the type of the given collection.
Get the key type from the map.
Returns a forward path from the given path.
Returns the final path for this path.
Returns the path as a string.
Returns the number of elements in this path.
Put all updates in the cache.
Removes all keys in the cache.
Caches all buckets in the cache.
Returns a map of all keys in the cache.
Returns the set of keys for a given collection.
Sets the key for the given entity.
Sets the id of a POJO.
Get the parent key from the parent node.
Register a subclass of a superclass.
Returns true if the given type is a common type.
Translate the given owner type to the given type.
Returns the annotation for the given type.
Adds all of this session to this session.
Loads the result from the given key.
Executes the given round.
Translate a raw result into a Map.
Fetches the specified keys from the specified set.
Loads the given entity.
Create a raw data key from a parent node.
Converts a key into a raw string.
Extracts the ID from the given key.
Converts a URL-safe key-safe string to a Cloud Cloud Cloud Cloud Cloud Cloud
Creates a transaction with the given parent transaction.
Creates a new transaction.
Executes the given work.
Checks if this object matches the given conditions.
Creates an instance of the object.
Asynchronously returns an async datastore.
Returns the metadata for the given entity.
Allocates an incomplete key range for the specified key.
Open an object.
Close the object.
Returns the index of the given list.
Creates a new reference from the given value.
Retrieves the object from the cache.
Adds the given value to the list.
Determine whether this stream is done.
Generates the IF conditions for the given field.
Called when the engine has completed.
Returns the container with the given path.
Returns a stat for a given kind.
Unwrap the given exception.
Returns a translator for a specific type.
Gets the translation for the given entity.
Creates a new translator for the given type.
Loads the property from the container.
Extract property from container.
Sets the value on the given property path.
Save the property into the given property.
Returns the value associated with the given property.
Writes all extensions to the given message.
Write content category.
Writes the content categories to the given field.
Process the given snippet.
Returns an iterable over the specified response.
Returns a bid-by with the given id.
Update bids with the given response builder.
Remove all bids with the given filter.
Reads extensions from the given json parser.
Returns true if the JSON parser is null.
Registers a JSON reader for the given type.
Register a new JsonWriter for the given field.
Processes the bids for the given response.
Updates the fields for the given facet.
Updates the given object with the given updates.
Filter a list of objects from the given predicate.
Returns the current name of the JsonParser.
Starts an object.
Starts an array.
Peek the next token.
Writes an integer field to a boolean.
Writes a list of strings to a JSON string.
Writes the given list of ints to the given array.
Writes a list of long strings to the given array.
Writes a list of enumeration types to the given field.
Resolves a URL to a URL.
Fixes the given target URL.
Get the host segments of a URL.
Gets the host name.
Get the URL from the given URL.
Loads a list of Strings from the configuration file.
Extract the configuration element from the configuration.
Returns the protocol for the given URL.
Generate a WAR WAR file.
Extract refresh url from string value.
Extracts the metadata for a given target URL.
Filter the metadata for the given metadata.
Adds a new URL to the list.
Clean up the given field name.
Get charset from byte array.
Returns the charset from the given content.
Extract charset from a byte buffer.
Check if the content is found.
Sets the value for a given key.
Returns the first value of the given metadata.
Returns a list of cookies from the given URL.
Checks if the given cookie name is valid.
Returns the cache key for the given URL.
Gets the robot rules from cache.
Extracts the meta tags from the document.
Sends ack message.
Checks if the given URL matches the given URL.
Filter the URL string.
Read rules from a file.
Processes the URL elements in the URL.
Returns the navigation filters from the configuration file.
Adds a record format to the Hadoop archive.
Attempts to fetch the number of queries in the query.
Triggers the query.
Load parses from storm configuration file.
Append a new node to the current node.
Create a process instruction.
Processes a comment.
Processes a DTD.
Returns the string value for the given tuple.
Trims the given text.
Checks the custom intervals for the given metadata.
Returns a URL from the configuration file.
Set the number of items in the wheel.
Resolves the size and state and its state.
Set the empty drawable.
Set the angle of the wheel.
Update the selected position.
Invalidate the animation item.
Convert a position to a fixed position.
Update the velocity.
Get the color of the material.
Clamp the given value.
Writes the coverage of the coverage file.
Returns the data buffer as a byte buffer.
Sets the string value in this array.
Make an array of objects to a single vector.
Make an array of bytes from a String.
Make an array of Strings from a String array.
Make a char array from a String array.
Calculates the forecast interval for the forecast interval.
Displays the frame.
Shows the frame if it has not already been created.
Calculate size estimate for a grid.
Prints the number of records from the specified file.
Creates a new unit name.
Creates a new unit name.
Calculates the plural of the given string.
Checks if the given date is included in the given date.
Intersect the specified range.
Extend the specified date range.
Extend the end of this date.
Sets the start time.
Sets the end of this field.
Sets the duration.
Add a map to the map.
Prints error message.
Get the name of this node.
Returns the string representation of the parameters as a string.
Initializes the data from the given byte array.
Computes the bounds of the bounds of the specified coordinates.
Synchronise the UI time range for the time range.
Computes the maximum number of unlimited chunks.
Register a watcher.
Processes the event.
Wrap a feature dataset from a network.
Checks if a feature type is valid.
Find the feature type for the network.
Writes the catalog to the given catalog.
Convert a catalog to HTML table.
Get the CSS CSS content for this page.
Get the HTML header for the user.
Create a dynamic catalog.
Adds the global services to the catalog.
Initialize the http client with the given credentials.
Gets the content as a string.
Puts the content of a uri.
This method returns the front page.
Returns a catalog for the given path.
Extracts the geospatial coverage data from the giventcollection.
Get a single dataset by type name.
Checks if two vertices are equal.
Creates a new unit identifier with the given name and symbol.
Parses an attribute.
Read the top level from the file.
Convert two shorts into an integer.
Converts a byte array to an integer.
Gets a Date from the given milliseconds.
Make sure that the given string name is valid.
Checks if the given string name is valid.
Read the data structure.
Read a subset of the data structure.
Fill all non-record variables in the file.
Make a time struct from the given time.
Makes the given calendar as a time struct.
Checks if the given string is a time template.
Adds a Lambda function to the server.
Load a boolean function.
Load a bt from the given name.
Loads a new Lambda function.
Returns the string name for the grid.
Get the description for the grid.
Get the MetricsUnit for the given grid.
Returns the projection type for the given grid.
Checks if the grid is vertical coordinate.
Is this grid?.
Create a new coordinate transform from the given dataset.
Create a dummy dummy dummy transformation variable.
Create a projection for coverage data.
The main method for testing.
Save the state of the data window.
Returns a copy of this chronology with the specified time zone.
Writes the number of bytes to the output stream.
Writes an array of values to the given array.
Write bytes to the output stream.
Output byte array.
Finishes the initialization of the server.
Returns a CalendarDateRange from the given DateRange.
Factory method to create a GED curve from the given data format.
Parses the given string into a dictionary.
Parse the given text into the specified string.
Swap the grid header.
Read the data from the grid.
Prints the grid.
Write a file.
Writes the headers and checks for the service.
Writes all operations.
Read all log files.
Scans a log file.
Get the type of the grid.
Find the grid record for the given parameter.
Determine the distribution of a word.
Unpack data from a dictionary.
Calculate the UGA distribution.
Unpack Grib1 data.
Unpack Grib2 data.
Print grid records.
Reads the next byte from the stream.
Creates a new Calendar from the given Calendar.
Construct a CalendarDate from the given Date.
Returns a Calendar date from the given milliseconds.
Constructs a CalendarDate from the given Calendar.
Parses the given udul units.
Get the difference between the given fields.
Creates an AtomicVariable from the data set.
Sets up the server.
Escapes a string.
Create a slice of a list of ranges.
Unwraps the given file.
Checks if the dimension is contained in the given list.
Computes the effective shape for the specified dimension.
Adds the specified date to this date.
Multiply the given unit.
Computes the divide by the given unit.
Divides the given unit.
Raises the given unit to the given power of the given power.
Convert the given amount to a derived unit.
Convert the input to a derived unit.
Convert a derived unit to a derived unit.
Returns the canonical string representation of this component.
Reads the data from the given section.
Read data from a collection of coordinates.
Flattens a list of stations.
Find service by name.
Returns the size of the given datatype.
Returns the start gate.
Returns the number of gate count.
Writes the XML file to the output stream.
Returns the preferred layout size for the given target component.
Verify a descendant dataset for a given path.
Generates a proxy resolver for a given dataset.
Returns a CalendarDateTime instance for the given locale.
Returns a new CalendarDateUnit with the given UNode string.
Creates a new CalendarDateUnit from the given calendar.
Get the quantity of this unit.
Checks if a file is valid.
Read data from a dataset.
Read an int array of integers from the given layout.
Read data from a variable channel.
Calculate the elevation of the given angle.
Calculates the step for the given range.
Calculates the elliptic of the given ray.
Calculates the data for the given byte array.
Calculates the nkyyumber of the given parameters.
Make a vertical transform from a dataset.
Sets debug flags.
Sets whether the index should be extended.
Reads the xy coordinate from v2.
Checks if there is missing.
Get the lat lon bounding box.
Finishes the sequence.
Trims the given string to the given string.
Pad a string to a string.
Pad an integer to a string.
Pad long.
Formats a double size in bytes format.
Print a double value.
Print a double value.
Returns a string representation of a shape.
Called when a slice is complete.
Returns a string representation of this constraint.
Compose the slice of the given slice.
Maps an integer to a byte array.
Dump bytes from a byte buffer.
Get the type from the given name.
Get the type of the ellipse.
Decode VNF data from VNF.
Extracts the URL from the given URL.
Get the content of a URL.
Filter the input stream.
Read the data from a variable.
Adds all attributes to the given iterable.
Removes the specified attribute from the cache.
Removes the given attribute with the given name.
Gets the offsets in the time series.
Adds an action listener to the action listener.
Get the standard date from the given string.
Get the standard date or ISO-8601.
Get the date of the time unit.
Gets the date.
Makes a double value into a Date.
Returns the value of the given date.
Returns the standard date string for the given double value.
Get the grid spacing for the grid.
Adds the grid dimension to the network.
Adds a coordinate axis to the network.
Make a projection from a GeoFile.
Adds the gd variable to the graph.
Adds a coordinate variable to the network.
Make a list of LTCCodes.
Calculate the grid location.
Calculate the mercator for the grid.
Set the y-coordinate of the line.
Reads a dataset.
Reads metadata from a given URL.
Get the level of this type.
Checks if the file is a valid file.
Writes a byte array.
Sets the clear name for this table.
Get the coordinate name for a given axis type.
Returns the coordinate name for a given dimension.
Build the XML fragment.
Build a DAPException with the given code.
Splits the given variable into a list of dimensions.
Calculate the zc dimension of a datum.
Creates a new variable with the specified dimensions.
Parses a time axis from the given variables.
Scans the given value to the given bit mask.
Entry point for debugging purposes.
Wrap the given ncFile.
Open a file.
Clear all coordinate systems.
Finds the coordinate axis with the given type.
Finds the coordinate axis with the given full name.
Find a coordinate system by name.
Finds a coordinate by name.
Enhances the enhance mode.
Sets the values of a variable.
Sets the values of a variable.
Create a new array with the given string values.
Returns the index of this vector.
Gets an existing file.
Get the features of a bounding box.
Discretize the values of a data point.
Adds all metadata to the given td.
Adds a comment to the list.
Remove all the documentation for the given type.
Returns the maximum number of bytes in bytes.
Checks if the network file is mine.
Converts a String into a list of names.
Builds a string for a user attribute.
Build the coordinate systems for the network.
Find the coordinates of the ndarray.
Recursively find the coordinate system.
Make all the variables in the network.
This method determines whether the data system is optimal.
Checks if a variable is a coordinate on the given variable.
Subtracts the specified dataset from the specified dataset.
Removes the specified dataset from the specified dataset.
Marks this dataset as read.
Initialize the timer.
Count the count of the given value.
Adds a symbol to the given symbol.
Compares the values of this table.
Compare two boolean values.
Processes the given XML node.
Check if the given time range is valid.
Registers a given class.
Registers the given dsp.
Check if the given class is registered.
Unregisters the given class.
Calculates the forecast size of the forecast interval in the GPS interval.
Calculates the forecast interval for the forecast interval.
Returns the VertUnit from the specified code.
Sort the dap nodes.
Find a variable with the specified attribute.
Find a variable with the specified attribute value.
Finds the name of a variable with the given attribute value.
Finds a variable with the specified attribute value.
Finds a nested structure.
Checks if the network data structure contains a network structure.
Extracts the literal from a string.
Get the feature type from the given dictionary.
Returns the variable name for a given key.
Returns the coordinate value at the specified location.
Calculates a long value between two long values.
Returns the coordinates of the coordinates of this data.
Adds the specified ranges to the specified range.
Find the closest point in the given range.
Get the name of this query.
Adds an action to the menu.
Match the given path.
Entry point for the projection manager.
Returns the index of the specified byte array.
Adds a picture to the cache.
Prints the cache of images.
Stop the background loading.
Stop the background loading.
Creates a HTTP GET request.
Create a mock method for the HTTP method.
Returns a random float.
Get the next count.
Read data from a section.
Returns a file provider for the given uri.
Reads the stations table.
Returns the index of the given value.
Removes the data variable from the given variable name.
Get the meters for the given height.
Reads the data from a section.
Sets the number of colors in the histogram.
Calculates the transform for the given screen.
Converts a URI into an auth scope.
Finish the grid.
Checks if this factor is reciprocal.
Get a directory from a directory.
Finds the index of the given value.
Read metadata from a given URL.
Reads the metadata content from the data set.
Add metadata content.
Validates the content of the given metadata.
Read the catalog element from the catalog element.
Reads a dataset from a datetime element.
Read a dataset element.
Reads a dataset from a dataset element.
Read result service service.
Creates and returns a tag element element.
Creates a dataset element for a dataset.
Create a dataset element for a dataset.
Create the XML element for a dataset.
Create the result service element.
Checks if the given flag name exists.
Construct the menu.
Load parameters from a table.
Create a Parameter from a String array.
Returns the parameter with the given name.
Read content from input stream.
Reads bytes from input stream.
Replace the file template with the given index.
Sets the station information.
Accepts a string value.
Get the bitmap from the specified raster file.
Set the network file.
Sets debug flags.
Parses the given string into a fully qualified name.
Returns true if the given dstruct is a group.
Get the network length of a datacode.
Returns the shared dimension of the specified dimension.
Constructs a list of dimensions.
Checks if the given base type is unsigned.
Read data from sddd.
Get an image from the given resource name.
Get an image from the given resource name.
Create a cursor with the specified name.
Read data from the given layout.
Read data from the given layout.
Read data from the given layout.
Creates a primitive array from the given data type.
Convert byte array to UTF8 bytes.
Convert a char array to byte array.
Convert byte array to char array.
Reads a single section of a section.
Parse a nested section.
Get the string representation of a member.
Gets a scalar structure.
This method returns the array at the specified index.
This method returns the data structure of a datapoint.
Adds the dimensions to the network.
Normalize the given path.
Adds an explicit dataset.
Add a dataset to a dataset.
Finishes the dataset.
Creates a dataset for all datasets.
Returns the typical dataset for the given dataset.
Create a dataset from a dataset.
Put resource control.
Adds a point to the graph.
Get the bb-b-b-b-coordinate.
Gets the bb-b-b-b-based on the line.
Validates the input stream.
Checks if the given dataset matches the given dataset.
Adds all the points to the specified point.
Parse the constraint from the request.
Evaluates the given object.
Print a single constraint.
Translates the given ndfile into an ndfile.
Sets the shared dimensions.
Checks if the given dimensions are in the given shape.
Finds a group by its name.
Reads the content of this link.
Returns the standard URI for the given dataset.
Sets the projection for this projection.
Adds a component to the layout.
Invalidate the layout.
Remove a component from the layout.
Get the minimum size of the container.
Layout for the given container.
Checks if the given coordinate system is radial coordinate.
Get the maximum radial radial axis.
Convert the latitude to geographic coordinates.
Convert the given point to Earth.
Translates the poi to France Lambert.
Translates a polygon geometry to a path.
Parse the scan angle for the given sweep angle.
Sets the runtime coordinates for this runtime.
Writes a point dataset to a file.
Rewrite a point feature from a file.
Returns the array sequence for the specified member.
Returns the full name of this node.
Returns the unique ID of the document.
Returns the access for the given type.
Find by name.
Returns the parent catalog.
Get all metadata for the given type.
Find service by name.
Gets the metadata for a given vocabulary.
Find all the catalogs in a dataset.
Escapes a path for a given URL.
Adds a double to the given array.
Extracts an array of elements from the given array.
Computes the rhopper for the given latitude.
Get the detail information.
Builds a structure from the given parts.
Creates a missing variable.
Creates a param variable with the given parameters.
Add the global attributes.
Returns the size of a stvar variable.
Extracts the array from the data type.
getter for the given state.
This method returns the error information for the given node.
Reduces the given variable to the output.
Read the dmr file.
Reads an error from the stream.
Reads bytes from the input stream.
Reads the header from the input stream.
Convert an ISO-01 string to a date.
Reads a table from a URL.
Transfer a group of data to a network.
Gets stn file.
Reads the data from the network.
Returns the beginning of the specified index.
Returns the index of the specified index.
Create all runtime collections.
Set the edit value.
Returns the data type for the given format.
Calculates the ELL curve from the given coordinate.
Clean up a unit.
Removes the given name from the given string.
Checks if the given string is a valid unit.
Creates a new note for the given parameters.
Gets the variable id from a comment.
Parses the given dataset.
Finds the children for a given name.
Find the datav for a given dds.
Finds the given index.
Get the parent group.
Returns the dimension of the specified index.
Finds the index of the given name.
Gets the unit string value.
Get the shapeas a section as a section.
Returns a slice of the specified dimension.
Sets the enum typed type.
Reads the given ranges from the given ranges.
Reads a single scalar string.
Reads the data from the input stream.
Reads a section of a section.
Writes the CDL file.
Returns a string representation of this dataset.
Sets the data type.
Sets the dimensions of this shape.
Resets the shape of this shape.
Sets the dimensions of the given dimension.
Resets the dimensions of this group.
Sets the dimension at the specified index.
Sets the cache.
Get all dimensions.
Sets the bounding box.
Finishes the current state.
Returns a list of all datasets.
Check if the given path matches the given path.
Open a CDM file.
Build DMR file.
Recursively builds the sequence types for a given variable.
Builds a list of dimensions that have been added.
Finds a typed enum for a specific typed enum.
Get the core dimension.
Scans the messages in a file.
Processes a message from the specified message.
Executes the post request.
Get the transform.
Determine if the map is rotated.
Get the area area area.
Convert the given point to a screen.
Pan to the pan area.
Zoom to the specified point.
Recalculate the bounding box.
Adds an object to the list.
Removes an object from the list.
Sends an event.
Send an event to the source.
Print a command.
Print a variable array.
Print the variable data section.
Prints a structure data structure.
Print all elements in the given array.
Prints an array of elements in a PrintWriter.
Writes nCF file to the given writer.
Read a double value from the attribute.
Adds a parameter to the given coordinate.
Reads an object from a datap.
Checks if the grid is positive.
Checks if the given unit is compatible with the given unit.
Builds the label for the given quantity id.
Set the bit offset.
Convert a number to a long.
Convert an n-bit integer to a long.
Open a connection.
Get the DAS command.
This method returns the complete string representation of the given CE.
Convert the poi to lat lon.
Get the catalog catalog for a given XML file.
Converts a DateRange to a DateRange.
Check if a file is a valid file.
Handles the information of the SpatialInfo.
Handles the sensor.
Reads the root element from the given location.
Clean up characters from XML.
Unescape the given String.
Escapes the given string.
Unescape the given string.
Decode the given string.
Encode the given String to a String.
Adds the global attributes to the network.
Swap the given byte array at the specified offset.
Swap the given byte array at the specified offset.
Swap the given byte array at the specified offset.
Swap two float bits.
Swap two double bits.
Convert a short to a byte array.
Converts an integer into a byte array.
Converts a long to a byte array.
Returns a subset of this view.
Writes the last modification time to the given timestamp.
Makes the given array with the given values.
Start the XML file.
Writes the features of the feature.
Add a list of levels.
Adds the dimensions to the network.
Adds the network to the network.
Finds the coordinate for a specific level.
Gets the index of the grid.
Exit the timer.
Returns the file for the given location.
Returns the file or null if it exists.
Prints the cache.
Clean up the cache.
Calculates the bearing for the given point.
Calculates the bearing between two points.
Entry point for testing purposes.
Find the nearest point from the given point.
Find the nearest point from the given point.
Find the nearest point from the given point.
Loads a picture from the specified image.
Loads a picture from the specified image.
Loads the image.
Stop the image loading.
Stop the loading of the image.
Get the size of the image.
Set the source image.
Returns the standard URI for the given dataset.
Transfers data to a list of data descriptors.
Count the number of bits.
Compares two DataDescriptors.
Load the header.
Loads the data from the stream.
Returns the field with the given name.
Get double array by name.
Get String by name.
Get a boolean array by name.
Returns the name of the field at the specified index.
Get the names of all the fields in this class.
Entry point for a dbase file.
Get the attributes of this map.
Sets the specified attribute.
Removes an attribute from the cache.
Get the DapGroup.
Get the parent node.
Gets the escaped name.
Returns a list of all the children of this node.
Returns a list of all the children of this node.
Calculate the full name of the dap.
Build the dap data.
Puts a bean collection into the cache.
Returns the value associated with the given key.
Returns the object associated with the given key.
Reads data from the specified rdf file.
Print out the dap.
Print the compound instance.
Convert an element to a String.
Writes the given element to the given file.
Writes the given element to the given output stream.
Writes an element to the given writer.
Create a new dimension element with the given dimension.
Makes a coordinate into a single coordinate.
Returns an array of ints for the given attribute.
Creates a new BaseUnit.
Creates a new unit.
Creates the base database for the given unit.
Get the Instance of the Interface.
Finds the nearest coordinate element in the given range.
Find the closest point in the given point.
Subtract the values from the given axis.
Open a feature dataset.
Open a feature dataset.
Annotate the network.
Read the data from the specified position.
Joins the given set of parts.
Convert a string to a canonical form.
Normalize the given string.
Finish the Xlink link.
Returns the value associated with the specified key.
Puts a value into the cache.
Get the current date.
Print a DEP node.
Print an XML element.
Checks if the attribute is a special attribute.
Print dimensions from a variable.
Checks if a file is a valid file.
Sets the attributes directory.
Set the nav block attributes.
Get the CalcType from the given string.
Sets the values for the given image.
Find the coordinates of a table.
Finds the full name of a specific type.
Finds the axis with the given type.
Finds the axis with the given type.
Finds the dimension for a given type.
Find the best coordinate system.
Find the dependent axis with the given axis.
Returns the variable with the given name.
Read marker from input stream.
Writes a marker to the data sink.
Demonstrates how to create a chart with the given time.
Returns a string array of strings as a String.
Get the parameter list.
Sets the list of stations.
Set the selected station.
Redraw the image.
Deserialize this object.
Writes the object to the given output stream.
Adds the given object to this database.
Adds a unit to the unit.
Adds a symbol to the symbol.
Returns the unit associated with the given identifier.
Adds a unit to the unit.
Adds a unit to the symbol map.
Adds a new unit to the given map.
Adds the menu to the menu.
Finds the record with the specified coordinate.
Reads the contents of a dataset.
Serialize the given dataset to the given output stream.
Creates a copy of this projection.
Open a feature dataset.
Open a feature dataset.
Open a network dataset.
Annotate the network.
Add a partition.
Makes a GribCollection to create a GribCollection.
Returns a new RegExpressionPattern that matches the given pattern.
Returns a new instance that matches the given pattern.
Write the specified query capability.
Deserialize a structure.
Set the image to display the specified filename.
Set the buffered image.
Zoom to the specified layout.
Paint the component.
Convert the time to a GPS timestamp.
Takes a set of ints into a TTF tag.
Convert the IDs to a String.
Calculates the year of the month.
Converts the IV coordinate to a 32-d coordinate.
Reverses an array of integers in the given range.
Get the pack type.
Get the data type for a specific type.
Read data from input stream.
Exports the given OutputStream to an OutputStream.
Returns the tag enum for the given code.
Get the next image.
Returns the number of bytes in the specified type.
Calculate the sum of an array.
Sets the grid grid.
Sets the overlap.
Clears the grid.
Marks the specified rect as clear.
Find the intersection of the specified rectangle.
Find the intersection of this point.
Find the closest point in the specified point.
Returns the squared Euclidean distance between the specified point.
Returns the base unit for the given name.
Returns the service type from the fragment.
Search for the service path.
Returns the service type from the given path.
Checks if the given location exists in dsd.
Send a variable to the output stream.
Returns the suffix of a file.
Returns the prefix of a given string.
Locates a file in the given directory.
Locates a relative path to a relative path.
Extracts a byte array from a byte buffer.
Returns a list of datapoints from a datapoint.
Returns null if not null.
Join an array of strings to a String.
Checks if a path is a drive letter.
Get the list of protocols for a given URL.
Convert the given index to a slice of the given index.
Convert a datap to a slice of the given offset.
Checks if the given list is contiguous.
Checks if a single point is a single point.
Converts a list of slices into an index.
Read data from input stream.
Set the station information.
Reads a feature collection from the catalog.
Updates all dap groups.
Find a dap variable by its name.
Returns the axis type for a variable.
Returns the stat type for the given time range.
Subtract lon coordinates from the loncoordinate.
Returns a list of all the ranges in the coordinates.
Sets the default values for the given properties.
Gets the session id from the session.
Sets the maximum number of redirects.
Sets whether or not the HTTP session is valid.
Close the connection.
Sets the authentication and proxy.
Track a session.
Sets the global credentials provider.
Validates the URL.
Creates a new index factory.
Computes the stride for the given shape.
Search for the given ranges.
Reduces the indices of this index.
Reduces a new index.
Returns a copy of this index.
Returns a copy of this index.
Returns the index iterator for a given array.
Returns the current element.
Set the current index to the given array.
Sets the specified dimension.
Sets the dimensions of this index.
Get the name of the time interval.
Create a CalendarDateRange from the given Calendar.
Creates a list of all the files in the datetime.
Calculate the value of the pkparameter.
Gets the list of available stations.
Get the list of station names.
Returns a list of all the dates in the given format.
Find the index of a specific station.
Returns the type of the file.
Indentries to indentation.
Set the indentation level.
Reads a single index from a single file.
Adds a directory to the list of files.
Returns true if the scan should be scanned.
Try to scan the time.
Sets debug flags.
Adds a variable to the model.
Writes a file to the network.
Validates the given XML document.
Returns a string representation of this partition.
Set the original variable from the source variable.
Reads the contents of this variable.
Checks if this structure is needed.
Convert an array of ArrayData to an Array.
This method converts the members of the members of a member.
Find the variable from the given org name.
Checks if the variable has a variable.
Enhanced inference.
Check if the resource is valid.
Makes a sequence of elements in a sequence.
Makes a sequence of values to a sequence.
Build a sequence from the given parameters.
Adds the vertical coordinate attribute.
Reads a XML document from a URI.
Reads an XML document from a String.
Parse the given string into an XML document.
Writes the given catalog.
Returns the metadata converter for the given key.
Returns the unit name for a unit.
Multiply by another unit.
Divide the given unit.
Convert a float array to a derived unit.
Checks if the given unit is compatible with the given unit.
Writes a polygon to a string.
Writes a point to a string.
Convert a line to a string.
Write polygon.
Get all subnodes in a parent node.
Pass all reserved attributes.
Gets the string of a variable from the given variable.
Creates a new instance of an ArrayFactory from the given array.
Sets the member array.
Creates a new DataFactory for the given shape.
Get the geometry type for a given geometry.
Constructs a station feature from a structure.
Compile AST node.
Compile the filter expression.
Adds a DNS node to the given datastream.
Creates a view for the given index.
Checks if the specified bounds is contained in the bounds.
Extend a point on the specified point.
Extracts the specified coordinates from the specified coordinates.
Returns true if this rectangle intersect the specified bounds.
Adds an array to the given array.
Checks if the given array is conformable.
Checks if a shape is compatible with the same shape.
Convert an array to an array.
Copies the result from an array.
Copy all boolean values from the given array.
Copies the object from the given array.
Get the min and max.
Sets the value of the given array.
Build a catalog builder for this dataset.
Creates a new projection for the given projection.
Unescape an ID.
URL-decode the given string.
Unescape URL.
Escapes the given string.
Unescape the given string.
Tokenize the given escaped name.
Returns the index of the given character.
Converts backslashes into a String.
Reads an AtomicVariable from the AtomicVariable.
Convert a cursor to a path.
Returns the default value for the given property.
Returns the class of the given component.
Compile this dataset.
Compile a datapoint array.
Compiles a datapoint structure.
Compile the sequence array.
Compiles a sequence of datap from the datap.
Read a Little Endian integer from the stream.
Returns the delegate field with the specified name.
Returns the value of the specified field.
Sets the value of the specified field.
Adds a field to this field.
Add a checkbox field.
Adds a date field to the specified field.
Add a double field to this field.
Adds an integer field to the specified field.
Add a password field.
Add a field to the text field.
Add the text combo combo.
Adds a text area to the text area.
Adds a heading heading.
Adds a component to the layout.
Adds an empty row.
Finds the active frame.
Get the cell spacing.
Returns the set of factors.
Computes the factor of the given dimension.
Raises the power of the given power.
Returns true if this dimension is reciprocal.
Determine if this factor is a dimensionable.
Creates a new parameter table with the given parameters.
Creates a new Gribtable parameter from the given parameters.
Adds a lookup table lookup.
Adds a parameter table.
This method returns the upper case of the specified unit.
Convert a vector to a derived unit.
Initializes the unit table.
Create a vertical variable with the given coordinates.
Reads the name from the file.
Retrieve a short from the given byte array.
Retrieve an integer from a byte array.
Retrieve a float from a byte array.
Retrieve a double from a byte array.
Adds an alias to the given alias.
Adds a symbol to a symbol.
Returns a Converter for the given unit.
Sets the structure data structure.
Set the point feature data model.
Draws a polygon with the specified coordinates.
This method returns an array of shapes for this shape.
Processes the input stream.
Read bytes from input stream.
Reads more bytes from the stream.
Reads bytes from the input stream.
Skips the number of bytes from the given number.
Adds the dimension to the network.
Returns the index of the grid.
Check if a file is a valid file.
Reads the data from the rcf file.
Read data from a section.
Reads a single row data from the input stream.
Creates a new network from a dataset.
Create a variable from a variable.
Set the map of the screen area.
Set the map of the map to the map.
Sets the area area of the lat lon map.
Sets the projection.
Add actions to the menu.
Redraw the redraw timer.
Update the screen size.
Set the selected value.
Returns the double value at the specified offset.
Retrieve a double value from the datap.
Returns the object associated with the specified index.
getter for gidid.
Read a single 32-bit integer.
Find the parameter with the given name.
Swaps the byte order to swap bytes.
Get the number of times a file in the given file.
Returns the file name for the given parameters.
This method initializes the list of file names.
Returns the path to the ddf file.
Returns the full path for the given file.
Adds a chsubsubsubscription.
Convert a reference to a time coordinate.
Read wmo data from a file.
Returns the uncompressed data from the specified offset.
Generate code for a single pack.
Generate code for the code.
Checks the message header.
Compute the code for the given position.
Encodes the given byte code.
Get the array of levels from the given array.
Gets the dualpolation levels.
Adds a variable to the network.
Adds a parameter to the network.
Unzip the given byte buffer from the given byte buffer.
Convert a byte array to a UUID.
Get an integer from a byte array.
Convert a byte array to a byte array.
Executes the dap request.
Gets the dap request state.
Sends an error message.
Set the anchor point.
Places the specified point.
Format the given text.
Replace all data variables in the structure.
Ensure that the array size is available.
Read an integer from the specified file.
Reads a 32-bit integer.
Reads a 32-bit integer.
Reads a 32-bit integer from the specified file.
Reads a 32-bit integer from the specified file.
Reads a float from the input stream.
Calculate a float.
Read 32-bit integer from the given file.
Count the number of bits in a byte array.
Creates a copy of this projection.
Returns a string representation of the WGS.
Escape the given string.
Unescape the given string.
Splits the given string into a list of strings.
Create fmrc invocations.
Returns the service string for a given path.
Returns the projected components of this map.
Gets the reference time.
Creates a Bbb-b-b-b-tree factory for the given
Entry point for index.
Reads a record from the given p1 message.
Checks if the network file is mine.
Calculate the lat-coordinate from the datacenter.
Acquire an area file.
Is this date before the given date.
Check if this date is before the given date.
Checks if the given date is after the given date.
Sets the value at the given index.
Add a new coordinate system.
Sets the value of the unit.
Get the string representation of this variable.
Initializes the configuration file.
Reads a catalog from a catalog.
This method processes a dataset.
Reads all categories in a directory.
Checks if lon is between lon and lon.
Returns a string representation of the specified latitude as a string.
Converts a longitude to a string.
Compares this quantity by name.
Get the selected dataset.
Set the selected dataset.
Create a tree path from the given node.
Open all catalog trees.
Set the catalog.
Sets the catalog.
Find the alias for a given variable.
Write a 32-bit integer.
Writes a string to the output stream.
Reads characters from the input stream.
Sets debug flags.
Adds a member to the list.
Hide the given member.
Gets the list of member names.
Find the member with the given name.
Gets the bitmap from the specified file.
Restore the state from the preferences.
Get all the rows in the table.
Returns the index of the model.
Get the array of members of a member.
Get the scalar double.
Get a java array of the given members.
Get a scalar float.
Get java array from a member.
Gets the byte representation of the given member.
Returns the byte array of the given member.
Returns the scalar value for the given member.
Returns an array of ints from the given members.
Get the scalar value associated with this member.
Returns a short array from the members of a Struct.
Returns the scalar value associated with this member.
Get long array from members of a member.
Get char from a member.
Get java array from a member.
Executes a single dataset.
Create a copy of this dataset with the specified parent node.
Transfer the metadata from the given dataset to the given node.
Gets the inheritableMetadata for the given datastore.
Adds a product to the list.
Displays the given formatter.
Shows the summary for the given record tracker.
Finds a record for the specified level.
Returns a string representation of the grid.
Calculates the long name for the grid.
Subtracts the specified intervals from the specified intervals.
Compare two byte arrays.
Parses the given XML document.
Processes the attributes of a datapoint.
Adds a list of coords to this partition.
Set the gaussian latitudes.
Parses a variable specifier from a section.
Returns a string containing a comma separated section.
Check if the box is a box.
Close the connection.
Execute the HTTP GET code.
Identifies the encoding for the given encoding.
Checks if the given axis is in the given shape.
Set input stream.
Reads the next character from the stream.
Start the task.
Parses the given string into a URI.
Excludes the given uri.
Returns null if not null.
Calculates the canonical path for the given prefix.
Checks whether the given datetime has been updated.
Copy this information from the given GribCollection.
Returns a list of all the names of this file.
Set the index file.
Gets the index file in the cache.
Returns the number of all registered counters.
Adds an attribute to the global attribute.
Adds a global attribute to the given array.
Deletes a global attribute from the root group.
Renames a global attribute.
Adds a variable to the specified variable.
Adds an attribute to the given variable.
Deletes an attribute.
Renames an attribute with the given name.
Create a file subtype.
Writes the headers and the headers to the WFS table.
Writes the members of the Geometry.
Convert the station dataset to XML file.
Writes the XML collection of stations.
Writes a string to the output stream.
Sends a XR RPC instruction to the network.
Writes an error message.
Close the device.
Flush the data to the server.
Checks if the given value is contained in the given array.
Returns the element at the specified index.
Shifts the range of the specified range.
Reads the data from the specified layout.
Read data from the layout.
Returns a subset of this vector with the specified bounds.
Sets the values of the values in the given array.
Make a double array of ints.
Gets the boundaries of a dataset.
Checks the requested variables.
Get a dataset from a dataset.
Get the resource path from the datap.
Calculate the vertical dimension of the grid.
Reads the pib file from the given file.
Finishes the connection.
Transfer the public metadata from the given parent.
Copy all the metadata from the given dds.
Translates the inherits metadata from the given dds.
Sets the contributors.
Adds a new dataset to this dataset.
Remove a dataset from this dataset.
Replace the given dataset with the given id.
Adds a service to this service.
Removes the service from the registry.
A list of services for this service.
Removes the local metadata from the cache.
Returns the value associated with the given key.
Validates the input stream.
Returns a list of String descriptors.
Construct the server path.
Get the WFS capabilities.
Extracts the feature from a line.
Check if the request parameters for the given request.
Handles the HTTP request.
Returns the capabilities of the specified URL.
Returns the length of this segment.
Returns the last modified time.
Returns a file as a file.
Returns a string from the given resource.
Sets the response content length.
Returns the request URI for the given request.
Gets the request path.
Gets the request string.
Get the parameter with the given name.
Saves the header to the file.
Writes a directory.
Make an uncompressed uncompressed data from the given subkey.
Count the number of bits.
Append a line to the output stream.
Create a document document document document.
Get the capabilities document.
Returns the record at the specified bounds.
Returns the coordinate at the specified index.
Adds an item to the list.
Handle the given exception.
Iterate over the specified positions.
Returns a map of NCE_process-process-processes for Nodes.
Checks if the given endpoint is valid for the given endpoint.
Sets the value of the property.
Factory method for creating Grib1.
Copy bytes from input stream to output stream.
Read content from input stream.
Read contents from input stream.
Writes the contents of the given string to the output stream.
Copies the given file into the output stream.
Copies the data from the given rAF file into a byte array.
Copies the given directory to the given directory.
Reads a file into a byte array.
Reads a file from a file.
Write content to a file.
Writes a string to a file.
Writes the given input stream to the given output stream.
This method is called when a parse exception occurs.
Dispatches an exception handler.
This method is called when a bad url is found.
Get catalog catalog.
Print the catalog.
Print the status of the request.
Print bad url.
Gets the reference date.
Read vlen values from a variable.
Read nmlML file.
Open a collection of NML file.
Checks if the given string is allowed.
Clean up bytes from a byte array.
Filter the given string in the given string.
Filter 8 bits.
Make sure the given string name is valid.
Match two strings.
Pads the given string to the given string.
Pads the given string to the given string.
Removes the given string from the given string.
Removes the given character from the given string.
Removes the given character from the given string.
Collapse all whitespace characters from a string.
Replaces all occurrences of the given character in the given string.
Replaces all occurrences of the given string with the given string.
Replace the given string with the given pattern.
Substitute the given string with the given substring.
Substitute all occurrences of the given string.
Removes the given string from the given string.
Replaces all occurrences of the given character from the given string.
Replace all occurrences of the given String in the given StringBuilder.
Replace the given string with the given substring.
Trims the given string from the given string.
Processes an update event.
Check the state of the cache.
Updates the given collection.
Gets all datasets.
Release resources.
Create a deep copy of the given structure.
Creates a copy of an array of the given array type.
Creates a copy of an array of the given arrays.
Create a copy of the given structure.
Create a copy of the given structure.
Calculates the forecast size of the forecast interval.
Returns the specified range with the specified range.
Creates a table analyzer for the given feature configuration.
Analyze the given feature type.
sync the grid reader.
Gets the latitudes from a string.
Swap two long arrays at the specified offset.
Swap the given byte array at the specified offset.
Swap the byte array at the specified offset.
Finds the coordinate axes for the given dataset.
Adds a parameter to the network.
Returns the common parent of this group.
Is this group?.
Sets the parent group.
Adds a new dimension to this group.
Adds a new dimension if it exists.
Adds a group to this group.
Adds an enum typed enum type.
Adds a variable to the list.
Removes the given dimension with the given name.
Makes the given path to the given path.
Converts an attribute into a String.
Print all das.
Looks up a variable by its name.
Writes a grid to a given grid.
Replace the values in the array with the values in the given grid.
Replace all values in the given array with the given values.
Get the xstart from the map.
Writes the grid to the grid.
Writes the response to the given servlet.
Create the top index file from the feature collection.
Gets the type of a file.
Update grib collection.
Update leaf collection.
Open GribCollection from data file.
Open GribCollection from data file.
Checks if the given URL matches the given pattern.
Adds a triple to the dictionary.
Looks up a string for a given key.
Sets the WellKnown Known Known Known Instance.
Insert a triple into the trie.
Get all datasets.
Find a dataset by name.
Set the feature to be updated.
This method returns the iterator for the feature.
Convert a feature list to a map.
Compares the given string by id.
Start the progress monitor.
Checks if a collection is updated.
Normalize the result.
Sets the object at the given index.
Returns the structure of the given index.
Copy all the structures from the given map.
Get a scalar object from a member.
Convert a scalar to a scalar double.
Convert a scalar integer to a scalar integer.
Get a float from this member.
Get a byte from a member.
Get a short from a member.
Get char from this member.
Get a string from a member.
This method returns the array structure of the given member.
Returns the sequence sequence for the specified member.
Get the ArrayObject from this member.
Returns the minimum value for the given long.
Evaluates the expression.
Returns a string representation of this constraint.
Checks if the specified node is references.
Evaluates whether the specified sequence matches the specified pattern.
Returns the number of entries in the map.
Computes all the enumeration types.
Computes all groups in the cluster.
Compile the Cece.
Checks if a file is valid.
Sets the action system.
Determine the byte order for a given kch.
Sets the byte order to use for the current platform.
Finds the given name.
Find a file header by name.
Returns the file header with the given name.
Prints all the components in the system.
Get the data point at the specified position.
Returns the distance between the given word.
Read a string from the input stream.
Unpacks the given part.
Returns a string representation of a given integer.
Writes the given ncfile to the given network.
Parse base element.
Processes a grid element.
Processes the elements of the given element.
Decode a list of DataDescriptors.
Replicates all data descriptors.
Get the filename of the dataset.
Get the column family.
Returns true if the given values are equal.
Returns true if this node is a reference.
Parses a string.
Checks if a variable is tiled.
Calculates the best time for the given time.
Convert lat lonlon rng rng rng.
Show the time series.
Returns a map of attributes to a map.
Get the values of this property.
Returns the numeric value at the specified index.
Writes a CDL file.
Sets the string value.
Sets the values of this array.
Scans the input stream.
Generates a proxy resolver for a given proxy handler.
Schedules a message.
Sets the datastream.
Downloads the data from the given invoker.
Prepares the GUI for the given platform.
Create the tool frame for the tool.
Returns a full name of the given axes.
Determine the rank of two points.
Finds the axis with the given type.
Get the projection for this coordinate.
Determine if this shape is geo-coordinate.
Checks if this shape is regular.
Checks if a set of dimensions are subset.
Checks if the given axis is contained in the given list.
Checks if the given axis exists in the given axis.
Checks if the given domain is contained in the given list.
Checks if the given axis is contained in the given list of axes.
Checks if the given axis is contained in the given axis.
Clones this map.
Get the selected bean.
Get the list of beans.
Get the list of selected cells.
Set the selected bean.
Restore the state of the view.
Creates an instance of an unknown unit.
Close the stream.
Determine if a variable is extra.
Checks if a variable is a coordinate.
Finds the coordinate from the given table.
Adds all data variables to the given table.
Adds a join join.
Create a station feature from a structure.
Creates a new LDAP node map.
Returns a SimpleUnitFactory for the given name.
Factory method for creating a new unit factory.
Checks if the given string is compatible with the given exceptions.
Checks if the given date is compatible with the given date.
Checks if the given string is a time unit.
Returns the conversion factor for the given input string.
Convert a double value to a given unit.
Returns true if this unit is unknown.
Returns the value of the scaled unit.
Returns a new RelationClause for the given operator.
Creates a new BooleanFunction.
Creates a new sub-clause.
Convert an array of arrays to a BufferedImage.
Iterates over all datasets in the given catalog.
Called when a dataset is found.
Find all direct datasets.
Returns the file or null if it exists.
Retrieves a file or cache if it exists.
Set debug warnings.
Returns a list of all files in the system.
Closes the cache.
Sets the seek position.
Flush the contents of the file.
Reads an integer from the stream.
Reads a short array from the input stream.
Read an integer from the stream.
Read an integer from the input stream.
Reads a long value from the input stream.
Read a float from the input stream.
Read a double value from the input stream.
Reads a string from the stream.
Reads a string from the input stream.
Writes a boolean array to the output stream.
Writes a short array.
Writes a char array.
Writes an integer array to the output stream.
Writes a long array.
Writes a float array into the output stream.
Write a double array.
Writes a string to the output stream.
Writes a byte array.
Searches for the given chunk.
Appends a query to a query.
Creates a new MFSFileFactory.
Finds the index.
Checks if the given index is a leaf.
Constructs a list of children.
scan children.
Read all files from the given index reader.
Get a list of gridsets.
Acquires a file cacheable.
Remove the cache element from the cache.
Emit the specified key.
Releases a file cacheable.
Computes the four-bit integer.
Updates the element in the cache.
Clears the cache.
Calculates the vertical transform.
Determine if the lat lon is lat.
Determine if the plane is z axis.
Find the xcoordinate of the given coordinate.
Finds the given coordinate from the given coordinate.
Find the x-coordinate from the data point.
Find the x-coordinate from the data point.
Returns the position of the arrow.
Returns the item at the specified pixel position.
Iterate over all mappings in the given collection.
Get remote files.
Returns the subcenter name for the subcenter.
Parses the given time unit as a String.
Returns a calendar period for the specified field.
Parses the given String to a Calendar period.
Subtract the number of days from this one.
Get the convert factor from the given field.
Get the value of the millisecond.
Returns the offset between two dates.
Synchronise the gem reader.
Initialize the tables.
Puts the data root into the tree.
Returns the longest path for the given request path.
Find the data root for a request.
Convert dataRoot to DataRoot.
Returns the date range for the given calendar.
Returns a copy of the specified coordinates.
Create a new NetcFileWriter for the given chunking.
Adds a group to the given parent.
Adds a typed typed typed type.
Deletes an attribute.
Renames a group attribute.
Add a record structure.
Close the connection.
Writes the properties of this bean.
Extracts the TDD data from the given datastream.
Divides the given offset.
Convert the given amount to a derived unit.
Creates a new double from the specified unit.
Convert a nested variable into a nested array.
Convert a Java variable to a top-level array.
Convert v1 data to a DataArray.
Closes all databases.
Open database.
Convert an integer value to a period.
Ensure that the given capacity is available.
Returns the value at the specified index.
Make a catalog for a given directory.
Create proxy resolver for given path.
Returns the coordinate type of the dataset.
Creates a new PribFactory for the given byte array.
Calculates the date from the given index.
Applies the given value to the given scale.
Parses a local concept file.
Adds a local concept from the input stream.
Clean up a line from a string.
Stores a concept into the local cache.
Writes the gREST_data table to the GTRITS table.
Writes a single lookup table file.
Print all local concepts.
Entry point for ECMA.
Returns the type of the given dataset.
Expand all datasets in the dataset.
Expand the full dataset.
Names of all datasets in the given dataset.
Creates a list of dataset names.
Creates a dataset for the given dataset.
Loads the image from the specified image.
Stop the video if not found.
This method is called when a status change is clicked.
This method is called when the source file is loaded.
Create a scaled image in the background thread.
Get the scaled image.
Get the scaled image string.
Returns a list of merged parts.
Generate the header for a station.
Searches for all CUC types.
Check if a group is valid.
Sets the root directory.
Create the root directory.
Get cache file.
Removes the cache from the given cutoff.
Clean up the cache.
Checks to see if the given float is a big-endian table.
Factory method for creating a new Datacenter axis.
Create a copy of this coordinate axis.
Is this data type?.
Get the formatted information for the given axis.
Gets the calendar from the attribute.
Set the list of rows.
Get the selected row.
Increment the selected row.
Gets the model index.
Set the selected index.
Sorts the given range of strings.
Swap two strings.
Returns an instance of the specified file.
Rotates the given latitude and rotates the given latitude.
Create an XML file from the given file.
Create an XML from input stream.
Create an XML from the given resource.
Creates the standard filename for the given app name.
Save the contents of this file.
Save this output stream to the specified output stream.
Writes an AtomicVariable to a Serializer.
Writes a datap to a datap.
Writes a datap to the datap.
Writes a sequence of datapoints into a datap.
Writes a record to the given destination.
Checks if a file is valid.
Gets the wmo ID.
Read a row number.
Returns the data at the specified index.
Extract data from a givensource.
Calculate the data matrix.
Create a file with the given coordinates.
Calculates the size of a grid file.
Create a file.
A list of stations.
Set the selected station.
Get the nearest station.
Selects the nearest station.
Get the selected station.
Get the name of the given type.
Get a list of stations.
Get a station by name.
Get data iterator from a station.
Get data iterator from a station.
Read data from the input stream.
Returns the dot product of this vector.
Returns the norm of this vector.
Normalize this vector.
Add all service services for a given dataset.
Returns the parameter with the given id.
Returns the parameter with the given id.
Adds a prefix to the prefix.
Adds symbol to symbol.
Returns the prefix of the given set.
Check if the given source is valid.
Returns the parameter with the given name.
Calculate crc.
Is thin data?.
Returns the index of the specified field.
Returns the string name for the given time range.
Returns the string representation of the forecast.
Set the next polygon.
Set the previous polygon.
Finds a property by its name.
Set the current selection of the given projection.
Extract the offset from the given time interval.
Registers an IOFile.
Registers an IO.
Checks if the specified SPI provider is registered in the given class.
Determine if the specified SPI provider is registered.
Check if the given location is open.
Open a network file.
Open a network file.
Open a file.
Open a file.
Find the global attribute with the given name.
Convert the given URL to a network file.
Writes a CDL file.
Writes a CRL file into a PrintWriter.
Writes a CDL file.
Adds an attribute to this group.
Adds an attribute to the specified group.
Adds a group to this group.
Adds a dimension to this group.
Removes a dimension from the specified group.
Adds a variable to this group.
Adds a variable to this graph.
Adds a variable to the given group.
Removes a variable from the given group.
Send an ip message.
Make sure we have a record structure.
Finishes the group.
Reads a variable section.
Read a variable from a byte array.
Read all variables from a list of variables.
Reads a variable from a variable section.
Calculates the full name of a given node.
Make a full name of a fully qualified path.
Returns true if the given MFileFilter is included in the given file.
Check if the given file is excluded.
Returns true if the given MFileFilter is true.
Append a value to this vector.
Dispatch a check value.
Force the value of a given type.
Checks if the given string is valid.
Check if a string is a valid short.
Check if a string is an integer.
Check if the given string is valid.
Check if a string is a float.
Check if a string is a double.
Get the AttributeType from the given Attribute.
Checks if the given dataset is viewable.
Checks if a string is a valid boolean.
Checks if the given string is a valid alphanumeric string.
Checks if the specified alphanumeric string is valid.
Determines whether the given path contains a file path.
Convert a hexadecimal code point to a hexadecimal string.
Returns the value associated with the given key.
Compare two grid definitions.
Processes the input stream.
Processes the given input stream.
Removes the given string from the given string.
Mark the stack variables in the stack.
Method to write ncML file.
Gets the value from the given key.
Writes the CDL file into a String.
Creates a station.
Validates the given output.
Get the azimuth from the stream.
Returns the elevation of the message.
Get the latitudes of this ray.
Get the longitudes of this ray.
Get the altitudes of this ray.
Get the azimuths of this ray.
Get the elevation of the rays of this ray.
Selects a structure from the given list of members.
Selects a structure from the given variable.
Adds a variable to this member.
Sets the member variables.
Sets the parent group.
Calculates the total size of this variable.
Reads a structure from the specified index.
Read a sparse structure from the input stream.
Get the data category.
Returns the name of the class.
Adds a parameter to the request.
Returns the header as a string.
Convert the lat lon coordinate to a map.
Returns the version number from the given name.
Returns true if the z axis is positive.
Set the color scale parameters.
Render the plan view.
Is this group?.
Returns the type of the given message.
Installs the given table with the specified alignment.
Sets the API key.
Creates a label from the given string value.
Creates a label from the given lines.
Creates a label from a string.
Connects to the given properties file.
Extracts list of IP types from cloud.
Creates a connection to a MySQL connection.
Removes the given logger from the given logger.
Compile the given source code.
Adds a source code to the compiler.
Reads a graphic from a graphic.
Get the next frame from the frame.
Replies the list of selectable persons.
Initializes the list of listeners.
Get a person by id.
Adds a validation message to the specified validator.
Sets the person id.
Creates a view model for the given view type.
Loads all available countries from the given location.
Creates a new step step.
Create a new FXML step.
Removes all registered listeners from the given map.
Create the index event.
Accessor method to access the specified object.
Load a FXML tuple from the given resources.
Query for a style row row.
Get the pixel value from the image.
Get the pixel values from a byte array.
Validates the input reader.
Creates an image with the specified tile image.
Sets the tile data.
Execute a raw query.
Wraps a query to a raw query.
Executes the query.
Executes the given query.
Handles a cursor.
Get the feature row from a geometry index.
Register a table.
Retrieve a tile row from the tile coordinates.
Get the coverage data.
Get the coverage data data for a tile.
Get the coverage data for the GeoPackage.
Get the coverage data from the tile request.
Get the coverage data from the tile matrix.
Get the coverage data in the tile matrix.
Get the coverage data from the tile matrix.
Get the tile matrix from the coverage data request.
Get the value for the given tile row.
Set the icon for the column.
Get the icon for a geometry type.
Opens the database connection database.
Convert byte array to Bitmap.
Convert a bitmap to byte array.
Create a new table.
Delete the GeoPackages.
Get the metadata for a GeoPackage.
Get the ID of a GeoPackage.
Create a table metadata from the cursor.
Creates the extension.
Get the feature row from a cursor.
Execute a raw query.
Query for a bounding box.
Query for the given geometry.
Count the number of geometries in the envelope.
Query for a custom cursor.
Build the WHERE clause.
Query the feature for the feature projection.
Get the count of the feature bounding box.
Query for the given envelope.
Query for the feature at the specified range.
Count the number of times the specified range.
Sets the bitmap data.
Sets the bitmap data.
Sets the bitmap config.
Get the number of tiles in the tile map.
Adjust the bounds of the bounding box.
Updates the bounds of the bounds of the view.
Adjust the bounding box for the zoom package.
Adjusts the bounds of the GeoPackage in the GeoPackage.
Get the bounding box for the zoom level.
Get the tile grid.
Query for a tile row.
query-by method for the tile table.
Returns the closest zoom level for the specified length.
Get the approximate zoom level for the specified length.
Query for a tile table.
Delete a tile from the tile table.
Count the number of tiles in the tile table.
Determine whether the Google tiles tiles are Google tiles.
Get the pixel value from the specified image.
Get the pixel values from a byte array.
Validates the given directory.
Creates a snapshot of the TIFF image.
Sets the pixel value of the image.
Get the GeoPackage by name.
Get the current row.
Moves the next invalidator to the next invalid state.
Query for style id.
Delete by base id.
Get a rectangle from the bounding box.
Get a rounded rectangle from the specified bounds.
Deletes all existing databases.
Create and close the GeoPackage.
Check if a database exists in the database.
Validates the given SQLite.
Validates the given SQLite.
Validates the given database.
Validate database header.
Check if the database header is valid.
Adds a list of databases to the GeoPackage.
Adds the databases to the database.
Import the GeoPackage from the database.
Get the GeoPackage metadata.
Get the GeoPackage metadata from the external path.
Create a new geometry.
Populate the geometry metadata from the geometry table.
Delete the GeoPackage ID.
Creates or updates the given geometry.
Update the geometry metadata.
Count the number of GeoPackage in the GeoPackage table.
Create a geometry metadata from a cursor.
Updates the contents of this table.
Draw a tile with the specified text.
Queries all the attributes for the specified IDs.
Check if the cursor is valid.
Get the user mapping.
Get Simple Attribute DAO.
Returns the list of mappings for the given base relation.
Returns all mappings for the given extended relation.
Checks if a user has a user mapping.
Count the number of items in a user.
Register a cursor for the GeoPackage.
Reads a table from GeoPackage.
Get the tile tile tile.
Draw a tile from the tile matrix.
Reproject a tile from a tile.
Retrieve the tile results from the tile matrix.
Calculates the width of the image.
Sets the density of the feature.
Sets the line paint.
Sets the polygon paint.
Draws a tile from the specified coordinates.
Draw the tile at the specified location.
Draws a tile query index.
Query the number of features that have been indexed.
Query the number of features in the bounding box.
Query the feature index.
Query the feature indices for a bounding box.
Draw the tile query on the tile coordinates.
Simplify all the points in the list.
Returns the paint paint for the feature style.
Returns the paint paint for the feature style.
Returns the paint paint for the feature style.
Returns the paint paint for the feature style.
Get the paint style for a feature.
Get the paint for a style.
Get the paint for a style row.
Get the paint for a feature.
Puts the bitmap to the given icon row.
Wraps the content of the content of the given content.
Creates a bitmap that creates a bitmap.
Recycle the bitmap.
Get the bitmap for the given layer.
Get the canvas for the given layer.
Create the bitmap for the given layer.
Get the style mapping for the feature table.
Get the style of the style table.
Get the Icon DAO.
Get the feature styles for the feature table.
Get the styles for the feature table.
Get the style for the feature table.
Get the icons for the feature table.
Get the icon for the feature table.
Get the feature styles for a feature row.
Get the feature styles for the feature table.
Get the styles for a feature row.
Get icons for a feature row.
Get the styles for the feature mapping.
Get the icons for the feature mapping.
Set the feature style for the feature table.
Sets the style of the feature table.
Sets the icon for the feature table.
Sets the feature style for the feature row.
Set the style for the feature table.
Sets the styles of a feature row.
Set the style for the feature table.
Set the style of a feature row.
Set the style for a feature row.
Set the style for the feature table.
Sets the icon for the feature row.
Set the icon for the feature table.
Sets the icon for the feature row.
Sets the icon for the feature row.
Set the default icon for the feature table.
Get the style id.
Get the icon for the given icon.
Insert style mapping.
Delete the table style for the feature table.
Delete the icon for the feature table.
Delete the style mapping table.
Delete the feature mapping table.
Delete the style mapping.
Get all style ids for the feature table.
Get all icon ids for the feature table.
Get all style ids for the feature table.
Get all icon ids for the feature table.
Returns the bytes of this image file.
Flush the image data to the output stream.
Get the pixel from the given coordinates.
Reads the data from the image.
Draws a feature row from the tile table.
Draws a line path.
Draws a polygon path.
Adds a line to the bounding box.
Adds a polygon to the polygon.
Returns the cache for the given table.
Removes the feature from the feature table.
Clears all cached features and resize the cache.
Get the styles for the table feature.
Get the icons for this table.
Get the RTree Index for the feature table.
Set the width of the column.
Set the height of the height column.
Returns the derived dimensions of this image.
Calculates the density of the specified tile.
Reads a blob value from a user.
Read a table.
Returns the color of the default color.
Validates the given color.
Create a color from a hexadecimal string.
Get the GeoPackage manager.
Set the progress of the feature table.
Returns the index of the feature.
Indexes a feature row.
Delete the feature index.
Delete the feature row from the given row.
Delete the feature index.
Delete the feature index.
Returns true if this feature is indexed.
Get all feature types in the index.
Query the feature table index.
Count the number of features in the feature table.
Get the bounding box.
Query the feature table.
Returns the index of the feature type.
Gets internal file.
Gets internal file path.
Get the geometry type.
Sets the geometry type.
Check if the given URL is bounding box.
Replace the given url with the given coordinates.
Checks if the given URL is an Xyz.
Replace the bounding box in the given URL.
Replace the bounding box with the provided coordinates.
Get the Geometry data from this table.
Index the feature row in the GeoPackage.
Update the last indexed time package.
Delete the feature index.
Delete the feature index.
Returns true if the feature has been indexed.
Query for the feature table.
Query for the feature table.
Get the count of the feature in the feature table.
Query for Geometry.
Count the number of geometries in the feature table.
Query for the bounding box with the specified projection.
Get the count of the feature bounding box.
Get the bounding box for the feature projection.
Get the geometry metadata from a cursor.
Get the feature row from a cursor.
Get the feature row from the geometry metadata.
Get the Tile DAO table for a feature table.
Get the feature DAO table for a tile table.
Get the bounding box in the feature tileset.
query-by method for custom users.
Get all base ids for this user.
Get a list of all related IDs.
Delete all user IDs.
Delete all related entities.
Delete by id.
Builds the WHERE clause for the related IDs.
Create a new GeoPackage.
Delete the GeoPackage from the database.
Renames the GeoPackage metadata.
Renames the column name.
Get all GeoPackages.
Get the GeoPackage metadata.
Get the GeoPackage metadata by id.
Get the GeoPackage metadata.
Checks if the GeoPackage is external.
Get the external data from the path.
Get metadata by name.
Get metadata by name.
Get list of metadata by name.
Create a GeoPackage metadata.
Called when a view is created.
Adds a ParagraphView to the view.
This method is called when a view is created.
Create a custom view.
Append an event to the buffer.
Find the logback configuration from the system properties file.
Returns the resource for the given resource.
Loads the configuration from the server.
Reports the status of a resource.
Converts a socket address into a string.
Create a new executor service.
Starts the given converter.
Appends the given event to the event.
Adds a substitution property.
Returns the value associated with the given key.
Compiles the given node.
Parse the literal.
Converts a fixed date to a regex string.
This method is called by the program.
End the evaluator.
Initializes the logger with the given key.
Creates a new ContextSelector for the given context.
Sets up the properties file.
Returns the path to the external storage directory.
Gets the directory path.
Returns the absolute path for the given file.
Evaluate the event.
Get the string value for the event.
Updates the mask if necessary.
Get the filter decision for the given event.
Creates the key managers for the given context.
Create trust managers.
Loads the keystore from system properties.
Returns the location from the system property.
Returns the URL for a given resource.
Returns true if the handler is thrown.
Stops the hook.
Prints a single error message.
Print error.
Prints a single status message.
Returns the entry from the map.
Called when a key is ended.
Parses a string representation of the given string.
Rename the source file.
Checks if the given file is on the remote volume.
Returns the value of the given key.
Gets the system property.
Sets the mdc property map.
Returns a string representation of the mdc property map.
Extracts the stack trace element from the stack trace.
Checks if the given class list is in the framework.
Adds a new status message.
Adds a listener to the console.
Lookup the action in the given element path.
Returns the list of applicable actions for the given element path.
Set the class loader.
Returns the string value for the given key.
Decompress the given name.
Get all MethodDescriptors for a given class.
Returns all property descriptors for the given class.
Starts the server.
Add on console status.
This method is called when an exception occurs.
Returns the default value for the given event.
Determine if the given event is discardable.
Starts the shutdown hook.
This method is called when the method is invoked.
Returns the list of supported protocols.
Returns the list of supported cipher suites.
Returns a list of all of the strings in the given list.
Converts a string to a scope.
Sets the properties of the given context.
Adds an appender to the appender.
Detaches the given appender.
Detaches an appender from the given name.
Called when a parent level is updated.
Calls the given event on the log.
Detaches the given appender from the given appender.
Create a child logger.
Call this method to call the turbo filters.
Logs a SLF event.
Executes the given socket and returns the resulting socket.
Checks if the given file is missing.
Converts the given level to an integer.
Convert an integer value to a default level.
Counts the number of resources in the given resource.
Loads a resource from the given classloader.
Returns the class loader for the given object.
Gets the class loader.
Returns the class loader for the given class.
Starts the bundle.
Returns the tag for the given event.
Initializes the properties file.
Returns the index of the first index of the given name.
Checks if an event is true.
Returns the client name for the given socket.
Checks if the given files are on the given files.
Append an event to the cache.
Sends an event to the buffer.
Add a mdc value pair.
Creates a dynamic converter.
Create a composite converter.
Determine the compression mode.
Configure the URL for the given URL.
Loads a file from the given file.
Executes the specified input stream.
Build the interpreter.
Executes the configuration.
Executes the specified SAX configuration.
Returns the property value for the given key.
Sets the display name.
Checks if the context is status of the context.
Returns the timestamp of the current status message.
Starts the given pattern.
Returns the effective converter map.
Returns the header of the file.
Returns the file footer.
This method is called from the program.
Ends an exception.
Creates a copy of this collection.
Adds a client to the pool.
Removes a client from the pool.
Returns a copy of this context.
Returns the value of the given type.
Gets the trigger decision chain.
Checks if the device is Android.
Initialize the configuration.
Get all files in a given file.
Retrieve the status of the status log.
Gets the database file.
Clear expired logs.
Check if the last expired time is expired.
Append Subscription.
Append the primary sub-sub-event sub-partitions.
Bind an event to the given log event.
Translates object into string.
Computes the reference mask for the given event.
Merges the property map.
Insert exception.
Returns the length of the given path.
Gets the effective level.
Checks if the given class is instantiated.
Returns the child value of this map.
Processes the given URL.
Open the given URL.
Trims the head and tail of the head of the specified event.
Checks if the server is started.
Returns true if the error is transient.
Sets the default hosts.
Ensure that the local index is valid.
Synchronously sync the data.
Synchronise the update if needed.
Wait for a task.
Lists all indexes in the database.
Convert an InputStream to a String.
Convert input stream to byte array.
Consume the given connection.
Determine the list of host names.
Sets the type.
Starts the search index.
Puts the value into the cache.
Returns the value associated with the given key.
Blocks until all threads have completed.
Reports a failure to a test.
Copies the given file into a directory.
Initializes the simulator properties file.
Gets static field value.
Finds a method by its name.
Formats the given value into a human readable string.
Formats a double to a string.
Format long.
Writes a JSON string.
Write a long integer.
Write a single double value.
Read json numeric string.
Reads a JSON integer from the stream.
Read a JSON double from the stream.
Read json string from the stream.
Executes the given method call.
Invokes a method.
Enqueue a method call.
Gets the resource from the given location.
Update the decoration.
refresh workspace view.
Get the resource history view.
Open an editor.
Reports an authentication failure.
Prompts the given server.
Creates the default page for the given page.
Starts the thread.
Sets the keepalive to keep alive.
Sets whether or not the root node is present.
Set the owner of this node.
Adds a condition to the condition.
Create a new condition term.
Checks if this condition matches the given condition.
Returns a reader for a given rule source file.
Loads the configuration file.
Reads the configuration from the given stream.
Returns the menu for the given control.
Add response body.
Adds a href to the document.
Inserts a new href into a new href.
Remove a href from the root page.
Add a prop stat.
Get the href of this element.
Returns the status of the element.
Gets the stack frame.
Checks if the given class is a subtype of the given class.
Checks if the given collection contains the given string.
Resets the contents of the input stream.
Create the actions for this menu.
Adds a connection.
Returns the value associated with the specified property id.
Removes a connection from this connection.
Sets the location of the property.
Sets the value of the property.
Sets the size of the component.
Returns a string representation of the given array of constraints.
Adds lock entry.
Add a child vertex.
Remove a child vertex from a vertex.
Starts the cache.
Stop the process.
Gets the resource string from the resource bundle.
Returns the resource bundle.
Get the formatter for the rule.
Sets the date time pattern.
Sets the date time.
Create an error status.
Log an error message.
Add a field editor.
Adjusts the grid layout.
Applies the font to the fields.
Calculates the number of controls for this field.
Initializes the field editor.
Fire a property change event.
Set the active editor.
Computes the given zoom bar.
Determine the dialect of the given backend.
Factory method for creating a new Context.
Save the file with the given parameters.
Create the table listeners.
Adds a URL to the given URL.
Puts the given URL into the given URL.
Adds a token to this node.
Adds a child node to this node.
Set the contents of this file.
Adds a condition.
Adds a new condition token to the state.
Checks if the given condition matches the given condition.
Returns the property value from the root node.
Returns the status of the element.
Sets the property.
Get the last line from the string.
Get the last line from the current line.
Bind a string to the given id.
Bind the given string to the given string.
Binds a string to the given identifier.
Creates a process.
Creates a sample sample for the given example.
Returns the runtime id.
Visit a retetex.
Visit node.
Returns the dot ID for the given object.
Adds a property to the list.
Add a set of properties.
Returns a new locator for the given resource URL.
Gets the presentation reconcile.
Returns true if this object is the same as the status.
Checks if the given condition is contained in the given condition.
Parses the given stream token.
Adds the page to the page.
Deletes the given resource.
Perform HTTP POST request.
Get the status of a job.
Executes the pull operation.
Handles the pull results.
Sets the value at the specified index.
Adds an active lock.
Filters the list of proposals on the given prefix.
Reads the prefix from the document.
Calculates the rows of a vertex.
Returns the part of the given element.
Returns the image descriptor for the given path.
Declare an image for the given key.
Adds a vertex to the graph.
Returns the index of the given vertex.
Returns the width of this row.
Print all vertices.
Optimize the data table.
Initialize the graphical view.
Draws a new graph.
Returns the breakpoint for the given source source.
Sets the href.
Checks to see if the davadoc is available.
Copies the given properties from the given destination to the given destination.
Processes a multi status response.
Extract prop stats from multi status.
Gets the content of a datastream.
Returns an enumeration of all locks.
Returns the property with the given name.
Returns the context.
Acquires a lock.
Move the specified destination to the specified destination.
Check if the device is in the context.
Refreshes the lock for the given lock token.
Removes the specified property from the specified collection.
Removes a property from the specified property.
Set the content of an input stream.
Sets the properties for the specified davadoc.
Sets the property.
Unlock the lock.
Updates the specified version.
Executes the version control.
Deletes a VAV.
Extract the status code from the given status code.
Checks if a property has a child.
Writes the request body.
Convert a byte array to a hexadecimal string.
Convert an array of ints to a hexadecimal string.
Sets all properties of the root node.
Sets if the property name is a property name.
Sets the property.
Removes the last word from the given prefix.
Update the tree.
Writes the contents of the stream to the given output stream.
This method is called by the loop.
Mark parser errors for parsing errors.
Skip whitespace.
Adds a resource to the browser.
Commit file changes.
Returns the value of the age attribute.
Returns the length of the content.
Returns the maximum number of forward forwards.
Returns true if the configuration should be overwritten.
Gets the passthrough.
Gets the timeout.
Puts the given key into the context.
Sets the timeout.
Open a file.
Parse the contents of a file.
Extract metadata from a string.
Removes the object metadata from the given text.
Adds tokens to the given array.
Get the children of the given text.
Get all children of a given object.
Adds a child node to the list of children.
Prints the tree.
Prints a single node.
Print tabs.
Reads a JSON value from the given string.
Returns the image descriptor for the given image id.
Executes the given request.
Sets a request header field.
Create the rule launcher for the given project.
Create the rule file.
Create the rule flow.
Creates the rule launcher for the given project.
Get the list of all the elements in the list.
Create an image from the output stream.
Returns the field name for this node.
Returns the evaluator for the given node.
Returns the value of the node.
Adds Guice properties to Guice.
Set the baseline for the given baseline.
Bind a member to the specified member.
Returns the member with the given name.
Optimize the vertices.
Initializes the panel.
Validates the page group.
Generate entity tag.
Returns the opposite vertex.
Validates the given list of ops.
Checks to see if a user is right for the given user.
Returns the username for the given public id.
Adds the YAM file to the user.
Verifies if the given user is valid.
Clear the secret keys.
Extract the public ID from the given poi.
Checks if the given string is valid.
Creates a new evaluation for the given node.
Creates a new evaluation for the given node.
Clears the cache.
Checks if the JVM is a JDK 15.
Returns the package name for the given object.
Get the package name from the given class.
Returns a unique descriptor for the given object.
Returns the class for the given argument.
Checks if two classes are more than the given classes.
Returns the value of the property on the given target object.
Returns all property descriptors for the given class.
Returns the property descriptor from the given target class.
Returns the read method for the given target class.
Reads a char from the stream.
Parse the projection.
Select all the elements in the given list.
Parses the given object.
Returns a double value as a double.
Converts value into BigInteger.
Converts value into BigDecimal.
Converts an object to a String.
Returns the numeric type for the given value.
Converts the given value into an object.
Get an integer value from the given object.
Get numeric type.
Get the numeric type for the given object.
Creates a new Number from the given type.
Pop the current evaluation.
Generate OGNL getter method.
Generate OGNL method setter method.
Flattens the tree into a tree.
Initializes this node.
Escape the image.
Sets the root context.
Returns the value for the given expression.
Sets the value of the given expression.
Sets the value of the given node.
Checks if the given expression is a constant expression.
Gets the default watch service id.
Reload the class loader.
Returns an archiver for the given archiver.
Checks the given archiver for the given archiver.
Reads a file as a String.
Creates the project.
Add a system property.
Adds a system property to the system property.
Change the selected directory.
Refresh the button state.
Creates a file observer for the given path.
Return the selected folder.
Creates a new folder.
Checks if a file is valid.
Starts a background thread.
Starts the list.
End the list of paragraphs.
Handles the motion of an edge.
Get the crop rectangle.
Compute the layout for the image.
Register a listener for the given listener factory.
Adds the span watcher to the span.
Gets the view, which is used to display the preference's title.
Returns the drop down item with the specified position.
Convert the given text into a single paragraph.
Check if a paragraph is within a paragraph.
Creates a file for a given file.
Determine the original file.
Returns the namespace for the given namespace.
Returns the local name of the given string.
Sets the value of the specified attribute.
Sets the value of the specified attribute.
Get the font name from a file.
Get the font name from a file.
If a new buffer is available.
Writes a byte array.
Writes a byte into the buffer.
Writes the input stream to the given input stream.
Writes the buffer to the given output stream.
Converts this buffer into a byte array.
Set the font size of the spinner.
Converts a path to a Unix path.
Recompute the focus event.
Ensure that the view is visible.
Center the given highlight view.
Resets the document locator.
Validates the given string.
Adds a new element type.
Sets the value of the specified element.
Sets the parent of the given element.
Returns the element type associated with the given name.
Returns the entity with the given name.
Clean up paragraphs from the given editor.
Applies the given value to the given editor.
Check if the given domain is valid.
Called when an operation is executed.
Redo the given editor.
Replace all occurrences of the given source.
Gets the thread status.
Sets the decoding options.
Returns true if the thread has the specified thread.
Decode the given file descriptor.
Returns the set of RTreeface types for the given context.
Get the asset fonts for the given context.
Returns a map of all system fonts.
Initialize the XML file.
Returns the reader for the given input stream.
Returns the input stream for the given public id.
This method is called when a new element has been set.
Expand all entities in the given string.
Lookup the entity from the given byte array.
Restart the given element.
Populates the stack.
Restart the stack.
Returns the prefix of the given name.
Checks if the given namespace is foreign.
Trims the given String.
Splits the given string into an array of strings.
Implements the given element.
Save the instance state to the saved state.
Unregisters the editor.
Called when an event is clicked.
Called when a link is received from the link.
Calculate the base matrix.
Returns the maximum zoom level.
Checks if the text exists in the given editor.
Find spans from paragraph.
Pick a directory from the given path.
Rotate the image with the specified degree.
Set the output stream for the system.
Writes a character to the output stream.
Writes a string to the output stream.
Determine whether a boolean value is a boolean.
Writes the given string to the given string.
Write namespace.
Write the name of a qualified name.
Creates a stream if it exists.
Wait for the stream activation.
Complete snapshot snapshot snapshots.
Wait for the next request.
Retrieve records from the given stream.
Perform the given action on the given action.
Tries to attempt the given action to the given action.
Checks if a bucket is accessible.
Loads snapshots from the given store.
Triggers a wildcard expander.
Replace all occurrences of a String in a String.
Deletes any characters from the given String.
Adds a report to the list of resources.
Update properties with the given key.
Get configuration properties.
Creates the auto-readable input stream for the given wro file.
Converts a map of pre-processors to a map.
Compile the given content.
Reloads the cache.
Reloads the property with the given value.
Gets the wrapped servlet request.
Creates a new transformer for the given filename.
This method is called when an error is received.
Sends a redirect to the given location.
Processes a resource.
Creates an expander handler for the given resource.
Locate an input stream for the given uri.
Creates and returns the Wro configuration object.
Register the property change listener.
Processes a request.
Sets the configuration.
Helper method to identify a collection of groups.
Merges the given model into the given model.
Locates the given uri.
Applies the post processors to the given cache.
Returns a decorator for the given resource.
Processes a resource from a Reader.
Splits the options into an array of strings.
Load properties from a stream.
Parse properties from a string.
Creates a new WroManagerFactory.
Persists all resource fingerprints in the given group.
Checks if a group is target.
Extend plugin classpath.
Returns the resource as input stream.
Initializes the WroManagerFactory.
Sets the transformer for the transformer.
Compile the given content.
Processes a list of resources and merge them into a single resource.
Processes the given list of resources.
Executes the given list of resources.
Applies the preprocessing to the given resource.
Decorate the preprocessor.
Persist the fallback configuration file.
Returns all the fields of the given object.
Rewrite the given CSS uri.
Compute the new image location.
Adds a model transformer to the Wro model.
Servlet process bundle.
Initializes the folder path.
Extract variables from a string.
Parse the CSS document.
Replace all variables in a CSS file.
Converts a postprocessor to a preprocessor.
Returns true if the given type is eligible for the given type.
Send gzip response.
Returns a list of PathPattern for the given object.
Constructs a PathPattern for the given object.
Creates a new resource change handler.
Persist a resource.
Executes the CSS import.
Filter all non-empty items in the given collection.
Checks if the request is minimized.
Find all resources that have been imported.
Computes the absolute URL for the given resource uri.
Creates a string representation of the given items.
Gets a list of aliases from a CSV file.
Creates the context for the given scope.
Evaluates the given reader.
Evaluates the given script.
Processes the input stream.
Checks if the request is a valid handler.
Creates the request path for the given cache key.
Renames a group from input stream.
Computes the destination folder.
Processes a group.
Checks if a resource is required for a group.
Locates an input stream for the given context.
Creates a new object pool.
Locates the input stream for a given resource.
Open a jar file.
Extracts the path from the URI.
Is minimized?.
Adds the given uri locator to the factory.
Decorate a WroModelFactory.
Adds a dependency to the list.
Processes the given string.
Log the summary.
This method is called by the process.
Returns the read lock for the given key.
Creates a new process.
Parse properties from a string.
Returns an array of TaskInfo objects.
Gets the compilation command.
Parse the given header.
Adds no cache headers to the map.
Get the path from the request context.
Gets servlet path from request location.
Checks if a request matches the given path.
Loads a regexp resource.
Copies the contents of a Reader to the given writer.
Creates a temporary file.
Clean up an image URL.
Sets the value of an attribute.
Generate the data URI for a given input stream.
Generate the data URI for the given byte array.
Sets the context.
Unset the context.
Check if the cache is valid.
Called when an exception occurs.
Check if the resource is changed.
Update the hash of the given group.
Checks if the given type is contained in the given resource type.
Creates a new process.
Parse group resource.
Create a group from the given element.
Parse a resource.
Find resources for a group.
Stop timer timer.
Get a named timer for the given timer.
Returns a named timer for the given timer.
Print the aggregated statistics.
Notify all workers waiting for the process.
Updates the count of processed counters.
Updates the count of the statistics for the snapshot.
Update if the given value is smaller than the given value.
Returns the default visit for the given rule.
Installs the given property on the given property.
This method ensures that the progress is loaded.
Restores the contents of the current state.
Returns true if the classification state is consistent.
Restores the taxonomy.
Restores the instance from the given Entity.
Gets the evidence of the ontology.
Executes the pre-initializer.
Invalidate this stage.
Returns the collection of individual items in the tree.
Returns all the items in the tree.
Thrown when the given method is unsupported.
Removes all elements from the specified position.
Removes the specified values from the specified positions.
Returns the position of the specified element.
Checks if the object is contained in the specified array.
Adds an element to the specified array.
Validates the occurrence number of occurrences.
Adds a timer to the timer.
Adds a rule to the timer.
Puts the value into the given key.
Removes the entry from the given key.
Increases the capacity of the internal map.
Shrink the pool.
Save configuration file.
Print all declarations of the given class.
Get all the instances of the given node.
Clear all buckets.
Combine two lists.
Copies the input stream to the output stream.
Gets the Completeness monitor.
Processes the taxonomy.
Submit an input to the queue.
Appends an element to the given element.
Marks the given query to the given query.
Adds a direct type node.
Checks that the chain matches the given property.
Creates a Map that contains all elements in the given set.
Adds the given element to the given s.
Removes the specified element from the specified s-bit set.
Adds a counter to the counters.
Log memory usage.
Sets the configuration options.
Shuts down the shutdown.
Print header.
Print values from a string.
Gets a string from a char.
Adds a rule to the rule.
Writes a resource.
Returns the action input parameter from the request.
Returns the property descriptor for the given property path.
Returns the required parameters for the request parameters.
Checks if the given type is a single value type.
Adds a link to the link.
Sets the type of the link.
Add a link to the HREFRAME link.
Adds a revision parameter.
Add a link parameter.
Expand the given link.
Gets the list of links.
Gets the list of revs.
Returns true if there are no more required parameters.
Returns the string representation of the value.
Returns true if the property is hidden.
Checks if the property value contains the property value.
Determine if the property value is included in the feature.
Returns true if this request is required.
Returns the default value for the request.
Returns the parameter name.
Gets the property from the action parameter.
Gets the vocabulary from the given bean source.
Returns the query string.
Append the form for the given action.
Print input button.
Append an input parameter to the given action.
Combines the given balance builder with the given builder.
Returns the URI components of this template.
Returns the URI template for the given action.
Returns the first node with the given name.
Returns the first node with the given rel.
Returns an iterator over the elements in this node.
Creates a persistent hash map from the specified values.
Creates a new TreeMap from the given iterable.
Create a new persistent tree map.
Returns a sorted set of elements in the cache.
Returns the last key.
Given an iterable over the elements of an iterable.
Drop the given predicate from the given predicate.
Creates a new one of the elements in the given array.
Returns a tuple2 tuple from the given entry.
Matches the given function to the given function.
Register a list of classes.
Returns the element at the specified index.
Append the given value to this vector.
Concatenates all elements in the given iterable.
Creates a new immutable set of items.
Creates a new list of objects with the specified items.
Creates a new set of objects with the specified items.
Creates a new list of objects from the given items.
Create an unmodifiable array from the given items.
Create a StringBuilder for a space.
Convert an array of objects to a String.
Returns a lazy copy of the given consumer.
Executes the externation.
Inserts the given item at the given index.
Creates a copy of the elements of the given array.
Suspends the thread asynchronously.
Notifies the async operation before the transaction.
Builds the components for the given service descriptor.
Validates the given directory.
Adds an inheritance link to the given class.
Copies all methods from the given source class.
Copies all methods from a given array of methods.
Removes the sbb entity with the current context loader.
Returns true if the given param name is enabled.
Gets the set of all resources associated with the given component.
Installs the given service.
Uninstalls the service.
Checks if the given resource name exists in the system.
Returns the set of usage parameters set for the given ID.
Reset all usage parameters.
Display the result as a display.
Unpacks the given array into an array of strings.
Executes the given event.
Binds a name to the cache.
Unbinds the given name.
Looks up a node by its name.
Returns a map of all the names of this node.
Moves the given event to the next event.
Checks to see if this trace level is higher than the given level.
Extracts a jar file from the given jar file.
Copies input stream to output stream.
Puts an object into this node.
Attaches the given sbb entity id into the system.
Detaches the given sbb-entity entity id.
Returns true if the sbbbs is empty.
Returns the set of all registered attachments in the system.
Attaches a timer to the specified timer.
Remove a timer from the timer.
Returns true if the timer is attached.
Get the set of attached timers.
Adds the given name to the namespace.
Removes the given name from this node.
Returns true if this node is bound.
Returns a copy of all the names of this node.
Sets cmp attribute.
Returns the cached value associated with the given attribute name.
Returns a copy of the cmp attributes.
Initializes the notification list.
Sends a usage notification.
Download the given UFS from the remote server.
Update the deployed components.
Install a deployable unit.
Uninstalls a deployable unit.
Processes the given unit.
Get the display status.
Checks if a log record is logable.
Returns the logger for the given log record.
Gets the set of sbb entities.
Returns the permissions for the given permissions.
Returns all the code sources for the given policy.
Check if a profile exists.
Remove the profile from the profile table.
Update configuration properties.
Starts the running thread.
Called when the service is stopping.
Activates the entity that is active.
Deactivates the resource.
Schedule the end of all activities.
Remove this object from the context.
Returns the resource adaptor interface for the given resource type.
Called when a service is active.
Determine the activity handle for the given activity.
Called when an activity is ended.
Update ra-configuration.
Verify configuration properties.
Called when the resource is stopping.
Is active.
Unset the resource.
Unset the resource adapter context.
Unset the faulter context.
Builds the profile map.
Removes the resume from the server.
Get the set of activity contexts.
Returns the usageMapping for the given parameter set.
Decorate the abstract class.
Fire an event.
Fire an event.
Gets profile cmp.
Returns all abstract methods from the given class.
Extract all abstract methods from the given interface.
Create the object pool.
Remove object pool.
Checks if the alarm source owns the given alarm.
Attempts to fire an alarm alarm.
Returns the usage parameter set for the given profile object.
Returns the SpecificationTypeDescriptor for this event.
Checks if the given unit is accepted by the given unit.
Initialize the given unit.
Starts a deployable unit.
Stops the given unit.
Show the status of the deployment.
Executes the after commit actions.
Executes the after commit.
Executes the rollback action.
Executes the pre-commit actions.
Executes the pre-commit action.
Returns a list of all the names of the tracer.
Creates a new tracer.
Removes the replicated data from the cluster.
Processes the given component with the given parameters.
Returns the object pool for the given service id.
Create the object pool.
Executes the given activity.
Starts the activity.
Ends the activity.
Checks that the given event is valid.
Fire an event.
Returns the object that will be used to generate the local object.
Calculates the getter method for the field.
Convert a string to an object.
Sets the profile id.
Extract the message from the result.
Checks if the object contains the given object.
Checks if a collection contains all elements in the given collection.
Removes all elements from the given collection.
Check if this level is higher than the given level.
Reads the value from the stream.
Remove all classes from the pool.
Add profile call.
Get the profile from the cache.
Pass the profile to the given transaction.
Sets the value as a string.
Returns the concrete context class for the activity context.
Generate concrete methods for the given interface.
Set the value associated with the given key.
Adds a name binding to the cache.
Removes all naming bindings from the cache.
Remove a name binding from the cache.
Attaches a timer to the cache.
Removes all timers from the timer.
Attaches the given sbb entity to the cache.
Detaches the given sbb entity id.
Returns the set of sbb attachments in the cache.
Ends the activity.
Adds a component to the server.
Returns all external dependencies.
Returns true if this dependency is satisfied.
Returns true if there are duplicated.
Get install actions.
Get all uninstall actions.
Determine if the user has a relation.
Close the profile table.
Get the object name from the profile table.
Write the write mode to the profile table.
This method is called when the cmp is set.
Suspends cmp field.
This method checks if the cmp field is set.
This method is called when the cmp field is set.
This method is called by the management method.
This method is called after the management method is invoked.
Deletes the given path.
Creates the default constructor for the given configuration.
Creates default usage parameter for the given class.
Creates the getter method for the SockEntity.
Create the fire event methods for this event.
Create the getter method for the given activity context.
Adds an expression to this query.
Bind an object to the given key.
Binds the given object to the given target object.
Decrypts the abstract abstracts.
Invoke the given proxy with the given name and returns the result.
Returns the real field name for the given field.
Sets the value of the given field.
Returns the value associated with the given field.
Initialize the profile.
Unset the current profile context.
Get the profile for this profile.
Fire an update event if needed.
Gets the profile for the profile.
Creates a new class with the given interfaces.
Create an inheritance link.
Adds the member values for the given annotation.
Returns the activity context for the given activity.
Get the class pool.
Sets the deployable unit.
Undeploys the classloader.
Executes the given activity.
Checks if the given interfaces exist in the given interface.
Get all methods of the given class.
Validates the given tracer name.
Executes the given query.
Creates a temporary directory.
Gets the entity manager.
Starts the server.
Switch class loader.
Make a proxy call to the given proxy.
Check the transaction.
Converts the last time to timestamp.
Checks if the profile class is visible.
Retrieves the profile in the current transaction.
Get list of loggers.
Resets the log level.
Clear all loggers.
Add a new logger.
Remove a handler from the given logger.
Converts the given TracerName into a log4jacer.
Synchronise the log level.
Assigns the log4j log level to the log4j log.
Resets the cache flags.
Send a trace notification.
Checks if the given tracer name is valid.
Writes the object to the given object.
Reads the object from the given stream.
Adds a direct dependency.
Get all dependencies.
Finds a class by its name.
Finds the resource for the given name.
Find all resources for a given name.
Creates and registers a new profile mappings.
Resume a transaction.
Gets the set of sbs.
Returns the set of resource attachments for the given component.
Initializes the sleestate.
Shuts down the running state.
Validates the state transition.
Generate a named method parameter getter method for the given profile.
Sets the value for the given field.
Build the JDBC connection.
Sets the value for the given field.
Executes the given transaction.
Create a region request from a string representation.
Get the region of this box.
Retrieves the value for the given deserializer.
Sets view hints.
Adds a view hint to the list of views.
Sets the list of renderings.
Adds the renderings to the resources.
Merges image profiles into an image.
Creates a rotation request from a string.
Create a SizeRequest from a string representation.
Initializes the ADB connection.
Get the dump of a file.
Populate a push box from the device.
Pushes the gps2 device to the device.
Clean up the temp file.
Download dump from device.
Returns the crash log file.
Removes the text from the given text.
Adds the given number of spaces to the text.
Tokenize HTML tags into a collection.
Mark the given text.
Escapes all special characters in the given text.
Adds an exception to the database.
Closes the statement cache.
Find the fully qualified name for the given type element.
Writes the file to the given file.
Write the bit vector.
Append a string to a bit vector.
Reads the contents from the input stream.
Retrieves a list of type from the given path.
Sets the kry report reporting.
Adds a screen capture to the specified path.
Sets the system info.
Selects a selector for the specified property.
Selects a selector for the given property.
Extract validation annotation data.
Extract all annotations for a given property.
Returns the property annotations for the given property.
Returns the property descriptor for the given type.
Creates a new object from the given map.
Create a new object from the given map.
Converts an object into a Map.
Convert an object to a Map.
Returns the values of the given annotation.
Creates a validator for validators.
Looks up all validators in the given list of validators.
Looks up a validator for a validator.
Apply validation properties to a validator.
Removes the property from the map.
Sets the interval.
Returns the total number of entries in the cache.
Hashes the given object.
Open a database file.
Put all values in the given map.
Removes all keys from the database.
Searches for the given key.
Load all the entities from the given collection.
Closes the database.
Reduces the given object to the given object.
Reduces the given object to the given array.
Returns the variance of a vector.
Returns the mean of a long array.
Invokes the method on the given object.
Reduces the given array with the given values.
Converts a timestamp to a string.
Checks if object matches the given criteria.
Binary condition for field values.
Creates a Criteria from the given list.
Creates a Criteria from a JSON string.
Adds an array of integers to the given array.
Returns the maximum value of the given array.
Returns the first element of the given list.
Returns the last element in the given list.
Returns the last element of the given list.
Get the least one of the given list.
Returns the minimum element.
Returns the minimum element of the given array.
Processes an array of maps to a map.
Handle a collection of maps to a collection.
Creates an object from the given map.
Returns the value associated with the given key.
Creates the tool tip with the given name and spaces.
Adds a hexadecimal string to the end of the sequence.
Processes the write queue.
Starts the process.
Sets the given character at the given index.
Convert a string to slc.
Checks if the given string is in the given string array.
Add a character to a String.
Convenience method to add objects to String.
Compacts a String to a String.
Splits a String into a String array.
Splits a String into a String array.
Splits a string into a string array.
Converts a char array to a String array.
Convert a String to a CamelCase.
Checks if the given string is inside the given string.
Converts a string to a string.
Convert number to string.
Convenience method to sort the elements in the sort order.
Sort the given list of fields.
Returns a comparator for the given fields.
Returns a list of children for the given fields.
Checks if the given value is in the given map.
Returns true if the given type is null.
Checks if two arrays are equal.
Returns the sum of an int array.
Round up the given number to the given number of bits.
Sort the given list of fields.
Sort the given list.
Sets the value from the map.
Convert an object to a List.
Create load all version data from the table.
Create a deep copy of the given list.
Checks if the given object exists in the given object.
Checks if the given class exists in the given class.
Checks if the given class exists in the given class.
Returns the first name of the given class.
Gets the sortable field from the map.
Compares two cache entries.
Compare this cache.
Sort the given list of lists.
Sort the given list.
Sort all entries in the given map.
Sort the values in the given map.
Sort the keys in the given map.
Sort an array of objects in the given array.
Returns a new Comparator for the given field.
Returns a new instance of the Comparator.
Returns the value associated with the given key.
Returns the value associated with the given key.
Evicts the cache if necessary.
Initialize the given value.
Allocate a buffer.
Determine whether the program should be exit.
Manage input writer.
Checks if the queue is empty.
Starts the monitor.
Starts the server.
Returns the value associated with the given key.
Executes the query plan for the given expression.
Filter the results in the given group.
This method is called when the timer is elapsed.
Synchronise the contents of this file.
Close the output stream.
Write the next buffer to the output stream.
Writes the given byte buffer.
Initializes the output stream.
Put all values in the given map.
Converts the given key into a byte array.
Reads all the meta data from the given property.
Extract validator meta data from a string.
Returns a list of validator meta data for a given property.
Extract validator meta data from the given property name.
Extracts all validator meta data from the given collection.
Convert an annotation data to a validator.
Splits a String into a String array.
Splits the given string into an array of spaces.
Splits a String into a String array.
Remove chars from a string.
Splits a String into a String array.
Parses a double from a string.
Parses an integer from a string.
Parses a long.
Gets property by path.
Returns all the fields from the given object.
Returns the type of the property.
Inject an object into the given property path.
Sets a property on the specified path.
Retrieves the property value from the given object.
Returns the property value for the given object.
Gets the int value from the root property.
Initializes this object.
Create a message for the given key.
Create a new message.
Converts a list of key-value pairs into an array of keys.
Get the subject subject.
Parses the given text.
Send a request to the server.
Delete the given database.
Create a new database.
Returns a list of UUIDs for a given number.
Triggers the replication.
Queries the value for a given class.
Sets the reverse view.
Synchronize all design documents.
Returns a design document from the given id.
Gets all design documents from the Desktop.
Retrieve a design document from a specific id.
Save replicator.
Find replicator by id.
Find all replicator documents.
Remove the replicator.
Returns the object with the given id.
Find all docs for a given JSON query.
Returns true if the given id exists.
Executes the given list of objects.
Puts an object into a PUT request.
Perform a PUT request.
Perform a POST request.
Execute a DELETE request.
Validates the status code.
Sets the entity in the request.
Adds an attachment.
Gets the changes from the server.
Reads the next row from the stream.
Converts a double to a string.
Shutdown the active locks.
Writes the given stream to the given stream.
Adds tags to the given metric.
Verify that the temp table has been created.
Gets namespace id.
Checks if the given exchange is a query.
Send authentication request.
Extracts the verb from the server.
Generate a subject review for the subject.
Called when a connection is received from the pool.
Handles a request failure.
Initializes the internal session.
Find all scheduled jobs.
Converts a bucket into a list of points.
Sets the given exchange code.
Find all data from a bucket.
Creates a new buckets from the given step.
Send a message.
Send a message to the specified producer.
Send a message to the queue.
Scans the given cursor and returns the result.
Adds a file to the given file.
Replace the given file with the given text.
Build the zip file.
Generate metrics for a given component.
Fetches the content for the given content.
Fetches the content for the order item.
Uploads the transformation transformation to the given zip file.
Generate metrics for a given iterator.
Finds a file in the given parent directory.
End the object.
Registers an adaptor for the given type.
Register an attribute renderer.
Prepare the template for a template variable.
Adds a new domain object.
Sets a property.
Adds a child object to the given collection.
Creates a file from a directory.
Copies the input stream to the output stream.
Parses the given file.
Parses a Reader from a Reader.
Returns all elements in the given parent node.
Returns all nodes in the given parent node.
Returns the first child element of the given parent element.
Returns a list of named elements in the given parent parent.
Validates XML input stream against the given XML schema.
Entry point for a file.
Sets the content of the input stream.
Creates a builder for the given resource.
Processes an entry from a zip file.
Encodes the given string into ASCII charset.
Sets the signature for the request.
Removes all whitespace characters from the given array.
Sign request.
Sets the data for the given object.
Completes multi upload.
Sets the favorite notices for the given notification.
Adds the entry state to the entry.
Returns true if this session has expired.
Get a notification.
Returns the list of Addresions for the given id.
Get the Addresent for the given notification id.
Retrieve all events for a notification.
Retrieve a specific event.
Gets the REST endpoint for the given notification.
Retrieves the specified entry from the given entry.
Gets the authentication token.
Returns the number of entries in the system.
Adds the categories to the list of categories.
Fetches the notification for the notification.
Creates a notification from the error message.
Converts the response into a notification response.
Creates a notification for a notification.
Attaches the notification to the notification.
Normalize the link to a URL.
Gets the notification category.
Returns the notification source for the given request.
Sets the read notices for the given notification.
Read notification response.
Get the year id from the request.
Extracts the user id from the response.
This method is called when the notification is clicked.
Get the attributes of the notification.
Normalize the given p.
Check if the box is contained in the box.
Finds the closest point in the specified point.
Calculates the sign of the p2.
Sets the value of the S364.
Sets the rotation of this matrix.
Convert the given input to a point.
Convert the given input to a quadratic polygon.
Calculate the bounding box of the specified rectangle.
Set the bounds of a polygon.
Returns the center of the specified quadr.
Sets the vertex average.
Add a convex hull.
Removes the given polygon.
Calculates the average error on the target model.
Computes the area of the two areas.
Checks if a polygon contains a point.
Check if a polygon contains a point.
Returns the intersection between two points.
Calculates the intersection between two points.
Returns the intersection between two lines.
Returns the intersection of the given point.
Returns the intersection between two points.
Check if the given ellipse is contained in the given point.
Calculates the intersection of two points.
Returns the value at the given index.
Convert a raternion to a quaternion.
Rotate the rotator.
Sets the rotation of the radians.
Rotate the rotator.
Rotate the rotator.
Sets the rotator.
Convert an Euler to a Java Ruler.
Rotates the rotation of the given axis.
Sets the angle of the curve.
Takes the given motion coordinate into a slider.
Sets the rotation matrix.
Interpolates the plane with the given point.
Determine whether the given points to the given point.
Solves a point on the plane.
Returns the length of the side of the given index.
Checks if the given point is inside this polygon.
Convert the given complex-64-to-coordinate.
Convert the given complex-conversion to a 2-bit float.
Convert a Parquet to a Paragraph.
Convert the given Paracola floating point to a new Arc.
Divide p.
Convert a RDD to a matrix.
Convert RDD to Tuple.
Sets the parameter vector.
Distance between two angles.
Returns true if two lines intersect.
Checks if the plane is contained in the plane.
Checks if a polygon is intersect.
Interpolate the interpolation between two points.
Extract the quaternion from the quaternion.
Process the given input.
Sets the rotation of the specified Surface.
Convert a S3Array to a H2D.
Convert the given surface to a H2D.
Convert a rotation point to a rotation plane.
Check if two points are identical.
Convert latL to unit.
Checks if a point is circle.
Computes the squared radius of a circle.
Finds the closest point in a line.
Find the closest point in the line.
Returns the closest point around the given plane.
Find the closest point in the line.
Finds the closest point in the given point.
Transform a function to a France Lambert II coordinate.
Transform the given points into a point.
Checks if the given point is equal to the given point.
Calculates the angle of the two angles.
Convert a Point to a Point.
Convert this object to another.
Convert this object to a Point.
Convert this object to another.
Convert the given values to a 2D.
Convert a Point to a Point.
Convert a Point to a Point.
Convert this vector to another.
Convert a vector to a Point.
Convert the given input to a vector.
Convert the given input to an output.
Convert the plane to a GeoF3 feature.
Convert a point to a Point2D.
Convert a plane to a plane.
Checks if this object is identical to the same dimension.
Creates a copy of this instance.
Returns the square square of this vector.
Computes the t-value t.
Returns true if this element is uncountable.
Checks if the given float is equal to the given point.
Returns the center of the storage.
Returns the absolute angle of the specified line.
Checks if the given point is infinite.
Generate a random vector.
Convert the given p-value into an E-D.
Subtract the product of this object.
Determine if two points are equal.
Sets this rectangle.
Convert an ellip polygon to an elliptic polygon.
Computes the point for the given ellipse.
Computes the angle for the given ellipse.
Computes the tangent of the given ellipse.
Selects the tangent from the given point.
Returns the corner of the specified corner.
Computes the Euclidean distance between two points.
Computes the Euclidean distance between two points.
Computes the Euclidean distance between the given point.
Returns the Euclidean distance between the given plane.
Returns the Euclidian distance between the given point.
Computes the Euclidean distance between two segments.
Computes the squared Euclidean distance between two segments.
Calculates the Euclidian distance between the given point.
Calculate the squared Euclidean distance between the given point.
Calculates the Euclidean distance between the point p.
Returns the squared Euclidean distance between the given point.
Returns the distance from the line.
Calculates the Euclidean distance between the given point.
Calculates the Euclidean distance between the given point.
Adds a transform to the path.
Find the closest point in the line.
Finds the closest point for the given ellipse.
This function calculates the elliptic curve.
Creates a new instance of the specified range.
Calculates the canonical canonical canonical function.
Check if two points are identical.
Normalize a vector.
Creates a new matrix.
Convert rpc r.
Returns the Euclidean distance between the given point.
Sets the ellipse.
Normalize this vector.
Returns the triangle between two points.
Returns the quadratic polygon.
Calculate a polygon.
Returns the mean of the given list.
Returns a list of points in a list of points.
Computes the mean of the given points.
Checks if a polygon is convex.
Sets the values of this vector.
Returns the maximum absolute value.
Calculates the Euclidean distance between two points.
Returns the squared Euclidean distance between two points.
Returns a random vector with the given plane.
Returns a list of values in the given range.
Returns a list of random values.
Returns the mean of the given points.
Returns the mean of the given points.
Invalidate JWT credentials.
Invalidate all JWT caches.
Combines a collection of collections into a Set.
Get the features for the given server directory.
Get the set of features for the given server.
Extract the set of features from the server.
Parse the include node.
Parses a set of features into a set of features.
Download js files from the given product.
Gets the list of experimental features.
Checks whether the application features are available on the server.
Checks if the given collection is contained in the given collection.
Get the next product version.
Extracts the symbolic name from a jar file.
Gets the map of the installation jars for the given installation.
Checks if the given file is replacement.
Extract the version from a file name.
Compare two versions.
Retrieves the product information for the given installation.
Checks if the given artifact is a bootstrap bootstrap.
Gets the arquillian property.
Checks if the given file is running on the image.
Move the back to the given length.
Checks if two objects are equal.
Loads an integer from a string.
Throw an exception.
Verifies that the image is valid.
Swaps the given number of spaces in the given array.
Calculates the distance between all the targets.
Prints a formatted string to the output.
Prints the given locale as a string.
Makes a fish-like number of fish.
Prints a variable as a single time.
Returns a random integer.
Returns a random double.
The poisson function.
Returns true if the given array is discrete.
Capitalize the first character of a word.
Returns the first character of the given word.
Fixes the path.
Returns a string representation of a Criteria.
Returns the token for the given token.
This method is called when the user has been sent.
Extract auth token from cookie list.
Registers Guice binding for the given injector.
Get all the permissions for the given role.
Adds a projection to the given projection.
Convert JobInfo to JobDetail.
Convert a trigger to a trigger.
Sets the interval values for the trigger.
Sets the start time.
Send mail.
Writes the given output stream to the given output stream.
Initializes the job manager.
Returns all the fields of the given class.
Returns a map of all the fields of the given class.
Configure encryptors from the given authentication configuration.
Generate the hash hash for the given attributes.
Generate the token string.
Send a mail item to the specified mailbox.
Generate a strong password.
Returns the object associated with the given username.
Hash password.
Verifies that the given password name is valid.
Commits the transaction.
Handles the error.
Starts the transaction.
Check if the given token is authorized.
Validates the given object.
Gets the response.
Create a new restriction restriction.
Create a restriction that satisfies the given value.
Create a restriction for the given object.
Create a restriction that satisfies the given value.
Create a restriction that satisfies the given value.
Create a restriction that satisfies the given value.
Create a restriction that satisfies the given value.
Create an InjectionFilter for the given value.
Adds a namespace to the namespace.
Returns a new resource representation of this resource.
Returns a new resource representation of this resource.
Returns a new resource representation of this resource.
Returns a resource representation of a namespace with the specified namespace and href.
Determines whether the given byte array is decoding.
Encodes a string into a byte array.
Compares two readers.
Moves a file to a directory.
Creates a new file with the specified files.
Returns the base name of the given file.
Adds the padding to the buffer.
Returns the short name of the given class.
Returns all the super types of the given class.
Verify that the password matches the given password.
Reads a string from the system.
Append byte to the buffer.
Append bytes to the buffer.
Create a copy of the given array.
Returns a new fraction of this fraction.
Subtract this fraction.
Returns a fraction of this fraction.
Returns the fraction of this fraction.
Returns the maximum value of a long array.
Returns the minimum value of a long array.
Checks if the given condition is a valid boolean.
Fetches the content of the geometries from the given latitude.
Fetches the content from a longitude.
Fetches the content with the given longitude.
Finds the forecast estimates forecast for the given hour.
Find the closest forecast for the given date time.
Fetches the weather data from the forecast.
Create a simple simple longitude forecast for the given datetime.
Create a longitude forecast forecast for the current time.
Parses a string representation of the given coordinates.
Fetches the content of the page.
Creates the string name for the given point.
Find and return the forecastet for the given point.
Create a new uri.
Checks if the given date is a Sun date.
Get the forecast forecast for the given date time.
Get the best fit forecast forecast for the given time.
Fetches the content of a line with the given latitude and latitude.
Fetches the data from the given latitude and latitude.
Update the database connection.
Invoke a string method.
Acquires an object.
Gets a reference from the given class.
Gets the wrapped object wrapped by the given object.
Retrieves the configuration from the service.
Returns true if the given bootstrap configuration is enabled.
Creates an iterator for the given service.
Returns the decoder for the given bootstrap.
Returns a list of services for the given interface.
Returns the object associated with the specified interface.
Acquires an input stream.
Returns the size of the data source.
Gets the referenced data from the given byte array.
Returns the index of the given index.
Returns the prefix of the given index.
Determine whether the compiler is colored.
Executes the given regular expression.
Finds the loop loop in the data structure.
Subtract a subexpression from the given range.
Dissect the given subexpression.
Clones the state of the given state.
Navigates the sub-restructure.
Mark the first subrerere-re-re-re-replaces the sub
Returns the nfa node.
Parse the regular expression.
Deletes the arc from the arc.
Called when a word is non-white space.
Clones the state of this node.
Returns the number of occurrences of the input stream.
Parses the bracket.
Scans a regular expression.
This method is called when a new lacon is connected.
Adds a single color.
Processes a set of unicode.
Returns the color of the given color.
Returns a pseudo-correspondor for the given color.
Processes the colors in the given color.
Checks if the nfa color is valid.
Colorize the arc chain.
Unlight the given arc chain.
Dumps all the colors in the GUI.
Reads the next line.
Triggers the lexnestore.
Returns the color for the given code.
Sets the initial state to be initialized.
Returns the last seen state set.
Returns a set of unicode classes for a given character.
Returns a set of Codes for a given cClass name.
Sort two arcs.
Creates a new state.
Moves out the out of the given state to the given state.
Moves the states in the given state.
Copy the states from the given state to the given state.
Copy the out out of the given state to the given state.
Drops state from state.
Release the state of the given state.
Create a new arc.
Duplicate the arc to the given state.
Set the special colors.
Dumps all NFA states.
Dumps the state of the state to the given state.
Dumps the arcs to the given state.
Dumps the arc.
Optimize the NFA.
Analyzes the arc.
Combine two arc.
Removes all states from the states.
Marks the state of the arc to the given state.
Mark the arc to the given state.
Recursively tries to recover the state of the tree.
Removes an arc from the arc.
Returns a map of all rule parameters from the given file.
Gets all rule interpreter plugins.
Returns the list of plugin plugins for the report.
Gets the rule selection.
Main entry point.
Returns the error message as a String.
Gets the standard options for the given options.
Gather tasks from the task factory.
Gets the task names from the given task factory.
Intercept the given command line.
Returns the command line for the given arguments.
Executes the given command.
Read properties from a command line.
Print the usage of the task.
Returns the directory for the JVM environment.
Creates the class loader for the plugin.
Get all the ids in the specified range.
Get all the ids that are intersecting.
Returns the URI for the given method.
Adds a route to the route pattern.
Returns the number of routes in this route.
Adds a route to the route.
Adds a route to this route.
Adds a path to the route.
Checks if the request path matches any of the given path.
Filter the given property.
Returns the store file name.
Compare two folders.
Compare two entries.
Compare two entries.
Sets the last modified time.
Returns the list of dependent dependencies.
Find a class by its name.
Parse authorization header.
Returns a new instance of the FunctionMapper.
Map a function to a method name.
Returns a map for the given function name.
Resolves a function for the given name.
Sets the values for the given range.
Resolve variable value.
Parses a node from a file.
Parses a jar file.
Parses a tag file.
Creates the compiler.
Returns a stream for the given resource.
Calculates the last modified time.
Find all classes in the classloader.
Checks if the class loader is a class loader.
Starts the given class.
Read the stream header.
Gets a pagination result.
Parses a string from a string.
Fill the RPM file.
Gets the tag file.
Parses an implicit tag.
Returns the checksum for the specified file.
Returns the size of the given file.
Validates the channel name.
Sets the seek to the given block number.
Locates a block from the given position.
Gets the list of Maven artifacts.
Updates the operand state and returns the state.
Calculates the price of the given positions.
Calculates the long price for the given position.
Calculates the price of the given positions.
Thrown when a byte is expected.
Thrown when a byte is invalid.
Scans the tlds table.
Scans the TLD data for the specified resource.
Adds a wrapper for the given JspServlet.
Get the parent class loader.
Sets the given bytecode.
Returns the birthcode of the given name.
Saves the given class to the given class.
Checks if the compiler is compiled.
Initializes the classpath.
Starts the thread.
Stops the thread.
Executes the process.
Finds a channel instance.
Finds the channel for the given channel.
Update deploy group cache.
Copies the contents of the input stream to the given output stream.
Parses a single node into a single node.
Parses the attributes of the given reader.
Adds the include file to the list of files.
Parse the jsp attribute and body and body.
Adds an attribute to the request.
Adds a child node to this node.
Finds all the attributes in the cache.
Finds all children in this tree.
Finds all children in the given tree.
Returns the base coordinates of this object.
Returns the alias for the given variable name.
Sets the thread to use for debugging.
Unset the current thread.
Finds a PrintStream for this stream.
Writes an optional field to a String.
Writes a string to a String.
Adds an element to a parent element.
Adds an element to the specified parent element.
Writes the contents of the given stream to the given writer.
Sets the output file.
Reallocates the buffer.
Maps the given node into a map.
Returns the first state of the given node.
Registers a model with the given key.
Stream data from the given key.
Request a monitor for the given id.
Check if the given request is authenticated.
Finish the output stream.
Creates a new Gson object for the given node.
Encode lm for LZM.
Returns the union of the given Metadata.
Get the throwable exception from the request.
Checks if the given coordinates are valid.
Completes the output stream.
Get the exception for the request.
Evaluate expression.
Returns the prefix from the system properties file.
Checks if the given path is an XML file.
Parses a tag file.
Loads the given tag file.
Removes all proto types from the given class file.
Set the uri for the given resource.
Scans the given file.
Locates the uri root directory.
Moves the position in the chain.
Checks if the given string matches the given string.
Matches if the given string is matched by the given string.
Skips until the given limit is reached.
Skips the given limit.
Skip the given tag.
Parses a token.
Populates the contents of a file.
Make a unmodifiable object from this object.
Filter instances by predicate.
Gets the IDs of the given aspect types.
Sets the resource prefix.
Sets the resource prefix.
Convert a tree node to a tree.
Merges the error result from the given binding result.
Initializes the given binder.
Scans all channels for the bundle.
Unqualified path.
This method is invoked by a tag.
Returns the byte array at the given size.
Returns an integer array containing the specified size.
Converts a collection of artifact results into an artifact result.
Loads a resource from a resource.
Validates the tag data.
Push a stream to the stream.
Returns the encoding of a jar file.
Report a fatal error message.
Get the real path from the given path.
Get the URL from the given path.
Returns an input stream for a given resource.
Get the set of resource paths.
Logs a message with the given exception.
Adds a filter to the filter.
Calculate buffer size.
Returns the memory usage for the given dictionary.
Sets the preset dictionary.
Move the window to the window.
Fill the data from a byte array.
Process pending bytes.
Returns the number of bytes in the buffer.
Returns the number of bytes in the buffer.
Verify that the matches of the specified match.
Moves the position in the buffer.
Recycle the contents of the buffer.
Flush the buffer.
Clears out the buffer.
Flushes the buffer.
Close the stream.
Writes a string to the given byte array.
This method throws an exception if the exception occurred.
Returns a list of all the fields in the given map.
Generate the class file.
Compile the plugin.
Initialize Java compiler.
Checks if the given path is in the system.
Quotes the given character.
Generates the declarations for the given node.
Compile the tag pool.
Generate the XML for the given node.
Generate the common post summary for the common post.
generate post-amble.
Compile the given node.
Generate the tag handler.
Read properties from input stream.
Export a channel.
Validates the given XML document.
Returns the value associated with the given tag.
Parses an EL expression into an EL expression.
Selects the property from the previous property group.
Checks if the given URI is a valid page.
Print comment.
Prints a string in a single line.
Print a single string.
Print a multi-line string.
Gets the XPath expression for the given expression.
Validates the given scope.
Escapes the given string.
Validates the given expressions.
Get the tag handler for the given path.
Creates a Java package from the given path.
Splits a path into a string.
Creates a new Java identifier from the given string.
Marks the given character as a String.
Checks if the given key is a Java keyword.
Adds a property to the map.
Returns the modifier for the given modifier.
Returns a set of metadata for a given metadata.
Executes the user for the given timeout.
Returns the basename of the given string.
Puts a value into the cache.
Loads the metadata from the cache.
Build metrics collection.
Resolves a number.
Writes the given object to the given output stream.
Returns the TTL value for the given rollup.
Creates the prepared statements for all statements.
Track delayed metrics.
Track delayed aggregated metrics.
Extract a number from a stream.
Put a single double value.
Returns a map containing all the properties of this class.
Creates a new container.
Schedules all slots in the cluster.
Clear all slots from the given slot.
Adds a listener to the specified event.
Registers a listener.
Stop the given event.
Emits the given event.
Returns the list of listeners for the given event.
Get the remote host name.
Append rollup event.
Parses a timestamp from a string.
Starts the server.
Returns the rollup for the given granularity type.
Returns a copy of the configuration from the configuration.
Puts a TTL value into the map.
Computes the maximum number of headers for the given headers.
Formats a list of headers into a string.
Formats the given array of outputs to a string.
Registers the given metric registry.
Sets the current thread pool.
Adds a metric.
Returns the set of metric names for the given metric.
Gets tokens from a locator.
Asynchronously returns the result set for the given operation.
Calculates the granularity from the specified interval.
Sets the current server.
Returns a set of unique hosts.
Returns the maximum number of connections for the given host.
Returns an iterator over the metric names of the metric.
Adds metrics to the given collection.
Insert metrics from the given granularity.
Returns the set of locators for the given rollup.
Extracts the next level from the query.
Starts the uploader.
Stops the uploader.
Checks if the given locator is currently active.
Checks if a locator is present in the discovery layer.
Checks if a token is present in the token configuration.
Checks if the given slot has the given slot.
Sets the delayed locator for a given slot.
Creates a map of ranges from the specified granularity.
Returns an iterator that iterates over the specified range.
Inserts a collection of metrics into the database.
Insert metrics from the given column family.
Determine if a metric has a TTL value.
Returns the bound statement for the given metric.
Gets metadata values for a given locator.
Check whether the given headers are valid.
Checks if the given headers is acceptable.
Indexes a list of Elasticsearch discovery.
Validates the configuration.
Check if the file is running.
Returns a new instance of this extractor.
Determine if the OS version of the given platform.
Starts the remote server.
Stops the queue.
Creates a new default signaling configuration for the default parameters.
Add the list of ice servers.
Adds an ice servers to the peer.
Translate a message to a user.
Send a message to all peers.
Gets the value of the lepertiliate.
Gets the value of the user defined field.
Gets the value of the userdefined field.
Sets the API property value for the API.
Gets the value of the multimedia band.
Gets the status of the VMs.
Gets the status of the status.
Gets the status of the status.
Gets the import module.
Gets the value of the AdressRDD.
Gets the value of the Wertger.
Gets the value of the allegerger.
Sets the value of the region property.
Sets the value of the area property.
Sets the value of the address property.
Sets the value of the description property.
Sets the value of the forecast period.
Sets the dependant value of the equipment.
Sets the value of the phone.
Sets the value of the phone2 property.
Sets the value of the contact property.
Sets the phone information.
Sets the value of the main email address.
Sets the email address.
Sets the value of the external id property.
Sets the value of the agent property.
Sets the value of the epoint.
Sets the javarger for the JVM.
Sets the value of the gb-de-de-sequences.
Sets the booe type.
Checks if a string is a valid number.
Sets the value of the gebtener property.
Sets the group property.
Sets the value of the agent.
Gets property.
Sets the stand-instant status.
Gets the value of the user extended extensions property.
Sets the value of the zeineinjection.
Gets the value of zimmer property.
Gets the value of the habs property.
Gets the value of the uriProperties property.
Gets the value of the gastlerger.
Gets the list of Landties for the Landstoch.
Gets the value of the Sonststty property.
Gets the value of the zi renderer.
Gets the value of the terrain.
Sets the umf-ung of the ufert die uibergeben
Sets the value of the wohn property.
Get the country country.
Get the country ID from the given country.
Get the country country.
Get the country from the given country code.
Returns the country name for the given country.
Translates a country to a country locale.
Gets the value of theAnnotationer property.
Sets the value of the business element.
Gets the value of the pdf property.
Sets the value of the aktor.
Sets the property items.
Sets the value of the passerer.
Upgrade the contents of the previous version.
Gets the value of the content property.
Get the names of all the fields in this instance.
Sets the BLOB.
Sets the value of the PausmChager.
Sets the value of the monomermime.
Gets the parkstochazi.
Sets the last indexed value for the lastenode.
Sets the value of the zustand.
Gets the value of the feertion.
Dumps the contents of this record to a writer.
Returns the value associated with the given position.
Returns an iterable over the contents of this record.
Sets the value of the given position.
Sets the ctype property.
Sets the value of the hagent property.
Gets the value of the accelerator.
Sets the keller.
Sets the value of the denominststurb.
Sets the value of the gslChochler.
Sets the value of the gauge.
Gets the value of the wierger.
Gets the value of the Timerger.
Method to upgrade the previous version.
Gets the value of the Bezierzier property.
Gets the value of the wurchunk.
Sets the value of the artger.
Sets the value of the ModifiedModification.
Gets the value of the email.
Gets the value of the telstancstiefst property.
Sets the value of the handger type.
Sets the API to be used for the API.
Sets the API to be used for the API.
Sets the API to be used for the API.
Gets the value of the row property.
Sets the distazi version.
Gets the value of theAnswers property.
Gets the object of the KkCategory.
Gets the object of the Objektiefert.
Gets the hausCategory.
Gets ausstiefert die Urliefert die Urliefert die
Gets the list of the vermarkings in the verstagstag.
Gets the value of the integer property.
Sets the value of the Wertiefert.
Sets the value of ackger.
Sets the value of the Buchtieferts in the Bahl.
Sets the value of the bootstrapper.
Sets the value of the BBO property.
Sets the home property.
Sets the Winkler property.
Sets the eilifier property.
Sets the einferger for the eigenger.
Sets the value of the eigenger.
Sets the value of the survey.
Sets the value of the genner property.
Sets the value of the forecast property.
Sets the value of the JAXBElement.
Sets the property.
Sets the value of the Indicator.
Sets the value of the kbundle.
Sets the value of the Klegerger.
Sets the lager property.
Sets the value of the Methfileger.
Sets the value of the observant.
Sets the parker.
Sets the product.
Sets the value of the re-thiefer.
Sets the stler for the Stager.
Sets the value of the variable.
Sets the value of the WEngSB.
Sets the opinioner.
Gets the value of the wohn property.
Gets the value of the grstststurb.
Gets the value of the einger.
Gets the value of the hallager.
Gets the value of the parker property.
Gets the value of the freilter for the freemarker.
Gets the object of the Objektekt.
Gets the value of Stoppoppater.
Sets the maximum number of the maximum durations.
Gets the value of the feature property.
Sets the zmertype of zmer.
Upgrades the previous version.
Sets the value of thekeger.
Sets the value of the ermerger.
Sets the value of the solar-friendly property.
Sets the value of the pelle.
Sets the value of the gas.
Sets the value of the EL expression.
Sets the value of the fwaker.
Sets the property value.
Sets the value of the klelevele.
Returns a random string with the specified length.
Returns a random string with the specified length.
Returns a random string.
Gets the value of the wernode.
Sets the value of the Winkzer property.
Sets the object to be indexed.
Gets the value of the feed property.
Sets the value of the mobenener.
Gets the value of service Leistings.
Sets the sub administrative area.
Sets the value of the city.
Sets the locality property.
Downgrades the previous version.
Attempts to upgrade the previous version.
Sets the land typename.
Gets the value of the field.
Updates the maven version.
Gets the value of the adtype property.
Sets the value of the gastger.
Sets the value of the Pliefert.
Gets the databler.
Gets the keligger.
Gets the value of the image property.
Sets the price type of the currency.
Sets the value of the development development property.
Sets the value of the directions property.
Sets the value of the co2c rating.
Sets the value of the gauge.
Sets the value of the view.
Sets the property status.
Sets the value of the movie.
Sets the value of the bbbaar property.
Method to upgrade the given version.
Sets the park typename.
Sets the value of the alter attribute.
Sets the freemarker type.
Sets the telef-instant property.
Sets the value of the email.
Sets the value of the internationalization.
Sets the toll account for the billing account.
Create a simple simple simple simple field with the given name.
Gets the fehler list.
Sets the erppler for the Ermittler.
Gets the value of the ststancstancstype.
Gets the value of the property.
Sets the minimum year.
Sets the value of the ziner.
Gets the value of the photo property.
Sets the metadata of the feed.
Sets the value of the project.
Sets the properties of the feed.
Method to upgrade the given version.
Gets the property.
Gets the value of the object.
Gets the fehler list.
Gets the value of the status property.
Sets the type of the platform.
Sets the distancz property.
Gets the value of the distan property.
Gets the value of the distanoints property.
Checks if the given exception is compatible with the given exception.
Sets the bindings for the given namespace.
Bind a namespace URI to the namespace.
Removes the given prefix from the namespace.
Checks if the given content is an opening tag.
Attempts to consume a comment.
Consume the given line.
Returns the index of the given token.
Initialize the log file.
Bind a namespace to the namespace.
Adds an iterator to the queue.
Adds an option to the list.
Adds a string option.
Add an integer option.
Add long option.
Add double option.
Add a boolean option.
Parses the command line arguments.
Creates a new instance of the given class.
This method is called when the data is updated.
Sets the target object.
Prepares the arguments for the given class.
Finds a method matching the target method.
Convert an integer to a string.
Serialize an object to a byte array.
Deserialize the given byte array.
Returns the child element with the given tag name.
Returns the value of the child element with the given tag name.
Get all child elements of the given element.
Check if the node name matches the given node name.
Checks if the given node name matches the given node name.
Set the size of the given string.
Monitor the release of the release.
Adds a reference to the release.
Keep the monitoring thread.
Calcodes a phone number.
Start a prefix mapping.
Ends a prefix mapping.
Adds a callback to the future.
Parse the contents of a jar file.
Returns the text color of the specified item.
Sets the values of the preference.
Get the color of the button.
Set the text size of the text paint.
Get the x-coordinate of the gauge.
Gets the introspection.
Returns a list of all available keyword names.
Returns the argument list for the given keyword.
Returns the documentation for the given keyword.
Starts the remote server.
Stops the server.
Starts the server.
Convert a file to a JSON string.
Converts a file into a JSON string.
Convert an input stream to a JSON string.
Converts properties into a JSON string.
Converts properties into a JSON string.
Converts values into a JSON string.
Converts properties into a string representation of the properties map.
Converts properties into a JSON string.
Calculates the radius of the shadow.
Creates a builder for an apachecher.
Find the certificate for the specified certificate.
Executes the plugin.
Processes the given input directory.
Replace all variables in a template.
Get the title for a single line.
Adds the title to the HTML file.
Replace all variables in the given map.
Updates the relative path for the HTML page.
Copies all files from the given directory.
Check if the path is valid.
Wraps the slider content for the given slider.
Fills the specified duration.
Fills the specified duration.
Calculates the percentage of the given width.
Checks if the view is overlapping.
Returns the launch intent for the given target package.
Launch the activity in the given context.
Get a list of Fact sheets.
Download file from response.
Build the HTTP client.
Create an access control entity.
Update data model.
Create a full export export.
Sets the token provider for the given token provider.
Sets the client credentials.
Process a graph from a file.
Get a list of Bookmarks for a specific type.
Adds a node to the graph.
Writes the given graph to the given node.
Adds rules to the graph.
Closes the client.
Executes a SELECT statement.
Creates a DatasetGraph for a given host.
Limit the number of threads in the process.
Resize a geometry.
Rotate the given degrees with the given rotation.
Sets the gravity.
Remove all profiles from the profile.
Set the font with the specified style.
Adds an image to the specified file.
Add an image to a file.
Parses the given target object.
Prints the usage of the given object.
Extract the time unit from a string.
Parse the given target object.
Executes the given URL on the given url.
Executes the given file.
Intercept the given file.
Sort the list of rectangles.
Renders the given template.
Returns the file for the given slide number.
Check if the given mouse is in the screen.
Check if the slide overlap overlap with the given element.
Executes the given message.
Executes the given message.
Loads a file.
Gets the temporary directory.
Creates a new log value map with the specified key.
Log a message at the FINEST level.
Logs a message at the FINEST level.
Log a message at the specified level.
Logs a formatted message.
Logs a specific message.
Logs a specific event.
Log an event.
Log a warning message.
Log a warning message.
Logs an error message.
Logs an error message.
Adds the context line to the context.
Starts stnry wrapper.
Writes a list of key-value pairs into a JSON array.
Serialize Throwable to JSON.
Serializes the object to the log.
Extract the caller data from the log event.
Creates a new database.
Checks the mappings for the given array position.
Parses the saved attributes for a cell.
Save the data to the object.
Refreshes the spreadsheet from the context.
Parses the string value from a string.
Extract the string value from the row.
Get the save attribute from the list.
Sets the saveObject in a hidden row.
Sets the save attributes for a given sheet.
Sets the save attributes for the given row.
Prepares the data for a cell.
format double.
Put shift attributes map.
Set the workbook for this workbook.
This method returns the WFrameWrapper associated with the wbsocket.
Gets the formula evaluator.
Recalculates the maximum count of the cells.
Loads the web sheet file.
Loads the workbook loader.
Load workbook by tab name.
Export the output file.
Save this sheet.
Executes the submit task.
Populates the component from the component.
Get the current sheet configuration.
Reads an object from the stream.
Returns the locale for the given component.
Get the picture for the current view.
Gets the cell.
Gets the photo.
Gets validation handler.
Gets the chart.
Converts the given list of ptgots to a list of shared formulas.
Convert the ptggs to a ptg list.
Convert the given watch list to ptgls.
Returns a single triple of the given ptg.
Returns a list of rows from the current row mapping.
Returns a list of rows from the given rows.
Builds the dynamic row for a reference to a new row.
Get the background color for the given plot.
Get the XColor from the given point.
Find the automatic fill color for the given table.
Get the XTS color from the given CTS.
Extracts the XSTColor from the ctrace.
Gets the XColor from the given index.
Convert x-style to RGB.
Extracts a triple from x-style color.
Gets the background color from a cell.
Find the component name from the given component.
Populate all attributes from the given component.
Checks if the given object exists in the given object.
Sets the object property.
Gets the value of the object property.
Set the control attributes for the given point.
Find validation for a given cell.
Set the faces of the faces of a sheet.
Sets the chart charts for a given sheet id.
Set the photo for a cell.
Initializes the chart.
Get the chart title.
Set the style of a chart.
Creates a chart with the specified data.
Setup the default style for the chart.
Initialize the XSSF file.
Get the chart id from the parent chart.
Initialize the anchor map.
Generate a single chart.
Transforms a collection into a collection of objects.
Get the full full name from a row.
Updates the upper level of the formula.
Setup the upper level for the given cell.
Build the cell formula for the given row.
Gets rows mapping.
Changes the index number of changes in the given config map.
Changes the last length of the specified length.
Update the index number of hidden columns.
Sets the full name in the hidden cell.
Get the original row number from a row.
Sets the original row number.
Finds a list of rows from a shift map.
Find all child rows from a map.
Find the item in the given collection.
Build config range.
Checks if a given row is static.
Checks if a given row is static.
Replace the given expression with the given value.
Returns a map of all merged regions in the spreadsheet.
Returns a list of all the cells in the specified spreadsheet.
Adds a list of cells to the specified cell address.
Build the line comment from a table.
Builds a comment from a table.
Builds the configuration file.
Returns the configuration for the given sheet.
Build form command from the given sheet configuration.
Verifies that the last cell is valid.
Build the sheet.
Checks the last row and repairs the last row.
Build command line list.
Sets the command for the given command.
Checks if the command list contains any command.
Matches a command to a command line config.
Copy the template to the sheet.
Builds a list of command line arguments.
Process a single line.
Process a command line.
Move comment to map.
Creates a config command.
Build attribute map.
Parse the configuration from the form command line.
Sets the footer configuration for the given formatter.
Sets the body for the given formatter configuration.
Sets the header for the given form.
Delete a row from the spreadsheet.
Removes all ranges from the given map.
Find full full name list.
Gets the first command from the given variables.
Insert empty object in context.
Deletes a collection of objects in the context.
Prepare collection data in a collection.
Index the given config range.
Check if a row is allowed.
Inserts all template elements in the template.
Evaluates the given string value.
Evaluates the given string value.
Checks if a string is a user formula.
Create a new comment.
Evaluates a boolean expression.
Removes all rows from the specified sheet.
Removes a single row from the specified sheet.
Removes a cached cell from the specified row.
Removes all rows from the given body.
Loads the photo from the current page.
Loads the chart id from the current page.
Extract the string value from the given value.
Get the cell value for the poi cell.
Get the cell value from the poi cell.
Get the cell string value for the poi cell.
Get the string value for a cell.
Set the value of a cell.
Sets the value of a cell.
Sets the boolean value for the given cell.
Sets the value of the given cell.
Sets the value of a cell.
Copy all rows from a sheet to another sheet.
Copy a single row from a sheet.
Copies the given row from the given source row.
Copy the value of the given cell from the given cell.
Copy the style of a cell.
Clones the given cell.
Create comment anchor.
Create a comment for a cell.
Match the comment settings for a given cell.
Extracts VML from a cell.
Extract the shape from a VML source.
Get the style from the source cell.
Convert a POJO to a cell.
Gets the row index from the component attributes.
Get the init rows from the given sheet.
Gets the faces from the given body row.
Gets the faces from a body row.
Returns the poi cell from the given sheet.
Gets the skey from the poi cell.
Get the tie cell in the map.
Get the current data context name.
Evaluates the expression.
Evaluates the expression.
Writes the object to the output stream.
Remove a row from the given source row.
Merges the given rows into this Map.
Recovers all the serial rows from the spreadsheet.
Get the chart type of a chart.
Convert a string to a stroke.
Initialize the chart data from a FXFX chart.
Setup chart data for a chart.
Initialize the XSSF data from the specified font.
Initialize the XSF font.
Extracts the anchorId from the anchor tree.
Get a chart id from a child node.
Build objects.
Save the data in the context.
Recursively re-calculate the formula.
Gets the poi cell from the given tab.
Gets the faces for the current page.
Restore data context.
Gets the last collected data context.
Checks if the given name is restore.
Starts restore data context.
Shift the row to a row.
Sets the first row reference.
Sets the last row.
Build all cells for a given row.
Build single cell.
Reads the data from the given stream.
Build the list of categories for the given cell.
Builds a list of series objects.
Builds a chart in a list of chart objects.
Extract the color list from a chart.
Returns the DTD with the given index.
Set the command index map.
Get the photo map.
Finds all the images in the wss file.
Index a photo in the map.
Generates a style string for a photo sheet.
Generate the style for a chart.
Gets the pattern.
Get the chart.
Recover the current state of this sheet.
Returns a string representation of a cell.
Get the font style for a cell.
Gets the cell font color.
Get the cell font decoration.
Get the HTML style for a cell.
Get the style for a cell.
Get the alignment of the cell.
Extract the vertical alignment from a cell.
Calculates the total height of the sheet.
Set the style of the cell.
Get the input type from the cell type.
Returns the set of resource paths for the given resource.
Gets the resource as input stream.
Removes the prefix from a resource.
Evaluate input type.
Find a bean by name.
Joins the given array with the given separator.
Round a double value to the specified number.
Get the tab type.
Returns the style of the tab.
Gets the default date pattern.
Returns the decimal separator for the default locale.
Returns the separator for the given locale.
Sets tie command list.
Builds the list of timewatch for the sheet.
Builds the watch list for the given cell.
Adds a watch to the watch list.
Checks if a string is a command string.
Parses the given comment.
Returns the attribute key in the map.
Parses validation attributes.
Find the bracket position in a string.
Parse command line attributes.
Parse the input form attributes.
Parses validation attributes.
Splits an attribute value into a string array.
Parses the special attributes for the given key.
Process the default attributes for the given key.
Process the selected item attributes.
Gets special attributes.
Parses a single comment to a Map.
Find the first non-cell name.
Remove chars from input string.
Convert a numeric string to Excel.
Convert a column to integer.
Returns a cell by its reference.
Convert the given height to pixels.
Checks if a string is a date.
Parses a string from a string.
Checks if a string is numeric.
Determine if the given character should continue.
Sets the object property.
Compare two cells.
Checks if a config range is inside a child range.
Removes all hidden columns from the specified sheet.
Deletes all hidden columns in the given row.
Deletes a cell from the specified row.
Process an event.
Refresh the status of the given status.
Validates if the current row is valid.
Validates the poi validation bean validation.
Check error message from object.
Validates all rules for a single cell.
Validates the given value.
Validates that the specified component is valid.
Validates the current page.
Validates the given row in the current page.
Validates the given row.
Refresh all cached cells in the current table.
Refresh all cells in the given row.
Sets the submit mode in view.
Pre-validate the current tab.
Clears the contents of this instance.
Load the header rows from the sheet.
Loads the header from the configuration file.
Fill the max column cells.
Returns the column style for the given cell.
Returns the style style for the given column.
Get the column width for the given cell.
Initializes the tabs for this sheet.
Loads the data from the Serializer.
Refreshes the data for the given row.
Refresh data from a cell.
Returns the index of the tab with the given name.
Loads the workbook.
Prepares the workbook for a given tab.
Set the page page page.
Setup the row info for the given row.
Load the body rows from the spreadsheet.
Refresh a cached cell.
Process a refresh cell.
Create dynamic columns for the given tab.
Adds a new row.
Refresh the body rows in the given sheet.
Sets the unsaved status.
Returns true if the view is unsaved.
Returns the common constructor for the given type.
Write input stream to output stream.
Writes a long value to the given writer.
Writes a string to the given writer.
Sets the converted stats.
Adds a bitmap to the file.
Adds a file descriptor.
Removes a parameter with the given name.
Adds a header to the request.
Clears the response.
Call the playback.
Bind a service to the service.
Unbind the service.
Drops the listener.
Store the image to disk.
Convert input stream to String.
Convert input stream to String.
Writes the data to the output stream.
Returns the number of available bytes from the stream.
Closes the underlying stream.
Reads an integer from the stream.
Reset the contents of the file.
Send the header to the output stream.
Send the disposition header.
Send content type header.
Sends the content encoding header.
Sends the end of the header.
Send the end of the output stream.
Send parts to a stream.
Returns the length of the given parts.
Checks if the given URI is redirect.
Sends a 304 response.
Sets the date header.
Sets the date and cache headers.
Sets the content type header.
Closes the given channel.
Sets the disposition header.
Send data to the output stream.
Installs the cache.
Ensure the working directory.
Gets the response from the cache.
Creates a new InputStream for the given snapshot.
Reset the bitmap.
Returns a new WebSocketContext for the given keystore.
Validates the given keystore.
Replace the scale type.
Gets the pending intent from the context.
Disconnects the given connection.
Bind the service to the service.
Unbind the service.
Notify all registered views.
Called when a channel is open.
On accept data.
Reset the content of the response.
Wait for the given time.
Set the text for the given textView.
Hide soft input from text.
Shows soft input method.
Toggles the soft input from the given text view.
Returns the width of the display metrics.
Called when an exception occurs.
Removes the cache from the cache.
Populate image from view.
Cancel image loading.
Creates an image consumer for the image.
Sets the image image for the given image consumer.
Set the loading image.
Start image loader.
Cache the image cache.
Release buffer.
This method is called when a URL is set.
Adds a request parameter to the request.
Connect to the server.
Returns the MD5 hash of the given text.
Returns a string for the given type.
Returns a string representation of the given type.
Check the given result.
Check if the result is blas.
Adds a new lexer.
Adds the end of the end.
Returns the estimated estimate for the given word.
Prints a single description.
Verifies if the kamols attribute values are set.
Removes the symbol from the given tag.
Returns a list of metric data.
Returns the query string as a query string.
Processes metric data.
Parses a JSON string.
Gets the connection config.
Executes the given list of apps.
Create a GencodeReader for GNC code.
Gets a GencodeReader for a GenCodeSet.
Create a new GencColumnSet from GNC_CNC_CNC_C
Gets a GencodeReader.
Gets a GencodeReader.
Create a new GencColumnSet for GNC_Codes.
Get the ID of the passed column element.
Get the string value of the passed row.
Get the column with the passed ID.
Get all key ids in the passed column set.
Get the key of the passed column.
Check if the passed column has the passed column id.
Create a column.
Create a new Key.
Set the number of lines to be skipped.
Add a column.
Create a generic CodeWriter for GCCodes.
Generates a GencodeWriter for GNC code.
Create a writer for GCF column family.
Creates a generic CodeGenerator for debugging codes.
Gets a generic CodeGenerator for debugging.
Creates a writer for GCF column family.
Gets a generic code validator.
Gets a generic code validator set.
Gets a generic column family.
Gets generic code validator.
Gets a generic code validator set.
Gets a generic column validation set.
Send log messages to the server.
Sets the context.
Get the log level.
Get true if the current thread is running.
Set the maximum size of the log store.
Prepend the metadata to the given message.
Append the given metadata.
Creates a JSON object for the given level.
Sets the user identity.
Get byte array from file.
Starts the location update.
Size of the given region.
Size of the given region.
Size of a local region.
Read snapshot record.
Dumps the timestamp to a stream.
Gets the timestamp values from the given index.
Convert a file to a chart.
Returns a pool for the given server.
Returns a pool for a JMX host.
Checks if the given region is an existing region on the server.
Convenience method to get a member from a JMX server.
Lists all the hosts in the given JMX object.
Lookup network hostname.
Check if the given data is an error and send it.
Executes the given function with the given function.
Flatten the given collection into a collection of objects.
Executes the given query object with the given parameters.
Creates a new cache listener for the given consumer.
Creates a cache listener for the given consumer.
Handles exception.
Gets the onregionKeyFilter.
Executes the given function.
Returns a list of all the hosts in the given JMX object.
Executes the cache.
Get the application name from the given resources.
Initialize security configuration.
Returns a region from the cache.
Get a region from the cache.
Constructs the comparison for the given keys.
Checks if the value at least one value in the given timestamp.
Close the stream.
Dumps statistics from a directory.
Implements the statistics file.
Attempt to reconnect the JMX server.
Stop all members on host.
Shutdown a member.
Shutdown the given JMX server.
Shuts down the redundancy zone.
Store the pagination map.
Read the results of a page with the specified page.
Import a region from a region.
Check if the remote locators are valid.
Executes the given function.
Build checksum map.
Returns the value of the given column.
Checks if the given type is a type of the given type.
Serialize an object to a byte array.
Deserialize the given byte array.
Creates a new instance of the specified class.
Check the table id for the given element.
Checks if the given column is annotated.
Checks if the given element has the given type.
Run Java compiler.
Emit getId function.
Convert this query to an observable stream.
Validates the given column name.
Returns the value of the given string or default if not null.
Capitalizes the given string.
Checks if the given type is a type of the given type.
Returns the builder for the given table.
Read the temperature from the device.
Returns a string for a given type.
Print an error message.
Get the list of icon fonts.
Get the list of icons.
Get the background decoration.
Raises a double.
Sets the values of this matrix.
Power the given number of decimals.
Returns the root decimal value for the given index.
Takes the given number of times to the given scale.
Returns the number of n-decimal.
Creates a new new instance of the given number.
Calculate the Euclan.
Takes the given number of times the given scale.
Calculate the sqr.
Prints the SPI.
Returns the timestamp for the given time.
Sets the limits.
Puts a float.
Prints the contents of this file.
Add this complex.
Subtract the complex.
Multiply this complex.
Divide this complex.
Sets this matrix.
Get a row of this matrix.
Get a column of this matrix.
Set the values of this column.
Returns the transpose of this matrix.
Add this matrix to this matrix.
Subtract this matrix from this matrix.
Multiply this matrix by the given k.
Multiply this matrix.
Print the contents of this stream.
Sets the image.
Validates coefficients.
Computes the next position.
Clears all the fields from the current state.
Convert the given SldInfoDescriptionInfo into an XML file.
Convert the sld layer descriptor to a SldInfo object.
Validates the style descriptor.
Validates the given sld.
Calculates the area of the given x.
Sets this matrix.
Set the values for this column.
Returns the inverse matrix.
Determine the determinant.
Returns the norm of this matrix.
Solve a linear equation.
Convert the contents of a stream to a stream.
forward the forward elimination algorithm.
Sets the forward substitution.
Replace the given column with the given vector.
Iterate over the data model.
Convert a square matrix to a square matrix.
Determine the next generation.
Executes the procedure procedure.
Computes the next position.
This method checks the position of the root node.
Computes the next position.
Checks if the given interval is valid.
Adds the specified amount to the end of the set.
Multiply two numbers.
Raises an argument.
Executes the procedure procedure.
Get the sld manager.
Converts a long value into a char array.
Compose the bits from the given bits.
Print the passed stream.
Validates the given floating point exponent.
Validate the float exponent.
Validate double exponent.
Validate double exponent.
Calculate the next central central central central cluster.
Calculate the next random integer.
Computes the next random ratio.
Prime sslift.
Returns the factors of the given number of features.
Executes the procedure procedure.
Computes the next position in the given function.
This method checks the position of the root node.
Sets the JavaFX application.
Sets the configuration file.
Sets the default configuration file.
Initialize the FXML loader for the given target class.
Sets the latode to the given latitude.
Gets the host port.
Returns the applicable attribute definition for the given uuid.
Evaluate the attribute definition.
Sanitize a single tag.
Sets the address.
Query for namespace.
Query for service instances.
Gets all the collaboration in this user.
Returns the meta data for a decimal point parameter.
Change password for a user.
Get all users.
Get the gravatar image for the given email address.
Get the gravatar for a user.
Populates Elasticsearch from Elasticsearch JSON.
Returns the Elasticsearch field type.
Create a flow step.
Update flow step.
Get flow step by id.
Get flow step by step.
Gets all steps by a flow.
Delete a flow step.
Force delete flow step.
Populates the form fields from the given parameters.
Close the connection.
Processes the message.
Called when the connection is closed.
Gets the echo message from the return value.
Get all personal inventory items.
Create a table record.
Delete a form container.
Gets the form history.
Gets a list of form historic data.
Gets the most recent form of the current form.
Acquires a form container.
Unlock the form container.
Unlock the form container.
Create a form container from the result set.
Converts a string into a list of roles.
Creates a form for the given form.
Update form definition.
Get a form definition by id.
Get a form definition by name.
Get all by logged in user.
Delete a form definition.
Gets storage key from storage.
Initializes the memcached client.
Shutdown the memcached server.
Converts a string to a long.
Convert a document to a PDF document.
Get the list of field values from the cache.
Create a flow step rule.
Create flow step rule.
Create a flow step rule.
Update flow step rule.
Update flow step rule.
Update flow step rule.
Move a flow step rule to a flow step.
Moves a flow step rule.
Delete a flow step rule.
Delete a flow step rule.
Delete flow step rule.
Initializes the encrypted encrypted data.
Get all user queries.
Get all the roles.
Gets the service ticket as a string.
Create a field with the given mask.
Create a field from a form field.
Create a field spinner with the given parameters.
Create a field decimal slider.
Create a table field.
Update the field with the given mask.
Update the text field with the given string param.
Update the decimal field with the given parameters.
Update the decimal slider slider.
Update table field.
Get a field by name.
Gets all fields in the form with the given user.
Gets all fields with the given form type.
Delete a field.
Force delete field.
Returns the meta data for a table.
Update field value.
Get or create a new index.
Create a new flow.
Update flow.
Get a flow by id.
Get a flow by name.
Delete a flow.
Force delete flow.
Update the global field value.
Returns all the field values for this field.
Get the form definition id and title and title.
Decrypt the encrypted packet.
Closes this connection.
Initializes a new request.
Get exception message.
Create a new admin user.
Gets an access token.
Get user profile info.
Execute the HTTP request.
Executes the given HTTP request.
Gets json response handler.
Check if the connection is valid.
Returns the Closeable HTTP client.
Determine the path for the fluid trust store.
Close the connection.
Gets the fluid items for a job view.
Send a form to a flow.
Called when a session is closed.
Called when a message has been registered.
Send a singleton JSON string.
Send a message to the remote endpoint.
Closes the user session.
Execute native SQL.
Request a license request.
Apply a license to the server.
Create a plain text field.
Create a field text text.
Create a paragraph text for a field.
Create a MultichoiceSelectMultiSelect.
Create a field date.
Updates the text field with the given route param.
Update the paragraph text.
Update field date time.
Update the decimal field with the given route param.
Update field value.
Create a new field value.
Get configuration by key.
Gets all configuration configurations.
Create an attachment.
Get attachment by id.
Delete an attachment.
Force delete attachment.
Parse a jar file.
Sets the class loader.
Checks if the given node is valid.
Checks if this node is valid.
Checks if this element is valid.
Get the schema from the given file path.
Checks if this element is valid.
Checks if this element is valid.
Converts the given value into an object.
Creates a CLI interface for the given class.
Creates a new CLI instance.
Parses the arguments from the given class.
Parses the given arguments with the given options.
Creates a new URL builder for the given path.
Remove a footer view.
Returns the value of the given point.
Calculate noise noise noise.
Returns the noise noise for a given point.
Calculate cubic interpolation between two points.
Calculate the curve for the given curve.
Sets the bounds of the gauge.
Processes the given event.
Processes the given event.
Gets the account id from the event.
Checks if the given rule entity is valid.
Gets the event serializer for the given input stream.
Create file.
Creates a directory.
Restores the properties from the properties file.
Creates a new instance of the delegate implementation.
Adds the object to the queue.
Sets a string property.
Gets the array property.
Returns the next state for the given action.
Processes the queue.
Returns the value associated with the given type.
Returns the parameterized type for the given type.
Returns the type variable for the given type.
Prints the stack trace stack trace.
Prints a single stack trace.
Replace the object with the given object.
Executes the process.
Sets the task.
Returns true if the task has been accepted.
Called when a task failed.
Check if the task is started.
Called when a task is completed.
Stop the task.
Returns the executor for the given job.
Put a job.
Convert a blocking mode to a blocking mode.
Reads the value from the stream.
Copies the readers from the given catalog.
Create a new catalog.
Loads the system catalog files.
Parses the given URL.
Parses the local catalog files.
Parse catalog file.
Logs an unknown entry.
Resolve the doctype.
Resolves the document.
Resolve the system ID.
Resolves the URI for the given uri.
Make an absolute URL for the given system id.
Normalize the URI of a URI.
Encodes the given byte.
Adds a delegate to this catalog.
Creates a softValueRef from the given key queue.
Fires a throwable on the given type.
Add an exception to the stack.
Creates a list of delegate implementation.
Compares this timer to another timer.
Returns the value as a string.
Returns the object at the specified index.
Sets the object at the specified index.
Removes the object from the queue.
Adds an entry type to the list.
Get the entry type for the given name.
Get the number of entries for the given type.
Returns the value associated with the given argument.
Sets the context class loader.
Swaps the elements of two integers.
Removes the specified node from the specified index.
Cleanup the timeout.
Loads a class from the given class.
Preload the configured URLs.
Creates a URL for the given protocol protocol.
Check if handler is set.
Get the value associated with this node.
Creates a set of delegate implementation.
Make a new counter for the given counter.
Make a counter for the given counter.
Checks if the current namespace is in the system.
Check notification.
Returns an object instance of the specified object.
Subtracts a string from a string.
Splits a string into an array of strings.
Join byte array.
Convert an object to a String.
Returns the value as a string.
Creates a new entry.
Returns the value associated with the specified key.
Returns the value associated with the specified key.
Removes a timer from the cache.
Flush the cache.
Returns a list of all the keys in the timer.
Sets the resolution.
Looks up a timed entry from the specified key.
Returns all children of the specified element with the specified tag name.
Returns the unique child of the specified element.
Returns the optional child element with the given tag name.
Returns the content of the given element.
Get the unique content for the given element.
Returns the content of the specified element with the given tag name.
Sets the maximum queue size.
Set blocking mode.
Set blocking mode.
Executes the given task.
Resolve external system.
Resolve a public public public id.
Query resolver for given command.
Append a vector to the given vector.
Resolve all the system.
Resolves the system back to the given system ID.
Resolve all local system.
Reads a catalog from a file.
Reads a catalog from the input stream.
Connects to the remote file.
Returns the output stream for this connection.
Deletes a leaf node.
Get the value of this header.
Creates a snapshot of this snapshot.
Creates a new Logger.
Appends a collection of objects to a list of objects.
Returns the short name of the class.
Returns a string representation of this class.
Get all properties in the system properties.
Get property group group.
Returns a compatible constructor for the specified type.
Creates a copy of the given object.
Returns an object from the given object.
Initializes the context.
Update JNDI cache.
Returns a copy of the keys set.
Returns the set of entries in this set.
Removes the given property listener.
Notify listeners that a property has been added.
Notify listeners that the property has been removed.
Fires a property change event.
Notify listeners about a property change event.
Creates a property name for the given base property.
Loads properties from a property reader.
Loads a property file.
Gets property group by index.
Returns true if this entity is resolved.
Returns the input source for the given system ID.
Resolves the system ID for the given system ID.
Returns the classpath for the given system ID.
Sets the value as a String.
Normalize a public ID.
Encodes the given public ID into a string.
Decode the given URID.
Replaces all occurrences of a String in a String.
Starts the server.
Stop the elapsed time.
Make a CloseWatch for the given watch.
Compares this object to a hashCode.
Generate hash code for a given byte array.
Generate hash code.
Creates a new list.
Sets the value of the field.
Reads the next token.
Initialize the default format.
Adds a vertex to the graph.
Sets the root vertex.
Removes a vertex from the graph.
Performs a depth-first search for the given vertex.
Recursively visits the specified vertex tree.
Finds the vertex with the given data.
Finds all cycles in this graph.
Normalize a string to a normalized string.
Parse the given XML string.
Parse the given XML stream.
Parses the given input source into an XML document.
Create an Element for the given local part.
Resolve a QName to a QName.
Copy all attributes from the given element.
Checks if the given node has children.
Get all child elements in a given node.
Get the text content of a node.
Gets all child elements in the given node.
Returns the parent element of the given node.
Adds a waiting resource to the pool.
Reads a catalog from a file.
Gets the host address.
Sets the value of the given property.
Displays the class info for the given class.
Description for the given class.
Strips package name from the given class name.
Get package name from given class name.
Force the given type to load the given class.
Returns the primitive wrapper for the given type.
Get all interfaces of the given class.
Get all interfaces of a class.
Checks if the given class is primitive.
Instantiates a new instance of the given property.
Returns the getter method for the given class.
Returns the setter method for the given class.
Converts a Java class name into a Java class.
Gets a string property.
Returns a list of filename names for the given property name.
Removes all weak objects from the queue.
Returns an iterator over this set.
Creates a URL for the given protocol.
Returns the set of entries in this map.
Adds a property listener to the bound property.
Removes the property listener from the specified property.
Returns null if the given string is null.
Find property editor for the given type.
Register an editor for the given type.
Converts a string value into an object.
Returns the context class loader for the given thread.
Returns true if the given throwException is an exception thrown.
Schedules a timeout.
Executes the work unit.
Create a new context with the given name.
Lookup an object by its name.
Checks if the given object is a class.
Appends the class information to the given class.
Returns the transition with the given name.
Reads the properties file.
Gets the verbose.
Query for relative catalogs.
Reads the catalog files.
Returns a list of catalog files.
Query whether or not the system is preferred.
Determine if the system is static.
Resolves the input source for the given public id.
Resolve the given href.
Make an absolute URI to the given URI.
Resolves the class for the given object.
Invoke the setter method.
Get the local name of the tag.
Returns the namespace URI for the given node.
Returns the namespace URI for the given element.
Converts an Enumeration into a List.
Returns an input stream for the specified filename.
Loads properties from a file.
Read properties from the input stream.
Adds an edge to the graph.
Adds an outgoing edge to the graph.
Adds an incoming edge to the specified vertex.
Checks if the given edge is connected.
Removes the given edge from this graph.
Finds the edge from the given destination.
Finds the given edge from the given edge.
Returns the cost of this vertex.
Parses a jar file.
Returns true if there are any elements in the iterator.
Fires an event.
Installs the JVM classloader.
Dispatch an action on the FX thread.
Gets the action stream.
Returns a stream of all of a collection of a collection.
Returns true if one of the given collection.
Returns whether or not the robots robots.
Executes the given command.
Returns the sum of all degree of this node.
Returns a map of the arguments of the given class.
Initiate the specified resource loader.
Validates the datasource.
Returns a list of objects from the given class.
Connect to a JDBC database with the given username and username and username.
Executes the given SQL statement.
Query for SQLite SQL.
Query by example.
On a new upgrade.
Dump the contents of this table.
Restore the contents of this table.
Set the empty text.
Dump the contents of a database to a CSV file.
Unescaped string.
Returns a list of strings from a String.
Returns a map of strings as a Map.
Convert a Map to String.
Join list of strings.
Join a list of strings.
Reads a database from a reader.
Writes the configuration file to the index.
Get the id of the entity.
Returns the base DAO model for the given entity.
Returns the bind type.
Import a CSV file from the given db.
Backup all tables in the database.
Restore all tables from a CSV file.
Writes the index file.
Creates a query for the given parameters.
Create a typed query for the given type.
Render the query string.
Delete the given id.
Update the object with the given id.
Update the contents of the given object.
Add a list of items in the array.
Adds a subquery to this builder.
Returns the next active stack.
Returns the empty intent stack.
Adds a plan to the graph.
Selects the plan for the given policy.
Selects the plan at the given index.
Sets the variables in the given plan.
Returns the result at the specified index.
Gets the byte array.
Get the children of this node.
Grows a byte array.
Creates a logger for a given file and logging it.
Iterate through the body.
Sets the goals array.
Pauses the user input from the user input.
Initializes the network pool selection pool.
Initializes the intention selection threads.
Starts the intent selection threads.
Shuts down the intention selection threads.
Register an extension.
Resets the state of this agent.
Loads an agent from the given agent.
Process the plans for a given goal type.
Creates the agents in the given catalog.
Loads a class from the given class.
Loads the specified extension from the specified class name.
Checks if two objects are equal.
Returns the usage of the application.
Parses an array of arguments.
Parse the given option from the given string.
Evaluate a query.
Returns the value at the specified index.
Finds the object with the specified name.
Adds an object to the queue.
Returns the value at the specified index.
Push an object to the queue.
Removes the object from the queue.
Get the type of object.
Checks if a query is equal to the given query.
Entry point for the given string.
Convert a string to a byte array.
Post a new goal.
Send a message to the agent.
Send a message to the agent.
Retrieves the best goals of the game.
Create a new belief set.
Adds a belief set to the belief set.
Evaluate the given query.
Suspends the agent.
Returns the field with the given name.
Register all neighbors of a random number.
Builds a random name.
Runs the queue.
Check if the given agent is valid.
Removes all active agents from the set.
Manage the goal node.
Shuts down the pool.
Sets the idle agent.
Moves the specified pin to the specified pin.
Initializes the configuration.
Wait for the idle connection.
Called when the thread finishes.
Checks if the pool is idle.
Returns the pool id for a given agent id.
Picks the expression from the expression.
Sets the expression.
Creates a path for the given attribute.
Recursively finds a join of the given property.
Finds a join from the given property.
Returns true if the end of the range is reached.
Returns the upload stream from the request.
Handles the given request.
Check if a parameter is present in the request.
Returns the value associated with the given name.
Parse the parameters for the given expression.
Configure this transaction manager.
Gets the target file.
Writes the given artifact.
Processes a single instance of the managed class.
Returns the declared constructor for the given implementation.
Builds a string representation of the configuration.
Returns the interface method for the given method.
Returns the type of the given field.
Retrieves the dependency value for the given type.
Persist the contents of this object.
Sets the default link.
Sets the default link template.
Handles the links of the response.
Handles the headers of a response.
Handles the links of a JSON body.
Parse a link object.
Returns the value for the given key.
Handles the capabilities.
Check if a method is allowed.
Register instance processor.
Registers an instance of the given instance.
Register instance processor.
Register a class processor.
Adds an argument to the list.
Creates a list of target files.
Convert the contents of this object to a String.
Initialize this factory.
Checks if the given template file exists.
Create a TemplateModel from a Reader.
Create a TemplateModel from a file.
Sets the request path.
Retrieve the observable from the given startIndex.
Creates a new instance of the given string.
Sets the value of the given parameter.
Adds a capture to the specified logger.
Removes an appender from the given logger.
Clears the given appender.
Parse the model.
Resolves all proxy resources.
Get all files in a directory.
Parse a directory.
Checks if the model is complete.
Find all elements in the given resource set.
Sets the model directory.
Sets the list of file extensions.
Sets the list of resource resources.
Reads the next record.
Sets the array of strings in the given array.
Converts a string into an object.
Merges the given template with the given name.
Gets the directory.
Gets the template directory.
Writes the given value into the output stream.
Starts the browser.
Configures the window with the given window.
Print this view.
Writes an InputStream to the given OutputStream.
Invokes the method on the given interface.
Attaches the given servlet.
Detaches the resource from the request.
Returns the cookies for this request.
Dumps the HTTP request.
Gets the list of MBeans.
Sets the event stream.
Sets the remote host.
Get the parameter from the request.
Removes the given prefix from the given path.
Returns the common directory for the specified directory.
Convert an absolute path to a relative path.
Convert a relative path to a relative path.
Get the depth of a file.
Dumps an exception to a request.
Sends an object to the response.
Adds a parameter to the template.
Adds a list of template templates to the template.
Initializes the template.
Find references in a template file.
Enable or disable the save button.
Delete the user.
This method is called when the endpoint is deleted.
Creates a new instance of the specified managed class.
Returns all the files in the batch.
Returns a summary of all the counts in the results.
Get the summary for the given directory.
Gets the summary row for a given file.
Creates a new instance of the given managed class.
Returns the setup class for this context.
Returns the list of model files.
Gets the model resources.
Sets the candidate list.
Loads XML from input stream.
On error.
Checks if the given parameter is object.
Reads the given parameters from the request.
Reads the given input stream from the given input stream.
Extract the parameter from a cell.
Gets the value of the hints property.
Checks if the request is an XHR request.
Checks if the given request is installed on the request.
Refresh the element and refresh it.
Returns all property descriptors for the given annotation.
Returns the annotation for the given property.
Logs a formatted message.
Lookup the given domain.
Determine whether the user has a parser for the given hostname.
Returns the managed class for the specified interface.
Returns the managed method for the given method.
Process exception if not found.
Process a warning.
Serialize the given HttpResponse to the output stream.
Returns the value of the cookie with the given name.
Adds a cookie to the request.
Removes a cookie from the request.
Returns an iterator over the cookies.
Gets the target list producer producer.
Adds a field to the pool.
Compile the generated class.
Verify if the response contains the response.
Gets the value of a file.
Ensure the trailing slash.
Gets the http servlet request.
Invoke the managed method on the managed method.
Executes a transaction.
Executes an immutable transaction.
Returns all the files in the given directory.
Returns the last file.
Returns the concrete type of the given parser.
Checks if a request path starts with the given path.
Returns all artifact factories for the given model type.
Returns the HTTP session for the given instance key.
Serialize the response to the given file.
Reads the meta data from the request.
Override handleRequest for processing.
Shutdown the database.
Clean up all registered event streams.
Handles allowed methods.
Synchronously uploads to the server.
Delete the endpoint.
Extract all column parameters from a row.
Returns an array of argument names for the current thread.
Schedules a periodic task.
Schedules a timeout.
Processes the configuration file.
Returns the next file.
Configures the application configuration.
Print the banner banner.
Print stopped banner.
Creates a new riaka.
Register shutdown hook.
Trigger the tray notification.
Dispatch trigger event.
Inserts a single row into the table.
Gets the counts of all the results in the database.
setter for score - sets.
getter for variants - gets.
setter for variants - sets.
getter for questionType - gets.
setter for questionType - sets.
getter for token - gets.
getter for depLabel - gets.
setter for depLabel - sets.
getter for semanticType - gets.
setter for semanticType - sets.
getter for sections - gets.
setter for sections - sets.
indexed getter for sections - gets an indexed value -.
indexed setter for sections - sets an indexed value -.
getter for uris - gets.
setter for uri - sets.
getter for types - gets.
setter for types - sets.
getter for targetType - gets.
setter for targetType - sets.
getter for rank - gets.
setter for rank - sets.
getter for queryString - gets.
setter for queryString - sets.
getter for candidate answers - gets.
setter for candidate answers - sets.
indexed getter for candidate answers - gets an indexed value -.
indexed setter for candidate answers - sets an indexed value -.
getter for query - gets.
setter for query - sets.
getter for hitList - gets.
setter for hitList - sets.
indexed getter for hitList - gets an indexed value -.
indexed setter for hitList - sets an indexed value -.
getter for abstractQuery - gets.
setter for abstractQuery - sets.
getter for searchId - gets.
setter for searchId - sets.
setter for docID - sets.
getter for offsetInsection - gets.
setter for offsetInsection - sets.
getter for offsetInsection - gets.
setter for offsetInsection - sets.
getter for beginSection - gets.
setter for beginSection - sets.
getter for endSection - gets.
setter for endSection - sets.
getter for aspects - gets.
setter for aspects - sets.
getter for triple - gets Triple.
setter for triple - sets.
getter for sourceRelation - gets.
setter for sourceRelation - sets.
getter for subject - gets.
setter for subject - sets.
getter for predicate - gets.
setter for predicate - sets.
getter for iobj uri uri.
setter for isObject uriURI - sets.
getter for operator - gets.
setter for operator - sets.
getter for operator_args - gets.
setter for operator_args - sets.
getter for concept - gets.
getter for score - gets.
getter for text - gets.
setter for text - sets.
getter for id - gets.
setter for id - sets.
getter for name - gets.
getter for abbreviation - gets.
setter for abbreviviation - sets.
setter for concept - sets.
getter for variants - gets.
setter for variants - sets.
getter for namedEntityTypes - gets.
setter for namedEntityTypes - sets.
getter for conceptType - gets.
setter for conceptType - sets.
getter for occurrences - gets.
setter for occurrences - sets.
getter for concepts - gets.
setter for concepts - sets.
getter for originalText - gets.
setter for originalText - sets.
getter for args - gets.
setter for arguments - sets.
getter for label - gets.
setter for label - sets.
Find the next clear bit.
Sets the bit at the given index.
Free a buffer.
Creates a new instance of the cache.
Recreates an array of values to a new array.
method to convert the MonomerNotation to String.
Checks if the enclosing bracket is parent.
Recursively add information to the given string.
Returns the HELM string representation of the HELM element.
method to add a MonomerNotation.
Checks if the given polymer id is valid.
method to check if the Polymerid is a Polymerid.
Checks if the given string contains details.
Checks if a string is a valid group id.
Check if a string is repeating.
Checks if the peptide nucleotide is peptide.
Convert notation to JSON string.
Get a simple PolymerNotation of a PolymerNotation.
Get the current grouping.
method to convert the polymer to a String.
method to convert the PolymerNotation to HELM.
Returns the HELM string representation of the Firmata.
Convert a list of Groupings to a String.
Returns a String representation of the annotation section.
Get the list of all PolymerNotation IDs.
Get the PolymerNotation.
Sets the polymer elements of the polymer.
Convert the given string to a string.
Sets the annotation.
Sets the number of items.
Determine the MonomerNotation for a MonomerNotation.
method to decide if the MonomerNotation is a MonomerNotationGroupElement.
Determine the entity for the given string.
Gets the value of the interval.
Parses the given string.
method to set Rna-RNA from a string.
Define an ambiguous conjunction with the given string.
Returns the statistics for the current state.
Creates a new graph from a collection of edges.
Creates a new graph from a collection of nodes.
Initializes the incoming paths.
Returns a list of nodes in the graph.
Subscribes a method to the given method name.
Executes the given pattern.
Unsubscribe from the given pattern.
Asynchronously returns a return operation.
Synchronously sends a response.
Gets a boolean.
Shutdown the given reason.
Returns a throwable for the given exception.
Unlock the running state.
Creates a new worker.
Try to add a worker.
Register a worker thread.
Unregister a worker.
Called when a work queue is thread.
Runs a worker.
Waits for a work queue.
Returns the common submitter queue.
Completes the given task.
Submits a ForkJoinTask.
Creates a new ForkJoinPool for this thread.
Retrieve a value from the queue.
Build a String from the given code.
Returns a list of all the statistics.
Creates a new instance of the given elements.
Reverses the elements in this array.
Iterates over all elements in the given collection.
Returns the left of the given elements in the given collection.
Iterates over a list of elements from the given collection.
Adds a task to the queue.
Returns a new instance of the given value.
Creates a new instance of the given keys and values.
Returns an empty null if it is empty.
Creates a new instance of the elements from the given elements.
Creates a new instance of the given keys and values.
Returns a set of keys contained in this map.
Normalize resource name.
Marshals the given bound type as a string.
Returns a subsequence of the specified range.
Returns a binary search for the given list.
Returns a binary search for the given element.
Send an email message.
Binds a pattern to the route.
Binds the given filter to the given filter.
Determine whether the role has been assigned to the role.
Get an integer from a long.
Removes all strings from the given array.
Returns a string representation of a string.
Executes the process.
Logs a user password.
Get the login user from the request.
Checks the given password.
Save the user in the cookie.
Encrypt the login key.
Returns cookie from cookie.
Transfers the given context to the given web context.
Convert request parameter to long.
Log a message.
Returns the caller info for the specified level.
Convert char array to a simple byte array.
Convert a char sequence to a byte array.
Convert a byte array to a simple char array.
Convert char sequence to byte array.
Looks up the locale data for a local locale.
Returns a promise for the given timeout.
Crops the given image to the specified file.
Invokes the given invocation.
Executes the given direct invocation.
Gets REST operations.
Render a AJAX error message.
Render a AJAX request.
Returns the template for the given view.
Parse the path from the action path.
Render data tables.
Render empty data tables.
Sets the items of the combo box.
Redirects the response to the given URL.
Returns the list of bindings for the given injector.
Get the current method.
Compacts memory memory from memory.
Propagate metrics to the local metrics collection.
Encode the given string.
Copy bytes from input stream to output stream.
Copy bytes from input stream to output stream.
Copies the input stream to the given output stream.
Copy the contents of a Reader to a Writer.
Copy characters from a Reader to the given writer.
Copies the contents of a Reader to the given output stream.
Copies the contents of a Reader to the given output stream.
Compare two input stream.
Compare two reader.
Executes the given IO.
Returns the SQL string for the given group name.
Convert a string to an object.
Unzips a given zip file.
Factory method to create a FragmentDialog fragment.
Set the resume listener for the user.
Registers a core type.
Checks if the given value matches the given regular expression.
Checks if the given string value is mobile.
Checks if the given string is a phone number.
Checks if a string is a birth date.
Checks if a string is a valid URL.
Executes the given request.
Encodes the given string into Base64 string.
Decode base64 string.
Converts a hexadecimal string into a byte array.
Read properties from stream.
Read content from input stream.
Reads content from a file.
Write bytes to a file.
Copies the given source file into a directory.
Serialize a document to a String.
Get XML document from a file.
Get XML document from String.
Get XML document from input stream.
Validates the signature of the given public key.
Sign the given document.
Returns true if the given classloader should be cached.
Checks if the given class is a primitive array.
Checks if the given class is primitive.
Resolves a primitive type if necessary.
Checks if the given class is assignable.
Checks if the given value is assignable.
Get all interfaces for the given instance.
Gets all interfaces for the given instance.
Writes the URL to the given URL.
Returns a map of all the variables in the given URI.
Puts a single permission message.
Binds the given extension to the given extension.
Returns the context for the given type.
Returns primitive type.
Convenience method to convert an object to a type.
Convert the given object to a string.
Returns a query parameter.
Returns a cookie with the given name.
Parse a session.
Initialize data source.
Sets a single parameter.
Sets the value of a field.
Shows the given permission.
Check if all values are granted.
Check if the value of the Permission has been granted.
Find records by query.
Finds the first record from the given SQL statement.
Checks if a model is a new one.
Returns true if the given method has an exception.
Processes the queue.
Adds a value to the queue.
Checks if the given string matches the given pattern.
Reads the given interface.
Returns the protobuf entity from the given class.
Checks if the given class is protobuf.
Returns all proto-buffered fields from the given class.
Returns the getter method for the given field.
Returns the pojo setter setter setter method for proto field.
Gets the object mapper.
Returns the JsonFactory for the current thread.
Convert an object to a JSON string.
Sets the border borders.
Get a user record from the domain name.
Copy the values from the given object to the given target object.
Copy the attributes from the given object to the given target object.
Creates a frame that will be used to create a Frame.
Saves the token to the server.
Gets the access token.
Get the default class loader.
Retrieve a resource from the given classloader.
Returns an input stream for a given resource.
Reads a class from the given class.
Initializes the given uri.
Initialize the scheme.
Initializes the path.
Set the scheme of the scheme.
Set the user user info.
Sets the host.
Set the port.
Append the path to the path.
Set the query string.
Set the fragment.
Returns the URI of the scheme.
Create a prepared statement for an iterator.
Initialize this application.
Get the string for the specified parameter.
Set the value of this param.
Returns the contents of the clipboard.
Set the clipboard content.
Load services by type.
Sets service parameters.
Gets the service parameters from the given operation.
Find Parse Parse service.
Find service by given class.
Parse a query response.
Returns an iterator over the elements in this buffer.
Returns the encoding of the given XML string.
Creates a new connection instance.
Gets authorization.
Visit package declaration.
Visit a class declaration.
Visit the given executable.
Retrieve the value for the given key.
Returns a filter that matches the given modifiers.
Returns a filter that matches the given type.
Returns a combined filter with the given function.
Returns a logical filter that returns true if this DeclarationMatches with the given function.
Returns the value as a Map.
Marks the given constructor.
Prepare the object query for the given object.
Replace the given string with a hyphenation.
Converts a byte array to a hexadecimal string.
Returns the list of indexes for the given name.
Parse named SQL.
Convert collection to protobuf.
Sets proto field value.
Sets the value of a POJO field.
Accepts a file name.
Create a new instance of a ResultSet.
Map the expected labels to a map.
Returns the generic supertype of the given type.
This method is called when the queue is available.
Poll the execution.
Returns the declared field with the given name.
Get all methods of a class.
Returns the declared method with the given name and parameter types.
Returns all declared methods of the given class.
Returns all the declared constructors for the given annotation.
dump byte.
Returns the index of the first occurrence of the given string.
Removes all characters from a String.
Clean up the state of the cache.
Initializes audit class.
Initializes the message queue.
Initialize the password validator.
Initialize the password authenticator class.
Resolves the locale code for the given locale.
Looks up a locale information for a specific locale.
Creates a new Statement instance for the given statement.
Removes all elements from the cache.
Removes the element from the stack.
Create an InputStream for this InputStream.
Parse properties from the properties array.
Checks if the given array matches the given patterns.
Move the specified number of points to the specified point.
Check if this rectangle is enclosed by this rectangle.
Checks if the specified point is contained in the specified range.
Get the intersection of this rectangle.
Returns the union of this rectangle.
Replace the x-coordinate of this rectangle.
Replace this rectangle with another.
Returns the number of columns in the given column.
Get the number of rows in the given row.
Returns the bounds of the specified point.
Calculate the columns for the given dataset.
Calculate rows for the given dataset.
Unwraps a throwable.
Starts the main application.
Called when the code is updated.
Copy the code to the given code buffer.
Initializes the registry.
Create a copy of this QueryParameter.
Adds a child node to the tree.
Clears children.
Returns the next element in the queue.
Adds the given instructions to this function.
Adds instructions to the parent list.
Called when a property change event has been registered.
Registers a work panel.
Update component flags.
Creates a new instance of the specified number type.
Evaluates the given term.
Optimizes the given instructions.
Compares two collections.
Executes the servlet.
Render the tag.
Renders the button.
Resets the configuration to the current state.
Initializes the training configuration.
Returns the value associated with the specified key.
Returns the index of the first occurrence of the specified key.
Sets the value at the specified index.
Removes the value from the cache.
Removes the value at the specified index.
Checks if the given property has the specified property.
Sets the value of the specified property.
Returns the property value for the specified object.
Returns true if the given primitive type is assignable.
Initializes this instance.
Determine the decision tree for the given state.
Initialize lookups for the decision tree.
Returns a list of variables in the given statement.
Unify the left and right.
Compile a query.
Find the max argument in the given clause.
Allocates the query parameters for the query.
Gets position information from the given clause.
Displays the given predicate.
Demonstrates how to display a compiled query.
Converts a byte buffer into a String.
Get the string value for this field.
Sets the value of this attribute.
Reads the term.
Checks if the given class name is loadable.
Checks if a class is a subtype of a class.
Checks if a class is a subtype of a given parent.
Checks if the given class is a subtype of the given parent class.
Creates a class for the given class name.
Creates a new instance of the specified class.
Creates a new instance of the specified class.
Calls the method on the given object.
Call a method on a object.
Call a static method on a static method.
Returns a constructor for the given class.
Find the set of setters for the given property name.
Converts a queue to a TransactionQueue.
Converts a queue to a transaction.
Returns the type from the given object.
Resets the reset state.
Creates a type with the specified range.
Adds a supported timezone to the endpoint.
Adds a new tetime to the table.
Adds a table to the table.
Find all free variables in the given query.
Returns the set of free variables that are non-null.
Compares the hash of the given object.
Writes an object to a file.
Reads a stream from a stream.
Creates a new search node.
Generate a string for a trace.
Checks if the body is a valid body part of the argument.
Choose the preferred property to be chosen.
Returns a new Function with the given arguments.
Returns a new variable with the given name.
Executes the action on the action.
Returns the element at the specified index.
Sets the texture.
Paint the given x-buffer.
Creates buffered image.
Creates a binary image from the specified pixel bits.
Creates and returns a BufferedImage for the given pixel bits.
Sets the queue search algorithm.
Entry point for logging.
Evaluate this clause.
Parses a list of terms.
Parses a function.
Reads a variable.
Parses an integer literal.
Parses a double literal.
Reads a string literal.
Peek the directive and consume it.
Internally create a new operator.
Initializes the built in the built-in thread.
Reads a token from the given kind.
Peek the given kind.
Binds all registered listeners.
Roll back a rollback rollback.
Collects an iterator from the given iterator.
Convert an hour to a long.
Converts a long to a number.
Returns a new tick with the given hours.
Returns a tick with the specified amount of minutes.
Returns a long with the given seconds.
Returns the ticks with the given year.
Returns the ticks with the given months to the given month.
Returns the ticks with the given date.
Converts the given year to milliseconds.
Reads a byte array from the input stream.
Returns the entry for the given key.
Convenience method to put the entry into a new one.
Rehashes the contents of the cache.
Called when an action is pressed.
Set the next available available data.
Set the next available state.
This method is called when the thread is finished.
Creates a new instance of the given symbol table.
Returns an iterator over this set.
Returns the expected value for the given probabilities.
Returns the probabilities for the given distribution.
Sets the ticks.
Perform the action forward.
Creates a new URL instance of the given URL.
Gets the request information.
Returns the headers of the request.
Get the cookies from the request.
Returns a comma separated list of parameters.
Get the request scope.
Gets the page scope.
Gets the scope of the request.
Gets the application scope.
Get the user principal principal.
Render the start tag.
Convert a string to a HTML table.
Set the current screen state.
Walk up a term.
Compares two search nodes.
Updates the properties of this instance.
Notifies all registered listeners that the property changes.
Removes the given clause.
Determine if a function is a top level.
Sets the arguments for this term.
Returns the fixity.
Checks if this node is infix.
Compares this object to their priority.
Called when a property change event has changed.
Registers a workflow controller.
Returns a factory for the given class.
Creates a component factory for the given class name.
Returns the storage cell for the given variable.
Returns true if this variable is a binding.
Sets the value of the specified column.
Sets the row attribute.
Returns the value of the specified column.
Returns the row attribute or null if not null.
Internal function to insert a cell.
Creates a new instance of the given type.
Creates a new instance of a String type.
Checks if the value is an instance of the given value.
Creates the initial context for the given term.
Update the values of the given layout.
Returns the value of the current node.
Finds the best path from the tree.
Returns a list of items in the cache.
Loads properties from a resource.
Sets the rate for the given meter.
Reads the number of bytes from the source file.
Skips the specified number of bytes from the source file.
Collect disjunjunction from disjunction.
Extract an int from byte array.
Writes an int to the given byte array.
Writes a 32bit integer to the given byte array.
Extracts a 24-bit integer from a byte array.
Extracts a short from a byte array.
Writes a short to the given byte array.
Returns the child state for the given operator.
Returns an iterator that iterates over the tree.
Get the ID of this record.
Returns the value associated with this value.
Set the value associated with this attribute.
Converts a string into a list of strings.
Converts an array of strings into a String.
Converts a string to camel case.
List all handlers.
Resolves the function with the given function name.
Sets the code for a function.
Returns true if the given component is subcategory.
Get the ID of this record.
Returns the value at the specified level.
Returns the last value of the path.
Writes the object to the output stream.
Deserialize the given input stream.
Computes the Hibernate for the given node.
Returns the modulus of the given number.
Add an error message.
Writes a string to the output stream.
Classify the given state of the given state.
Compares two objects.
Returns an iterator over the elements in this instance.
Calculate the base 64-2 epoch.
This function converts the given integer value to the base 64.
Calculate base64 version of the given integer.
Returns the base64 version of the given integer.
Calculate base 64.
Calculate base 64 version of the given long.
Get the number of bytes in a 32-bit integer.
Get the number of bytes in a 64-bit integer.
Get the number of digits for a given integer.
Sets the head of the method.
Emits the given byte code.
Sets the current panel.
Evaluates whether the given parameter is evaluated.
Returns an iterator that returns the key iterator.
Create array property properties.
Sets the rate for the given meter.
Evaluates the first numeric type.
Finds the properties file.
Loads properties from system properties file.
Load properties from classpath.
Load properties from cwd.
Removes the given functor.
Returns the value of the term.
Sets the substitution term.
Creates a new QueueQueue.
Clean up resources.
Append an event to the log.
Start the connector.
Initializes the symbols for this symbol table.
Commits the transaction.
Roll back a rollback.
Requests a write operation.
Adds a cache to the cache.
Acquires a global write lock.
Releases the global write lock.
Enregisters a transaction with the current transaction.
Enter the rule set.
Adds an element to the queue.
Returns the element from the queue.
Puts an element into the queue.
Returns the next element from the stream.
Returns the property value as a boolean.
Returns the property value as an Integer.
Returns the property value as a long.
Call this method to call a mixin method.
Sets the addition of this rule.
Starts the given checker.
Retrieve the code from the given call point.
Extract bindings from WAM query.
Decode the heap.
Collects the data from the server.
Restores the given object from the given object.
Returns the value of the specified class.
Puts a value into the map.
Returns all the field names of the given class.
Executes the command.
Adds an element to the queue.
Create a search node.
Creates a new QueueQueue.
Creates a SimpleWalkWalker for the given term.
Creates a new goal for the given unary predicate.
Returns a new term walker.
Creates a new term walker for a proposition.
Creates a new term walker.
Load properties from input stream.
Load properties from a file.
Load properties from a URL.
Load properties from a file.
Computes the size of the grid.
Initializes font metrics.
Add a property change listener.
Add a property change listener.
Remove a property change listener.
Notify listeners about a property change event.
Creates a type with the specified range.
Fades the specified color to the specified color.
show horizontal bar.
show left bar.
Show the right bar bar.
Sanitize the radio controls for the given form.
Waits for the given object.
Waits for the given object waiting for the given timeout.
Executes the command.
Append the classpath to the given command line.
Creates a new instance of the given type.
Prints the application summary.
Initializes the console reader.
Evaluate a sentence.
Evaluate the query.
Get multi type data.
Extract a multi-type data from a byte array.
Get the multi type data from the given character.
Get multi type data.
Get multi type data.
Get MultiType data from long.
Create a MultiTypeData from a float.
Create a multi type data from a double.
Get MultiTypeData from String.
Convert object to MultiTypeData.
Sets the value of the specified property.
Clears the given key from the given key.
Expands the specified key in the given key.
Inserts a character into the data table.
Compares two search nodes.
Parses the terms of the operators.
Retrieves a map by its name.
Checks the given candidate to see if the given operation is valid.
Make a new node from the given successor.
Get the error messages.
Gets the options in the environment.
Returns the usage of the command line.
Adds trailing pairs.
Adds the options to the properties file.
Adds an option.
Validates the argument options.
Compare two Iterators.
Returns an enumeration list of all the options in the list.
Returns a list of all options available for this term.
Set the stemmerger for the given tag.
Returns the actual stemmer of the stemmer.
Method to stem a word.
Starts the stemmerger.
Creates a type with the specified range.
Resets the reset state.
Trace the trace frame.
Trace the trace for the data frame.
Call a function.
returns the next frame frame.
Returns the backtrack to the current track.
Triggers the specified address.
Extract the trail from the trail.
Clean up the trail.
Unify two integers.
Unify a constant.
Prints a slot.
Get a random start state.
Checks if the given state is solvable.
Returns the child state for the given operator.
Returns an iterator that returns the set of operators.
Pretty prints a single line.
Swap the tiles from the specified tiles.
Convert a string to a char list.
Convert a char list to its state.
Converts a log4j log record into a log4j file.
Converts the given level to a Java log4j.
Enqueue an element.
Requeue an element.
Increments the given record and count the count and count.
Decrement the given record and count the count and count.
Called when a new size is detected.
Returns a list of names for the given name.
List all bindings for the given name.
Adds a property to the environment.
Removes the property from the environment.
Run GC.
Parses a literal string.
Resolves a mixin reference to a mixinjection.
Push a variable reference to a variable.
Sets the maximum height for the given row.
Updates the maximum column width.
Create a new node from the given successor.
Executes the action forward to the given action.
Substitutes the built-in-in-in-forms the built-in-
Initialize symbol table.
Analyze the given clause.
Returns a string representation of a list of arguments.
Evaluates whether two numeric numbers are evaluated.
Tests the running state.
Called when the server is terminated.
Called when the server is terminated.
Adds an element to the queue.
Compare two nodes.
Inserts all nodes in the given node.
Restart the server.
Returns a set of all methods of the given method.
Returns a collection of elements in the given search method.
Find all the solutions in the given collection.
Returns the next element in the queue.
Restore the values from the given object.
Returns the property value for the specified property.
Adds a property value to the specified property.
Adds a value to the specified property.
Collects the data from the context.
Removes the element from the queue.
Returns the string representation of the given modifier.
Converts a string to an integer.
Converts a string to a date.
Checks if a string is a date.
Checks if a string is a time.
Checks if the given string is a date time.
Returns a token source for a given string.
Returns a token source for a given file.
Returns a TokenSource for a given input stream.
Checks if the given instruction is constant.
Checks if the given instruction is a void.
Checks if the given instruction is non-arguments.
Returns the children of this node.
Returns the term at the given index.
Gets the children of this operator.
Returns a string representation of the arguments.
Retrieve the summary for the given query parameter.
Retrieve all records for a given query parameter.
Execute the query.
Emits the code of the given code.
Sets the basic type for the given class.
Intercept the input stream.
Pretty prints a variable binding.
Expands the given set of solutions to a map.
Reads the data from the stream.
Reads the contents of the stream.
Gets the current time.
Get a random UUID.
Update the track info.
Update the playlist.
Render the output.
Handles a resource request.
Handles an event request.
Fire the start music request.
Initializes the connection.
Starts the reader.
Shuts down the server.
Reset the parser.
Processes packets from the given thread.
Processes a packet.
Sets the CLI option.
Creates a Chat Chat.
Initialize this instance.
Resets the content of the given map.
Sets the value associated with the specified key.
Adds a packet to the server.
Process a request.
Reset all properties from the configuration.
Initializes the connection.
Send packet.
Returns the next Packet.
Open the stream.
Returns a list of all informations contained in this class.
Returns true if the given descriptor contains the given descriptor.
Add event listener.
Shuts down the executor.
Validates the given entry.
Mask null if null.
Checks if two objects are equal.
Returns the entry for the given key.
Resizes the capacity to the given capacity.
Put all keys in the given map.
Removes the value from the cache.
Removes the entry for the given key.
Removes the given object from the cache.
Adds a new entry.
Creates an immutable Map from the given keys.
Encode the given string value into an XML string.
Encodes a byte array into a hexadecimal string.
Encodes the given string.
Encodes a byte array into Base64 string.
Iterate over the specified collection.
Sets the currently selected track.
Set the jump progress.
Set the playback change listener.
Set the volume change controller.
Broadcasts the available list of available listeners to the given name.
Handles command resources.
Handles volume.
Handles the jump progress.
Handles the selected track.
Returns the cache for the given thread.
Returns the cache for the given request.
Returns the alt field with the given stream id.
Returns the path for the given id.
Adapts an object to a session.
Invokes the given method on the given target object.
Deletes a tree.
Update the given object.
Sets the ping interval.
Schedule ping server.
Adds all options to the application.
Checks if the given option is available.
Parse the command line arguments.
Print a usage message.
Parses the given arguments.
Initializes the connection.
Starts the TLS server.
Returns the compression handler for the compression.
Requests the stream for the given method.
Starts the stream compression.
Called when an exception is received from the server.
Notifies all registered listeners that a connection has been received.
Registers an SASL mechanism.
Returns a list of registered SASL IPSet.
Returns the output plugin.
Logs a INFO message.
Log an error message.
Log a message with the given exception.
Creates a start event.
Creates an instance of the start event.
Notify all registered listeners.
Checks if a resource is available.
Checks if the given source ID exists in the given source source.
Checks if a resource is available.
Provides a list of resources for the given resource id.
Retrieve the cached value from the cache.
Returns the cache key for the given key.
Removes the cache from the cache.
Put a cached cache.
Returns a list of all the locations in the file system.
Includes the given file.
Includes the given jar file.
Adds SASL mech.
Add SASL mechs.
Creates a debug message.
Activate the safe list of safe processors.
Register standard events.
Register an event listener.
Registers an event id.
Executes the given file with the given consumer.
Checks if the event is available.
Creates a new dse session with the specified keyspace.
Creates a SoundError for the given error.
Start the music.
Stop the playing music.
Executes a command.
Creates a new broadcaster.
Creates a broadcaster with the given identification provider.
Append the URL to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Add a query parameter.
Extracts a list of events from an event model.
Called when a launch button is pressed.
Checks if the startup is finished.
Checks to see if a URL exists.
Called when a browser is clicked.
Create an image for the given path.
Entry point for the NAMMA.
Returns a copy of this array.
Export this descriptor as a map.
Returns the JSON object at the given index.
Returns the value associated with the given key.
Returns the integer value as an integer.
Returns the double value as a double.
Returns the string value as a string.
Create command resource.
Verify if the given string is valid.
Verify if the given command supports capabilities.
Verify command and capabilities.
Executes the given callback asynchronously.
Returns all subclasses of the given class.
Returns all subclasses of the given class.
Searches all the classes in the given directory.
Searches for the given directory in the given directory.
Returns a list of resources as a list.
Returns the number of elements in the cache.
Process a packet.
Get volume from event model.
Convenience method to send an error message.
Create an error response.
Is the given event?.
Sets the enabled period for the given period.
Convenience method to decorate a Set.
Sets the display name.
Updates the state of this state.
Get a list of available groups.
Append rsm element.
Parses the given query element.
Creates a leave event.
Reloads the current user.
Create an entry.
Get all the roster entries.
Returns the presence of the user with the given resource.
Sets the presence of all users in the cluster.
Notify listeners that a roster has changed.
Sets the digest.
Generates the resource for the given resource.
Creates a player request.
Gets the time of the event.
Registers an update listener.
Initializes the properties file.
Reloads the properties file.
Parse stream error.
Parses the given mechanism element.
Parses the given compression element.
Parse the Packet extension from the given XML parser.
Decode the given string value.
Verify if the event is valid.
Extracts the playback state from a resource.
Returns the secret key for the given subdomain.
Check if the given subdomain is allowed.
Puts the value into the cache.
Gets the key set.
Returns a Collection of Values.
Purges the given reference from the cache.
Returns the entry for the given key.
Computes the hash code for the given key.
Creates a new entry with the given key and value.
Controls whether this event is present.
Sets the presence of the state.
Update the presence of the presence resource.
Delivers a message.
Generate script.
Initializes the output directory.
Load properties from a file.
Write a file.
Get progress from event model.
Wraps the given Collection.
Find service resolver.
Gets the configuration.
Returns the thread pool.
Create stop music.
Checks if the given event is stopped.
Returns a cluster with the given parameters.
Adds a connection listener.
Add packet listener.
Add packet listener.
Notify listeners that the packet sent.
Add a Packet interceptor.
Notify all registered listeners.
Converts an object into a Java object.
Called when a connection is lost.
Returns the id of the current thread.
Checks if a node is valid.
Gets the key for the given value.
Retrieves the value associated with the given index.
Looks up a node at the specified index.
Lookup the node at the given index.
Compare two objects.
Returns the least node at the specified index.
Returns the most recent node at the specified index.
Returns the next greater than the given node.
Finds the most recent node at the given index.
Finds the lowest node at the given index.
Copies the color from the given node at the given index.
Checks if a node is red.
Is the given node at the given index.
Returns the grand parent node at the given index.
Returns the parent node at the given index.
Returns the right child of the given node.
Returns the left child of the given node.
Rotate the given node at the given index.
Rotate the given node at the given index.
Insert a red-white black-th row.
Reduces the given node.
Checks if the object is null.
Inserts a new value into the tree.
Checks whether the given key is in the current thread.
Checks whether the value is contained in the current thread.
Returns the value associated with the given key.
Removes the value from the cache.
Removes all entries from the cache.
Copy all entries from the given map to the given destination tree.
Deletes all expired entries from the cache.
Removes the cache from the cache.
Activates the properties file with the specified properties.
Gets the player request.
Initializes the roster store.
Open a new roster store.
Scans through an IP address.
Returns an IPv6 address of the given address.
Export the contents of this object.
Import a TrackInfo object from a HashMap.
Adds all applications to the given set.
Executes the given arguments.
Print a list of class names.
Prints the usage of this class.
Entry point for testing purposes.
Creates a mute event.
Creates a new unmute event.
Get the schema for the given schema.
Write a file to a file.
Checks if the execution jar file is in the manifest.
Adds an option to the application.
Returns all the schema fields in the order.
Returns the field with the given name.
Get the package name from the given entry.
Creates a map of content to values.
Creates an event listener.
Set the current state of this iterable.
Iterate over the specified collection.
Iterate over the elements in the iterator.
Get the track info from the event model.
Returns a serialized representation of this object.
Import a resource from a resource model.
Creates an error image for the specified error.
Get an image from a URL.
Get the HTTP GET request.
Reverses the given map.
Creates a set of elements in this one.
Starts the thread.
Return the object from the pool.
Creates an end event for the given identification source.
Get the current track information from the queue.
Update the specified track.
Shuffle the playlist.
Verify if the playback mode is supported.
Export the playback mode.
Escapes the given string into an XML string.
Called when a challenge arrives.
Serializes this object into a byte array.
Processes the queue.
Handles an event.
Join all queues.
Sets the property value.
Removes a property from the map.
Add principal.
Removes the specified principal.
Close the root window.
Called when a user has been reached.
Called when an event is fired.
Checks if a resource is permanent.
Set the name of the roster.
Checks whether the given key contains the given key.
Checks if the given value contains the given value.
Adds a value to the cache.
Removes all elements from the cache.
Computes the hash for the given key.
Checks if two keys are equal.
Checks if two values are equal.
Ensure that the capacity is available.
Calculates the new capacity for the given capacity.
Creates an iterator over the entries in this map.
Load a map from input stream.
Initializes the context.
Notifies all registered connection failed.
Notify all registered listeners.