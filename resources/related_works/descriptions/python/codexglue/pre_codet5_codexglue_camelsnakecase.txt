convert sina xml to url list
Download a file from a URL. If only is set to True it will only download the
str Download a video from a URL and store it in the output directory.
Convenience function to wrap text in a string with ANSI escape sequences. If the text is a
prints text to stderr with the script name and the text to be printed. colors can
str Print a message to the console and exit with an optional exit code.
str Prints a message to the console and exits if exit code is not none.
Detects the current operating system and returns the name of the operating system.
get info by xml
get real mgtv url segments size and segment list from m3u url
str - > str - > str - > str - > str - > str - >
str Downloads a CBS file from a given URL.
Match all of the patterns in the text and return the result as a list of strings.
Parse a query parameter from a URL.
str - > str - > int - > str - > int - > str - >
get title by topic part
wanmen download by course
Download by course topic and by bokecc id.
Checks if the given task is in the queue or if it is in the running queue.
Get the event buffer for a set of DAGs or all DAGs if no
Get the snowflake connection object for the given connection configuration.
Returns the AWS access key ID and secret access key from the Snowflake connection object.
get a field from the extras dict if it exists otherwise return a default value.
str Copy sql from filename to filename. If filename does not exist it will be created.
str Dump a table to a temporary file. The temporary file will be overwritten by the table
Upload a file to Google Cloud Storage.
Show the current state of a task.
Get a connection to the API. If no connection has been created yet it will be created
Get details about an instance in a project. If no id is provided all instances are returned
str Create a new instance with the given body. If the instance already exists it will be
Delete an instance from a project.
str Create a new database for a given instance.
Delete a database from an instance.
str Start the SQL proxy process.
str Stop the SQL proxy process.
str Get the version of the SQL proxy.
str Create a new connection in the database and add it to the session.
str Retrieve a connection from the database. If no connection is found None will be returned.
str Delete a connection from the database. If the connection does not exist nothing is done.
Get the SQL proxy runner for the project. This is a wrapper around the cloud sql proxy
Get the database hook for the current connection.
Cleanup the database hook if the database type is str and there are notices in the database
reserve a free tcp port and return it.
normalize mlengine job id
Get the error code from the error message.
str Clear all DAG runs from the database.
str Clear all task instances from the database.
str Set the paused state of all dags in the database.
str Prints the statistics of the task and all its sub - tasks in the database.
str Check if there are any running tasks in the dag bag. If there are no running
mkdirs - Creates a directory with the given mode and returns None if the directory already exists
Convert a string to a float. If the string is not a float it will return the
make sure value is localized. If timezone is not provided it will be converted to UTC.
make a naive datetime object from a datetime object. If timezone is not provided it defaults to
Returns an instance of datetime. datetime with the timezone set to the timezone if it is not
Get a connection from the druid broker. The connection will be returned as a connection object.
Returns a requests. Session object for the given connection id. If no connection id is provided
str Runs the request and checks the response. Returns True if the request was successful.
Check the response for errors and raise an exception if it is not a valid HTTP response.
str Runs the request and checks the response.
A context manager to create a session. This context manager will commit the transaction and close the
Resets the database to the initial state. This is done by dropping all the database tables
Get a pretty - printed message from an exception. If the exception has a str attribute it
Get records from the database using the given SQL statement.
str - > pandas. data. DataFrame - > pandas. data. DataFrame - > pandas
Run the given SQL code and return the result as a string.
insert rows into a table. target is the name of the table to insert rows into.
Return a cosmos client instance.
Check if a collection exists in a database.
Create a collection in the specified database. If the collection already exists it will be overwritten.
Check if a database with the given name already exists in the database server.
Create a database with the given name. If a database with the given name already exists it
Delete a database
Delete a collection from a database. If no database is specified the default database is used.
Insert multiple documents into a collection.
Delete a document from a database and collection. If no database or collection is specified the document
Get a document from a database and collection. If no database or collection is specified the document
str sql string database name collection name partition key
Get a function by name.
str Create a new function in a project.
Update a function.
Upload a zip file to Google Cloud Storage.
Delete a function.
Returns a generator that yields the status of the given dependency. If the given context is none
str Returns True if all passed statuses are met for the given dependency.
str Returns a list of failure reasons for a given dependency.
str Parse the S3 config file and return the access key and secret key.
Returns the current credentials for the given region. If no region is specified the default region is
str Get the vertica connection object for a given connection id.
flush the buffer to the logger if the buffer is at least num characters long.
If fileloc is a zipped file return it. Otherwise return fileloc as is.
str Construct a task instance from the current state of the task. If lock is set to
str Create a new process and start it.
str Terminates the DAG parsing process by sending the terminate manager signal to the child.
str This function is called when a signal is received. It terminates the process and then exits
str This method is called when the DAG is ready to be started. This method is
async function to start the parsing loop. This is the main loop for the parsing process.
str Start in sync with the agent.
str Refreshes the dag directory if it is too old.
str Prints the current statistics of the files in the log file if it is too long
Clear non - existent import errors from the database.
str Log file processing stats.
str Set the list of file paths that should be processed. The list of file paths will
wait until all processors have finished
Terminate all the processes that are running and wait for them to finish. If there are too
get a connection to the remote host and return a paramiko. SSHConnection object.
Creates a transfer job with the given body.
str Get a single transfer job by name and project id. If no id is provided all
Get a list of all transfer jobs in a project. filter can be a dict or a
Update an existing transfer job with the given name and body. If the job does not exist
Cancel a transfer operation.
Pause a transfer operation.
Resume a transfer operation.
str Wait for a transfer job to complete with a given expected status.
Find reschedules for a given task instance in a given DAG.
str Returns the number of open slots in the pool.
str Run a command and return the output.
Allocates ids for the given keys in the given project.
Begin a transaction on the given project.
Commit the changes made to the project with the given body. Returns the commit status code.
str Lookups a set of keys in the project.
Rolls back a transaction.
Run a query on a project.
Get a single operation by name.
Delete an operation.
Polls an operation until it is done or the polling interval is reached. Returns the operation
str - Get the hostname of the current process.
Get the connection to the language service.
str - > list of template fields for a given class or module name.
A role that renders a template field. The template field is a list of template fields.
str Dispose of the ORM object.
str Prepare the classpath to be used by airflow. This is done by adding the air
Pull the task id from the queue and return a boolean indicating whether the task is ready.
Detects if a variable is present in the configuration file. If it is present it will
Convert an alchemy object to a dictionary.
Yields num chunks of items from items. chunk size must be less than or equal to
Reduce an iterable into chunks of size num. If the iterable is empty return the initializer.
str Chain a list of tasks into a single task. The last task will be set to
str filename for a given log entry.
Build a connection object from the API version and authorization information.
Wait for the operation to complete.
Coerce a value to a string or a list of strings.
str Function to handle databricks operator execution.
Run a pig with the given pig string and return the output as a string.
str Fetches the current state of a celery task and returns it as a tuple.
Returns the number of tasks to be processed per send process. The number of tasks will be
Returns the number of tasks per fetch process.
Get a connection to the server. This is the connection to the server that is used to
str Get information about a job in a project.
wait for a job to complete
str Create a new version of a model.
str Set the default version of a model.
list versions of a model
Delete a version of a model.
Create a model in Mlengine.
Get a model by project id and model name.
str Write batch data to the DynamoDB table.
str Integrates the airflow plugins into the current module.
Get the default executor.
str Returns an instance of the executor with the given name or raises an exception if the executor
str Log an error and raise a airflow exception with the error message.
Returns a pymssql. connection object for the given connection id. If no connection exists
triggers a dag with the given id.
str Delete a DAG from Airflow and return the number of deleted DAGs
str Get information about a specific task in a DAG.
Get a list of all available pools.
Create a new pool
Create or update a container group.
Get the current state exit code and detail status.
Get a list of all messages for a given resource group and name.
Get the logs of a container. If tail is not specified only the last N logs are
Deletes a container from a resource group.
Checks if a container exists in a resource group. If the container does not exist returns False
str Constructs an ingest query for the given static path and columns.
Pushes a message to the xcom channel if the message is the same as the message
str Returns a list of task instances in the DAG. If no state is given all
str Returns the task instance for the given task id.
Get the previous DAG run in the given DAG. If there are no previous D
Get the previous scheduled DAG run for this task.
str Verify that the state of the task is still running and that the state of the task
Send a request to the Jenkins server and return the response body and headers.
Convert context to airflow variables.
c conditionally trigger a conditionally trigger a conditionally trigger on the given dag run.
Query a metric for a given time range.
Get the dag with the given id. If the dag is a sub - dag it will
Kills a set of zombies from a task instance.
str Bags a dag and all its subdags.
collect dags from all files in the given dag folder.
Generate a report of the DAGBench s stats.
str - > str - > str - > str - > str - > str - >
Return a list of files that match the regex pattern and filter the result based on the file
str Return True if the file is in the list of files and False if it is not
Clear all task instances from the database. If activate is set to True the instances will be
Get the current try number.
str Returns the current state of the task in the DAG.
str Log an error and set the state to failed and commit the changes to the session.
str Refresh the state of the task from the database.
str Clears all xcom data for this task from the database.
Returns a tuple of the dag id the task id the execution date and the try number.
str Return True if there are any dependents of this task in the DAG.
Returns the next retry datetime.
str True if the job is ready to be retried and False if it is ready to be
Returns True if the task s pool is full False otherwise.
str - Get the dagrun for this dag run in the database.
push a value to the execution date of the task. If the execution date is greater than
Initialize the context and set it as the current context. If raw is set to True the
Close the log file and upload it to the remote server. If the log file already exists
Build and return a connection object for the current API version. If the connection is not yet
Start an instance in the specified zone. If the instance is already running the instance will be
Get the instance of a template. If no id is given the template will be retrieved from
wait for an operation to complete
Check if a bucket exists.
Creates a bucket in S3. If no name is given the current region is used.
Check if a prefix exists in the bucket. If it does not exist it will be created
List all prefixes in a bucket.
List all keys in a bucket.
check if a key exists in s3
Get an object from S3. If no bucket name is given the key is used.
Read the value of a key in a bucket.
Check if a key is present in the bucket with a wildcard value.
Get the value of a key that matches a wildcard string. If no wildcard string is given
str Query the cassandra database and return a cursor to the result set. This method is called
Convert a user type to a data dict.
Get a connection to the Speech API. If no connection is established a new connection will
str Execute the SQL hook and return the result. This method is called when the hook is
str Load entrypoint plugins.
str Check if a plugin is a valid airflow plugin or a subclass of airflow plugin
str Skips the given tasks in the given DAG run. If no DAG run
Get a connection to the ADLS service.
str Check if a file exists at a given path. Returns True if the file is found
Returns a list of files or directories in the given path.
str Execute the query with the given context. The context is passed to the query function.
str - > str - > str - > str - > str - > str - >
Query the MSSQL database and return a cursor to the result set.
Build the metrics for a given function name and namespace.
str Create a cgroup at the given path.
Delete a cgroup from the tree.
Perform an API call to the airricks server.
get salesforce connection
str Make a query against the database and return the results as a dict.
Get the description of an object in the database. The object can be a class or a
Get all available fields for a given object.
get object from salesforce
converts a column to datetime and returns a series of timestamps. If the column is not
str Get a collection from the database. If no database is given the default database is used
Returns True if the given mail has an attachment with the given name in the given folder.
Get attachments by name. If check regex is True then only the first attachment will be returned
Get the filename and payload of the message.
Put records to the delivery stream.
get the statuses for a given task instance dep is the task instance to be rescheduled
Send an email to a list of recipients. You can pass in a list of files to
Sends an email using the SMTP standard library.
Process the value of the query and return it as a string. If the value is a
Check if a blob exists in a container.
Check if there are blobs with the given prefix in the given container. Returns True if there
str Loads a string into a blob in a container.
Read a file from a blob in a container.
str Delete a file from a container. If prefix is set to True it will delete all
Get the FTP connection object.
str List files in a directory.
str Store a file on the remote server.
get the mod time of a file on the remote host
str Execute the webhook with the given context and return the ID of the webhook.
Get a connection object from the server.
Check if a directory exists.
Check if a file exists in a directory.
str List all directories and files in a directory.
Creates a new directory in the given share. The directory must exist in the given share.
str Load a file from a file path on a given share.
str Loads a file from a string into a file share.
Get a connection to the storage backend.
str Download a blob from a bucket.
Upload a file to a bucket.
str Check if an object exists in a bucket.
str Check if a blob is updated after a given timestamp.
Delete an object from a bucket.
Get the size of a blob in a bucket.
str Get the CRC32c of a blob in a bucket.
str Get the md5 hash of a blob in a bucket.
Returns True if the secondary training status has changed in the current job s description False otherwise.
Generate a secondary training status message from a job description and a previous job description.
str Uploads a file to S3.
str Configures S3 resources.
Check if s3 url is valid. Returns True if s3 url is valid False otherwise
Get a connection to the log server. This is the default connection to the log server.
str Executes the dataflow command.
Run all migrations for an offline database.
Run migrations on online.
Delete an instance by id or project id. If no project id is provided the instance will
str Delete a table.
Update a cluster with a list of nodes.
str Prepare the command to be run in the command line and return it as a list of
Convert dict to hiveconf format.
Checks if a table exists in the database. Returns True if the table exists False otherwise.
str Get a connection to the hiveserver2 database. If no schema is provided the
str Get the results of a query from the database and return them as a dict.
Get a list of records for a given HSQL query.
str - > pandas. data. DataFrame - > str - > pandas. data. DataFrame
Get the connection to the server. If no connection has been created yet it will be created
Get the endpoint of the Airflow API. This endpoint can be used to retrieve the
str Bind parameters to a given operation and return the result as a string.
Escape a string so that it can be used as an HTML attribute of an HTML element.
casts a string field to a given bq type.
Validate that the value is of the expected type.
Get a bigquery connection object for this query. This is the connection object that will be
Build a service object from the current request. This is the service that will be used to
Check if a table exists in a dataset.
str Cancels the current running job.
str Delete a table from a dataset.
str table upserts a table or updates an existing table if it doesn t already exist.
Get a dataset by id or project id. If project id is not provided the current project
str Execute the given operation with the given parameters. If no parameters are given the operation will
Execute the given operation on the given sequence of parameters and return the result as a string.
str Get the next page of results from the queue. If there are no more pages return
executes the query on the postgres server and returns a cursor object that can be used
str - > None - > None - > None - > None - > None - >
str Run the command and return a subprocess. Popen object.
Called when the task is finished.
Main entry point for the command line tool.
Build the HTML header of the page. The header is a list of CSS and JS files
Build the jschart and the series for the chart. The jschart is a JSON string
Create a x - axis with the given name and format. If the name is a date
Creates a new y - axis with the given name and format. If custom format is True
Returns a sqlite3 connection to the database. If the database does not exist it will be
Get the last dagrun for a given dag id.
Execute the command and return the result.
Return a JSON response for the given object. The object is converted to a JSON string.
Open a file or file - like object if it s a zipped file.
str Creates a cache key from the request path and arguments.
Get the video intelligence service connection.
Get API key from Airflow API.
Returns a requests. Session object for the given connection id. If no headers are provided the
str Executes the API call with the given payload. Returns the response object.
Build an opsgenie payload from this object.
str Executes the alert hook on the given opsgenie connection and returns the result
Get the connection to the server. If the connection is not yet established create it and return
Run a query and return the id of the query execution.
Check the status of a query execution.
poll the status of a query and return the current query state. If max tries is reached
str Returns a pysftp. connection object for this connection. If no connection has been created
Handle rate limit exception.
Get the value of a table in a database.
str Get the location of a table in a database.
Returns the status of the cluster with the given identifier. If the cluster does not exist returns
Delete a cluster from the cluster store. If snapshot is set to True the cluster will be
Describe the snapshots for a given cluster. Returns none if the cluster does not have snapshots.
Restores a snapshot from a cluster.
Create a snapshot of a cluster.
str Execute the API call with the given parameters.
Create a new job flow with the given overrides.
Filter a list of dictionaries based on a file size. If size is not specified only the
str Filter for ignored file extensions.
str Execute the query and return the result as a string.
str Get a pool by name.
str Create a new pool with the given name and number of slots with the given description.
str Delete a pool from the database.
Convert a Python dictionary to a protobuf object.
str Wait for an operation to complete or raise an error if it is not running or pending
Get a single operation by name.
Append a label to a cluster proto.
Get the webhook endpoint for the given id. If no id is given the webhook endpoint is
Build a discord payload from the user information.
Build and run the discord webhook.
str Encrypt plaintext with the given key. If authenticated data is not provided the plaintext will be
Get the connection to the speech server.
Close the log file and upload it to S3.
Get the environment variables for the current environment.
Returns a list of secrets to be used in the worker process.
str Returns the security context for the current environment. If the environment has a git key secret
get extra links for a given operator and dttm
str Start the DAG process.
Check if we are done. If we are done return True. Otherwise return False.
str This function is called when the process exits gracefully. It logs the signal and exits the
str Update the import errors for the given DagBag.
str Process all task instances in the given DAG and add them to the given queue.
str - > int - > int - > int - > int - > int - >
str Change the state of executable task instances based on the acceptable states. If there are no
str Enqueues a list of task instances with a queued state.
change state for tasks that failed to execute
str Process the executor events for the given dag bag and session. The session is used to
str Update the counters of the status object based on the current state of the state of the
Manages the current state of the executor.
get a single run from the DAG or create a new one if it doesn t exist
str Returns a list of task instances for the given DAG run. If no DAG
str Sets all unfinished dag runs to failed and merges them into a single DAG run
str Heartbeat callback. This callback is called when a heartbeat is received from the task runner.
Returns a client object for the given project ID.
Get a single instance by id.
Delete an instance.
Delete a database from an instance.
Check if an attachment exists in the IMAP server.
Prepare additional parameters for a given language hints and web detection parameters. If additional parameters are none
Returns a connection to the database. If there is already a connection to the database it will
Check if a table exists in the current keyspace.
Check if a record exists in the database.
Build the spark command to track the driver status.
str Submit the application to the Airflow server. You can pass in a string as
Process the spark submit log.
Process the spark status log.
Get the task runner for a given task job.
wait for the task to end
executes the query on the mysql database and returns a cursor object that can be used to
str Create a CSV file with the given schema and write it to the given file handle.
write schema file to local file system and return file handle mime type and schema file to upload
get the column type dict from the schema string or list of schema. If no schema is
Map a mysql type to a string.
Return the extra data as a JSON object.
scale the time units of an array to the given unit. unit can be a string or
Returns a string representing the number of days ago in the current timezone with the given parameters.
init role with given name role vms and role permissions
Delete a role from the database. If the role does not exist an exception is raised.
Returns a list of user roles. If user is None returns the current user s roles.
Get a list of all permissions for the logged in user and their views.
Returns True if the user has the given role. If no role is given all roles are
str - Check if the user has a permission for a given view and menu.
str Clean all permissions from the database.
str Merge permission and view menu with the given permission name and view menu name.
update the admin permissions with the permissions listed in the admin. permissions. view. menu.
str Create permissions for all DAGs.
Get the Fernet key from the configuration file or create a new one if it doesn t
Returns True if the expression is a partition of the table. If the expression is a partition
Receive messages from the queue and push them to the xcom queue.
Get a connection object.
Get a single HDFS client from the given webhdfs connection id.
Check if a path exists in the HDFS cluster. Returns True if the path exists False
Get a connection to the pinot broker. If the connection doesn t exist create it.
Get the URI of the current connection.
Convert a date object to a dictionary.
Convert a datetime object to a dictionary.
Get a redis connection. If it doesn t exist it will create one and return it.
Get a pandas DataFrame from a SQL query.
str Runs the given SQL statement. If autocommit is set to True the SQL will
str Set the autocommit property of the connection.
Serialize a cell to a string. If the cell is a datetime object it will be serialized
Returns the current scheduler status and the latest job s heartbeat in seconds. If there is no
Returns a Cloudant Session object.
Execute the webhook.
Get the credentials from the request. If the request contains no credentials the default credentials are returned
Authenticates the user with the given credentials and returns a httplib2. authorized object
Returns a list of all unfinished tasks.
Prepare a command to be run on a YARN cluster.
normalize a tensor by subtracting the mean and dividing by the standard deviation.
Crops an image to the specified dimensions and returns the new image.
Flip the left and right directions of an image.
perspective transform of an image.
Flip the top and bottom of an image.
Adjust the brightness of an image by the given factor.
Adjust the contrast of an image. The image must be pil. image. Image instance.
Adjusts the saturation of an image. The saturation factor must be a float between 0 and
Convert a PIL image to grayscale.
Save a tensor to a Pillow image file.
str Find all classes in the given directory.
str Read the info file and return a torch. long tensor of the labels.
Read matches files from data dir and matches file. Returns matches as a torch. long tensor
str Calculate accuracy of a given output with respect to a given target. The accuracy is calculated
str Download a URL to a file. If the file already exists it will be overwritten.
str List all directories in a directory. If prefix is True return all directories under root.
str List all files in a directory with suffix suffix. If prefix is set to True only
Download a file from Google drive.
get random params from an image and an output size
str Get random start points and endpoints.
get random parameters from an img and a scale and a ratio
Returns a random transform that can be applied to an image. The parameters are randomly selected.
Get random parameters.
downloads the file from the server to the local file system and returns the path to the
Download all the images and labels from the server and save them to the processed folder.
Get the current theme name from the request.
Returns a list of all the themes in the given directory.
str Parse the response and return a list of dictionaries with the answer and the url.
str MVN of the normal distribution.
str Eight schools joint log prob.
str Build a random variable with a custom shape and value.
max mask non - finite values along given axis. If axis is greater than or equal to
Returns the size of the given event shape.
str Evals fn on all events in dist and returns the result as a single tensor.
Convert an identifier to a tensor function.
Returns a tensor with the given number of components and component params.
str Builds the input pipeline.
Check that map values are valid.
Call a function with the given arguments.
Call the function with the given arguments and return the result extra and gradient.
Pack from structure into to structure.
Performs a single step of a leap frog.
Performs one step of the metropolis hastings.
str config - > tfp. layers. LayerCollection config - > tfp. layers
Convert x to a tensor with the given name and dtype. If x is None return none
str Expands x to the event dimensions.
str Calculates the softmax of the probabilities for each component in the dataset. If log is True
str Ensure that the tensorflow module is installed.
str Logistic regression.
str Scikit - learn covertype.
make positive axis. axis is a list or 1d tensor. ndims is an int32
Reshapes x along the given axis.
z = x - self. loc + self. scale
Inverse of z.
str Solilocal linear trend transition matrix.
str Semilocal linear trend transition noise.
str Return a list of primes less than n.
Machine EPS for a given Tensor or NumPy dtype.
Line search inner bisection.
Print a list of values to the console.
str Check the quadrature of a parameter.
str Interpolate a grid into a grid of degree num where num is the number of dimensions
Interpolate a grid by a scalar scale.
str Concatenation of vectors.
str Logarithm of the sum of the logarithm of the vector vs + ms.
str Logarithm of the sum of ms and vs.
str Vector matrix.
Extract log probabilities from the distribution.
str seed - seed of random distribution. seed - seed of random distribution to be used for
str fn arg list
Build the trainable posterior for the given parameter.
str Moments of masked time series.
str Initial value of masked time series.
Returns a mixture of posterior draws from means and variances.
str Range of values in the range of this range.
str - > tuple - > tuple - > tuple - > tuple - > tuple - >
str Builds a function from a sequence of functions. The function will be called with the
Returns the entropy of the distribution. If no distribution function is provided the entropy of the distribution
str Image summary.
str Visualize the reconstruction of an image.
Visualize qualitative analysis.
str Summarize the parameters of a distribution.
str Summarize mean in NATS and bits.
str Computes the diagonal of the input tensor.
str Returns the previous state and a tuple of the previous state and the hidden state.
str Call conv1 conv2 conv3 and conv4 on inputs.
Sample from the static prior.
TensorFlow shape of the batch of the model.
Tensor of the batch shape of the model.
str - > int32 - > float32 d - > float32 d - > square
Return the indices of the values in an array sorted by the given axis.
Sort an array of values. If direction is str the values are sorted in ascending order.
TensorFlow function to compute the square root of the input tensor.
str Asymptotic series.
str erfinv returns the square root of x where x = x + 1 and x
str Text messages joint log probabilistically.
str Is univariate marginal.
Returns the index points of the plot. If index points is not specified the index points of
str Outer squared difference.
str Value and Jacobian of function f at x.
Split a covariance matrix into multiple marginals of a given number of blocks of size.
Returns a string representation of a numpy tensor.
str - > tf. Tensor shape of the sample.
str Returns the sample shape as a tensor.
Returns the value of the distribution. If the distribution has not been computed yet it will be
Convert the eager tensor to a numpy array.
uniform unit norm.
str Log Normalization of the concentration.
Return the common dtype of a list of tensors.
Broadcast a tensor to a list of tensors.
str Returns the PDF at the current peak.
Returns the effective sample size for a single state.
Potential scale reduction for a single state.
str Size of a tensor along an axis.
broadcasts an argument to the maybelist if it is not a list or if it
Removes a field from the mapping. If the field is not a string the mapping is returned
Merge old with new. If old is None return new. If old is None return old
Convert a dict or list of tuples into a sorted tuple.
str Get function inputs from source kwargs.
Block of VGG convolution.
str Check if a state has no u turn in the momentum.
leapfrog - Leap - Frog algorithm.
str current target log prob + current momentum + current log prob + current log momentum
Random bernoulli.
Convert a nested structure to a tensor.
Get all the attributes of a Tensor like object as a dictionary.
str Creates a mixture prior.
str Packs images into rows cols and width height and depth.
str Downloads a file from the server to the given directory.
maybe call volatility fn with state and return the result and gradient of the jacobian.
Broadcast volatility to state parts.
str Reshapes the input to the same shape as the distribution and the batch shape.
str Call the function with the given event shape and static event shape and reshape the output.
str Bedtr - Dijkstra der Bedtra der Bed
Returns a list of the flat distribution and the values of the root distribution in the model.
Get a list of strings for each topic given a list of topics and a list of words
str Add control dependencies to the codebook.
saves an image to a file in the form of a matplotlib. pyplot. figure.
Convert tf. dtype to numpy dtype. If dtype is a string return it as numpy dtype
Return the base dtype of the dtype. If dtype is a string return it. Otherwise return
Returns True if dtype is a boolean.
Check if dtype is complex.
Returns the maximum value of the given dtype. If dtype is a string return that string.
Returns the name of the dtype. If dtype is already a string it will be returned instead
Return the size of the dtype. If dtype is a string return the size of the dtype
Check that items are of the same type as expected type.
Accept a reflected function and return a tuple of simplex objective values and the number of the
Expansion function for simplex and simplex values.
str Shrink the simplex towards the best vertex and evaluate the objective at the shr
str Replace the value at index with replacement.
str initial simplex objective at initial simplex batch evaluate objective at initial simplex
str Prepare args for a simplex and a simplex for a given initial vertex.
build a fake data object with num examples and images and labels. num is the number of
Get the configuration for this Keras instance.
Create a TensorFlowInitializer from a configuration dictionary.
matrix product of two matrices.
tf. variance_like helper for TF. variance_like and TF. variance_like
Pick scalar condition.
finish log probability for one fiber.
finish prob for one fiber.
Rotate dims if necessary.
Validate that the given layer is a valid bn layer.
str Returns a dictionary of slices for the given parameters.
str Function to apply a single step to a distribution.
apply a sequence of slices to a distance.
Returns the number of columns in x.
str - > bool - > bool - > bool - > bool - > bool - >
str - > int - > np. int - > np. int - > np.
str Returns True if scale is a diagonal scale.
Pads the mixture dimensions to the same dimensions as the Categorical and the event dimensions
str Check that x is a non - negative integer.
If x is a string return it. Otherwise return x. If dtype is None return x
Returns True if dtype is known to be unsigned or False if dtype is not known to be
Returns True if the dtype is known to be signed.
largest integer by dtype.
smallest integer by dtype
Check if dtype is integer or bool.
Generate a new seed from a seed and a salt. Returns none if seed is none.
Returns the dimension size of x along the given axis.
Check that the rightmost transposed ndims is a non - negative integer.
Check that perm is an integer and that it is a list of integers and that it is
Returns the shape of the event with respect to self. perm and self. rightmost trans
Returns a list of dimensions of x or None if x is not a tensor.
str Builds a backward step for a given timestep.
str Given a filtered mean filtered covariance matrix and transition noise return the predicted mean and predicted covariance
str Propagate mean to the linear operator and the distance matrix and return the result.
str Propagate a covariance matrix to a linear linear model and a distance matrix.
str Computes the mean of the model.
str Computes the joint covariance of the model.
str Function to push latent means and covs to observations for a single timestep.
str Log Normalization of the concentration and the surface area of the concentration
str of the mode of the concentration in the mean direction and concentration.
str rotates samples according to self. mean direction and self. event shape.
u Samples from the 3d distribution.
Create a copy of a function. Raises type error if the function is not callable.
Returns a copy of dict with keys with values not equal to val.
recursively replace dict with a pretty dict.
Returns n samples from z. If n is not None samples from z are sampled from dist
Return True if x is namedtuple like False otherwise.
Choose from accepted and rejected namedtuple.
str Function to call fn with arg list and return result and gradients.
Check that shape is a valid shape.
str Computes if any of the converged and failed solutions have been converged.
str Update the state with a new position.
str Check convergence.
Broadcasts a value to a target tensor.
str Harmonic number.
Get a field from a kernel results object. If the field does not exist raise a type
variance scale term of the total concentration and the count of the total concentration
val where cond is True for tval and fval. If tval is a tensor
str val 1 - > val 2 - > val 2 - > val 3 - > val
Returns the results of the Hamiltonian monte carlo and extra kernels.
ResNet block.
str deep exponential family.
Initalizes the parameters of the MCMC object.
Returns the KL function that should be used to determine the KL for a given type
str Read an image from a file.
str Download sprites from the server.
Create a character from skin hair top and pants.
str Create a sequence of frames from a character and a sequence of metadata.
Create a random sequence.
Flatten a list of summand kernels into a flat list of summand kernels.
Flatten a list of multiplicand kernels into a single list of kernels.
str Build fake data for training and testing.
str Insert back keep dimensions of x along the given axis in the right - hand - side
Make a list of non - negative dimensions.
Sort a tensor by top k.
Assert that x is a numpy array with ndims elements statically. If not raise an error
str Batch gather with broadcasting.
str Broadcasts event and samples to event dimensions.
Control inputs of the inverse of the Hessian.
str Transpose a tensor.
Sum along the rightmost ndims axes preserving the shape of the input tensor.
Returns the common dtype of a list of float32 or None if the list is empty.
Returns the initial state of a BFG function with the given initial position and correction pairs
Mask the input tensor by the power - Squared Euclidean distance.
Get the initial args for the population and the objective function. The initial args are the initial
finds the best value in the population given a list of values.
str Check convergence of a population with a given tolerance and position tolerance.
str - > list - > bool - > list - > bool - > list - >
str Returns the tensor to be used as the tol parameter.
str Build input pipeline.
Generate a plot of the given images and save it to the given file.
Convert a list of productions to a string.
str Function to call the LSTM model with the given inputs.
str Call the encoder with inputs and return the multivariate normal and diagonally distributed diag
str - > tf. float32 - > tf. float32 - > tf. float
Inverse of the hat function.
Solves the Lu solution.
str sp a
Check that a is a floating - point matrix and that its shape is at least num.
Generate a list of slices for a given number of blocks and a given number of input and
Generate a mask of the given number of blocks with the given number of in and out dimensions
str - > np. ndarray - > np. ndarray - > np. ndarray - >
Create a list of masks based on a list of degrees in the range [ 0 1 )
tfd. multivariate normal diag with zero - dimensional variance.
str Returns the weights of the model given the scale variance scale variances and noncentered
build a model from a dictionary. model can be either a dict or a dict of dicts
Build a seasonal transition matrix.
str seasonal transition noise.
str Constrained seasonal transition noise.
Validate the shape of the observation data.
call bigdl func to add the current value to the current value. scheduler is the scheduler
str Set the value of a given checkpoint trigger and path. If the path does not exist
set gradient clip constant
Optimize the model and return the result as a bigdl. nn. layer. Layer
set the summary of the training data. summary is a list of strings representing the summary of
set the value of the field to the value of the field summary is a summary of the
call bigdl func with self. value as training data and batch size as batch size
get news20 list of texts from news - 2. 0. 0 source is the source
str get w2v file from glove. w2v. txt and return
str Compile the optimizer loss and metrics into a bigdl. bigdl. bigdl.
evaluates the model on the given data and returns the result as a list of floats.
str Predicts the type of the input. If distributed is True predicts distributed features
str Function to get MNIST data.
str preprocess the MNIST dataset.
str | int | float | float | float | float | bool | bool | bool |
str Validate the given optimizer with the given test data and options.
Get the value of the field.
Call a Java function on a bigdl object.
str Converts a Java RDD to a Java RDD.
Convert a Python object to a Java object using the given gateway client.
bigdl. nn. ActivationFactory. get_activation_by_name returns an activation
Get the label of the value of the variable.
Read a distributed image from a parquet file.
Write a parquet file to the specified file system using the specified partition number and type.
Get an image from the frame. If to chw is set to True the image will
Get the image of the tensor.
Get the label of the tensor.
Get the value of a key in the dataset. If no key is given the value is
str Predicts the model on the input x.
call the Java function to transform this value to a Java value in the given dataset.
Save a Keras model definition to a JSON file at the given path.
str Build a Keras model.
Predict the class for a given data set. The data set must be of the same type
Get the weights of the tensor.
str training = True if the model is training False if the model is not training True if
Load a torch model from a file and return it as a layer.
bigdl. keras. converter. keras. converter. keras. converter. load
Returns a new criterion object with the given value and type. If type is str the criterion
load weights from a json file.
str Loads the training and test images from a keras database.
str Builds a Keras model.
Get the input shape of the function.
Get the output shape of the function.
str - > str - > str - > str - > str - > str - >
Read data sets from a zip file and return a numpy array of movielens.
Get the bigdl classpath for the current project.
Check if spark version is below 2. 2
Export a checkpoint as a dictionary of tensors.
call bigdl function to save a variable to a file or file - like object.
str - > k. tile - > k. tile - > k. tile - >
str Simple attention.
str Attention layer.
Get the log file for the agent. The log file will be opened in the same directory
str - > str - > str - > str - > str - > str - >
str Returns a list of summaries describing the gradients of the trainable variables and the gradients of the
Read data by config.
Interact with the Alice API and return the response and the number of times it was
str - > np. ndarray - > np. ndarray - > np. ndarray - >
Convert a list of probabilities to a one - hot one - hot one - hot one -
str Config for tf. Session.
Load the network from the specified path. If the path does not exist nothing is done.
str Returns the momentum variable of the current optimizer.
Update the learning rate and momentum variables of the model.
f1 macro for round - precision classification. This function is used to compute the F1
Process a word into a list of strings. If to lower is True the word will be
str dropout for variational dropout.
str Builds the model from the input word and embeddings. The model is built in
str Builds the basic network.
Trains the model on a batch of data and labels.
Predict on a batch of data.
make a vector from a list of tokens. bucket length is the number of words in the
Make a vector of indices corresponding to the given tags. The length of the vector is the
Calculates the BLEU measure for a given sentence y and predicted data. The BLE
Verify that the given URL is a valid sc url.
Extract a list of x509 certificates from a PEM - encoded string.
Verifies the signature of the request body. Returns True if the signature is valid False otherwise.
Verify a signature chain against a SAN or SAN URL and return the amazon certificate.
Return the JSON representation of the controls.
Returns a list of ms bot frameworks for all the controls in the group.
Returns the telegram for all controls in this control group.
Returns a list of all alexa controls.
Calculate the accuracy of a prediction.
round accuracy of the predicted values to the length of the true values and the length of the
Read data from a file and return it as a dict.
Make a hello bot agent.
Convert x to one hot unit.
Returns a prettified version of a list of metrics with the given precision rounded to the
Load the model from disk and save it to the graph.
Saves the current model to a file.
str Create a tf. train. AdamOp with the given loss and learning rate.
Search for a word in the trie and return a list of the search results.
str timer - starts the timer. This is a timer that runs in a separate thread.
Handle a request and return the response. If the request is not handled the request is re
Acts on the given utterance and returns the response as a list of strings. If the
Generate a response from the given response and request.
Handle an intent from the given request. If the intent does not match the request an error
Handle the launch request and return the response.
Returns a response with a boolean indicating whether the request is unsupported or not. The response is
Pretty print the object in a format suitable for printing to the given printer. If cycle is
Convert an elmo loss to a ppl.
Build a model from the given configuration.
Interacts with the model and prints the results to the user.
Run the model on a stream of input and output the results in a JSON format.
Read a text file and return a list of words and tags. If from words is True
Import and return a function from a string.
Get a metric by its name.
Convert a label to a decay value.
Get the best value from a list of values based on a list of losses.
Encode a list of tokens into an embedded word vector. If mean is set to True the
str Returns a list of names and links to the requirements file.
Return the logarithm of the loss of the predicted data.
Show the details of an item in a human readable format.
Create an ecommerce agent from the config file.
str Main entry point for the MSISDN. This is the main entry point for the
str Downloads a file from source url to dest file path can be a list or a
str untar - Untar a tar file to a given folder or to a given folder
Update a dict with the values from editing dict.
Set the md5 hash of the given url.
str Set a query parameter in a URL.
Returns a dictionary with the content of the response as a string.
Returns a JSON representation of the control.
Returns a dict with the bot s name and callback as keys and the bot s callback as
Returns a JSON representation of the control as a dictionary. The keys are the text and the
Returns a dictionary with the ms bot framework as the key and the buttons as the value.
Squad v2 F1
Evaluate the recall at a given k. The recall is the sum of the recalls at
Check if a GPU is available on the system.
Parse a config property and return it as a string. If the property is a string it
Parse a config file and return a dict with the parsed config values.
Expands the given path and returns the resulting path. If the path is already absolute it
The main loop of the application.
Delete a conversation by its key.
Refresh the list of valid certificates and remove any certificates that are older than their expiration time.
Verify the signature of a request. Returns True if the signature is valid False otherwise.
Handle a request and return the response. If the request is not valid returns an error.
Import a class from a string.
Get a model by its name. If the model is not found raise config error.
Get glm data from H2O API.
Make a glm object from a model object and a dictionary of coefs.
str - > CloudV3 object
Shuts down the H2O server.
Check if the H2O server is running.
str - List all the jobs in the H2O database.
Returns a list of timezones in the H2O database.
str Fills this object with data from another object from h2ocluster.
stabilize a test for a given number of times. If test returns True the test
Returns a summary of the data in a column of a given key. The column can be
Delete a frame from the cache.
Get a list of model builders
Validate the model parameters and return a dictionary of the results. The parameters are stored in the
Compute metrics for a given model and frame.
Delete a model from the server.
run EC2 instances and wait for them to be ready to be created. Returns EC2
str Terminate all instances in the specified region. If no instances are specified nothing is done.
str Stop EC2 instances in a given region.
str Start the specified instances in the specified region.
Reboot one or more EC2 instances.
wait for a list of ips to connect to a remote host and wait for it to be
Get the full name of a function. If the function is a class the full name is
Get a string representation of a function s arguments.
Wrap text at the specified number of spaces and indent the text at the specified number of spaces
str Joins the job and resolves it with the result of the current job.
str Fit the model on the given data. If y is not specified the data will be
Returns a dictionary of all the parameters in the model. If deep is True the parameters are
A signal handler that prints the signal to the console and terminates the program. This function is
wipe output dir
r Remove a sandbox from a directory. If the sandbox does not exist it will be created
Scrapes the port from the output file.
scrape cloudsize from stdout
str Stop the child process and wait for it to finish.
str Stop all the nodes and client nodes.
Get the IP address of the current node.
Get the port of the current node.
determine the size of the vector in the pre - trained dataset.
str H2O mean absolute error
str H2O mean squared error
str H2O median absolute error
str model h2o explained variance score
assert that var is of expected type. types can be a list of strings or a tuple
str Asserts that a value matches a regular expression. Raises an exception if the value does
raises an exception if v is not satisfied by the condition cond. If message is not
Check if a variable is of a given type.
Return a string representation of the given type.
Check if a variable is of any of the types in self. types. Return True if
Check if a variable is a valid enum value.
Returns the current configuration. If the configuration has not been loaded yet it will be read from
Read the configuration from the candidate log files and store it in the self. config attribute.
Yields the absolute paths of the log files in the current working directory.
Store the progress of the model in self. progress and update self. next poll time.
str time until the completion of the model is reached.
str Estimates the completion time for the current progress.
str Returns the next poll interval based on the current progress and the current time elapsed.
str Function to compute the progress at a given time.
Returns the time at which the progress is at the given x position. If the progress is
str Draw text to stdout. If final is True the text will be written to the final
Compute the size of each widget in the progress bar. This is the sum of all the
Get the size of the terminal in bytes. If the stdout is not a tty return num
str - > str - > str - > str - > str - > str - >
Fits the encoder to the given frame and returns the encoding map.
flushes the cache and refreshes the frame.
Returns the type of a column. If col is an integer it will return the type of
str Displays a summary of the data. If data is set to True the data will
str Describes the current frame.
Returns a new dataframe with the first n rows and columns.
Multiplies this matrix with the given matrix and returns the result as a new expression object.
Returns a list of the levels of this node.
Returns the number of levels in the tree.
Create a new expression with the given level set to the current node s level and return it
Set the levels of the expression.
Rename columns in the table. If no columns are given all columns will be renamed.
Set the names of the columns in the table.
str Set the name of the column. col can be either a string or an integer.
str - > bool True - > bool False - > bool False - > bool False -
Modifies the string column by n kfolds. If folds is not num then
Return a stratified column of the expression with the given number of folds.
str Prints the HoloViews structure of the HoloViews object in a readable format
Pop column i and return it. If i is a string it will be converted to an
concat returns a new DataFrame with the same columns as this one. If axis = num is
Create a new DataFrame with the same columns and types as the current DataFrame.
rbind a list of data to the table. data must be a list of o.
Returns a new QuerySet instance with the results grouped by the given criteria.
Return a new DataFrame filled with missing values. The method can be either str or float.
Return a re - level expression for the given expression y.
Insert missing values into the H2O database.
Returns a factor expression that can be used as an expression in the form of an expression.
Split a string into a sequence of strings using the given pattern. The pattern can be a
Return a copy of the expression with the left - hand side removed. If set is None
Return a string representation of the entropy of the table.
Returns the number of valid substrings in path to words.
Create a table expression from this expression. If data2 is not specified it will create a
Replace all occurrences of pattern in this string with replacement.
Return the expression converted to upper case.
Return a copy of the expression with missing values removed.
differflag1 returns an ast. ExprNode representing the difflag of the first column
Returns an expression that evaluates to True if this node is a non - empty string.
Returns an expression that evaluates to the minute of the minute. If the expression evaluates to a
Returns an expression that evaluates to True if the expression evaluates to True. If seed is not
Apply a function to the expression.
str - > code - > code - > code - > code - > code - >
str Parse a file and return a list of tokens.
str Move the cursor to a new location.
Return the unparse result as a string.
Returns a list of the centers of each cell in the model as a list of lists.
Returns the standard deviation of the centers of the model as a list of lists.
h2oconn. request wrapper for h2oconn. request.
Check the version of the H2O cluster.
Lazy import of a file or directory. If the file or directory does not exist it will
str - > Frame object - > Frame object - > Frame object - > Frame object -
Create a deep copy of the given data object.
str - model id - model id of the model to get the model for. Returns a
str - > GridDefinition - > GridDefinition - > GridDefinition - > GridDefinition -
Get a single frame by its id.
str Download a POJO of a model to the specified path. If the model does not
Download data to a CSV file.
A demo function that can be called from the h2o. demos module.
str Load a dataset from a file in the H2O directory.
Make metrics from predicted and actual data.
Put a file into a key. If overwrite is set to True the file will be overwritten
Check if a frame id is a valid frame id. If it is not raise an exception
Returns a human - readable string representation of the given size. If size is not an integer
Normalize a slice to a range of a given total. If total is None the slice will
Returns True if the slice is normalized.
Wait for the job to complete and set the future flag to False.
Returns a dictionary of the deep features for each model in the collection.
r Prints the summary of the models in a table. If header is set to True
str Prints a table of the hyper parameters and the sorted metric for each model in the
str Get a list of hyper parameters for a given model id or list of model ids.
str Returns a dictionary of hyper parameters for the model with the given id. If display is
get the archetypes of a test or a test data. test is the data to be
Plots a scree plot of the model. The type parameter can be str or tuple.
translate a name to a human readable name. This is done by replacing the first letter of
dedent text by indenting it by ind characters. If ind is equal to num dedent
The main entry point for the script. This is the main entry point for the script.
str Close the current session and reset stage to - num and timeout to - none.
Get the session id from the request. If the session id is not set it will be
start logging output to dest. If dest is None print to stdout. If dest is a
str - > dict - > list - > dict - > str - > dict - >
Returns a dict with the filename as the key and the contents of the file as the value
str Log the start of a transaction.
Log the end of a transaction.
str Log a message to a file or file - like object or file - like object.
str Print a message to the console if verbose is True. If verbose is False nothing is
str Get the automl data from the H2O API.
Download the pojo of the current leader. If no path is given the pojo will be downloaded
Download the mojo from the leader.
str = mean stds = sd means = bool means = bool stds = bool std
Transform a vector x by the mean and standard deviation and return the result as a string.
str Transform a matrix by multiplying the means and standard deviations by the standard deviations
Extract true string from string content.
find node name in each line
Find a build timeout in each line.
find a build failure in each line
find build id in each line
extract job build url from string
Grab the java message from the temp file and return it as a list of strings.
save a dictionary of failed tests and tests to a file in the failed tests directory.
Update the summary file with the contents of the summary text file failed tests and passed tests.
Write file content to filehandle. If file2read is not a file it will be
str write java message to file.
load java messages to ignore
Normalizes an enum constant to lower case and strips leading and trailing whitespace from the string.
Find synonyms for a given word.
Polls the H2O API to see if there are any errors or if there are
Saves the H2O object to the given POJO. If path is set to str
Fits a frame to the next step in the list of steps and returns the next frame
Returns a dictionary of the default parameters for each parameter. The key is the parameter name and
Returns the actual parameters as a dictionary. The keys are the parameter names and the values are
Get the deep features of a given layer of a test. If the layer is an integer
Get the scoring history for a given string. If the string is not in the model print
str Prints the current model and the summary of the model. This is useful for debugging
varimp returns a pandas. Dataframe of the cell values of the model as a numpy
Returns the residual degrees of freedom in degrees of freedom in degrees of freedom.
str - The name of the coefficients in the model. Returns none if the model is not
str Download the H2O POJO of this H2O dataset to the given path
str Download the mojo from the H2O library.
str Save model details to a file. If path is not specified the current working directory is
Check that the actual and predicted targets are the same length and raise an error if they do
str - Returns a list of models that are cross - validation for the current model.
Wait for a keypress to be pressed. Returns none if the key is not pressed.
Returns a pandas. data. DataFrame with the cell values as a list of strings.
str Prints the table in a pretty way.
str Finds a jar file in the current working directory. If path0 is not specified
A generator that yields the paths of the jar files in the current working directory.
Write a CSV file as a dict with the given field names as keys and values as values
Convert a relative path to a relative path to the package. This is the same as the
str Return a list of all the modules in the package.
str Write the API documentation to the specified output directory.
Returns a list of the values in the table in the form of a 2 - tuple.
str - > list of messages to be sent to the user.
Add a new message to the global message dict.
Save the current state of g to a file in the same directory as the java messages file
prints all java messages to a file in the same order as java messages to ignore text
parse command line arguments
Print out the usage string and exit with the number of exit code.
str Find all files in a directory and return them as a list of strings.
Find a magic in a file and return a tuple of the spell of that magic.
str Finds all the files in the root dir and prints them in a readable format.
Transform a string into a pipeline expression.
Summarize the failed runs in the test root directory.
extract intermittens from summary. csv and save them to a file.
str - The name of the plot to be plotted. type - The type of the
Return True if the H2O API is available. Return False if the API is not
trim data back to month to keep
Returns a dict of endpoint groups keyed by the name of the endpoint and the list of endpoints
Create or update a site in the database.
Returns the data as a JSON string. If no data is provided the default data will be
str Comment a user s medias. If no medias are found no comment is performed
str Get the credentials from the secret file. If no username is given then all credentials are
like a user s medias by a given amount. If filtration is set to
str Like the total number of medias for a given hashtag.
Check if a user is not a bot or not.
Read a list from a file.
str Schedule a message to be enqueued at a given time.
Defer the message to be settle. The message will be settle if the message
str Given a service path guess the service name and whether it is an arm or not.
str Get the URI for the given request.
str Returns a requests. Connection object for the given request. If the request has a protocol
Perform a request and return a response or raise an exception if there is a problem with the
Returns the authorization server.
Validate request uri.
Get the CLI profile from the Azure CLI configuration file.
win http. request. open
str timeout in seconds. seconds is in seconds. seconds is in seconds. seconds is in
str Set the value of a request header.
Get all response headers for this request.
Send a request to the client. If request is none the default request will be sent.
Get the status of the request.
Get the status text of the request.
Get the response body of this request.
Set the client certificate for this request. The certificate must be in Base64 encoded format.
str Put a request to the server.
str - > str - > str - > str - > str - > str - >
str - > None - > None - > None - > None - > None - >
str Get the response from the HTTP request and return it as a response object.
Returns a readable version of the given id. If the given id starts with the given prefix
Get the serialization name for the given element name.
get entry properties from xml node entry. include id prefix to skip. id prefix to skip
get children from a node from a list of nodes in a path. path can be a
str Find namespaces from child node.
str Create a service bus namespace from an XML string.
str - > service bus region xml - > service bus region xml - > service bus region
str - > bool - > bool - > bool - > bool - > bool - >
convert xml string to metrics object
Update an item in a Knowledge Base. If the item does not exist it will create
Build a package from a specific pull request.
replace a word in the database with a list of alterations. word alterations can be
Get the properties of a storage account.
Get a list of the storage account keys for a given service.
Regenerate storage account keys.
Delete the storage account with the given name. If the service does not exist nothing happens.
Check if a given storage account is available.
Gets the properties of a hosted service.
Delete a hosted service. If complete is set to True the hosted service will be deleted immediately
Delete a deployment. If vhd is True the deployment will be deleted from VHD
Swap a deployment from a production to a source deployment in a hosted service.
Update the status of a deployment.
Walk the given upgrade domain to the given deployment. The upgrade domain will be a list of
Reboot a role instance.
Delete the specified role instances from the specified service in the specified deployment.
Check the availability of a hosted service.
List the certificates associated with a given service.
Get the certificate for a given service.
Add a new certificate to a service.
Delete a certificate for a given service.
Get the management certificate for a subscription.
Add a management certificate to the subscription.
Delete management certificate.
Retrieve the properties of an affinity group.
Create a new affinity group.
Delete an affinity group.
Retrieve a list of subscription operations for a given time range and object id filter and result.
Delete a reserved IP address.
Associate a reserved ip address with a service and a deployment.
Disassociate a reserved ip address from a service and a deployment.
Get a reserved IP address.
Get a single role from a service in a deployment.
Delete a role from a deployment. If complete is set to True the role will be deleted
Start a role on a service in a deployment.
Start one or more roles in a deployment.
Restart a role.
Add a new DNS server to a service in a deployment.
Update an existing DNS server.
Delete a DNS server.
List the versions of a resource extension.
Unreplicates a virtual machine image.
Share a virtual machine image with another virtual machine.
Delete an image from a virtual machine.
List all images in the virtual machine.
Delete an image from the server. If vhd is set to True the image will be
Retrieve information about a specific data disk.
Delete a data disk. If vhd is set to True the data disk will be deleted
Update a disk.
Delete a disk. If vhd is set to True it will delete the VHD
str Builds the receiver.
Creates a shared access key object from a connection string.
list subscriptions for a topic
str - > asynchronous operation.
Perform an HTTP GET request with the given path and X - MS - API - Version.
Perform an HTTP PUT request with the given path body and X - MS - API - Version
Get the status of an operation.
str - > list of headers to add to the management request. xms - > list
str Builds a package from a travis tag.
Retrieve a list of all available regions for the current user s account.
Get a list of all namespaces available on the server.
Get a service bus management namespace by name.
Create a service bus management namespace in the specified region. If the namespace already exists it will
Delete the namespace with the given name. If the namespace does not exist nothing is done.
Check if a namespace is available in the service bus management service. The service bus management service
Retrieve a list of topics for a given topic name.
Retrieve a list of notification hubs associated with the given name.
Retrieve a list of all of the relays for the given name.
Get a list of metrics for a given queue name and metric.
Get a list of metrics for a given topic name and metric.
Get the metrics rollups for a hub.
Get a list of metrics for a given relay.
str Create a new environment in the given directory.
str Create a new virtualenv with the given packages and a temporary directory.
Create a new server.
Set the admin password for a server.
List all quotas for a given server.
Delete a firewall rule.
List firewall rules for a given server.
List all service level objectives for a given server.
Delete a database.
Retrieve a list of databases.
Get the current state of the session. This is the current state of the session.
Set the session state.
Validate a challenge. Raises error if the challenge is invalid.
This is the default error handler. This is the default error handler that will be used to
Create a new queue with the given name. If a queue with the given name already exists
Delete a queue by name. Fail if queue does not exist. Fail if queue does exist
Get a queue by name.
Create a topic with the given name. If the topic already exists it will be overwritten.
Get a topic by name.
Create a new rule for a topic in a subscription. If the rule already exists it will
Get a single rule by topic subscription and rule name. Returns a list of rule objects.
List all rules for a subscription in a topic.
Create a subscription on a given topic.
Get a subscription by topic name and subscription name. Returns a subscription object.
List all subscriptions for a topic.
Send a message to a topic.
Unlock a message in a subscription.
Sends a batch of messages to a queue. Messages can be either a single message or a
Unlock a message in a queue.
Receive a message from a queue.
Receive a message from a subscription.
Create a new event hub with the given name. If the hub already exists it will be
Update an event hub. hub can be either a hub name or a list of hubs
Get event hub by hub name.
Send an event to a hub.
str - > str - > str - > str - > str - > str - >
Returns an authorization string for the given request.
returns True if token is expired or False if token is not valid.
str Get a token from a given host and path. If the token is expired return it
str Update request uri and query.
Delete message from queue or topic. If no queue or topic is specified the message will be
Unlock a message from the queue or subscription. If the message does not exist raise an error
renew lock on queue or subscription
str Adds the headers to the given request object.
Serialize the message body as a batch.
A general error handler. This is the default error handler that is raised when an error occurs
Handle redirects to the client.
str Specifies the profile to use. Must be one of known profiles or definition.
Delete a queue from the service bus.
Delete a topic from the service bus.
Creates a SharedAccessKey object from a connection string.
str Get properties of the service bus resource.
str True if the lock has expired. False otherwise.
Takes a queue of results and returns a list of the results as a list of strings.
The main thread of the task collection. This is the main thread of the task collection.
Build a config dictionary from a package name and a list of package names in the config.
str Create a message object from a response object.
str convert etree element to rule object
Convert an etree element to a queue object.
Convert an etree element to a topic.
Convert an etree element to a subscription object.
parse enum results into a list of objects.
str Get the entry properties from an etree. Element. If include id is set to True
list all queues in the service
list all topics in the service
Get the website details for a given webspace and website name.
Delete a site from the server identified by webspace name and website name. If farm is
Update a website in the given webspace.
Restarts a website in the given webspace.
Retrieve historical usage metrics for a website. Metrics can be either strings or a list of strings
Get the list of metric definitions for the given webspace and website.
Retrieve the publish profile XML for the given webspace and website.
Retrieve the publish profile for the given webspace and website.
Create a new cloud service.
Check the availability of a job collection.
Get information about a specific job collection.
Cancels one or more scheduled messages.
Re - establishes a connection to the server and queues the unsent messages to be sent
Get a certificate from a publish settings file and write it to the given path.
str Loads cookies from the cache and restores them to the session.
Returns the terminal width of the given value. The value can be a bytes object or a
Get cut prefix of value with max length. If value is not a bytes object it will
print a message in the terminal in the same order as the terminal width. If the user
Format a file size to a human readable string.
Format the elapsed time in hours minutes and seconds into a human readable string.
Create a status line based on the given parameters. If the status is too long it will
progress generator for progress bar output. progress is a generator that yields the progress of the iterator
str Return a generator that yields segment numbers for the current period.
segment generator for all segments in the image. segment template segment lists segment objects are returned.
str Wait for the given time to elapse. Returns True if the time has passed.
Put a segment into the queue. If the queue is full the segment is added to the
Queue a value into the given queue. If the queue is full the value will be put
str - > list of tuple - > list of tuple - > list of tuple - >
str Extract the nonce from the last redirect from the last request in the history.
str Find vpid by url.
str Parse JSON data into a Python object. If data is not a JSON object it will
str Parse an XML string into an ET. etree. ElementTree object.
Parse a query string and return the result as a dict. If a schema is provided it
search for a key in a dict and return a list of the keys that match the key
str Iterates over all tags in html that match the given tag. Returns an iterator of
Determine the encoding of a sample as a JSON string.
Parse the response as JSON and return the result as a Python object.
Parse the XML content of a response object into a Python object.
str - > None - > None - > None - > None - > None - >
str - > None - > None - > None - > None - > None - >
str Parse a list of cookies into a dictionary of query parameters.
Get the message to be sent to the client.
str Create a new record and add it to the current record object.
login user by email and password. If the user is logged in it will be redirected to
str Loads a support plugin from a file in the current stack.
str Update the query string in the given url with the values from the given qsd.
Iterate over the chunks of the audio file and return them as a sequence of tags.
Returns a generator that yields all of the required arguments of the argument with the given name.
check if the file exists and if not output the file and exit if it doesn t.
str Create the output for the given plugin.
str Create an HTTP server.
a generator that yields HTTP requests from the given server to the given player. If no player
Passthroughs a stream to a player s output stream.
open a stream and return the file descriptor and prebuffer.
Output a stream to a player.
Read data from a stream and write it to the output stream.
str Handle a single stream.
Fetch a list of streams from a plugin.
str Fetches streams from a plugin retrying up to a given number of times if an error
Returns the name of a stream given its name. If the name is a synonyms stream then
Print list of available plugins to the console.
Authenticates a user using the Twitch OAuth flow.
str Load plugins from a list of directories. If a directory is not found log a warning
str Set up the HTTP session options.
str Loads plugins from a given directory. If no directory is specified all plugins will be
str Log the current version of the system and the version of the Python and Streamlink.
Get the stream id from the given text. If the text is not an image return None
str Returns a list of streams from an iframe. If no iframe is found None is returned
Returns the value of an option. If the option does not exist it will return None.
str - > None - > None - > None - > None - > None - >
Get the value of a plugin option.
str - > str - > str - > str - > str - > str - >
Load all the plugins in the given path.
str - > int hours minutes seconds - > int 0 - > int 1 - > int
Find a player s url.
Load m3 data into a unicode object.
Returns the player that supports the given command. If the command is not supported returns None.
get stream id from html
get stream info from html
Login with the given username and password. Returns True if successful False if not.
str Map a function to a key in the context of the context of the current context.
Call the API with the given parameters and return the response as a Python object.
Start a new session and return the session id.
Get information about a media.
str Create a new API object from the command line options. If the command line option is
Returns a string representation of the given character. If the character is a number it will be
Read n bytes from the stream and return them as a string.
Get the value of the bit at the current index. If extra is not specified the value
Returns the explanation of the error.
Set the decode table to be used. The decode table must be a list of strings.
str Set the length of the symbol table. length is a dictionary mapping each symbol to its
Read a length and symbol from the given stream.
Returns an explanation of the bit pattern at the given index. If the index is out of
Return the value at index. If index is out of range raise error. If index is
Returns the lower and upper bounds of the value at the given index in the extra table.
Return the value of the bit at the given index. If the index is greater than the
Returns the mnemonic of the symbol at the given index. The mnemonic is a string
Return the mnemonic for the given index. If index is less than num the mnemonic
compile the actions into a list of actions.
Perform an action on the window w and return the result of the action. action can be
make a hex string from the current position and the current position of the file.
Read the metablock length from the stream and return the length of the metablock
Returns True if the file is uncompressed False otherwise.
Read a block type and store it in self. block_types and self. block_
converts a list of values to a list of values.
Read an array of prefixes of a given kind.
patch a function so that it can be used as a hidden attribute of the dataset.
str - > str - > str - > str - > str - > str - >
This is the main function of the Vaex application. This is the main function of
Open multiple files and return a dataframe with the contents of each file as a single row.
str Prints a table from a Vaex. samp. single. table object.
Returns a string containing the contents of a table as an astropy. table. Table object
Convert a list of scalar values to a list of numpy. ndarrays.
Read data from a CSV file into a pandas. DataFrame.
A simple REST interface to a VAEX server.
Generate a zeldovich dataset.
Concatenate a list of dfs into a single string.
Returns a range of virtual values.
str Open a dataset at the given path and add it to the list of opened datasets.
Evaluate an expression on the dataset.
Returns a list of the columns that are depending on this selection.
sorts the list of pairs according to the number of columns. If no column is specified
wait for the plot to be updated redraw and process any events that are waiting for the plot
Open a document in the current operating system.
Write a file to a file - like object or file - like object.
Split a list of arrays into a list of arrays and a mask.
Calculate the median of the values in the dataset.
Create a 2D plot of the dataset. This is a widget that can be used to
str Create a 3D plot of the volume at the given x y and z coordinates.
Returns the dtype of the expression. If the expression is a variable the dtype of the variable
str Returns the private directory for this object.
Remove the virtual meta data from the private directory.
str Create a meta file with all the virtual columns units ucds and descriptions.
str Create a meta file for this VAEX instance.
str Set the value of a variable. If write is True the variable will be written to
str - Evaluate a variable in the context of the current context. If the variable is a
evaluates a selection mask in the scope of the current list. If i1 or i
str - > dict
str Create a copy of the data frame with the same columns and values as this one.
Converts a DataFrame to an arrow table.
Convert to an astropy. table. Table.
str Add a new column to the DataFrame.
Rename column name to new name. If store is set to True the column will be renamed
add virtual columns cartesian to polar
add virtual columns cartesian velocities to polar
str Add virtual columns polar velocities to cartesian.
add virtual columns with rotation angle degrees. angle can be in radians. If propagate is True
str Add virtual columns spherical to cartesian
add virtual columns cartesian to spherical
Add a virtual column to the table. If the column already exists it will be renamed.
Delete a virtual column and emit a changed signal.
str Add a variable to the model. If overwrite is set to True the variable will be
Deletes the variable with the given name and emits the variable changed signal.
Returns the last n characters of the string. If no number is given returns the last n
prints the head and the last n rows of the table.
Print a table with the two items i1 and i2. i1 and i2
Set the current row of the table.
Returns a copy of the DataFrame with all columns trimmed.
str Take a subset of columns from the DataFrame and return a new DataFrame with the selected columns
Extract the first num characters from the string and return it as a new string. If the
str Undoes the current selection.
redo the current selection with the given name. If no name is given the current selection
check if the current selection can be redoed by the given name. If no name is
str Select a rectangle within a rectangle limits.
str Selects points in the image whose radius lies within the circle r.
str selection Creates a new selection and adds it to the selection history and returns the result.
Find a valid name for the given initial name.
Returns a graphviz representation of the tree.
categorize a column.
Returns a new DataFrame with the given column indexed by the given values. If values is none
Returns the data of the table as an object.
Returns the length of the dataset. If selection is set to True then the length of the
str Concatenate columns from another table to this table.
concat returns a new data frame containing the concatenation of this data frame and the other data frame
str Add a column to the data frame.
Patch a function in the data frame with the name of the function. The function will be
Fill missing values in an array with a given value.
Convert an array to a string if it s larger than sys. maxsize. If it s
Returns a numpy. recarray containing the contents of the dictionary as a numpy. recarray
str Store properties to a file - like object.
str Write a comment to a file - like object.
str Write a property to a file - like object.
Yields a generator of newlines from a file - like object. If the file is a
shows the current version of the module and its dependencies.
str rename a keyword argument to a new keyword argument. If the old keyword argument is deprecated
Function to set the Fourier library to use. If none is passed the global Fourier
str Tracks the number of beats in a file.
adjusts the tuning of a wav file by the harmonic tuning and pitch
str Hz - to - Mel - to - Hz - to - Mel
str Mel to Hz
str Fourier Binomial Frequency Frequency Samples and Fourier Binomial Fourier Binomial
CQT filter using the CQT filter library.
trims off the last n bins of a CQT response to the last n bins
Compute the CQT response for the given data.
str Early downsampling count.
str Early downsamples the audio data.
Returns a uniform transition matrix with the given number of states. The number of states must be
str Set the current image of a matplotlib plot.
Check that axes is an instance of matplotlib. pyplot. Axes. If axes is None
scale the axes based on the axes type and the axes which are the axes to scale.
str n - Frequency Frequency Frequency Spectral Frequency Spectral Frequency Spectral Frequency Spectral Frequency
str Melhz basis
cqt - hz binning for a given number of octaves. fmin can
N chromosomes in the range [ 0 num ) with octave bins per octave
Returns a time series with the given number of frames.
stretch a time vector y to a given rate. rate must be between 0 and num
str HPSS beats
helper function to compute the neighbors of a given set of indices. r is a list of
Calculate the bandwidth of a window.
Fill a window of size n with data from the window sq. win is a window of
Calculate the Jaccard distance between two numbers.
Return the index of the first candidate that overlaps with the given query and intervals.
match intervals from from to to and return a list of integers where each integer represents the distance
str - > np. ndarray - > np. ndarray - > np. ndarray - >
Convert audio to mono format.
str Returns a set of files in the given directory with the given extensions.
str Stretch the input file to the output file. speed is the speed in seconds.
str - > dict - > dict - > dict - > dict - > dict - >
str Demonstration of the HPSS algorithm.
str Tracks the last num beats in the onset envelope using the Fourier transform
str Finds the local beat for a given envelope and period.
Track a local score with a backlink and a cumulative score with a tightness of num
Returns the last beat in the cumulative score.
str Function to detect on - set data.
Check that x is an integer and cast it to an integer. If cast is None the
Read the next image from the vcap and return it as a string. If the image
str Get a single frame from the vcap. If the frame is already in the cache
str cvt2frames - write a number of frames to a file in a given directory
Function to track progress of a list of tasks. The function will be called with a progress
str - > np. flip - > np. flip - > np. flip - >
rotates an image with a given angle around a given center. If auto - bound is
str Clips bboxes to the same shape as the input image.
str Scaling a list of bboxes by a given scale and clip shape.
str Impad an image to a new array with the specified shape and padding value.
Returns an impad of the same shape as the input image with a multiple of divisor pixels
scale the size of the image to the given scale. scale can be a float or a
str Resizes an image to the given size. If scale is set to True it will
resize an image to the dimensions of dst. dst must be a numpy array of the same
str Register a file handler for the given file formats.
Get a priority from a string or int.
Dequantizes an array to be between min and max values.
str Shows an image on the window win. name is the name of the window to
str Dequantizes dx and dy into a flow matrix. If denorm is True the
str Load a model from a checkpoint file.
Convert a state dictionary to a CPU state dictionary.
str Save the model state to a file in mmcv format.
str Initialize a torch. optim. optimizer object from a dict or torch. optim. optimizer
str Create a logger and add a log file to it if log dir is not None.
Returns a list of the current parameter values for the current optimizer. If the optimizer is not
str Register a new hook with the given priority. If the hook already exists it will be
str Runs a list of loaders in a given number of epochs in a given work dir
str Register training hooks.
cuts a video file into a new video file.
Concatenate a list of video files into a single video file.
Returns a list of strings from a file.
str - > dict from file filename - > str key - > str type - > str
3x3 convolution.
str - > np. ndarray - > str - > np. ndarray - > str -
str Create an image from a byte string or numpy array. The flag parameter can be either
str Writes an image to a file. If auto is True the file will be automatically created
Convert a BGR image to a grayscale image. If keepdim is True the image
str gray2bgr - Convert gray to bgr - format.
casts an iterable to a given type and returns the result as a new instance of the
Checks if a sequence is of a given type.
Slice a list by a list of length lens. lens can be a list or a tuple
average of n values in the history. n must be greater than or equal to the number
str Scatter a tensor or list of tensors to a set of devices.
Return the value of a color or tuple of color values.
str - > int - > int - > int - > int - > int - >
str Start the timer. If the timer is already running the timer will be started immediately.
str Returns the time since the start of the timer. If the timer is not running raises
str Returns the time since the last check. Raises an error if the timer is not running
str Shows a flow in a given window.
str Create a color wheel with the given bins. If no bins are given the default bins
str Accuracy of the output to the target with respect to the topk of the output
str Scatter a list of inputs and a list of kwargs.
Perform the request and return the response. If the request times out it will retry the request
Get the content of the response as a JSON string.
Get the response body as a text string. The response body is encoded as UTF - 8
Handle the callback and return the result. If the callback does not match an error is logged
a generator function to send multiple requests to the server. If gather is set to True the
Sends a request to the given URL with the given HTTP method.
Starts the master process. The master process is started in a separate thread. The master process
v2 normalize task v1. 0. 0 task v2. 0. 0 task
Returns the name of the wheel distribution in the form of a string with the name and version
str Returns the archive basename of the wheel distribution.
str Adds additional requirements to the package info file at the given path.
Create a message with the given text and optional speak.
Returns an activity with the suggested actions.
Renders an attachment with the given text speak and hint.
Renders a list of attachments with the given text speak and hint.
Create an attachment with the given content type and url.
Sets the telemetry client.
Read a set of keys from the container.
Write a set of changes to the database. If a container does not exist it will be
Delete one or more keys from the cache.
Create a new item from a result dict.
Create a dictionary from a store item.
Sanitize a key to be used as a key for a key - value pair.
str db - Database to create container - Container to create database - Container to create container
Get or create a database.
Get or create a container in the database.
Fill the qna event with the data from the given query results. If the query results
Create a conversation reference from an activity.
Returns the name of the step at the given index. If the step does not exist it
Check if a channel supports suggested actions.
Check if a channel supports card actions.
Get the channel id of the activity.
Check if the given auth header is a token from the emulator.
Create an attachment with a hero card.
str classical - > int val - > int classical - > int val - >
Returns a copy of the object. If name is not specified the name will be used.
str - > qasm if string - > qasm if string - > qasm if
Returns a QASM string for this parameter.
Run the given circuit in the working set.
str Runs the given pass and returns the resulting DAG. If the pass is not
Returns the dump of all the passes in the working set as a list of strings.
Dumps all the passes of this flow controller to a dictionary.
str Factory for a controller. If no controller is provided the default controller will be used.
str u = 0. 0 - 1. 0 - 1. 0 - 1. 0
str - > tuple of parameters for a single gate.
Returns a matrix of a single gate with the given parameters. If no parameters are given the
Convert a circuit to a DAG.
str Function to calculate the exponential of a given value at a given time tau and a given
str Function to calculate the oscillator for a given x a tau f phi and c
plot the coherence of a qubit with a given standard error and a given function.
str Mean and Standard Deviation of a Gaussian distribution. This is the shape of the distribution
plot rb data with error bar and survival probability.
str Composes two u3 angles.
Rotation from YYZ to ZYZ.
str Validates the input quantum state.
str Trims the background of an image and returns it as a PIL. Image object.
Returns the span of the given qregs and instruction. If instruction. cargs is
str Runs the transpiler on the given DAG and stores the result in the
Add a barrier to the circuit. If qargs is a list it will be added to
Process a bit id node. Returns a list of tuples of the register and the bit index
Process a gate node.
process a logical NOT node and add it to the DAG. The condition is applied to
Process the measure of the given node. The node must have the same number of children.
Process a single node and store the result in the condition attribute. If the node is a
str Create a new DAG operator with the given name params and qargs.
Returns the duration of the given channels in seconds.
Returns the start time of the given channels.
Stop a channel and return the number of seconds elapsed since the last time it was called.
Generate instructions for all the schedules in this schedule. The instructions will be executed at the given
Dumps additional data to the valid data. If many is True the additional data will be added
Load additional data into the valid data. If many is True the additional data will be loaded
Validate an instance against the schema.
Returns a dict representation of the model as a string.
Load a model from a dict.
str qft - Quantum Fourier Transform. qft - Quantum F
str Chops off the elements of a numpy array that are less than a certain number of
str Outer product of two vectors.
Returns the concurrence of a state.
Computes the Shannon entropy of a state.
str Returns the mutual information of the given state. d0 is the number of dimensions
str Entanglement of formation
str Ent qubit.
Flattens a schedule into a single schedule.
Shifts a schedule to a given time. If name is not specified the schedule will be
Inserts a new component into a parent schedule at a given time.
Append a component to a parent schedule.
str Create a U3 gate with the given parameters.
Returns a string describing the current state of the backend.
str Start the iteration of the iteration.
t r est = 0. 0. 0 1. 0. 0 1. 0.
str Disassembles a Quantum object into a list of tuples.
Calculates the hamming distance between two strings.
Create a quaternion from a rotation angle and an axis.
str - > Quaternion from euler angles and order str - > Quaternion
str Normalizes the quaternion and returns a copy of the quaternion. If inplace is set to
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
Process the data and return a dictionary with the values rounded to the specified number of places.
Check if the value is of the correct type. If the value is a list return the
check if j is a valid index or slice of the range of the qiskit array
str Check if a matrix is square.
str Check if a matrix is a diagonal matrix.
str Returns True if op is a symmetric matrix.
str Check if a matrix is hermitian.
str Check if a matrix is positive semidefinite.
str Check if a matrix is an identity matrix.
str is_unitary_matrix - Check if a matrix is unitary.
convert data to a choi. rep can be a string or a list of strings.
converts a scalar to a superoperator. rep can be a string or a list of
Convert data to kraus. rep can be a string or a list of strings.
Chi - to - Chi operator.
Convert data to the specified rep. rep can be a string or a list of strings.
Convert data to a stinespring rep. rep can be either str or kraus
converts data to a rep or kraus to a stinespring or kra
from operator.
stinespring to operator for qiskit and qiskit_stinespring.
Reshuffle an array with the same shape as the input and output dimensions as the output
Reshuffle a list of data according to a superoperator. The input and output dimensions
- - - - - - - - - - - - - - - - - -
str - choi to kraus
str Stinespring to Kraus
stinespring to choi
convert kraus to stinespring
str kraus to superop
Chi - to - Chi transform.
Chi - to - Pauli transform.
str Reravels two matrices and returns the result as a 2 - D array.
pauli transform from pauli space to a space of num qubits.
Check that the input and output dimensions are the same.
str hide tick lines and labels
Set the label convention for the plot. The convention can be a string or a list of
str Clears all of the data from the object.
str Add a list or numpy array of vectors to the list of vectors to add to the
str Render the plot to the current axes.
u Plot the front of the surface and wireframe.
str Shows the figure.
Return the top layer as a string.
Returns the MID of the layer. The MID is formatted according to the MID
Return a string with the center of the bot of the layer. The center of the layer
Returns the maximum length of the top mid and bot points in the range [ top mid bot
str - > list of parameters for the given instruction.
Returns a label for a box instruction.
Return latex representation of this node in a nested scope. If no nested scope is given the
Filter out deprecation warnings from marshmallow3. This is useful when you want to
Returns information about the local hardware.
Checks if a connection to the given host has been established. Returns True if the connection was
check html for a given job and set the status to the given header. If interval is
Create a constant time series.
Calculate the square of a period and a square of a complex number between 0 and 1.
Calculate the triangle for a given period and amplitude.
Calculate the cosines of a complex number at a given frequency and amplitude.
Computes the derivative of a gaussian function at the given times and amp. If ret is True
Calculate the square of a time series with a Gaussian distribution.
Manages the default state of the state machine. The default state machine is a simple
A default manager for a given set of gates. A default manager is an unroller
Returns True if the given register is a quantum or classical register and False otherwise.
mirror returns a copy of the receiver with the mirror of all instances in the receiver.
Returns a circular copy of this circular object with the inverse of each instance in reversed order.
Append an instruction to the pipeline.
Check that there are no duplicates in a set of qubits.
check that all of the qargs are quantum registers and that all of the qubits are
check that all classical registers in cargs are in the classical registers of self.
Check that two RHS objects are compatible with this one. If they are not raise an
Returns the QASM string representation of the state of the state machine as a string.
Returns the number of ops in this gate.
Returns the total width of all qregs and cregs.
Count the number of operations in the instruction table.
Returns a copy of this circuit with the given parameters bound to the given values.
str Binds the given parameter to the given value. The parameter must be one of the
map free gates and return a list of mapped gates and a list of remaining g
str Calculates the distance between a layout and a set of gates.
Return the score of a single step.
str Copy the circuit metadata from the source dag to the target dag.
str Transform a gate to a node with the given layout. The layout is a dictionary of
str edge is a list of integers where each integer is a quantum and each integer is
str Runs the transpiler on the given DAG and returns the resulting DAG
str Add a physical qubit to the circuit.
str Add an edge from src to dst.
Returns a subgraph of this coupling with the given nodes.
Returns a list of all physical qubits in the circuit.
Returns True if the graph is weakly connected False otherwise.
str Computes the distance matrix from the shortest path in the graph to the shortest path in
r Returns the distance between two physical qubits.
str cu1 | cu1 | cu2 | cu3 | cu4 | cu5
str Reverses the order of the instructions in the instruction list.
str Return self if any of qregs is true otherwise return self.
str If classical = val is True return self otherwise return self.
Subscribes to an event. The callback will be called when the event is fired.
str Event - > None - > None - > None - > None - > None -
str Unsubscribe a callback from an event. Returns True if the callback was unsubscribed False otherwise
Dispatches an event to the broker and returns the result as a string.
Initialize the circuit with the given parameters and qubits.
str Defines the circuit with a disentangling gates and a quantum.
Returns the gates to uncompute the circuit. The gates will be pushed to the
Calculate the Bloch angle of a pair of complex numbers.
str list of angles list of qubits - > list of angles - > list of angles to
Returns True if the given value is a virtual value.
Returns a copy of this layout.
Combine this layout into a mapping from virtual to physical.
str Cx = 2^31 + ctl1 + ctl2 + tgt +
Inserts a new component into the schedule at the given start time and returns the resulting string.
Check if a property is fenced.
converts a list of gates to a list of indices for a given set of q
str Runs the transpiler on the given DAG and returns a new DAG
str - > pauli group - > pauli group - > pauli group - >
Convert a string label to a boolean vector.
init from boolean values z and x.
str Calculates the product of two pauli vectors and returns the new pauli and the phase
Convert to a QISK operator string.
Returns an instruction representation of the circuit.
Update the z - axis with a boolean array or a list of indices. If indices is
Update the x attribute. If indices is not specified the x attribute will be set to the
str Appends a list of paulis to the end of the list.
str Delete the qubits at the given indices.
str Create a random gate with the given number of qubits. If seed is not None the
Create a PauliState from a single pauli state and a label.
Returns the measure outcome of a given qubit.
Add samples to the classical memory using the given measure parameters.
Add a QASM measure to the state machine. If cmembit is not None
Add a qasm reset to the circuit.
Validate that the initial statevector has the correct number of qubits and the number of qubits.
str Initializes the statevector of the state machine.
Get the state vector of the state machine as a numpy array. The array will be padded
str Check if sampling is allowed for the current experiment. If not set the measure flag.
str Runs the given job and returns the results as a list of dictionaries.
str Check that the qubits are valid. Raises basic aer error if there are too many
Validate that the initial unitary is the same as the number of qubits and the number of
str Initialize the unitary of the circuit.
str Returns the unitary of the circuit as a numpy array with the same shape as the
str Runs the given job in the backend and returns the result as a dict.
str Check that the qubits are valid and that all experiments have the same number of qubits.
str - > bool - > bool - > bool - > bool - > bool - >
str Runs the transpiler on the given DAG and stores the result in the
Returns True if the interval overlaps with the current interval False otherwise.
Shifts the interval by the given time and returns a string representing the new interval.
Shifts the channel by the given amount of time and returns the resulting timeslot.
Returns the start time of the given channel or - 1 if the channel does not exist.
Return the stop time for the given channels.
Check if a timeslot is mergeable with another timeslot.
Merge two timeslots into a single timeslot.
Shifts all the timeslots in the collection by the given time.
Report a comment or a comment on a branch. If infourl is not specified the
iplot state paulivec
str Rzz = > Rzz theta = > Rzz theta = > Rzz theta
str Cswap - Cswap a ctl between tgt1 and tgt2
str Create a program graph from a DAG.
Select the next program edge in the graph. If there are no program edges return None.
Select the best available CX gate from the list of available CX gates.
Select the best available hw qubit for the given program.
Returns a list of all instructions in this gate.
str Reverses the order of the gates in the list.
str Returns a copy of this gate with only the q - values in qregs.
str If classical is True return the classical representation of the gate. If val is
str Is unitary function.
str Computes the conjugate of the tensor.
str Transpose the data.
n - th power of the input array to the output array. n must be an integer
Returns the shape of the input and output dimensions in reversed order.
str Converts an instruction to an operator. If the instruction is a quantum circuit it will
swap the mapper layer and return a dagcircuit to update the mapper layer with the new data
separate a bitstring into a string with a list of substrings. creg is
str Format a level 0 memory array into a complex array with a minimum number of elements.
str Format level 1 memory.
Format level 2 memory data.
Format a dictionary of counts into a human readable string.
str Format a state vector to a complex number.
str Format a unitary matrix into a complex matrix.
Submit the job to the executor.
Returns the status of the job.
Returns True if the frequency is within the range of lo and lo < = ub.
iplot bloch multivector
str Runs the decomposition on the given DAG and returns the resulting DAG.
Choose k from n to n + k + k + k + k + k + n
returns the index of the k - th item in the list lst. n is the number
Get a list of unique hardware backends.
Returns the operator of the current object or raises an error if the object is not in the
Sample a constant value at a given duration with an optional name. If no name is specified
Pulse a zero value at a given duration.
Sample a square with a period of duration and amplitude amp and phase. If period is none
Sample a sawtooth pulse of a given duration with a given amplitude and phase.
Sample a triangulation with a period of duration and a phase of phase amp.
Sample a cosine pulse at a given duration with an optional frequency. If no frequency is
Sample a sine with the given duration and amplitude amp and phase. If no frequency is
Sample a gaussian distribution at a given duration with the given amplification and standard deviation.
Sample a gaussian derivative at a given duration with the given amplitude and standard deviation.
Print the node and all its children in a pretty - printed way.
Get instance of backend class. Raise exception if backend is not an instance of backend class.
str Remove all operations with the given name.
str Add a quantum register to the graph.
str Add a classical register to the graph. The register must be a classical register
str Add a wire to the graph.
str Check if the given condition is satisfied by the given name. If the condition is not
Returns the bits in the given condition. If the condition is none returns an empty string.
add a new node to the graph with the given operation qargs cargs and condition.
str Apply an operation back to the graph and return the id of the new operation.
str Check the validity of a wiremap.
Map the condition from the wire format to the given condition. If the condition is none the
str extend - Builds the graph back from the given DAG. If no edges are
str Check wires list.
make pred and succ maps from nbunch node to graph edge.
str Returns the full pred and succ maps for the given input circuit and wire map.
Returns a list of the topological nodes in the multi graph in lexicographical order.
str Get all edges in the graph. If no nodes is provided all edges are returned.
Returns a list of all nodes in the graph that match the given operator. If no operator
Returns a list of all nodes that are a gate.
Returns a list of all named nodes in the graph.
Returns a list of two q gates.
Returns the predecessors of the given node in the graph.
Returns a list of the predecessors of the given node in the graph.
Returns a list of all ancestors of the given node.
str Returns the quantum successors of the given node. If the given node is an integer
str Remove a node from the graph.
str - > Remove all ancestors of the given node from the graph. node can be an
Remove all descendants of a node.
remove all nodes that are not ancestors of the given node. node can be an integer or
remove nondescendants of a node
str Return a list of all the topological op layers in the DAG.
Generator over all the multigraph layers in the graph.
Returns a generator that yields all nodes on the given wire. If only is set to True
Count the number of operations in the graph.
Returns a summary of the properties of the graph.
Returns a tomography of the given basis set. The tomography is calculated using the given
pauli meas gates
str Returns a dictionary of tomography data for the given name and tomoset.
projector - project a list of operations to a basis set. op - a list of
str Tomo - Linear Inverse
str Wizard of a matrix.
str - > Wigner data - > Wigner data - > Wigner
str Function to call when measuring a gate. If no measuring function is defined nothing
Check the status of a job and print it if it is not already on the screen.
Monitor the status of a qiskit job. If monitor is True the job will be
str Simplify a u gate.
str Runs the transpiler on the given DAG and returns the DAG.
str Shows the job history for the current job.
str cu3 | cu3 gate | cu3 | cu4 | cu5 | cu
str Builds a Bell circuit.
str circuit - The circuit to be transpiled. transpile - The transp
Return the current drive. Raise pulse error if there are no drives in the pulse.
Returns the control channel for this pulse.
Return the current measure of the pulse. Raises pulse error if there is no measure.
Acquire a channel from the pool. Raise pulse error if there is no channel in the pool
str Input state
unset qiskit logger
hint on the state of an iplot plot. This is useful when you want to plot
str - > None - > None - > None - > None - > None - >
Pops the current lexer off the stack and stores the filename and line number of the current
str Pushes the current lexer onto the stack and creates a new lexer for it.
Get the bound method for the given instruction.
convert a acquire instruction to a qobj model
Convert a frame change instruction to a QModel object.
Convert a persistent instruction to a QModel instance.
Convert a drive instruction to a QModel object.
Convert a snapshot instruction to a QModel instance.
Update the annotations of the given pulse by adding a number of annotations to the end of the
Returns a string representation of the given DAG.
Make a dictionary of observable states from a matrix of observable states.
str Update the symtab with the given object. Raises a qasm error if the
Verify that a symbol is a declared bit.
Verify that all expressions in the expression list are in the symtab and that they are
Verify that gate obj is a gate of type str and that it is a gate of type
Verify that the object is in the global registry. Raises an exception if the object is not
str - Verify a list of registred objects.
Find the column of the token in the input string. If token is none return num.
Set the debug flag for the parser. If val is a boolean it will set the debug
Parse the given data and return a QASM object.
Parses the given data and returns the number of times the data was parsed. If debug is
Parse the qasm file and return the parsed qasm data.
str Crz gate.
Create a basis state from a state string and a number of complex numbers.
str Projector of a state to a density matrix. If flatten is set to True then
Returns the purity of a state.
str Given a DAG return a dictionary of property names and their commute states.
str Runs the CX algorithm on the given DAG and returns the DAG.
str Get a single qiskit backend by name or all backends if name is none.
str shape of the bipartite.
Returns a generator of register names and maximum value for each label in the given bit labels.
Truncate a float value from a regex match object and return it as a string.
str LaTeX representation of the image in LaTeX format.
Returns the number of columns and the number of columns in the image.
Get the beamer page size.
str Load a schema from a JSON file. If no name is given the name of the
load schemas and validators
random unitary operator
str Ginibre matrix
str Computes the density of a Ginibre distribution with the given rank and seed
str Random density bures.
Returns a list of the names of all the calls in this node.
power of the input array to the output array of the n - th element of the input
str compose a subsystem of this state with another state. qargs is a list of qubit
str Create a super op with the given instruction. If the given instruction is a quantum
Run the BFS algorithm on the given DAG and return the resulting DAG.
str Runs the decomposition on the given DAG and returns the resulting DAG.
str The definition of the circuit in the form of a u3 gate and a two qubit
Check that the value is of the expected type. If the value is a collection it must
Check the type of the given value. If the value is not a list it will be
Set the number of times to ignore when evaluating the expression. If atol is less than or
rtol is the number of times the function will be called when the function is called.
str Reshapes the input and output dimensions to match the input and output dimensions.
Returns a tuple of input dimensions. If qargs is None returns all input dimensions.
Returns a tuple of the dimensions of the output data. If qargs is None returns the
Return a copy of the dataset.
Returns a new QiS object which is the power of the input to the output.
automatic dimensions for qiskit
Deserializes the given value into a string. If an error occurs during deserialization it will be
Serialize a value to a string.
Check that the value is of the correct type for this field.
Solve the diagonal of a matrix using the SVD method func.
Returns the inverse of the state.
str - name of the label to be used for the label field. If name is not
Returns True if the expression is unitary. If atol or rtol is None the expression
Convert the data to a string and return it as a string. The input and output dimensions
Convert the CPT to an instruction. The CPT must be cptp. If the
Returns a transformer for the given data. If data is a quantum channel it will be
Patch strptime to use a different version of datetime. strptime. This is necessary because strptime is
Returns True if all tokens in tokens are valid. If any token is not valid returns False
Split a string into a list of tokens. If keep is set to True the tokens will
str - > datetime. time - > datetime. time - > datetime. time - >
str Check if the given date string is applicable to the current locale.
str Translate a date string into a string. If keep is set to True the string will
str - > datetime - > datetime - > datetime - > datetime - > datetime - >
str - > int - > int - > int - > int - > int - >
str - > int - > http - > http - > http - > http - >
Compose the configuration file and write it to disk. Returns the path to the config file.
Get information about all streams and return a dictionary with information about each stream in the stream.
str Log the contents of stdout and stderr.
Expands a time string into an integer. The time string can be a number or a
str Read the configuration from the command line and return it as a dict.
str Read the cached options from disk and return it as a dict.
str - File with cached options. si - File with cached options. json - File with
make stpd file
str Create a new step for the given rps schedule. If the given rps schedule
str Returns the rps at time t.
str Executes a command and returns the exit code.
Decode monitoring data into a list of points. Each point is represented as a dict with the
str Returns a list of points for the given label.
str Publishes the given value to the core.
Count the number of times each code matches the regex in the codes dict.
str Stop the feeder and wait for all tasks to finish and close the feeder.
str Feed the stpd file into the queue and wait for the next task to finish.
Add user - defined options to the command line.
str Configures the core with the given options.
Collect data from the queue and notify listeners. If end is set to True the data will
str Notifies all registered listeners of an aggregated data.
discovers UDP ports from the jmeter process. Returns None if no UDP port is
str Terminates the process and waits for it to terminate after timeout seconds.
Read data from a file into a list of stats items. The first item in the list
Create a criterion object from the given criterion string.
str Get the configuration of a host from a file. The file is expected to be a
str Create the startup config file for the host. If the file already exists it will be
Check if the disk is available on the system.
check if memory is available and is less than self. mem limit raise runtime error if not
Get the right line of the right panel.
Add a widget to the list of widgets to be displayed.
Fill a rectangle with spaces and return a tuple of the width of the rectangle and a list
str - > int - > int - > int - > int - > int - >
str Add a widget to the screen.
str Make an HTTP request to the writer endpoint and return the response. If trace is True
str Load all plugins from config. json and add them to self. plugins.
str Get a plugin of a given class.
Get a list of plugins of a given class.
Collect a file into the artifacts directory.
str Add an artifact file to the list of artifact files to be processed.
str Create a temporary file with the given suffix and prefix. If no directory is given the
str Loads configuration files from a list of files.
str Write the configuration to a file. If no filename is given the current configuration will be
Get all options from a given section. If prefix is specified only the first prefix is returned
Returns a list of all sections that start with the given prefix.
str Convert a chunk of stats data into a generator of stats items.
Prepare the agent and client for execution. This is the main entry point for the agent.
poll for data from all agents and return the length of the data received. If the load
Send the collected data to all registered listeners.
Detects the current configuration and returns it if it is a telegraf or a monitoring configuration
handle data items for the given host and update the sign dictionary.
Subscribe to a set of channels.
str Runs the event loop and subscribes to the given channels and closes the event loop
Close the connection to the server and close all open open connections to the server. This is
a helper method to make a single HTTP request. retry is the number of times to retry
Submit a new order for a given symbol quantity side type and time in the given force.
Get the position of a symbol.
str List all assets of a given status. If status is none all assets are returned.
str Check if obj is a dict with key and value of type key type and value type
dict param.
Construct a logger that will be used to log the event to a structured logger that will be
Construct a structured event logger for the given dagster. The event logger is a structured logger
str Create a new config object from a config file.
str Returns the pipeline with the given name or raises an error if the pipeline does not exist
Get a list of all available pipelines.
Get the next event from the queue. If the queue is empty wait for the next event
str Executes a pipeline through a queue.
Waits for all processes to finish processing. Returns True if all processes have finished or False if
determines the type of the field to be used in the DAG.
Builds the execution plan for the given pipeline and artifacts. The pipeline must be the same as
str Returns the solid with the given name or raises an error if the pipeline does not have
Construct a list of publish comands.
Create a new version and commit a new version to the repository and tag a new version.
str - > str - > str - > str - > str - > str - >
Download a file from S3.
Upload a file to S3.
raises an error when a user code boundary is reached.
str Create a new directory if it doesn t already exist. If it already exists raise an
A context manager for the dagster user code. The context manager is a context manager that
str Create a context free log for the given run and pipeline. The context free log is
True if any of the input and output expectations have a step that has a success.
str True if all of the steps in the DAG are skipped.
Returns a dictionary of the values that have been applied to the current step. If the step
Returns the failure data of the DAG.
Check if the given config value is a valid dataset.
Check if the given config value is a valid table.
Returns a dictionary of the topological steps of the given execution plan. The keys are solid
str Returns a dictionary with the connection parameters as keys and the current connection settings as values.
Get a new connection to the database with the given parameters. The connection will be automatically closed
Create a cursor for the database. If no name is given the default name is used.
Close the connection to the database.
Make a model from a dict of model fields.
Convert a list of mdl objects to a list of python objects.
Returns a form field with the default values for the form field and the model container and the
Convert a dict to an instance of the model container.
apply rel filters to the given queryset.
str Function to compute the NFPS for a given set of counts and sizes.
str Function to compute the real NFPS for a given set of counts and sizes.
str - > list of tuples where the first tuple is the size of the partition and the
calculates the correlation coefficient between a1 and a2. r1 and r2 are
str seed int hashvalues int hashvalues str
Calculate the size of the hash value in bytes. This is the size of the size of
Merge another seed into this one.
Union of multiple MCMC objects.
str Query the database for the given minhash and size. Returns a generator of the keys
Returns the weighted min hash of the given values.
Remove a key from the hashtables. If the key is not in the hasht
Count the number of values in the regulatory set. If the count is less than
Merge other with self and return the new value. If self and other do not match raise
str Clears the current regulatory state.
calculate the APK score of actual and predicted. k is the number of k - gram
convert actual and predicted values to a k - mean value. k is the number of k
str Sorts the hashtables by hash key.
str Query for k keys with the given minhash. k must be less than or equal
Close all the hashtables and all the keys.
get user data from jwt data object.
Return a social login object.
Select a number of characters from a list of strings. If reading is set to True the
str - > str - > str - > str - > str - > str - >
str Parse a statement.
Parse a value from the syntax tree and return it. If no value is found an error
Advances to the next token in the current line. If the current line is the same
A configurable reference may be a selector or a string. If the selector is a string it
Create a new session and write it to the output directory.
Wrap a function so that it can be called with its arguments and return a function that can
Format the given value as a string. If the value is not a string return none.
str set config is locked. If clear is True all constants are cleared. If clear is
str Check if a function or class might have a parameter with the given name.
Get the argument spec for a function. If the spec is not cached it will be cached
Returns a list of positional parameter names for the function fn with the given list of positional arguments
str Parse a config file.
Parse a string into a config object.
Iterate over all the values in a nested structure.
Iterate over all references in a config object.
Class decorator to create constants from an enum. The class must be a subclass of enum.
Returns a list of all matches that match the partial selector.
Returns the minimal selector for the given complete selector. If the complete selector is not in the
Convert a search query to a string. The query is a dictionary of field - value pairs
Return the number of seconds to retry after the given response.
Validate the value against the metadata.
Returns the property description as a dictionary. The key is the property name and the value is
Set the value of the field to the given value. If the value is not a string
Get the thing at the given index. If the index is out of range return none.
str - > None - > None - > None - > None - > None - >
Set the default headers for all requests.
Check if the request host is in the list of hosts and raise an exception if not.
Get a thing from the database. If the thing doesn t exist it will be created.
post a message to a thing and return the response as a json object.
Delete a thing by its id action name and id. action name and id are optional.
Start the server and listen for incoming requests.
Returns a dictionary with the action name as the key and the value as the value.
str - > None - > None - > None - > None - > None - >
Finishes the thing and notifies the thing s action. This is called when the thing is
Returns a dictionary with the event name as key and the event data as value.
Returns the IP address of the current machine. If there is an error connecting to the machine
Get a list of all IP addresses in the system.
str - > None - > None - > str - > None - > str - >
This method is called when an external value has been updated. It will emit an external value
Returns a dictionary with all the properties of the object as keys and their descriptions as values.
str Sets the href of all properties and actions to prefix the href of all properties and actions
Returns a list of property descriptions.
Returns a list of action descriptions for the given action name or all actions if no name is
Returns a list of event descriptions. If no name is given all event descriptions are returned.
str property - a property object to be added to the resource. property - a property object
str - Removes a property from the object.
Returns the value of the property with the given name or None if the property does not exist
Returns a dict of all the properties of the object.
Sets the value of a property. If the property does not exist it will be created.
Returns the action with the given name and action id. If no action with the given name
str Add an event to the list of events to be processed.
str Adds an available event to the list of available events. If metadata is none an empty
Perform an action with the given name and input. If an action with the given name does
Remove an action by name and id. If the action does not exist nothing is done.
str Adds an available action to the list of available actions. If metadata is none the action
str Remove a websocket from the list of subscribers and remove all events from the list of available
str Add an event subscriber to the list of available events for a given event name.
str Remove an event subscriber from the list of available events.
Notifies all subscribers of a property change.
Send an action to all subscribers.
Send an event to all subscribers of the given event type.
Returns a copy of the model with the given annotations renamed to the original field name.
Update the model with the given fields. Returns the number of rows updated.
Creates a new record and returns its primary key. If a conflict target or action is specified
Creates a new record and returns it. If a conflict target and action are not specified the
Build an insert compiler for the given rows.
Returns True if the field is magical and False if it is magical and False if
Called when a model is saved. This method is called when a model is created or updated
Called when a model is deleted from the database. Sends a signal to delete the model
Resolve the expression in the value. If the value is a string it will be converted to
Returns a string representation of the expression.
Returns a copy of the current object with the given relabels applied.
Adds a list of conditions to the query. If the query already has a join it will
Checks if the given field is an hstore field.
Create a required constraint in the hstore.
Rename a required field in the hash store.
Drop a required constraint from the hash store.
Returns the name of the required constraint for the given table field and key.
Create a SQL statement for creating a new index on the given model.
str Backend class to be used as a base for the backend. This is the base class
str Prepare the database to be executed. This method is called when the database is ready to
Convert the value to a string and convert it to a list of strings if necessary.
Return a string with the name of the primary key of the model.
Returns a list of SQL statements that can be used to insert into the database.
rewrite insert with update or nothing depending on query. conflict action. If the query has a
rewrite the insert update statement with the given parameters and return a tuple of the SQL statement and
Generate insert nothing statement.
Returns the model field object for the given field name. If the field name is str it
Format the name of the given field as a string.
Returns the value of a field in the current query object. If the field does not exist
Create a unique constraint in the hstore for the given model field and keys.
Rename a unique constraint in the hstore.
Drop a unique constraint from the hstore.
Generate a unique constraint name for a given table field and list of keys.
Iterate over all uniqueness keys for a given field.
Adds an extra condition to the query.
Return the SQL statement with the extra conditions replaced with the actual values.
tdist 95 conf level
str Pooled sample variance
tscore returns the t - score between two samples. The t - score is the average
test if two samples are significant by tdist95conf level
Topologically sort a list of nodes by their topological order.
Generate n queens of a given number of elements in a sequence.
Select a random position from the unexplored list. If there are no unexp
str Playouts a random move in the board.
Filter out benchmarks that are not in the given base version.
Expands a benchmark name into a list of benchmark names.
str - > list of tuples of strings and regular expressions.
Returns a tuple of the domain and the last degree of the polynomial.
fetch items for a given category from a given date and yield them as a generator of dicts
str - Parse raw posts into a list of post objects.
Get information about a specific user. This is useful when you want to get information about a
Fetch a list of items for a given category.
str Fetches the items from the feed and returns them as a generator.
Setup the command parser for the backend.
Fetch bug items for a given bug category and from date. If no from date is given
Get a list of bugs for a given date. If no date is given all bugs are
Get comments for the given bug ids.
str Get the history for one or more bug ids.
Retrieve a list of attachments for a given bug.
fetch all the merge requests for a given date and return them as a list of dicts.
Get a list of merges for a given date. If no date is provided all merges are
Get the content of a single merge.
Get a list of versions for a given merge.
Get a single version of a merge.
Get the notes for an item.
Get a list of all emojis of a given type and item id.
Get a list of emojis for a given item id and note id.
Calculate the time to reset the rate limit.
fetch all the items from the repository and return them as a generator.
Fetch and update the rate limit for the repository. If rate limit is exceeded raise an exception
str Create a command argument parser for the backend.
fetch a list of items for a given category message from a given date. If no date
Returns a unique identifier for the given item. If the item does not have a unique identifier
Returns the number of members of a conversation.
Get information about a channel.
Get information about a specific user.
str Create a command argument parser for this backend.
Returns the timestamp of the metadata updated on the given item or None if the metadata was not
Parse a buglist string into a list of dictionaries.
Parse bugs details from an XML string. If the XML string is not a valid bugs details
Logout from CGI server and close the http session.
Get the metadata of the bug as an XML string. This is the content type of the
Returns a list of bugs for a given date. If no date is given the list will
Get a list of bugs for a given list of bug ids.
Get the activity status of a bug.
fetch a list of events for a given category from a given date to a given date.
fetch all the events for a given category from a given date to a given date
str Get a list of events for a given group. date can be a datetime object or
rComments retrieves a list of comments for a given event in a given group.
rrsvps returns a paginated list of rsvps for the given group and event
Fetch a question from the server and return a list of html items.
Fetch comments for a given question. The question can be a string or a list of objects
str Builds a question object from the given html question question and comments.
Get questions from the API at the given path. If there are too many redirects in the
get html question by id page number of results per page is the number of results per page
Get the comments for a given post id.
str - > dict - > user - > dict - > dict - > dict - >
Parses the number of html pages from the question.
str Parse the user info from an update. xml file and return it as a dictionary.
Fetch a list of Reviews from the Gerrit API for a given date.
parse reviews from raw data into a list of reviews
fetch a list of reviews from gerrit28
Returns the version number of the gerrit server.
Get a list of reviews from the Gerrit server.
Retrieve the next item in the group.
Execute the given command from the archive and return the output.
Execute a remote command on the remote host.
Setup the command parser for the backend.
Fetch issue data from the API.
Fetch all attachments for an issue.
Fetch all the messages for an issue.
Fetch all activities for an issue.
Fetch the user data from the API and return it as a dict.
Get a user by name. If the user does not exist it will be created.
Get the raw text of an issue.
Get all the items for a collection of an issue.
Fetch items from a given path using the given payload. If the path does not exist it
Returns a generator that yields a list of subscriptions per page. This is a generator that yields
Returns the group id for the current user or None if the user does not have the group
str Fetches the given url with the given payload and returns the response as a dict.
str Create a command argument parser for the backend.
Find all backends in a given package.
Fetch metadata from an archive. If the archive is not available an error will be raised.
Remove classified fields from nested dict and return the filtered item.
Parses the given arguments and returns a parsed object.
str Set basic and token authentication arguments. Basic auth is a boolean. Token auth is a
str The archive arguments to be passed to the archive command. This is used to set the
str The output of the command. The output of the command can be a file or a
str Backend to be used to fetch the data from the backend and write it to the outfile
str The name of the archive to be used. If no archive is specified the default archive
Returns the timestamp of the metadata updated on the given item. If the item is not a
str Parse a Mbox file and return a generator of message objects.
fetch and parse messages from a mailing list and return them as a generator.
Copy a mbox to a temporary file and return the path to the temporary file.
Validate a message.
convert message dict to dict with message id and date fields.
str Get a message from the file.
fetch all items from the repository and return a generator of commit objects. category is the category
Parse a git log file and return a generator of git commit objects.
str Get the path to the git log or set the path to the git log file.
str Create a command parser with the given arguments. This is used to setup the command line
str Parse the stream and return a generator of commit objects. Each commit object is returned.
Clones a file from a given URI to a given directory. Returns a new instance of
Count the number of objects in the repository.
str Return True if the repository is detached. Return False if the repository is not detached.
git update - update repo. git repo. git repo. git repo. git repo.
Syncs the repository with the remote repository. Returns a list of commits. If the remote
Read commits from a pack file.
str Update all the references in the repo with the given list of references.
str Return a list of refs in the repository. If remote is True return a list of
Update a reference in the repository. If delete is set to True the ref will be deleted
Execute a command in a new thread and return the output as a generator. If the command
str Read the stderr of the process. If the process returns a non - zero exit code
str Executes a command and returns the output. If the command returns a non - zero
fetch all the tweets for a given category and return them as a generator of tweets
str Create a command - line argument parser for this backend.
Fetch a list of items for a given category.
str Fetches the list of items from the API and returns them as a generator.
str - > dict - > str - > int - > dict - > dict - >
Returns a list of hits for the given keywords. The keywords can be a list of strings
Returns the timestamp of the metadata updated on the given item. If the item does not contain
Returns the category of the given item.
fetch all the pull requests for a given date
fetch repo info yield a dict with the fetched repo name as key and the timestamp as value
Get the reactions for an issue comment.
Get a list of reviewers for a pull request.
Get a list of the hashes of all commits in a pull request.
Pull review reactions for a comment.
Get a user by login. If login is empty return empty dict. If login is not
Returns a list of reactions for the given issue number.
Get a list of issues for a given date.
Pulls from the repository. If no date is provided pulls from the latest date.
Pulls reviewers for a specific pull request number.
Pulls the commits for the given page number.
Pull review reactions for a given comment.
Get the user details for a given login. If the login is already in the database return
Returns a list of orgs for a given user. If the user does not exist it will
rate limit get the number of requests remaining for the given token.
Get the current number of tokens and rate limits for each token in the list of tokens.
Randomly choose the next api token to use. If there are no more than n tokens
Check if we need to switch tokens.
str Update the current rate limit and update the last rate limit if it has been updated.
Initialize the metadata for the archive. This is called when a new archive is created.
str Store the given data in the archive.
str Retrieve a single entry from the archive.
str Create an archive at the given path. Raises an archive error if the archive already exists
str Verify that the archive is valid. Raises an error if the archive is not valid.
str Loads the metadata from the database.
Count the number of rows in a table.
str Create a new archive with the given name.
r Removes an archive from the filesystem.
str Search for archives with origin backend name category and archived after timestamp.
str Searches for all files in the directory and yields them as a list of strings.
str Range of months between from date and to date. num is the number of months in
Remove characters that are not allowed in the XML string.
Parse issues from a raw JSON string.
Get a list of issues for a given date. If no date is given all issues are
Get a single issue by its id.
r User Get a single user by its id.
str Call the API with the given resource and parameters and return the result as a string.
Fetch a list of dockerhubs from the API.
str Fetches the items from the repository and returns them as a generator.
Get the content of a repository in a repository owner is the name of the repository owner is
str - > list of custom fields - > list of custom fields - > list of custom
str Parse issues from a raw response.
fetches items from a given url and returns a generator of issues if there are any.
Get a list of issues for a given date.
Get a list of comments for an issue.
Returns a list of all the fields for the current resource.
Fetch a list of build items from the API.
str Get a list of all builds for a given job.
str - > list of questions from a raw response.
str Get all questions for a given date. If there are no questions for a given date
Setup the command parser for the backend.
Fetch items from MediaWiki API.
Get the max date from a list of reviews.
1. 27 fetch all reviews from arviter and return them as a generator.
Get a list of pages for a given namespace. If apcontinue is not specified all pages
str Get the most recent pages for a list of namespaces. If rccontinue is set to
Parse a JSON string and return a generator of messages.
Filter a message by a list of chats. If chats is none return True.
Method to get a list of updates from the API. If no offset is provided all updates
fetch all the items from nntp and return them as a generator. category is the
str - > dict - > dict - > dict - > dict - > dict - >
str - > dict - > str
Fetch data from the remote or from the archive.
Fetch an article from the API and return it as a dict.
Fetch the data from the remote server and store it in the archive.
fetch data from nntp. nntp. nntp. nntp
str Create a new HTTP session and mount it to the requests. adapters. http object.
Setup rate limit handler.
sleep for a fixed amount of time if rate limit is not reached raise error if rate limit
str Update the rate limit based on the rate limit reset header and the time to reset.
Parse a supybot log file and return a generator of messages.
Retrieve a list of archives from supybot for a given date.
List all of the supybot archives in the directory.
str Parse the stream and return an iterator over the items in the stream. If the stream
fetch all the items for a given category from a given date and return them as a generator
str Parse the topics page and return a list of tuples containing the topic id updated at and
Get the details of a specific topic.
Get a single post by id.
str - category - category of the item to fetch. kwargs - kwargs to be passed to
Parse a JSON string into a list of Task objects.
Parse a JSON string and return a list of User objects.
list of tasks from the maniphest for a given date. If no date is given
Get a list of transactions for a list of pids.
Get a list of users for a given list of phab IDs.
Get a list of phab IDs.
str Call the API with the given method with the given params and return the response as a
str - > str - > str - > str - > str - > str - >
str Parse the contents of a JSON file into a list of strings.
Get a list of contents for a given date. If no date is given all contents are
str Returns a list of historical content for the given content id and version.
Parse the result of the test and convert it to a measurement.
Returns the capabilities URL for the given service.
str Read a XML document from the given URL.
Read a string and return it as an etree. _Element object.
str - > TimeSeries
Build the url with the given path. If the url query string is not specified it will
str Constructs a schema from a list of elements and a namespace map.
str Get the describe featuretype url.
complex input with a web processing service and a web processing service to process the complex data.
Get a list of all movies for the authenticated user.
Get a list of values from the TV API.
Get information about the resource.
Returns a list of alternative titles for the user.
Returns a list of credits for the current user.
Get a list of all external ids.
Get a list of all keywords for the current object.
Get recommendations for the resource.
Get a list of dates for the current user s release.
Get a list of releases.
Get all the translations for the current resource.
Returns a list of similar movies.
Get a list of all reviews for the current user.
Returns a list of the upcoming items for the current request.
Returns a dictionary with the current state of the player. The keys are the name of the
Retrieve a popular item from the API.
Get the top rated data from the API.
Get a list of all account states for the current user.
Create a new rating for the current user.
Get movie credits.
Returns a list of tv credits for the current user.
Get information about the resource.
Retrieve a list of items from the API. If no items are found an empty list is
str Get information about the current session.
Get a list of all movies for the current session.
Creates a new token and returns it. The token will be stored in self. attrs.
Validate the token and return the response.
Creates a new session with the given parameters.
Creates a new guest session.
Get a list of movies rated by a guest session.
Get the status of an item.
str Create a list of items in the database.
Remove an item from the collection.
Clear all items in the session.
Get a list of ratings for the resource.
Similar to get but returns a list of similar objects. Returns a list of similar objects.
A GET request to the Air API and return the response as a list of dicts.
Get information about a season.
Returns a list of credits for the specified series and season.
Get a list of all external ids for a given series id season number.
Get information about the season and episode in a specific series.
Get the credits for a series season episode number.
Get a list of all the external ids for a series season episode number.
str - > None - > None - > None - > None - > None - >
Retrieve a collection of objects from the API. This is useful when you want to retrieve a
Retrieve a company by name.
A shortcut for GET method with keyword arguments.
Get multiple objects from the API.
Normalize a string into a list of tokens.
Given a list of reference strings return the number of occurrences of each reference and the number of
Cooks a reference string and returns a set of n - grams in it.
str erfcc - Eratosthenes of the Fisher - Yates
str Aligns the source and target text blocks into the target text blocks using the given parameters
Get all descriptors in a module. If submodule is set to True then only return descriptors that
str - > Register a list of descriptors from a JSON string or a list of strings.
Register a new package. If version is none the default version is used. If ignore 3
Prints a string to the given file or stdout if the string is not a string attribute.
str Checks if desc is an instance of descriptor and if include abstract is True or False.
str - > dict - > list of json - > dict - > list of json -
A 3 - tuple with the coordinates of the current node in the context of the current node
str Returns the atomic area of a sphere. The area of the sphere is determined by the
Returns a list of the surface area of each rad.
str Create a VDW object from a Molecule object.
Create a descriptor from a JSON object.
Returns a new molecule with missing values filled with the given value.
Returns a new molecule with all missing values removed.
Returns a list of tuples containing the keys and values of the dictionary.
Return a dict with the keys as keys and the values as values. If rawkey is
Get the name of the field.
str Prints a progress message to stderr if it is on a tty. If it is
str Prints a message to stdout. Clears the progress bar and clears the message.
Fail the program with the given message exc info and status. If name is str the program
Generate a temporary file and add it to the list of files to be uploaded.
set tempfile to target or delete tempfile if target is already set.
clean temp files
Returns the fixed path of the file. If the file does not exist it will return the
Returns a list of legal parameters for a given API method.
merge opt params into kargs. opt params can be a dict or a list of dicts.
str Add options from boto client. extra_client. params to a command line parser.
str Terminates the execution of the task queue. If an exception is given it will be
str Add a new task to the queue.
str Joins all the workers and all the tasks in the queue.
str Calculates the number of tasks that have been processed and adds it to the self. processed
str Get the S3 access and secret keys from the environment.
str Get the access and secret keys from the command line.
str Get s3 keys from s3cfg file. If s3cfg is not specified
init s3 keys from command line or from environment variables or from s3cfg file.
Connect to S3.
Returns a list of all files in the given directory and all subdirectories in the given directory.
Expands S3 source into a list of dictionaries.
str Uploads a single file from source to target. If source is a directory it will
str Put files from source to target. target can be a path or a list of paths
Create a bucket in S3 if it doesn t already exist.
update the privilege of target with the value of obj. obj is a dict. target is
prints the contents of one or more S3 objects from the source to the console.
str Downloads a single file from S3 to the given target path.
str Get a list of files from source to target. If target is a directory it will
str Copy a single file from source to target.
str Copy files from source to target. If target ends with path sep it will be copied
Delete all files in a directory and all sub - directories from a given source directory.
Walk a directory and return a list of relative paths.
sync files from source to target. src s3 url must be valid. dst s3
Generate a md5 hash of the given file with the given block size. If the file
Get the md5 hash of the file.
str Create target directory if it doesn t already exist. If target already exists raise failure.
check if the local md5 matches the local md5 of the file in the cache.
Return True if the path matches the filter and False otherwise. If recursive is set to True
walks through S3 objects in s3dir. filter is the path to filter.
Checks if the object should be included in the result. If so adds it to the result
Get the privilege of a file.
Looks up an object in S3. If the object doesn t exist it returns none.
Read a chunk of data from the given source at the given position.
Verify the file size of the downloaded file is the same as the size of the downloaded file
Write a chunk of data to a file at a given position in a file - like object
str Given a list of command line arguments run the command with the given list of arguments.
Validate arguments according to the format and the arguments passed to the command handler. If the format
List buckets in S3.
Create a new bucket in the S3 bucket store.
put handler for S3 put command.
Get files from s3 and return them as a list of file objects.
cat files from a S3 source to standard output.
DSync files from source to target using s3handler.
str cp file or directory to a file or directory in S3.
mv source path to target path
Deletes a file from the S3 bucket.
Du handler for S3 upload. This is the main entry point for the S3
Get the total size of all S3 objects in the given list of S3 objects.
str - > datetime. date - > datetime. date - > datetime. date - >
str - > datetime. time - > datetime. time - > datetime. time - >
str Match a delta string to a datetime. timedelta object and return a tuple with the delta
Check if value is a dictionary.
Get a message from the hub.
str Push data to the callback list.
str - > bytes - > bytes - > bytes - > bytes - > bytes - >
This is the exception handler that will be called when a job fails to run. It will
str Create a new log handler and add it to the log if it doesn t already exist
str Get the current request from the bottle flask pyramid pylons and pyramid
Report a message with the given level request extra data and payload. If an exception is raised
str Log file to be used for the agent.
str - > dict - > None - > None - > dict - > None - >
Adds the current lambda context to the data dictionary. If the data already exists it will be
str Add request data to data dict.
Check if we need to add local variables to the frame.
str Builds the request data from the given request object.
str Builds the data to be sent to the server. This includes the hostname and the
str Builds a payload from a dictionary of data.
The main entry point for the rollbar script.
Compose chosung and joongsung from chosung and joongsung
Decomposes a hangul letter into its two parts. The first part of the hangul
Check if a letter has jongsung. The letter must be a jong letter.
str Given a word and a josa dictionary return a new word with the josa substit
str Returns True if node is inside except handler or False if node is not inside except handler
Returns True if the node is inside lambda False otherwise.
Get all elements of a given node.
str - > str - > str - > str - > str - > str - >
Check if the node is a built - in class or not.
str Returns True if the node is an astroid. raise node ; otherwise returns False.
True if the node is a function decorator.
Returns True if node is an ancestor of the given frame or False if node is not an
Returns the parent node of the given node. If node is an assign name tuple or list
Returns an iterable containing all the fields in the format string. If the format string is incomplete
Get an argument from a call node.
Returns True if the given node inherits from the stdlib exceptions module ; otherwise returns False.
str If node is decorated with property return True if node is decorated with property return False if
Checks if a function is decorated with a given set of query names.
Find the first try or except handler in a given node or None if none is found.
Check if the given node is an import or a fallback block.
Return a list of exception handlers for the given node or None if no exception handler is found
Returns True if the node ignores the given exception.
Check if a class is abstract or not.
Try to infer the value of the given node. If the value cannot be inferred return none
Get the type of a node.
True if postponed evaluation is enabled.
Given a module name return a list of the qualified names in the form of a list of
Get the import name from an import node and the module name. If the node is an
Returns a string representation of the tree defs in the form of a list of strings.
str Creates a graph of the given type and adds it to the given section.
str Importing of a module.
Check that a module is imported and if so add it to the list of imported modules.
Check if the node is at the beginning of an import.
Record an import node and its name in the import stack. If the node is an import
Check relative import.
str Importing of a module.
Check if a module is deprecated.
str Check if a module is available in the preferred modules list. If so add a message
str Reports the list of external dependencies of this module.
Returns a graph of all importers in the graph that are dependent on the given package.
str Get the default options from the rc file. If the rc file doesn t exist return
inserts the default command line options into sys. argv.
Returns True if the node s attribute is visible False otherwise.
str Get the callbacks for the given node.
str Visit the given node and call all the callbacks associated with it. If the node is
Check consistency of all messages in the queue.
Visit a call node and determine if it should be considered deprecated or not. If it should
Check that the node is an instance of datetime and if it is add a message to the
Check open mode.
Handle a message. This method is called when a message is received from the console.
Get the title of a node.
str Set the default options for the plugin.
bool True if the node should be shown False otherwise.
str Add a class to the diagram.
str Returns a generator of the ancestors of the given node at the given level.
get associated nodes for a given class node and a given level of the current node
str - > None - > None - > None - > None - > None - >
Returns a tuple of the package and class diagrams for the given node.
visit a ImportFrom node and add it to the PackageDiagram.
str Generates a class diagram for the given class name. The class diagram is a list of
Returns a list of DIADefs for the given project. If no DIADefs are
Check if a module or class is in the list of ignored modules or classes.
Returns a list of names that are similar to the given attribute.
True if the node has no member with the given name.
str Returns True if the parent of the given node is of the given type.
Returns True if name is used as a variadic in the list of variadics.
str Given a node and a variadic name and a variadic type returns True if the name is
str Check if the node is a function or function declaration and if so add it to the
str Check if a function call is uninferable.
visit unaryop AST node and add errors to self. errors.
Iterate over the interfaces implemented by the given node. If herited is set to True then
str Create a project from a list of files.
package - Package node - Package node - Package node - Package node - Package node - Package
str - > None - > None - > None - > None - > None - >
str AssignName node - > None - > None - > None - > None - >
Assign attribute type to parent. instance. attrs and update parent. instance. attrs with the
visit an Import node by extracting the relative path from the context of the imported module.
visit ImportFrom AST node.
Compute the module number for the given context name and module path.
str Importing a module.
str Register the reporters for text parseable and colorized text and colorized text.
Handle a message. If the message is a module add it to the list of modules.
str - > None - > None - > None - > None - > None - >
str Open a new graph and write it to the output stream.
str Write an edge from one node to another. edge type can be str or unicode.
Process a non - raw string token. If the token is not a raw string it will
Visit a section of a layout. This is the main entry point for the layout. It
visit evaluationsection layout is a list of layout objects. Each layout object is a list of
str Table to be rendered. layout is the name of the layout to be rendered.
Add a renamed message.
check consistency and register all messages from a checker.
str Register a message in the message registry.
Check that a message is unique for a given symbol. If there is a message with the
raise invalid message for duplicate symbol
raise invalid message with duplicate message id
This is the main entry point for the builder. This is the main entry point for the
Returns the number of CPU cores in the system or the number of CPU cores in the system
report messages in the order they appear in the stats dict sorted by message id then by message
Fix sys. path so that it can be used in the context of a context manager.
str Load a list of plugin modules and register them with the plugin manager.
str Loads the configuration of the dynamic plugins.
str - > None - > None - > None - > None - > None - >
str Register a checker with the checker manager. If a checker is a class it will be
python3 porting mode
Returns a list of all checkers that have been registered with this instance.
str - Returns a list of checker names sorted by name.
str Returns a list of checkers that are needed to be run. This is a list of
Expands a list of files and returns a list of expanded files.
str Sets the name of the current module and the filepath of the current module. If filepath
Check the given module. Returns True if the module is valid False otherwise.
Report the evaluation of the current state of the state machine. If the evaluation is successful the
str Help message callback. This callback is called when the user clicks on a help message.
Print full documentation for the linter and exit.
List the messages in the store.
List all groups of checks.
Normalizes text to fit into line - length and indents it to the given line length.
Returns the module and object id of the given node.
Safely decode the given line using the given encoding or the default encoding if no encoding is
Check if a file name is in the blacklist.
Register all plugins in the given directory with the given linter. This function is intended to be
str - > string comment - > string comment - > string comment - > string comment -
Format the value of an option into a string. If the value is a list or tuple
str Format a section of an ini file.
str Format the options in the ini file to the given stream. The stream will be closed
str Inserts a new child at the given index.
append a child to the list of children of this node. child must be an instance of
str Returns a list of the parents of this node and all of its ancestors.
Format the output using the given layout. If no stream is given stdout will be used.
Returns the content of a table as a list of lists.
Yields the content of the layout as a string.
str Collect all the lines of a given module and store them in the given msgs store.
Handle a message that has been ignored by the user.
Register a new report with a given checker.
str Add new stats to self. stats. If key already exists it will be removed.
Get the setter property name from the given node. If no setter is found none is returned
Get the setter property for a given node.
Return True if the node returns something else False.
Returns a set of possible exception types for a given node.
Process a module and add messages to self. messages.
Process a module and check its file encoding. If the module doesn t have a file encoding
str Given a list of tokens return a list of tokens that should be processed.
str Returns True if the given statement is from the future imported module. Returns False otherwise.
True if parent is an astroid. for statement. If parent is an astroid.
str Returns the overridden method of the given class or None if the method does not exist.
Get the extra info that should be used when unpacking a node.
str Returns True if the node is assigned locally in the scope of the given node.
str Mark a node as consumed and remove it from the list of to consume.
str - > bool - > bool - > bool - > bool - > bool - >
str Check if unpacking is possible.
check metaclasses of the given node and all its child nodes.
Returns a list of all packages in the given directory. If prefix is specified prefix will be
str Runs the install process.
str Report similarities to the old stats and the new stats for the new stats.
str Runs the similar command.
str Append a stream to the list of linesets for the given streamid.
Returns a list of tuples with the number of simulations and the list of couples
str Displays a list of sims in a human readable format.
str Find the common lines between two lineset.
str Returns an iterator over all the simulations in the line set that are common to all
Enumerate the stripped lines in the file.
Make a dictionary of line numbers and their line numbers in the file.
str Check if two nodes have the same value for the given attribute.
str Returns True if the original and overridden parameters have different values.
Safely infer the result of a function call. If the result cannot be inferred return none
Set the node as accessed in the current scope.
str - > check if class is a class and if it s a string - > check
str Check that the node s mro is consistent.
str Check that the bases of the given node are valid classes and that the base is a
str is the name of a function or method declaration. This is the name of the function
Check if a node is in a slot of a class. If it is add a message
str name - > bool name - > bool name - > bool name - > bool name
str Returns True if node is a mandatory method parameter.
Returns True if any node in body is an astroid. raise ; otherwise returns False.
Check if a node has a bad exception context.
displays the reports in the given layout object.
str if node is a typing. namedtuple
Check if the given node is an enum class.
Return True if node is a dataclass decorator.
Visit ClassDef node and check for too many parents and too many attributes.
Leave a classdef node.
str If node. orelse is a boolean expression or if node. orelse
Check if the boolean expression count is greater than the maximum boolean expression.
Check the docstring of a node.
Returns a string representation of the object using the given template.
str Check if node is actual else node.
check simplifiable if node is simplifiable if node is simplifiable add message if simplifiable
str Check for stop iteration inside generator.
Check if exception inherit from stopiteration.
str Check nested blocks
str - > dict - > dict - > dict - > dict - > dict - >
Check whether the node is an instance of any of its types.
Returns True if the node is an AND or Ternary expression.
Check consistent returns.
check if graphviz is available and exit if it is not.
str Runs the diadefs command and writes the result to a file or file -
str Prints out all the packages in the diagram to the output stream.
str Prints a diagram of classes to the output stream.
str Set the printer to use to print to the given file. The file name will be
str The name of the graph and the name of the printer to use.
str If minversion is greater than or equal to sys. version and maxversion is greater
Format the help message for the command. If checkerref is set to True the message will
str Get the environment variables for the current process. This is useful for debugging and testing.
get a list of cycles from a given vertex to a given vertex and add them to the
Generate a graph from the source and output it to a dot file. If outputfile is
str Format the rest of the help section and print it to the given stream.
disable disable a message in the context of the given scope and line. If the message is
str Enable a message in the context of the given scope. If the message is already enabled
Return a list of message symbols for the given message id. If the message is not found
Check if a message is enabled.
str Add a message to the message store.
Returns the indent length of the given line. If the line is a tab - delimited string
Get indent hint from bar positions and bad position. If bar is empty return empty line.
Returns the indentation of the token at the given index in the source code.
Handle the start of a line.
Get the valid indentations for a token at a given index. The valid indentations are
Hanging indentation after a bracket.
str Continuation inside bracket.
str Pushes a token onto the stack. If the token is followed by an end -
str if last token on line is str then add message if last token on line is str
Check if the token at index i is a valid type annotation.
Check if the token at the specified position is equal spacing.
Check that the token is surrounded by a space.
str - > None - > None - > None - > None - > None - >
str Check multi statement line.
Check the indent level of the given string.
str - True if the given node is in the iterating context of the current iteration.
True if the node is a conditional import. This is true if the node is a try
str name of the node to check if it is a built - in function. If it
str is the value of node. value if it is an instance of std ex.
str is the name of the attribute of the node. If the attribute is an instance attribute
visit a Raise node by returning the value of the raise node. If check returns True the
str - The path to the Python interpreter s Python interpreter s Python interpreter s Python interpreter s
Validate the given value against the given optdict. If the value is invalid return the original
str Register a provider with the command line parser. If own group is set to True the
str - > None - > None - > None - > None - > None - >
str Set the value of an option in the global options dictionary.
Generate a configuration file from the configuration providers. If stream is not specified the output will be
Load the configuration file into the global configuration object.
str Loads the configuration from the command line. If no arguments are given the command line
str Add a help section to the command line.
Returns the help message of the command line.
str Loads the default values for all options.
Returns the attribute name of the given option. If optdict is none the default value is
Return the value of the given option or raise an error if there is no such option.
Yields all options in a section sorted alphabetically.
str Check if func is a method call. types can be a list of strings or a
Check if the node is a complex format string.
visit a module node and populate self. logging names self. logging modules and self. from
Visit the import from node and add it to self. logging names.
Import logging modules and add them to self. loggingNames.
str Check if format string is valid.
str Returns True if the node is an in loop or False if it is not a loop
Get the parent node of a break loop.
str Checks if a loop exits early.
str - > tuple of property classes and property names from the given config object.
Returns the function name of the given node or None if the node is not a method.
report by type
True if the call is a single argument and is not a keyword call.
A starred node is a starred node that is a variable or a function that is
visit a Call node and check if it is abstract or not.
str Check if loop exits early.
Check if a node is in a loop. If so add a message to the report.
str Open the file and start the linter. This is called when the linter is opened.
str - Print a string representation of a node s value.
Checks if the node is an assert and if so adds a message to the report.
A dict is a dict with only the keys that are constants. This is done by checking
Check if a node is not in a try - finally block.
str Reverses the order of the arguments in a function call.
Check if a node has a docstring.
Check if a node is a literal and if it is add a message if it is.
str Adds a subgraph of the given node to the graph. If the graph is not already
Parse a sub - graph from a node and a list of extra blocks.
visit a module node by traversing the module tree and generating a message for each node.
walks the AST tree and calls the appropriate callbacks for each node in the tree.
str Add a relationship between two objects.
Get a relationship from a given from object and a given relation type. Raises key error if
str Returns a list of attributes for the given node sorted by node name.
str Add an object to the diagram.
Returns a list of class names from the given list of AST nodes.
Returns a list of all the classes defined in the object.
Returns the class with the given name or raises an error if no class with the given name
str - List of all modules in the source code.
Returns the module with the given name or raises an error if the module does not exist.
str Get module by name and node.
Add a module to the list of modules that this module depends on.
str Delete the object from the cache.
Returns the query for the model. If the model has a query attribute it will be returned
Returns the user with the given username and password. If no user is found None is returned
str Get a user by access token or refresh token.
Set a token for a given client and user. If the token already exists it will be
str Set a grant for a given client id redirect uri and number of seconds to expire.
Get a code for a given client id and code. Returns None if not found.
str - > str - > str - > str - > str - > str - >
Initializes the extension with the given app instance.
Create a new remote app with the given name. If register is True the app will be
Generate an authorization token and redirect to the given callback.
handle oauth1 response
handle oauth2 response
Returns an authorized response. If no args is provided the request. args will be used.
Hash a token for the given application and return it as a tuple of the application class name
Create a new client with the given token. If the client already exists it will be returned
str Create a new oauth session with the given access token. token can be a dict or
Insecure transport context manager. This context manager is used to ensure that the transport is not
str Confirm an authorization request and return a response. If the request is invalid redirect to the
Returns the client secret for the given client key. If no client secret is found None is
str Get the request token for the given client key and token. If the request token is
str Get access token secret from request. access_token or request. access_token getter
str Returns a list of realms for the given token.
str Get the redirect uri for the given token.
Get the RSA key for the given client key and request.
Validate a client key against a request object.
Validate request token.
Validate the access token and store it in the request. access token.
str Validates the timestamp and nonce for the given client key. Returns True if the timestamp
Validate a redirect uri against the client s redirect uris.
str Validates that the given realms match the realms in the access token.
Validate a verifier against a token. If the verifier is valid return True. Otherwise return False
str Verify the request token and return True if it is valid. Otherwise return False.
str Verify that the request has the same realms as the given one.
Confirms an authorization request and returns a response. If the request fails the response will
Authenticates a client and stores it in the request object. Returns True if authentication was
Authenticates the request with the given client id. If no client id is provided the
str Get the original scopes for a given refresh token.
Confirm that the given scopes match the current refresh token.
str Returns the default redirect uri for the given client id. If no client id is provided
str Get the default scopes for a given client.
Invalidates the authorization code associated with the given client id.
str Save the authorization code for a given client id and redirect back to the default client.
str Save bearer token and redirect to default redirect uri.
str Validate bearer token and update request. access token and request. user and request. scopes
Validate a client id and set the request. client attribute if it is not already set.
Validate the code for a given client id and request. Returns True if the code is valid
Validate grant type and set request. user if grant type is str and grant type is allowed
Validate the refresh token and update the request. client id and request. user attributes.
Check if the response type is allowed by the client. If the response type is not allowed
Validate a list of scopes for a given client. If the client is a string it will
str Validates the user and sets the request. user attribute if the user getter is not
revoke an access or refresh token from the client.
update qq api request data
Convert all keys in a dictionary to strings.
Change the weibo header to the new one.
Register to the given oauth instance.
Create a new user in the given oauth session.
str Extract parameters from the request object and return them as a tuple.
Convert text to bytes. If text is already bytes it will be converted to bytes. If
str Base64 decodes the given text.
Create a response object with the given headers body and status code.
str Get the list of cached clients for the current app.
Add a remote app to the registry. If a remote app with the same name already exists
Add a remote app to the cluster.
str Check for an exception in X. 509 certificate. If the certificate is not valid
Check if the certificate is valid and if so generate a new key and verify the public key
check if private key is valid and load it if not load it from the file system.
check if load privatekey callback is incorrect
check load privatekey callback wrong type
Return a list of all revoked tokens.
check if a certificate is revoked duplicate it and free the revoked object.
Create an X509 request with a public key and a digest. The request will be signed
str Create a certificate from a request and an issuer cert key serial validity period and digest.
Use a certificate file to generate a new SSL context. The certificate file is expected to be
Use a certificate file. The file can be a PEM file or a file - like object
Use an X. 509 certificate to connect to the server. The certificate must be an
Adds an extra chain certificate to the SSL context.
Use a private key in the SSL context. The private key must be in PEM format.
Use a private key in the context. If the private key is invalid raise an exception.
Load the client CA list from a file or file - like object. If cafile is
Set the verify depth of the SSL context. The default is 1. The maximum number of
Load a DH from a PEM - encoded file or file - like object and return the DH
Set the list of ciphers to use for this connection. The list can be a list of
Set the list of client CA authorities for the SSL context.
Add a client CA authority to the context.
set tlsext use srtp profiles
Set the NPN select callback. The callback will be called when the NPN
Set the ALPN protocol extensions for the SSL context.
Set the ALPN select. The callback will be called when the ALPN is selected.
str Set the OCSP helper and the OCSP data callback. The callback will be called
str Set the SSL context for this connection.
Get the name of the server.
Set the name of the Tlsext host.
Receive data from the socket.
Read a bio from the socket.
renegotiate. Returns True if renegotiate was successful. Otherwise returns False.
Shuts down the SSL connection. Returns True if successful. Otherwise raises SSLError.
Get a list of ciphers supported by the server.
Get a list of all client CA names in the server. This is a list of x
Set the shutdown state of the SSL channel.
Get a random string from the server.
Get a random string from the client s pool.
Get the master key of the SSL session.
Export the key material of the server s keyring. The key material is encoded as a
Get the current SSL session. Returns none if there are no sessions in the system.
Get the name of the current cipher.
Get the current cipher bits.
Returns the version of the current cipher. If no cipher is currently active returns none.
Get the protocol version of the server.
Get the next negotiated protocol.
Set the ALPN protocol extensions.
Get the ALPN protocol negotiated by the server.
Convert a bio to a string.
Set the time of a message boundary to the given time. The time can be in seconds
Get the ASN. 1 string representation of a timestamp.
Get the elliptic curve with the given name.
dump a public key to a PEM or i2d string
Load a public key from a buffer or PEM - encoded string.
Signs data with a private key and returns the signature as a binary string.
Verify a signature against a data and a digest. If the signature is not correct raise an
dump a CRL to a string. type can be pem i2d or text.
Return the cryptography key for this key. If only public keys are returned otherwise private keys
Check if the key is valid.
Return a set of all elliptic curves loaded from the given library.
Returns the elliptic curves for the given library.
Get the EC key associated with this curve.
Return the DER encoding of the certificate.
Get a list of components of the X509 name.
Get the short name of the extension.
Get the extension data as a byte string.
Return the certificate signing request as a cryptography. hazmat. backends. openssl.
Set the public key of the certificate.
Get the public key of the certificate.
Get the subject name of the certificate.
Add one or more extensions to the X. 509 certificate.
Return a list of extensions in the certificate.
Verify that the certificate is signed by the given private key. If the certificate is not signed
Return the certificate as a cryptography certificate string.
Set the version of the X509 certificate. The version must be an integer between 1 and
Get the public key of the certificate.
Set the public key of the certificate.
Signs the given digest with the given private key.
Return the digest of the given name or raise an error if the name is not valid.
Set the serial number of the certificate.
Get the serial number of the certificate.
Modify the mtime of this certificate to be greater than or equal to or equal to amount.
Modify the mtime of the certificate before the given amount. The amount must be an integer.
Returns True if the token has expired.
Get the issuer of the certificate. If the certificate is invalid the name will be returned.
str Set the issuer of the certificate.
Get the subject of the certificate. If the certificate is invalid it will be added to the
str Set the subject of the certificate.
add one or more extensions to the X509 certificate.
Get the extension at the given index. Raises index error if the extension does not exist.
Add a certificate to the hash table.
Add a CRL to the certificate store.
Set the X. 509 certificate s time to vfy.
Initialize the certificate store with the current certificate and store. Raises an error if the certificate store
Get the exception from the current context.
Verify that the certificate is valid. Raises an exception if the certificate is not valid.
Set the serial number of the certificate.
Get the serial number of the certificate.
str Set the reason code of the certificate.
str Get the reason of the CRL.
Set the revocation date of this certificate to the given date.
Return the certificate revocation list as a cryptography - compatible string.
Get the list of revoked certificates in the CRL. Returns a tuple of revoked objects.
Get the issuer of the certificate.
Signs a digest with a given issuer certificate and key. The digest must be a string
Export a CRL to a PEM - encoded file.
Get the name of the type of the encryption key.
str cacerts - a list of x509 certificates to be used to validate the
Signs a digest with a private key.
Verify the validity of a key. Returns True if the key is valid False otherwise.
Return a base64 encoded version of the SPKI object.
Get the public key of the key in the key ring.
Set the public key of the key.
Raise an exception from the error queue. If the error queue is full the exception will be
Get the service metadata from the configuration file.
str Returns a generator that yields all issues for each card in the boards lists and annotations
str Given a card json return a list of annotations for each comment in the card.
Get a list of all boards.
Get a list of lists for a given board.
Returns a generator of all cards for a given list id.
Get all comments for a given card.
str - > str - > str - > str - > str - > str - >
Get a list of objects from a given URL. If subkey is not specified it will be
Convert a string to a dictionary of tuples.
get all issues that match the given query
Get a list of requests for a given tag.
str Aggregate issues for all targets in a given section.
Get the value of a key from the main config file. If the key does not exist
Returns True if the given issue should be included in the result.
Make a table from a list of lists.
str Executes an oracle command and returns the result as a python object.
Get an option as an integer. If the option does not exist or is not a string
str Pulls issues from the server and applies them to the server. If dry run is
Make a GET request to the given URL and return the response as a JSON object.
Get a collection of values from a given URL.
str - > dict - > list - > dict - > list - > dict - >
str Get the credentials for the target. If the credentials are invalid return an empty string.
str fdrcorrection Returns a tuple of the reject and corrected pvals.
zscore returns the z - score of a 2D array along a given axis.
adjusts the spines of a plot based on the color of the spines in the
str Create an argument parser with all the required arguments.
str parser for the enrichr command - line tool.
str Gsea s p - value.
str Returns a pandas DataFrame with all the mart names and the mart descriptions.
str Get a list of datasets for a given mart. If mart is not specified
str Get the attributes of a dataset as a pandas. Dataframe.
str Returns a DataFrame with the filters for the given dataset.
str Set the number of cores to use for the current process. Defaults to the number of
str - > dict - > list of genesets - > list of genesets - >
str Get list of all libraries for a given database. If database is not specified all libraries
str Downloads libraries from enrichr and returns a dictionary of the extracted genesets.
Compute the heatmat for a given position and negation. The heatmat is a pandas
str Loads the data into a pandas DataFrame.
r Runs the GSEA algorithm on the samples in the given DataFrame.
str - Samples to CSV. outdir - Path to output directory. samples - Samples
str - > list of dict - > list of dict - > list of dict - >
Send a list of genes to the given URL.
check if all genes in gene list are present in user list
Draw a cube in a script.
Draw an icosphere.
str cube hires
get the color values for a given color. color can be a string like red green blue
check if a variable is a list with a certain number of terms and exit if not.
make a list from a variable and a number of terms. If the variable is already a
str Write a filter to a mlx. filter. script object.
merge verticals into a script. threshold is the number of verticals to merge
str Split vert on nonmanifold face.
translate x y z in script. value can be a tuple or a list of tuples.
Rotates the script by the given angle.
Scales the script by the given number of values. If no value is given the script
r Cylinder function.
Wrap a script in a cylinder.
deform2curve takes a script and a curve and a step number and returns a function
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
str voronoi - Voronoi script generator.
a function to write all the fonts in a script to a. xml file in a.
vert quality filter for a script.
Draw a cylindrical vertex script.
Draw a script on the spherical surface of a sphere.
str Renames the current layer in the script. If the current layer is the same as
str Change the current layer of a filter script.
Duplicate the current layer in the script. If the current layer is the same as the current
str Delete a layer from the script. If no layer is given the current layer is used
str Begin a new script. The script can be either a file or a list of files
str Add a new layer to the stack. If change is True the current layer will be
str - > file - > None - > None - > None - > None - >
Write a script to generate a per triangle script. The script must contain a single triangle.
Measure the topology of a mlx. filter script.
str Parse the hausdorff log file and return the hausdorff
Returns a string that represents the 2 - dimensional angle between y and x.
cross product of u and v. Returns the cross product of u and v.
v multiply v1 by scalar and return the result as a list of strings.
Write a depth filter to the script.
str Sorts a polyline file in descending order. Returns None if file is not a polyline
measures the geometry and topology of a MLB file and returns the AABB.
converts filename extension to lower case.
Get the upload config.
Returns the URL of a file in the set. If the set does not have a base
str Returns the full path to a file in the given folder. If no folder is specified
Returns True if the given file extension is allowed by the current user.
resolves a conflict in the given target folder with the given basename in the given target folder
Get version from vprof file.
Remove duplicates from a list of objects and return a list of the removed objects.
get the difference between two objects
Returns a list of tuples with the object type and object count as keys and the number of
trace memory usage
str Returns a list of tuples with the code events and the memory overhead of the code.
Returns the object overhead for this event.
str Computes the memory overhead of the process.
str Name of the package to be profiled.
profile a module and return a tuple of the profile object and the event of the module.
Returns a tuple of the profiling information and the result of the execution of the function.
str Runs the profile and returns a dictionary of information about the state of the profile.
str Returns a set of absolute names of all modules in the given package in the given path
Run a function in a separate process and return its output.
Get the type of a run object.
str The name of the module and the globs for the module. The object is the
str The name of the package and the args of the run.
str The name of the function and the source file of the run function.
str Replace sys. argv with self. run.
Sample a function from the current frame and store it in the self. stats dictionary.
str stack is a list of functions to be inserted into the tree. sample count is the
str Fills the sample count for each node in the tree and returns the sample count.
format a tree of samples and return it as a dict.
Generate a tree of calls and return the result as a dict.
str The name of the package the object the sample interval the call tree and the number of
Profile the module and return a dictionary with information about the module and the time it took to
str Profile the function and return a dictionary with information about the function and the time it took
str - > list of tuples with filename line number function name cumulative calls time per call and
str - > dict - > dict - > dict - > bool - > bool - >
c. profile. profile_module returns c. profile. profile_module. profile_
str Function to profile the execution of the function.
Show the guestbook as a Jinja2 template.
Add a new entry to the database.
str Start the web server.
Handle the root of the profile.
Handle other files.
Get the content of the request and send it to the client as a gzipped response.
do a post request to the server and update the profile with the data received from the server
str Send a response to the client with the given status code message and optional headers.
Check if module path is in standard lib paths.
Record a single line of code. This method is called when a new line is detected.
Returns a list of lines with the current module path line number and runtime information. If the
str Fills in the heatmap with the number of times each line has been executed.
str Skips lines in src using skip map. If skip map is empty returns the source
str - The name of the run object and the number of times it took to run.
Format a heatmap for the given filename. The number of lines to skip and the number of
str - The name of the profile module and the number of times it took to run.
Returns a dictionary with the result of the function and the number of times it took to run
str Runs the profilers for the given run object using the given profiler configuration.
r Run a function on a given host and port. Returns a dictionary of the results.
str Predicts the probability of a given input.
str Predicts the log probability of the given input.
str Fit the model to the data in z and add the results to self. dict.
Count the number of documents in the vocabulary.
sorts the features in the vocabulary and returns the index of the features in the vocabulary.
str Limit features to a given number of documents in a vocabulary.
Fits the model on the data and returns the transformed data. If the model is fixed
str - > sp. spmatrix - > sp. spmatrix - > sp. sp
Returns a scikit representation of the mean and standard deviation of the distribution.
Fits the model on a spark dataset and returns the model s average value in the dictionary
Returns a spark prediction of the given data.
str check if z is a valid RDD and if so fit the regression on it.
str Fit the model to the given Z vector and save the result in self. steps.
str Fits the last step of the model to the given Z vector and returns the transformed
score returns the score of the transform at the given z. z must be in the form
Return the score of the estimator at the given z. If the score is not a number
str = Mllib initialization mode = str means Mllib initialization mode is str means
str - > RDD of predictions for the given input. If input is an RDD
str Predicts the value of x in the spark dataset.
Check if the given RDD has the expected dtype.
Fits the SVD model on the input z.
Apply the SVD transformation to the matrix z. If z is an RDD of R
A generator that yields blocks of size bsize from the given iterator with the given dtype.
Block a tuple of tuples into chunks of size bsize.
Returns a new RDD with a block of size bsize and dtype. If the R
Transform the RDD by applying a function to each element of the RDD.
Returns the shape of the RDD as a tuple with the shape of the first RDD
Convert the RDD to a numpy array.
Returns the bit - mask of the given permission and position in the stat object s.
Check if a file has only root write permissions. Returns True if the file has only root
Check the config file and print it if it is valid.
str Read the config file and update the config with the data read from the file.
Run a command as a user in a given shell. If the user is not a string
str Executes a command and returns its stdout and stderr. Returns none if the command timed
Execute a command over an SSH server.
Validate the content type of the request.
Returns the headers as a dict. If there are no headers the default headers are returned.
Return the URL for the home page.
Get the url for the current event.
Return a text representation of a Packet object.
Print a discovery packet to the console. If the packet is already in the list print it
str Discovers all devices on a given interface. If no interface is specified all devices
str Executes the command and returns the result. If root allowed is set to True the
str Sends a confirmation message to the user.
on push event handler.
str Execute the command on the given device. The command will be executed in a new thread
str Runs the plugin. This is the main entry point for the plugin. It runs
str Find the path to the ledgerrc file. If no path is given the
str - > str - > str - > str - > str - > str - >
Read a JSON file and return a precalculated text.
Generate all supported characters from a font in a given deja vu sans path.
Generate encodeable characters from a list of characters and a list of encodings.
Calculates the character to length mapping from the character to the width of the character in characters.
Write the given text measurer to the given file - like object.
str Convolve a 2d image with a gaussian kernel.
str Get a gaussian kernel of a given width and a gaussian kernel of a given size.
Convert an image to a grayscale image and alpha band.
Command - line entry point for ssim. py.
str - > float - > float - > float - > float - > float - >
str Computes the S - Sim value of two images using a gaussian kernel.
str Destroy the game. If auto tick mode is set to True the game will be destroyed
str Sets the version of the code.
Returns a dictionary of the current status of the raft node.
prints the current status of the server. This is useful when you want to print the
Returns the node associated with the given connection or none if no connection is associated with the given
Checks if the transport is ready and if so binds it to the server. If it is
str Called when a new connection is received.
This function is called when a command is completed. It is called when a command is completed
str Returns True if the given node should be connected to this node.
connects to a single node if it s not already connected returns true if it s connected
Called when a new connection is established. This is called when a new connection is established.
Called when a message is received from a remote node.
str Called when a connection has been disconnected from the network.
str Add a node to the graph and connect to it if it should connect to it.
Drop a node from the network.
str Send a message to a node
str Add an item to the queue.
str Add an item to the queue. If the queue is full the item will be added
Get a value from the heap. If the heap is empty return the default value.
Acquires a lock. If the lock is already acquired the callback will be called with the
Returns True if the given lock has been acquired and False if it has not been acquired.
str Releases a lock. If the lock is already held the callback will be called
str Set the list of hosts to connect to. If use is set to True it will
str Create the indexes with the given names. If the index already exists it will be overwritten
migrate indexes from the aggregate to the forensic indexes from the forensic to the
Strips all metadata from the report.
str Save aggregate reports to kafka.
Extract XML from a file or file - like object. Input can either be a string or
Parse an aggregate report from a file. Input can be an XML file or a file -
convert a list of forensic reports to a csv file
str Parse an aggregate report from a file or file - like object or file - like object
Get the capabilities of the IMAP server as a list of strings.
Save forensic reports to splunk.
Decode base64 string to bytes and return as a bytes object.
Get the reverse DNS hostname for a given IP address.
Convert a human - readable timestamp to a datetime object.
str Get information about an IP address.
convert outlook message bytes to rfc822
Convert a string to a list of strings.
Parse a report file and return the parsed report and the file path. If parallel is True
str Drains all subscriptions. If sid is not specified all subscriptions will be dra
str Publishes a message to RabbitMQ.
Publish a message to the server.
Publish a message to the server.
Subscribe to the given subject. Returns the session id of the subscription or None if the subscription
unsubscribes from ssid. max is the maximum number of messages to unsubscribe from
Send a PING to the server and wait for a response.
str Select the next server from the pool. If no more servers are available return None.
process an error message from the client.
str Process an error from the client. If the client is not connected or the client is
Command to connect to the server. This command is used to connect to the server.
str Processes a pong from the server.
process a single message from the client.
Process server info from the server pool and add to the server pool if the options option is
This is a long - lived goroutine that flushes all pending data to the socket.
The main loop for reading from the socket. This is the main loop that reads from the
str Loads features from a numpy array.
str Loads features from a list of images. If names is not specified only images with
Calculate the Pearson correlation between the images in the image array and the features in the
Computes the dot product between the feature images and the image to decode.
str - > list of features to be selected based on a feature selection string or number of
str Get the order of the features in a dataset.
str Classify the data using the given classifier.
str Fits the classifier with the given data and returns the classifier object.
str - set the weight of the model. If weight is str the weight of the model
Fits the classifier with a cross - validation model. The crossval parameter can be a
str Description of the method fit the classifier on the given dataset with the given features and y
get random voxels from dataset. masker. n voxels is the number of vox
Get the top n words from a model.
str Pearson correlation coefficient between two data sets. This is the Pearson correlation
fdr returns the fdr of an array of points p q is the number of points
str Loads the activations from a CSV file.
str Create image table
Returns a list of feature names. If no features are provided the list of feature names is
Returns a dictionary of feature names and their counts. If threshold is not specified the number of
str Loads a dataset from a pickle file.
str Save the current state of the model to a file. If the model already has a
Returns a list of the names of the features in the dataset. The names are ordered by
Returns a list of features that match the search string. The search string can be a string
str Function to get ids by expression.
str - > sparse. csr - > sparse. csr - > sparse. csr - >
str Transform the foci matrix by the given matrix and return the result as a numpy array
str Convert from foci to mat.
Apply a function to a Foci object. If the function does not exist it will be
Get a mask of all layers. If layers is none return all layers. If output is
str Loads images from a list of filenames and masks them with the given masker.
str Save an image to a Nifti1 file using the given masker.
str Set the logging level. If no level is given the current logging level is returned.
Parse an address string into an Address object. The address string can be encoded as UTF -
Convert a dict to a named object.
Get the price of a ticker. The ticker can be either a string or a list of
get a list of news by id or by file id if no id is provided will return
Make an HTTP request to the API with the given method and url.
Get information about Spotify s bearer token.
str Request to a given URL.
album tracks Returns a list of tracks in a Spotify album ordered by number of played
Get a Spotify artist by its Spotify ID.
Artist Albums Returns a paginated list of albums for a Spotify ID.
Spotify artist top tracks
Returns a list of artists related to a Spotify object.
r Contains a list of artists for a list of Spotify IDs.
str Get a single category by id.
a method to retrieve a list of playlists for a given category
Get a list of categories for a given country and locale. If no country or locale is
Get a list of featured playlists for a given locale country and timestamp.
This method returns a list of new releases for a given country. If no country is provided
following artists or users
Get a list of albums for this artist.
Get a list of all albums for this artist.
Get the total albums for this artist.
Get the currently playing context and track for the currently playing track.
Get the current player.
Get a list of all available devices.
Returns a list of recently played tracks.
Replace the tracks in a playlist.
Create a playlist.
Get a list of all playlists in this playlist.
Get a list of tracks for this album.
Get a list of all tracks in this album.
Generate a URL for an OAuth 2. 0 access token.
Get Spotify album by Spotify ID.
Get the Spotify artist with the given Spotify ID.
Get a track by spotify id.
Get a Spotify user by its Spotify ID.
Get a list of albums by their ids.
Get artists by their ids.
Convert a string to an id.
Create a new instance from a client instance.
Generate a redirect URL for a given client id redirect uri scope and state.
Returns a dictionary with the client id redirect uri scope and state.
Returns the parameters as a string.
Build a list of playlist objects from the data returned by the API call.
Get a list of all tracks in the playlist.
Transfer a device to the current user.
Create a new client from the given href. If the href is already an instance of this
Check if the current request is a valid domain or ip. If it is a valid domain
str - > str - > str - > str - > str - > str - >
Update all urls in the current directory and all sub - directories of the current directory.
Check if the current version is greater than the current version.
Check if the current version is a development version.
str Returns True if the current version is greater than the current version of the yaml file.
str Backups the current configuration to a JSON file.
str Restores a file from the backup file. If the backup file does not exist it
Check if the given line is to be ignored.
Returns a list of domains that match the given options. If aggressive is set to
Extract the base of an element.
Decode a string into a list of strings. If the string is not in the list it
Returns the status code of the request. Returns None if the request fails to be made.
str - > str - > str - > str - > str - > str - >
Check if a string is a valid domain name. If the string is not a valid domain
Check if the given domain is a subdomain of the current domain.
Check if an IP address is a valid IPv4 address. If ip is a string it
Check if ip is a valid IPv4 address range.
Check if a string is a valid URL. If url is a string it will be checked
str Loads the current directory structure and updates the global configuration. If under test is True
stay safe to run in the background. This is useful if you want to run in
str Download entry management url if it doesn t already exist.
str Downloads the entry management url if it is not already downloaded.
prints the header of a given string if it is not already printed. If it is
This function is called when the user decides to create a new file. If the user
str Given a domain name returns the name of the domain and the status of the domain.
str Get the status of a URL. If the URL is not specified the status will be
str - The name of the logo to colorize. home - Whether to print the logo
Format a domain into a human - readable string.
extracts the domain from a file in the funceble. intern. py file.
Get a list of the files in the dataset.
Returns a list of urls to the files in the directory.
Get the current status of funceble and return the expiration date and the status string.
Handle the catched status. If the catched status is not in the list of catch
get the structure from funceble and return it as a dict. If the structure file
str Create a directory if it doesn t already exist. If loop is True it will create
Delete all uneeded files in the directory structure.
str - path to configuration file.
Download and install the production config.
str Installs the IANA configuration file to the current working directory.
str Installs the PSL configuration file to the current working directory.
r Download and install a directory structure file. Return True if successful False if not.
merge values from upstream config to new config and remove keys that are not present in upstream config
str Loads the config from the user. If the user is not in funceble
str Splits a version string into a list of digits and a list of non - digits
Check if the local version is newer than the upstream version.
Returns True if the file or directory is cloned False if it is not cloned.
Handle a non - existant index in the funceble. intern dictionary.
str Analytic host file directory
str - The name of the unified file.
Generate a status file based on the domain status and configuration. If the domain status is not
Return True if the file should not be written.
str - > str - > str - > str - > str - > str - >
str Loads a JSON file into a Python dictionary.
Returns the standard version of the given element. The standard version is the same as the standard
Loads the IANA database for the given string. If the string does not exist it
Returns the referer for the given extension.
Returns a generator of the extensions in the IANA file. The first element is the
str Update the IANA database with the current values of the extension and the referer.
str mine to get a list of urls from the history. Returns none if there is
str Retrieve the configuration from the file. If the file does not exist it will be created
str Backups the current configuration to a JSON file if it exists.
str Add a list of elements to the list of elements to be added to the configuration.
str Remove the bare element from the list of elements to be removed from the funceble
Return a list of all mined elements.
str Mine and add to self. add if configuration is set to True. If configuration
str Get the content of a JSON file as a dictionary.
str Write content to json file. If content is not a dictionary it will be converted to
str Whois is the record whois is the record whois is the record who
str The expiration date of the extracted file.
This function is called when a referer is not found. It will write the referer to the
str Write the header to the output if it is not already in the output file.
str constructor to create a header from a list of data to print and a list of columns
str Returns a dictionary with the data to print and the size of the data to print.
Returns the size of the header as a list of strings.
Colorize the data according to the template and the data to print.
prints the data to the output file. If the output file does not exist it will
str - The data to be printed to the console. If the template is a list it
str - > str - > str - > str - > str - > str - >
Format the execution time as a string. If start and end are not specified the execution time
str - The name of the file to delete. Returns a list of files to delete.
str Returns the list of databases to delete.
Delete all files and all databases. If clean is set to True all files will be deleted
Hash the file using the given hash algorithm.
Returns the hash of the data of the message using the given hash algorithm.
Returns the hash of the file or data. If no file or data is specified none is
str Executes the command and returns the output as a unicode string.
remove a key from the main dictionnary return None if the key does not exist
renames a key in the main dictionnary and returns the dictionnary
Returns a new dictionary with the elements in to merged with the main dictionary. If strict is
str - > None - > None - > None - > None - > None - >
Dump the main dictionnary to a YAML file.
str - > str - > str - > str - > str - > str - >
str Write data to the file. If the file does not exist it will be created.
Returns the contents of the file as a string. If the file does not exist it will
Returns a sorted list of all the items in the main list. If the main list is
Returns a new list with the elements in to merged. If strict is set to True the
Returns a list of strings that are not matching the regex.
Match the data against the regex and return the result. If no match is found return False
Replace all occurences in the string with the replacement string. If no replacement string is
str Counts the number of times the item is in the list of status codes.
Calculate the percentage of the number of items in the list of percentages and update the dictionary
Check if a URL is valid.
Check if a domain is valid. domain can be a string or a list of strings.
Check if a domain is a subdomain of another domain. If no domain is given the current
str Get the current status of the server. If the server is not running an exception will
str Reformat the historical formating error if it exists. If it doesn t exist it
Retrieve the current configuration from funceble and merge it with the current one if it exists
str Backups the current configuration to the inactive database. If the configuration has not been set
str - The timestamp of the last run of funceble. This is the timestamp of
Returns the content of the given string. If the string is not configured returns an empty list
str Check if the variable is present in funceble. configuration. If the variable is
Retrieve the data from the whois database. If the user is logged in it will be
backups the current user s data to a JSON file in the whois database.
Check if the user is in the database. If the user is not in the database return
Is the current time older than the current time?
Returns the expiration date of the current user. If the user is not in the database or
str Return the travis permissions for the current environment. If the environment is configured to be
travis is the command that will be executed when the user is running in travis
Look up a namespace by its name. If the namespace does not exist it will be created
str - > None - > None - > None - > None - > None - >
str Get the current status of the server. If the server is running in a non -
str Get the current configuration for the given domain extension. If the domain extension is not configured
Get the current object.
Returns a generator of all the paths in the system s standard library. This is a generator
A generator that yields the names of the standard packages in the system. This is useful for
Yields the line numbers of the unused imports in a list of messages. Messages can be
Extract unused import name from messages.
yields the line numbers of the first star used message in the given list of messages.
pyflakes. messages. messages. import star import usage module name
A generator that yields the line numbers of unused variables in the given list of messages.
Generate duplicate key line numbers.
str Check if source is valid Python code. Returns a list of errors or an empty list
Extract the package name from a line of text. Returns none if the line is not a
Check if a line is a multiline import. If it s a multiline import it will return
Returns True if the line ends with a multiline statement. If the line ends with a multiline
Remove unused modules from a line of code.
Break up an import statement from a line of code.
Return a dict of messages keyed by line number.
Replace star imports with their names in the line.
Return a string if the line number is the same as the line number in marked line numbers
Check if a dict entry has a given key.
Check if value is a literal or a regular expression. If value is a string it is
Generator for useless pass line numbers in a source string.
str - > str Filter out lines that are useless in the source string.
Returns the indentation of the given line. If the line is empty returns an empty string.
Get the last non - whitespace character of a line.
remove unused variables from the source code and return the resulting code. If no unused variables are
Split a comma separated string into a set of strings.
Check if filename is a python file. Returns True if file is a python file False otherwise
Check if a file is in the list of files to exclude.
str Read a lease response payload from the given input stream.
str Writes the lease response payload to the given output stream.
str Writes this cancel request payload to the given output stream.
str Read a cancel response payload from the given input stream.
Create an instance of the name class with the given name value and type. If name value
str Read the digest from the specified byte stream and return it as a string.
str Writes the digest to the given output stream.
str Read an application specific information from an input stream.
str Writes the application information to the given output stream.
str Create a new application specific information for the given namespace and application data. The namespace and
str Reads the Derivation Parameters from the given input stream.
str Writes this DerivationParameters object to the given output stream.
str Read a get request payload from the given input stream.
str Writes this get request payload to the given output stream using the specified kmip version.
str Read the response payload from the given input stream and return the response payload.
str Write a get response payload to the given output stream.
str Writes this signature verify request payload to the given output stream using the given kmip version
str Read the response payload from the given input stream and return it as a string.
Build an error response.
Process a template attribute and return a dictionary of the attributes as a list of tuples.
Returns a list of attributes from the given managed object. If no attribute names are given the
str Sets attributes on the given managed object based on the attribute policy.
str Set attribute on managed object.
Checks if the user is allowed to perform the given operation on the given object.
str Write this decrypt request payload to the given output stream.
Create a new secret of the given type with the given value. If the type is not
str - The setting to set. value - The value to set. setting - The setting
str Loads settings from a file.
Process bind param value.
Process the result value and return a list of cryptographic usage masks.
str Read long integer from the specified byte stream.
str Writes the long integer to the given output stream.
Validate that the value is a valid integer. If it is not an integer an error is
Read a big integer from the specified byte stream.
Writes this big integer to the specified output stream.
Validates that the value is an integer. Raises an error if the value is not an integer
Validate that the enum is valid and that the value is in the range of the enum.
Read the value of the field from the specified input stream and set the value of the field
Write the value to the given output stream.
str Writes this boolean to the given output stream.
Validate that the value is a boolean.
str Read the interval from the specified input stream.
Validate that the value is a valid integer. If it is not an integer an error is
Validate that this key is valid. Raises type error if invalid. Raises ValueError if invalid.
Validate that the field is valid. Raises type error if not. Raises type error if invalid
Validate that the value is a byte string and that the opaque type is a string and that
Convert attribute name to tag.
Convert an attribute tag to a name.
Get a bit mask from a list of enumerations.
Returns a list of enumerations that match the given bit mask.
str - > bool - > bool - > bool - > bool - > bool - >
str Write the template to the given output stream at the given kmip address and version.
str Read a create key pair response payload from the given byte buffer and return it as a
Write the create key pair response payload to the specified output stream.
str Read an attribute list request payload from the input buffer.
Write the get attribute list request payload to the specified output stream.
Write the get attribute list response payload to the specified output stream using the specified kmip version
get a list of all json files in a directory sorted by file name.
str Runs the monitoring loop. If live monitoring is enabled the policies will be monitored.
Get the certificate from a connection.
Get the extended key usage from a certificate.
Get a list of common names from a X. 509 certificate.
Get the client identity from the given certificate.
str Read a create request payload from the given buffer.
str Write the create request payload to the specified output stream.
str Read the response payload from the given buffer.
Write the create response payload to the specified output stream.
Convert a secret object to a Pie object.
str Read an encrypted response payload from the input stream.
str Write the DerivationKeyRequest to the given output stream.
Checks if the given attribute is supported by this rule set. If the attribute is not supported
Check if an attribute is deprecated.
Checks if the given attribute is applicable to the given object type.
Returns True if the given attribute is multivalued. Otherwise returns False.
str Read a check response payload from the given input stream.
str Writes the check response payload to the given output stream.
str Read an attribute reference from an input stream.
str Write this attribute reference to the given output stream.
str Read attributes from the given input stream. kmip is the starting kmip of the
str Writes the attributes to the given output stream using the given kmip version.
str Reads a nonce from the given input stream.
str Writes the nonce to the given output stream.
str Read a username password credential from an input stream.
str Write the username and password to the given output stream.
str Writes the device credential to the specified output stream using the specified kmip version.
str Read the credential from the given input stream.
str Writes the credential to the given output stream using the specified kmip version.
str Read a MAC from an input stream.
str Writes the MAC header to the given output stream.
str Write this key wrapping data to the given output stream using the given kmip version.
str Reads the key wrapping specification from the given input stream.
str Writes the key wrapping specification to the given output stream.
str Read extension information from an input stream.
str Writes the extension information to an output stream.
str Read a revocation reason from an input stream.
str Writes the revocation code revocation message revocation reason and revocation reason to the given output stream.
str Validates revocation code revocation message and revocation reason. Raises type error if invalid.
str Read an object from a byte buffer.
str Writes the object defaults to the given output stream.
str Write the RNG to the given output buffer.
str Read the profile information from the given byte buffer.
str Write the profile information to the specified output stream.
str Write the capability to the given output buffer. kmip is the minimum supported kmip
str This method is called when the server is shutting down. It waits for all threads to
str Write the LocateRequestPayload to the specified byte buffer.
str Read the Located Response Payload from the given buffer.
str Writes the LocatedResponsePayload to the given output stream.
Create RSA private key from PEM or DER bytes.
str Read a signature response from the given input stream and return it as a signed response.
str Write this signature response payload to the given output stream using the specified kmip version.
str Read the usage allocation request payload from the input stream.
Convert a protocol version to a kmip version. If the value is not an instance of
str Read the protocol version from the given input stream.
str Writes the protocol version to the given output stream.
str Read authentication data from the given input stream.
str Writes the authentication message to the specified output stream using the specified KMIP version.
str Read a poll request payload from the given input stream.
str Read an X. 509 certificate from an input stream.
str Writes this certificate to an output stream.
str Read an archive response payload from the given input stream.
str Writes the archive response payload to the given output stream.
str Runs the connection and handles incoming messages.
str Read a rekey response payload from the given input stream.
str Check if profile is supported.
str Get attributes by uuid and attribute names. uuid can be either uuid or uuid. attribute
str get attribute list
str query - Query the server and return a list of results. If batch is True then
Open the connection to the server. If the connection is already open raise an exception.
Closes the connection to the server. If the connection is not currently open nothing is done.
Register a new managed object with the KMIP service.
str - Gets attributes for a given uid or a list of attributes for a given uid.
Activates a kmip device. If no uid is given the device will be activated.
Build the cryptographic parameters from a dictionary.
str - > cobjects. encryption_key_information - > cobjects. encryption_
Build a mac signature key from a dictionary of unique identifier and cryptographic parameters.
Build a key wrapping specification from a dictionary.
Build a list of common attributes for the given operation policy.
Build a list of attribute names. If no name is given all attributes will be returned.
str Read from the input buffer and populate the query request payload with the data read from the
str Write this query request payload to the given output stream.
str Read attributes response payload from input buffer.
Write the response to the specified output stream in the specified kmip version.
str Get an entry point from a given group and name. If no entry point is found
Returns a dictionary of all the endpoints in the group with the given name. If path is
get a list of all entry points for a given group
str Loads the module and returns the object. If the object name is specified it will
str Create an entry point object from a string.
Generate a new controller with the given name. If no name is given the current directory is
rewrite source file with project name and copy to destination file with project name replaced with project name
check if the url is valid and replace it with the actual url if it is.
str Encode an object into a string using the secret key stored in the app s config.
Decode a JSON string into a Python object. Returns none if the string is not valid.
str - > absolute url for given endpoint and values - > absolute url for given endpoint and
Sign in a user. If permenent is set to True the user will be permanent
Get the current user from the session. If no user is found signout and return none
str Create a new Flask application with the given name and configuration.
Write a pandas dataframe to a CSV file.
str - > pandas. DataFrame from csv - like object reader. delimiter - delimiter to use
Serialize a pandas. DataFrame to a file - like object with the given writer and data type
Deserialize a data frame from the given reader with the given data type id.
Returns the contents of the file as a string.
Returns the path to the intermediate dataset in the current workspace.
Returns the binary representation of the dataset.
Return the contents of the dataset as a text string.
str - > pandas. DataFrame
Returns the intermediate dataset for the given port and data type. The intermediate dataset is the same
Get a list of all experiments in a workspace.
Get a list of all datasets in a workspace
Get information about a dataset in a workspace.
str Find all the globals in the given code. Returns a set of all the globals.
Returns a copy of the pen object.
Look up a color in the brewer color table.
str Draws the rectangular area of the rectangular area. If the rectangular area
str cubic bernstein extrema
cubic bernstein function
str - > list of lists of items to display in the choices field. This is a
str Initializes the cache. If the cache is not yet initialized it will be initialized.
Empty the cache and initialize the cache if needed. This is useful when you don t want
Get the value of the given key in the given cache entry. If the key does not
str Update the value of an entry in the cache. If the key does not exist it
str Set the value of an entry in the cache with the given name and key.
Initializes the view with the given context. If the context is not a string the current request
resolve tree i18n alias
Returns True if the current app is the admin or False if the current app is not the
Calculate the depth of an item.
Returns the current item for the given tree alias. If there is no current item for the
Returns the url for a given model tree item. If the item is already resolved it will
Initializes a site tree with the given alias and context. If the request is not the current
Get the value of an attribute of the current page in the given tree.
Returns the level of the ancestor of the given item.
Check if the user has access to the given item. If the user has not access it
Returns a list of all the items in the tree with the given alias. If the tree
str Get the children of a given parent item navigation type and use template to render it.
Get the children of the given item in the given tree. If the current app is not
str Update has children for each item in the tree.
Filter the given list of items based on the current page context and navigation type.
Returns the ancestor of the given item. If the item has no parent None is returned.
climber the tree of the given item to the given tree alias base item is the
Resolve a variable to a string. If the variable does not exist it will be created.
Parse the template and return a SitetreeNode object.
Returns a list of items in the sitetree.
A helper function to create a tree from a template and a list of template aliases.
str Render the given template with the given tree items and use as the template to render.
str Parse a for tag and return a template. template. Template instance. The tag is
Get the url name for a given model name and page number. If with namespace is True
reregister tree admin
Redirect to the path specified in the request. If the path does not exist it will be
Redirect the user to a different location in the request.
Add a new item to the tree and return a response to redirect to the new item.
Returns a response to change the object. If the object is new the response will be redirected
This method is called when the form is submitted to the user. It is called by the
get the tree object for the given tree id and item id. If no id is given
Move an item from one position to another. If there is no previous item move to the
Save the object. If change is True the object s parent will be set to the previous
Returns a list of urls for the tree admin view.
Dump the tree and item to a file. This is a view that can be used to
str app - > sitetree. py app - > sitetree. py app - >
n Get model class from settings entry name.
Create a new configuration object from a mapping.
Loads a module from a Python file at the given path.
Load a TOML file and return the data as a string.
Convert an object to a string.
str Create HTTP headers for a new span.
Get the current context of the tracer.
str Start zipkin tracing.
str Stop the span and update the binary annotations. If an exception is raised it will be
str Update binary annotations.
str Add a binary annotation to the remote endpoint of the client.
str Override the name of the span in the current context.
Returns a copy of an endpoint with a new service name.
Build a v1 span from this span.
str Encode a list of spans into a protobuf string.
str Create a zipkin span from a span object.
Convert a hex string to a binary string.
Get the protobuf kind for the given kind.
Convert endpoint object to zipkin endpoint object.
Convert a dictionary of annotations to zipkin annotations.
Create a zipkin annotation from timestamp value and host.
Create a binary annotation with the given key value and annotation type and host.
str Create a zipkin endpoint with the given port and service name.
Returns a copy of an endpoint with a new service name.
Build a list of annotations from a dict of annotations and a host.
Build a list of binary annotation objects from a dictionary of binary annotations.
str span id parent span id trace id name annotations binary annotations binary annotations timestamp duration s
Convert a thrift span to bytes.
Convert a list of bytes to a binary string.
Detect span version and encoding of a message.
Convert spans from input to output.
Push a zipkin attribute onto the stack in a thread - safe way.
str Encode a thrift span.
Create a JSON representation of an endpoint.
str - > list of bytes - > list of bytes - > list of bytes - >
Decode thrift spans into a list of str spans.
Convert a thrift endpoint to a python endpoint object.
str - > tuple of tuple of tuple of tuple of tuple of tuple of tuple of tuple
str Convert binary annotations to tags local endpoint remote endpoint
str Returns a Thrift span object for the given thrift span.
Convert a trace id to a string.
Convert an unsigned long to a lower hex string.
str Write a long to the stream in hexadecimal format.
str Fixup for date tags. This function is called when a date tag is added to
m bank set transaction code m bank set transaction code m bank set transaction code m bank set
m bank set iph id
m bank set tnr
str Joins a string into a single line. If the strip parameter is set to True
Return a JSON object if the response contains a JSON header. Otherwise return the response text.
Print a message that is limited to a given number of minutes until the given time is reached
Get information about a specific bot. Returns a dict with the bot id as key and the
Get a list of bots.
Read the next term from the stream and return it as a tuple.
str Writes a message to the output stream and returns the number of bytes written.
str Decodes a string into a term and the tail of the string. If the string
str - > str - > str - > str - > str - > str - >
str Add a source address to the list of source addresses to connect to. The source address
str Sends num messages from the queue. If the message can t be sent it will
str Set the remote service hello callback. types and scopes are the types and scopes of the
stops the server and cleans up all of the services and threads and stops the server
clear all local services
str Search for services by type and scope.
Create a soap message from the given environment.
str Discovers a given scope and prints it to the console if capture is True.
Get the tagged item manager.
Returns a list of all the child relations of the given model.
get all child m2m relations of a model
str child relation name child m2m field name child m2m relation name child m
Validate all unique fields in the form instance.
Returns True if any of the formsets has changed and False if no formsets have changed
Returns a new address with a valid checksum.
Generate a checksum for this tryte. The checksum is generated by Kerl s algorithm
Prompt the user for a random seed.
Get the key at the given index for the given number of iterations.
Get the key for the given address.
Create an iterator from the seed and the start step and security level parameters. The seed is
Create a Sponge with the given index.
Absorb num trits from the given trits starting at offset and ending at offset +
str Squeeze num trits from the state and add them to the given trits.
transform the state of the state machine into a state machine that can be used to generate the
str Add two trits together and return the result as a list of integers.
str - > list of trits from an integer n - > list of trits pad
Add two trits and return the result as a string.
str sum left and right trits together and carry together and return them as a tuple.
Output a seed to the user. The seed can be a binary string or a binary string
str Find all transactions in a given list of bundles. If no list is given all transactions
Promote a transaction to a given depth and minimum weight. The minimum and maximum weight is
str Resolve a URI to an adapter.
Send a request to the API.
str Log a message with the given level. If the logger is not set it will be
Send an HTTP request to the given URL with the given payload and HTTP method.
Interprets the response and returns the decoded response. If the response is not valid raises
Add a digest to the address. If the address is not a valid address an error is
get address from digests and sponge if not set create a multisig address from
Generate an iterator of addresses from the seed and security level. Start and step are inclusive.
Convert a digest object to an address object.
Generate a new address based on the given key and iterator. If the key has a checksum
str Find all transactions and transactions in the database. Returns a list of Transaction objects.
Iterator over the addresses used by the given adapter starting at the given seed starting at the given
str transaction hashes - list of transaction hashes - list of transaction hashes - list of transaction hashes
Check if the given encoding is a valid trytes codec. Returns none if the encoding is
Get the codec info.
str Encode input into a binary string and return the length of the encoded string and the number
str - > bytes - > bytes - > bytes - > bytes - > bytes - >
find addresses by seed index count security level checksum security level security level security level security level and
Add a command to the list of routes. The adapter can be a class or a function
str Given a tryte string return a Transaction object.
Returns a JSON - compatible representation of the transaction.
Get the signature validation trytes.
str Change the is attribute of all transactions in the transaction list to new is attribute of all
Get all the messages in the transaction. If errors is not specified all messages are returned.
Returns a list of transactions grouped by their address. The first transaction is the last transaction in
str Find all commands in a package and return a dictionary of them. If recursively is True
Sends a request to the server and returns the response. The response is expected to be a
str Apply the given filter to the given value and return the result. If the filter returns
Get the URL for a job.
Returns a list of all errors that occurred during the validation process. This is a list of
Returns True if the validator is valid. If the validator returns False it will return False.
Generate a validator for the bundle. The validator is a generator that yields a tuple of the
Get the bundle signature errors for the given groups. If there are no errors for the given
Get group signature error message.
str Traverse the bundle tree starting from the given transaction hash. If target bundle hash is
Start an interactive console with the given API object. This is the main entry point for the
Generate a random string of the given length.
str hashes per fragment
str Signs the input transactions in the bundle starting at the given index with the security level
str pretty - prints the object in a pretty - format.
Add num trits to the hash. The trits must be at least num bytes long
Returns a copy of the exception with the given context. If the exception is already a string
The security level of the address. The value must be an integer between 0 and 65535 inclusive
str Increment the legacy tag by one and return the new tag.
Returns the tag of the last transaction in the list or None if there are no transactions.
str Add a transaction to the chain. The transaction must have a value greater than or equal
This method is called after all transactions have been processed. It is called after all transactions have
Signs all the inputs in the transaction with the given key generator. The key generator is
str Create the input transactions for the given addy address.
str - > float
Decompress a G1 compressed value.
Return the inverse of a prime field of n. If a is equal to num return num
Create a new instance from a JSON file.
str Splits a description into a list of words.
Returns a list of all the categories in the dictionary.
str Create a random colour from a component and a random number of the component.
Returns a timescale object from a builtin timescale name. The name can be one of
str Image Decorator from image filename and list of components. ignore can be a list of
Returns a string representation of the table in CSV format. The first row of the table is
Returns the maximum width of all rows in the table or None if there is no maximum width
get the decor for a given component. If c is not an instance of component it will
str Plot all the data in the list. If fmt is not specified all data will be
A wrapper around the component function with a deprecation warning. This function is deprecated and will be
Process a single row of text into a dictionary of values.
str - > canstrat - > dict - > list - > dict - >
Returns a list of unique thickness values in the order they appear in the sequence.
str Given a list of tops and a list of values return a list of intervals.
clean longitudinal data
str From PETREL file.
str from canstrat
Return a copy of the log.
str Write the list to a CSV file. If filename is none return the contents of the
str Create a las3 section of the dataset.
Returns a list of all incongruities that overlap with this node.
Returns a list of the gaps in the string. If index is True returns the gaps in
Return a copy of the strip with all thickness less than or equal to or equal to limit
str Annealing the strip.
Returns a copy of self with all gaps filled with the given component. If no component is
Returns the union of self and other. If other is not an instance of self. class
str - > str |Interval. intersect| |Interval. intersect| |Interval. intersect
Merges overlapping segments into a new segment. If there are no overlapping segments an empty segment is
Invert the order of the elements in the list. If copy is set to True the
str Returns a new striplog object with the cropped parts of this striplog object.
str - > dict - > dict - > dict - > dict - > dict - >
Returns a string representation of the given field. If the field does not exist it returns None
Get a list of all the jobs in the cluster. If prefix is not specified all jobs
Parse the given HCL string and return a JSON object.
Update the token for the given id.
Get a list of all allocations in the cluster. If prefix is not specified all allocations are
Fail a deployment.
Pause a deployment.
Drains a node from the cluster. If enable is set to True the node will
str Drains a node with a spec.
This method returns a list of nodes that are eligible for the given node id.
list files by id or by path. If no id is specified all files are returned.
str Get a stream of data from the server.
stat file by id or path. If no id is specified stat all files by path.
Join an agent with a list of addresses.
Update a list of servers.
Force leave a node. Returns the status code of the node.
Get a list of all nodes. If prefix is specified only nodes with that prefix will be
str Get all evaluations for the account. If prefix is not specified all evaluations are
str Get a list of all namespaces with a given prefix. If no prefix is specified all
Register a job.
Creates a new plan for the given job.
This method is used to send a job to the API. It is used to send a
Revert a job to a specific version.
Revert a job to a specific version.
Deregister a job from Nomad. If purge is set to True the job will
Get the configuration of the server. If stale is set to True the configuration will be stale
Delete a peer from the server.
Get a list of all the deployments that match the given prefix. If no prefix is provided
Get a random value of the given type.
Get a mutator for the given object. If the object is a string it will be converted
Get a random string from the list of techniques.
Convert a buffer of bytes to a unicode string. This is done by concatenating the bytes
A custom html file that can be used to render a page. This is useful when you
A context manager that serves a JSON request.
str Spawn a new process and wait for it to finish.
Get the output of the process.
Read data from the server and return its output. If timeout is greater than or equal to
Terminates the process and closes the file handles and logs the exit code and the process.
str Start the PJF worker.
executes the command and returns the output of the command.
Build a random string.
Build a string from the list of values.
Build and return a string representation of the query. If shortest is True the shortest string will
Build a random value from the list of values. If shortest is True the value will be
Build an opterometer from the given pre - filled list. If shortest is True
Build a value from the definition.
Build a star from the given pre. If shortest is set to True it will return the
Shuts down the process and waits for it to finish and sends the testcase to the
str Runs a child process and waits for it to exit. Returns True if the child
str Start the process and wait for it to finish. If standalone is set to True the
random float between a and b. If b is none random float between a and b is
Returns a fuzzed JSON string with indent and utf8 characters added.
Get fuzzed elements from the JSON file.
Signal handler for SIGTERM signals. If the signal is already in the str state then the
str Quit the running process if it is running. If it is not running sys.
Pause the running process if it is running. If it is not running it will kill the
resume - Resumes a paused process if the process is paused. If the process is paused
Stop the running process.
Restarts the running process if it is in the running state and the process is running.
Get a list of events from skype.
str Set the user s mood.
Set the user s avatar.
Get the meta data for a given URL.
str Get a single contact by id.
Get a user by its ID.
Get a list of bots for the current user.
Get a bot by id.
Search for users that match the given query. Returns a list of User objects.
Returns a list of skype. request. Request objects for all contacts in the user.
Create a new instance from raw data.
str Merge the attributes of another object into this object.
Merge an object into the cache. If the object already exists in the cache it will be
str - read skype token file and store it in self. tokens and self. msgs
Write the current token to the file.
Check if the token is valid. If it is not raise an exception. If it is
Refresh the current skype token and store it in self. tokens and self. expiry.
Get the current user s id.
str Get the registration token from skype. auth. skype. token and store it
Syncs the list of endpoints with the skype API.
Check if a user is a member of the list of users. If the user is a
Authenticates the user with the given token and returns the response.
This method is used to configure a message in skype.
Send a ping to skype to check the status of the message. If timeout is not
Returns a list of recent chats from skype.
Get a single or group chat by id.
Create a new chat with the given members and admins.
Returns the user id from the given url or None if the url does not contain a user
Get the chat id from a url. Returns none if the url is not a chat.
Replace unicode characters in text with unicode characters. If text is a string it will be decoded
str Detects the format of the given text and returns a handler that can handle it.
str Parse the given text and return the metadata and content. If no handler is given the
Returns a dictionary with the metadata and content as keys and the content as values.
Load YAML from file - like object fm.
Export the metadata as a YAML string.
Export the metadata as a JSON string.
Return the full match of the pattern in self. pattern and self. string.
Returns a list of all the items in the string that have been matched by the matcher.
Returns the i - th sublists of the current list. If i is None returns all
Convert the start of the current match to the new start of the new match.
Returns a list of argument objects for this string.
Returns a list of lists that match the given pattern. If no pattern is given all lists
str - > dict - > dict - > dict - > dict - > dict - >
Generate a pattern from a trie.
Check that the index is within the range of this range.
Insert a string into the list at the given index.
Partition the string into two parts. The first part is the character and the second part is
Returns a list of spans of the given type.
Update the span list by shrinking rmstart and rmstop. rmstart and rmstop
Update the length of the given index in all spans of the type to the given length.
Returns the nesting level of this node. The nesting level is the number of times the node
Return a shadow of the current string. The shadow is a tuple of the string and the
Return a byte array with the ext link shadowed.
Returns a mapping from type to the spans in the list of spans.
Returns a string representation of the object.
Returns a list of all the parameters in this parameter list.
Returns a list of parser functions for each span in the string. The parser functions are defined
Returns a list of template strings for each span in the list.
Returns a list of Wikimodel links for each span in the list of links.
Returns a list of comment strings for each span in the list. The list is sorted by
Returns a list of external links for this node.
Returns a list of all the tables in the string.
Returns a generator of all spans of a given type between the current span and the current span
Returns a list of all the ancestors of this node. If no type is given all ancestors
Returns the parent of this node or none if this node is not a parent of the given
Returns the mode of a list of strings.
Returns the first argument with the given name or None if none is found.
Remove the first duplicate argument from the list of arguments.
Get the value of the argument with the given name.
Check if the command has an argument with the given name and optional value.
Delete the first argument with the given name.
Convert a CRS code to a string.
Find an object by ellipsname and crstype. If strict is set to True it will
Return a CRS object from a given URL.
str Create a GeoJSON object from a WKT or EPSG file.
str - > CRS object from EPSG code string - > CRS object
str - > CRS object from esri code string - > CRS object
str - > CRS object from SR code string - > CRS object code string -
str - > CRS - > CRS - > CRS - > CRS
str Write the header and record to a file - like object - like object - like object
str Read a VLR record from the given input stream.
parse a list of tiff keys from a list of vlrs
Parse a tiff key directory and return a list of tiff keys.
Get the signedness of an extra dimension.
Get the id for an extra dim type.
Create a new point record from another point record.
str Copy fields from another record to this one.
str Append zeros to the end of the array if the value is too small.
Returns a set of all dimensions in the array.
Create a new array of zeros for a given point format and number of points.
str Read points from a file - like object stream. count is the number of points in
Create a Point object from a compressed buffer and a point format.
str Returns the x - coordinate of the image in x - coordinate space.
str Returns the y - coordinate of the image.
str Returns the z - component of the matrix.
str Add an extra dimension to the dataset.
str - > bytes - > bytes - > bytes - > bytes - > bytes - >
Write the data to a file. If filename ends with. laz the file will be
Build a dictionary of point formats to dtypes.
Build the dtypes for the given point formats based on the given fields and dimensions.
Convert a numpy dtype to a point format.
Returns the minimum file version for the given point format id.
Check if the given file version is compatible with the given point format.
Removes all vlrs of the given type from the list of vlrs and returns them.
Read a list of VLR objects from a file - like object.
check if all las files have the same point format id
Check if all las files have the same data type.
str Check if the file signature is the same as the headers. las file signature.
str Read the header from the file and return it as a header object.
str Read the VLRs from the file and return them as a list.
str - The name of the VLRs for the points. vlrs - The V
read compressed points data from laszip file.
Read the next internal waveform packet from the stream and return the header and the waveform record.
str Read the evlrs from the file and return it as a bytes object.
Print a warning if the position is not at the expected position in the stream.
str Create a las data object from a las file header.
str Merge two or more las files into a single las file.
Write las to a stream and return it as a str. If do = True compress the
Return the date of the object as a datetime. date object. If the object is not
str The date of the object to be created. The date must be a datetime object.
str - > np. ndarray of x y and z - > str
str Mins for x y and z axis.
str - > np. ndarray of x y and z - > np. ndarray of max
str Set x y and z max values.
str - > np. ndarray of x y and z scales
str - > np. ndarray of offset values for x y and z axis.
peek the file version from the stream and return it as a string.
convert header from old header to new header with new version
Unpack an array into a new array with the least significant bit in the mask set to True
Returns a list of the names of the dimensions in in that are not present in out.
Returns a dictionary of sub fields for each dimension.
Returns the number of bytes of extra dimensions in the array.
Returns True if the packet has at least one waveform field.
The main entry point for the demo command. This is the entry point for the demo command
Calculate the checksum of the given command.
Print a hex string of the given data. This is useful for debugging and debugging purposes.
str - > str - > str - > str - > str - > str - >
Return a list of set bits from a byte string r. expected length is the number of
Generate a query string from the given command. This is used to generate the query string.
str A demo of the satel server. The host and port are used to connect to
Connect to the server and open a connection to the server. Returns True if successful False otherwise
Start monitoring data. This is a blocking call. It will block until the data is received
str Disarm code and partition list. num is the number of bytes to be disarm
clear an alarm. code is a hex - encoded string. partition is a list of partition
Set the output for the given output id. The output id is the id of the output
Keep the connection alive and send a query to the server.
Monitor the status of the device. The callback will be called when the device status changes.
Closes the connection to the server and closes the underlying writer if the connection is still open.
Purge the database for the current user.
Guess the type of a file or directory. If the file does not exist it will be
Get the file id for a given file path.
Get a notebook from the database. If the notebook does not exist a NotFoundError is raised.
Generate a notebook model from a database record and content.
Get a directory by path and content. If the directory does not exist a 404 HTTP exception
convert file records to notebook and file models
str - > directory model from db record - > directory record content - > list of files
Create a model from a record in the database. If content is specified the file will be
Save a notebook to the given path. Returns the saved notebook. If the notebook already exists
str Save a file to a file in the database. The file will be encrypted with the
r rename a file or directory
str Delete a file or directory.
Ensure that a user exists in the database.
str Purges all files and directories for a given user from the database.
Creates a new directory in the database with the given user id and api path.
check if a user is in a directory
Deletes a directory from the database. Returns the number of rows deleted. Raises an exception if
str Checks if a directory exists in the database for a given user.
Returns a list of files in a user s directory.
Return a list of directories in a user s directory.
Filter by user id and api path.
Select files for a given user. If limit is not specified only the results are returned.
Returns a list of the default fields of the files table.
Get a file from the database. If the file doesn t exist a NotFoundError is raised.
Get a single file from a user s files collection.
Get the file id for a given user id and api path.
Check if a file exists in the database.
Rename a user s directory. old db is the old directory. new db is the new
Save a file to the database. If the file already exists it will be overwritten.
str Purges the remote checkpoints for a given user from the database.
Reencrypt the content of a row with the given decrypt function and log the result.
r Reencrypt the content of a user.
str Derive a single fernet key from a password and a user id.
Get the name of a column like object.
converts a row of data to a dict without the content of the field.
Convert a row of data to a dict with the given fields and the given decrypt function.
Creates a checkpoint for the given notebook and saves it to the given path.
Create a checkpoint for the given content. The content is encoded as base64 and stored as
Delete a checkpoint by id and path. If the checkpoint does not exist nothing is done.
Get the content of a checkpoint.
Returns a list of checkpoints for a given path.
Rename all checkpoints for a user.
Delete all checkpoints for a given path.
Purge all checkpoints for the current user in the database. This is useful when you want to
str - > str - > str - > str - > str - > str - >
Apply a prefix to a model. The model can be a dict or a list of dictionaries
This method is called when the user changes the manager configuration. It will raise an error if
str Get a file or directory. If content is set to True it will return a directory
Normalizes the given api path. If the path is outside of the root raise an exception.
str Splits a file path into its parent directory and file name.
Write the nb to a base64 encoded string.
Read a base64 - encoded nb file into a list of Numpy. np. ndarray
Decode a base64 encoded string into a tuple of the decoded content and the original string.
str - > str - > str - > str - > str - > str - >
Returns a list of all directories starting from the given path.
r Create a new user on the postgres server.
separate dirs and files from a list of models where each model is a dict with the
str Walks a directory tree and returns a list of files and directories in the tree.
str Walks the files in the given directory and returns a list of file objects.
str Walks a directory and returns a generator of the contents of each file in the directory
Reencrypt a single user.
str Unencrypts all users in the database.
str Re - encrypts a single user.
Generate a temporary alembic. ini file in a temporary directory.
Upgrades a database to a new revision.
Sanitize a block by converting the embed type to the internal value. If the embed type
Queue an instance for the given embed type and data. If the embed type is not supported
Loads instances of a given embed type from the database. If the embed type does not exist
Insert an instance into the block. If an instance already exists in the block it will be
str Loads the data for each embed type.
Validates the given data against all the fields in the given widget. If any errors are found
Returns the admin page for the current version of the API. This page will be used to
Returns a JSON representation of the object.
Hide the authenticated fields from the request.
str - Exclude fields from the request.
str Get the version and preview id from the GET request. If version and preview id are
str Get a queryset of publishable objects based on the request query parameters.
Get a queryset of the publishable items based on the request s query string. If the
Return the value of the field as a boolean.
Validate a widget object to make sure it is a valid widget name template and zones.
str - > None - > None - > None - > None - > None - >
str - > bool - > bool - > bool - > bool - > bool - >
Get the permissions of the user.
Add or remove a group from the user s list of permissions. If permissions is a string
Validator for author field.
Save the zone with the given validated data. The validated data must be a dict with the
Returns a dictionary with the values of all the fields in the object as keys and the values
Returns a dict with the data in the form of a dictionary of field names to values.
Renders the template with the given data. If no data is provided the template will be used
Get the settings for this integration.
This method is called when the user is logged in. It is called when the user is
Get the settings for an integration.
Update an integration s settings.
Signup a new user. This is the default action for the signup action. If
Returns a string with the given tag name and the given list of contents.
Renders a single zone.
Save the featured image.
Save the subsection of this article to the database.
Get the extension of the image.
Get the medium url for this image.
str is new if pk is new if pk is new if pk is new if pk is
Save a thumbnail of an image to disk. If the size is greater than the image s
Returns the current connection. If the current context is not a string it will be created.
str Get a bandwith limited stream for a given file object. If the stream is disabled
Read a number of bytes from the underlying file object. If the bandwidth limiting is disabled
Consumes amt requests for the given request token. If the request is scheduled it will be
Process a scheduled consumption.
Calculates the projected rate for a given amount of time at a given consumption. The projected rate
Calculates the current consumption rate for a given amount of time at a given consumption.
poll for the result of a transfer and raise an exception if there is an exception.
Returns a list of callbacks for the given callback type in the given transfer.
Returns a copy of the original dict with only the keys that are in the whitelisted keys.
Decrement the counter by num. If the counter is finalized the callback will be called
Finalize the progress bar and call the callback if the progress bar has been completed.
str Check if a file is a special file.
raises an exception if there are no resources available for the given tag.
str Releases a lock.
Returns the adjust function for the given chunksize. If file size is not specified the current chunksize
str Queue a task for writing to a file. The task is executed in a separate thread
str Returns the download manager for the given fileobj. Raises runtime error if the fileobj is not
This is the main entry point for the file - like object. This is the entry point
str Returns a list of writes to be sent to the given offset. If the offset is
str - > bool - > bool - > bool - > bool - > bool - >
str This method is used to send a shutdown signal to the server.
str Cancels all tracked transfers.
Wait for all tracked transfers to finish.
Wrap the given data in a file - like object and return a file - like object.
get upload manager for a given file object or raise runtime error if file is not compatible with
str - > None - > None - > None - > None - > None - >
Set the result of the job.
Set the status of the task to the given exception. If override is set to True the
Returns the result of the operation.
Cancels the task. If the task is already running the task will be cancelled. If
str Submits a task to the given executor with the given tag.
str Add a callback that will be called when the task is done.
str Add a cleanup function to the list of cleanup functions to be called when a failure occurs
announce that the task is done. This is called when the task is done.
str Uploads a file to S3.
str Downloads a file from S3 to a temporary location on the local file system.
str Returns the step of the decorator. If the step is not a string or a list
refactor step text and return a list of differences between the step and the step parameters.
Return the step argument of the decorator. If the step argument is a string it will be
Refactor the step in the text and return a list of diff strings.
Update a membership
Delete a membership by its id.
Get a list of all the facts for a given category.
Create a new message for a user in a room. If the message is already in the
Delete membership by id
Validate base url.
Returns True if string is a web url False otherwise.
str - > str - > str - > str - > str - > str - >
Check that an object is of one of the given types. If the object is not of
str dict from list of dictionaries and list of items with values.
Check the response code against the expected response code. Raises an error if the response code is
Convert a JSON string to a dictionary.
str Parse a string into a webex teams date time object.
Create a new team. You can create a new team by passing in a team id.
Update a room. You can change the title of the room. You can change the title
Delete a room.
List all users in an organization.
Returns the created date of the team. If the team has not been created None is returned
str Get access token from environment variables.
Update an existing webhook.
Delete the webhook with the given id.
wait on rate limit
Updates the headers of the current request with the given dict of headers. If headers is a
Returns the absolute url of the given url.
str Get a URL with the given parameters and return the response as a Python object.
Get a list of pages from a given URL.
str PUT method.
Deletes a resource from the server. Returns an HTTP 204 if the resource doesn t exist.
str Create a new token for the given subject display name issuer token expiration and secret.
Delete a message by its id.
get a person by id
Delete a person by id
Get the current user s information.
List all objects in the API.
Create a new object with the given name with the given request parameters. If the name already
Update a team.
Delete a team.
Serialize the given data to a string. If the data is already a string it will be
Returns the last activity of the webex team. If there is no last activity returns none
Create a new message in a room. If the message already exists in the room it will
Get the Ngrok public URL.
Delete all webhooks with the given name.
str Create a new Ngrok webhook.
Example of how to delete webhooks and create a new webhook with the public url of the webhook
Read telegram data from the serial port and return a generator of parsed telegram data.
Read data from the serial port and add it to the queue.
str Create a new DSMR protocol with the given version and telegram callback.
Create a connection to a DSMR device.
Create a TCP connection to a dsmr server.
Called when data is received from the client. This method is called when data is received from
Called when the connection to the server is lost. If exc is True log the exception otherwise
Handle the telegram received from the server.
str - Parse the telegram data and return a dictionary of the parsed telegram data.
str Get the version from a file.
Ensure that a Python version matches the given Python version. If the version does not match raise
str Find all packages in a directory and return a list of their relative paths.
str Runs a command and returns True if the command was successful False otherwise.
get data files from a list of data specs. existing is a list of existing files.
Get the package data from the given root. If no patterns are given all files will be
str - > re. match - > re. match - > re. match - >
Split a path into a list of paths. If the path is a directory it will be
translate a glob pattern into a string that can be used as a relative path to a file
Join a list of translated strings into a single string with the given separator. The separator is
Translate a glob part into a string. The pattern can be a string or a list of
Truncate a table in a postgres database. If the table does not exist it will create
Write a table to the database and return the sql and the serial key.
Write indexes to a database table.
Write triggers to the database.
Writes the constraints for the given table to the database. This method is overridden by subclasses to
str Write the contents of the table to the file specified by the given reader.
str Write indexes to file in postgres format.
str Write the constraints for a table to a postgres file.
str - > str - > str - > str - > str - > str - >
Returns the number of items in the queue that match the given predicate. If no predicate is
str Enqueues the given data into the database. The data will be serialized to JSON and
str Start a new thread and return a task handler. If block is set to True the
Build an extra predicate from a tuple or a list of tuples.
Convert a datetime object to a string.
Connect to the database and close the connection if it is still open.
Get the first row of the result set that matches the given query. If there are no
Get a connection to the database.
Run a benchmark for the given number of workers and print the results in a readable format.
Connect to the pool and return a connection to the aggregator. If there are no aggregators
str Lookup by errno number.
Returns the total number of connections and fairies in the pool.
Handle a potential connection failure.
str Builds a simple expression with the given fields sorted by field name and value.
str Create an UPDATE statement from a table name and a list of fields. Returns a tuple
Connect to the database and execute the query.
Destroy all tables in the database.
Start a new step with the given name. If a step with the given name already exists
Stops a step by name. If the step does not exist it will be created.
Load the steps from a list of dicts.
str Disconnects from the server and waits for the connection to be closed.
str Reconnects to the server and closes the socket if it is connected to the server
str Connects to the server and starts a timer to check if the connection is still open
str Message received from the websocket. This is called when a message is received from the websocket
str Stop all timers.
Send a PING message to the server and check for a PING response.
check if we got a pong from the server and if so reconnect to the server.
str Sends a message to the server. If auth is True the message will be sent
str Unpauses the device and resubscribes to it.
This is the main event handler. It is called when a system event is received. It
Handler for error messages.
Called when data is received from the client. It logs the data and passes it to the
Resubscribes to all channels. If soft is set to True the channel will be
Handle an incoming auth message.
Handle the configuration of the data and time series. This function is called when the data is
str Update the last timestamp for a channel with id id. ts is the timestamp of the
str Reconnects to the server and re - sends the channel configurations to the server.
Returns a list of candles for the given pair. If no timeframe is given the
send bitfinex config to Bitfinex
Subscribes to a ticker with the given pair. The pair can be a symbol or
Unsubscribe from a ticker.
Subscribes to an order book. The pair can be a symbol or an identifier.
Unsubscribe from an order book.
Subscribe to a raw order book.
Unsubscribe from a raw order book.
Subscribes to trades.
Unsubscribe from trades.
Subscribes to candles in a given timeframe. If no timeframe is given
unsubscribe from candles
Authenticates the connection with the API.
Cancel an order. If multi is set to True all orders will be canceled. Otherwise all
str On command message.
str On device command.
Called when a message is received from the client.
Create a new device type.
str Update a device.
str Find a list of statuses. If status is not specified all statuses are returned. If
Get a list of all of the items in the repository.
Create a new DME with the given data. Returns the created DME object.
Update an existing schema with the given id and definition. Returns a dict with the updated schema
Disconnect from the server and stop the event loop.
paho. mqtt. MQTTConnection. on_connect handler
Log unsupported messages.
str On device event.
str On device status message.
str On app status message.
str Get the last event for a given device and event id.
get all events for a given device
str Make the API call to the API and return the response as a Python object.
Initiates a request to the API and returns the response. If the response is successful the
Get the status of a device or a single device. If type id or device id is
str - Closes the file and releases any resources associated with it. Raises io. IOError
Get the bounding box of a given coordinate.
Load an array of bytes from a page.
check result and raise exception if result is not equal to num or result is not equal to
Load the application from a string or import it if it is an instance of a string.
str Start the gunicorn web server.
Convert the value to a versatileimagefield url.
Process an image and save it to a file.
Process an image and save it to a file with the given width and height.
str Processes an image and saves it to a file. Returns the path to the image
Convert the data to a versatile image. If the data is a string it will be
Return the name of the placeholder image. If no name is set return the name of the
Save the versatile image field and update the ppoi field with the versatile image
Update the ppoi field of an instance. If the ppoi field is not
Field for versatile image field.
Returns the value of the field converted to a string. If the value is not a string
Autodiscovers the versatile image field registry for each app in django. apps
str Unregisters a sized image.
str Unregisters a filter. If the filter is not registered an exception will be raised.
Returns the URL of the image.
Build the filters and sizers for this field.
Get the root folder of the versatile imagefield filtered by the user.
Get the root folder of the versatile image field.
str sized root folder of the versatile image field filtered by versatileimagefield.
str Delete matching files from storage
Preprocess an image to be saved to a gif file. If the gif is already saved
converts the image to a string if it s not already a string and saves it to
str Retrieve an image from the storage and return a tuple of the image file extension image format
Save an image file to a file on disk. The file will be in memory uploaded.
Returns the PPOI as a string.
str Create resized image from given path to image and save to given path on storage.
Render the file input with the given name and value. If the file input has a template
Build the context for a clearable file input.
Build attrs from base attrs and extra attrs. If extra attrs is not None then extra attrs
str path to image width height filename key storage is a list of files to store in storage
str path to path to image filename key is the key of the file to be filtered storage
validate versatileimagefield sizekey list
get url from image instance and image key
Validate versatileimagefield rendition key and return a list of renditions.
Returns a string representation of an instruction.
Format the body of a function as a string.
str - > list of instructions from memoryview - > list of instructions - > list of
decode a module into a sequence of fragments.
str Connects to the server and returns a task that fires when the connection is made.
Read the next agi result from the stream and return it as an agi object.
str - > str - > str - > str - > str - > str - >
Check agi code.
Resets all instances to the given uid. If no uid is given all instances will be reset
Returns a list of the instances of this instance.
Get the metadata from the given path. If the path points to a setuptools package the
Returns a list of the primary keys of a model.
Deserialize a value into a related model.
Get an existing instance from the database based on the given query and the given value.
Returns the declared fields for the given model class. This method is called when the model is
str Loads the model from the given data and returns the model instance or raises an error
Split model kwargs and associated attributes into kwargs and associated attributes.
List all snapshots.
Restores a snapshot from the server. If no name is given the latest snapshot will be
Called at the end of the epoch. Sets the indexes to be random and shuffles
Clean text according to textacy rules.
Apply a function to a list of strings in parallel.
Process the given text and return a list of lists of the processed text.
Process text in parallel and return a list of the processed text.
Generate statistics about the document length.
str - > pandas DataFrame of word counts for each word in the index.
Map param type to a list of types.
str - > dict - > dict - > dict - > dict - > dict - >
Returns the inverse of the object. This is the inverse of the object. If the object
Update a dictionary with a rollback. If a duplicate is detected it will be removed from the
Returns a copy of this matrix.
Returns a copy of the current state. This is a shallow copy of the current state.
str - > bool - > bool - > bool - > bool - > bool - >
Returns an iterable of tuples where each tuple is a tuple with the value and the key.
str Clears out all of the internal data structures and clears out all of the internal data
Move key to the end of the tree. If last is True move to the last node
str Create a temporary file with the given text and return the name of the temporary file.
str Merge command line arguments into a config object.
Load address books from a list of books.
Create a new contact from a carddav object or from a user - input file.
Print a list of vcards and their birthdays. If parsable is True then print
a subcommand to find all phone numbers that match the given search terms in the vcard list.
list a vcard or a list of vcards if parsable is True print a list of
MODIFY a contact from a vcard or a carddav. txt or a cardd
Remove a vcard from a book.
str Given a vcard and an editor return a string containing the source of the vcard.
merge a list of vcards with a list of vcards to a list of vcards
Returns the action for the given alias. If the alias is not found None is returned.
Create a new contact.
Create a new object from a file in a book.
Create a contact from a user input.
Creates a new contact from an existing contact and a new user input.
Get a list of names for a given part of the vcard.
str categories - List of categories to add to the list of vcards to be added.
Parses a type value into the standard types custom types and the preferred number of the type.
Convert a list of strings to a string.
str - > datetime
Compare two uids and return the sum of the number of times the two uids are equal.
Search for all contacts that match the given query.
Search for contacts whose full name matches the given regular expression.
Search for contacts that match the given query. If the query is not found an empty list
str Search for objects by name or uid. If method is str search for names or uid
Returns a dict of short uids sorted by the number of contacts. If query is not specified
Returns the short version of the given UID or None if the UID does not exist.
Find vcard files in the vcard directory. If no search is specified all vcard files are returned
str Load all vcards from the source files. If no files are found all vcards
get abook by name
Return a list of architectures available on the system.
Return a list of architectures available on the system.
Guess the type of a keyword argument and return a dictionary with the type of the keyword argument
Replace the current query with a new query.
Returns the first entity that matches the query or None if there are no results.
Delete all rows from the result set. If the number of rows exceeds the blocksize delete all
Redis Lua prefix function. This is the same as lua s lua_prefix function.
str - > int - > float - > float - > float - > float - >
Count the number of items that match the given filters.
Returns a connection object for the given object. If the object is a model it will be
Return a list of the full text of the given value. If the value is a string
Add an object to the session. If the object already exists it will be added to the
Returns the value of pk in the known list or wknown list if pk is unknown.
Write data to the Lua database. This is the main entry point for the Lua
Save the changes to the database. If full is set to True the changes will be applied
Delete the object from the database.
Get a list of objects from the database. If ids is a list or tuple it will
open a sem file. name is the name of the file to open. value is the
str Send back the result to the queue. If the queue is full the result will be
str Add a work item to the queue. If the queue is full the call will be
check if the executor is running and if it s not start a new thread if it s
str Start the server process and wait for it to finish.
dup a file descriptor
wait for a given number of work items to complete
This function is called when the user wants to change some of the data that is passed to
str close all file descriptors that are not in the keep set.
str Terminates a process without using psutil.
str Terminates the process with the given pid and all of its children.
Get the exitcodes of the processes that have been terminated.
Format a list of exitcodes into a string with the format name and the exit code.
str Ensures that the process is running. If it is not it will try to spawn
This is the event processor. It is called by the debugger when an event is received.
str - > list of list of strings - > list of lists of strings - > list
Returns a list of tuples where the first tuple is the frame and the second is the line
str Runs a list of hooks on an object. Returns True if the hooks succeed.
str Forget the current state of the stack.
get an int from the current frame or None if there is an error in the current frame
str Processes all commands in the debugger.
str Add a command to the command queue. If the command is not readable print an error
Returns the next token in the input string starting at the given position. If there is no
str Print an error message to the console.
str Read a command from the input stream and return it as a string. If verbose is
str Closes the input and output files.
str Disassembles a message from a section and a code object.
count frames in a frame. start is the start of the frame. num is the number
str Returns the name of the call function at the given frame. Returns none if the frame
str Prints the stack trace of the given proc object.
str Lookup a sub - command by its prefix. Returns None if no such sub - command
prints the short help for a given sub - command
Add a sub - command to the list of sub - commands. Sub - commands can be
str Runs the specified sub - command with the given argument. If the sub - command
shows a specific command category
str Display the current line number filename and line number of the current file. Returns True if
find a debugged frame by looking at the locals of the frame. If the frame is
str Get an integer from a string or return a default value.
Set the value of an option in the debugger s settings.
Get an integer from the user s input and store it in the debugger s settings.
Show the current value of the variable. If no variable is given the variable will be displayed
Show the current value of an integer property. If no value is specified the current value is
Show the current value of the variable in the debugger s settings.
Return true if the line is a def statement.
Return true if the line is a class statement.
c - Quit the current thread in a threaded fashion. - Quit the current
Set the default background color for the terminal. If the terminal does not have a background color
Check if r g b is dark or not.
Returns a tuple containing the name filename and first line number of the given frame.
Returns a list of all the display strings in the display list.
str Returns a list of Display objects that are enabled for the given frame. If the frame
Read a message from the socket and return it as a bytes object. If the socket is
Show debug information on the celery server. If no frame is provided the current frame is
str Runs the command. Returns True if the command was executed successfully and False otherwise.
str Pretty - print a simple list of values.
str Looks up a signal name by its number. Returns none if the number is not
Lookup a signal by its name. If the signal name is not found None is returned.
Return a canonic signature name for a signal number.
str Set the handler for a given signal. Returns True if the signal was handled successfully.
check and adjust sighandlers
Print info about a signal.
str - > bool - > bool - > bool - > bool - > bool - >
handle the print flag for the given signal name and return True if the print flag was set
str - The function to be called when a signal is received. This function is called by
Returns the module name of the given file or None if the file is not a module.
Search for a file in a list of directories. If the file is not found return None
str Returns the name of the file in the given directory or None if the file does not
str Returns a list of the names of the python files in the callername.
str Write a message to the output. If the output is a string append it to the
str Runs the command.
str Shows a list of commands in a columnized format.
Close the connection to the server. This will close all open streams and close the underlying connection
str Write a message to the TCP connection.
str - > list of complete identifiers. prefix - > list of complete identifiers prefix - >
str Prints a string to the console and runs the command in the background.
Add frames to ignore. If no frames are given all frames will be ignored. If no
str Given a filename return the full path to it. If the filename is already in the
Returns the filename of the current debugger. If no filename is given the filename of the main
str Returns True if the tracer is started and the dispatcher is able to dispatch the event.
Check if the event is a stop. If the event is a stop and the level is
str Set the next state of the loop.
str Print the stack trace of the function f. f is the function f is the function
Delete a breakpoint from the breakpoint list. Returns True if the breakpoint was deleted False otherwise.
Delete the breakpoint with the given number.
Enable or disable all breakpoints. If do is set to False all breakpoints will be disabled.
Enable or disable a breakpoint by number. If do is False the breakpoint will be disabled.
str Returns a list of the number of the breakpoints in the given file and line number.
str - > None - > None - > None - > None - > None - >
Read a line from the input stream and return it as a string. If the input stream
Ask the user for confirmation and return a boolean value. If the user asks for confirmation
Submit a query and return the result as a future. The future will be added to the
Restores the user from the original session. If the original session is expired the user is
str Loads a module and returns it as an object or raises an error if the module
str Iterate over all the documents in the database. If expanded is set to True it will
transcode a file to a temporary file with the given filename and date. If date is
converts date values in a stream to the given format. If date format is not specified
str - > float - > timestamp
Detect the encoding of a file. Returns None if the file does not exist.
str Stream lines from a file as JSON objects.
Transcode a file to UTF - 8 and return a temporary file that can be used for
Open a CSV file in Python 2. If the file is utf8 it will be trans
str Read a CSV file into a list of dictionaries. Header is assumed to be a list
str Main entry point for the transcode script.
str save token to a json file or get a new one if none is provided.
str Request to the Luminoso API.
str Delete a resource from the API.
Get the root url from a URL. If warn is set to True the root url will
Saves a token to a file. If the file does not exist it will be created.
Send a request to the Luminoso API and return the response as a dict.
Make a POST request to the API with the given data and content type.
Get the documentation for the current project.
Make a GET request to the API and return the response as a string.
str - > csv - > csv - > csv - > csv - > csv - >
str read params from input file json body and p params
simplify a doc dict into a list of lists and a single string value.
Create a new project with the given docs and language and name.
Upload documents from a file to a project. The file must be in JSON format.
upload a stream of documents to a luminoso project
upload a file from a file - like object or file - like object filename - filename to
Command line interface to upload a file to S3. This is the main entry point for
Returns a Luminoso object from the given username and password. If an error occurs
Login to the server with a random user agent and return the response as a string.
POST the login page to the linky server and return True if successful False if not.
str Fetches the data for each period of the yearly or hourly period of the year
str Prepare the view class for rendering.
str Initialize the view. If the view already exists it will be re - created.
Render the view and return it as a string. If the request is a websocket return the
This function is called when a message is received from the client. It is called by the
Update the menus of the page. This method is called when the user changes the menus of
Returns a list of default static file handlers for this site.
This function is called when a message is received from the viewer. It is called by the
on dom modified
str Create the widget of the widget element.
Initialize the widget with the data from the declaration. This method is called when the widget is
str Destroy the web component and remove it from its parent.
str Called when a child is added to the web component.
str Called when a child is removed from the web component.
str Returns a generator of all the child widgets of this node.
str - > str - > str - > str - > bool - > str - >
Update the proxy with the given change dict. If the change dict is the same as the
Notify the root object of a change.
Returns a list of nodes that match the given XPath query.
Initialize the component. If the component has a source set it to the source of the component
str Set the source of the component to be rendered. This is the source of the component
Observe the mode of the block.
Observes a block change.
observe the children of this node.
str Read the contents of one or more pathcomponents from the current directory.
Print error message to stderr and exit with exit code.
Print an error message to stderr and exit with an error code of einval.
Returns the product with the given name.
Creates a new session and sets it as the current session.
Get the response from the server and store the token in the session.
Retrieve a list of stores that match a search term.
Set the delivery system for a given store and postcode.
Get the menu for a given store.
add item to basket
add pizza to basket
Add a side to the basket.
Remove an item from the basket.
Set the payment method for a delivery or cash payment. This method can be used to
Process a payment by sending a POST request with the session cookies and the payment string as the
Make a GET request to the given path and return the result as a string.
Make a POST request to the given path and return the result as a string.
Call the API with the given verb and path. Raises an exception if the HTTP status code
append item to menu
Add an exit item to the end of the list if it is not already there.
str Draws the menu to the screen.
Process the user input and move the cursor to the next character. If the user input is
Select the currently selected option and return the selected value. If the selected option is not selected
str Parse old menu data and return a curses menu object.
Convert a string to a datetime object in a DataFrame.
Convert datetime to string.
Basic math operation in a DataFrame.
cumulative sum of the values of a column in a DataFrame.
Remove old entries from the cache. Returns the number of entries removed. Raises ValueError if limit
str - > pd. DatetimeIndex - > pd. DatetimeIndex - > pd. Datetime
Returns the learning updates for the model. The updates are stored in the optimizations attribute.
str Returns a list of the training parameters in the network.
Optimize the updates of the model.
str Function to compute the first glimpse sensor and the gradient of the gradient of the
str Prepare the encoder decoder and classifier for training.
str Computes the tensor of the model with the given input.
str Map function to train valid and test sets.
str Vectorizes the target of the model.
str Report the number of training valid and test sets.
This function is the main loop of the training process. It is the main loop of the
Samples steps steps from the input and returns them as a list of strings.
computes the alignment weights given the previous state and precomputed values. The alignment weights are
Computes the context vector for the given state and inputs. The context vector is the sum of
str Concatenate a list of variables along a given axis. If axis is - num
str PADs the dataset to the specified side with the specified number of characters.
The RMS prop implementation of the RMS Propagation Propagation Propagation
prints the time elapsed since the start and the number of seconds elapsed since the start.
Run the algorithm on the given data and return the output as a string.
str Runs the model on the data and reports the results to the trainer and saves the
str Build loop variables.
scan the loop for the given variables and return the neural variables for each variable in the
str Momentum core for theano. The core is the momentum of the parameters
If training flag is set then branch is returned. If not then branch is returned.
str Skips n batches from the current epoch and sets the current batch to skip n batches
str Loads the parameters from a file. If the file does not exist it will be
str Train the model with a set of parameters and a set of valid and test parameters
str Runs the model on the given epoch with the given train set and size.
str Runs the model on the given epoch with the given valid set. Returns True if
str type score map epoch number new best if new best if new best if new best otherwise
str Get the current data set or return none if the data is not split by the given
Applies a function to the neural variable and returns the result as a new neural variable
str Report the parameters used and undefined parameters to the logger. If the logger is not specified
Returns a variable of the given type with the given last dim and shape. If last is
Create a list of neural variables from a dataset.
str - > str - > np. ndarray - > str - > np. ndarray -
str Stacks the encoders and adds the encoders to the layes list.
str Stack decoders.
str Encodes the input tensor with the neural network and returns the encoding result.
decode the input x using the neural network and return the decoded value.
str Create a 2D Gaussian kernel with the given dimensions and standard deviation.
str Register a new layer in the model.
Monitor the outputs of each layer in the training set.
Returns a list of all the parameters in the model.
str The name of the variable to be used for the output and test variables.
str Computes the model and returns the results as a dict. If no output keys are
str Save the parameters of the model to a file. If new thread is set to True
str Loads parameters from a file or file - like object. If the file ends with
str Prints out a report of the current state of the model. This is useful for
str Register a list of updates to be applied to a node. If a key already exists
str Register a list of training updates to be applied to the training data.
str Register a list of monitors for training and testing. If the key is already registered it
Multiple l2 norm of a list of tensors.
dumps a single element to a pickle file and writes it to a file - like object
Load an object from a file - like object or file - like object - like object.
Load the parameters of the model from a file.
str - > str - > str - > str - > str - > str - >
Parse X - Credentials data into a dictionary of credentials.
Filter access token and access token request elements.
Login the user with the given provider name. If the user is logged in the response will
Return a copy of the given dict with all values converted to str.
Convert a list of items to a dict.
Parse the body of a request as a JSON object and return a dictionary of the results.
Resolve a provider class from a string or class path. If the class is not a string
Create a cookie based on this cookie s name value domain and path. If delete is True
Saves the session data to the adapter.
Get the value of the cookie. If the cookie doesn t exist return an empty dict.
Get the data of the response.
str Returns the signature of the given parts.
str Serializes the given value into a string with a timestamp and a signature.
str True if the token is still valid. If the token is expired False is returned.
str Returns True if the token should expire soon after the given number of seconds.
serialize provider id and provider type into a string that can be used as a config value.
str Check if content is a binary string.
Return the content of the response as a binary string.
Returns a dictionary with information about the bitbucket user. This is useful when you want to
Login to a federated user or redirect to the federated user s home page.
Returns the session key for the given key. The key is prefixed with the prefix of the
str - > None - > None - > None - > None - > None - >
Generate a random csrf token.
str Log a message to the authomatic logger. If no logger is available the default logger
Check if a status is in a given category.
str Splits a URL into a base url and a list of query parameters.
str Set the CORS headers on the response.
str - > dict - > str - > str - > str - > str - >
Convert an object to a string.
Ensure that inst is an iterable. If inst is not an iterable return it as is.
math. isclose wrapper around math. isclose with support for relative tolerance and absolute tolerance
Deserialize an audio segment from a pickle string.
str Create an audio segment from a file.
str Convert numpy array to dub. audio. audio. segment. SegmentedAudioSegment
Reduce this audio segment to a new audio segment with the data from the other audio segments.
Serialize the state of the object into a pickle string.
Choose an offset front id from a list of candidate offset front ids and offsets corresponding to on
get the offset front id after a given onset sample idx
get offset front id after onset front id in onset fronts and offset fronts
match offset front id to onset front id
str consecutive and overlapping fronts
Get the front id from a list of indices.
Yields the front ids in the onset one at a time. The front ids are
Returns a list of tuples where the first tuple is the index and the second is the index
Remove overlaps between segmentation and fronts.
remove fronts that are too small
Merge adjacent segments in a mask into a single segment.
str Separate masks into multiple masks with a threshold of the size of the mask.
downsample one or the other mask and stft to the same shape as stft.
Asa task for plotting the Fourier transform of a signal. This task is used to
bandpass filter.
lowpass filter with a butter and a low - pass filter with a low - pass
convert a list of rows to a TensorFlow matrix and a list of one - hot outcomes
expand and standardize the data set and return a modified set and a list of headers.
Returns True if a and b are equal. If a and b are lists a and b
str Loads the audit confusion matrices from a JSON file.
convert a list to a TensorFlow matrix and a list of uint8 outcomes
str Get the index url from the config files.
autodetect files and directories
Handle errors that occur during the execution of a command.
Get information about the LSL instance.
Open a stream for reading and writing. If timeout is set to forever the stream will block
Returns the child element with the given name.
Returns the next sibling of the current node. If no name is given returns the next sibling
Returns the previous sibling of the node. If no name is given the previous sibling is returned
Sets the name of the LSL object. Returns true if the name was successfully set.
Set the current value of the LSL object. Returns true if the operation was successful.
Append a child element to the end of the list.
Prepends a child element to the end of the current element.
Append an element to the end of the list and return a new xml string.
Returns a copy of this element with the contents of elem prepended to the end of self.
str Remove a child from the node. If the node is an xml object then remove it
Returns a list of stream objects representing the results of the LSL resolver.
str Pairs a word to a list of tokens in the database.
autocompletion for the given string s. s can be a string or a list
str - Computes the edge ngrams for a token. min - The minimum number of
Iterate over the given pipe. If pipe is a string it will be converted to a list
str imap wrapper for multiprocessing. Pool. imap. This method is not thread - safe.
Make a fuzzy search for a word.
Fuzzy search for a word and print it to the console.
Fuzzy index for the given word.
str Extract manytomany relations from the results and add them to the bucket.
str Prints the help for the given command or all commands if no command is given.
\ x1b [ 1mNAME \ x1b [ 0m dbinfo -
\ x1b [ 1mNAME \ x1b [ 0m dbkey -
prints the geohash of the given latitude and longitude.
Index the document with the given id.
\ x1b [ 1mNAME \ x1b [ 0m bestscore -
str Sends the request to the server and returns the response. If stream is set to
str Map a list of requests to a list of responses. If stream is set to True
Get a range of bits from an array of bits.
reinterptet harray to bits
Convert a slice object to a slice object with the given width.
str Find all files in a directory that match a given pattern.
Returns True if every item in iterable is equal to val. If sig is True then the
str For each item in items call fn with the item and the number of the item.
str - > int - > int - > int - > int - > int - >
Check if a number is a power of 2.
Add a case statement to the switch statement.
str Add default stements to current stment. The default stments are added to the
Register the given object as a vcd variable. If the object is a string it will
This method is called before the simulation is started. This method is called before the simulation is
str Log a change to the VCD.
Return the HDL code for the given method proc.
auto add agents to a unit
Returns the associated clk of this unit or any of its parent units.
Returns an iterable that contains only the distinct elements of the iterable that satisfy the predicate fn.
groupedby is a generator function that returns a list of items grouped by the key returned by
Flatten a list of iterables into a list of lists. If level is greater than or equal
merge nested if from or if stm into self and merge nested if stm into self
Remove unconnected signals from a network list.
Check if the statement is too simple. Return True if it s a simple assignment. Return
try to merge proc a and proc b into proc a and return a new proc b.
reduce a list of processes to a list of processes sorted by rank then by name then by
Called when a write request is received.
Returns the name of the first output signature in the list of statements. If there are no
Return a list of statements that cut off drivers of the given signal from the given list of
str name - name of the entity interfaces - list of interfaces to synthesize target -
Get the max stm id for a given STM instance or wait STM instance.
Returns the maximum identifier of the statements in the given statement object.
Write data to the interface.
str Method to set the master interface direction. This method is only called if there is no
str - > None - > None - > None - > None - > None - >
str Returns a list of signal objects for this interface.
Get the physical name of the entity.
Returns the bit length of this object.
Returns the sensitivity of a given operation.
Convert this bit vector to another bit vector type.
reinterpret bits to a hstruct. sig can be a string or a list of strings
Returns the number of full words between start and end.
Return a generator that groups items by word index.
packs data into a list of words and returns a list of packed words. data is
str - > None - > None - > None - > None - > None - >
Given a list of statements and a list of output names return a set of the names of
Return the casual sensitivity sequence for the given signals.
str Return the rtl context of the hwt function.
Called when the statement is reduced or io changed. This is called when the statement is reduced
str Merge other statement into this one.
str Returns True if a and b are mergable. If a and b are None returns
Merge a list of statements into a new list of statements. The new list is sorted by
Merge two lists of statements into a list of statements.
Reduce a list of statements to a list of statements and return the new statements rank decrease and
str On the parent event of all STMs in the collection.
Set the parent stm for this statement.
Registers a list of statements with this node as the parent of each statement in the list.
str Destroy this statement and all its associated resources. This method is called when the statement is
clean this unit as a subunit of the current unit.
Flattens the fields of an object or list of objects. If the object is a
Convert the bitstring to a signed value. If signed is True the bitstring will be
Add a process to the list of processes that have sensitivity.
eval cond and return cond and vld if cond and vld are True otherwise return False
connects a port from one unit to another in a given direction. If direction is out
Convert a Python value to a string of the given width. If signed is True the value
Produce a resource context for the given proc.
eval param p is a param object p is a param object p is a param object p
str Set the value of the field to the given value. If the field is read only
Returns a string representation of the given interface map.
str Finalizes the memories and returns a list of ff to remove from the memories
Get the index cascade for the current driver.
Return a string representation of the value v. If the value is not a string return the
Cast the given value to the given type. If the value is already of the given type
Cast a value to a given type. If the type conversion is not possible it will try
str Walks through the parameters of the given interface and adds them to the discovered set.
str Return a list of connections from src to dst. If exclude is specified only connections from
str packs an interface into a sequence of signatures. If the interface is not in the
str The name of the unit and all of its sub - units. The name of the
str Register a new interface in the interface registry.
try to reduce val to sig. dtype. all and val. dtype. num or val
try to reduce val to sig. dtype. all or sig. dtype. all or sig
Get the base name scope.
str - > bool - > bool - > bool - > bool - > bool - >
Get the base condition of the given condition object. If the condition is not a logical condition
Return a bit string of the given width. If the string does not exist create it.
Get the constant name for the given value. If the value is already a constant it will
cut off drivers of a given rtl signal and return self. If the signal is not
Load from array and return the address of the new item. The new item will be set
Load data from a HDU dtype and return the address of the loaded data.
load from a hdl type and a bit - address of a bit - address of a
Get the width of the item in the bitfield.
Flattens the tree and returns a generator of tuples containing the base and end address of
Fix the sign of val to fit in width characters.
Return a string with the given number of indents.
str Check if a property name is available in an object. If not raise an error.
register parameter p name parameter. name is the name of the parameter p is the name of
Update the parameters from another object with the values from this object.
Register a unit with this container. The name of the unit is the name of the unit
str name of the interface intf is the interface to which the interface is declared. is the
str Register an array with a name and a list of items. Each item in the list
Get a single driver. If there are multiple drivers raise an error. If there are no
eval - Evaluate the expression and return the result as a static variable.
rtl signal with constant result.
Returns a copy of the context with the given indent added.
try to connect to an interface on the given unit if it doesn t have a driver.
propagate the clk to all units in obj. units
propagate the clk and rstn to all units in the object.
propagate clk and rst to all units
propagate RST n to all units in obj. units to all units in obj
propagate the rst of an object to all units in the object s units list.
Iterate over the bits of a signal or value.
str - > bool - > bool - > bool - > bool - > bool - >
serialize a unit only if the parent unit is declaration or priv is the same as the parent
serialize params to unit priv is a dict of unit priv is a dict of unit priv is
Get the full name of the interface.
str Creates an association between the objects in the list.
str - > str - > str - > str - > str - > str - >
reconnect unit signals to model
unit vcd of a model and a list of stimul functions. output file can be
Enable or disable the t - th interface on the given sim instance. This method is called
Connect this driver to the given signal.
str Registers an intern signal in the direction of the link.
intern method to add this driver to the source drivers and the destination drivers.
Get the intern signature of the link.
Returns true if the given signal is an ev dependent on the given process.
Add a process to the queue.
Add hdl proc to the list of procs to run. If trigger is ev dependent on
Schedule a comb update to be executed at the end of the simulation. If the simulation is
str - > None - > None - > None - > None - > None - >
Resolve a conflict with a new set. If the new set has a length of num then
Run all the comb processes in the order they were added to the output containers.
Run all seq processes and return a generator that can be used to plan the results.
Apply the values to the simulation and return a generator of the results. If the values are
Read the value of the given signature. If the signature is not an attribute the value is
Write a value to the signal. If the value is planed apply it. If the
Add a process to the queue.
Simulate a given unit and run it until a given amount of time or until a given
str - > list of statement s ternary ops to - > list of statement s t
Calculate the distance between two hashes.
Calculate the average hash of an image.
str distance between two images
str Create a vizio device and add it to the list of entities to be added to
Update the state of the volume level current input and available inputs based on the device state.
str mute - Mute or unmute the device. If mute is True m
str Change volume level to up by one step.
str Volume down
str Volume level
str Reset the board to its initial state.
Get the piece at the given square.
str Remove a piece at a given square. If into is set to True the piece will
str Given a square and a piece set it to the given piece. If from is True
str Is suicide or is check by dropping pawn
str A suicide of the king squares of the current turn.
Returns True if the game is over False if the game is over False if the game is
checkmate returns True if it is a checkmate False if it is not.
Checks if the zobrist is a four - fold repetition.
Pops a piece off the stack and removes it from the hand. Returns the new move
Returns a string representation of the s - F - F - F - F - F.
str Pushes a USI to the end of the move stack.
Returns the zobrist hash of the board. If array is none the default random
Return the symbol of the piece.
str Given a symbol returns a piece with the symbol and its color. If the symbol is
Return the USI representation of the piece. If the piece is dropped the USI
Convert a USI string to a square name and its piece type.
str - > list of parsed commits
str Parse a commit string into a dictionary.
Execute from command line.
Generate a YAML file from the current configuration and return it as a string. If override is
Cast the given value to the type specified by self. cast_as. name.
list of dates between first date and last date
Parse a date string into a datetime. date object.
str Load a currency file into the currency object.
set missing to none for all dates between first date and last date
Get the rate for a currency at a given date. If date is not found the fallback
str Animate the given number of frames with the given name at the given interval.
Read n records from the file and return them as a string.
str Write a record to the file. n is the number of records to write. data
str Map num words from start to end in the file and return a memoryview of the
Read the comments from the file and return it as a string. The comments are returned as
str Closes the DAF file and cleans up all internal data structures.
Generate a new position from the given tdb and tdb2. If tdb2
str Close the DAF file and remove all segment data from the DAF file.
str Loads the data from the DAF file and returns the initial epoch interval length and
str - > None - > None - > None - > None - > None - >
str Modular Add or Mod Modular Modular Add or Mod Mod Modular Add.
Visit a dict node.
A joined string is a logging statement and a list of formatted values is a logging argument.
str - > None - > None - > None - > None - > None - >
Visit the given node using the given except handler. If no handler is found the node is
Detects the logging level of a node.
Get the name of a node.
Returns the id attribute of the given value or None if the value is not a string.
str Returns True if the node is a bare exception and False otherwise.
Check if an exc info node is valid. If so add it to the violations list.
str Delete a file from the database if it exists. If it doesn t exist it will
Returns rendered content as a PDF string.
Render the PDF to a response.
str - > str - > str - > str - > str - > str - >
str Configures the plugin with the given module and keyword arguments. If no module is given
Convert a string to an underscored string. The string is converted to lower case.
str Auto index a MCS s collection with the indices defined in the MCS s meta
Parse a file and return a list of Price objects.
Load the content of a file into a list of strings.
Parse a line of text into a price model.
Translate the given symbol to the corresponding symbol in the symbol map. If there is no mapping
Load all symbol maps from the repository and store them in the self. symbol attribute.
Returns the current session. If no session is set the default session will be returned.
Import price data from CSV file.
Get the latest price for a given symbol.
Download all prices for a given symbol in a given namespace for a given agent and currency.
prunes all prices for a given security symbol or all prices for all prices for all prices
Get the default session for the price database. If no database is configured raise an error.
Add a new mapping between incoming and outgoing symbols.
List all maps in the database.
Get a symbol by it s id.
Read a CSV file and return the lines as a list of strings.
Map a price entity to a price model.
Map a model to a price object.
read config from file
Get the path to the config file for this package.
str Create the user config file from the config template. If the config file does not exist
Get the path to the config file.
Get the contents of the config file as a string.
Set the value of an option in the configuration file. If the option does not exist it
Get the value of an option from the configuration file.
str Save the configuration to a. cfg file.
Parse a symbol into its namespace and mnemonic parts.
Add a price to the collection.
Download the price for the given symbol currency and agent and save it to the database.
Returns the current session. If no session is set the default session will be returned.
Get a list of all prices for a given date and currency.
Get the price for a symbol on a given date in a given namespace on a given date
Delete all price items in the database and return the number of deleted items in the database.
Delete all prices for a given symbol. Returns True if all prices were deleted False otherwise.
Download a price from the given symbol and currency from the given agent. If the symbol is
Get a list of securities for a given currency agent symbol and namespace.
Return a partial version of the state with the given number of args and kwargs.
Update the child calls with the partial values of the child nodes.
Returns an iterator over the descendent nodes of this node. If include is True returns the
has chosen an option in the list of messages msgs can be a list of strings or a
Returns a list of all defined keys and values. If the value is empty returns an empty
str getx - Get the value of an attribute of a given parser for a given tree
Check for a loop in the context of a state machine. The context is a list of
Check that the solution has a context for each part in the solution. The context will be
Check that a student or solution part is present in the student s solution. Returns the part
Check that a student part has a particular part at a given index. The index can be
str Returns the true anomaly.
str Initialize the ldap3 manager with the given ldap3 application instance.
str Add a new server to the pool. Use ssl and tls to enable SSL and TLS
De - contextualise a connection from the current context.
Tears down the current context. This is called when the current context is closed.
str Authenticates a user and returns a dictionary with the username and password. If the
str Directly bind to the LDAP server and return the user info and the user groups.
get a list of groups for a given dn or full group search
Get information about a given user.
str Given a username return the user object for that username. If no connection is given return
get object by dn filter and attributes
Returns a connection to the LDAP server. If the connection is already bound it will be returned
Make a connection to the database.
str Create a connection to the LDAP server.
str De - contextualise a connection and unbind it from the pool.
str Searches for objects with a given query. If no query is given searches all objects
str Searches the database for the given query. If no query is given the search will
Search for all the artifacts in a collection.
str Speak client name and database name.
str Announce a command. If no command is given announce all commands. If quiet is
Update the secrets and the base key.
Update the headers of the message. If fields is a dictionary it will be updated with the
Require secrets for a given client name and optionally a list of parameters for a given client.
str Download a file from a URL to a temporary file and move it to a new location
str Stream the content of a URL to a file or stream to a file - like object
update the headers with the authorization token in the headers dict
Get or create a folder. If folder does not exist create it. If folder does exist
Read a response from the API and return it as a dict. If the response is not
get bucket object from S3 bucket name or create it if it doesn t exist.
Update the client s secrets. This is the first time the client is created. This is
Initialize the client object. This method is called from the init method of the client class.
str Loads the secrets from the settings file. This function is called when the user is
Get the logs for a given name. If no name is given all logs are returned.
List all the logs in the bucket.
Create a folder for an endpoint.
init transfer client
Search for all containers and return them as a list of dictionaries.
Shows the status of the client s secrets. This is the status of the client s secrets
str Add a new secret variable to a backend.
str Remove a variable from a secret backend.
Activates a secret backend. If backend is None the default backend will be used.
Delete a backend from the client secrets file.
Update the base of the image. If the base is not specified the default is used.
str - > dict - > dict - > dict - > dict - > dict - >
str Generate a signature for the given payload and secret.
Generate a header signature for the given payload and request type. The signature is generated using the
str Delete a resource.
str HEAD call to the given url and return a dict with the data returned from the request
str Pagination method for GET requests.
check if ssl is enabled and return False if ssl is not enabled.
str Remove an image from the registry. If force is set to True the image will be
Get a dictionary with the version information from the version file. The dictionary is returned as a
str Returns a list of module names and their dependencies. If the lookup parameter is None the
str Get the singularity version from the command line.
Check if a given software is installed. If quiet is set to True it will print the
str Returns the absolute path to the directory where the package is installed.
Returns the thumbnail for the current installation. If the thumbnail doesn t exist it will be created
str Runs a command and returns the output as a dict. If sudo is True the
Get the metadata of an image. If no file is provided the metadata of the image will
update secrets for the current user in the dropbox dbx store the current account in the
prints the response to a file. If the output file is not none it will print
kills a number of commands from sregistry. main. client.
str List logs from a container.
Get all collections in the account.
Update the secrets setting and exit if there is no secrets setting.
The main entry point for the ipython interpreter.
str - > list of manifests for a given repo name - > list of repo names digest
Get the manifest of a repository.
Get the cache path. If no destination is specified the default cache path will be used.
Extract the environment variables from the config file and return them as a string.
str Update the base and artifacts for the API and the job to be run on the server
Update the token in the headers.
Get the metadata of the job.
Get the settings for a given client.
Get and update a required setting. If the setting is not present exit with an error message
Update the value of the named setting. If the value is not None it will be updated
Generate a credential and signature for the given request type and request names.
str List all builders for a given project and zone.
str Load all templates with the given name and return them as a list. If more than
Get the IP address of an instance by name. Will retry up to a number of times
str Builds a new instance in the specified zone.
List all the containers in the bucket.
Search for all containers in the bucket.
The main entry point for the sregistry command. This is the main entry point for the
This is the main entry point for the sregistry command. This is the entry point for
init database with a path to the database to be used for the database.
str Get the build template from the installation directory. If the template doesn t exist it will
str - List all endpoints for a given query.
list all the files in an endpoint. If query is not specified all files will be listed
Create a shared link to the given image. If the image doesn t exist it will be
Read client secrets from file. If no file is specified the default client secrets are read from
str Get all the services for this application.
Delete an object from a bucket.
delete a file from S3
Destroy an instance
Returns a dictionary of all sub - parsers for the given parser.
Generate a random string of the given length with the given delimiter.
Returns the current working directory. If requested is not specified the current working directory will be used
Extract a tar archive to a folder.
extract a tar archive to a folder
get sha256 hash of a file
str Read a file and return it as a string. If mode is str the file will
str Read a JSON file into a Python object.
clean up a list of files. files can be a string or a list of strings.
str Push an image to S3
get or create a collection with the given name. If the collection does not exist create it
str Get a collection by it s name.
get container by name collection id tag and version
List all images in the registry. If no query is given all images in the registry are
str Inspects a container and prints it s fields as a JSON string.
r rename an image to a new location
Move an image to a new location.
Delete an image from the container. If the container doesn t exist it will be created.
Parse a header from a recipe string.
str Find a single recipe by filename and pattern. If no recipe is found return None.
Create a tar archive with the given files and return the sha256 hash of the tar.
Update the metadata of a blob based on the response from the server.
Format a container name to be used as a container name.
Returns True if the user should use colorization or False if the user should not use color
Emit an error message if level is one of abort error warning verbose or debug.
Write a message to a stream.
prints a table of messages to the console.
push an image to a remote server
str Get a template by name.
get the manifest for a given image name and tag. If the image doesn t exist it
get a build template from a file in the install directory. If no name is given the
Update the client secrets. This is called when the user changes the client secrets. This is
A context manager that raises S3 errors for a given path. This context manager is used
str Create a temporary file and return a proxy object that can be used to access the file
Returns a gravatar url for the given user or email.
Get a gravatar url from an email address.
Check if an email has a gravatar.
Get a gravatar profile url.
str Chimera blocks generator.
chimera block quotient
str Enumerate all resonance smiles in a molecule.
str Enumerate the chemical resonance of a molecule.
str Given a molecule and a rule return a list of all reactants applied to it.
Returns a canonicalized version of the given molecule.
Validate a smiles file and return a list of valid smiles.
Convert smiles to chemical chemical chemical chemical chemical chemical chemical
str Enumerate all tautomers in a smiles string.
str Given a smiles return a tauter representation of the smiles.
str Returns the tautomer of the given molecule. If standardize is set to
Returns the fragment of a molecule. If no fragment is found the original molecule is returned.
str Returns the stereo parent of the given molecule. If skip is set to True standardizes
str Return the isotope parent of a molecule. If skip is set to True standardize the
str Charge the parent of a molecule and return the uncharged molecule.
str Main entry point for the molvs command line tool.
str Remove all fragments from a molecule and return the removed molecule.
Choose a molecule from the chemical chemical chemical chemical chemical chemical fragments
Integrate an ivp function.
get mems of org
get teams of org
Get a list of all repos in the github repo repository repository. type can be one of
get total number of contributors for a repository
get the number of open and closed pull requests for a repository
get all issues in a repository
Get the full path of the README file for the given repo. If the README
Get the license for a given repo.
get list of commits in a repository
write a json file for a given organization and a dict to a given file path ending type
str Write totals to a file. If the file does not exist it will be created.
write a list of languages to a file. If the file does not exist it will be
check if file is a directory and create it if it doesn t exist.
remove a date from a CSV file
us gov orgs
str Create an enterprise session.
str Check if the API limits are met.
str Connect to a GitHub server. If url is str it will connect to the GitHub server
Query all repositories in a given organization or a list of repositories.
Get an organization from the GitHub API. If no name is given the user will be prompt
Write the stargazers to a file.
Generate a project from a gitlab repository.
Return a license object for the given license string. If the license string is not a valid
get the traffic for all the repos in the organization
str url = str headers = str repo = str name = str
str - referrers url - referrers repo name - referrers repo name
get the data from a given url and store it in the given dict to store the data
Write a dictionary to a JSON file. If the file does not exist it will be created
str Write the data to a file. The file can be a list of referrers
check data redundancy
write data to a file
write referrers to a file
str Process a JSON file and return a generator of records.
process a url and return a list of records. key can be a string or None.
Process a JSON file or a URL and return a list of dictionaries.
Login to GitHub with a token or a password. If the token doesn t exist it will
get mems of org
Write the logins and emails to a file. If the file does not exist it will
str Connect to a Stashy server and return a session object.
str Connect to a gitlab server and return a session object. If no token is provided
Returns a generator of all projects in the given repos. If no repos is given all projects
str - str - str - str - str - str - str - str - str -
Prunes all null values in a dictionary and all nested dictionaries that are of type str.
str Read a GQL file into a string and store the result in self. query.
Await for a reset to occur in the given time stamp. The time stamp will be
rcountdown - count down a number of seconds. wait is the number of seconds to
str Load data from a JSON file.
str Save the data to a JSON file.
str Create a connection to the TFS server. If token is None the default token will
str Create a TFS project analysis client from a TFS URL. If token is not
str Create a TFS client for the given URL. If token is none the default token
str Create a tfs git client for the given URL.
str Create a tfs client for the given url. If token is none the default token
Get a list of repositories for a given project in a collection.
Get a list of repos for a given project in a given collection.
Get the number of commits for the current year.
calculates total number of commits for each week in the week list starting from the first commits
str - File to be written to. txt file with week number and number of commits.
str Timing function.
str Log a histogram of the given stat and value.
str Rollup to the next flush interval. This is a long running routine that logs the
Convert a database value to an enum value.
Convert the given value to its python equivalent.
Return the value as a string. If the value is not an enum raise an error.
str Resolve a path to a set of objects.
Project a list of ULSs into a dictionary of ULSs.
Returns the mean of the values in the histogram. If the histogram is larger than the number
str Counts the number of times the function was called and updates the internal data structures.
Returns the mean rate of the time series. If the time series has not been set the
Mark a number as being in the list. If the value is greater than the last mark
Send a metric to the server. If the metric is a snapshot the snapshot will be sent
Serialize a metric into a list of strings.
Returns a string representation of the metric with the given name value and metric type.
Send a metric to the server in a buffered fashion. If the number of metrics has been
Return the value of an option in the given section. If the option does not exist raise
Convert data to a string if it s not already a string. If it s a string
Get or set the value of an option. If the option does not exist it will be
str - > dict mapping ledger codes to guid - > ledger account guid - > ledger account
str - The number of divisions for the user. Returns a tuple of the choices and
str - > str - > str - > str - > str - > str - >
Create a view with the given injector.
Create a form view and inject it into the injector. The view will be injected into the
Create a view for the given injector with the given HTTP method. The injector will be injected
Create a new api view and inject it into the injector. The injector is passed to the
Generate a generic api view.
Create a model view set with the given injector. The injector must have a model view set
str Create a stream from a unix file descriptor.
Read data from the socket and send it to the protocol. If the socket is closed the
str Close the connection to the server. If the server is closed the connection will be closed
Watch a file or directory for changes. If alias is not specified the path will be used
unwatch a file or directory. alias is the name of the file to unwatch.
setup a watch for a file or directory. alias is the name of the file to watch
str Create a new inotify instance and start listening for requests. This method is called
str Read the next event from the stream and return it as a Event object.
str Touch the message. This will trigger a touch event. If the message has responded
str Success function.
str This is called when the timer fails to run. This is called when the timer fails
str Close all connections and stop the periodic thread.
str Connect to a nsqd server.
Perform a lookupd query.
int max in flight int num in flight int max in flight int max in flight int num
str Log a message that was not able to be sent to the server.
str Add a listener to be called when a message is received.
str Remove a callback from a named event listener.
str Trigger an event on all registered listeners. The event will be called with the given arguments
pub - Publish a message to the specified topic. The callback will be called when the message
str Set the feature transform mode and degree of the training data. mode can be str degree
str Prediction of input data. Input data can be a list of floats or a string
clean up fastq files that have not been paired with any of the expected fastq files.
depth file reader
str Set the path to the template file.
str Set input and output channel names.
Render a Jinja2 template with the given context.
Render the template with the given context and return the result as a string.
str Add a sink to the main forks list and update the context with the new for
Update the attributes of this object with the values in attr. attr can be a dict of
Set the secondary inputs in the context dictionary.
str Parse an assembly file into a list of contigs and their coverage.
Get the gc content for the given sequence and length. The length is the number of characters
Returns the total length of all the contigs that are not in the filtered set.
str Write the assembly to the specified output file.
str Write the report to a file.
Remove inner forks from text.
str - > Pipeline str - > Pipeline str - > Pipeline str - > Pipeline str -
str Get the source lane from the given fork process and a list of pipeline lists.
str - > list of lane tokens from lanes string - > list of l
a helper function to generate a linear connection between a list of connections and a lane.
add unique identifiers to pipeline str
Remove unique identifiers from the pipeline links.
str Check that the trace and log files are present.
Returns a mapping from the header to the position of the header in the file.
converts a string to a float with a precision of 1. 0 to 1. 0
size coverter takes a string and returns a float of the size of the string.
str Get pipeline name and process tags from the log file and store them in self. processes
str Clears the current state of the process. This is useful for debugging and debugging.
Update the status of the barrier based on the current status of the process.
Retrieve the contents of the log file at the given path. If the file does not exist
assess resource warnings and return a tuple of cpu and memory warnings.
str Update the inspection of the log and trace files. This method is called by the
str Displays the overview of the current state of the editor.
str Move the cursor up or down depending on the direction. If direction is str move the
right left padding
get the last n lines of the log file
str Returns a dictionary of static information about the pipeline.
str - Path to the DAG file. Returns a dictionary of the DAG data.
get the run hash of the current log file.
Get the next flow path from the given log file.
This is the main entry point for the assembly tool. It is the main entry point for
str Brew innuendo pipeline.
str List all recipes.
Validate the pipeline string.
str Builds a pipeline for the upstream of the given task.
str - > str - > str - > str - > str - > str - >
str Runs the auto - pipeline for the given list of tasks and returns the pipeline string
Returns a string representation of a component with optional parameters. If no directives are provided the component
Write a report to a file.
This is the main entry point for the script. It takes a list of log files and
Fix contig names in asseembly file.
str Clean up temporary files in a fastq file. This is done by removing the temporary files
str Parse a list of file paths.
str Parses a CSV file and stores the results in self. storage.
Get the contig id from a contig string.
str Write plot and table data to a file in JSON format.
str Parse an assembly file into a dictionary of contigs keyed by their header and sequence.
get summary stats for all the contigs in the contigs table
get a list of labels for a given window of contigs and the number of contigs
Returns the GC property of the string s. length is the number of characters in the string
Returns a list of numbers of contigs sliding from the start to the end of the
This is the main function for the skesa command line tool. The command line is
write a json report for a given sample id and data1 and data2
str Parse a Bowtie log file and return a Bowtie object.
str str - > str - > str - > str - > str - > str -
add a dependency to a process
str Searches the tree backwards from the given template to the given parent lanes.
str Builds the header section of the header file.
str Builds the footer of the file.
init process with raw inputs and extra inputs set them to self. main and self. extra
Set the secondary channels.
Set the status of all the processes and the report of all the processes.
Returns a string representation of the configuration file.
Set the configurations for the pipeline.
str Create a DAG from the given viz and save it to the given output file.
str Write the configs to a file in the given project root.
Export the parameters of all the processes in the process pool as a JSON string.
Export the directives of all the processes in the process pool as a JSON string.
str Builds the NF file and writes it to a file in the file system.
str kmer string max read length number of kmers
str Returns a unique identifier for the report. If the report is watching the pipeline will be
watch the trace file to see if it has changed. If so update the report queue.
watch the log file for changes and update pipeline status. If the size of the log file
send live report
init live reports
str Close the connection to the report server.
convert adatpers from fasta format to adap.
This is the main entry point for the mash script. It is the main entry point
Returns a string with the given text colored according to the given color. If no color is
str Collector for the process map and the pipeline string. This is the main entry point for
Returns the min and max values of the given qual string.
str Filter the assembly file based on the coverage of the contigs in the assembly file.
get the size of the assembly file and the number of contigs in the assembly file
This is the main entry point for the filter command. This is the main entry point for
str Convert camel case to lower case.
collects a map of component names to their class instances.
str is the path to a newick file. It is the path to a newick
map w to the data in self. data and store the result in self. wmapped
str Filtering function for median values.
str Function to compute a gaussian of size m.
str Computes the ssm of a point.
str Computes the number of non - zero components of a Gaussian distribution.
str Filter the input array by a gaussian distribution.
computes the distance between the points in x and the distance between the points in x.
circular shift is a function that shifts the input array by a circular shift of the input
str Given a 2D array x and a number of elements m return a 2D array
plot formatting of an estimator file with the given title and algo ids last bound and number of
plot all the boundaries of a given est file and an optional list of algo ids to plot
plot labels for a given set of labels on a given time series and a given estimator.
Returns a list of feature segments from a numpy array. The segments are sorted by index.
str Calculates the 2D - MCMC maximum of a sequence of segments.
str Scattering algorithm.
str Read references from a JAM file.
str - > None - > None - > None - > None - > None - >
Returns a list of all of the boundary algorithms in the system.
get the configuration for a given feature annot beats framesync boundaries id and labels id.
str Get a list of audio files in the given path.
str Read hier references from a jam file.
str Get the duration of a feature from a JSON file.
Write a mirex file with the given times and labels.
Get the path to the audio file with the given extension in the given directory.
str - > str - > str - > str - > str - > str - >
str Returns a tuple of time and frames for each beat. The first tuple is the time
read ann beats from jam file and return a tuple of times and frames.
str Compute the beat sync features and the beat sync times for a given set of frames.
Returns a list of all parameter names that are not prefixed with a string.
str Returns a list of time intervals for the framesync.
Returns the number of frames in the model. The number of frames is determined by the number
str The features of the audio file. If the audio file does not have features this method
str Check if feature is in the list of valid features. If not raise runtime error.
str Post - processing of the estimator. This method is called after the estimator has been processed
str Main entry point for the command line tool.
Print the mean of the results to the console.
Computes the information gain for a given set of annotations and a given set of estimated data.
process a track file and return a list of the results.
str Returns the name of the results file for a given set of ids labels and annotator
str Computes all features for a given audio file.
str Process a single file or a list of files and compute all features for each file.
str Computes the cost of a Gaussian distribution.
str Normalizes a floating point to the logarithm of the magnitude of the floating point.
str Normalizes a numpy. ndarray to a numpy. ndarray with min and max values.
get the time frames for a given time dur and anal time
str Remove empty segments from a list of times and a list of labels.
str Sonify audio with clicks.
synchronize labels with old and new labels. num is the number of labels to synchronize
str Function to process segmentation level.
align end hierarchies in hier1 hier2 hier1 hier2
str Computes the distance between a point and another point in the dataset.
str Knee - Knee Estimates the k - thesian of the
get clustered data
str k - means k - means k - means k - means k - means k -
str Computes the BIC for a given set of means and labels.
str Magnitude of real and imaginary parts of a matrix x is the real part of the
str Convert a json file to a numpy array of the bounds of the segments.
str A JSON file containing the bounds of the image.
Convert a list of segments to a list of labels.
converts a json file to a numpy array of beats
str Function to compute the 2D Fourier transform of a signal x.
str Computes the labels for a given rank r and bound. The labels are sorted by
str Filter activation matrix.
Returns the module for the given boundary id.
str Returns the label module for the given label id or None if the label id is not
run hierarchical segmentation on an audio file
run a flat segmenter on the given audio file using the given module and frame times.
str Main entry point for the translator script.
Set a task to be run in a separate thread. The task will be run in a
Spool an iterable of text into a stream of text. This is useful when you want
str Copy input from stdin into target stream.
str Returns a translation table for the given language. If the file does not exist it will
str Prints the translation table for the given language.
str Remove nodes from a network.
str Converts a network object to a pandas hdf5 file. If rm is set to True
str Create a Network object from a pandas hdf5 file.
Process a single node from a dictionary. This is used to create a node from a dictionary
Make a query to the OpenStreetMap API and return the results as a dict.
Build a node query string from the given parameters.
Returns True if value is a regular expression False otherwise.
Compare a value against a given expectation. If the value is not equal to the expected value
Compare expr to value. If expr is equal to value returns True. If expr is a
str Trigger all methods on the given instance. The method will be called with the value of
Returns the matcher with the given name or None if no matcher with the given name exists.
Initialize a matcher with the given name and arguments.
Set the body of the message.
str - > str - > str - > str - > json - > str - >
Set the value of a key to val. If the key already exists it will be replaced
Append function or method to target list.
triggers the given request on the given instance. The request must be an instance of the
Add a header matcher to the current request. If no headers are provided all headers will be
Check if a header is present in the response.
Expects a list of headers to be present in the response.
str - > None - > None - > None - > None - > None - >
str - > None - > None - > None - > None - > None - >
str - The JSON payload to match against. This is a JSON object that can be parsed
str - The XML string to match against. xml - The XML string to match against.
Read the content of a file and add it to the request body.
str - Set the persist status of the object. Default is none. If set to True
str - > str - > str - > str - > str - > str - >
Return a reply to the current request. If new response is True return the current response.
Matches a request against this mock. Returns True if the request matches and a list of errors
Set the mock engine to use. The engine can be a class instance or a function.
str Create a mock object and add it to the engine.
str Removes a given mock from the list of mocks.
Activates the engine. If the engine is already active returns none. If the engine is
str Disables the engine. If the engine is already disabled nothing will happen. If the
str Returns True if the request should use a network.
str Match a request against all mocks in the chain and return the first mock that matches.
Returns a copy of the request object.
Context manager to enable or disable the engine. If network is True the engine will be enabled
str Add an interceptor to the chain.
str Remove an interceptor by its name or class attribute. Returns True if the interceptor was removed
Get the value of a setting for a given connection. If the key is not in the
Return the decrypted column as a SQL statement and a tuple of the SQL and the parameters.
Set the original value on the model instance and call the super class s pre save method.
Returns the placeholder for the given value. If the value is not specified the placeholder will be
Get a column from the table. If alias is different from the model s table the column
Get the value of the placeholder in the database. If the value is not provided the placeholder
str Calculates the base regression of the data in q.
Returns the covariance matrix of the tree. The covariance matrix is the inverse of the root node
recurses through all nonterminals in the tree and computes the variance of each branch
str Calculate the averages for all nonterminals and clades in the tree.
str Computes the explained variance of the tree.
str Regression of the model.
str Function to set the t - value of the t - value of the t - value
str Calculates the number of branches in the tree. The number of branches is the number of
str merger time - t - node + branch length - number of multiplicity - number
str Attaches the current cost to all clades in the tree.
normalize a profile to a normalized profile and return a tuple of the normalized profile and the offset
Set the gtr site specific value.
str - > None - > None - > None - > None - > None - >
Set the length of the sequence. If l is not specified the length will be set to
attach sequences to all the nodes in the tree and return a list of nodes that can be
str Prepare the tree for insertion into the database. This method is called when the database is
str Prepare the tree to be used for the tree generation. This method is called by the
str - > dist2root - > dist2root - > dist2root - >
Returns the mutation matrix for a given node.
Expands the sequence of this node into a reduced sequence of the same length as this node
str Returns the fitch state of a node at a given position.
str Returns a list of all possible sequences in the tree. If pos is not specified the
str Returns the ancestral likelihood of all clades in the tree.
Returns the length of the branch of the given node. If the node has a mutation length
Returns the optimal length of the branch of the given node. If the node is a compressed
Reconstructs an alignment from the tree and returns it as a multiple alignment object.
Einstein summation of the diagonal of the covariance matrix and return the result.
str Create a custom GTR object with the given parameters.
str Check if q is fixed and if not raise an arithmetic error. If fixed mu is
Return the optimal t sequence for the given sequence p and sequence ch and pattern multiplicity.
str Probability of a profile pair at time t. Returns the probability of the profile pair
str evolve a profile at a given time.
str Calculates the log - likelihood of the given sequence. If no pattern multiplicity is given
str - > str - > str - > str - > str - > str - >
Plot the root to tip of the tree regression.
u Print the unconstrained sequence marginalized sequence and coalescent marginalized sequence.
Add a coalescent model to the tree.
str Find the best root of the tree.
str Create a tree from an alignment. Returns the number of nodes in the tree.
str - > gtr - > gtr - > gtr - > gtr -
Read a VCF file and return the alignment reference and fixed pi.
calc the fwhm of a 1D distribution with respect to the logarithm of the
str Delta distribution.
assign dates to all clades in the tree and assign them to the raw date of the
str - > TreeregressionTreeRegenerator
str Make a time tree for the given time marginalization. If time marginal is True then
str Returns the likelihood of the timetree.
converts dates in the tree to real dates if real dates are set to True.
str - > np. ndarray - > np. ndarray - > np. ndarray - >
Get the minimum value of an interpolation.
median of an object in a grid.
Return a date in the form of year + day. If dt is None return the current
str is the name of the regression model. This is the name of the regression model.
Closes the connection to the server and resets the connection state to disconnected.
Receive a line of text from the client and return it as a unicode string or None if
str Send data to the client.
str Send an instruction to the remote node.
Convert unicode string to UTF - 8 string. If str is a unicode object it will be
str Loads an instruction and returns a new instance of the instruction. Raises an exception if
str arg - > str utf8 - > str utf8 - > str utf8 -
Returns a string representation of the instruction and its arguments.
Returns the URL for the class of this class.
Returns the instance URL for this object.
Returns the URL for the class of the model.
str Downloads the file to the given path. If no path is given the file will
Get the parent object for this job.
Ask for user s credentials for a given domain. If the user does not have the credentials
Prompt for user credentials and login to Solvebio API.
Print the current user s name. If no username is provided the current user is displayed.
Print a user s information.
Returns a new GenomicSequence object that contains only genomes in the range [ start stop
Return a new sequence filtered by chromosome and position.
Get a list of facets for the current query.
Process a list of filters and return a list of filters as a list of dicts.
Return the next item in the result set.
Execute the query and return the results.
str Migrates data from this dataset to another dataset. If follow is set to True
Main entry point for the solvebio command line tool.
Constructs a new instance from a dictionary of values.
Logout the user from the OAuth server. If the user is logged in it will be redirected
Retrieve the child object for this task.
snpeff - parse the snpeff annotation and return a dict of the annotations.
Return the user s credentials. If no credentials are available None will be returned.
Save the configuration to a file. The file will be saved in the given path.
Format the given value with the given type. If the value is None return the missingval
Build a row of cells from a list of cells. The first cell will be padded with
Build a single line of text from a list of colwidths padding begin and end characters.
Returns a list of attributes for a mediawiki cell. The attributes are aligned according to the
Create a migration from the source dataset to the target dataset. If target is an instance of
str base remote path path dict vault path path dict local path dict local path dict vault path
str Validates a full path and returns the full path and the parts of the path.
str Validate api host url.
str Takes a list of records and returns a generator of the records in chunks of size self
Evaluate the expression with the given data and return the result as a dict. If the expression
Set the format name for this field. If the format is not supported raises an error.
str Register a new formatter with the given name. The handler will be called with the given
Adapter for tabulate. tabulate. tabulate. tabulate. table. adapter.
path to user config file
list of system config files
str List of additional files in the directory where the file should be written.
Write the default config to the user s config file. If overwrite is set to True only
Read configuration from a list of files and update the configuration with the values from the files.
Truncate a string to a maximum width.
Returns a copy of the string s with all occurrences of replace replaced with the values in replace
str Runs a command in a sequence and exits if the command is successful.
Apply the given option to the given command. If active is True the option will be applied
Initialize the linter with the given options.
Run the command and return the exit code. This is the main entry point for the command
Run clean html and view commands.
Returns a tuple of tuples where the first element is a string and the second element is a
Format a single row of data into a single string with the given headers.
Returns a table adapter for the given data and headers. The kwargs can be used to filter
Generate a table from a list of data and a list of headers. The format can be
Check if the certificate type is a number or not.
str - > bool - > bool - > bool - > bool - > bool - >
str - > bool - > str - > num - > float - > float - >
Generate a new key for the given template. The key will be stored in the session s
str generatekeypair - Generate a new key pair for the given template pub and template priv
Find objects in a CK object. template can be either a string or a list of strings
str img img icon img factor factor box img static dir static dir icon box img factor factor
Shows the panels for a specific build.
str - > datetime. timedelta - > datetime. timedelta - > datetime. timedelta - >
str Repeats a day. If no day is given the current day is used.
Repeats a day in the month.
biweekly helper.
handle a single chunk of the event by repeating it in a single month. If the event
Export all the variants for a given collaborator and document. If no document id is provided
str - > str - > str - > str - > str - > str - >
Add or update a user s roles.
List all variants of a given type for a given institute id and case name.
Retrieve a single variant of an institute.
Retrieve a single variant of an institute.
Sends a verification email to the user to verify a variant.
A form to export a clinvar for a given institute and a variant.
Returns a list of cancer variants for a given institute.
str - Create a new ACMG for a given variant.
str evaluation - View for a given evaluation id - The id of the evaluation to be view
Get a list of ACMGs for a given criteria.
Upload a new panel to the HGNC store.
Download the verified excel file to the static folder. If the file doesn t exist download it
alias a hgnc id to a list of hgnc id s
str Add incomplete penetrance for each gene in hpo lines.
str Create a request to the given url with the given token method content type accept and data
Get a list of nodes from the MME API.
Get the coordinates of a given position in a given chromosomal.
Get the subcategory for a given length and reference length. If the reference length is equal
Get the length of a string.
Get the end position of a line.
Parse the coordinates of a variant.
Update a panel. Requires admin access.
Export a panel as a PDF file.
str Edit a panel in a HGNC and return a dict of the form and the
Sends a report to the specified path. If update is set to True the report will be
str - > list of HPO phenotypes
List all keys in the whitelist for a given adapter.
Build a phenotype object from the given id and adapter. If the id is not found return
str - > dict - > dict - > dict - > dict - > dict - >
str - > list of dicts representing the genes in the store that match the given query.
list all available institutes for the current user. If the current user is an admin
Show a list of all transcripts for a given build and HGNC ID.
day - > list of events for a given day - > list of events for a given
str - > list of variants for a given store and case obj - > list of variants
Retrieve a list of variants for an institute and a case.
Create a new instance of str for a given variant id. The store is used to store
Export the header of the variants of a case object as a list of lists of strings.
Get predictions from a list of genes.
find bai file in BAM file
Returns a dictionary of observations for a given variant.
str - > list of refseq transcripts - > list of refseq transcripts
Returns a string representation of the given transcript object.
Returns the end position of the variant.
Get the most common frequency of a variant.
Generate a human - readable version of the clinsig in a variant object.
str - > str - > str - > str - > str - > str - >
Generate a cosmic link from a variant object.
Generate a beacon link for the given variant object.
str - > str - > str - > str - > str - > str - >
Returns a human readable string for the given variant. If the variant is none returns None.
Returns a list of the expected inheritance models for a variant.
str Returns a list of tuples of the caller names and the value of the calling function.
str cancer_id cancer_name cancer_id cancer_name can
str institute obj case obj variant id
str institute obj case obj variant id submission id
str acmg criteria acmg options for a given variant id.
Add a new variant to an institute in a case.
str evaluation is a dictionary with the keys institute case and acmg complete.
Upload a panel of genes to the HGNC database. Returns a list of hgn
export a list of verified variants to an excel file in a temporary directory. returns the number
str Export all genes from the given adapter to the given build. If no build is specified
str - > clnsig - > clnsig - > clnsig - >
str - > list of dicts - > list of dicts - > list of dicts - >
List all genes for a given build.
Return a case object for the given institute id and case name. If the case
List all collections in the database.
Initsute a user from a list of recipients.
get a file handle from a file path. If the file path ends in gzip the file
Get the net of the request.
get the next and prev numbers for a given number net
str Check if the year is in the range of the current year. If it is not
str Check if a given date is a valid weekday in a given year month and day.
str Given a list of samples return a list of individuals.
str Parse Pedigree data from a PedStream.
Build an evaluation object from the given parameters.
get an acmg prediction from a list of acmg terms
r Returns a list of variants for a given case id optionally filtered by ids or by category
Returns a list of all sanger variants for a given institute or case.
str Create a variant object for the given document id. If the variant already exists it will
Returns a list of variants for the given query category variant type and nr of variants.
str Validates an institute. Returns a list of collections of variant objects.
str Returns a list of causatives for institute id or all causatives
check causatives for a given institute. If no institute is found
Generator that yields all causatives for a given variant in a given case.
Delete all variants of a given type for a given case id. If no category is given
Returns a list of variants that overlap with the given variant. If the variant is the same
Returns a list of all the variants evaluated in the given case.
str Given a list of variants and a sample name return the list of variants for that sample
str Get a connection to a MongoDB server.
str - > list of dict - > list of dict - > list of dict - >
Get the header of a clinvar object based on the csv type. If csv type
converts clinvar submission objects into a list of csv lines with the values of the
Load a panel. If path is none load all panel files. If omim is True
str Builds a exon object from a dictionary.
Delete a specific panel from the database.
Drop all indexes for all collections in the database.
Delete a user from the database.
Drop all genes for a given build or all genes if no build is specified.
Drop all exons for a given build.
Delete a case.
List all individuals in a collaborator or a case.
List all cases in a collaborator.
Load a user from the store. If the user doesn t exist it will be created.
Perform a login with the given email. If the user is not logged in redirect to the
str Builds an institute object.
str Delete an event from the database.
Return a list of events for a given institute. If no institute is
get all events for a given user. If no user is given all events are returned.
Remove a phenotype from a case.
Parse a list of genotypes from a list of individuals and a dictionary of positions.
Check if the position is in the coordinates dictionary. Returns True if the position is in the
hpo terms request handler. Returns a list of dicts with a query and a limit.
Show a list of all the transcripts for a given build.
fetch all exons for a given build and store them in the database.
Load a region for a given HGNC ID case and chromosome.
Returns a list of events for a given month in a given year. If no category or
Get live items.
str - > list of requirements. txt - > list of requirements. txt - > list
Returns the existing gene with the given id in the given panel or None if there is no
str Update a specific panel in the store.
str Create a new panel for a given institute id panel name display name and lines
Export a panel to a dictionary.
This function returns a dictionary with the information about the given archive case.
Migrates a file from a mongo database to a MongoDB case.
Show a list of HPO terms. If no term is given print all terms. If
str Configures the extensions with the given app instance.
str Register all blueprints in the app.
List all aliases for a given symbol in a given build. If no symbol is specified all
str Builds a panel object from the given panel info and adapter. If the panel is
Generate a report of verified variants for a given collaborator. If outpath is not specified
List all variants for a document in a case or a collaborator.
Get a VCF entry from a variant object.
Serve a pymongo server on the given host and port. If livereload is
Generate a md5 key from a list of strings.
This method is called when the app is created. It will setup the connection to the database
str Set up the class attributes from a database object.
Index all items in the database. If update is True update the index otherwise load the index
str Create a new database with the given name user name mail and api key.
demo is the demo of the scout command. This is the demo of the scout
str Set up the connection to the database and the database adapter to use for the command.
List all institutes.
str Returns a list of genetic models for a given case id.
Show a list of panels for a given institute.
add an institute to the database
str Get institute by id
Check if a date string is a valid date. Return True if the date string is valid
str date - string to datetime object. date - string to datetime object. date - string
Show a list of genes in the HPO database.
str - > float - > float - > float - > float - > float - >
Add a new user to the database by institute id user name mail and admin.
check if a connection to the mongo server is established.
loads a delivery report from the database. If update is set to True it will update the
Add a user to the database. If the user already exists in the database it will be
Pileup action for a single vcf file. This action can be used to pile
str Load a list of exons from a list of lines or a list of lines.
Update all compounds in a case.
add gene links to the gene object obj is a dict of genes obj is a dict of
List HGNC genes for a given HGNC symbol or HGNC ID.
parse hgnc lines and return a generator of HGNC genes.
get open clinvar submission by user id and institute id
Update a clinvar id with a given submission id. Returns the updated clinvar
str id - > clinvar subm id - > clinvar subm id
str Add objects to submission and return updated submission object.
update the status of a given clinvar submission for a given user id and submission id
str Return a list of clinvar submissions for a given institute.
Delete a clinvar object from the database.
str - > dict of clinvars for a given case id - > dict of cl
Parse a list of lines from a HPO file into a list of lists of strings.
a view of the genes in the database.
str Get a list of genes for a given HGNC. If no HGNC
Get a list of genes for a given query.
str - Returns institute object and a case object for a given institute id
str Returns a list of institute ids for a given user.
str hgnc id
Show a specific panel in a specific version.
str An example of how to load diseases from a Mimetypes. txt file
str Load disease terms from hpo disease lines.
str - > float - > None - > None - > None - > None - >
str - > float - > int - > float - > float - > float - >
Show a list of all users.
Compare two panels and return a list of the panels that are not present in the new panel
Update the version of each gene in new genes with the new version of the old version.
str Add a panel to the database.
str - Gets a panel by its id.
Delete a panel from the database.
str Get the gene panel for a given panel id. If no version is given return the
Returns a list of gene panels. If no panel id is specified all panels are returned.
str Returns a dict mapping HGNC IDs to the panels in the case.
str Update a panel in the database. If no version is provided the current panel will be
Add a pending action to a panel.
get clinical symbols for a given case
List all the cases for a collaborator or a specific case. If a case id is
Emits a record to the SMTP server. The record will be formatted according to the format
Load the indexes from the database into the database.
str Update all indexes in the database with the given list of indexes. The list of indexes
str Drop all indexes from all collections.
str Build a query for a variant. If no query is given a default query is built
Query for clinsig.
Filter the query to ensure that the coordinate is in the correct format. If the coordinate is
str Filter the query by HGNC symbols and panels and add them to the query.
wipe database.
str Parse a panel of genes into a list of dictionaries.
str bulk load hgnc data for a list of gene objects into the database.
str Loads a list of Transcript objects into the database and returns the list of Trans
Load a list of Exon objects into the database and return it as a str.
get a single HGNC gene by identifier and build
str Returns the HGNC ID for the given symbol and build. If the HGN
str Return a list of genes for a given hgnc symbol and a given build.
str Get all genes in the database sorted by gene name. If no build is given all
Returns the number of genes in a given build. If no build is given the number of
Drop all genes for a given build. If no build is specified drop all genes for all
Drop all transcripts for a given build or all transcripts if no build is specified.
Drop all exons for a given build or all exons if no build is specified.
str Get all the ensembl transcripts for a given build
str - > dict of HGNC symbol to gene dict - > dict of HGN
str Find a gene by symbol and build. If there is only one gene with the same
str - > dict - > dict - > dict - > dict - > dict - >
str Get all the ensembl genes for a given build.
str - > None - > None - > HGNC - > HGNC -
str Add hgnc id to each gene in a list of genes.
str Returns a dictionary of coding intervals for the given genes. If no genes are given then
str Shows an OmniM panel for a given institute.
a view of the cases of an institute. This view will return a list of
str institute - > dict data - > dict data - > dict data - >
check if the current user matches the given user id and case name. If the user matches
matchmaker - match a target with a given institute id and case name. target
delete a user by institute id and case name - name of the case to delete
PDF report for a given case.
a function to diagnose an institute in a case.
update or archive the status of an institute in a given case.
Assign a user to a given institute in a given case. If the user is
hpo terms - list of hpo terms for a given query - list of hpo
Mark the validation of a variant.
Mark the institute as causative or unmark it as causative.
sends a delivery report for a given institute id and case name
share a collaborator or unshare a collaborator or unshare a collaborator
Rerun an institute.
Research the user in the case with the given id and name. The user will be
Send a vcf2cytosure file to a given institute.
sends a multiqc file for a given institute id and case name
str - > list of tracks in case query - > list of tracks in case query -
Returns a list of clinvar submissions for a given user and institute.
Generate a report of the variants of the given case. Each file is written to the temp
str Returns a list of diseases for a list of phenomizer ids.
str - > cytosure - > institute id - > cytosure name
str MultiQC for a given institute id and case name.
str get sanger unevaluated by institute id user id
Delete a case from the MME server. Returns a list of dicts with the patient id
mme matches returns a dictionary of matches for a case and a dictionary of institute
match patients in a case object. match type can be str or list of patients
Generate a list of genes for a given build. If a build is specified the list of
str - > str - > str - > str - > str - > str - >
str Builds a transcript object from a dictionary.
str Loads an institute object into the adapter. The object will be added to
str - > float - > float - > float - > float - > float - >
Read a case from the specified config file. If the config file does not exist it will
Update the current variant with the given obj and return the new variant.
Ranks a variant in the database by the number of times it was last seen.
Update all the compounds of a variant.
Update the compounds for each variant in the given list of variants.
Update all the variants in the mongo database with the given bulk of data.
Load a single variant from the database. If the variant already exists it will be replaced.
str Inserts a new variant in the database or updates an existing one if it already exists
Load multiple variants into the database.
Assign a user to a case.
Share a collaborator with an institute in a case.
str level str user link link level str omim number remove bool indicates if the omim
Mark an analysis as checked. If unmark is True it will be unmarked.
Order verification for a given link and a given variant. Returns a boolean indicating whether the verification
Returns a list of events ordered by institute id or by user id.
Validate a variant for a given institute. If the type is invalid log a warning
Mark a case as causative
Update the dismissal variant for a given institute link and variant. If the
Update an acmg. If acmg str is none update the acmg
Returns a dictionary of ids for a given variant.
Create a simple id from the chrom pos ref and alt.
Generate a md5 hash for a document ID.
Convert a HGNC panel into a new HGNC panel.
Get a variant id from a variant object and a family id.
Returns the number of cases for a given institute. If institute id is
str Update the dynamic gene list for a given case.
get a case by id or institute id or display name
delete a case by id or institute id or display name
Adds a case to the database. Raises an error if the case already exists.
replace the current case with a new one
Update a case with a new id and a new family id. If a new id is
str - Submits an acmg to the database. Returns the classification of the ac
get all evaluations for a given variant
str Given a list of lines of text return a dictionary of transcripts indexed by gene id
str Parse an ensembl gene request and return a generator that yields the gene information.
str parse ensembl transcript request
str Given a list of lines of ensembl file return a list of genes.
parse ensembl exons from a list of lines. lines should be a list of
parse ensembl exon request and return a generator of exon information.
Initialize a logger with a file or stream handler. If filename is specified the file will be
str Given a genemap lines return a dictionary of phenotypes that match the given mim.
Mimic a list of genes and a list of phenotypes.
Convert a string to an integer or float. If the string is not a number return none
str Format a month as a string.
str Format the day of the week in the year month and day of the week.
str Format month name.
Helper function for the popover. This is the main entry point for the popover.
str Get panel info.
str Create a gene panel from a file path panel id panel type date panel id panel type
Show a list of diseases.
str is the HPO adapter class. It loads the HPO terms from the database.
Returns a dictionary of users and their events sorted by user name.
Parse the conservations of a variant.
Parse the conservation of a variant.
Returns a dictionary of general cases for a given institute. If institute id
get a list of cases grouped by status and total number of cases in a given instit
Render the given context to a JSON response.
get the year and month of the current request.
check for cancelled events for a given date add the event title to the event. title attribute
str Returns the HPO term for the given hpo id.
Search for HPO terms in the database. If no query is given search for all terms
Returns the disease term for the given disease identifier. If the disease identifier is
str Returns a list of all disease terms for a given HGNC. If no
str Loads a disease term into the database.
Generate a list of HGNC genes based on a list of HGNC terms.
read data from hdf5 file
str Set up time axis.
str - Computes the last day of the year of the year of the year of the
blank dc n coarse chan n chan per coarse channel n chan per coarse channel
str plot f plot t if mjd time is True return the extent of the time series
str Waterfall plot.
plot the time series of the data in the given time range.
write the filterbank to a file
calibrate band pass n1
convert data to a coarse - grained mean.
Returns the fracpols of the given string.
Write a series of polymorphism files to a file in the same directory as str
Returns the index of the closest value to val in the array xarr.
str Rebin a numpy array to a multiple of n x x y n x y.
unpacks a number of bits from a byte array. nbit must be a power of
str - > float - > float - > float - > float - > float - >
plot calibrated diode
Calculate the size of the selection in bytes.
Calculate the shape of the selection.
str Method to set the frequency range for each channel. This method is used to set the
Populate the timestamps from the file. If update is set to True the timestamps will be updated
Calculate the number of channels to use for a coarse - graining. If bw is
calc number of blobs based on selection shape and size of blob dim.
Check if the selection is heavy or not based on the size of the data array.
Read all data from the file and return as a numpy array. If reverse is set to
Read a single row of data from the file and return it as a numpy array.
str Read data from the file and load it into self. data.
Update the header with the current data.
str Prints information about the data in the file. This is useful for debugging purposes.
str Write the container to a file. If the container is heavy it will be written
str Write the container to an hdf5 file.
Write the light data to an hdf5 file.
str Returns the dimensions of the blob for the given chunk and the size of the chunk.
str Get the dimensions of a chunk.
str Get the data for a given frequency range. If no frequency range is given the data
pyguppi tool to plot histogram and spectrum of a guppi file.
str Read the first header from the file and return it as a dict.
str Finds the number of data blocks in the file.
Print the mean std max min and mean of the data in the file.
Plots a histogram of the data in the file. If filename is specified it will be saved
Generate a filterbank header from the header of the file. The filterbank header is a
Find the size of the header in a file.
str Calibrate the data using the FoldCalibrated FoldCalib
str Calculate the center frequency of a signal.
str cal = cal on obs = cal off = cal off obs = cal on obs =
Get the time series for a given time series. The time series is defined by the time
Returns the length of the header of a file. If the file does not contain the header
Check if file is a filterbank.
generate sigproc header from f. header
r Calculate the number of ints in a file. The number of ints is the number of
str - > dict - > None - > None - > None - > dict - >
Make a subparser for the rr command.
Create a parser for the zonefile file.
Remove comments from the given text and return a new string.
Add a default name to the text. The default name is the first line of the text
str Parse lines of text into a list of zones.
str Parse a zone file.
Quote a field in a list of dicts and return a new dict with the field quoted.
Parse an avro schema string into an avro schema object.
Generate a python package from a list of classes.
Convert a Record object to a JSON compatible string.
Load a record from a dictionary. If no schema is given the schema will be automatically loaded
Parse a JSON string into a Python object.
Add a schema to the schema map. If the schema already exists it will be ignored.
Returns the schema for the given record name. If the record name is not in the schema
Returns a dict with all the values of the field as keys and their values as values.
Returns a schema dict for the given record. If no state is given the schema generator will
str - > dict - > dict - > dict - > dict - > dict - >
a generator for reading lines from a file - like object or a file - like object.
str writer for job outputs to output stream. output stream is a file - like object.
Pushes a key value pair onto the front of an ordered dictionary.
Returns a string containing the search results for this object.
Returns a list of objects that match the given filters. Filters can be a list of strings
str Returns a list of all the entities in the collection with the given attributes.
str Get entity from href.
give another quote return the first quote that matches q or raise error if q is not
Return a string that can be used as the value of an argument. If the argument is
Returns an elementary rotation matrix for the given axis and rotation angle. axis can be a
calculate the average vrad error for a given sky magnitude and spt
calc parallax error
str - > float - > float - > float - > float - > float - >
str - > float - > float - > float - > float - > float - >
Calculates the average number of transits for a given beta value.
str Returns the angular distance between two angles phi1 phi2 and theta2.
str - > tuple of x y z - > tuple of x y z - > tuple
str - > str - > str - > str - > str - > str - >
str Calculates the Jacobian of the covariance matrix at the given angle phi and theta.
str Returns the astrometric error scaling factor for a given observable and beta value.
Unquote a value to be used as a string in a SQL statement.
str Each function in the collection and return a new collection with the results of applying the functions
Returns a new DStream with the elements of this DStream that do not match the given
Returns a new collection with items that match the given filter function. If no filter function is
Returns a new collection with items that are true for each element in the collection that satisfies the
Returns a new collection with items removed while applying a function to each item in the collection.
Returns a new collection with the elements of the first collection containing all of the elements of the
Find the first node that matches any of the given criteria.
str Returns a tuple of the operating system and path of the current working directory and file.
Build a minimal set of runs from a list of events.
str Prints the results to the given file.
str Prints the results of the evaluation to the given file. If verbose is set to
str Clean up the given code string. If comments is set to True the comment will be
Round to next base.
Returns a list of indices that are blocking at least blocksize bytes starting from initial boundary.
calculate cache access
Analyzes the kernel and returns the sum of all the flops in the kernel.
Strips and uncomment lines from an asm file.
Strips unreferenced labels from the given list of lines.
selects the best block from the list of blocks. If there are multiple blocks with the
a helper function to get an integer from the user. This is useful when you want to
insert markers at start line and at end line
Generator that yields a range of numbers between start and stop. If endpoint is set to True
Get the last modified datetime of the file in the given directory.
str Check if the arguments are valid. If not set the unit and the asm block.
str Main entry point for the command - line tool.
str Main entry point for the command - line tool.
Create a symbolic symbol with an integer position.
Transform multidim to 1d
Transform multidim to 1d ref.
str Find all nodes of the given type in the given AST.
Check that all the variables have the same number of values.
str Set the value of a constant. If the name is an integer it will be set
Substitutes the constants of expr to self. constants. If expr is already a string
str Returns a dictionary of variable names and their size in bytes. If in bytes is True
Calculate the relative offset for a variable. The relative offset is calculated relative to the base variable
str Remove duplicate accesses.
Returns the length of the iteration of the loop stack. If no dimension is given the length
Get the loop stack as a list of tuples. The first element in the list is the
str Return a list of all free symbols in the symbol table. If sources and destinations are
Compile a set of sympy accesses for the given variables. If sources and destinations are
str Calculates the relative distances between the variable and the given sympy accesses.
str base loop counters from the global iterator to the indices of the variables in the loop stack
str - > sympy. integer - > sympy. integer - > sympy.
str Returns the global iterator for the given indices. The indices must be in the form of
Returns the maximum index in the loop stack.
Print kernel information to the given file.
prints the variables info to the given file in a table format.
Print constants info to the given file.
str Prints the kernel code to the given file or sys. stdout if no file is
converts a math AST to a symbolic symbol
str Returns the offsets of an array ref or subscript. If dim == num returns all offsets
Get the basename of an AST node.
str Get the index type of a loop or compound.
Build ast. declartions for constants.
str - List of array declarations in kernel block.
str Return the kernel loop nest as a list of ast. block items.
str - > tuple of array declarations and dict - > tuple of dict - > tuple of
Find the inner most loop in the loop nest.
str Builds initializations for an array.
Build a dummy call statement for the kernel.
str kernel function declaration
str Builds a list of scalar declarations from the kernel. If with init is set to
str get the code for a kernel. If openmp is set to True the code will
str Build a function call to a kernel with the given name. If no name is given
str is the name of the kernel function to be built.
Analyse the binary using IACA and return the resulting binary and the assembly block
str Returns a unique identifier for the file. If the file has a path the identifier is
Returns the datetime of the last modification of the file or the current time if the file is
str - > tuple of compiler and flags - > tuple of compiler flags - > tuple of
Parses a perfctr event string into a tuple with the parameters as keys and the values as
enforce no overlap between start and num elements
Get the path to the header file relative to the root of the file.
align the iteration with the cl boundary if subtract is True subtract the cl boundary if subtract is
Returns a list of loads for each cache level.
Returns a list of the hits for each string in the machine. This is a list of
Returns a list of the misses for each cache level. This is a list of the
Returns a list of the stores in the machine.
Returns a list of the evicts for each cache level. This is a list of the
str - > dict of infos for each cache level and the stats for each cache level.
A context manager to fix an environment variable. If the variable is not set it will be
str Configures the argument group for the given parser object.
Parse the description from the README. txt file and return it as a string.
Build a purchase item from the given parameters.
record purchase with sailthru client
Get course content from sailthru or ecommerce.
Get course content from ecommerce.
update unenrolled list
send course refund email
str Sends an offer assignment notification to a user.
Retry the request with the given number of retries. If the number of retries is greater than
Fulfill an order with the given ecommerce code. If the ecommerce code is not
Get the sailthru client for the given site code.
Returns the value associated with the given key or none if the key does not exist.
str Set the value for the given key to the given value and duration in seconds.
str Get the value of a configuration variable. If the variable is not present in the environment
str Get the filename from the environment variables.
Get a value from a dictionary based on the EPlus version number.
Returns the latest E + version available on the system. If there is no E + version
Populate the table with data from a JSON file.
Returns a list of all external files in the database.
str Sets the default values for all rows in the schema.
str The length of the cycle between field descriptors and the field descriptors. This is done by
str - > dict of short refs
get value by column name or i filter column name or i filter column name or i filter
Update the value at the given index with the given value. If the value is a link
Update the system with the given data. If no data is given all data will be updated
str - > str - > str - > str - > str - > str - >
str Pop a value from the list and return it. If no index is given the last
Insert a new value at a given index.
str Delete this record from the database.
str Register a hook to be called when a new field is added to the record.
Register a link to the model.
str Create a regular expression for the given line and intent name.
str Returns the remaining duration in seconds between the start and the end of the period.
Serialize the object into a dictionary.
Perform an HTTP request to the given URL using the given post data. If post data is
Get a list of endpoints for a given service type.
str Attempt to create a directory if it doesn t already exist.
str The name of the service to configure. This is the name of the service to configure
str Register a new CA with the server. status can be either a success or a failure
str Displays the current state of a recording. status is a string indicating the status of
Update the status of an event in the database. If the event does not exist it will
str Update the agent s status with the current status of the service.
Returns the full path to the configuration file or None if the file is not found.
Update the configuration file with the given configuration file. If no file is given the default configuration
Check if the config file exists and if so log the warning and info to the logger.
Initialize the logger with the given log configuration.
This is the home page. It displays a preview of the events and the number of events
str image id - image id of the image to serve Returns filename - filename of the image
Run all modules in parallel.
str - > list of events - > list of events - > list of events - >
get a schedule of upcoming events from VCALENDAR
This is the main event loop. It is the main event loop. It is the main
This is the main loop of the agent. It is run in a separate thread. It
Make a response object with an error message and a status code.
Make a response object from a list of data.
Get the current state of the service.
Return a list of upcoming and recorded events in the database sorted by start date.
Get an event by it s uid.
Delete a recorded event.
Modify an event
str Start a capture for a given event. If no event is found create a new one
Render the view to a fragment.
Returns a list of all the resources in the resource manager.
Returns a dict representation of the object.
str returns a Fragment object from a dict.
str - > None - > None - > None - > None - > None - >
str Initialize the API with the given function and arguments. The function will be called with the
Converts all the resources in the collection to HTML.
convert a resource to an html string.
Render a web fragment or a standalone response depending on the request. GET or request. POST
Render the given fragment as a standalone HTML response.
Render the given fragment to a standalone HTML page.
calc p - values q - values fdr - percentile positive positive negative negative negative negative negative
converts a list tuple or pd. Series to a NumPy array. If as is
Lookup p s pep qvalue pvalue pep and qvalue from error table.
Sampled a dataframe with a number of errors in the range [ min max ).
Summary err table.
str Error statistics for the given target scores decoy scores parametric pfdr method pi0
Find the cutoff value for a given time series. The cutoff value is the number of times
str ipf - Infer peptidoforms from an input file.
str Function to infer peptide sequences from a file and write to a file. If outfile is
str Function to infer proteins from an input file and write to a. protein file.
str Subsample infile to outfile with a ratio of subsamples. ratio is the ratio of
reduce infile to outfile if outfile is none reduce the infile to outfile else reduce the infile to
str Function to backpropagate an input file to a output file with scores applied.
str Get a group by it s id.
str Create a new group.
Delete a group.
str Returns a list of members of the group with the given id.
str Update the members of a group.
str Returns the effective member count for the given group.
str Check if a member is an effective member of a group.
Decrypt a key using AES - CBC or AES - DECRYPT. The key must be
str Get the standard input of the process.
str Get the standard output of the process.
str Returns the standard error of the process or None if there is no standard error.
str Get the debug output of the command.
A context manager for reading the stdin of the process. The context will be closed when the
a context manager to capture the stdout of a command.
A context manager for writing stderr to a file or file - like object. The context manager
r Context manager for debug mode.
str Prints an error message to the given file. If no file is given the error
str Prints the help for this option to the given file. If no file is given
str Prints the usage of this option to the given file. If no file is given
str Prints the version of the library.
str - > None - > None - > None - > None - > None - >
Returns a copy of the context object.
str Write the headers to a file - like object. If mute is set to True
Generate a temporary URL with the given method url path expiration time and key.
Quote a value for use in a query string.
Get a client from the pool or create a new one if it doesn t exist.
Read num bytes from stdin decrypting them using AES - CBC and returning them as a
Put an account from a CDN.
PUT a container to a container s directory.
Get the body of the manifest. If static segments are enabled they will be included in the
Create a new container with the given path mtime and size. Returns the prefix of the container
Display a message with the given ID and time.
Returns True if the file is empty. If the file is empty returns False. Otherwise returns
aes - aes - aes - C - C - C - C - C - C -
Get the status of a repository.
Get information about a specific pull request.
Get a list of pull requests for the given app and repo.
This method is called when the model is created. It sets the is_published field to
Returns a queryset of published SliderItems.
Render a hero slider.
acquire a read lock.
str Release the number of readers and release the access lock if it is the last reader.
Acquires the write lock for writing to the file. This method is thread - safe.
str Remove a task from the queue. Raises an exception if the task is not found.
str Returns the task with the given id or raises an exception if the task is not found
Returns a list of all the tasks in the queue sorted by task id.
str - > dict
Create a new instance of the class from a dictionary.
Initialize the archive manager with the given archive path.
str Create an index for the given url.
JSON encoder for cherrypy. serving. request. json.
Write the items to the writer using the generator function. The generator function will be called until
str Add a new task to the scheduler and return the newly created task.
str Remove a task from the scheduler. Returns True if the task was removed False otherwise.
Yields num items from the storage. This is the number of items in the storage.
str Validate task id backend category and backend args.
str Parse archive args into archiving task config.
Returns the result of the job. If the job has a status it will return the job
str Schedule a job to run on the given queue with the given task id and arguments.
str Cancels a job by its id. If no job with the given id exists a
str Runs the event loop and logs any exceptions that occur during the event loop.
listens for messages from the pubsub channel and calls the appropriate handler for each message.
str Schedule the execution of the listener.
str Schedule a task to be run on the scheduler. Returns the job id of the scheduled
str Cancels a task by id.
str Builds the job arguments from the given task.
str Registers a view with the router.
Returns the url for the given action. If the request is not a version request it will
str Returns the view s name. If respect name is set to True the view s name
Returns a version string. If version is none returns the current version string. If version is
Resolve a key to a value.
str - > list - > dict - > dict - > list - > dict - >
str - > database schema - > schema - > database name - > schema name - >
str - > database dict - > database dict - > database dict - > database dict -
str Create a new user.
Returns a list of all the users for the authenticated user. This is a list of users
Create a new password for the specified user.
Build a url field with the given name and model class. The field name must be a
Parse a string into a boolean value. If the string is not a boolean an error is
Parses a string into an integer.
Get a parser for a given type.
str Create a new model from the given model and the given fields and named fields.
str Base64 - encode the string s and return the result as a unicode string.
str field to create a field object from a field info dict.
Create a validator from a data structure.
str Finds unique points in a list of explored parameters. Returns a list of tuples
str Change the logging arguments.
str Tries to make all directories in a given directory.
Get a list of strings from a list of strings.
str The name of the logger to use. If no name is given the name of the
str The name of the variable and the value of the variable in the given trajectory.
str Check and replace parser args.
convert a parser to a file - like object and return the file - like object as a
str Finds multiproc options in a parser and returns a multiproc parser.
Find a multiproc dictionary by replacing all keys starting with str and replacing all keys with
Handle the parsing of the config file.
Handle a dictionary of log files and return a new dict with the file name as the key
make logging handlers and tools
str This method is called after all the tools have been created. If remove all the handlers
str Prints the current stdout to the console if it is not already the same as the
str - > None - > None - > None - > None - > None - >
Returns True if the results of two functions are equal False otherwise. If a and b are
bool - True if two parameters are equal False - False if they are not.
A class decorator to prefix class names with their own names. This is useful when you want
Add the parameters to the trajectories.
Run the network of the trajectories in the trajectories in the trajectories
str Euler scheme
str Add parameters to the given trajectories.
str Lorenz diff
str Create a storage service with the given parameters and trajectory. Returns the storage service and unused
str Create a new storage object with the given service and trajectory.
str | Parameter | Parameter | Parameter | Parameter | Parameter | Parameter | Parameter | Parameter |
roessler function to calculate the difference between a and b.
Returns True if the parameter is explored in the given group. Otherwise returns False.
str model eqs
str Builds the model if the parameters are not explored in the trajectories.
str Builds the model if it doesn t already have a pre - build method.
str Builds the model for the given trajectories.
Check if pre - build is required and if so build the connections for the given trajectory.
str Builds the connections for the given trajectories. If pre - build is not
str - > str - > str - > str - > str - > str - >
str Computes the fano factor for a given window of spikes in a given neur
str Compute the mean fano factor for a given set of neurons.
str Analyse a single sub - run of a traj with the mean fano
add monitors to the network
str Create the plot folder for the given trajectories.
str Plot the result of a neuron in a trajectories with the given name.
str Prints the results of the spike monitor and the result of the spike monitor plot.
str Analyse a single sub - run of a single sub - run of a single
Get the batch number from the command line.
Explore a single batch of data.
Returns a list of variable names for the model. If the model has no variable names it
Returns the function to use for this node. If the node has no function it will be
str Renames the file. If full is specified the file will be renamed with the last
str Sets the depth branch and run details.
Convert a node into a message.
Delete a node from the tree.
Remove a node or a leaf from the tree. If recursive is True it will recursively remove
str - > bool - > str - > bool - > str - > bool - >
determine the type of a node based on the node s branch name group leaf and link.
str Create a link between a node and a node with a given name and an instance.
Check if names are admissible or not and return a faulty string.
Set the details of a node in the tree. The name is the name of the node
Returns an iterator over the nodes in the tree that are linked by the given node.
Returns an iterator over the children of the given node. If with links is True the iterator
A recursive traversal of a node.
str Search for a key in the tree and return the node and the depth of the search
Returns a list of nodes with the given name starting at the given node starting at the given
Returns a list of kids for the model. If kids is not defined it will
Add a group to the network from a storage object.
Add a leaf from storage.
str Returns a list of all the data in the directory.
Returns a debug representation of the tree.
Get the parent of the current node. If the node is the root return the root node
remove a link
remove the field from the parent. If recursive is set to True the field will be recursively
Returns the value of the named property or the default value if the attribute does not exist.
Returns a copy of the children of this node. If copy is True returns a copy of
Returns a copy of the groups attribute. If copy is True returns a copy of the groups
Returns a copy of the leaves. If copy is True returns a copy of the leaves.
Returns a copy of the links attribute.
f store a trajectory in the group.
Add a result group to the network.
Adds a derived parameter group to the network.
Adds a derived parameter to the network.
Add a config group to the network.
Add a new configuration to the network.
str git commit name commit name commit commit date and commit message.
str Make a git commit and return the hexsha of the commit. If fail is True
Flattens a nested dictionary into a flat dictionary with the given separator.
Nest a flat dictionary into a nested dictionary.
str Returns the argspec of a function. If the function is a class returns the argspec of
Returns a dict of matching keyword arguments for func. If func uses startstar returns a copy
Format a timestamp into a string. The string is formatted according to the given format string.
converts an IP address to a TCP port. If no port is given a random port
str Race - checks if path is a directory and creates it if it does not.
str This method resets the state of the timer to the given values. It also resets the
Get the remaining time in seconds for the given index. If the index is greater than the
Returns a copy of self. dict. If copy is True returns a copy of self.
Removes an attribute from the dictionary.
convert fann object to a string
Make an ordinary result with the given key and trajectory. If the given trajectory is not
Make a shared result with the given key and trajectory. If new class is not specified the
Store access data for the given request. This is a convenience method for storing access data for
Get the data node from the storage service. If the storage service is not open a warning
Returns True if the given item is supported by this collection. If the item is not supported
Create a new shared data object. If no name is given the shared data object will be
str Manually manipulate the multiproc and store the number of results in the multipro
Lock a request for a given client id and request id. If the request is already locked
Send a done message to the client and wait for it to finish. The message will be
str This method is called when the context has been closed and the socket has been closed.
str Start the zmq socket. If test is set to True it will test the connection.
str Retry the request until the number of retries is reached. Returns the response and the number
Acquires a lock. Returns True if the lock was acquired False if the lock was acquired
listens for requests and sends them to the socket.
str Put data to the queue. If block is True block until the queue is full.
str Detects the pid of the current process and sets the context to none if necessary.
Handle data.
str Runs the loop.
Receive data from the queue and return it as a string. If the queue is full the
Receive data from the connection.
Store data into the storage. This method acquires the lock and then releases the lock.
Store a reference to a given message in a given trajectory.
str Stores a list of references to a list of trajectories.
Collect all options from a section and return them as a dictionary.
Collect the configuration from the config file and return it as a dictionary. The keys are the
Interprets the command line arguments and returns a dictionary of the command - line arguments.
str - The name of the parameter to add to the trajectories.
str Plot a pattern with a given rule number and save it to a file.
str Cellular Automaton 1
int num = self. update_seconds int = self. update_seconds int = self
Returns the overview group for the user. If the user does not have an overview group this
str Loads multiple items from an iterable into the context.
srvc check hdf properties
str Store multiple items in a single message.
srvc closing routine This routine flushes the hdf5 file and the hdf5 store.
srvc extract file information from keyword arguments and store them in self. filename self. trajectory
str Backups a trajectory file.
Read out a row of data from a table into a dictionary.
str Merges the trajectories into a new trajectories. The new traject
check version against current python version and raise error if version is not the same as current python
str Loads exploration data into the given trajectory object.
trj store the list of explored parameters in the overview table.
trj store a trajectory in the hdf5 file
Create a leaf node in the tree.
dfs - Depth - first traversal of the tree. store - a list of nodes to store
store param or result table entry
get or create a table based on the given where clause. If the table doesn t exist
get all nodes by name
str Inserts all keys in insert dict into row.
Cut a string up to a maximum length. If the string is longer than max length log
str Create a new group if it doesn t exist. If it doesn t exist create it
get or create all the groups for a given key. key can be a string or a
store annotations for an item in the hdf5 file. If overwrite is set to True the
Load annotations from the given node into the given item. If the item is already an annotation
Store a group of trajectories in an hdf5 file. The data can either be
str Load a group of trajectories from a file or file - like object.
Load all data from the given trajectories into the given group. All data is loaded
prm extract missing flags from data dict and flags dict.
prm meta add a summary to the overview group
Add meta info to the overview group.
str Write data into a shared array. The flag can be one of carray earray
prm write a shared table to the hdf5 file group. fullname is the name of
prm write dict as hdf5 table
prm write pandas data to HDF5 file.
prm write data into other array
prm write data into an array
delete a link from the hdf5 file with the given link name.
get a table column from a column in the table. column is a list of column values
get longest string size of a list of strings
Read a dictionary from the database.
prm read shared data
prm read an array from the svrc and return the result as a native type.
str Load a Trajectory object.
Make a set name for a given index.
f set properties of an object. kwargs can be a dictionary of name = > value pairs
f add to dynamic imports list or tuple of strings or class names.
str The name of the parameter. args and kwargs can be a tuple or a list of
Returns True if the job is completed. If name or id is none returns True. If
str Remove all parameters that have been explored. This is done by removing all stored parameters
Update the run with the given dictionary of information.
str Add run info to self. run.
str Locks all the parameters in the model. This method is called when the model is
str Locks all derived parameters.
Finalize the run. If store is set to True the run will be set to False
str - > PyPSA. f Load the skeleton of the PyPSA. f
str Reverses the list of wildcards for a given number of times. If the list
merge many trajectories
r Merge two sets of runs into the set of runs used by the other set of runs
renames a full name with other trajectory and a new run index.
str Merge config from other trajectory into this trajectory.
str Merge two trajectories in a slow way.
Merge results from other trajectory into rename dict.
f Restore the default values of all the parameters to their default values. This function is called
str - Sets all the explored parameters to the given index.
make a single run of the graph. new nodes and new links are ordered by id.
Returns a list of the names of all the runs in the simulation. If sort is True
Start a new run. If name or idx is none then start a new run. If
set the start time of the run to the current time and the environment hexsha of the
set the finish of the current run to the time of the last time it was called.
Construct an instance of the given class with the given name and arguments. If the constructor is
returns a copy of the parameter dict or a copy of the parameter dict if fast access is
Finalize the run by removing all new nodes and links. This is called when the run
delete a list of links from the graph. if remove is True the links will be removed
remove all child nodes that match the given predicate. If recursive is set to True this will
single run of PyTorch and return a sigint handling the single run of PyTor
Run a single step in a frozen pool. Returns a sigint handling a single step.
str pool pool single run. storage pool single run. niceness pool single run. logging
str frozen pool single run niceness and logging. kwargs is a dictionary of keyword arguments.
str Runs a single command and returns the result of the command. If the command is
Run a single scoop command with the given keyword arguments. If the command fails to run
str Configures the logging manager with the given kwargs. If extract is set to True the
Configure the niceness of the process.
str Runs sigint and returns a tuple with the result of the sigint handling.
str A function to wrap logging and handling. This function is called from the main function.
str - > object. class - > object. class - > object. class - >
str Create a new class with the given name and dynamic imports. The dynamic imports can be
Returns the length of the range.
Return the value of the function as a string. If the function returns an exception it will
Get the range of the function. If copy is True return a copy of the range.
str - > dict - > object - > object - > table - > object - >
load data from a dictionary. load is a dictionary of data to load. load is a
parses the parameter from the load dict and sets the default value if the parameter is not
str - > bool - > bool - > bool - > bool - > bool - >
str Check if the data is a supported matrix.
build name tuple from name idx is the index of the name in dia is the index
str matrix Reconstructs a matrix from a list of data.
Load a parameter from a dictionary. Loads the parameter from a dictionary. Loads the
serializes the data and explored range and stores it in a dictionary for later use.
loads a parameter from a dictionary.
Translate a key to the form of the name or the number if the key is an integer
fval to str
Returns the data as a dictionary. If copy is True the data will be copied otherwise it
f set single item by name if item supports it. If item does not support it raise
str - If the item is a sparse matrix return True. Otherwise return False.
str Store the data in a dictionary that can be used to store the data in the database
str Loads data from a dictionary.
f set a single item in the data dictionary. If the item is already stored it will
Returns a dictionary that can be used to store the result in a pickle format. This is
loads the data from a pickle object.
str Merge all files in the current folder with all files in the current folder.
Create a session with the current user and password.
Merge trajectories into a single saga job. This is done by running a job
str - The name of the saga service to run. num - Number of jobs to
multiply trajectories by x and y and add the result to the trajectories
run the neuron on the given traj and return the number of spiketimes.
Post - processing of neuron data.
str parameter num comment = str parameter num comment = str parameter num comment = str parameter num
add exploration to the trajectories
extracts the sub - runs from the given trajectories.
str Runs a single network.
str Add parameters to all components analyser and network runner
Run the network on the given trajectories.
Make a filename from the given trajectories.
Return the next element in the chain.
Called when the user presses a sigint. If the user presses a sigint
str Load configuration from a file. If config is not specified the default configuration is returned.
Request the pin for the API key and store the result in self. authorization.
Request the access and refresh tokens from the API and store them in self. access and self
Refreshes the access token and refresh token from the server and saves it to the file.
Get the thermostats from the server.
write access token refresh token authorization code and authorization code to config file
Set the hvac mode for a thermostat.
Set the fan min on the thermostat at index to the given value on time.
Set the climate of the thermostat at the given index to the given climate
Delete a vacation from the thermostat at the given index.
Resume the thermostat at index. If all is True all thermostats will be
sends a message to a thermostat at a given index
Generate a random delay between 0. 0 and 1. 0 and return it.
gen timeout request for renewing a lease
gen renewing time
Returns a copy of the FSM as a dict.
str Reset the state of the device to the initial state. If client mac mac xid is
get the timeout for a given function in a given state
set the timeout of a function in a given state. If the function is already in the
select an offer from the list of offers and send it to the client.
str Sends a request to the client.
str Sets timers for renewal and rebinding.
Process a received packet and return a boolean indicating if it was a nak or not.
str This method is called at the beginning of the program. It is called at the end
str Timeout for selecting
str Requesting timeout check for disovery requests. If disovery requests exceeds max
raises a renewing exception if the number of attempts exceeds the maximum number of requests.
str Timeout request rebinding
Receive an offer packet. If the packet is an offer it is added to the list of
Receive an ack from the server and raise a bound exception if the ack is not received.
Receive a nak from the server and raise an exception if the nak was not received
raises bound exception when received ack packet is not acknowledged by the client.
Receive a nak from the server and renew it if necessary. Raise an exception if the
Receive ack packet and raise bound exception if received ack packet is not acknowledged.
Receive a nak packet and try to rebinding it. If the packet is not received
On renewing. This method is called when a request is renewed. It is called
Returns a copy of the query set with the given name and value. If the value is
Add a query parameter to the list of query parameters. If a parameter with the same name
Returns a new QuerySet with the given name and value removed.
Get the status of the supervisor.
str Read a tdms file and return the names and data as a tuple.
str - > str - > str - > str - > str - > str - >
Returns True if the tree is equal to the one in the given working directory False otherwise.
str Create a new patch with the given name and save it to the database.
Delete the next series in the series collection.
str Delete a patch from the database. If no name is given the top - level patch
Check if a file exists in the given patch.
str Backup a file to the quilt directory. If the file is a directory it will
str Add a file to the database. If the file already exists it will be overwritten.
str Run the quilt command and return its exit code.
str Create the directory if it doesn t already exist.
str Copy this directory to dest. If dest is an instance of directory it will be copied
str - > None - > None - > None - > None - > None - >
str Copy the file to dest. dest can be either a file or a directory.
Returns the directory of the file. If the file does not have a directory returns none.
str Backups a file or directory to a new location. If the file does not exist
str Unapplies the patch with the given name. If force is True the patch will
str Apply a patch to the series.
str Apply the next patch to the series.
str Apply all patches in the series. If quiet is set to True then only apply patches
str Reads the series file and populates the patchlines attribute.
Save the series to a. series file.
str patch - The name of the patch to add to the list of patches to add to
Insert patches into the patch2line dictionary.
str patches - a list of patches to be added. after - a list of patches to
str Remove a patch from the list of patches.
Returns a list of patches after the given patch.
Returns a list of patches before the given patch.
Returns a list of patches until the given patch.
str Replace old patch with new patch.
str Create a new version file in the directory specified by self. dirname. If the directory
Check the version of the database. If the version is not correct raise a database error.
str Add this argument to the given parser.
str Add this argument to the given parser.
Creates a new parser with the given arguments and sub - commands and returns the created parser.
str Set the command line arguments for the sub - command.
str Add the sub - parsers to the given parser. Sub - parsers are added to the
str Check if a file exists in the given patch.
str File in next patch in database.
str Revert a file to a new location. If no patch is given the file will
str Import a quilt patch.
str Import quilt patches from a list of files.
str Create a way object from a way object.
Returns a generator of node ids that are missing from the network.
str Adds a node to the graph. If the node is already in the graph it is
Build a route from an osm. relation. Relation object.
Create a long route name from a relation and a short name. If a short name is
get agency id from relation
str Function to process the file and return a list of nodes and edges to the user.
str Relations are stored in the self. relations dictionary. Relations are stored in the
A generator that yields agency objects for patching agencies from a list of agencies
Generate dummy trip stoptimes for a given trip id and list of stops.
str - > zipped zip file.
str Copy all the files and buffers to the given destination.
Build an agency from a relation and a list of nodes.
Extract stops from a relation.
Build a shape from a relation and a list of nodes and a list of ways.
Returns a list of supported versions of the device. If the device does not have a supported
send a single apdu to the device. data can be an integer or a byte string.
str Authenticate with U2F.
Register a new application with the given device.
Authenticates a client with a given key and facet. If check_only is True
str Register a device with u2f.
Convert a unicode object to a unicode string.
class decorator to wrap class methods with flawless. client. client. wrap. wrap
Returns True if filepath matches any of the blame patterns in self. only. blame
Get the email address for a given email address. If the email address is already mapped return
Get an entry from the given entry tree. If the entry is not found return None.
convert markdown text to re string
str Create a flawless server and serve it.
Download an image from the given URL and return it as an Image object.
str to image
str Check if the image is big enough to fit the given size.
str Check if width is big enough to draw an image.
str Check if the height of the image is big enough.
Return the category object for the given item field name and source. If the category does not
Parses the totals value from the given item. If the value cannot be parsed as an integer
str Get all items from the source.
Save an error to the error list.
Parse the source file and save it to the database. If an error occurs it will be
Parse a single item into a dictionary of data.
Get an instance of the model based on the unique fields in the data. If the model
Save an item to the database. If commit is set to True the instance will be saved
Download a file from the given url to the given dest. The file will be gzipped
str - > None - > None - > None - > None - > None - >
Returns a generator of items from the source file as a list of dicts.
Set whether or not to allow network access. If set to False no network access is allowed
Add files to the sandbox.
Adds a file to the sandbox and renames it to the new filename.
Get a list of all enrollments for a given course.
Get all enrollments for a given sis course.
Get a list of all enrollments for a section.
Get all enrollments for a section.
str Returns a list of Enrollment objects for the given regid. If include = True
Enroll a user in a course.
Get a list of all roles for a given account.
Get a list of roles for a given account sis id.
Returns a list of effective roles for the given account.
Get a role from a given account and role id.
Get a role by account sis id and role id.
str Returns a course object for a given course id.
Get a course by sis id.
Get a list of courses in an account.
Get a list of courses in an account by sis id.
Get a list of all published courses in an account.
Get the list of published courses in an account by sis id.
get all courses for a given regid
Create a new course on the account with the given name.
Update a sis course.
Get activity by account id and term id.
Get the grades for a given term in a given account.
Get the statistics for a given term in a given account.
Get activity by sis course id.
Get assignments by sis course id.
Get student summaries by sis course id.
Get student activity by sis user id and sis course id.
Get the student messaging for the given sis course and user id.
Get a list of external tools in an account.
Get a list of external tools in a course.
Create a new external tool in the given context with the given data.
Update an external tool.
Delete an external tool.
str Check that the object has all of the required attributes.
Get a single user by its id.
Get a list of users in a course.
Get users for a given sis course.
Create a new user in the specified account. If no account id is given the current canvas
Get a list of logins for a given user.
Update an existing user. If no account id is provided the current canvas account will be used
Get the next page from the response.
Get a resource from a url. If auto page is True return the next page of results
get a resource with paged data
get a resource by url with optional params and data. params can be a dict or a
r Put a resource to the given url with the given body.
post a resource to a url with the given body and return the response as a json object
Delete a resource from the database.
Get a list of all admins for a given account.
Create a new admin for the given user in the given account. The role parameter can be
Create admin by sis account id and user id and role.
Delete an admin from an account.
Delete admin by sis account id and user id and role.
Create a new grading standard for a course.
Get a section by its id.
Get a section by sis id.
Get a list of all sections in a course.
Get a list of sections in a course by sis id.
Returns a list of sections with students in the given course.
Get a list of sections with students in a given sis course.
Create a new section in a course.
Update a section by id name and sis section id. If name and sis section
Get a list of quizzes in a course.
Get a single account by its id.
Get a list of sub - accounts for a given account id.
Update an account. Returns a canvas object containing the updated account.
Update an existing SIS account.
Get the authentication settings for a given account.
Update the auth settings for a given account.
get a term by sis term id
Import a CSV file into an SIS object.
Import a directory into the SIS server.
Get the status of an import.
str Builds a zip file with all the csv files and returns the contents of the zip
Returns a list of assignments for the given course id.
Update an existing assignment. Returns the updated assignment object.
Get a list of all available report types for the given account.
Get a list of reports of a given type for a given account id and report type.
Creates a new report for a given account.
Create a course provisioning report.
Create a report for a course sis export.
Create a report of unused courses for a given account.
get report data from report id report status report attachment url and return data as a list of
Get the status of a report.
Delete a report
str Move all detections in label by dx and dy.
str Flips the detections in the label by the given width.
str obj - > obj. dict - > obj. dict - > obj. dict -
Get the config from the settings. If no config is provided the default config is returned.
Returns the inplace edit empty value.
Create a metric from a list of metric configs.
Setup logging for the given log level.
Configures the process collector registry.
Create a new metric for each config in configs and add it to self. metrics.
Get the metric with the given name and labels.
Return a response with the user s home page. If the user has a description it will
Get metrics from the registry and send them to the client. If an update handler is provided
wa - Wolframalpha query.
Fixes the http method to return the correct content type and param. If the method is
str Query the API with the given input and parameters and return the result as a dict.
Returns a string containing all the information about the pod and assumptions that have been met.
Returns a generator of all the pods that have a primary or a title equal to str.
Encodes data into a request object. If data is None the request object is returned unchanged.
Make a GET request to the given url and return the result as a string.
Sends a DELETE request to the given URL and returns the response as a dict.
Make a PUT request to the given URL with the given data and files.
Make a POST request to the given url with the given data and files.
Group sentences into groups of total number of sentences with the given length. The number of sentences
Disambiguate a PDF file.
Disambiguate a query.
Segment text using the segmentation service. The text can be a string or a list of strings
Get the language of the given text.
Get a single concept by its id and language.
str Fit the ensemble to the given features and classes and return the predicted values.
Score the ensemble with the given features and classes. The scoring function can be a function that
Fits the model and predicts the class for the given features and class labels.
Score the given features with the given class labels. If scoring function is none the scoring function
Transform a list of features into a new list of features.
str - > float - > float - > float - > float - > float - >
Return a vector representation of the given members.
Return a vector with the given members.
Evaluate the given file and return the last result. If the file does not exist it will
Evaluate the given stream and return the last result. The stream can be a string or a
Evaluate the given string and return the last string encountered.
Bootstraps a repl module in the given namespace. The module is imported in the given namespace
str Runs the given code in the context of the given namespace. If file or code
Add a method to a key in a map.
Adds a new method to the list of methods for the given key. If the key already
Remove a key from a map.
Removes a method from the list of methods. If the method does not exist it is created
Return True if the variable v is a macro.
Return the location of the current line and column of the given form.
Raise parser exception if node is not recursed.
recur is a function that recurses to the tail of the tree.
Resolve a bare symbol.
Resolve a symbol into a class host form and a var ref.
Parse the given form and return the result as a string.
Returns whether or not to warn on a shadowed variable. If no shadowed variable is
Return a string representation of a list of entries.
str - > str - > str - > str - > str - > str - >
Return a string representation of an object. If the object is a string it will be printed
Fix missing locations in the tree.
Compile and execute the given form in the given module. If the form is none return none
Compile the given module into the given source filename using the given optimizer and py AST.
Compile a list of forms into a Python module.
Compile a list of bytecode code into the given module.
Convert an iterable into a sequence of strings. If the iterable is exhausted an empty string is
MungeMungeMungeMungeMungeMunge
Returns the fraction of numerator and denominator as a string.
Return a logging. handler for the given log level and format.
Returns a mapping from k to v. If meta is not specified the mapping will be applied
Split a collection into n sub - collections and return them as a list of tuples.
Read a namespace and return the namespace and the name of the namespace. If the namespace is
Read a list or set of elements from the reader and call the function f for each element
Read a list from the reader and return it as a llist. list.
Read a vector from the current reader position and return it as a vector. vector object.
Read a lmap. map from the reader.
Read the next token from the reader and return it as a string.
Read a symbol from the reader.
Read a keyword from the reader and return it. Raise syntax error if the keyword is not
Read the meta of an object from the reader and return it as an i object.
Read a list of quoted strings from the reader and return them as a list of strings.
Expands a syntax quoted form into a list of strings.
Read a syntax quoted string and return it as a reader.
Read a string and return it as a lisp. lisp. lisp. l
Read a single character from the reader.
Read a regular expression from the context and return it as a pattern object.
Read a reader form from the reader context.
Read the next consuming comment and return it as a string.
Read the next token from the reader.
Read a string and return an iterable of reader forms.
Read a file and return its contents as a string.
Update the location of the current line and column based on the current line and column number.
Pushes the current index back to the top of the stack. If the current index is
Returns the next token from the stream. If the stream is at the end of the stream
Generate a Basilisp bytecode.
Get basilisp bytecode from raw binary data.
Return the full path to the cache file in the given path.
str Hooks into sys. meta_path to import basilisp modules.
Find a module spec in the given path. If path is none the current sys. path
Execute a cached module with the given fullname and loader state and path stats.
Load a module and compile it into the given module.
Execute a module. This is the main entry point for the execution of the module. It
Create a symbol from the given name and namespace. If no namespace is given the default namespace
Returns a list of complete keywords for the given text. If the text starts with str then
Get or create a keyword in the cache or create it if it doesn t already exist.
Returns a keyword with the given name and namespace. If the keyword already exists it will be
Return the dependencies and the nodes of the given ASTs.
Return the AST representation of a collection of ASTs.
Returns a copy of the given ast with the location of the given environment. If include dependencies
str decorator to wrap a function with an ast and a line number and a column number.
str - > str - > str - > str - > str - > str - >
Return True if the variable is a dynamic variable.
Return True if the variable is redefable.
Convert an ast. ast object into an ast. expr object if it is a statement.
Return an ast. function that evaluates the given function body with the given name and arguments.
Convert a Do node to a Python AST.
Returns the name of the function. If s is provided it will be used as the name
Convert function arguments to ast.
Convert a single arity function into an AST.
Convert a function to a Python AST.
Create an ast for the if statement.
Convert a invoke to a Python AST.
Convert a quote node to an ast.
Convert a loop node to a Python AST node.
Convert a recur to a Python AST.
Convert a set bang to a Python ast.
Convert a throw node to a Python AST.
Convert a try node to an ast.
Convert a local symbol to an ast.
Create an ast node for finding a variable in a namespace.
convert a var ref to ast. ast. ast. ast. ast. ast. ast
Convert an interop property to a Python AST.
Convert a maybe class into an ast.
Convert a maybe host form into an ast.
Convert a const value to a Python object.
Convert a collection literal to a list of ast nodes.
Generate a Python AST from a Lisp AST and return it. Raise an exception if the
Generate ast. imports from ctx. imports. This is a list of ast. import objects
Create an ast. import from node with the module str as the name and alias as the
ast. assign with a namespace variable.
Return a set containing all of the elements in the given iterable.
Return a set containing the given members as a string.
Return an ast. ast. except handler node with dead code removed.
Return None if the node is not a constant name num or str. Otherwise return the node
Return a copy of the given function def node.
Return an ast. ast. ast. while node with dead code removed.
Return a copy of the given try node with all dead code removed.
Create a new module with the given name and documentation.
Returns the first element of an iterable or sequence. If the iterable is not a sequence returns
Return the rest of an optional sequence.
Return the nth item in the collection.
Return the nth item in the collection.
Return the first element of a sequence that is equal to o. If seq is a list
Converts an object to a sequence. If the object is not a sequence returns none. If
Concatenate multiple sequences into a single lseq. sequence object.
Returns the value of a key in a map or an empty map if the map is not
Returns a list of the elements of a list or a list of the elements of a list
Returns the value of an object or None if the object is not an instance of the object
Returns True if v1 is equal to v2. If v1 and v2 are
Divide two numbers and return the result. If x and y are integers return the fraction
Sort a collection of strings. If a function is provided it will be used to sort the
Returns True if k is contained in the collection or False if k is not in the collection
str Get a key from a dictionary. If the dictionary does not contain the key default is
Convert dict frozenset list tuple or list to lisp format.
str - > str - > str - > str - > str - > str - >
Return a string representation of an object.
Collect arguments into a list.
Returns a function that returns True if the function is a function and False if the function is
Resolve an alias for a symbol s in a given namespace. If s is already an alias
Resolve the variable name for a symbol s. If the variable is not found return None.
Add a python string to the current namespace.
Creates a new variable with the given name and value. If the variable already exists it will
Create a new variable with the given name in the given namespace or create a new one if
Find a symbol in a namespace.
Return the name of the variable that is in the given namespace or None if not found.
Find a symbol in a namespace or raise a runtime exception if it is not found.
Add a module to the default import list if it is not in the gated imports list
Adds an alias to the symbol table. The alias will be added to the given namespace.
Return the name of a variable in the interns map. If force is set to True
Returns a new map with the symbol sym replaced with new var. If new var is not
Find the variable that is referenced by the symbol sym.
Adds a symbol as an import of a module.
Get the module that the symbol is imported from or None if it is not imported.
Add a reference to a variable. If the variable is not private it will be added to
Return the reference to the symbol sym. If sym is not a reference return None.
Refer all symbols from other to refers.
Refer all references to other in the same namespace as this one.
Return a new namespace or create a new one if it doesn t already exist.
Get the value of a symbol or create it if it doesn t exist.
Get the value of an entry in the namespace.
Remove a namespace from the namespace map and return it. If no namespace exists return None.
Completes an alias with the given prefix and name in the given namespace. If name is
Yields the complete imports and aliases for the given module and prefix.
Returns the complete interns for the given value. If include_private_vars is True
Returns a list of references that have been completed with the given value.
Completes the given text and returns a list of strings that can be used as an alias
Returns the arguments of the function as a tuple. If the function has no varargs returns the
Convert a list of strings to a list of strings.
Returns a list of the given members as a string. If no members are given all members
decrypts a JWT token and returns the payload.
encrypts a JSON string using the given key store and key purpose. The key store must
Delete a value from the cache.
Return a python representation of the comparison.
Parse a fiql string into a FQL expression.
str Write a model to a file - like object.
Decode dates and convert them to strings and return them as a dict.
Decode a date string into a datetime object. If the value is a string it will be
Decodes the given value into a string. If the value is a date it will be converted
Return the default value for the given object. If the object is not a string it will
Validate leicacam version.
Return a list of strongly connected components in a directed graph with a robust topological sort
str Set the parent of the fiql expression.
str Returns the parent of the fiql expression. Raises an exception if the parent is not
str Add an element to the working fragment. If the element is a base expression it will
Add an AND operator to the expression and return a new expression.
Add an OR operator to the expression and return a new expression.
str Receive a message and return a list of dictionaries.
Convert a list of tuples to a dict.
check if a message is in the list of messages and return it if it is otherwise return
Prepare a message to be sent to the server.
str Flush the buffer to the socket. This is a blocking call that will block until the
Enable the specified slide in the specified Wells and Wells.
Save a template to a file on the device. The template will be saved to a file
Get information about the device. This is useful when you want to get information about the device
str Returns the path to the systemjs package. json file. Raises an exception if the
str Parse the package. json file and return it as a Python object.
Handle API error with JSON data.
Validates the response from the YoLS API. If the response is valid raises an exception
homogenize waves a and b.
interp the indep vector with the indep vector and return a new wave object.
get the indep vector between two Waves
Verify compatibility between a and b. If check_dep is set to True then check_
str Load the systemjs manifest and return a dict of the files that have been loaded.
a function to trace the parameters of a named parameter. This function is used to trace the
str Expands a short URL into a list of short URLs.
str Return a shortened version of a URL. Shortened URLs can be used to
stats - get total clicks total links total clicks total clicks total clicks total clicks total clicks total
str Shows the total number of clicks and total number of links on the server.
str - > str - > str - > str - > str - > str - >
Flattens an iterable into a list of strings. If map2iter is not specified
str Prints a tab - separated list of records in a tab - separated list.
Create a dummy class with the given name and attributes and return it as a string.
Convert a human readable string to a number.
Trace a module. If no is set to True the module will be printed to stdout.
Generate a list of links for each dependency in a JSON file.
Make a common entry in the plist.
make a single entry in plist from pkg pyvers and ver dict
Convert a string into a list of words.
chunk noise data into a list of noise data chunks.
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
str Bound a wavefile to a range of indep values. min and max are inclusive
Build a list of units based on the dep units and the indep units.
Returns a copy of the wave with the specified operation and units and fpointer applied to it
str Computes the running area of a rectangular mesh.
str Validate that min and max are within a waverange. min and max can be None
- - - - - - - - i a u A c s - - - -
- - - - - - - - - - - - - - - - - -
arccosine the vector of a wavelist.
- - - - - - - i a u A t h - - - - -
db returns a copy of the wave object with the dep vector adjusted to be a multiple of
Group a wave object into a delay object. The delay is the phase of the wave object
Calculate the logarithm of the dependency vector of a waveframe.
Calculate the square root of a wavefunction.
str Wavelength object with complex values converted to complex.
float Waves a wavearray and returns a copy of it with the float values converted.
int Waves a wavearray and returns it as a new wavearray with the int values
str = > systemjs output dir = > systemjs output dir = > systemjs output
Get the short description from a long description string.
str Builds a string from a list of tokens.
Returns the next item in the list after pos. Raises runtime error if there are no more
get a list of functions from an expression
str - > expr string - > expr string - > expr string - > expr string -
str Remove consecutive delimiters from an expression.
Convert a number into a scientific representation of the number.
Returns a string with the given number in scientific notation. If the given number is
str - > float - > float - > float 0 - > float 0 - > float
str - > int - > str - > int - > int - > int - >
str - > float - > float - > float - > float - > float - >
Returns True if the app needs an extension to be included in the javascript file otherwise returns False
Bundle a jspm file to a file in the current working directory. If the jspm
str Get the trace of a given app from the package. json. If the app is
str Return True if the hashes of the modules in the dependency tree match the hashes of the
Format a hexdump string to be printed to the console.
str - > dict - > dict - > dict - > dict - > dict - >
str A list of all valid identifiers in the context and built - in functions in the context
Add an object to a module.
Split a line of text into a list of strings. If posix is set to True then
Check if the current context is an interactive context. If so invoke all the init commands.
Return the builtin help text for the current context.
str Find a function in the given context.
Returns a string listing of all the functions in the given context. If the context is a
Returns True if arg is a flag or False if arg is not a flag.
Extract the value of an argument from the list of remaining arguments. If the list is empty
str - > bool - > bool - > bool - > bool - > bool - >
str Classifies a section.
str Classify a single line of text.
Join a list of lines into a list of paragraphs. If use is set to True then
Convert a value to a given type. If the value is a bytearray it will be converted
Convert a binary value to the specified type.
Returns the size of the given type. If the type is not a string it returns the
Check if a given type is known.
str Splits a type into its base type subtype and a list of subtypes.
Instantiate a type with the given name base and subtypes.
Checks if the given format is known for the given type. Returns True if the format is
str Loads the types from the given module.
str Adds a parameter to the list of parameters to be annotated.
Returns the return value of the function as a string. If the function is called with a
str Custom return value.
str Given a short name and a number of arguments return the first argument with that name.
Returns the type of the parameter with the given name. If no parameter with the given name
Format the return value. If the return value is not a data type the return value is
Convert a positional argument to a string. If index is greater than or equal to the number
converts an argument to the type specified by the parameter name. If the parameter is not
str Format the error message with the class name and the message s parameters.
str - > dict
Execute a function with the given arguments and keyword arguments.
Parses a list of validators into a list of tuples. The first element in the list is
str Find all of the objects in the given container and return a dictionary of the objects.
str The name of the context for the given module. If the module is a module the
Get the help text for a function.
docannotate wraps a function so that it can be called from doc - related functions.
str - like decorator that adds metadata to the decorated function. If name is not specified the
Returns the short description of a function.
str Autodiscover all modules and load all commands.
str Installs the crontab for all tasks in the registry. Returns the number of tasks
Print all the tasks in the registry to the console.
str uninstalls kronos crontab and returns the number of crontab items uninstalled
str Create a new resource from a URI and a local path.
str Loads the project configuration from the file system.
Saves the given projects to the project config file.
Returns a dict of projects that are dependent on this project. If recursive is set to True
str Initialize a project. Returns a list of the names of the packages that failed to be
The function that is called when the function is called. This is the default implementation of the
Apply the function f to the current state and return the result as a string.
View the fold in the given state. Raise type error if the fold is not a fold
Return a list of the folds in the given state. If the fold is not a
Apply a function over the given state and return the result of the function. The function must
Set the value in the given state to the given value. If the state is not a
Iterate over the given iterable and return the result as a string.
Return the kind of the optics.
str Main entry point for the game. This is the main entry point for the game.
str Step towards the given vector and return the result as a new vector.
Handle the input and return the player object and a boolean indicating if the input is a new
str Advance robots to the current player and return a new instance of Robots object.
End the game with the given message. If no message is given the game is stopped.
Moves the player from the board to the player s position in the board. Returns the position
Play the board and print the winner move.
Make a move in the board. If the player is already in the board it will be
Returns the winner for the given string.
Yields the potential wins in the board. This is a generator that yields a list of
Process a single item and upload it to the server if it is larger than the max size
str Create a new time stamp for the given spider and store it in self. ts.
Upload a chunk of data to S3.
Make a file - like object from the items in the list.
Get the current state of the account at the given address.
Get the current state of an asset.
Get the hash of the block at the given index.
Get the system fee of a block.
Get the contract state for the given script hash.
Get the raw transaction data for the given transaction hash.
Get the value of a key in the storage of a script.
Get the output of a transaction.
Invoke the given script with the given parameters. The script hash is the hash of the script
Invoke a function with the given script hash and operation with the given parameters.
Invoke the given script and return the result as a Python object.
Send a raw JSON - RPC transaction to the given HextX object.
Validate the given address is a valid JSON - RPC address. The address must be a valid
Make a request to the server and return the response.
Check if a string is a valid hash256 string.
Check if a string is a valid hash160.
str - > list of contract parameters - > list of contract parameters - > list of contract
Decode the invocation result into a dictionary.
Returns a string representation of this time unit applied to dttm with the given timezone.
Renders and saves the template to a file. Returns the filename.
str Render the barcode using the given writer. If no writer is provided the default writer will
str - The string to be rendered. The function will call the appropriate callbacks for the string
The main entry point for the command line tool. This is the entry point for the command
str Downloads a file from S3 to a local location.
str Uploads a file to S3.
str Downsyncs the configuration files to the S3 storage.
Diff a section of the S3 config into the local config folder.
str - > str - > str - > str - > str - > str - >
Set the username and password to be used as a basic auth token. The username and password
Set the API key.
get json content from folder
Returns a dictionary of all schemas in the JSON file. The keys are the schema names and
Get the schema of the model.
Returns a jsonschema. ref object that can be used to resolve the JSON schema.
Validates the given object against the schema defined in this schema.
Get a list of all valid examples from the schema folder.
Get all invalid examples from the schema.
Get the URL for the authenticated user. If the user is not authenticated an error will be
process the url and return the auth code. Raises an exception if the url contains an invalid
Get a token from the server. If check is True the token will be checked against the
Get the current user id. If no user id is set it will be retrieved from the
Returns a list of files in a folder.
str Create a new folder. If name is not specified the current folder will be created.
Add a comment to an object.
Decode an object into a unicode string. If force is set to True the object will be
str Drops the target attribute of an object and all its children.
start drag opperation
str This is the default value for the tlw object. This is the default value for
Inspects an object and returns the inspector as a string. If the object is not a
Remove str from font if it exists and replace it with str if it exists in font.
Load a page from a file or URL. If no location is given the current page is
Sends a message to the user and logs the message to the console.
Wellcome tip for a custom tool
mouse down event handler
moves the mouse to the current object or overlays the current object if the mouse is
key press event handler
Delete all objects in the selection and re - render the inspector.
Duplicate all objects in the selection and display them in the inspector.
str Refreshes the current snapshot of the object and displays it in the GUI. This is
calculate the best position of the widget
Get the py data for the given item.
str Set the py data for a specific item in the list. Returns the wx data object
find a specific data in a specific position in the wx. Data object. py data can
delete an item from the list and remove it from the map. item can be a string
delete all items
str Clears all data from the table and removes all of the columns from the table.
set the selection of the widget. index is the index of the widget to select. dummy
Returns the string selection of the selection box. If multiselect is True returns a list of
str Set client data for a given client n to a given string data will be stored in
str Append a string to the end of the list. If data is not specified it will
Returns the parent window object for the given object name. If the object does not exist it
add a child object to the sizer
str Set the parent of this control.
str Draws the background of the bitmap in a tile of size w x h
on erase background
event handler for painting the label
Returns a list of column headings sorted by column index.
Resets the view to the initial state of the grid. This method is called when the view
Update the values of the table.
Update the attributes of each column in the given grid.
Sort the data by the given column. If the column does not exist it will be created
str Clear all items in the list and reset the key to the last item in the list
Creates a combo box with the given id and event handler. The event handler will be called
str Editing of the start value of the cell.
Set the end value of the selection and return True if changes were made. Otherwise return False
str Returns True if the key is a shift key and False if it is a control down
This method is called when the user presses the start of a string. This method is
str Enable all items in the menu.
Check if menu item is enabled.
str Enables all menus with the given value. If the value is False all menus are
Checks if the menu is enabled. If the menu is not enabled it will return False.
Remove a menu item from the menu menu list.
str Set the object attributes from the given tag. The object s name is the name of
converts text nodes to unicode and replaces them with str.
Returns a documenter for the given object. If the object is a module the documenter
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
autolinks a role with emphasis classes.
str Shows a message in a window or scrolled state if scrolled is True.
Prompts user for input and returns the input as a string. If the user presses
Displays a font selection dialog and returns the selected font. If no font is selected returns none
str Select a color from the user s list of available colors. Returns the selected color.
str Select a directory from the user s list of files or folders. Returns the path of
str Find the first occurrence of a string in a list of words or a list of words
bool - Whether or not the tree item has any children. Default is False.
str Set the icon of the button. If none is passed it will be set to none
str Parse a file and return a Python object. If filename is None parse the entire file
save a file with a pretty - printed version of rsrc to a file in a file
Build a window from a dictionary.
Build a component from a dictionary of components.
Convert a property name to a new property name. If the name is already in the map
str - > wx. Text - > wx. Bitmap - > wx. Text - >
str Find the autosummary in the docstring of a module.
str Loads an object into the tree. If no object is given the current object is
Inspect an object in the tree and display it as a context menu.
Activates an item in the tree. If the child is a child of the tree the
Update the selected item in the tree.
shows a context menu for a specific item in the tree
Convert a hyperlinked sorl image to an absolute URI.
Returns True if the current path matches the given path or False if the path does not match
Assert that the current path does not exist.
Select the option in the select box. If the option is disabled warns the user.
Get a webdriver object by browser name. Browser name can be one of chrome edge firefox
Convert the expression to an XPath expression. If the expression is an abstract expression it will be
str switch to a specific frame. frame can be either a string or a list of strings
Open a modal dialog with the given text and wait time. If no text is given the
Prompts the user to enter a confirmation message. If the user presses enter the confirmation
Dismisses a modal dialog with the given text and optional wait time.
Accept a modal prompt with optional text and response. If wait is True the prompt will be
Dismisses the prompt and returns a context manager that can be used as a context manager
str - Save the page to a file. path - Path to save the page to.
Save a screenshot of the current page.
raises server error if capybara. raise_server is True else raises server
Checks if the element has a checked field with the given locator.
Adds a checked field to the current set of matched elements. If the element does not exist
Checks if the element has a checked field with the given locator. If the element does not
Creates a selector that matches on the element with the given locator but does not return an unchecked
Returns True if the document has the given title. If the document does not have the given
Checks that the page has a given title. Returns True if the page has no title False
Return the inner content of a node as a string.
Return the inner text of a node as a string.
str Normalizes a URL so that it can be used as an absolute URL.
str should catch error and return True if error is an instance of the error class.
str count - Count the results in the query. If the query has a count option it
Returns a string with the results of the iterator at least size bytes. If there are no
Returns True if any of the options is None. If any of the options is None returns
Generate a failure message based on the number of times and the number of times the failure occurred
Checks if the given count matches the given options.
Normalizes whitespace and bytes in a text value.
Remove all whitespace from a string and return the normalized string.
str Converts text to a regular expression. If text is already a regular expression it is returned
str Returns True if the current url matches the expected url False otherwise.
str Resize the window to the given width and height.
str Boots the capybara server and waits for it to be ready.
Set the function to be called when the property is set to the value of the property.
Set the instance method to be called when the instance method is called.
Sets the class method to be called when the method is called.
Returns the traceback as a string. If log_traceback is set to True the traceback will
Get the source of the object. If the object is a string return it. Otherwise return
Get the logger for the given instance.
Set the logger to use. If no logger is provided the default logger will be used.
str Call the API with the given method and parameters.
Get a list of all channels in the channel list.
Get a list of all the users in the account. This is the list of users that
Make a message from text and channel. If channel is not specified the default channel will be
str Translate a message to a user or channel. If the message is a user or channel
Send a message to a channel.
Read a message from a channel and send it to the appropriate protocol.
Run the Slack API. This is the main entry point for the Slack API. It is
str Runs the CLI command line interface.
Diff two dictionaries and return a dictionary with the keys of the first and the values of the
Return a string with the given color.
Start a new playbook on a task. The playbook is a list of playbooks
v2 playbook on stats
v2 runner on skipped task
Convert an IP address to an IPv4 or IPv6 address and return it as a string
add a model to the container. model can be a class or a string. If force
load all filters from all registered jinja modules and return them as a dict.
str Find the path to a file in a given profile. If the file does not exist
http post method
Returns the authorization uri for a given client id and redirect uri. If no redirect uri is
Generate a new access token using the given code and parameters. If no parameters are provided the
Returns a dict of query parameters from the given URL.
Convert a URL to a string without the query string. This is useful when you want to
str Builds a URL from a base URL and additional query parameters.
Handle an exception by logging it and returning it to the appropriate logger. If no logger is
Make a response object from a string body headers status code and optional status code.
Make a response with a redirect to the given uri with the given error.
Make a JSON response with the given data and status code. If no headers are provided the
Generate authorization code and redirect to redirect uri and params.
Generate a new refresh token for a given client id and client secret. The refresh token is
Get a new access token for a given client id client secret redirect uri and authorization code.
get authorization code from uri
Get a token from the post data. If the token doesn t exist it will be created
str Get the authorization header from the request. If the request contains an authorization header that is
str Create a new device with the given bus number. If the device already exists close it
Read a byte from the device at addr. If the device is not connected the function returns
Read a number of bytes from the device at the given address. If the device is not
read byte from i2c device
str Write bytes to the device at addr.
str Write a byte to the device at addr. cmd is the command to write val is
str Write a block of data to an i2c device.
Create a copy of the object. If target is not specified the copy will be created on
Create a local copy of the current object.
str is the name of the file to create a new instance of this class. It is
Upload a file object to a file store. If no store is given the file will be
Returns a list of all the file CDN URLs in the group.
str Constructs a Group object from a group info dictionary.
Create a new group from a list of files.
Get the base opration for the given method. The base opration is the
Returns a generator of file UUIDs from the file sequence.
a wrapper for the list command. It takes a class and a namespace and returns a list
str Prints a progress bar for the given content with the given number of parts.
Status of the user s home mode.
str Get a list of all cameras.
str Get information about one or more cameras.
Snapshot a camera.
Enumerate the motion of a camera.
str Save camera event md param.
Update cameras motion settings and motion settings by camera id and motion settings by camera id.
w Check if a list is the last item in the list.
get a single list node with meta data from a list node with meta data from a list
get the ilvl of a given element in a given namespace
get the merge value from the given tc. If there are no merges return none.
get grid span
Get the TD element at a given index in a table.
Return True if style is false. If style is none return False.
returns True if the element is bold False if it is not.
returns True if r is an italics element False if r is not an ital
returns True if r is underlined in the namespace False otherwise.
w is the title of the page? w is the title of the page? w is
get text run content data yield all elements that are valid text run content data yield all elements
str Get relationship info from a tree of images and a dict of image sizes.
Returns the ordered list type for the given id and ilvl. If the list does not
str table - > list of nodes visited - > list of nodes visited - > list of
str Get the content of a tag. If remove is True remove italics and bold
str Removes all elements with the given tag from the given tree.
str Find a file in the datasets directory and return its path. If the file does not
str - > tuple of numpy. ndarray - > numpy. ndarray - > numpy. ndarray
Plots a list of numpy arrays of images at a given location.
plot a list of weights as layers. If tied is True the weights are plotted
plot a list of filter images as a grayscale image.
Return a list of the encoded characters in txt. The encoded characters are stored in self.
Add convolution weights to the theano model.
str Returns the decoded value of z in the specified layer. If no layer is specified the
Return the autoencoder score of x.
str Predicts the value of the last layer of the model.
Predict the probability of the input data.
Predict the logit of x.
Returns a list of all the variables in the model. The list includes the target and weights
str Calculates the accuracy of the model based on the predicted target and the weights of the model
str Builds an activation object from the given name and layer.
Reservoir generator.
str Set the loss of the model. This is the default loss of the model.
Trains the model and returns a list of monitors that have been trained.
str Builds a graph from the layers and regularizers. If no regularizers are provided
Returns a list of the input names of all layers in the network.
Returns a list of all variables in the model.
str Save the object to a file. If filename or handle is a string it will be
str Load a model from a file or handle.
str Calculates the loss of the model.
Build a graph of updates from the given regularizations and return it as a string.
Return the output size of the pipeline.
Resolve all input shapes in self. input to their corresponding shapes in the given layers.
Resolve inputs and outputs to the correct shape.
Log the current state of the activation and parameters to the console.
Returns the number of logarithm of the parameters in the model.
Format the given string with the name of the field.
str Resolve a shape from a name and a list of layers.
Find the parameter with the given key or raise an error if the key is not found.
Add a bias parameter to the model.
Returns a dictionary with the form name and activation as a key and the values as values.
str Returns the loggaboral environment for a given band and orientation.
str Returns the image of the loggabor of the given phase at the given position.
str Add a new tier to the list of tiers and return the tier object.
str - > None - > None - > None - > None - > None - >
Returns the tier with the given name and number. If num is an integer it will return
Return an EAF object with the given number of points. If skipempty is
add a point to the list of intervals
Add an interval to the list of intervals. If check is set to True an exception will
remove an interval from the list of intervals. time must be in the range [ 0 time
Remove a point from the time series.
Returns a list of all intervals in the time series. If sort is set to True the
Returns a list of all intervals in this region sorted by start and end. If the region
Add a string to the end of each element in el. If the element has no text
str Add an annotation to a given tier with the given start and end times.
str Description of a controlled vocabularies.
Add an external reference to an event type.
str Adds a reference to a lexicon.
str Adds a linguistic type to the model.
str Add a locale to the list of available locales.
Remove all time slots from self. timeslots that are not in self. tiers
Returns a new EAF object with only the elements in the range [ start end ).
Generate an annotation id based on the timeslots in self. timeslots.
generate a new timestamp id. time can be an integer or a float. If time is
Get the child tiers of a given tier.
Get the full time interval as a tuple. If there are no timeslots return a
Get the ref annotation data after a given time.
Get the ref annotation data before a given time.
Returns a list of tier ids for a given linguistic type.
str Removes all annotations from a given tier and optionally cleans up time slots.
str Remove the description of a given vocabularies in a given language.
str Remove a license by name or url. If name or url is none remove all licenses
Remove files linked to a given file path relative mimetype time origin and ex from.
str Remove a property by key or value.
remove a reference annotation from a given tier and return the number of removed annotations.
str Remove secondary linked files.
str Remove the tier with the given id. If clean is True the time slots will be
str Removes tiers from the system.
Renames a tier to another tier.
shift annotations by a given amount of time and return a list of tuples with the shifted
prints the current state of a string in a format that can be used for debugging.
Get the embedding levels of the given text. The embedding levels are stored in the given storage
str - > str - > str - > str - > str - > str - >
Resolve neutral types in the given storage.
Reverses a contiguous sequence of characters from start to end with a given level.
Reorder the levels of a string in the storage dictionary. The storage dictionary is modified in
Process the bool command to get the path to the bool file and set it to the context
str Add an attribute to an object.
Command - line interface to convert a file from one format to another. The command - line
str Maintains backwards compatibility between Python 2 and Python 3.
Show the GUI for the current QGIS object. If no QGIS object is
Discovers the first GUI registered with pyblish and returns it as a string.
str Add to filemenu
A context manager that maintains a selection. This is a context manager that can be used
A context manager that maintains the current time of the context manager. This is used to
show no gui
Returns a generator that yields the cumulative sum of all the data sets in the dataset.
get the values of a single axis from a dataset.
str Draw a constant line on the graph.
str The name of the transform to be applied to the graph.
Convert a mapping to a dictionary of key - value pairs.
Returns a generator that yields floats in the range [ start stop ) until stop is reached.
str Add data to the list of data to be processed and added to the list of data
Burn the graph and return the graph as a string. If the graph is already a
calculate the left margin of the label
calculate the right margin for the key box and the right margin for the key box and the
calculate the top margin of the graph
str Add a popup at x y with the given label at x y with the given label
str Calculate the bottom margin for the widget.
Draw the graph of the graph graph. The graph is a sub - element of the root
str Make datapoint text.
str Draws the x - axis labels. If the label option is set to True the
str - > Draw the y labels on the current field.
draw x guidelines
draw guidelines at y - axis
str Draws the title and subtitle of the graph.
Render inline styles from the css file to the root node of the document. The inline styles
str Create a SVG element and add it to self. root.
str Returns a list of all the stylesheet files in the project.
Run a bot on the given host port and nick. If no channels are given the bot
str - > None - > None - > None - > None - > None - >
Connects to the server and returns True if successful. Otherwise returns False.
str Send a message to a channel or a nick.
Returns a list of patterns that can be used to match the current state of the channel.
Create a new nick and register it in self. nicks and handle the change.
Send a ping message to the client.
Handle a registered event. This is called when a new event is received from the server.
This is the main event loop. It is the main event loop. It is the main
str Register the boss with the boss server and wait for the boss to be
This is the main loop of the task loop. It is run in a separate thread.
Returns a list of command patterns that can be used to execute a worker process.
str Register a success message for a channel.
Execute a command on a worker. If no workers are specified the command will be executed on
Add a nick to the list of workers and add it to the list of workers.
Send a validation email to the user.
Send a password reset notification to the user.
Verify a token and return the user object or raise an exception if the token is invalid.
Removes the user s avatar from the database and saves it to the database.
Allow the request to be routed to the given view. If the request method is not
Returns a docker client for this environment. If no client has been set it will be created
Returns a tuple of the TLS certificate and key used to connect to the server.
Returns the name of the service. If self is an instance of str it will be returned
A wrapper around the client s method that returns the result of calling that method with the given
Submits a method to the Docker server.
Polls for a running service and returns the number of running tasks. If there are no
Stops a running service. If now is set to True the service will be stopped immediately.
Filter the queryset by lowercasing the value and then converting it to lower case.
Update the password for the given instance. If the password is invalid an error is raised.
Update the password for the given instance. If the password does not exist it will be created
Validates the given email. If the user does not exist raises an error. If the user
Create a new token for the given user and return the token. If the token is valid
Delete a token from the database. If the token does not exist it will be created.
If the user is not authenticated and the email is not the same as the user s email
Sends the validation email to the user and returns a response with the user s email.
str Update expiry time of the object. If commit is True then the object will be saved
Generate a password reset email context for the given notification.
str Sends an email to the user s email address with the notification s text and html
Sends a password reset email to the user. This is the default password reset email handler.
Adds a validation email to a notification.
Authenticates the user based on the request data. If the request data does not contain
Returns the user and token for the given key. If the token is expired it will raise
Display a notebook in a bokeh notebook notebook manager and a jupyter notebook in a notebook
process hv plots and return a list of bokeh. plots. Plot objects.
Generate a custom javascript callback to be called when a change is made on a particular plot.
Returns the widget with the given name. If the widget with the given name does not exist
Render an object using the holoviews renderer.
Create a text input widget.
Returns a list of tuples where the first element is the key and the second element is the
Get the owner of the given method. If the given method is not a method return the
str - > None - > None - > None - > None - > None - >
Sends a ping request to the server and returns True if the ping was successful False otherwise.
Get information about the server.
Check the health of the server.
Convert a number of bytes to a readable string.
Returns the total CPU load of the system and the user and the other CPU of the system
Returns the memory size in bytes. If human readable is True returns a human readable string.
Get the network up in bytes. If human readable is True return a human readable version of
Returns a list of all the volumes in the container.
Get a volume by its id.
Get the total size of a volume.
Returns the percentage of the volume used for the given volume. If the volume does not exist
Returns the average disk temperature of a volume.
Get the maximum disk temp for a volume.
Get a specific disk by its id.
Login to the server and get the access token.
str Get url and return response. retry on error if access token or session is not set
Execute a GET request with the given url and return the result as a dict.
Update the utilisation and storage objects.
Returns a syno. utilization. syno. utilization. SynoUtilisation
Returns a syno object representing the current state of the API. If the API is not
Generate a webhook context for the given request. The context will be returned in the form of
Returns the current tenant token or None if there is no token.
str Builds the HTML attributes of the widget and returns it as a string.
str Given a list of apps this function will override the settings. INSTALLED_APPS
str Removes apps from settings. installed_apps.
str - > dict - > str - > str - > dict - > str - >
Sends a GET response to the client. If the request is a redirect or a link the
str Change the value of a key in the config file.
Migrates a config file from oldname to newname. If newname is not specified the default
str Start the webserver in a new thread.
str Wait for the server to return a response or raise an exception if the server is not
get new access information
Check if the token is present. If it is not present create a new access token.
str Set the access credentials for the client. retry is the number of times to retry the
str Create the manifest for the given table in the given dynamodb client.
str Splits a full path into bucket and path.
Check if a prefix is a glacier key in an S3 bucket.
clean a dictionary to remove None values.
str Adds a run id to the manifest.
Check if a run is in the manifest.
Extract snowplow schema from snowplow uri.
Fix the schema to include the prefix organization name and model in the schema and return it.
str Unstructs a JSON string and returns a list of tuples of schema and inner data
Transform a line of text into a JSON good event with enriched fields and geolocation
jsonify a good event with optional geolocation data and enriched event field types.
Get the name of the template used in the response. If the response is not a string
prints the given context to the screen. The context can be a list of strings or
Print all the variables in the template. The context is used to format the variables in the
pformat a SQL string to be printed in HTML format.
Pretty - print the object in the context of a django context manager.
Pretty - print a dictionary as HTML.
str Style text.
Format the given object as a string and return a tuple of the formatted string and a boolean
str Format the given object to the given stream with the given indent and allowance.
Get a latex token from the string s at the given position. If the string s is
Get a list of latex nodes from a string.
Convert a LaTeX string into a text string.
Converts a LaTeX string into a text string.
Convert a string to an ASCII string. If the string contains an escape sequence it will be
Get organisation information.
Get a list of all boards that match the given query parameters.
Get a list of all members for the authenticated user. The returned list is a list of
Update an existing organisation.
Removes a member from the user s list of members.
Adds a new member to the group by its id.
Add a member to a user s list of members. The member will be added to the
Returns a list of information about the current user s account. If no user is authenticated the
Add a card to the user s list of cards.
Returns the label information for the current user.
Get a list of items from the API.
Update the name of a label.
Update a label with a dict of query parameters.
Get the authorisation url for the given application name and token.
Returns the card information for the authenticated user. The card information is returned as a JSON object
Get a single board.
Get a list of items from the server optionally filtered by the given query parameters.
Get a list of checklists for the authenticating client.
Add a comment to the document. The comment is added to the document at the end of
Adds an attachment to a file. The file must be a file - like object.
str Add a checklist to the current user s list of checklists.
Add a label from a dict.
Adds a label to the collection. If label is not provided the collection will be created with
Add a member to the list of members. Returns a list of Member objects.
Gets information about a user s member.
Get a list of cards.
Get a list of organisations.
Create a new board.
Get board information.
Get a list of lists that match the given query parameters.
Get a list of labels for the current user.
Get a card by id.
Get a list of checklists.
Get a list of organisations for the authenticated user.
Update an existing board. If the board does not exist a new board will be created.
Add a list to the current user s account. If the user does not have access to
str Add a new label to the user s list of labels. Returns a label object.
Gets the checklist information.
Get the card information for the current checklist. If the checklist does not have a
get a list of checklist items
Update a checklist.
Add a new item to the collection.
Removes an item from the inventory.
Update the name of the checklist.
Update the state of the checklist.
Add the API key and user auth token to the query params.
str Check for unauthorised and unavailable errors.
Build a URI from the given path query and params.
str Fetches the content of a resource as a JSON object.
Create an organisation
Create a new board on Trello.
Create a label on a Trello client.
Create a new list in Trollo.
trolly. card. card
Create a checklist
trolly. member. member. Create a new member in Trolly.
Get an organisation by id or name.
Get a board by its id and name. If name is not specified the board will be
Get a list by id and name. If name is not specified all lists are returned.
Get a card by its id and name. If name is not specified the card will be
Get a checklist by its id and name. If name is not specified the checklist
Get a member by id or full name.
Returns a new url with the domain appended to the url.
convert text to raw text with markupless support.
Set the password for the given service and username. The password will be encrypted using the given
Split text with the given list of locations. If the list is empty the original text is
str mark all occurrences of the given regex in the given text with the given split locations.
str Find all occurrences of the given regular expression in text and mark them as split.
str Main entry point for the command line tool. This is the entry point for the CLI
Create an AES cipher for the given password salt and nonce.
Get the AES mode. If mode is none return all modes. If mode is none return
Returns the priority of the job.
str Check if the scheme is correct.
str Log a message to the debug log.
Make a unique id for this object. The id is generated by adding a random number to
Connect to the MQTT server and return a Deferred that will be resolved when the connection is
Handle incoming connection acks from the server.
Encode a string into a byte array of length num. If the string is longer than num
Decode a Base64 encoded string into a tuple of bytes and the rest of the encoded string
Encode a 16 - bit integer into a bytearray.
Encode the length of a number into a string.
Decode the length of an encoded string into a string.
str Returns the header as a byte string. If p is True returns the header as a
str Encodes the header and payload of the message into a binary string.
str - > None - > None - > None - > None - > None - >
str Encode the header and return it as a byte string. If p is True return the
str - > str - > str - > str - > str - > str - >
str Decodes a packet into the message object.
str Encode the message header and return it as a byte string. If p is True return
str Encode the message header and return it as a bytearray. If p is True return the
str Decode the packet into the message id and the list of topics in the packet.
str Encodes the message header and returns it as a byte string. If p is True
str - > bytes - > bytearray - > bytes - > str - > bytes - >
str Decodes a packet into this object.
str Decodes the packet into the message.
Generate a GET request URL.
Make a request to the API and return the response as a JSON object.
str Refresh the list of blocks from the comm. If the rank of the comm is the
str Format the data according to the analytes in self. analytes.
fit data to the model and return the transformed data as a list of numpy. ndarrays
str K - means clustering.
Returns a list of predictions for the given data. The data is expected to be in the
Map clusters to a list of integers.
sorts the clusters by the mean of the clusters in the given sort by the given sort
Get a date string from a datetime string and a time string. If no time format is
Get the total number of points in a dictionary.
get the total time span of all data points in a dictionary
str - > float - > str - > float - > float - > float - >
Returns a string with the first element and the rest of the string with the last element.
analyte 2 namemass
str - > str - > str - > str - > str - > str - >
collate data from in dir to out dir. extension can be either a file extension or
Enumerate a boolean array.
str - > bool - > bool 1 - > bool 2 - > bool 1 - >
str Smooth a numpy array using a fast convolution. win is the number of samples to
fast gradient of a numpy array using a rolling window. win can be an integer or a
finds the minimum values in x and y. x and y must have the same length
str Estimates the mean shift of the data and returns the cluster labels and a list of
str K - means clustering
str Given a SRM file return a numpy array of the defined SRM files.
Read configuration from latoolscfg and return it as a dict.
str latoolscfg - read latoolscfg. txt and latoolscfg
copy a srm file to a new location
str Exclude downhole elements from a filter.
str - The name of the analyte to plot. If analyte is none the data
str mkrngs - mkrngs - mkrngs - mkrngs - mk
str Calculates the ratio of the analytes to the given standard. If no standard is specified
calibrate the data according to the given calibrations. If no analytes are
str A list of ablation times.
Calculate the correlation between x and y in a rolling window. If recalc is set to
Add a new filter to the list of filters.
str Returns a dictionary with the parameters of the filter and the sequence of the filter.
str Plot a histogram of the values of the given data. If no keys are given the
Load reference data for a given group. If no name is specified all reference data is returned
calculates the MolecularFormula for a given molecule. This is the sum of all elements
Generate a namedtuple from the given arguments and keyword arguments.
Annihilate a predicate onto a stack.
Deduplicate a stack of strings into a new tuple.
str Gauss - Weighted Statistics
str Gauss distribution
str Standard deviation of an array of NaNs and the standard deviation of the diagonal elements.
str - > list of samples in the dataset. If no subset is specified all samples are
Ratio the data to the given standard. If no standard is specified all data will be calculated
make a subset of samples. samples can be a list or a string. name can be
str Function to apply a classifier to a list of samples or subset of samples.
Filter the data by the number of removed elements. If quiet is set to True print the
str Filter the reports for the given analytes. If no filter is given all reports are
str Provides a minimal export of traces for the given analytes. If no analytes are
Saves the log to a file in the export directory. If directory is none the export directory
Apply a function to a sequence and return the result as a string.
str Bayes scale
str Median scaler function
str Noisy despike a signal.
str De - pike a signal with an exponential decay.
Add a new component to the model. The name is the name of the component and the
str Remove a component or a set of components from the model. If no name is given
str Clears the current state of the model.
str Remove unused components from self. components that are not in self. analytes.
Fuzzes the keys of all components and returns the first one that matches the max ratio
str - > np. ndarray - > bool - > bool - > bool - > bool
Returns a string representation of the component info.
Write a log to a file with a header and a file name. Returns the path to
str Read a log file and return a dictionary of run arguments.
Get information about the modem.
Send a message to a phone number.
Parse a string or file - like object into a SQL file object.
Return a link to a page in the nbviewer window.
Returns the thumbnail div tag for the snippet.
Returns the code to be used in the snippet. If the code is none the code is
Returns the code example of the notebook.
Return a link to the notebook.
str Return the output file name with the given number of the extension. If no extension is
str Create the. py file from the nb file and write it to the. py file
Download a number of files from the file system. If the number of files is greater than
str Create a thumbnail for the current figure. If the current figure is not a thumbnail the
scale an image to max width and height. max is the maximum size of the image.
str Save the image to a thumbnail file in the given path. If the image already exists
Copy the thumbnail figure from the notebook to the output directory.
Get the url for a given nbfile.
get list of languages to change field name from db table fields
Process the thumbnail file with the given size and return the processed thumbnail file.
str Post - save the image to disk. This method is called before the image is saved
Returns a list of all thumbnails. If thumbnails have not yet been fetched it will be fetched
Create a new thumbnail of the given size.
str Delete a thumbnail of a given size.
str Create a new thumbnail with the given source name size metadata and storage.
Returns a thumbnail of the given source with the given name size and metadata. If metadata is
str Delete a thumbnail of the given name and size from the given storage and metadata backends.
str Received a message from the server.
Subscribes a callback to a specific number of digits. The callback will be called with
Returns a set of all states that have been accepted delivered expired or error.
Send a message to a provider.
Returns a dictionary of the receiver blueprints for each provider. The keys are the names of
Receives a message from the gateway.
Receive a status object from the gateway.
str Forwards an incoming message to all clients in the cluster.
Signs a transaction with a vrs r and s.
Estimate the amount of gas required to send a transaction to a safe address.
Estimates the number of gas needed to execute a transaction.
Write data to the stream and flush the stream if blocking is True. If blocking is False
Read a line from the serial port.
Returns True if the message has bad headers False otherwise.
str Attaches a file to the message.
str Register a new service to be used by the service manager.
str Given a module name import it and return a dictionary of the module s configuration.
str Register a new resource.
Returns the value of the given key or raises an error if the key is not present.
Exit the iteration. If type is none then stop the iteration. If type is value then
str The name of the DAL that will be used to store the data. If the
str - > NG - > NG - > NG - > NG -
str The cauchy equation for a given wavelength and a list of coefficients.
Delete a resource from a given endpoint with the given headers. If the response status code is
str Returns True if path1 and path2 refer to the same file as path2.
Create a symbolic link in the source directory.
Initialize the logger with the given arguments.
Raise an error with the given message if the subparser fails to parse the command line.
Returns a list of unclaimed readers and a list of unclaimed vcf
Get a new column header from a VCF file.
Find unclaimed varscan files and pair VCF files and return the unclaim
init the population stats from a vcf file and a dependent tag id
Claim the unclaimed vcf and return a tuple of the unclaimed file
Split data into lines using the line terminators.
Returns the first line terminator that matches the given data. If none is found None is returned
Returns the last line terminator found in the given data. If none is found None is returned
Seek to the next line in the file and return the position of the next line.
Seek to the previous line in the file and return the position of the previous line.
str Return the last lines of the file. If no lines are given return all lines.
str Get the first lines from the file. If no lines are given returns an empty list
str Follows the file and returns a generator of lines. If the file is larger than
claim a strelka file and return the unclaimed and unclaimed
str Parse a single record from a vcf file.
sample tag values from a list of sample names and a list of sample fields.
Returns a list of tags for the current sample or an empty set if there is no sample
str Join the fields of the info dict into a single string. If the info dict is
Returns a string representation of the sample field. If no sample field is present returns empty string
Returns a string representation of the sample field.
Return a string representation of the VCF record.
str - > str - > str - > str - > str - > str - >
str Add or replace a filter to the list of filters to apply to. If the filter
Returns a list of available categories for the given user. If products is not specified all categories
The products form for the given category and products. The products are sorted by their order.
Create a staff products form for the given user.
str Add a product error to the report.
Create a form for a model s fields.
Returns a list of items that are pending or purchased.
Send an e - mail to a user or group.
Parse an osm file and return a tuple of nodes ways and relations.
Returns an iterator over the osm notes in the given feed. If the feed is empty
Returns True if the given user passes the condition. If the user passes the condition returns False
Returns True if the user passes the filter.
Returns the remaining quantity for the given user. If filtered is True returns the number of remaining
Filter the queryset by enabling or disabling the user s carts.
Filter the queryset to only include products that have been enabled for the given user.
Filter the queryset to make sure that the number of items is greater than or equal to the
Filter the queryset to only show the speakers that the user is a presenter or a
Filter the given conditions to only include users that are in the group of the given user.
Returns a cart object for the given user. If no cart exists a new one will be
auto extend the cart reservation based on the number of vouchers and the amount of time elapsed
Apply a voucher to the cart.
Test all vouchers in the cart and remove any errors that are not related to the current
rRecalculates the discounts for all products in the cart.
Generator over all rows of the table as a list of strings with the given content type.
Returns the form to be used for the GET request. If the form type is not specified
Render the given data as a string.
Returns a list of all available reports.
Returns a list of items that have been sold and the total income of each item
Returns a report of all the payments in the invoice.
Report refunds for credit note.
Show the status of a product.
Report the status of all discount items in the cart.
List of product line items for a given product and product category.
Report paid invoices by date.
Returns a report of the credit notes for the current user.
Returns a report of all invoices in the system.
A list of all attendees for a user.
Return a list of users that have registered a speaker.
Return a list of missing categories for the given user.
Returns the number of available credit notes for the current user.
Check if the user is sold out and is not associated with a ticket product.
Displays a form to edit an existing profile. If the form is valid the user will be
Returns a form that can be used to edit a user s profile. If the form is
handle a list of products and return a form and a list of discounts that can be
str Handle a voucher request.
Show a form to enter a new invoice.
Refunds an invoice.
extend reservation for a user
Sends an invoice email to the user. If the form is valid the invoice will be sent
This view renders the badges for the invoices with the given category product and status.
Render a badge for a given user.
str Returns a list of discounts for the given user in the given categories and products.
annotate with the number of past uses for the given user in the given queryset.
Returns a list of all available products for the given user. If no category is specified all
Applies this payment to the given invoice. The payment must be allowed to pay to the invoice
The cancellation fee is the percentage of the credit note. The cancellation fee is the percentage of
Generate a random access code.
str - > str - > str - > str - > str - > str - >
Returns an invoice for the given cart. If the cart does not exist a new invoice is
Generate a manual invoice for the given user and price pairs.
str Apply credit notes to an invoice.
Checks if the user can view the attendee. If the user is staff the attendee
r Refresh the invoice and cart data from the database.
Validate that the invoice is allowed to pay to the cart. If the invoice is unpaid
Update the status of the invoice. If the status changes the credit note will be generated.
Mark the invoice as paid
Checks if the current invoice matches the current cart. Returns True if the invoice matches the current
Update the validity of the invoice. If the invoice is unpaid and the cart is valid
str Check if the invoice is paid or refunded. Raises validation error if the invoice is
Refund the current invoice. If the invoice is void it will be void. Otherwise it will
Sends an email to the user of the given invoice with the given kind.
Update the object with the data from the data dictionary.
Flattens a single field into a flat dictionary.
str Prints the downloads of all the files in the repository.
Download a file from Gencloud.
Returns a list of all processors. If no name is given all processors are returned.
prints the inputs of a given processor. This is useful for debugging and debugging purposes.
rundata - Runs data from a string in JSON format. Returns a dict with the
str Uploads a file to a specific processor in a project.
str Upload a file to the server and return the session id.
downloads data from a list of objects. field is the name of the field to download
Returns a list of all subclasses of the given class.
Get repo and project from the user s data. If the user s data is empty then
get variant phenotypes with suggested changes
get variant phenotypes with suggested changes merged
Update the object from the database. If the object does not exist it will be created.
uniqify returns a list of unique values in a given sequence.
Authenticates the user using the asana API and the github API. If the user
Prompt the user to select a value from a list of values.
str Get saved issue data for a given issue number or issue number.
move saved issue data from one namespace to another.
get saved task data
Returns the asana task with the given id or None if there is no such task.
Apply a value to a key. If the key does not exist it will ask the user
str Flushes the queue. If the queue is full the callback will be called with the
Create a new missing task in a workspace.
Returns a list of all the data types for this project.
str - log message to EKM log function - log message to EKM log
init the serial port and wait for it to be ready. Returns True on success False on
str polling values
Render a list of reads since a given timestamp and meter.
Set the context of the message. If the context string is longer than the number of messages
Calculates the frequency of a given frequency. If the frequency is capacitive lead or ind
set max demand period
Set meter password. New meter password is a hex string. New meter password is a hex
Get the buffer of months in the given direction.
str Assigns a schedule to the parameters. Returns True if the assignment was successful.
str Given a season month day and schedule assign it to self. m_seasons.
str holiday + num month + day + num holiday + num holiday + num holiday + num
read schedules for a given table. tableset is the name of the table to read.
read month tariffs from tariffs or tariffs from tariffs.
read holiday dates from the serial port and return the holiday dates as a list of strings.
Return a string describing the read settings of the year month tariffs and schedules.
write a message to the console. msg is a string to be printed to the console.
login to the serial port with a password. password can be a hex string or a hex
str Update all the observers in the list of observers that have been registered for this request.
This method is used to perform a request to the server. It will return True if the
request a meter address and return the response. Returns the CRC value of the meter address.
Request a single byte from the meter.
make a req dict with all the fields that are not in the req dict but in the
Set the display list to the specified display list. The display list must be a list of
Set a relay for a given number of seconds and status. If the number of seconds is
post end of the serial connection. This is called after the serial connection has been established.
set pulse input ratio
set zero resettable kwh
Set the current LCD items. If password is not specified the current password will be used
Iterate over all fields in a schema.
Iterate over fields in a schema. If path is None iterate over all fields. If path
Generate a random string of the specified length.
Returns a string with the timing and summary of the execution time and the result.
Return a string with ANSI escape escape and reset for the given text. The text will be
str Shows the given text in the terminal.
Return a summary of the test result.
str Parse the command - line arguments and return a list of the arguments as a dict.
Setup the result.
str Runs the example.
str The name of the transform function to be run. This is the name of the transform
Transform a describe node to an ast. class.
str describe body
str test = test name context = context variable group = group variable group = group variable context
str Converts the example body into a list of AST nodes with the same name as the given
Returns an ast. arguments object that takes only the given string.
str Register this class as a hook in sys. path. This will be called when the
converts example source to python code. This method is used to transform example source into python
str Apply argument parser to arguments string. If options is not None apply options to arguments string
str Loads a module by its name. If the file does not exist it will be
str Loads a Python module from a path. If the path is a directory it will
str Walks the given directory and returns a list of all files that match the given filter
str Remove a file from places. config.
A restart message is sent to a list of places and a new name. The name is
Call a function from a dictionary of results and return a dictionary of places and the results.
Make a new service with the given options.
str Refreshes the session for the given node id. If no node id is given the
Remove expired nodes from redis.
Remove a node from the cluster. If no id is given the current connection id is used
Returns the last time the node was updated. If no node id is given the current node
Get a list of all nodes in the cluster.
Refreshes the current session. This will remove any expired nodes and re - refresh the session
increments the modified counter and sets the ttl to 0 if it was the last time
Returns a list of values separated by the given delimiter. If the delimiter is not a list
Returns a list of bad files in the given path starting at start and ending at now.
Merge the given status with the current status and return the new status.
Returns a query that returns a predicate that returns true if the identifier matches the given value.
Returns a list of identifiers that match the given token. If the token is not a token
Make a new service with the given options.
Parse the input from the given reader and return the result as a string. If the parser
Return an optional parser. If parser is a string it will be converted to a literal parser
Repeats a parser one or more times. If parser is a string it will be
Return a repeated parser. If parser is a string it will be converted to a literal.
Repeats parser with one or more tokens separated by separator. If parser is a string
Repeats a parser with a given separator. If parser is a string it will be
Close the call. If the call has not yet been closed raise an error. If the
Check if the URL is valid.
str Add a heart service to master if it doesn t already exist.
Wrap the given service in a taservice. multi and add it to the heart
str input checkpoint file path string output file path string output node names string output node names string
str Freezes the graph and writes it to the given file.
str save graph only from checkpoint.
str save weights from checkpoint.
str - > tf. train. meta. meta. restore - > tf. train.
str Parse the given token and return an instance of this class.
Render the tag with the class name as the tag name and return the result as a string
str Validates the number of arguments passed to a template function.
Get the context data for this node.
Parses the given tag and returns an instance of the class with the given name and arguments.
Get the context data for the given tag. If the tag is not allowed it will be
Convert caffe to tensorflow session.
str with caffe to tensorflow session and caffe to tf. train. sa
caffe to tensorflow session save caffemodel and save graph only to file.
make rows from a sequence with num columns and a sequence of sequences of length num columns.
Yields every element of an iterable. If the iterable is empty it stops the iteration.
Remove duplicates from an iterable. If a key is provided it will be used to remove duplicates
Returns the next element in an iterable and the original string as well as the original string.
A generator that suppresses any exceptions raised by the given callable. If no exceptions are given
Assert that an iterable is ordered according to the given key function. The iterable must be sorted
Swap the two parts of a partition. If the item is the last part of the partition
fetches the first n queues from the server and returns them as a list of lists.
Resets the iterator and saved values to the original state.
str - > str - > str - > str - > str - > str - >
Returns a keychain that is a descendant of this keychain. This is the keychain
str - > list - > dict - > dict - > list - > dict - >
Return True if obj matches the selector. If obj does not match the selector returns False.
str Parse a selector string and return a list of nodes. If no nodes match return none
Returns a list of nodes that are parents of a node in a list of nodes.
Returns a list of all siblings of the nodes in the left - hand side of the right
Returns a list of nodes that match any of the given validators in the given object.
Send a GET request to the given URL with the given HTTP method headers and data.
expire all keys in the cache that are older than age seconds
str Set a key to a value and persist it to the database.
str Returns the value of the key k. If the key does not exist None is returned
str Check if a key exists in the store.
Check if the given timestamp is a valid chain. If the timestamp is not a valid chain
Create a new instance from a JSON string. If the input is not a valid JSON string
Create a new instance from an XML string. The XML string is expected to be a valid
The rendered content of the template. If the template name ends in str it will be min
Get a list of lines from the log file and call fn with it. If max is
Returns a list of rows from the table. If max is not specified max lines will be
Validate the given token against the given expected data. If the token is not valid returns none
str - Return the fernet key for the given key. If the key does not exist
Validate a token against a list of supported digest algorithms and return the resulting data.
Create a new token for the given object id with the given data. If expires is not
str - > float - > float - > float - > float - > float - >
str - > float - > float - > float - > float - > float - >
Calculate the average duration for a given total duration and number of visits.
str - The name of the source to create and add it to the list of sources.
str - > None - > None - > None - > None - > None - >
str Watchdog for source changes and start new source if needed.
str - > str - > str - > str - > str - > str - >
str Parse a line of text into a dictionary of log data.
Validate that the field expires at a given number of days. If the field does not have
Check if the token is valid and store it in the session. If the token is valid
str The name of the browser or the device if it is a mobile device or a tablet
str - > warn - > warn - > warn - > warn - > warn - >
str Connects to all of the receivers in the system.
Create a link to the record.
Sends an accept notification to the sender of the given request.
Sends a confirmed notification to the sender and receiver of the recid specified in the request.
Send email validation notification.
Sends a reject notification to the sender of the given request. If the request is rejected the
Send a notification using the given template. The template will be rendered with the given context.
str Create a new token and send a link created signal to the client.
Validate a token against a list of valid links.
Revokes this link. Returns True if the link was revoked. Otherwise returns False.
Create a new record in the database with the given recid receiver sender full name sender email
Get by request id and receiver user.
Confirms the user s email address and sends a confirmation email to the user.
str Create a secret link for this message.
Return a hash for the given parameters.
Verifies the signature of a message. Returns True if the signature is valid False otherwise.
Returns True if the given record is embargoed.
A form to request a user s access to a given record. The form will be submitted
Confirm a user s email.
Returns an SSH connection to the remote host.
Reverses the order of a column. If the column is not selected returns none.
Returns a string representation of the selected option. If asc is True returns a string representing the
Returns the items of the query.
Returns the version of the file. If the file does not exist returns an empty string.
str Set new version of the file to new version + new version + new version + new
str Start the timer and connect to the remote server if needed.
Tick the event queue. If the event queue is full queue the event. If the event
Show a list of links for the current user. If a link is revoked the user will
str Stop the timer and stop the factory and the connector. This is a no - op
Empty the queue and send the events to the client.
str The events received from the server. If the max size is reached the events will be
Create the elasticsearch client and start the event loop. The client will be started when the event
str Encodes an event into a protobuf event.
str - encodes events into protobuf message and returns it as a string.
str - > pb2. msg - > str - > pb2. msg - >
str Sends events to the device.
Generate previews for a given image.
Retrieve a file preview.
The main message loop. This is the main message loop. It is the main message loop
bool True if the time has passed since the last hot loop or if the time has passed
Aborts the SASL connection and sets the state to SASL. failure.
Mapping function for SASL - PREPARED SASSL - PREPARED SASS
Returns the admin footer for the current page. This is the default admin footer for the current
Build the payment parameters for a given amount and client reference number.
Build payment parameters for register credit card.
Create a payment with an alias for a given amount and registration id. The amount must be
Get the current version. If no version is provided the current version is returned. If no
str Post construction of the QFileDialog. This is called after the QFileDialog is
str The name of the shortcut that will be used to navigate up when the button is clicked
Called when the user activates an item in the file system. If the item is not
Called when the user selects an item in the filesystem. This is called when the user selects
Navigate to the item at index index. If index is greater than the number of items
str The path to the source file and the path to the target file.
Fetch the children of the current node.
Returns the icon at the given index. If the index is out of range returns none.
Call a command and return its pid.
Get the maximum file descriptor that can be read. If the limit is infinity return the maximum
str Close a file descriptor and raise an error if an error occurs.
close all open file descriptors that are not in the exclude list
str Redirects the stream to the target file. If target is none the stream will be
str Set form widgets attrs.
str app - > str module - > str module - > str module - > str
str Given a module name imports it and returns a list of the imported modules.
Include a template in the context of the current context of the current context of the current context
str Check if path is a valid local file or directory.
Check if url is a valid s3 url.
Get absolute path to template file. If filename is an absolute path return it. Otherwise return
List all objects in S3 bucket.
Build the worklfow as a dictionary.
Execute the command and return the id of the command. If override is True the command will
str Archive all files in a folder.
str mkdir - p - Path to create directory p - Path to create directory p - Path
List all files in the archive that match the given pattern. If no pattern is given all
str Restore a folder from the archive to the given folder. If the folder does not exist
str Creates a new instance of the class with the given access token and environment.
str List all files in a folder. Returns a list of file names in the folder.
Download a file from the server to the given path. If the path points to a file
Checks if the given path exists in the storage. If the path does not exist returns False
str Get the parent of a file or directory.
str Create a new folder at the given path.
str Upload a local file to a given path. The local file must be a local file
str Delete a file or folder from the server.
str Validate storage path.
Creates a new instance of the Storage class with the given access token and environment.
str Create a new instance of this class with the given access token and environment.
Get the metadata for a given entity. If the entity does not exist an exception will be
Delete a project.
Delete a folder from the server.
str Copy a file to a new location on the server.
Get a signed URL for a given file id.
Emits a record to the database. If the record is not a dictionary it will be
Generate a new URL for a given service and version. If a copy is set it will
Returns a copy of the request with the given headers added. If self. copy is True
Returns a copy of the request with the given parameters added. If the request is a copy
Add an exception to the throw list and return a new instance of the exception class and should
Returns a list of the fields to display in the form.
str map job
str Run the oncotator tool on a given vcf id and a given onc
Sort the list by the given function. If a function is given it will be called with
Returns a list of datetime objects representing the timestamp of the object.
Loads the data from a JSON file in the given folder. The data will be stored in
Shifts the time series by t. The time series is shifted by t. The time
Returns the sum of all the values in the array.
rfxcom - Collect RFX coms for a given device. If device is
str username - username to create a new user with password - password to create a new user
Get the list of VN results from the server.
Parse the release results and return them as a list of dicts.
Parse prod staff results and return a list of producers.
parse the results of a character search and return a list of dictionaries.
Parse the tags from the page and return a list of the tags as a list of strings
parse user results into a list of dicts with user name as key and user value as value
tarballs a list of file paths into a tar file.
for all files in a list of paths apply a function to each file in the list.
str Copy a file from job. file to output. dir is the directory where the file
str Returns a list of docker parameters for this host. If no parameters are given all parameters
str Refresh the metadata from the database.
str Returns a list of streams in the database.
str Create a JSON file and export the data to the given directory. If the directory already
str - > None - > None - > None - > None - > None - >
Reset the API key and return the new one.
Returns a list of users in the database. If the database is empty returns an empty list
run the bwa tool and return the ids of the tool and the ids of the tool
str connectordb returns a connection object to the database. If the database object is not
str Add a stream to the database. If the stream does not exist it will be created
str Add a stream to the database. If the stream already exists it will be overwritten.
str Inserts a new value into the stream with name streamname. value must be a
str Start synchronizing the state of the device.
str Stop the timer. If the timer is running the timer will be stopped and the timer
Download a URL to a local temp directory and save it to a local temp file.
str Upload a file to S3.
str Shows a list of labels for a given ontology in a given ontology list.
prints the hierarchy of the given ontology in the format of the given base ontology.
Get the mean insert size for a given BAM file in a work directory.
str Create a new record in the database. If schema is a string it will be converted
str Create a JSON file in the given directory. If the directory does not exist it will
Return a device object for the current node.
get all labels for an ontology
Get the hierarchy of the given ontology.
Get an empty config file. This will generate a new config file and then remove it.
str Get the path to the current mount point.
Add an option to the argument parser.
Create an argument parser for this command.
Create a pipeline command.
Set the HTTP auth for the request and websocket connections. If no user or apikey is provided
raises authentication and server errors if status code is greater than or equal to or equal to
Ping the server to see if it is still alive.
Create a new resource.
Update a resource in the database.
Delete a resource from the server.
Subscribe to a stream. The callback will be called when the stream is received. The transform
str Returns a list of all devices in the device store.
r1 id r2 id r2 adapter fwd3pr adapter rev3pr adapter
run samtools faidx on a given ref id
Run samtools index on a BAM file.
str Runs sambamba to mark duplicates in a BAM file.
str Runs samblaster on the job. file and returns the job. file
r Mark duplicates in a BAM and BAI.
run picard sort by name or by name in the given bam file. sort by name
r1 id r2 id kallisto index url r1 id r2 id
get user affinity for a given test. create or replace temp view test. write. mode
str - > None - > None - > None - > None - > None - >
str Subscribes to a stream. The callback will be called when the stream changes.
str Connects to the server and returns True if the server was successfully connected False otherwise.
Connect to the server and attempt to reconnect to the server. If the server is disconnected the
Resubscribes to all of the currently subscribed streams. This is used to resub
Called when a websocket connection is established.
Called when the WebSocket connection is closed.
Called when an error occurs on the websocket connection. This function is called when the websocket connection
On websocket message. This function is called when a message is received from the websocket. It
str Ensures that the connection is still alive. If it is it will close the websocket
a helper function to select variants from a GATK file.
Check if a BAM file exists in the current working directory and return True if it exists
Write the configuration to a JSON file in the config. json file.
str Get the configuration from the config file. If the config file does not exist it will
Get a term from an ontology by it s IRI.
str Search for an ontology by name and optional fields. If no fields are provided all the
str Suggests an ontology by name. If no ontology is given returns a list of
iter descendants of an ontology
Iterator over all the descendants of an ontology and return them as a list of label objects.
Iterate over the labels of the given ontology.
Iterator over the hierarchy of terms in an ontology.
r1 r2 id r1 id r2 id r2 id r1 id r
Add a stream to the query.
str Start the spark and hdfs containers for the given job. Returns the hostname of the job
Start a job in the spark container.
str Start a datanode for the given job.
Stop Spark and HDFS containers.
Check the status of the container.
Lookup a zone by name and return the name of the zone. If the zone is not
Fetch the configuration from r53.
str Merge a list of chunks into a single r53 config.
Validate a changeset. Returns a list of errors if there are too many changes in the changeset
Returns a list of the best n members in the given list of members sorted by fitness score
Returns the fitness score of the process. If the number of processes is greater than the number
Returns the ave cost function for each member of the group. If the number of processes
Returns the median cost function for each member in the group. Returns none if there are no
Returns the average of the parameters of all the processes in the simulation. If the number of
Returns a list of the members of the process. If the number of processes is greater than
str Add a new parameter to the list of parameters.
Normalizes the keys of a dictionary to make it easier to use the same format as the keys
str Get all the environment variables in the current process.
triggers the given callable with the given exceptions. Returns True if the callable throws an exception
str Given a list of hits return a list of packages sorted by name version and score.
Transform the result of a query into a string of the given type. If the result is
convert html to xhtml
Convert an xhtml element to html.
open a document in a web browser
Drop this node from the tree. If the node is the last node in the tree it
str Drops the tag from the current node s parent and moves it to the end of
Returns a string containing the result of evaluating the CSS expression expr on the current node.
Generator that yields a namedtuple containing all the members of the log handler.
str - > int - > str - > int - > int - > int - >
Returns True if the class is a single class and False if it is a multi - class
is a single module or a single class if it s a single module or a single class
Check if the request contains a list or dict of parameters. If not raise an error.
Check that the id in the request is a correct type. If not raise an error.
Decode a file - like object into a unicode string using the sys. getfilesystemencoding function
str Replace all string values in an object with an escape function.
Returns the codec name for the given encoding or none if the encoding is not supported.
Detect and return the encoding of the input stream.
Get the remote address for a given list of forwarded proxies.
Convert an object to a decimal.
Parse a string and return an Element object or None if the data is not a string.
str Parse the given file and return an etree. Element.
converts a BeautifulSoup tree to a BeautifulSoup tree and returns a list of html. html.
Get the current traceback as a traceback object.
Return the traceback as a string.
str Returns a summary of the error. If include is False the summary will include all the
Generate a plaintext traceback of the tracebacks in the tracebacks section of the traceback file.
str Render the source table as a HTML string.
str Check if the egg info matches the search name. If the search name does not match
Sort a list of links into a list of eggs and a list of no eggs
Get the content type of a URL.
Generator for links in the document. This is a generator that yields a list of Link objects
str Verifiable if the object is verifiable by the current version of the API.
Find all data files for a given package in a given source directory.
str package src dir files files to exclude. files is a list of files to exclude.
Parse requirements from a file and return a generator of requirements.
Join the lines of an iterator into a single string. If the line does not end with
Ignore comments from an iterator of lines. This is useful when you want to ignore comments that
Raise syntax error if node is not an instance of allowed type.
return an ast. Attribute node as string
Convert a JSON string into a number if it s a string. If it s a string
str Pushes the current context onto the stack.
str Pop an item off the stack. If exc is not None the exception will be raised
Return a copy of the current request.
str Match the current request to the current url and return the result as a tuple.
Push the current context onto the stack. If the current context is an implicit context the current
Returns True if the given distribution is editable False otherwise.
Returns a function that will be called when the url value of the app is changed.
str Register a function to be called when the URL defaults have been set.
str Get the root path of the given module.
str Loader for the Jinja2 templates.
str Prints the completion script for the specified shell. If no shell is specified prints the
str Returns the cookie domain for the given app. If the cookie is not configured returns none
str name is purelib name wheeldir is purelib wheeldir is
A generator that yields the paths of the uninstallation files in the given distribution.
str Check if the given version is compatible with the given name.
Build one wheel from req to output dir and return the path to the wheel. Return none
str - > list of all symbols in the given code.
Write a pip delete marker to a file in the given directory.
bool True if we are running in a virtualenv False otherwise.
Get the username of the current process.
Generate a distutils scheme for a given distribution.
Parses the Cache - Control header and returns a dictionary with the cache control arguments.
str Cache the response for the given request and response. If the response status is not equal
str Load a template from a file or directory. If dev is True the template will be
str Save the current state of the file to disk. If the file already exists it will
Convert the given value to the appropriate type.
str Add filters to the filterer.
str Add handlers to a logger.
str Configuring common handlers and filters for a logger. If incremental is set to True the
str Executes a script in the given file with the given globals and locals.
A context manager that overrides the temporary directory with the given path. If the directory does not
str is the revision number of the file in the current working directory. If the revision number
Get an item from an object. If the item does not exist it will be created.
Generate the source code with the given name and filename. If defer is set to True the
Get the default cache for the current process. If the current process does not have a cache
str Find all eggs in a zip archive.
str path - The path to search for distributions. If only is set to True then only
Declare a namespace for a given package name. The namespace will be added to the parent
str - > list of mro of class cls - > list of mro of cls
Find an adapter for an object in a given registry.
str Ensure that the given path is a directory.
Iterate over all entry points for a given group. If no name is given all entry points
str Returns True if the distribution can be added to the distribution set.
Evaluate a marker in text and return the result as a string. If no marker is found
from pip. vendor. vendor. markerlib import markerlib. interpret and return the result
Format the given record with the current indentation and return it as a string.
Get the decimal quantum of num with the given precision. precision can be an int or
Get the decimal precision of a number.
Returns the scientific notation of the given value.
Get the class that is unpatched by checking that it s module starts with str.
str - Check requirements for distutils. distutils. distutils. distutils. requirements
Fetch and build an egg package from the dist directory.
do dice roll
Convert obj to a price object. If obj is a string it will be converted to price
Returns an attribute validator for price values. The validator can be either a string or a list
Validate a request object.
Get the method name from the arguments. If the method is not found the error message is
str Apply a method to a list of parameters and return the result as a Python object.
Returns the blueprint of the module or None if the blueprint is an old module.
Returns the blueprint for this rule.
Make an abstract distribution from the given requirement.
Walk through the requirements to install and return a list of all the requirements that were installed.
Returns a list of all the packages in the distribution s namespace sorted by name.
Serialize the given object to JSON. If the object is a model or a query set serialize
Tokenize the given doc with the given annotation.
Merge annotations from old to new with the annotations from new.
str Copy annotations from one token to another.
Takes a list of tokens and compresses them into a single list of tokens.
str Converts a list of tokens into a list of HTML tags using the given markup function.
Expands a list of tokens into a list of tokens. If equal is True then the
Locate unbalanced end from pre and post delete.
Takes a list of chunks and returns a list of tokens that can be used to parse the
Flatten an HTML element into a list of lists. If include is set to True then only
str Splits the given text into a list of words. Returns an empty list if the
str Start tag of an element.
Returns a string representing the end tag of an element. If the element ends with a whitespace
serialize a fragment of an etree. Element into a string. If skip is set to True
fixup ins and del tags from block - level elements. This is a hack to fix
Generate a cache URL.
autolinks an element and its children if they are not already autolinked
kill all conditional comments in the given XML document.
Parse an HTML string and return a Document object.
Export the repository to the given location.
Get the revision number of the svn repository at the given location. If no svn
Returns the name of the module. If the module is a module the name of the module
Returns True if the exception should be propagated. If the exception should not be propagated returns False
Returns the full path to the instance in the given package or None if it can t be
Update the template context with the current request context.
Handle an HTTP exception. If the exception is not handled by the blueprint the exception is returned
Handle an exception and return the response. If no handler is registered the error is returned.
raises routing exception if debug mode is on and the request method is not one of the
str Dispatch the current request and return the response. If there is an exception it will be
Makes a default response object based on the current request context. If the current request context is
str Create a url adapter for the given request. If no request is given the url is
str - > None - > None - > None - > None - > None - >
Yields unique values from an iterable.
Handle the requirements of the given package in the given metadata dictionary.
Convert a Requirement object into a string that can be used as a requirement requirement string.
str - > pkginfo. txt - > pkginfo. txt - > pkginfo.
Generator that imports all the modules in the project.
Returns a generator of all classes in the project.
Generator that yields all methods and their names in the context of this class. Method names are
Returns True if path is a module path False otherwise.
A generator that walks the directory tree starting at basedir and returns the root directories and files
Dumps the default values for the given keyword arguments. If the current app is not configured the
Loads the default values for the given argument. If the current app is the current application the
Set multiple keys with the given mapping. Returns True if the key was successfully set False otherwise
Increments the value of a key by delta. If the key does not exist it will
Dumps an object to a string.
Build editable options from a request string.
Populate the link attribute of this requirement with the relevant information from the given finder and upgrade.
Ensure that the source dir is set and return it. If not create it and return it
str Remove temporary source and temporary build directory.
str Returns the distribution for the given egg info. If the egg info does not have a
str Returns a list of site config directories for a given app name.
str Returns an iterator over all the files in all modules in the system. This is useful
str Restarts the process with the given name. Returns the exit code of the process.
Convert a string to a text type. If s is none return none. If s is
str Returns the path to the CA bundle or None if the ca bundle cannot be found.
str Parse an HTML document into a Python object. The treebuilder argument can be either a
Parse the given stream and return the document as a unicode string.
Parse a stream and return the fragment as a string. If the stream is not a string
str - > list of transmissions for a given word
str - > list of tokens - > list of tokens - > list of tokens - >
str Binds the server to the host and port specified by self. host and self.
str Prints a report message to the console.
str Loads the bytecode from a file - like object f.
Returns a stylesheet parameter string from a dict of parameters and a dictionary of keyword arguments.
str Runs a command in the context of this process. Returns True if the command was
Get the version of the Python interpreter.
str Returns a list of distribution objects for the given location and distribution name.
str Find all external links in a page.
a wrapper around urllib2. urlopen to allow for local files and directories to be opened.
Returns a list of sys. path that has been removed from sys. path.
Return a list of all directories in sys. path.
str Add a package to sys. path and return a set of known paths.
str Adds all packages in the given directory to sys. path and returns a list of paths
bool True if enableusersite is True False if enableusersite is False False if enable
str - > unicode - > unicode - > unicode - > unicode - > unicode - >
Set sys. encoding to str if available. If not available use sys. getencoding.
force global eggs after local site packages
Fixes the sys. path so that it can be used as a class path.
A wrapper around subprocess. Popen that enqueues stdout and stderr for processing.
Check if we have a pyrex implementation. If so return True. Otherwise return False
Convert pyx sources to language.
This is the main function for the debug application. This is the main function for the debug
Get the content of a file. If the file does not exist it will be created.
str - > bool - > bool - > bool - > bool - > bool - >
str unpacks a file from a URL to a location.
Download a file from a given link using the given session. Returns the file path content type
str Check if a file exists in the download directory. If it doesn t exist return none
Register a currency with the context.
Exchange a component to a backend. The backend is used as the base of the component.
str Decodes the given data according to the given decoder. If the decoder is set to
This is the default template context processor. It returns a dictionary with the current context as the
Render the given template with the given context and send it to the app.
Render a template with the given context. If a template name is given it will be used
Render a Jinja2 template from a string. The context will be passed to the template
Parse a version string into a python version string.
bool - True if the variable is declared False otherwise.
str Identifiers are declared locally or parameter names and undeclared ones are undeclared.
visit a FromImport node and write it out to the stream.
str Service factory.
str - > unicode url - quote a string or text - > unicode string - > unicode
str Matches a requirement against a list of wheels.
str Populate a requirement set with a set of requirements based on the command line options.
str Exports the image to a temporary location.
str - > list of amazon product objects for a given response. group - > list of
Iterate over all pages of results.
Returns the closest ancestor of this node. If no ancestor is found None is returned.
Returns a list of all children of the element.
Get the value of an element from the tree.
Get the text of the element at the given path. If the element is not found return
Get element as datetime. date. If not found return none. If not found return None
Get price and currency.
Get the price of the item in the list and return it as a float and the currency
If the request is a string return the cached response. If the request is not a string
Build a response from the given response. If the response is from cache the response will be
Turn a string into a title.
str - > bool - > bool - > bool - > bool - > bool - >
Verify that the given signature is the same as the signature of the given key and value.
Derives the secret key from the salt and the secret key. If the key is not
Get the signature for the given value.
Signs a value with the key and returns it as a string. The value must be
Verify the signature of a value against a base64 - encoded base64 - encoded signature.
Unsign a signed value. If the signature is not correct raise a BadSignature exception.
Signs the given value with the current timestamp and the signature of the given value.
Validate that the signed value is a valid signature. Returns True if the signature is valid.
Serialize an object to a string using the given salt. If the object is a string it
Raises an exception with the given error message for the given request id and the given error
Return a generator that yields all packages that are parents of the given list of packages.
str Walks the given path and returns all subdirectories relative to the given base path.
Prepare a response for the given request. If the request contains a header that is not present
str Unsigns a wheelfile.
unpacks a wheelfile to a directory
str Installs a list of scripts for each distribution in the given list of distributions.
arrange all the graphs in the graph graph and redraw the graph canvas.
Redraws the canvas of the graph.
Returns the node with the given id or None if no node with the given id exists.
This method is called when the directed state of the graph has changed. If new is True
add edges to the graph object and update the object with the new edges. name can be
This method is called when a component is changed. It removes the old component from the canvas
normal left click event handler
This method is called when the diagram canvas is changed. It is called each time a tool
Clear the diagram canvas and redraw the viewport.
Called when the domain model is changed. This method is called when the diagram is changed.
str Unmap a model from another model. This method is called when a model is removed
Map an element to the diagram.
Parses an xdot data string into a list of Python objects.
Process the font token and set the pen. font attribute.
str Processes an ellipse token and returns an ellipse object.
Process a polygon token and return a polygon object.
Process a polyline and return a polyline object.
Process text tokens.
str Prints image tokens to the console and returns a list of images to be processed.
str Render a grid file to a response.
Save an object to the. dot file.
Load the. dot file into a Python object and return it as a string.
str is_in - check if the given point is inside the rectangle of this rectangle.
draws the bounds of the object to the given canvas context object.
Perform the wizard and return True if the wizard was successful. If the wizard was successful the
str Create the database and start the session. The database is stored in the context. db
Parse the dot code and store the resulting graph in self. model.
str Creates a new model.
Open a file dialog and parse the dot file and save the model to self. model.
str Save the model to a file. If the file does not exist it will be created
Save the model as a file.
str Configures the graph of the model. This is called when the model is initialized.
Configures the nodes view in the model.
str Edits the edges view of the model.
Shows the godot of the user. This is used to show the godot
Add a new node to the graph.
str Add an edge to the graph.
str Add a new subgraph to the list of sub - graphs.
str Add a new cluster to the list of clusters.
str Request a graph of the model to be viewed. If the model is not selected
Generate the godot options for the widget.
Configure the dot code for the model.
str Prompt on exit.
str Move the components to the origin of the pen.
Save the data to a file - like object or file - like object.
Load an object from a file - like object or file - like object.
Save the object to a file with the given format. If no format is given the file
Load an object from a file. If no format is given the file extension will be used
A property that adds an alias to an object.
str Parse a text file into a sequence of words.
Returns a list of the start words of the document.
str Add a chain to the list of chains.
str Remove the chain with the given name. Raises error if the chain does not exist.
str Builds a chain from a source string.
str Create a new dot file and return it as a list of bytes.
Delete a node from the graph. If no node is given the node is deleted from the
str Returns the node with the given id or None if no node with the given id exists
str Delete an edge from the graph. Returns None if no such edge exists.
str Add a subgraph to the graph. If no subgraph is given the default subgraph is added
This is called when a program is changed. It logs a warning if the program does not
str Sets the node lists of all edges in the graph to the new node lists.
Parse a dot file into a godot graph.
parse dot data from a file or file name.
Build a top graph from a list of tokens.
Get the time units and multiplier for a given number of seconds.
Format a duration in seconds into a human - readable string.
on path change the name of the editor and load the new graph from the new path.
str Create the UI for the graph tree editor and return it as an instance of the UI
str Splits an iterable into windows of a given length. If overlap is set to True
Returns a list of all the children of the given object.
str Appends a child to an object.
str Inserts a child into an object at a given index.
str Delete a child node or edge from an object.
When children are replaced add a listener to the object. The listener will be called when the
This method is called when the children of an object have changed. It is called when the
Get the label of the given object.
Set the label attribute of an object.
Called when the label of an object has changed.
str Creates a new graph and a new UI for the edit traits. This is done by
Updates the editor based on the current state of the editor.
Add listeners to the node and edge of the current object.
replace old nodes with new nodes and remove old nodes from the graph.
nodes changed handler for the nodes property. This is called when the user changes the state of
add nodes for a list of features to the graph
Replace old edges with new ones.
str Edges has changed. Delete all edges and add them to the graph.
add edges to the graph for a list of features
str Parse an xdot directive.
called when the user changes the position of the component.
create a new node object from a graph row or create a new one if it doesn t
str is the name of the node in the graph editor is the name of the node in
prepares the database connection for use by the template engine and adds it to the context.
parse xdot drawing directive
str xdot label directive
str Called when the drawing of the widget has changed.
Called when the position of the component has changed.
Called when the position of the widget has changed.
normal right down event handler
Shows a list of all the available styles and their definitions.
str Draws the main layer.
Check if a point lies inside the polygon.
str Draws the main layer of the pen.
str Handle an event by calling each registered engine s method with the given event name and arguments
str Runs the function in a separate thread. If the function returns an error the function
Get the full url for a given page number.
Render the prev and next links.
Returns a string containing the seo links for the current page. If the total number of pages
str Create a URL identifier from user and password.
discovers all modules in a given directory and returns a list of those found.
rdiscover all modules in a given directory and return a list of all found modules.
rlist all modules in a given module.
str Ensure that the given path exists. If it does not it will raise an exception.
str Create a blob with the given key with the given contents. If the key already exists
Check luhn card number.
str Loads a module from the given module name. If the module name is not the
str Add a path to the list of paths to search for files.
str Finds a module in the list of paths.
str Splits a line into two lines of a given length. If the line is longer
str Removes namespaces from the root element.
Returns a string describing the consistency of the package. If no version is given the current version
Create a new instance from a dictionary of key - value pairs. The keys are the keys
Merge a new dict with the current one.
str Execute all the actions in the list of actions in the context of the current working directory
Add details to a message to be displayed to the user. This method is used to add
str Emit a record to the queue. If the queue is full the message will be sent
Add the rendition to the context if it s not already present in the context.
Log an attempt for the given key. If the key is already in the list of attempts
Add a url to the queue.
str Start all workers. workers per task is the number of workers per task. workers per
str Set the value of a key to a given value. If the key does not exist
Get a value from a key. If the key does not exist a KeyError will be raised
r recurse returns a dictionary of values for a given key. The keys are base64 encoded
str Returns the header for the given key. If recursive is set to True it will return
Delete a key. If recursive is True the key will be recursively deleted. If recursive is
str Plot a heatmap of a set of records.
str Add months to a timestamp.
str Add months to date
Check if the current date is a christmas period.
Use a music service or create a new one if it doesn t exist.
str Name of the storage service to use. If the name is not found it will create
str - > dict - > list - > dict - > list - > dict - >
Returns a list of items from the JSON file at self. path. If self. gz
Write x and y to the file at self. path. If self. gz is True
filter by label
Calculate the average of the records in the dataset with the given label. The label can be
str Restore the data from the session to the given data dict.
str Merges dict b into dict a.
str Find all the blocks in the installed apps.
Verify that a block is registered and that it is an instance of the given block type.
str Registers a block to the registry.
Remove a block from the registry. Raises an exception if the block is not registered.
convert a mp3 file to a mp3 file
str - > str - > str - > str - > str - > str - >
This function is used to handle a redirect to a different endpoint depending on whether or not SSL
str - > dict - > str - > str - > str - > str - >
Parses a list of strings into a list of strings.
str Resize an image to fit the given width.
str Downloads a file from YT and returns the name of the downloaded file.
Connect to the server and create a new folder if it doesn t already exist.
Upload a file to the server and return the name of the uploaded file.
str Create the music folder if it doesn t already exist.
Update the filenames based on the sky state zenith azimuth and number of bands.
str Method to read an aphi from a file.
str Scale the A - Householder by the given scale parameter.
str Reads a pure water absorption from a file.
str Reads a pure water scattering from a file.
str Reads an iop from a CSV file.
str Write an array of integers to a file. iop is an array of integers.
str Scattering Percentage
str Builds the a attribute of the object.
str Builds the c attribute from the current values of self. a and self. b
str Builds all IOPs.
str Batch parameters
str Read a parameter file and return as a dictionary. The file can be a text file
convert string to list of floats
str Set the signal handler for the given signals.
A pseudo handler that logs the signal and frame as a warning to the log.
This is the default signal handler. It is called when the user presses SIGHUP
Pause the process for a given number of seconds. If the number of seconds is greater than
str Abort the process with the given signal and exit with the given number.
str Displays the current status of all registered callbacks and resumes the process when the signal
str Unregisters an event from the event list.
Fetch a metric and return it as a list sorted by the number of times the metric was
str Name of the function to be used as the signature for the function. The signature is
str from partial object
new argv and extra argv. new pargs and kargs can be passed as keyword arguments.
ignore certain metainf files and return True if the file should be ignored False otherwise.
str - > str - > str - > str - > str - > str - >
str - > int vlq2int - > int
str Header of the archive. If the header is a regular expression parse it and return the
Returns the duration in seconds as a string. If the duration is greater than the number of
prints details about the map duration and version of the player in a human readable format.
str Get the data from the user interface.
Search for a file and display it if it is the same as the current file name.
str Write the current batch to a file.
str the file containing the data to be processed and the wavelength of the data to be processed
str Displays the connection between the line and the wavelength and the data wanted.
str Displays the error message.
str Hides the error message.
Run the simulation.
Cancels the planarrad dialog.
Quits the application.
Saves the current figure to disk.
Opens the log file and displays it in the editor.
open the documentation file in the current working directory and display it in the window.
str Runs the prerequisite actions.
str Click event handler
str Mouse move event handler
str Display the target of the graphic at the given x and y coordinates.
Returns a lockset with the given genesis block and private key signed by the given private key
Sign the message with the private key privkey. privkey can be a string or an
str - > sha3 hash of the message.
Check if the connection is valid and has the required number of quorum or noquorum
Issue funds for a user. Returns ok if successful otherwise returns false.
Returns the last lock in the list of rounds. If the list is empty returns the last
Returns the last voted block proposal or None if there is no vote on this block.
Returns the last valid lockset or none if there are no valid locksets.
Get the timeout for the current round. If the round has not been set yet return None
str Called when a proposal is received from the network.
Make a list of privkeys of a given number of colors.
str Duration of packet to delay between sender and receiver. num is the number of delays
Delivers a packet to a sender on the given receiver with a round - trip delay.
Convert an address to a native contract class.
Update the filter by adding data to the filter list. Returns True if the data was added
Convert a vgg string to an img string.
Convert an image to a vgg format.
Get the function for a given layer.
Get the output of a layer. If the layer does not exist it will be created.
Get the features for a given input and layers.
Create a new key file at the given path. The file will be created with a random
Return the exit code of the process. If the process is already running raise an exception.
Release all resources associated with the table. If the table is none raise giraffe
Returns a list of the table names and their names in a string format.
str Function to compile a list of source files and return a list of all compiled files.
str Find the teradata home.
Get the value of a key. If the key does not exist it will return None.
str - > None - > None - > None - > None - > None - >
table - Prints a table if the line is longer than the number of lines or if
str Write the default configuration to a file. If conf is none write to home file.
Set the names of the columns to be filtered. If no names are given all columns will
Convert the result set to a string using the given delimiter. If no delimiter is specified the
str - > float - > float - > float - > float - > float - >
str Given a string return a dictionary of all the gains in the string.
str - > dict - > dict - > string - > dict - > dict - >
str Wrap text with the specified number of spaces. indent can be a string or a number
Detects the devices and returns a tuple of the list of devices and a string describing the
Set the frequency of the center of the PSD. The center frequency must be between 0 and
str Returns the frequency and pwr of the Fourier transform for the given state.
Wait for the next result to be available and return it. If there are no more results
str Update the state of the Welch signal with the data from the input array.
str Read header and pwr from file - like object f - file - like object f
str Write a PWM to a file - like object f - a file - like object
Submits a function to the pool. If the pool is full the function will be executed
Returns the number of repeats for the given integration time. The number of repeats is the number
Create a buffer with bins bins base buffer size max buffer size max buffer repeats base buffer size
str Create the buffer and the PSD and write it to the device.
str Stop the stream and close the underlying data writer.
str cmake args. arg is a list of command line arguments to run cmake.
Returns a set of datetimes that are within the given time range.
Return a datetime with the same hour minute second and microsecond as the given datetime.
Convert a datetime to a mask of days in the week of the week. If the week
str - > Set of datetimes to be deleted.
str Given a list of dates return a set of dates that should be kept.
str - > str - > str - > str - > str - > str - >
Get SPI control byte.
Read the bit num from the specified address. If the bit is set to 1 the address
Write a bit to the specified address. If value is True the bit will be set to
Get the number of the bit in pattern. If pattern is equal to num return none.
Bring a gpio interrupt into userspace.
str Set gpio interrupt edge to specified string.
wait until a file exists
str Register a function to be called when a pin is settle.
deregisters a function mapping from a given pin number and direction. If direction is none
str Enables the GPIO interrupts on the userspace. Raises an exception if the
Send a number of bytes to the SPI device and return the address of the received bytes.
Renders the tab and its children to the given template. If no template is specified the default
Returns True if there are any errors in the given form otherwise returns False.
str Render a link to the given form with the given template. If the form has errors
Extract the version of a package from the configuration file. If the package does not exist it
Format the value of str in the form kwargs and return it as a dict.
Check the status of the response and raise an exception if the status is not valid.
str Get a resource from the API with the given parameters. If no parameters are provided the
calc humidity from temperature and dewpoint
calculates the dewpoint for a given temperature and humidity
Publishes the message to the server. Returns a string with the message published to the server
Calculate the CRC for the given data.
Verify the CRC of the data. If the CRC is valid return True otherwise return False.
Unpack a storm date into a datetime. datetime object.
use rev b if archive_rev b is True otherwise return False. archive_rev b
wake up the device and wait for it to be ready.
Send a command to the device and wait for a response.
get new archive fields from dmpaft
Parse the archive and store the result in the self. fields attribute.
str Given a station and a list of pub sites updates the weather of each site in the
Initialize the logging system. This is the main entry point for the logging module. This is
Return a list of pub services for the given options.
get the value for the given station and interval. If the value is not found return no
str Set pressure dewpoint humidity tempf windgustdir windspeed windd
str Method to set the args of the command.
Publish the command - line arguments to the file specified by the self. file name parameter.
Returns True if the request fulfills all of the given requirements. If no identity is provided
Push a new context onto the stack. If parent is True the context will be appended to
Pop a value off the stack and raise an error if the value is not the same as
Returns a context manager that overrides the current value with the given value.
Push a new context onto the stack. If parent is True the context will be appended to
Pop an additional context from the stack. Raise runtime error if the stack is not empty.
A context manager that adds additional information to the stack. If parent is True the additional information
Returns a list of field names with duplicates removed.
Interprets the results into a string. If the results contains updates the string will be
extract params from query
Returns a pandas DataFrame with the data from the data set.
Returns a networkx graph of the results in the form of a multi - di graph.
str - > matplotlib. pyplot. plot
Returns a CSV representation of the table as a string. Optionally a filename can be specified.
Returns the context data for the widget.
Returns a list of tuples with the widget name widget and widget position sorted by position.
Returns a list of widgets that need to be updated.
str Register a widget with the widget manager.
str - Unregisters a widget from the widget manager.
Get the last update of the dashboard.
Save the given setting to the database. If the setting does not exist it will be created
Returns True if the update interval has passed since the last time it was last updated.
concatenate two arrays along a given axis.
Check if the given arguments are compatible with the current spark context.
str - > tuple - > int - > tuple - > list - > tuple - >
Wrap a function into a bolt array.
Return a new matrix aligned to the given axes with the given key shape. If key is
Convert the array to a spark - compatible array using the given SparkContext. If axis is
Returns the tordd of the array along the specified axis.
str Get number of chunks from plan.
Returns a boolean array of length n where each element in the array is true.
Return a new DStream repartitioning the elements of this DStream.
str Stacks the data in the RDD to a new array of the specified size.
Aligns the data to the specified axis.
Returns the first element of the RDD.
Return the mean of each group along the specified axis.
Return a statistical representation of the variable along the given axis.
Compute the standard deviation of each group along an axis.
Sum each element in the dataset along the specified axis.
Return the maximum value of each element in an array along the specified axis.
Return the minimum value of each group along an axis.
str Transpose the array.
str Swaps axis1 and axis2 and returns a new matrix.
Reshapes keys and values to the given shape.
Reshapes the key and value arrays to the given shape. Returns the index of the
Convert each element in the RDD to a new dtype.
Returns a new RDD with all elements in the RDD that are within the range [
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
Convert an argument to a tuple if it s not already a tuple. If it s a
str - > tuple - > tuple - > list - > ndarray - > str - >
Check that the shape is valid for the given axes.
Returns True if a and b are all close i. e. if a and b are
Convert a list of integers to a list of floats.
Convert a slice to a slice of a given dimension.
Check if new and old can be transposed.
Check if new and old have the same length.
str Concatenate a list of ndarrays to a single ndarray.
str Iterates over an array and expands each dimension by the number of extra dimensions.
Lookup a constructor for the given arguments. If no constructor is found an error is raised.
Construct an array of ones with the given shape and dtype.
Construct an array of zeros with the given shape and dtype.
Concatenate two or more numpy arrays and return a new bolt array.
Calculate the discrete likelihood of the data given the lower bound and the alpha value of the alpha
Returns the most likely alpha value for a given range of numbers.
str Calculates the discrete alpha of the data from xmin to xmax. The alpha of the data
a function to find the best alpha of a set of data with a given number of alpha
str Plot the PMF of the data. x is the data to plot. xmin is
str Prints the lognormal distribution of the data. If doprint is True
Sanitizes turbo tags attributes and strips off any tags that are not allowed.
str The Yandex analytics key is the Yandex identifier. The Yandex
Returns a list of tag names and their string representation. If tag name is not in tags
str - > str - > str - > str - > str - > str - >
sha256 hash of the key and return the result as a string.
sha512 hash the key and return the result as a string.
Parse a long from a byte string.
decode base64 - encoded public key
SSH RSA key
SSH DSS command.
str - > int - > str - > str - > str - > int - >
Process ED25516 data.
str Parse the keydata and return a key object. If no keydata is provided the
Returns a list of mechs that are available on the device.
The main entry point for the script.
str Init function for setuptools and distutils. This is the main entry point for the
Create a wave file and yield it to the context manager to close the file when done.
Returns the HTML page for the H5BPS static page.
Returns a normalized version of the Django frontend. If no version is given the default version is
Django frontend fontawesome.
Django frontend modernizr.
Django frontend jquery template.
Returns the Django frontend jqueryui page. If version is None the default version is used.
djfrontend. datatables. datatables. datatables. datatables. datatables.
Returns a string with the datatables css file. If no version is specified the default version
Django datatables themeroller.
djfrontend. jquery. formset
djfrontend. jquery. scrollto
Returns a jQuery smoothscroll template.
Returns the HTML for the twbs page. If no version is given the current twbs
Returns a string that can be used in the Django ga API. If account is not specified
Return an iterator over the hashes of the given user for the given amount of minutes.
Calculate the expiry time based on the number of minutes and the number of valid minutes.
Generate a token for a user based on the given purpose and number of minutes valid.
Serialize a User instance to a JSON - ready dict.
str Update a user s profile. update can be a dict or a list of dicts.
Raises meteor. error. MeteorError if authentication fails.
Validates a token and returns a validated user object or raises an exception if the token is invalid
Check if the current request is secure or not.
Get the username of a user. If the user is a string or a dict it will
Create a new user and return a token.
str Log in a user and create a sub - id for it and update the user s
str Log out the current user and remove the current subid from the user s subscriptions.
Authenticates a user with a password or a resume token. If a resume token is
Authenticates a user with the given username and password. If the user is active it
Login with a resume token and return the user token.
Forgot password.
reset password for a user by token and new password
str Merge two dictionaries into a single dictionary.
Get meteor id for given object or model and pk. If obj or model is
get meteor ids from alea model and alea object ids
Get object id from meteor id.
get object ids by meteor ids
get object by meteor id
Set the default forwards for the given operation.
Set the default values for all objects in the model. The default values are the primary key
Truncates the database forwards.
Truncates the database back to the given range.
str - > None - > None - > None - > None - > None - >
str Set undefined options to the default values and then call the build function to finalize the options
Convert a path to a directory.
Randomly seed the random number generator with the given values. If no values are provided random
Returns the current state of the state machine as a dictionary. The keys are the character the
Generate a random string of the given length with the given alphabet.
Generator over all the API endpoints in an object.
Clear the api path map and all of the api providers.
Pretty - print a value to stdout with a number of spaces between each line and a newline
called when the websocket connection is opened.
Close the connection and delete it from the pgworker pool.
str Message received from the client. This method is called when a message is received from the
Generate ddp frames from a message. The message can be either a string or a list
Process a message received from the server and dispatch it to the appropriate handler or reply to the
dispatch a message to the appropriate handler based on the message type and the kwargs passed in.
recv connect to the remote server and return the id of the connection to the remote server.
Sends a ping message to the client. If no id is given the message will be sent
Send a sub message to the server.
Unsubscribes from the channel. If no id is given replies to all channels.
Send a request to the server and receive a response. The response is sent to the client
DPP - SOCKJS info response generator.
str Main entry point for the command - line tool.
str Prints a message if the verbosity level is greater than or equal to the number of
str Stop all servers and wait for all threads to finish.
str Runs the pgworker and waits for all threads to finish.
Run the psycopg2 command loop.
A greenify function that patches psycogreen and psycogreen.
Generate a meteor random id.
Autodiscover the DDDP API from a string and register it with the api
Returns a dict with the error reason details err and kwargs as well as any additional keyword arguments
Get an object from the registry. If the object doesn t exist it will be created.
str Emit a log record to the meteor logger.
Add a resource object to the router.
Send a message to the device.
sends a message to a list of registration ids and a message to a single registration id
Fetch all inactive registration ids from the apns server and return them as a list.
Sends a GCM message to the given registration id.
Send a bulk message to a list of registration ids. The registration ids can be a list
Send the message to the device and return the result as a JSON object. If ids is
Send the data to the API and return the response as a string.
str Get a model class from a given module and class name.
Search giphy.
Translate a giphy term to a giphy phrase.
Returns a list of trending giphy objects.
Returns a string representation of a gif with the given id. If no id is provided the
Returns a screensaver for the given tag and API key. If no tag is
Upload a file with the given tags to the Giphy API.
Normalizes the given data to be an integer. This is done by converting all keys to integers
Fetch data from the given endpoint with the given parameters. Raises an exception if the data is
fetch trending giphy images for a given rating or all giphy images
str Returns a giphy image object for a given gif id. If strict is True
Upload a gif to the Giphy API. If username is not specified the upload will
This method is used to set the access control of a Youtube video. It can be
Authenticate to Youtube using the provided email password and source. If the Youtube service is
Upload a video to Youtube.
Check the upload status of a video.
Update a video. You can change the title description keywords and access control parameters. You can
Delete a video.
Check if a video is available or not.
Returns a video object for the given video id. If the video is already uploaded it will
List all videos for a user. If no username is given the currently logged in user is
Upload a video via the youtube direct upload form.
Upload a youtube video to the current user s account.
Upload a youtube video.
Remove a video from youtube.
Get the entry of the video as a string.
Saves the video. If the video has no ID it will create it. If the video
Deletes the video from the server.
Update the metadata of a container.
Update a metadata field.
Update the current object with the given attributes and return the updated object.
Parse a string into a list of nodes.
Return a string representation of a list of trees.
Load a file - like object from a file - like object or file - like object.
Read a file into a Python object. The file must be a file - like object.
str Parse a node string and return a Node object.
Creates a new node with the given name length and optional list of descendants.
Return a string with the newick of this node and all of its descendants.
Returns the node with the given label or None if no node with the given label exists.
str Prunes nodes from the tree that are not in the given leaves. If inverse is
Remove all internal names from the tree.
Remove all leaf names from the AST.
Dispose a JSON string and return a list of the disposed strings.
str Require a setting to be set. Raises exception if the setting is not set.
Returns a list of all the arguments with the given name. If strip is set to True
Returns an asynchronous version of the given callback. If the callback is a function it will be
str Get a cookie by name. If the cookie doesn t exist default is returned.
str Clears the cookie with the given name. The cookie will be removed from the session
str Authenticates the user and redirects the user to the OpenID server.
request Get authenticated user
str Returns the request parameters for an OAuth 2. 0 or 3. 0 request.
str Authorize the user to perform an OAuth 2. 0 authorization request.
concat a list of strings to a url. If the url already ends with a string it
str Parse a line of text into a key and a dictionary of parameter names and values.
str Add a new item to the list. If the item already exists it will be appended
Get a list item by name. If the item does not exist it returns an empty list
str Parse a single line of text and add it to the dictionary. If the line is
Parse a string of headers into a Headers object.
Normalizes a header name. If the header is already normalized it is returned. If the header
Convert a unicode string to UTF - 8.
Convert a bytes object to a unicode object.
Convert a bytes object to a string. If the value is already a string it is returned
Recursively convert bytes to unicode.
This method is called when the bottle app is created. It will check all plugins for
Select the best matching policy for the given origin and request method. If no matching policy is
str Given a grid of points and a spacing return the number of points that are occupied
str Write a grobox to a grofile.
str Write a PDB file with a title a list of atoms and a box to a file
str Calculates the numbers of the molecules relative to the total number relative to the total number
resizes a binary quadratic object to match lipids and lipids in lip
str - > iterable of strings from a resource file.
Adds a message to a user s messages list.
str Prints a message to a list of users.
Get the messages for a given user. If the user is not found None is returned.
Process the response. If the request is a string and the user is authenticated add the message
check config file
Verify that msg. profile is in cfg. data. If not raise an error.
retrieve data from config
Retrieve the password for a message from a config object.
str - Update config data for a given message.
update config. pwd with the data from the given message. msg is a config object.
Create a new profile from the user input.
Display the required items for a given message type.
get data from user
get auth data from user for a given message type
Configure a profile with the given data and auth.
str Write data to a profile.
write auth data to config. cfg.
Send the message to the server. If encoding is not specified the message will be sent as
Create a message of the given type.
Validate the input for a given message type and attribute. If the input is invalid return the
Check if the value is a valid phone number or url.
str - > None - > None - > None - > None - > None - >
whatsapp validates whether value is a valid URL or an integer. If value is a
Coroutine to send a message to the server.
str Add a message to the message queue.
str Get the body from a file. If the file does not exist it will be created
str - > str - > str - > str - > str - > str - >
Send a message to the client.
Get the chat id for a given username.
send the content of the message to the server
Construct the message and send it to the client.
str - > tuple - > tuple - > tuple - > tuple - > tuple - >
Generate an email from the given data.
str - > list to string - > list to string - > list to string - >
Add the body to the message.
Add attachments to the message.
get a new SMTP session from the server. If the server is running in an SSL connection
Returns an SSL connection to the SMTP server using the default SSL context.
str Create a new SMTP session and start TLS on it.
Send the email to the specified recipients. If verbose is True the message will be printed to
str Save the model to a file. If filename is none save the model s filename.
str Unload the image.
Get a region of the image. The region is defined by the coordinates x1 y1
Check if the dictionary is well - formed. If p is True return True otherwise return False
str Remove all items from the list.
str Read the next chunk of data from the file and store it in self. data.
Delete this chunk from the file and resize it to the size of the current chunk.
Resizes the chunk to fit the given data and size. If the chunk has a parent
Insert a new chunk into the file. If the chunk already exists it will be re -
str Save the frame to a file. If filename is none the current filename will be used
Delete a file from the cache. If no filename is given the current filename is used.
parses a file and returns a list of the parsed lines.
str Process a single line of text and add it to the list of lines to be processed
str The lines of the source code. This is the first line in the source code.
Draw a string at the given coordinates in the given font at the given coordinates.
Parse an ISO 8601 time string into a datetime object. The timezone is set to UTC.
make html words from list of words and return it as a string.
str Make html string from a word. If the word is a crossref it will be
Make a paragraph with the given words. The words can be a list of words or a
make html code from a list of lines. lines should be a list of lines to be
Make an html string from a list of items. Each item is a code or a paragraph
str - > None - > None - > None - > None - > None - >
str Update the parents of a file with a new delta. delta is the number of bytes
Function to run bacon event loop. game is the game object to run the event loop
str Register a mapping for a given vendor id and product id.
Get the name of a controller.
Sign a string with the AWS secret key.
Get the request headers for the request.
Sends a GET request to the API and returns the response as a string.
Sends a POST request to the API endpoint with the given data and headers.
Sends a DELETE request to the API endpoint with the given path and headers. Returns the response
Convert a value to a string of the given kind. If the value is not a string
Change resource record sets.
Returns the size of the packet in bytes. If the packet is complete the size of the
str Find the last Ogg page with the given serial number.
str The name of the section to set. If the section does not exist it will be
str Add markup to self. markups and reset self. markup to none.
Process the content and return a list of markups.
str Return the markup object for the given tag name or none if no markup is found.
str Create a new hosted zone with the given name caller reference and comment. If caller reference
Lock a file - like object. Returns True if the lock was successful False otherwise.
str Insert bytes into a file - like object. The file - like object must be opened
Delete num bytes from a file - like object.
Convert data to UTF - 8 and return it as a string. If data is a bytes
str - Action to add or remove a record from a route53 record set.
str Parse a change info element and return it as a dictionary.
Measures the width of a string.
str True if any of the initial values in self. initialvals have been modified False otherwise
Delete this hosted zone.
Save the resource record to the hosted zone.
Read size bytes from the file and return it as a string. size must be less than
str Delete all values for a given key. If the key does not exist it will be
str Loads a frame from a tag. The tag must be of the same type as
Update all pics that are common to all versions of version 2 and version 3.
str Unload the sound.
str Set the start and end points of the voice loop. The start and end points are
str Returns a list of adobe glyph names and the values of the adobe
str Filter glyph names based on a list of glyph names.
dump a list of strings to a file with a given encoding name and a list of strings
str Dump an array to a file with a given name and the length of the array.
Check if a file exists. If not print a message to stderr and return the number of
make a list of files from a list of files or a list of files to be processed
Parse a hosted zone element and return a HostedZone object.
str delegation set
Write a list of Block objects to a string.
Group all padding blocks into a single padding block.
Delete all VCFs from the file. If filename is not specified the filename will be
str Save the audio to a file. If no filename is given the filename will be used
str Parse an rrset alias element and return the hosted zone id and the dns name.
parse rrset record values into a list of strings
Parse a route53 rrset record.
str Add a new record to this hosted zone.
Create a new MX record with the given name and values. ttl is the number of seconds
Create a new record with the given name and values. If the record already exists it will
Create a new pointer record with the given name and values. ttl is the number of seconds
Creates a new SPF record with the given name and values. The record will be deleted
Create a new record with the given name and values. ttl is the number of seconds to
Get the values of a change from a RRSet.
Write a change to an XML file.
Write a change resource record set to an XML file.
str = start time str = version str = nanoplot. version str = sys. version
Return the item with the given alias or None if the alias does not exist.
Returns a tuple of the keys and values of a dict sorted by the number of keys.
str Joins HTML attributes into a template and a list of attributes to be added to the
This is the main entry point for the application. This is the main entry point for the
Initialize all the bars. This method is called by the widget when the widget is initialized.
Bind a Bar instance to the widget.
str - > dict - > None - > None - > None - > None - >
Returns True if current request is internal and has same endpoint and same args as current request.
str Validates that the metric class is configured and that it has a string attribute.
Get a statistic by its name.
calculate statistics for a list of stat and a list of frequencies for a list of frequencies
Autodiscover apps from settings. INSTALLED_APPS.
Export a metric to a CSV file.
This is the main entry point for the maintenance command. It is called when the command is
str Get a list of values from a GET request. If fail is True return an empty
Returns the value of a GET parameter as a boolean. If the value is not a string
Get the next colour in the list of colours. If there are no more colours
Get the request parameters for a Gecko request.
Geckoboard number widget for geckoboard.
geckoboard rag widget
geckoboard line chart
geckoboard geckometer
Funnel for Geckoboard.
Returns a list of all active gadgets.
str Registers a gadget to the registry. Raises already registered gadgets.
Returns a dictionary with the current context of the image. The dictionary is a dictionary with the
str Print a message to stderr and exit with the given code.
Prompt the user for a long input and return it as a string. If maxlines is
Prompt the user for a list of lines and return them as a list. If maxitems
Input a file name to save to. If the file does not exist it will be created
Returns a pandas DataFrame with the schedule for the given year.
Returns the winner or none if there is no winner. If there is no win
str The season of the year in the year range from 1 to 365.
Returns the surface of the object. If the object is not a surface returns np. nan
Get the coin toss from the sportsref. utils. parse. info table.
str str - > dict - > dict - > dict - > dict - > dict -
Returns the sportsref. utils. parse_info object for the sportsref.
get a list of games for a given season kind is either str or int. kind is
Get standings from sports. org.
get team stats from sportsref. utils. parse table from sportsref. utils
get the roy voting table from sportsref. nba. base
get main doc as a pandas. Dataframe from sportsref. utils. flatten links
Returns the season of the date. If the date is in the last month of the year
get player stats from sportsref. utils. parse tables
Returns a tuple with the class instance args and kwargs sorted by their id.
Get the age of a given year month and day. The number of days is the number
get stats from sportsref. utils. parse. parse table to pandas. DataFrame.
Get the stats for each game in the game_data table.
Get statistics about the total number of items in the dataset.
Get statistics for each year of the year table.
Get statistics about the total number of items in the dataset per 100 percent of each item.
Get the advanced statistics for this table.
Get the shooting statistics for the given kind. If summary is True return a summary
Get the statistics for the PBP file in the current directory. If summary is set to
str - > pandas. DataFrame - > pandas. DataFrame - > pandas. DataFrame - >
Get a value from the session and write it to the output file. If the value is
Expands a DataFrame with play details into a DataFrame with a specific detail column.
Add the team columns to the features dataframe.
str Add team features to a dataframe.
initial winning probability for a given line
Returns a pandas DataFrame with the data from the table in the given kind. If kind is
Generate a simple year for a given award id.
Get the name of the team. This is the name of the team in the header.
Returns a list of box scores for the given year.
Return a list of tags for the given keyword in the given year. If the keyword is
str Given a year return a list of the coaches in that year.
Returns the schedule for the given year. If the schedule does not exist it will be created
str Returns the coordinator for the given year or None if there is no coordinator for the given
str Returns the coordinator for the given year or None if there is no coordinator for the given
str Return the stadium url for a given year
Return the number of the scheme for the given year or none if there is no scheme.
Return the alignment number for the given year. If no alignment is found None is returned.
Get a DataFrame of splits for a given year.
get html from url and return it as a string. If rate limit is reached raise error
Returns a string that can be sent to the queue via the put method of the queue.
Get the next item in the queue without waiting for it to arrive.
Close the connection and put it back on the read and write queues. This is called when
get a batch of examples from the HDF5 file at path. If length is not specified
Get the next block of data from the file at the given path with the given size.
str Get a generator of rows from a given path.
Parse an IFO from a file or file - like object or file - like object.
Dump a list of objects to a file - like object or file - like object.
Read a varint from the stream.
get a list of objects from the file - like object - like object - like object -
str Close the file descriptor and flush the buffer and close the underlying file descriptor.
str Write a buffer of bytes to the stream. If the buffer is full flush the stream
Write all the buffered objects to the output stream.
Get the game directory.
input text with keyboard emulation
returns a list of the traits that should be evaluated. If the traits eager evaluation is not
run a condition until it returns a boolean or the timeout is reached or the condition returns False
str Loop until all traits are present on the given element.
str Add ignored exceptions to the list of exceptions to be ignored.
executes the given volume operator with the given value and returns the result as an integer.
str - > int - > None - > None - > int - > None - >
Send a message to the server. If read is set to True the message will be read
Returns a tuple containing the status of the volume power muted and source of the device.
powersave - power off the device if the device is powered off or powered
Power on the device. If the device is not powered on the device will be power
Set the volume of the device. The volume can be a number or a string.
Select a source from the list of sources. If the source does not exist it will be
str Deobfuscate a request by decrypting it with the given key.
str - > crc32 - > crc32 - > crc32 - > crc32
Obfuscate a string using the unfriendly secret and iv. If juice is specified
prints missing schema for a given song name in a given html file html is the html
str - > list of all links in html
Check if song name is present in html.
str Parse the html and return the link to the song. If flag is set to True
Generate a google url from a song name and a website.
str Parse the google page and return the download url.
str Parse a song and return the url to be parsed.
str get html response from url
download a file using requests
download a file using wget
Search for station codes by city name and token. Returns list of station codes.
Get the observation of a location. The token parameter can be used to retrieve the observation.
str Parse the observation response and return it as a dictionary.
Returns a list of the compilers registered for the current environment.
Returns the mimetype of the file based on the file extension. If the file extension is not
Returns the mimetype of the file. If no compiler is found none will be returned.
Returns the extension of the compiler file. If no compiler file is found None is returned.
str Register a processor for a mimetype. If the mimetype is already registered the processor will be
str - Unregisters a processor for a mimetype. mimetype - mimetype to unregister processor - processor
str - > list of paths to search for files in the project.
str Mimetypes preprocessors and postprocessors
import qt5 qt5 qt5 qt side qt3 py side qt3 py side qt
Get the meta data about the node.
Add a plugin name to the netnode meta data.
Remove a plugin from the netnode plugin list.
import settings from a. q. ini file into a. settings object
Export a dictionary of settings to a QSettings object in a QConfig object at a given
Returns the directory of the IDA configuration file. If no directory is specified the IDA
Returns an iterator over all keys in the directory user and system in the IDB.
A simple error handler that returns a response with a simple status code and a detail message.
str Returns a Table object for the given table name.
str Returns a list of all tables in the DynamoDB table system.
Fetch crates or summary for a given category.
str - > str id - > str id - > str id - > str id -
str Returns the timestamp of the metadata updated on the given item. If the item is not
Fetch the owner of a team from the server.
Fetch the owner of the user with the given id from the server.
Fetch the versions of a given crate.
Fetch the downloads of a specific version from the server.
Get a list of crates for a given category.
Get a single crate by id.
fetch a page of items from a given path and return a generator of the results as a
Fetch a list of items from a given category. If no offset is given the default offset
Get a list of questions from the Kitsune API.
fetch a list of events for a given category. If no offset is given the default offset
Returns the number of seconds the metadata was updated on the given item. If the item is
Get the category of an item.
Get a list of events activities users and events in the given category. If no category is
Returns a list of the current buffer. If the current buffer is not in the buffer list
str - The priority of the IOCB.
str Close the connection and release any resources associated with it.
Submit a list of IOCBs and return the number of submitted IOCBs.
Cancels the IOCB associated with the given block. Returns None if the IOCB was
str Returns a list of all the submitted blocks.
Fetch a list of events for a given category.
str Get the list of cells from the server.
Parse the feed and return an iterator over the events in the feed.
Returns a sorted list of export formats for the given pid and type.
Returns the permission factory. If the permission factory has not been set it will be loaded from
Default view method. Sends a message to the current user and renders the given template.
Export a record to a file.
str Runs a callable with the given arguments and returns the result. If rate is None
Close the connection to the server. If the connection is already closed this method does nothing.
str Remove a client from the list of clients. If the list is empty close the connection
str - > None - > 0 - > 0 - > 0 - > 0 - >
str Timing for the given metric name and milliseconds. rate can be a float or a
Add a timing measurement since the given time. If the time is a datetime it will be
str - > None - > None - > float - > None - > None - >
Gauge delta. delta can be a float or a float. rate can be a float or
str Set a metric to a given rate. If rate is not specified the metric will be
str Format data and add it to the last batch in the batch queue.
Creates a new batch client with the given size. If size is not specified the default number
Returns a client instance configured for unit testing. The client is configured with the host port and
Send all the pending messages to the remote server.
Create a new TCP client with the specified size. If size is not specified the default number
str Flushes all queued messages to the socket.
Create a TCP connection to the unit server and configure it with self. configure_client.
Create a new user with the given password permissions groups and kwargs.
str Interprets x as an open mathematical expression and returns the result.
Convert a term to an OpenMath object. If the term is already an openmath object
convert an om object to a Python object.
Convert an object to an openmath object.
str - > str - > str - > str - > str - > str - >
Generate a list of valid choices from a list of choices.
Create a value from the given arguments. If the argument is an instance the value will be
str default form for any fields.
Return the decimal field data for the given field. If no kwargs are given the field will
Returns a string representation of an email field.
Generate a random date field data.
Generate a random datetime field data.
Return a float field data as a string.
Return a string representation of an integer field.
Generate a random time field.
Return a random choice from the field s choices.
Returns a random choice of the field s choices.
Return a random choice of the field s queryset. Raises type error if the field s queryset
bytes - encodes an object to XML and returns it as a string. If the object is
publish a string to sdist build and tag it if it s successful.
Tag the current build with the given version. If the build is successful the tag will be
Import a module and return the value of the named attribute. If the module is a string
str Decodes a byte array into a byte array of the same length as the input.
Round to a fixed precision using the given value and precision. The value is rounded to the
Format the given number with the given options. If the number is a string it will be
str - > numpy. ndarray data - > numpy. ndarray data - > numpy. ndarray
Convert array to binary data and return it as a string. Raises error if an error occurs
str Add a new file to the configuration file.
remove a value from the config file.
str - > list of all keys and values in the config file. Returns a list of
Get the value of a field. If the field does not exist it returns none.
Checks if a repository exists in a workspace. If the workspace does not exist returns False.
syncs all repositories in the given workspace to the local file system. This is done by
git svn bzr or hg clone
Check the version of the python package and print it if it is different from the current version
Convert an array of voxels to a numpy array of voxels.
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
str Print workspace name or list of all workspaces.
prints the update of a repository.
str Create a console handler and add it to the list of handlers. If debug is True
str Executes a command on a given path.
str Loads a PNG file into a numpy array.
Save a collection of numpy arrays to a png file.
print workspace status for a given workspace. name is the name of the workspace to print.
str Prints the status of a repository.
str Returns the block size for the given token. If no resolution is given the minimum block
blosc post cutout no chunking
str Load an image from a tiff file.
str save a numpy array to a PNG file.
str Load a multipage image from a tiff file.
Write the configuration to a YAML file in the config. yaml file.
Clones the given URL into the current working directory.
Get the version of the installed package.
str Method to mix and match a name with a greeting and a yell flag.
Decorator to print the greeting and the name of the option. If yell is True
Reserve a number of ids from a channel. Returns a list of ids.
merge a list of ids into a ramon. If delete is True the ramon will
propagate data to a channel. Returns True if the data has been processed successfully.
List projects in a dataset.
get dataset by name
List the datasets in the remote server.
Parses the command - line arguments into a command - line argument list.
str Executes the workspace command.
show workspace information
str Shows all the workspaces in the workspace manager.
str - > str - > str - > str - > str - > str - >
str Given a file extension guess the format based on the file extension.
str - > Image. open - > Image. open - > Image. open - >
Convert a file from one format to another. Can be either hdf5 tiff or png
Convert a list of ramons to a dict of ramons.
Return the ramon for a given type.
Delete a channel by name project and dataset. Returns an empty string if the channel does not
str Return a JSON representation of the given data. The data is a list of dictionaries.
str Create a dictionary with the given dataset name image size voxel res offset timerange scalingle
str Returns a dictionary of the channel data.
Returns a dictionary of project name token name and public.
str - Image type string - Image type string - Image file path - Path to image file
put data to OO
str Find the path of a repository in a workspace. If wsonly is set to
Get a list of all the public tokens for this account.
Get the project information for a given token.
Set the metadata for a given token. If the token does not exist it will be created
get a url with the user s access_token as the headers and return the response.
str Post a request to the given url with the given token. If no token is provided
Delete a url with a token.
str Load data from an hdf5 file and return as numpy. ndarray.
str Save an array to an hdf5 file.
Infer gaps in a tree using the phylo alignment.
Recover from Nvim. io and return the result as a string.
Installs Jinja2 translations.
Execute a thunk in exclusive mode.
Returns the percent of a given part of a given total. If the part is zero the
str - > dict - > dict - > dict - > dict - > dict - >
get the slabs from the cache. If no name is specified return all slabs.
Returns the context of the current request. If the request is not provided the data is returned
Display the status of the server.
The dashboard page.
A list of all cache stats for a given server. The response includes the name of the
Returns a list of all slabs for a given server.
Convert a value into a human readable size. If the value is larger than the number of
find a config in the children dict. If a config is found return it. Otherwise return
add a directory or directory to the environment. kwargs can be either a directory object or a
Apply the applicator to the config file. If fpath is a string it will be
Returns the full path to the file. If the file is in the parent directory the path
Return the contents of the file as a string.
str Write data to file.
str Configures the logger with a file handler. If no loggers are specified the default logger
str Create the file if it doesn t exist. Raises exception if the file already exists.
Apply the given applicator to this node and all its children.
Returns the full path to the file in which this file is located. If the file is
str Remove the file or directory if recursive is set to True. If ignore is set to
str Prepare the environment for this node and all its children. This method is called by the
str This method cleans up all the children of this node and all of its children.
str Returns the path to the given file or directory.
Returns a list of all files in the directory.
str Write data to a file.
str Read the contents of a file into a string.
str Add a file to the tree and return the file object that was added to the tree
Saves the current state of the model to a file. The file is saved in YAML format
str Loads the yaml file into self. d. If the file does not exist it
str Clean up the cache file if it exists. If it doesn t exist it will be
str Load all the plugins in a given directory and all sub - directories in the given directory
str Create a child node of the current node with the given path. If self. path
Get the value of the node.
Apply the configuration to a string.
Build the url to redirect to when a message is sent to a callback.
str Read input from the pyngus socket and send it to pyngus
str Send the output to the pyngus socket.
Send the request to the sender.
str Read data from a socket object and process it. Returns number of input bytes read.
str Write data to a socket object.
Return a dictionary of remote settle modes for the given link.
str Configures the link with the given target source address handler and properties. If the target
Return the source address of the link.
Returns the target address of the link. If the link is a receiver the target address is
str Session closed
Creates a new sender for the given name. The name is the name of the sender.
Create a sender for the given link and add it to the list of sender links.
Create a new receiver with the given name.
Create a receiver for the given link and add it to the list of receiver links.
Destroys a link and releases any resources associated with it. If the link is no longer
close all the links in the endpoint and close all the sessions in the endpoint. This is
Process an event from an endpoint. This method is called when a new event is received.
Add a simple markdown pattern to the list of inline patterns.
str Called when the receiver is closed.
str Log a warning and close the receiver and set the done flag to False.
Get host and port from server address.
str Connect a socket to a given host and port. If blocking is True the socket will
str Create a server socket for the given host port and backlog. If backlog is
Returns a list of readers writers and timers that need to be processed.
Get the next output packet from the transport.
Creates a sender for the given source address target address event handler name and properties.
Rejects a link from a given sender. If the link does not exist an exception is
Creates a receiver for the given target address source address event handler name and properties.
str This method is called when a connection to the server has failed. It will log the
str Called when an endpoint is active.
close the remote connection and notify the callback that the remote connection has been closed.
Send an error message to the remote endpoint. The error message will be sent to the remote
Get a string representation of the color.
str Returns a dictionary with the font families and the font files in the given search path.
str - Set the compression of the file. If set to False the file will be compressed
str Add a new object to the buffer. If no flag is given the object will be
str Appends a string to the buffer. If page is not None appends the string to
Put a stream into the output buffer. The stream will be written to the output buffer.
str Add a page to the document.
draw fill and text color scheme
str Default font to be used for all fonts in the document. The default font will be
str Add a new page to the document. If no page is given the current page is
str - > None - > None - > int - > float - > float - >
Add text to PDF.
Add a newline to the current page.
str Add a pie chart to the current page.
Output a list of pages to the screen.
Returns a list of the indexes of the pages that have the orientation change set to True.
str Output the fonts in the database.
str Output the images of the image list.
Output the image to the session.
Transform the current matrix and save the result in the current page.
Returns the absolute position of the given point in the current matrix.
str - > bool - > bool - > bool - > bool - > bool - >
str Rotates a point by the given angle.
str Set the information about the object.
str Set the display mode.
str Write all the data to the file and return the path to the file or None.
puts the header of the PDF file into the output stream.
put pages to the document.
put a resource dict to the file in the current session.
Write the current information to the session.
str The trailer of the file to be written to the session. The trailer is a cross
str Floyd - like version of floyd. floyd is a generator
A naive version of the sequence generator. This is a naive version of the sequence generator.
Generator that yields values from seqs using the gosper function f. If the function f returns
str Brent generator.
check if x + test length is within the x - axis and return True if it fits
Check if the y - axis fits the test length. Return True if the y - axis
bool True if x is greater than x of ordinate False if x is equal to x
bool True if self. y is greater than test. y - > test. y
Returns a copy of the current cursor.
str x + dx
str Add y - axis to the y - axis and return the new y - axis.
str Draws the table to the screen.
List all tags.
Returns a list of labels with the given name.
Delete a tag.
Create a new label with the given id.
Get a list of all the users in the system.
str - > list of tags with given label sn - > list of tags with given label
Get a list of all registered hooks.
str is the name of the Sage extension. It is the name of the Sage
str The path to the themes folder.
str Post a request to a given URI with the given parameters.
Returns a list of all the hosts on the server.
Get a log set by its name.
str Duration in seconds.
str is the name of the field to be updated. It can be either kipping or
Computes the current state of the model and returns the result as a string. If the model
Returns a binary representation of the current state of the simulation.
str Frees all the memory used by this object.
Receives data from the socket and writes it to the buffer. If no data is available
Generator that yields a line from the buffer.
Returns the status code and message from the current line. Raises nntp if the line
Generate an info entry for the given code and message. If the message contains a gzipped
Returns a string with the given status code and message. If compressed is set to True the
Returns a list of capabilities for the given keyword. If no keyword is given all capabilities are
Returns True if the reader is in read mode. Otherwise raises an nntp exception.
Sends a quit command to the server and closes the socket.
Returns a datetime object representing the date of the command. Raises nntp if the command
Returns the help message for the current command. If the command does not return an error.
str Generate new groups from a timestamp.
Return a list of new news items.
Generate a list of active groups. If no pattern is given all active groups are returned.
Generate a list of active times from the NTP server and return them as a generator.
Generate a list of newsgroups. If pattern is omitted all newsgroups
str - > list overview fmt - > list overview fmt - > list overview fmt - >
Generate a list of all available extensions.
Generate a list of all the available types.
Returns a list of strings with the given keyword and argument. If keyword or arg is none
Send a compressed message header to the server. The header can be either a compressed message or
Generator for xpat messages.
Compress a file or file - like object. The compression is done using gzip. compress.
Returns the offset of the given value in the range [ 0 num ). If the value
Perform a POST request to the given url and return the response as a dict.
Perform an HTTP DELETE request to the given URL.
Perform a GET request to the given url and return the result as a dict.
Get a list of all scheduled queries for the account.
Get a list of all tags for the account.
Returns a list of tags with the given name or id or all tags with the given id
Delete the tag with the given id. If the tag does not exist it will be created
Create a new scheduled query for a given query change and scope unit and count.
Delete an alert by tag id.
str Parse a newsgroup line into a tuple of groups low high and status.
str Parse a line of text into a tuple of header name and value.
Convert a dict of headers into a string with the header names as keys and values as values
Send a POST request to the server and print the response to the user.
str Runs a list of tests and returns a counter.
Returns a string with the docstring of the class s default values.
Set the value of the field to the given value. Check bounds and type of the value
Check if value is an instance of the type defined in self. dict. If value is
Returns the value of the attribute. If the attribute has no value it will be set to
Check that the value is a scalar and cast it to the correct type.
symmetric error.
str - > None - > None - > None - > None - > None - >
Set the bounds free errors and the value of a parameter.
import metrics from self. metrics and add it to self. metrics_dict.
Extract a dictionary of metrics from a list of metrics.
Filter the metrics based on the given filter expression.
Send a request to the API and return the response as a list of strings.
str Given a text expression return an expression that can be used as an expression in a terminal
An operator is a string followed by an alternation. The operator is a string followed by
Add a string to the current state of the parser. If the text is not a string
str - > None - > None - > None - > None - > None - >
Returns a list of all parameters. If pnames is not specified all parameters are returned.
str - > numpy. ndarray of the values of the given parameters. If pnames is
Returns a numpy array of the errors of all the parameters in pnames. If pnames
str Clear all derived parameters.
str Method to set the method of the object. If the value is not a valid method
str Get the environment variables for the API. This is the environment variable used by the API
Call the API and return the result.
Validate scene info. Raises an error if the scene name is not in the satellites
Verify that the given satellite is a valid product. If the given satellite is not a valid
Get the size of a remote file from the Earth Explorer.
Check that the band list is a valid list of bands. If not raise type error.
Connect to Earth Explorer.
Normalize a datetime object to be in the current timezone. If is dst is set to True
Join an iterable of strings with the given delimiter.
Returns a list of the positions of the newline characters in the given text.
str Point to a source string at a given position in the source string. The source string
Dump the results of the relay to stdout in a human - readable format. The output is
Remove metrics control and plugins from self. relays.
str From list of FortranFiles. files - list of FortranFiles. equal -
Set the chance of each fortune in a list of files. If equal is True
str Runs the command and exits with a boolean value indicating whether the command was successful.
Return a rule with the given text. The text is expected to be an identifier and an
str Handle special characters in the given text.
Returns the grammar as a string. If the grammar has not yet been parsed it will be
Returns a list of all the rules in the grammar.
A list of all comment tokens in the grammar.
A list of all directives in the file.
Returns the compiled source of the source code.
Compile the token into a string.
Returns a string with the imports of this module. If no imports are present returns an empty
Returns a string representation of the token type.
Return a string representation of the class definition.
str - The name of the directive or None if the directive is not found.
Get the source code for a given rule.
Get the transform for the given rule. If no transform is found return the original rule.
Converts an expression to an ASN. 1 string.
str Converts a node to its ASN representation.
Given a list of operands and a predicate return a list of operands that match the predicate.
Remove grouping groups from an optree.
str Converts the given node to an AST node.
convert an AST node to an AST node.
Convert an AST terminal to a list of code blocks.
Convert an option group into a list of code lines.
Convert an AST repetition group into a list of lines.
Convert a special handling to a list of code blocks.
str Returns the AST representation of the alternate operator in opr. If the alternate operator is
ast. ast. concat to ast. code. concat for opr. operands.
Convert an ast op to a list of lines to be included in the source code.
str Multiply a number or number by a number and return the result as a list of
Convert an ast. OpRepeat object to a list of code lines.
Returns a list of directives that match the predicate. The predicate can be either a string or
Returns True if child is the same as parent and False if it is the same as parent
Handle the results of the API call and print it if the status code is not 200.
Get a wx. Id object from a wx. Id object or create a new one if
Removes a key from a control s list of keys. If the key does not exist it
str Add logging and arguments to the command - line argument parser.
str Configures logging with the specified level. If no level is specified the default log level
Validates the arguments passed to the command. Returns True if the command is valid False otherwise.
Returns an infix to postfix the given list of nodes. If recurse is set to True
str Given a list of nodes return an optree that is a sub - tree of nodes
reduces a list of nodes to a list of nodes where each node is an operator
Loads the manifest from the given file path.
Returns a tuple of the column lengths and the total length of all the fields in the table
get the display and description column lengths of all the metrics in the table.
str Replace all underscores in the metrics dict with their original values.
Output the header and the fields of the table as a markdown table.
str Prints the metrics in markdown format.
Generate a markdown file with metric field and dashboard definitions.
str Parse the given text and return a tree. If the parser encounters a dead - end
Update the most consumed number of characters in the original string. The most consumed number is the
str add command - line arguments to the command - line parser and add them to the parser
Parse a time string into a datetime object or None if the string is not a valid date
Output a CSV file in the format of timestamp metric name and aggregate.
str Output the data in a JSON format to the console.
Pretty - prints the given text as a JSON string.
str Output the given text as an XML document.
Returns true if the node is an empty node and the parent node is a terminal node.
Pretty - print a node and all its children. The depth parameter is the number of levels
Returns a function that returns the repetition of a string in the given bounds.
str Returns a parse node for a terminal. If the text starts with the given value a
Returns the exclusion of the given text or raises an exception if the exclusion does not match.
Count the number of leading whitespace in a string.
Call the given extractor with the given text. If extractor is a function it will be called
Returns the position of this parse node or None if this node is not a parse node.
True if all children of this node are empty.
Add an ignored string to the list of ignored strings. If the string is empty it is
Checks if the node is of the given type.
Returns a copy of this node with all children flattened according to pred. If pred returns True
Return a copy of this parse with all children trimmed.
Merge this node with another node and return a new node with the merged children.
Return a copy of this node with the new type converted to the new type.
Return a copy of this node with all children compressed. If new is set to True the
Returns the current position in the source code.
Return the position of the maximum readed line and column.
str Step to the next character.
Step to the next line.
Step to the previous line.
Return the last readed line.
Increment the cursor position by the given number of characters. If the cursor is at the end
Saves the current cursor position in the list of contexts and returns True if the cursor was saved
Restores the current context and moves the cursor to the last context in the stack.
Return a string representation of the notification.
str Set the name of the signature. This is used to set the name of the signature
Count the number of variables in the signature.
Count the number of functions in the signature.
Update the scope with a list of scopes. If the scope is a namespace set its parent
Return a new scope that is the union of this scope and the given scope.
Update the scope with the intersection of this scope and the given scope.
Return a new scope that is the intersection of this scope and the given scope.
Returns a new scope with only the keys in oset removed.
Return a new scope that is the difference of the current scope and the given signature.
Update the scope with the symmetric difference of the other scope.
Return a new scope that is the symmetric difference of the current scope and the given signature.
Add a signature to the scope.
Remove a signature from the scope.
Discards the given signature from the scope. Returns True if the signature was removed.
Return the first signature in the hash table.
Return the last signature in the hash table.
Get a scope by symbol name.
Get a signature by symbol name. If there is no signature with that symbol raise key error
Get all polymorphic return statements in the scope and return them as a boolean.
Call the injector with the given old node and translator and return the result. If the translator
Recursively normalize the given AST to be a node. This is useful when you want to convert
str Set the class of the node to the class of the othernode.
Check if a hit is within a given range of charges.
Return a signature object for this object.
str - > None - > None - > None - > None - > None - >
Return a list of resolved names for the given type name.
Set the name of the dependency to the given name2solve and name ref.
str Delete a file if it exists. If it doesn t exist it will be created.
Delete a file from an S3 bucket.
str Delete a file from S3 or local storage.
Saves a file to a local file system. If the file does not exist it will be
str Save a file to an object in S3. Returns the filename of the file.
Save the object to a temp file. If the object is a local object the object will
Find a path in an S3 bucket.
Returns a new enum class with the given sequential values and named values.
set one object in the chainmap with the name of the thing name is the name of
Reads the end of file and returns true if the end of file is reached.
Push the current rule nodes onto the top of the rule stack.
Pop the rule nodes from the stack and return True if it was the last node in the
Get the value of the node n. If n is not a child of the current stream
Parse the content of a stream and add it to the list of streams to be processed.
Begins a tag with the given name. Returns True if the tag was successfully started.
Mark the end of a tag.
Set the rules for this class.
Set the hooks for this module.
Set the directives for the current namespace.
Evaluate the given rule and return the result.
Evaluate a hook and return the result. Raise a diagnostic if the hook is not defined.
Peeks at the next occurrence of the given text. Returns True if the text is found
Read one character from the stream and return it as a bool.
Read a single character from the stream.
Read until the end of the file is reached or the end of the file is reached.
ignore blanks in the input stream
str Check that hits. dtype is compatible with self. cluster hits. cluster hits. dtype
Add a rule clause to the grammar.
Add a rule to the BNF.
Add a rule to the grammar.
add cla to sequences if it s not already a sequence. returns True if the new
Add an alternative node to the list of alternatives.
Add a range to the given sequence. Returns True if the range was added False otherwise.
Add a rpt to a sequence.
Add a capture to the given sequence.
Add a binding to the sequence. Returns True if the binding was successfully added False otherwise.
str Add a hook to the sequence. Returns True if the hook was added.
Set the parameter to be an integer.
Set the value of a parameter to a string.
Set the value of a parameter to the given character.
Set the parameter s id and return True if the parameter is valid False if the parameter is
str Name of the hook n - The name of the hook n - The name of the
str Add a parameter to the list of parameters to be called when a method is called.
Evaluate the current rule and return the result. If the result cannot be evaluated an error is
ignore C - XX and C - YX and C - YX and C -
Add a state to the model. If the model already has a state with the same id
Generate a DOT representation of the state.
Write the model to a file in DOT format. The file will be written to fname.
Writes the image to a png file.
Returns a string representation of the state.
Returns the next state of the current state. If newstate is none the current state is
reset the living state to the initial state.
str Infer the type of a block of nodes.
str Subexpr is a sub - expression that is a sub - expression of this expression.
Infers a literal value from a given expression.
str Prints the current state of the node to stdout. Returns True if the node was
Return an ast. stmt representing the exit of the current scope.
Return a list of ast. statements for the given clause.
Return an ast. expression representing a call expression.
Return an ast. expression that evaluates to true for the given call node.
Return an ast. expr representing a hook.
Return an ast. expr representing the rule s name.
Capture a node and return an ast. stmt or ast. expr.
Return an ast. stmt or ast. expr for the given scope node.
Return an ast. stmt for the alt statement.
Return an ast. stmt and ast. expr for a seq node.
Return ast. stmt or ast. expr for rep optional.
Return a list of ast. stmt and ast. clause nodes for the given node.
Return a list of ast. stmt nodes for the given node.
Concatenate src into dst and indent the result. If src is a string it will be
Set all indentable objects in a list. indent can be a number or a string.
Convert a list of objects to a string.
Echo a list of nodes and return True if all nodes have been echoed False otherwise.
Populate the graph from a list of match expressions. This is a recursive function.
Populate a state register with a list of sequences and return a new state register.
Build the state tree and populate the state register with all the statements in the graph.
Return True if the node is equal to val. If val is an integer it will be
Create a grammar from a string.
Load a grammar from a file.
Parse the given source and return a node representing the result. If no entry is given the
Parse the given file and return the parsed node. If entry is not specified it will be
str Set the value of a node. If src is an instance of node it will be
Set the value of dst to the value of src. If src is a string it will
Get the value of a sub - node from the expression.
str Dump deposition information into a dictionary.
get all recids from invenio 1. 0 to 1. 0. 0
get all recids from invenio. legacy. dbquery. dbquery
str - > tuple - > tuple - > tuple - > tuple - > tuple - >
Dumps an object to a JSON - formatted dict.
Returns the number of accounts and all accounts in the database.
Dump a User object to a JSON string.
Return a set of modified recids for the given date.
Returns a set of record IDs that have been modified since the given date.
str Returns a list of fireroles and users for a given collection.
Get the revisions of a record.
get all collections of a record
Convert a MARCXML to a JSON string.
get a list of modified recids from a given date. If query is provided only the
str Dump a record from a given date to a JSON file or a list of files.
Dump a ResourceAccess object to a JSON - formatted dict.
Loads a model from the given data dictionary and adds it to the database.
Collect things from the entry points.
Initialize the app with the given context. The context will be pushed onto the context stack.
Get the SQL run from the legacy or invenio. dbquery module.
str Get a list of actions from the database. The query can be a string or a
Dumps the details of a remote resource to a dictionary. This is only useful for debugging.
Loads a token from the given data dictionary. If the data dictionary does not contain a token
Import a record into the database. If only is set to True only records are imported.
Returns the imported config variable or the default value if the variable is not present in the app
str Dump object to a dictionary.
get users by email password salt note full name last login name and settings
get number of users and all users in invenio
Dump a User object to a dictionary.
Load deposit data into database.
str - Create a deposit record and a persistent object identifier - Create a persistent object identifier
str Loads a record into the database. If eager is True then the record will be
Load records from a list of sources. If recid is not specified load all records.
str Get a list of profiling statistics.
str Main entry point for the web server. This is the entry point for the web server
Dump profiling data to a file.
str Delete the profiler and enable the profiler and finish the profiler. This method is called when
str Delete the current profiler and update the status of the profiler. This is called when the
Get the current status of the process and write it to the output stream.
calc translations for each image in a list of images in parallel
str Stitch a list of images into a single image.
Add ones to the end of an array along the axis - num axis.
Create a new record from a dump object.
str Create a new record from the given dump.
str Update the given record with the given list of revisions created and updated. Returns the updated
str Create persistent identifiers for the given pids.
str Delete a record from the database and all associated buckets. If the record has been deleted
Create a new file in the bucket with the given key and list of file versions.
Delete all buckets in a record.
Returns a list of PIDs that are missing from the PIDs in the PIDs field
str - > list of files sorted by file name in the order of the file name.
str - Returns a list of all the PIDs that have been fetched from the database.
Returns True if the revision has been deleted. If no record is given the last revision is
str Load a community into the database and save it to the specified logos directory.
str - > Featured Community ID - > Featured Community start date - >
str Dump a thing to a file in a chunk of size chunks.
str Check a thing s entry points.
str Delete the widget and all of it s event handlers.
str Returns the magnitude of the vector v.
str - > list of float - > list of float - > list of float - >
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
Ensure bones are present in the given data dictionary.
str Set the length of the bitfield in the given data object. If the bitfield
str Set the parent of the bones.
str Returns the pivot point of a data point in the sphere. The pivot point is the
str Animate the given number of times and jumps to the given jumptype.
str Set the current state of the GL object.
unset the current state of the GL object.
str Set the state of the scene.
str Unsets the state of the camera.
Ensure that the model data is present in the modeldata attribute of the given object.
redraws the vertices and tex coordinates of the given object.
Draw the batch3d if the modeldata is set to True.
str Set the model to use for this instance. This method will cleanup any previously set model
Writes the report to the file at the given relative path. Returns the path to the file
str Add a menu to the menu list.
redraw the label
redraw the label
str Draws the window and all the widgets in the window.
str - Delete a widget from the widget list. If the widget does not exist nothing happens
redraw the label
str Register mouse motion and drag events.
Register the event handlers for crouch down and jump down.
str - > None - > None - > None - > None - > None - >
Exit the dialog. This is called when the user presses the exit button.
str Update the progress bar with the current value and the progress of the progress bar label.
str Render all the actors in the scene in 3D. If no view is provided the
str Render the static world to a 3D view.
str Check if a resource with the given name or extension exists in the resource directory.
str Add a category to the texture cache and send an event to the peng.
get the missing texture from the resource or create a new one if it doesn t exist.
Get the model object for the given name. If the name is already cached it will be
Loads a model by name and stores it in the modelobjcache and sends an event.
Returns the model data for the given name. If the name is already cached it will be
str Add a widget to the list of widgets to be rendered.
str Draws the menu and its submenus if the menu is not a container.
redraw the scene
redraw the scrollbar
str Returns True if the mouse is within the bounds of the bounding box of the bounding box
str Returns the p - value of the number of points in the range [ min max )
str Add a layer to the graph. If z is - 1 the layer will be added
str Add an action to the list of actions that will be executed when the user clicks on
str - > None - > None - > None - > None - > None - >
Register a new name and return its id. If no id is given a new id will
str Add a layer to the graph. If z index is not specified the layer s z
str Draws the layered widget and all its layers.
str Delete the layered widget and all of it s layers.
Returns the border of the widget. If border is a function it will be called with the
Return the offset of the widget.
Returns the size of the widget as a tuple with the width and the height of the border
str reads a mesh from a h5py. h5py. Store object.
make a connection matrix of the given shape
str Set the fields of the object. If no fields are given all fields are set.
str Add fields to the form. fields can be a list of strings or a list of
Check if the element types are valid and raise an error if they are not.
Return the space of each element in the list of elements in the type.
Returns a pandas DataFrame with the edges of the data.
str - > pandas. DataFrame of the centroid and volume of the mesh in the order of
Set the element set to the node set of the element with the given tag.
Convert a node set to a surface.
converts a surface to a list of element sets where the number of elements in the surface
Returns a pandas DataFrame with the metadata for all the fields in the table sorted by name.
pd. Series of all the metadata for this step. This is a series of all the
str Make directory if not exists.
str Run the GMSH command and store the result in self. mesh and self.
str Read a history report from a CSV file and return as a pandas. DataFrame.
str Read a field report from a text file and return a dict with the data and meta
Convert a list of numbers to a string.
Returns a string representation of an equation.
Convert a DataFrame to a list of strings with the given label. The label can be a
Parse the response from the API and return the payload as a string. If the response is
Method to get a list of faxs or a list of faxs for a given method
str Write a scientific xy report to a file at a given path.
Return an error message for the given instance and value. The message is formatted according to the
Returns True if the exception was thrown by a descriptor or False if it was not thrown by
str - The name of the axis to use for the data. If the axis does not
Returns the mode of the given axis or None if there is no mode for the given axis
get axis mode for x and y axis mode for x and y axis mode for y
Make a new class with the given name and function and attributes.
Cycle through all the datafeeds and process the messages and draw the notifications on the screen
Try to convert a value to a float or bool.
str - > int - > float - > float
str Plot a graph with a random number of colors.
Convert a string to unicode if it s not already unicode. If it s a unicode string
Check if a mime type is in the list of include mime types. If mime type is
str - > str - > str - > str - > str - > str - >
Returns a list of strings that are the left part of the domain name.
Returns a tuple of the token and the hash of the token. If the token is already
collects the words from a Si object and returns a dictionary with the number of words
Index a stream. si is a StreamInfo object. Returns the hash of the stream.
Return a list of tokens that match the given hash. The result is a list of the
Returns a dictionary of document frequencies for a list of hashes.
str - > list of tuples of key - to - stream ids for a given hash.
make a stream of items from a file - like object f - a file - like object
Reads a varint from the stream and returns the number of bytes read.
Read an object from the stream and return it as a str object.
serialize a key into a binary string.
Convert a streamitem to a key and the data to be stored in the database.
Context manager to change the current working directory and restore the previous working directory after the context is
Strips a prefix from a string. If strict is True raises wimpy. error
Strips a suffix from a string. If strict is True raises wimpy. error
Checks if needle is a subsequence of haystack.
str Runs the wsgiref server. This is the main entry point for the
str Shutdowns the server and closes the connection to the server. If the server is not
Returns a function that can be used to retrieve the error page. If the status code is
Add a route to the router.
Resolve a route for a given method and path. If the route is not literal it will
Resolve a non - literal route for a given method and path. Returns None if the route
str - > str - > str - > str - > str - > str - >
Return the response as a list of strings.
str - > str
str Set a cookie with the given name to the given value. If the cookie already exists
Returns a string with the status code and the phrase of the response.
Returns the content type of the media file. If the media type does not start with str
str rmtree - Delete a directory and its contents. If use is True it will try to
get a list of open file descriptors for the current process
str Fetches a file from the server and returns a tuple of the status code the number
str Get lines of a file as a list of strings.
random adjspecies pair
Returns a random adjspecies pair. If maxlen is not specified the random adjspecies will be
morph a sentence into a single word or a list of words to morph into a single
str Get similarity of a query in a given pair of strings. If a json flag is
Perform Hiragana analysis on a given sentence. You can optionally specify a sentence file
List entities in a sentence.
Shortsums a file or a list of files to be reviewed by a user.
list keywords for a given file or file. json is a list of keywords for a given
str chrono a sentence or a file of text to be chronoed to a time.
str is the name of the stage. It is the name of the stage. It is
run writers in order
Run incremental transforms on a stream item.
replace a module in the streamcorpus with a new one based on a configuration dict.
Returns True if all mentions are in target and False if none is in chain.
Checks if any of the target mentions is in the chain.
match multiple tokens in a stream item with a specific tagger id aligner data is a dict
make ner xml file
str Shutdown the child process if it exists. If it doesn t exist nothing is done.
str Multiplies p by n and returns the result as a string. n must be an
Yields the start end and text of each sentence in the string clean. The text is
make label index from annotator id and label offsets sorted by offset. chars in the label
make a list of sentences from item. body. clean visible = True means all sentences are
make cleansed file
str Make a ner file with the given tagger id and input and output files.
Strips punctuation and whitespace from a span string.
str Create a pipeline from a config dict.
Generate a john smith chunk from the given path to the given original path.
make a clean visible file from a chunk of data and a path to a clean visible file
Strips whitespace and punctuation from a span string. If lower is True the string will be
This is the main entry point for the script. This is the main function of the script
str Loads a function in a given module.
Load the external stages from the given path and update the stages dictionary with the loaded stages.
str Create a new stage with the given name and sub - configuration.
Read bytes from a stream into a tuple of bytes and the next byte in the stream.
str Filter the href based on the configured domain.
str Make a list of label objects based on the current offset type and the given clean html
str Walks the input directory and returns all the files in the directory.
str Returns a generator that yields all of the tasks that start with the given key prefix.
Get a random item from the available list.
Get a list of sentences for a given dom.
str Verify an MD5 hash of a data string.
Get a bucket from the S3 server. If no bucket name is provided the default bucket
str - > streamcorpus. chunk - > streamcorpus. chunk - > stream
i get a single chunk of data from a key in a bucket.
Convert a stream id to a kvlayer key.
Convert a kvlayer key into a stream id.
str Returns a tuple with the hash of the URL and the time of the stream.
The main entry point for the command - line tool.
str str str str str str str str str str str str str str str str str str
convert a list of sentences to a list of char tokens
str - > str - > str - > str - > str - > str - >
str - > None - > None - > None - > None - > None - >
Returns an xpath string representing the piece of the current node. The piece is the number of
Returns the index of the text element.
Generator that yields all descendant elements of the given element and all sub - elements of it.
str - > list of elements in source.
Select all elements with the given name in the given source.
Select elements whose name matches the given pattern.
Returns an iterator over the siblings of elem following elem.
str Call an inkscape command with the given command line arguments.
str Export an input file to an output file using Inkscape.
str - Convert SVG to PDF and save to file. path - Path to SVG file.
str Converts an SVG image to a PNG image using Inkscape.
str Get a Jinja2 environment for a given file path.
str template file to be used in the template file path is the path to the template file
Fill the document with the given contents and save it to the file.
Save the content of the object to the given file. If the file content is None the
str Given a template file path and an optional command return the doctype for that command. If
str Fills the SVG with the contents of the document.
str - Copy SVG to PNG or PDF to file path - Path to SVG or PDF to
str Render the template to a temporary file and write it to the output file.
str - > xml. parsers. expat. parser. expat. parser. exp
Returns the HTML fragment of the given source as a string. If the source is not a
str Inserts text data at the end of the document. If insert is True the text
str Insert a node before a given node in the list of children of the given node.
Returns a copy of the current node.
Convert an XML node to a string. If outermost is True return the string of the
str Inserts a child element at the end of the list. If index is - 1
str Parse the config file and return a dictionary of config data. If the config file does
get google credentials from clientsecrets or get user credentials from clientsecrets store credentials in
str Create the datetimes for the given options and the given config dictionary.
str Create a new event for a given calendar.
str Main entry point for the command - line tool.
str Get the extension of a file or raise an error if the file does not exist.
str Add extension to filepath if it doesn t already exist. If check is set to True
Returns a temporary file with the given suffix. If dirpath is None returns the current working directory
Remove all files with the given extension from the given workdir.
csv - > json - > json - > csv csv - > json csv - > json
replace old in file content with new. max is the maximum number of occurrences of old in
str Parse the HTML and return a list of HTML elements. This is the main entry point
str Check if next tag is a link or not. If so add it to blacklist.
Create italic style tags.
Create a strong style tag if it doesn t already exist in the style tag.
Create underline if style is present in tag. If style is not present create a new tag
str Parse the attributes of the given tag. If the tag s name is not in the
Remove line breaks from a tag and return it as a string. This is done by decoding
Parse the given href and return the value of the query string parameter or None if the href
Parse an attribute of a tag. If the tag is a string and the attribute is a
str Translate key values from a dict to a dict with a default value. The default value
Return a JSON string representation of the object.
str Find all files in a folder that match a given regular expression. Returns a list of
str. join with a list of strings.
Yields True if full starts with part.
Yields True if part is contained in full.
A generator that yields a boolean value from the given object. If the object is already a
Yields the results of evaluating expr in the given sequence. If seq is a string the
str Lookups a key in a table.
Replace characters in svg content with their respective entities.
check if svg file is a valid SVG file.
Merge multiple PDF files into a single PDF file.
str embeds a font file to an svg file. font files can be a list of
Embed a font file to svg file outfile is the path to the file outfile is the path
Check that all inputs are of the correct type. Raise runtime error if not.
str Check that the function is callable and that its arguments are the same as the number of
recurses through the inputs and outputs the result of the function
str Create input from jinja2 template.
str Recurses through the input list and adds the output to the options list.
Convert an object to a string. If the object is a literal it will be converted to
Convert an object to a number.
Convert an object to a boolean value.
Serialize an AST into a list of strings.
Change the encoding of the xml file at filepath to enc. src enc must be str.
Save text into QR code.
Launch an option in a melody context and return a dictionary with the result of the
str Call a command with the given name with the given args and return the return code.
str Convert a Tex file to a PDF file. output format can be either str or
returns a list of options for the given psy
Transform a geometry to a spatial reference.
str | ogr. geometry | ogr. ogr. geometry | ogr.
str expands the range of the range to the range of the other string.
Returns the intersection between this envelope and the other.
Returns True if the rectangle intersects with the other rectangle. If the rectangle intersects with the other
str Polygon representation of the ring.
str Create a new instance from a Z - N - M matrix.
Write the data to a file in CSV format.
str Select rows from the table that satisfy the given condition. The condition can be a function
Returns a table with the rows corresponding to the given nuclei.
Returns the intersection of this table and the given table.
not in table
Returns a new vector with odd numbers as the first element and even number as second element.
Returns a new Series with even and odd values removed.
Returns a string with only the even numbers in the sequence.
str Return a new table with the errors in self. df relative to the given relative to
m - binding energy of the potential. m - binding energy of the potential. m -
s2n - > str n - > str n - > str n - > str
- - - - - - - - - - - - - - - - - -
s2p - > str m - > str p - > str m - > str
- - - - - - - - - - - - - - - - - -
str Derived Table
str Runs the given function in the database. The function is executed in the context of
Derive a key from a master password.
Bootstraps the database with the given path or uri. If no path is given the default
Search for domains whose name matches the given query string.
Modify a domain. If new salt is True then the domain s salt will be changed.
Create a new domain with the given name username alphabet and length. If the domain already exists
Extract HBS messages from a file object.
str - > str - > str - > str - > str - > str - >
Get the SRID of the authority as an integer.
The main entry point for the command - line tool.
Download and update a file with the contents of the given URL.
Returns a dictionary of all available driver names and their metadata.
str Return the image driver for a given file path.
Convert a geometry to an array of raster data.
Create a raster from a layer and a raster raster raster object. The raster object will be
Open a GDAL raster from a file or file - like object.
Create a raster from a byte array.
Copy source raster to dest raster. If source is a raster it will be copied to dest
Returns a dictionary of the options for the user. The keys are the option names and the
Create a raster of the image.
str - > None - > None - > None - > None - > None - >
Read an array from the dataset. If no envelope is given the entire dataset will be read
Returns the envelope of the transformation.
Returns the image driver. If none is set the default driver will be returned.
str Create a new raster with the given size and affine. If no size is given the
str - > numpy. ndarray - > ~numpy. ma. MaskedArray
Returns the no data value of the dataset. If no data is set returns the entire dataset
Read a raster from the current coordinate system.
Resample the image to a new size.
Save the image to a file. If driver is provided it will be used to copy the
str Set the spatial reference to be used as the projection of the dataset.
rwarp the image to a spatial reference or a spatial reference to a spatial reference.
Calculate the binlen and enclen for a given alph length.
Lookup the alphabet for a given character set. If the character set is not supported by the
Encode a single chunk of data into a long string.
Convert a chunk to a long value.
Get a chunk of data from a given index and chunk number.
Returns a compiled regular expression from the contents of the given file.
Convert a date to a string. If the date is a string it will be converted to
Detect the timezone of the current locale. If no locale is available the default timezone is returned
Returns a dict representation of the object as a dict.
This is the main function that handles the jobs. It is the main function that handles the
str Runs the job handler in a separate thread. This is the main function of the
str Runs a job in a worker pool.
Sets the classification of the object. The value must be one of the constants class_name
str Sends a message to the server.
Turn on a light.
turn on switch
Turn on with a given brightness value.
turns off the device with the given id and name.
str Send a queue of messages to the client.
Send a reliable message to the network. The message must be in the form of a string
Set the nature of the rule. Valid values are min_nature min_nature
str Set the config files to be used in the configuration file. This can be used to
Iterator over the values of all the options in the configuration.
Create a TOML configuration file at the given index. If update is set to True the
str Update all sections in the config with the values in the given dict. If arg is
str - > dict - > None - > None - > dict - > None - >
str - > str - > str - > str - > str - > str - >
Returns a list of option names for the given section and option. If the option is a
Returns a list of all available sections. If no command is specified all sections are returned.
Build the argument parser for this command.
Parse the command line arguments and return a dict with the parsed options and their values.
compiles a bash command into a list of option names and their values. If add is
str Prints the completion of a command in a bash file.
Starts a new master process.
str Called when a new connection is made to the server.
Receive a line of data from the client and send it to the worker.
Closes the connection to the worker and removes the worker from the list of active workers.
str Enqueue a job to be run on the server. This method is called when a
str Called when a response is received from the server.
Close the job and return it to the manager. If the job has not yet been completed
Run a list of jobs in the queue.
Close the server and all workers. This is a no - op if the server is already
str Change the state of all waiters to none.
str Add a result to the end of the list of results and update the progress bar.
Wait for the future to be complete. If the future is complete it will be added to
Load a job from the queue. If the queue is empty the default job will be created
Called when the job is done. This is called when the job is done.
str Add a result to the result queue.
Cancels the current number of jobs.
Wait for all active jobs to finish.
str Distributes jobs from the active job pool to the current job. The job will be
str Add a job set to the queue and return the job set. If the queue is
Get a job from the queue and call the callback with it. If no job is available
Returns a job to the pool. If the pool is closed the job is removed from the
str Add a result to a job.
str This method is called when a job set is done. It is called when a job
Close the queue and cancel all active jobs.
Returns a list of unique elements in a list.
str - > bool - > bool - > bool - > bool - > bool - >
Returns the current region. If no region is set the current region will be returned.
Returns a list of entries that match any of the filters and not in the exclude list.
Get the public dns name of an EC2 instance.
str Create a new instance from a dictionary.
str Get the value of an attribute. If the attribute does not exist raise an error.
Creates a new instance from a boto instance object.
Returns True if the object matches the given filter. The filter can be a string or a
Returns a string representation of the IP address. If the name is a string it will be
Add a timestamp to the event dict.
Returns a structlog logger with the given name. If output is str the structlog processor
str Create a celery application with the given title output and timezone. If no timezone is
Delete a job from the pool.
str config section
str Handler for config commands.
str - > str - > str - > str - > str - > str - >
str Hash a string and return a color in the range [ min max ).
Return a random color string.
Checks if the given username and password are valid. Returns None if the username and password are
Check if a token is valid. If so return the user object. Otherwise return None.
Check if a process is running.
str Import a module and return the module object.
Returns the IP address of the server. If public is True the IP address will be returned
str method to call the REST API with the given parameters. If method is str return the
prepares the post parameters to be sent to the API.
Serve a DNA server.
str Render the template with the given name and value and return the result as a string.
stream commands in parallel or parallel mode. If parallel is True the commands are streamed in
str - > str - > str - > str - > str - > str - >
str Get the path of a given command.
Build a ssh command from hostname username idfile and ssh command. If no idfile is
str Create a new lsi profile object from command line arguments.
str Relate a Part to this Part.
Returns a list of related packages of a given type.
Load relationships from the given data source into this object s relationships collection.
str Add a part to the schema. If override is set to True the part will be
str Load a part of a given type with the given data. If the part does not
Find a file by its name or extension. If the file is not found return None.
str Create an instance from an XML element.
str Parse a chatl input string and return a list of parsed chatl objects.
str Builds a JWE token from the given secret key and access key.
str - Assign force field to all atoms in the AMPAL object. ff - Dict
find max rad and max npnp
str - > dict of force field parameters - > dict of force field parameters - > dict
Returns the file as a file - like object. The file - like object will be read
get all segments that start with the given name from the given file - like object zf -
str List all filenames in a directory.
str List all directories in a directory.
str - > str - > str - > str - > str - > str - >
Delete a file from the bucket.
Check if the user is logged in and if not log it in. If not log it
Returns the loud version of the current language. If no language is specified the current language
Returns the home URL.
Returns a list of all the hot spots in the tree. The list is sorted by
Get a keeper token.
upload a build to a git repository
Check if travis event should be skipped based on environment variable travis_event.
Confirms a build by sending a PUT request to the given URL.
str Update dict d with values from dict u. Returns a new dict d with values from
This is the entry point for the keeper command line interface. This is the entry point
Edit a part. xml file or a part. xml file to a part. xml file
packs a directory to a file or directory in the current working directory. packs a
Split a path into a list of drive and path components.
Get the editor for the given file path.
Process a module node and check if there is a match. If not add a message.
str Generate an HTML chart for the given data object.
Generate an HTML file for a chart. If filepath is not specified it will be written to
str Create a chart from the given dataobj. xfield yfield time unit color size
str patch json data and return it as a json string.
convert json data to html
converts a dict to a pandas. Dataframe
str Write the HTML to a file in the given folder. If the folder doesn t exist
chart type is one of bar circle line line line line line line area tick text square rule
str - > str - > str - > str - > str - > str - >
Infer the URL of a tarball from a JSON file. Return none if the tarball is
str Create a new build and write it to a tarball file.
Delete an app from the happy server.
Generate a random binary string of the given length.
random ip address
random date between start and end
Returns a session object with the given auth token. If the auth token is present it will
Make a request to the API and return the response as a dict.
Create a new build from a tarball.
Check the status of a build. Returns True if the status is OK False if the status
Generate a sequence of strings starting with prefix. If cache is - num then the sequence is
Registers sub - commands with the given parser.
Get the root argument parser.
Get the description of the document.
Get the help text of the command.
str Runs the command with the given arguments. If no arguments are given the command will
str - > str - > str - > str - > str - > str - >
Get a list of athletes.
Get the last n activities.
Request the list of activities for a given athlete.
Request the activity data for a given athlete and filename.
Returns a string representation of the given athlete.
Returns a string representing the activity endpoint for the given athlete and filename.
str Request to Golden Cheetah. Raises an exception if the request fails.
str Create a new build from a tarball. Returns a tuple of the created build and the
str Create a URL with the given view and auth. If view is a string it will
Generate a random title from a list of languages and genders. If no languages are provided
Generate a random person title first name last name gender.
Get a random last name.
str - > str - > str - > str - > str - > str - >
str The dataset to use for the plot. If no data is provided the data will be
str - > str - > str - > str - > str - > str - >
Check if the given type is valid. If it is return it otherwise raise an exception.
str - > str - > str - > str - > str - > str - >
Open the current page in a web browser and return the result as a string.
str - > None - > None - > None - > None - > None - >
str - > urllib. urlopen - > urllib. urlopen - > urllib. urlopen - >
Returns an PIL image object from the response. If the response is not an image an error
Write the contents of the URL to the file - like object fp. The file - like
Returns a SHA - 1 checksum of the file.
Return a random amount between min and max with the given decimal places.
Returns the unprotected and protected claims as a dictionary.
Return a list of all the signing keys in the signer s key jar as a string.
unpacks a metadata statement from a JWT or JSON - encoded string. If no keyjar
Packs a metadata statement into a signature string.
evaluates a metadata statement and returns a list of metatags. If the metadata statement
str Given a federation metadata and a federation usage return a dict with the correct message
str extend req with a dict of message objects. sms can be a list of strings or
Parse command - line arguments and return them as a list of argparse. Argument objects.
argparser. ArgumentParser. add_argument_group argparser. add_argument_group
str Apply logging options to a list of log levels and a list of log files.
str Log a verbose message.
Returns a dictionary mapping letters to their numbers. The keys are the letters and the values are
str Anagrams in a word in the range [ start end ). If sow
Returns a tuple of the class and the name of the group as an amp - separated string
str Transform a timeseries to a list of data points based on a start and end point.
Get the last value from a timeseries.
Validate a page number.
get a single page from an iterator. page number must be an integer page size must be
str Chmod a file or directory.
Make a signing service from the given config and entity id.
Make a signing service from the given config and entity id. config is a dictionary with the
Sign a request and return the signed response.
Create a new resource. Returns the created resource.
Update an existing metadata statement at a given location.
Update the signature for a given location.
Yields bundle contents from the given data dict.
Create a bundle with the given data. If data is a dict it will be used to
Returns a list of urls for the given asset type. If the asset type depends on this
Returns the html tags for the given asset type.
Generate HTML tags for all available asset types.
Protocolise a URL if it doesn t have a scheme. If it doesn t have a
str Find all links to a given url and return them as a list of strings.
str Connects to a remote server and returns a listening endpoint.
Get a list of all modules in the project.
str Import the modules from the config file.
selects fields from a document. field list can be a list of strings or a list
str map a list of datetime objects to a single datetime object in a document.
Returns the number of rows in the table in a CSV or JSON format. If the table
str Prints the result of the cursor to the console.
Get a list of tasks from a list of tasks and a dependency graph.
str Add default deps for a project to the department list.
Add default dependencies atypes and sequences to a Project object.
Create a shot for a given sequence.
Create all the tasks for the given element.
Get the value of the given key in the given section.
str Add a factory for the given identifier. The factory will be started when the identifier is
Remove a factory by identifier and stop it. Returns the removed factory or None if the factory
Connect to a remote node.
Receives data from a given connection. Returns a dict of data received from the protocol.
Disconnects a protocol from a given connection.
Execute a command on the remote server.
str Called when a new connection is made.
Called when a multiplexed connection is made.
str The data received from the client.
str Send data to the server.
Called when the connection is lost. This is called when the connection has been closed.
Returns the protocol for the given connection identifier. If no protocol is found an exception is raised
Called when data is received from a remote node.
Disconnects a connection from the server. This is called when a connection has been closed.
str Center the string centered on the terminal.
Print a clock on the right side of the screen. The clock is printed on the right
Generate a version string from major minor patch prerelease and build parameters.
Identifies the unit framework for the given target unit.
str Asserts that the given value is convertible to the given target unit.
str pads data to a block of size blocksize.
str - > str unpadded data - > str - > padded data block size -
Signs a request and returns the signed request. If the request is already signed the request
str - > dict - > dict - > dict - > dict - > dict - >
Print the input word and anagrams in a pretty way. If the input word is
str Parse command - line arguments and exit with an error if the arguments are not valid.
Print a list of words and anagrams for each word in a list of words.
str Receive data from the server.
str Called when a packet is unregistered from the server.
str Create a function stub for the given url.
str Check if a call is in the local list and send a warning if it is not
str regex for matching the command name and its options. If grp is not specified the command
Convert a string to a list of AMPL values.
Convert an object to a string using the AMP protocol.
Verify that the metadata is valid. If the metadata is not valid raise an error.
str Parse the response from the remote server. If the response is not valid return none.
str List all database entries in the database specified by username password host port and db. If
str Syncs a folder with S3.
Build a CLI from a list of module paths and a package.
str Create a read - only Fridge object and close it.
str Load data from JSON file and update the object with the data from the JSON file.
Returns a JWT signed by the given keyjar using the given issuer and key id.
str - > str - > str - > str - > str - > str - >
descovery walks the given test directory and loads all modules in the test directory.
str Main entry point for librarian tests.
Returns the score of the given letter. If the letter is not found an error is raised
Returns the score of a word given a list of input letters and a number of questions.
Get a list of words in the file. If start and end are specified only the words
Check if a word is a valid scrabble word.
Called when a string is received from the client.
get the command and responder function for a given command and responder name
str Parse the values from the command arguments into the request object.
Write the response to the transport.
Called when the connection to the server has been lost.
Build a JSONAMP protocol for the given address.
str - > key jar
str - > key jar - > key jar - > key jar - > key jar -
Process the body of an event. If no match is found the default process is called.
Process an incoming message with the cinder customer. If no cinder customer has been registered
Process an event.
Process an incoming Glances message. If the message is not a Glances message
Process a message based on the body of a swift message.
Process an incoming message using the keystone library.
Process an event. If the event type matches a wildcard match it. If no match it
Serve the application forever. If no server is given a simple server will be used.
str Print msg to sys. stdout. If log is None print to sys. stdout.
str Print a message to stderr. If log is not specified the function will be called with
Register a command sub - class.
Register a command sub - class with the given class. The command sub - class must be
Convert the value to a string. If the value is not a string it will be converted
Create a new argument from a string.
str Update the completers dictionary with the values from cdict.
str Works on the Ternya server.
Create a new MQ connection and return the connection string.
init the modules from the config file and import the modules from the module. py file.
init nova consumer
init cinder consumer
init neutron consumer
init glance consumer
init heat consumer
Enable notification for a given OpenStack component.
str - > list of songs for a given songid - > list of songs
Download a song in a separate thread. The number of threads is used to download the song
str - > None - > None - > None - > None - > None - >
str Loads a variable from the globals dict. If the variable is not in the globals
Call a function in the context of the current context.
Dump a database to a file using the mysqldump command. The filename is relative to the
str Call the atexit function if it exists otherwise call the default atexit function.
str Runs the application with the given arguments and returns the exit code. If the application
Context manager that changes the current working directory and restores the previous working directory after the context
str Copy a directory and all its contents into a new directory.
This is the main debugger entry point. It is called when the debugger is started. It
Get the mtime of a file. If the file doesn t exist it will be created.
str Check if a file is changed. If it is it will update the modification time of
str Syncs the contents of the file system to the database.
str Clears all data from the file system. If the directory does not exist it will
Scrapes a feed from a given URL.
Download an image from the server and save it to the cache directory.
Returns True if the image has been modified since the last time it was loaded.
str Returns the filename line number and name of the caller. If stack info is set to
Returns the defining component of the given element. If the element is not a string returns none
str Main entry point for ooaofooa.
str Find a symbol in the stack. If name and kind are none return the last handle
str is contained in root pe? root pe? root pe? root pe? root pe
str - > bool - > bool - > bool - > bool - > bool - >
get the name of a data type
get the related attributes of rgo and rto from rgo rgo and rto
str s s. s. dt s s. dt s s. enum s s.
Create a bridge function from a bridge object.
str - > namedtuple - > str - > str - > str - > str - >
Create a function from a sync. Sync object. The function will be run on the met
Make a constant from a sysc. cnst and a sysc. cnst.
str o The name of the operation o is the name of the object o is the object
makes a derived attribute of the given metaclass from the given object. The derived attribute
r Create a simple association between two objects.
Make an association from a model and a relationship.
Create a component from a model. c can be either none or contains c c. If
str Works on the given socket and call with the given args kwargs and topics.
Accept a reply from the server.
Rejects a reply to a given call.
raises an exception on the given socket. If the socket is not connected it will be
wait for a call to be made and return the id of the call or raise an un
Establish a connection to a worker.
Dispatch a reply to the appropriate handler.
Guess the type name from the given value.
Deserialize a string value into a value of the given type.
str Get a feature from the index by its id. If no feature is found return none
put a list of features to the index.
str Delete the document with the given id from the index. If the document does not exist
Delete all mappings from the index.
str Delete the index if it exists. If it doesn t exist it will create it.
str Scans for DIDs with a given prefix. If no prefix is specified scans all
scan a prefix and return a generator of all the IDs that match the prefix.
scan ids by fname and val. fname is the name of the index fname is the name
Convert a list of feature names into a list of feature names.
str - > str - > str - > str - > str - > str - >
str - > dict - > dict - > dict - > bool - > bool - >
Get the types of the field.
str Return a list of index names that are disjunction of the given query from the given
bytes of the features in a FeatureCollection object.
Count the number of bytes in the file that match the given predicate.
Return a string representation of a feature collection.
Process docopt options and search for files. If no files are given search for files.
Return the error message as a string with HTML - escaped characters escaped. This is the default
Return a string representation of the given instance with the given link.
Returns a string representation of a unique identifier for a given instance.
check uniqueness constraint for the given metaclass. If kind is None then all metaclasses are
check integrity of a link
check that the subtype of the model is the same as the subtype of the relation id.
Convert an integer to a string. If val is an integer it will be converted to a
delete all rows from the table and all indexes from the index table.
scan the index for the given name and value prefix and return the results of retfunc.
Put the given index to the KVL.
Put a raw value into the index.
str - > str - > str - > str - > str - > str - >
str Return the index for the given name. Raises KeyError if the index does not exist.
Add a direction to a string.
Get the name of a type in a string.
get the refered attribute of the object o attr is the name of the attribute to be
build a core type from a core type definition s. cdt is the core type definition
s edt is a list of types that can be selected by the user. This is
str sdt is the type of the struct sdt is the type of the struct s
build a user type from a udt element.
Build a type from a type string.
Build a class element from an object.
Build a component from a model and a component class.
Build a schema from a model and a component.
Convert an XML string to a pretty - printed XML string.
Fetch all bikes from the server and return them as a list of dicts.
str Set node position info from lexer and position info from lexer and position info from parser p
str Create a queue and return its content and the method that will be used to execute it
Delete a job from the queue. Returns the content and method of the job.
List all the queues in the cluster.
Get a list of exchanges for the current user.
Purge the queue with the given name and return a tuple of the content and the method that
create a message with the given to subject html and message. attachments can be a string or
str Read the image from Tesseract and return it as a string.
Returns True if the text is visible. If the text is not visible False is returned.
str Main entry point for ooaofooa.
Serialize a value to a string.
Serialize an association into a string.
serialize a class into an XtUML string.
str This is the entry point for the command line interface. It is the entry point for
Partition a collection into two lists based on a condition. If the condition evaluates to true the
Returns an extra context dictionary that can be used to render a string in the context of a
str Finds a link between two models based on a given relation id and a phrase.
Compute the key to use for the lookup.
Compute the index key for the given to instance.
Returns the type of the given attribute.
Creates a new instance of the class and adds it to the storage.
str A generator that yields all the instances of all the metaclasses in the registry.
str Create a new meta class and add it to the model.
str Send a message to a socket.
Receive a message from a socket and return it as a string.
Exit if there are too many lines in the output file.
Parses a list of email addresses into a list of strings.
Returns a function that runs f in the context of the current context. If f is a
Returns a dictionary mapping attribute name to RPC spec. The key is the name of the attribute
Normalizes the postcode in the request. The postcode is converted to upper case and the
Returns the next value in the stream.
str - > None - > None - > None - > None - > None - >
c | | | | | | | | | | | | | | | | |
accept a PackageType instance as an expression and return it as a list of AST nodes.
Get the brightness of the image.
Match the expression with the given arguments. If no arguments are given an error is raised.
str Find the position of the first occurrence of a character in the document that matches the given
Returns a selection object for a character at a given position in the text editor.
Called when the cursor position has changed.
Returns a tuple of the exception and the exception details in the traceback. If the traceback is
Returns an instance of the class with the given name. If no instance with the given name
Execute the console with the given source. If source is none the input buffer is used.
Press up or down. Shift modifier can be set to True to shift the cursor up or
Press the down button. Shift modifier to shift the cursor down or shift the cursor up.
str Get the previous edit history entry. If as prefix is set to True the previous edit
Returns the next edited string or False if there are no more edited strings. Returns True if
Handle reply to execute command.
Returns True if the history is locked. Otherwise returns False. If the history is not locked
Returns the edited item at the given index or an empty string if the index is out of
str Set the history of the edit history.
Store the current input buffer in the history.
str Function to be called when the user closes the console and cleans up the consoles
Convert a collection of records to a pandas dataframe.
str Set the attributes of the object.
str Subscribes to all topics in self. topics. If a topic is already subscribed
str - > None - > None - > None - > None - > None - >
A remote iterator that yields the results of a remote function.
Convert a notebook to this notebook format.
Returns the importer for the given path. If the path does not exist it will be created
A wrapper for the io module. If the module doesn t exist it will be created.
Returns True if setuptools should override the given setuptools requirement or False if it should be
str Parse a requirement string and return an instance of this class. If src is not a
Returns the package info as a string. If the package info has not been set it will
collapses leading spaces into a single line. If header is str then the first line
str Hides the completion widget and disconnects the event handler.
str Shows the completion widget and sets the cursor position and installs the completion event.
Returns the current text. If the cursor is at the start of the text the text is
Updates the currently selected item in the list. If no current item is selected it will be
str Registers all models in the given app as the admin site for the given app.
Returns a list of partition objects for all the disk partitions in the system.
Get the system CPU times as a tuple.
Get system per cpu times as a list of tuples.
raw reads from stdin and returns it as a string. This is not a blocking operation.
Read data from stdin and replace it with a string and return it as a bytes object.
str Update the visibility of the tab bar depending on the number of tabs in the tab bar
Create a tab with the current kernel.
add a new tab with a frontend
populates all magic menu with a list of magic types. listofmagic can be a
Close all active frontend widgets and close all active frontend widgets if confirm mode is set to True
str - > bool - > bool - > bool - > bool - > bool - >
Return an indented title for the given item. If item is an instance of Item it will
Check if the user has the permission to change the tree editor object.
Check if the user has delete permission on the object.
add all the children of a given node to the graph at a given level.
make a bintree graph from a list of levels
Submits the given jobs to each node in the graph g in topological order.
str Check that all nodes in the tree are in the same order as those in the tree
make a color table from the base color templates and the base color table in the class.
Returns a copy of the color scheme.
Add a new color scheme to the color map.
str active scheme
Returns the absolute path to the Python library in the given home directory. If the home directory
Handle iopub messages. This is the main loop of the iopub process.
Waits for a kernel to be running. Returns True if the kernel is running False otherwise.
str - Set the style to use. If style is a string it will be converted to
Returns the format for the given token. If the token is already a format it will be
Format the given token in the given document and return the result as a string.
Get the format from the given style. The format is determined by the given token. The
str Find a command in a list of paths. If no paths are given the command will
Normalize a path to be used as a file path. This is done by normalizing the
Check that value is a list of strings. If it is a list of strings it will
str Check if value is a valid entry point for dist. attr is the name of the
Return True if the last line of src ends with a blank line.
Return True if the last two blanks in src are the same as those in src.
str Assign a system to a command and return the transformed line.
str transform assign magic to assign cmd and return the transformed line.
Transform a classic prompt into something that can be displayed on the screen.
Transform an ipy prompt into something that can be sent to the user.
finds the number of indentation in a line and returns the number of spaces and whether the
str Store the lines in the buffer. If buffer is none the current buffer is used.
Reset the source and return it as a tuple of the original source and the original source.
Handle cell magic.
append lines to the end of the current cell and return True if the cell is complete.
Transform a cell into a string. The cell is pushed onto the stack and returned as a
str Post a notification to all registered observers.
Returns a set of all observers for a notification of a given type and sender.
str Add an observer to be called when a message is received from a specific sender.
Update the status of the running jobs based on the status of the running jobs.
prints a group of jobs and returns True if the group is complete False if the group
flush a group of jobs to the console.
str Return the status of the group or dead components. Return None if there is no group
str Shows the status of the running and completed tasks. If verbose is set to True
str - > str - > str - > str - > str - > str - >
str Inserts a new value at the given index in the list of values.
Returns a copy of the object.
str Declare a special class.
str Declare a list variable with the given name. If the variable already exists it will
str Declare a set variable.
str - The path to the working directory of the process.
str Move to a random position in the route. If no state is given the current state
Returns the energy of the cities in the given state. If no state is given the
Returns a dictionary of default values for the given keys. If keys is none the default values
Check if the table exists and has the correct keys and types. Returns True if the table
Render a check into an expression and a list of arguments to be passed to the function.
Converts a list of rows into a table of strings.
str Creates a link tag with the given url.
Returns a javascript file from a URL. If the URL is relative it will be relative to
Returns a CSS file from a URL. If the URL is relative it will be relative to
str Creates an img tag with the given attributes.
Subtract arg from value. If value is not numeric it returns str. If value is
Multiplies value by arg. If value is not numeric it is treated as an integer.
Divide value by arg. If value or arg is not numeric return str. If value
Returns the modulo of the given value with the given argument. If the value is not a
Returns the verbose name of a model instance or a model form object.
Split a line of text into pre esc ifun and the rest. If pattern is none
str Options to be added to the command line parser.
str Deactivate all built - ins and clear the built - ins. This method is called
str Find the base url of a given url name in a given index. If the url
A generator that yields all links that have an explicit rel attribute. If rels is a list
str Splits a string into a list of strings. If the string is empty returns none
str Main entry point for the coverage script.
Add an action to the option list.
str Add an action to the list of actions to be applied to the given option.
str Prints the help message for a given topic or parser. If error or topic is
Do the help for the given command.
bool True if args are allowed and False if args are not allowed and False if args are
Execute the python script with the given options and args. If no source code is found the
\ x1b [ 1mNAME \ x1b [ 0m debug - Print
str Unserialize an object from a list of buffers and return the object and a list of
str Sets the sys. displayhook to the current one.
Calls the function f and logs any exceptions raised by it.
Check if a string is a valid URL. Returns True if the string is a valid URL
Check if url is a valid URL.
str - > str - > str - > str - > str - > str - >
Pull a value from a dictionary or list of values. If keys is a list tuple or
Select n random ports from the socket pool.
Returns the result of applying the function to the given sequences and returns the result as a string
Get the last n lines from the readline history.
str Set autoindent mode. If value is set to num indents will be turned on
init logstart magic string for logappend and loglogfile.
str Save the current sys module state to self. orig sys module and save it to self
str Restore the state of the sys module to the original state of the main module.
Register a function to be executed after the command is executed. If the function is not callable
create a new main module with the given namespace. If no namespace is given the main module
init user namespace
Returns a list of all the namespaces in the current user s namespace and the main namespace.
str Reset the state of the manager. If new session is True the session count will be
Delete a variable. By default the variable is deleted by default. By default the variable is
reset all variables that match a given regex. If regex is none all variables are reset.
str ofind property
Return the object with the given name. If no namespace is given return the object with the
inspect a method on the object oname is the name of the method oname is the
str Create a history manager and add it to the shell s configurables.
shows the traceback of an exception in the current context. If the exception is a syntax
str Prints the traceback of the traceback object to stdout. The traceback is printed to stdout
show syntax error message. filename is optional. If filename is not specified it will be used
pre readline with current line number and next line number next line number next line number next line
Add a custom completer to the list of custom completer methods.
str Sets the completer namespace and global namespace for the given frame. If no frame is given
str Runs a magic function on a given line. If the function does not exist it
Find a magic by its name and magic kind. If no magic kind is given the magic
Define a new macro in the namespace.
str Executes a command in the current working directory and returns its exit code.
Prompt the user for input and write it to stdout if the user wants to do so.
Get the value of the named user variables as a string. If the variable does not exist
Convert a dictionary of expressions to a dictionary of strings. The keys are the names of the
Evaluate an expression in the context of the current user s namespace.
str Executes a file in an ipy - style environment. If the file cannot be
Run a magic function on the current cell and return the result as a string.
Expands a variable in the context of the current function call. The function call will be
Create a temporary file and add it to the self. tempfiles list. If data is
str Runs when the process exits. This method is called when the process is exiting.
Broadcast a message to all targets of a given sender.
str List all profiles in a given directory.
list bundled profiles
Find a distribution by its key. If the distribution is not found a VersionConflict exception is
str Returns the full path to a file or None if the file does not exist.
Read the next line and return it as a string. If the end of the line is
str Send a string to the child process and return the number of bytes written.
str Send an interrupt to the child process.
Prepare a regex pattern for use in a query. This is done by encoding the pattern and
prepares a regex pattern for use in a regex_parser. parse_pattern method.
str Search for a string in the buffer and return the index of the first occurrence of the
Search for a string in the buffer and return the index of the first occurrence of the string
str Unpacks a directory into the given directory. If the directory does not exist it will
Return the last error in the log. If there are no errors raise runtime error.
Execute a command and check its output.
Find the source of a file.
A list of the arcs that have been executed in the file. The arcs are sorted by
Returns a list of arcs that are not executed and are not in the no branch.
Returns a list of the arcs that have not been predicted. This is a list of
Returns a list of branch lines with the maximum exit count.
Returns the total number of branches in the parser.
str Returns a dict of the arcs that are missing from the current branch.
str Returns a dictionary of branch numbers and the number of exits and the number of missing branches
str Set the precision of the number of digits to use for the number of digits to use
str Returns the number of statements covered by the execution graph. If the number of statements is
Get the covered value as a string with precision precision and the covered value rounded to the nearest
Highlights needles in haystack and returns the highlighted text. If needles is empty returns
Highlight the given string with the given keywords. If no keywords are given the string is returned
Highlight words in the given string using the given keywords. The keywords can be a list of
Run the given function in the context of the current file. If the function returns False the
Removes the end of a string from the end of a string. If the string ends with
Returns a marquee of the given text with the given number of characters rounded to the
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str str - > str str - > str
str - > list of paragraphs - > list of paragraphs of text - > list of paragraphs
str Find the optimal number of rows and columns for a list of rows.
Returns the i th item in a list or a default value if it s out of range
Build the command line arguments for the kernel. If argv is None the current argv will be
str Initialize the SSH connection to the kernel. This is done by tunneling the kernel to
str Prints a Python object as a pretty - printed string. If verbose is set to
str Prints a Python object to stdout.
str - > list of class. mro - > list of class. mro -
Pretty - print an object. This is the default implementation of pprint. The default implementation is
str Prints the object s class and its children as a pretty - printed string.
Pretty - print a re pattern.
Pretty - print the type of an object.
Pretty - print an object.
Pretty - print an exception.
Decorator to register a printer for a given type.
Register a function for a given type and name. If the function already exists it will be
Write a text object to the output. If the buffer is full the text is appended to
Add a breakable string to the current group. If the current group is the last group
End a group. If the group is not breakable remove it from the stack.
str Flush the buffer to the output buffer.
Pretty print an object. If the object is a class it will be printed. Otherwise it
str Write a row of data into an ODS object.
Get the current contents of the user s clipboard. The clipboard is returned as a string.
Get the text from the OSX clipboard and replace it with the text returned by osx
Get the current text from the Tkinter clipboard. The text is returned as a string
Get the build prefix for the current user. If the user doesn t have a build prefix
str rekey the keys in dikt to make sure they are integers or floats.
str - > datetime. datetime - > datetime. datetime - > datetime. datetime - >
Squashes all dates in an object and returns it as a string.
Return a string representation of a datetime object.
check if site dir is installed or not. If it s installed check if it s installed
str Write a script to the install directory.
sleep for t seconds. count is the number of seconds to sleep t is the number of
Create a new argument parser for the given prog and subcommand.
This is the main function of disambiguation. It is the main function of disambigu
Build a package finder from the given options.
Called when the log level is changed.
str Create a default logger with the specified level and stream handler.
str Called when flags have been changed.
str Prints the help for each alias in the list of classes in the class hierarchy.
str Prints the help for all flags.
str Prints the subcommands for this command.
str Prints the help for the command. If classes is set to True it prints the
str Prints the examples of the model.
Update the config with the new config.
Initialize a sub - command.
Flatten the flags dictionary into a dictionary of flags and a dictionary of aliases keyed by class name
str Parse the command line and return the configuration.
str Load a config file.
Generate the config file for this class.
Downsamples k elements from the array and returns them as a new array with the same shape
Format the info to a format that can be used to print to the console. This is
str - > None - > None - > None - > None - > None - >
This method is called when the config is changed. It is called when the config is changed
str Get help for this class and all traits of the given class.
str - > str - > str - > str - > str - > str - >
str Clears all instances of this class.
str Format a test failure.
Handler for lite exceptions. Prints a lite message to stderr and exits the program
Flush the queue and process all events in the queue. This method is called when the queue
str Start all the channels in the QApplication and emit the started channels signal.
Read data from a file - like object and return the data as a list of dicts.
Read a string from a file - like object without raising an exception if an interrupt occurs.
Split a string into a list of tokens.
Compress a hash list into a list of num - length lists. This is done by removing
record a magic name and a function in a dictionary of magic types.
Return a dictionary of all the documentation for all the magics. If brief is True
str - > strng - > strng in LaTeX format - > strng
str Create a default option for a given file.
takes a reference to a GUI object and returns a page object that can be used to
str Create a new task with the given callable.
str Returns the task info for a given task label.
get the callable from the funcinfo dict
Calculates the next run from the schedule. If the last run is the same as the last
str Submits a new task to the run queue.
str run the task with the given message. The message will be passed to the callable.
str Runs the next calculation and submits the result to the database.
str Run the callable with the given number of iterations. The callable can be a function or
str Run the callable one time at a time. If the callable is called multiple times the
Find the url file in the security directory. If no url file is specified it will be
str Bind the kernel to the engine.
Create an interrupt event.
str Runs the current process in a separate thread.
Filter a dictionary of objects by name and type. If name is a string it will be
str namespace type pattern filter filter ignore case and show all objects. filter can be a string
mutex - related function to check if two mutex operations are present in the given dict.
Function to draw the current figure. If the current figure is an interactive figure the function will
Function to flush all figures to the screen.
Prints a figure to the console and publishes it to the backend.
Loads an extension from the given module. If the module doesn t exist it will be loaded
Unload an extension from the ipython interpreter.
Generator that generates n random ports from the given port and number of ports in the range [
str Initialize the notebook web application and start the http server.
str Signal handler for sigint signal.
Confirm the user has entered a line to exit. If the user presses Ctrl - C
str Cleanup kernels.
r Calculates a stock price for a given number of paths.
str Replace all occurrences of the keys in dict with their values in text.
str - > str - > str - > str - > str - > str - >
Create a zip file in the given context.
Fixes the version of the Python interpreter by replacing the context dict with the context dict.
Returns True if obj is a mappable object.
get a partition of a sequence into a sequence of length q. p is the index of
Runs the source code in the given file. If get is set to True the output will
str Runs the given source in the child process. If get is set to True the
Download a file from the FTP server. If the file does not exist it will be created
Reduce a frequency list to a single frequency list.
Compute n digit frequencies from a text file.
Read a txt file and return a generator of the digits in the file.
Returns the frequency of a given set of digits.
Generate two - digit frequencies from a sequence of digits.
Generate n - digit frequencies from a sequence of digits.
str Plot two digit frequencies. f2 should be a numpy array with the same shape as
plot one digit frequency matrix as a single plot of 1 - digit frequencies and one - digit
str Prints expr in the current frame with the name of the current frame and the expression
Reverse the given view with the given args and kwargs. If a query string is passed in
Check if a string is a private part of another string. This function is used to check
str Tests the source code for debugging. If pm is True the source code will be
str Runs a script in a temporary directory. If pm is True the script will be
str Runs a debug script on the given module with the given name. If pm is
str Returns a dict of all hashes in the hashmap with the contents of the hashroot
str compresses all hashfiles in hashroot and removes them from self. root.
Returns a list of all keys in the directory. If no globpat is specified all keys
Returns True if the given record is allowed to be logged and False if it is not.
str Format the error and return a tuple with the error code event and traceback.
Embeds an interactive shell in the current context of the current context of the current context.
get new csv writers
prepares locale dirs for the given languages and locale root. returns a list of strings.
str - > list of entries to po files - > list of files languages - > list
str Write a po file with the given lang and the header to the given PO file.
Subscribes to a user. The user must be a member of the list of users
Initialize the command line parser and return the parsed options and the parsed command line arguments.
import a python module and run it with the given arguments.
r Run a python file with the given arguments. If the filename ends in str it will
make code from a python source file.
make python code from pyc file
str - > html tableify - > str - > str - > str - > str
str Current position of the slider.
str Cancels the current sliding interval.
Select the index of a given row and column in the list.
str Update the sliding interval based on the current sliding interval. If hilight
str - > str - > str - > str - > str - > str - >
prints the n most frequent words in a word frequency map.
Returns a string representation of the XML document.
Write the document to a file. The file will be created with the contents of the document
Validate a PIN document.
Send a shared pin to a list of topics. If validation is set to True then the
Delete a shared pin.
Send a pin to a user.
Delete a pin from the user s list of pinned users.
Subscribe to a topic.
List all subscriptions for a given user.
Starts a new progress bar with the given number of items. If no name is given the
A context manager that starts a task with the given total number of tasks. The context manager
A context manager for a subtask. This is a context manager that can be used to
Update the progress of the progress bar with the given number of units and optionally a message.
Create a sub - monitor and add it to self. sub monitors and return its name.
str Displays the progress of the progress bar.
str Change the build location of this installation to the new location in the temp build dir.
str Loads a list of pyconfig files into a config object.
str Loads the config file and converts it to a config object.
str Loads configuration from a dict or config object.
Decode a list of unicode objects into a list of str. If enc is none the default
Load the configuration from the command line and return it as a config object.
Convert the parsed data to a config object. The parsed data is stored in self. parsed
str Find a module by name and return its filename. If name is none return none.
Function to be called when the stop signal is received. The function will be called when the
Notify about the start of the simulation.
Notifies the stop of the loop.
interrupts the process and kills the process after delay seconds.
str Find the command line arguments for the current program. This is the command that will be
Returns the start of the MPI with the given number of times.
str Send a file to a remote server.
str Download a file from a remote host to a local host.
Count the number of engines in the database.
str Start a number of launchers and return a list of dictionnaries.
str Start a new job with the given number of jobs. Returns the job id.
Returns a dictionary with the default values for the context. The default values are n queue dir
Parses the output of the launcher and returns the job id.
str Write a batch script to the batch file.
str Start a new batch script and return the job id.
Create a context menu for the current cursor position. If the current cursor is an image copy
str Append a JPG string to the end of the list.
str Appends a png image to the end of the list.
str Append a SVG element to the end of the list.
str Add an image to the document.
Copy an image to the clipboard.
Return the image with the given name as a QImageResource object.
Insert an image in the editor.
str - > SVG - > SVG - > SVG - > SVG - > SVG - >
Save an image to a file in a given format.
Exit now if new is True.
Initialize the environment variables and install the payload page.
Auto rewrite the input with the given command. This is done by adding the given command to
Asks for the user to exit. This is called when the user exits the process.
Set the next input to be displayed.
Read a config file into the config object.
str List of values for a given option in a given section. If the option does not
Returns a list of lines from the given section and option. If the option does not exist
str Given an environment variable set the timid to True if it exists in the environment.
str Create a new instance from a set of keyword arguments. If the keyword argument is a
str Load a config file into the config object. The file can be either a file path
Set an attribute from a config file. If the file does not exist it will be created
Set the list of delimiters to be used for the string. The list of delimiters can be
Split a line of text into a list of strings.
Returns a list of all the words in the text that are in the global namespace.
Returns a list of strings that match the given text. If the text does not match the
Called when the user changes the greediness of delims. If new is True the
str Returns a list of aliases that match the given text. If the text does not match
Returns a list of matches for the given text. If the text does not end with a
Check if a line is complete. If it is return the match. Otherwise return none.
str Match a single record against a list of tests. Returns True if the record matches.
Returns a list of records that match the given check dict.
Extract a subdict from a dictionary.
Return True if the prompt is quiet. Return False if the prompt is not quiet.
Write the output of the shell prompt to stdout. If the full cache is set to True
Write the format data to stdout. If the data is not in the format dict it will
Write the output to the logger. If the logger is not configured the output will be printed
Raise an exception if the operation is freezed.
Convert a mysql timestamp string to a datetime. datetime object.
str This method is called when the eventloop is changed. It sets up a timeout to
str Do one iteration of the loop. This method flushes the control and shell streams.
str Publishes a pyin message to the iopub socket.
Aborts a request by sending it to the server. If the request is aborted it will
Clear the shell state and send a request to the server.
str - > bytes topic - > bytes topic - > bytes topic - > bytes topic -
Send a shutdown message to the iopub and flush the shell streams to the iop
This method is called before the context is executed. It adds the current module to the stack
Remove all modules from the stack and update sys. modules with the new ones.
str - > None - > None - > None - > None - > None - >
str Returns True if name is a file - like object. If name is a directory name
str Check if obj is a class or a subclass of it.
str Returns True if path is a package. If path is a directory returns True. If
ln returns a string of length num with the given label appended to the end of the string
Returns a class with the same name and module as cls but with the same name as cls
Get the system CPU times as a tuple.
Get the command line for the current process.
Returns a list of open file tuples for the current process. If the process is not running
str Returns a list of connections of the given kind.
Check if a user has a given group.
Resolve a class path into a class object.
Returns the percent of used and total in bytes. If round is not None it will round
Authenticates to the GData server and logs in to the GData server.
str Get the key from the query string and store it in the self. key attribute.
str Create the temp directory if it doesn t already exist.
str Clears the temporary files.
upload file to gdoc
str synchronize csv from gdocs. csv to po files.
str download csv from gdocs. csv to po files.
str Uploads the po files to the gdoc file and cleans up the temp directory
Clear the temporary file and upload it to the gdoc.
Function to create a new qt console.
check url accessibility
str Check if a URL has the specified contents.
Get the response code of a URL.
str Compare the content type of a URL with a given content type.
str Compare the response code of a given url with a given code.
Validate the data and metadata. If metadata is not none raise type error. If metadata is
Clear the output of the command.
Function to create a list of CodeUnit objects from a list of Morf objects.
str Returns the flat rootname of the module.
Returns the source of the file. If the file does not exist it will be created.
Return True if the file should be converted to Python or False if it should not be.
Returns the total number of seconds in a timedelta object.
str Get the result or raise an error if the timeout is reached.
str Wait for all messages to be sent to the server. If the client is not ready
Get a dictionary of engine ids and their results.
str Aborts the transaction with the given message ids and targets. If the transaction is not
str The elapsed time in seconds since the last submission of the message. This is the time
Wait for the progress bar to be ready and print it to stdout. If the progress bar
str is the name of the ipython package and is used to republish it to the
Wait for num outputs to be sent to the iopub. If timeout is greater than
wait for all outstanding messages to complete and return the result or raise an exception if there are
Returns the absolute path of the given file.
Returns a list of absolute paths for the given patterns. If the pattern is already absolute it
Returns the separator of the string s. If the string s does not contain a separator os
str Find all python files in a directory that match a regular expression.
str Returns the relative filename for the given filename. If the filename starts with self. relative
Returns the canonical filename for the given filename. If the filename does not exist it will be
get the data from a zip file.
str Return True if fpath matches any of the directories in self. dirs.
Check if fpath matches any of the patterns in self. pats.
Returns a new path with all the aliases mapped to the original path. The original path is
This is the main loop of the QT4 kernel. It starts the event loop.
Function to start the main loop of the gtk embed. This is the main loop of the
Enable a GUI.
Returns the goe of the number n in the range [ 0 n ).
Calculate the difference between the center eigenvalue and the center eigenvalue of the matrix mat.
Returns a list of the differences between the ensemble and the center of the eigenvalue of the
Create a new instance of the class and initialize it with the given context and step number.
Load the config file. If the config file does not exist it will be created. If
str - > None - > None - > None - > None - > None - >
str Erase all lines and arcs from the file. This is useful when you want to
str - > dict of line data sorted by file name.
str - > dict of all arc names and their names sorted by the order of the arc
str Write the current state to a pickle file.
str Read data from a file and store it in self. lines and self. arcs.
str The raw data of a file in pickle format. If debug is enabled the data will
str Reads a file and returns a list of lines and arcs. If the file is not
str Combine all parallel data files into a single file. Each file is combined into a single
str Add line data to the file.
str Add an arc data to the arc data dictionary.
str Add the executed lines and arcs to the hasher.
Returns a summary of the contents of the file. If fullpath is True returns the full path
Get pasted lines from the input stream. If the input stream ends with a line sentinel
This is the main loop for interacting with the user. This is the main loop that
str Replace readline history with a multiline version of the given string. Returns the length of the
Get the raw input from the user and return it as a unicode string. If the user
str Displays the last syntax error in the traceback. If the error should be recompiled
Ask the user to exit. If the user asks the user to exit. If the
get the url and revision from self. url and return it as a tuple.
Create a new frontend instance.
str colors to use for the widget. colors is a list of colors to use for the
str - Returns a tuple with the identity url pub url and location.
Convert a robj to a numpy array. If the object is a numpy array it will
str Set the active color scheme and set the active color scheme to the color scheme of the
toggles the color scheme in the table.
str Text representation of a traceback.
str Format a structured traceback.
Format a list of files and line numbers into a list of strings.
Show the exception of the given type and exception value in the output stream. The output is
str Set the mode to use. If no mode is given the current mode is set to
str - > None - > None - > None - > None - > None - >
Add a line to the code.
Add a new section to the code.
str Get a function by its name in the source code.
str - > str - > str - > str - > str - > str - >
Render the template with the given context. If no context is given the context will be used
str - > str - > str - > str - > str - > str - >
Render a template with the given context. If the template does not exist an exception is raised
str Default formatter for all formats. Default is plain text svg png jpeg latex json and javascript
Register a printer for a given type. If the printer is already registered it will be replaced
Called when the user changes the precision of a floating point number.
str List of user config files.
str Configures the logging system.
str Configures the working directory and the test names to be run in the given directory.
str strng - > str start - > int screen - > int screen - > int
Page the contents of a file. If the file does not exist it will be created.
Get the pager command. If no pager command is specified the default pager command is returned.
Get the pager start string. If the pager is a string it will be appended to the
Prints a string to the screen and returns the number of characters that should be printed.
Print a basic unicode object to the terminal.
print latex object to png
print a latex object to png and return the png object.
Return True if the given object can be printed as latex or False if it can t.
print a LaTeX representation of an object
str Add command line options to the given parser. If no environment is given the current environment
Validate that a list of strings is a list of strings. Raises error if invalid.
Validate a dictionary of string keys and values. Raises error if any of them are not strings
str Runs the ioloop loop. This is the main loop of the iolo
Receive a message from the server and call the appropriate handlers.
Sends a complete message to the client. Returns the complete message or None if there is no
Send a message to the server to get information about an object. This is useful when you
Sends a shutdown message to the server and returns the shutdown status. If restart is True the
str Flushes the queue until the timeout is reached or the number of seconds has passed.
Send a string to the client and wait for a response. The response is sent to the
str Start all the channels in the shell sub stdin and hb channels.
str Stop all the channels that are currently running.
str Returns True if any of the channels are running. False otherwise.
str Loads the connection file into self. ip shell stdin iopub hb and session
Launch a kernel on the local machine. If a kernel is already running it will be restarted
str kills the kernel if it is running. If restart is True kills the kernel
str Kills the current kernel process.
interrupts the kernel.
str Signal to the kernel if it exists. If not raise runtime error. If the kernel
Returns True if the connection is alive or False if the connection is not alive.
Returns the current shell channel. If no shell channel has been set it will be created.
Returns the sub channel for this connection. If there is no sub channel returns None.
Returns the HB channel associated with this connection. If no channel is associated with this connection
bind kernel to i. parallel. apps. ipengineapp. ipengineapp
str Debug message.
Returns a list of extension classes sorted by priority. If the list is empty it will return
Check if the step is a pre step of the extension chain. If so call the pre
walks an egg directory and returns a generator of bdf objects.
str Scan a module to see if it is safe to use. Returns True if the module
str Launches a new instance of the application. If the current process is not a multiprocessing
str - > str - > str - > str - > str - > str - >
str Load config from json file.
str Load secondary config from JSON file or write to file if reuse is True.
Enable autopx on the current shell run cell.
disable autopx mode
str Runs a cell and returns True if the cell was executed successfully or False if it
This function is called when a heartbeat message is received. It checks if the message is in
Run a single task with the given message. If the task is not running it will be
Remove a task from the queue.
str Patch an object attribute if it doesn t exist.
accept a new connection to the server and return a connection object that can be used to handle
Rejects the connection with the given reason. If reason is none the connection will be rejected
Returns a proxy object that can be used to communicate with the API. The proxy object is
str Validates the form and saves it to the database. If the form is valid it
str Delete the object and redirect to the success url.
If the user is logged in update the fields of the given instance with the logged in user
str Check if a module has changed since the last time it was loaded. If check is
Open a file in the editor. If the file does not exist it will be created.
Get the current text from the clipboard. This is the text that will be displayed on the
str Add a function to the chain.
Get the metadata for a given module. If the module is a directory it will return the
str Configures the plugin with the given options and conf.
str Import an object from a package or package name.
str Try to connect to a remote server using passwordless SSH. If paramiko is not
Try to open a passwordless SSH server using pexpect. If the command fails it will
str Try to connect to the given server using paramiko. If authentication fails return False.
Connect to a remote server and tunnel the connection to the remote server. Returns a tuple of
Open a tunnel to a remote server.
str Stop scheduling tasks.
str Unwraps the given exception content into an exception object. If the exception has a
Register a new engine in the engine registry.
unregister an engine from the list of registered engines.
Handle a reply to the execute command.
Flush all notifications from the session to the notification socket. This will block until all notifications have
Flushes the results from the session to the client.
flush control messages from the socket to the session.
str Flush ignored control messages to the control socket.
Flushes the iopub to the session and updates the metadata for each iopub
Spins every interval seconds. If the stop signal is set it will stop spinning.
str Stop the spinning thread.
Spins the event loop. This method is called by the event loop when the event loop
str - > None - > None - > None - > None - > None - >
Get the current history of the hub. The history is returned as a list of tuples.
str Query the database and return the results as a list of dictionaries. If keys is a
Returns a set of all of the opcode names in names. If any of the names fail
Get the parser as a byte object.
str Given a list of regexes return a list of the lines that match the regexes.
Returns the first line in a multiline string.
Returns a set of the first line in the given list of lines. If a line is
str Parse the source file and return a tuple of lines and the list of excluded lines.
Returns a list of all the arcs in the file in alphabetical order.
Returns a list of parser objects for each child of this node. This is a list of
str - > bytes - > str - > str - > str - > str - >
str Find all the statements in the file.
Return a string representation of a block stack.
Check that all the chunks are within the range of the number of bytes in each chunk.
A generator that yields the arcs of the file.
Split all child parsers into chunks and return them as a list.
Return a list of all the arcs in this parser and all of its sub - parsers.
str This method is called at the beginning of the script. It is called when the script
str Prints the coverage report to the given stream. The stream will be written to the
Returns True if the file should be included in the cover packages. If no package is given
interprets a distro name and returns a generator of distribution objects.
str Open a file with authentication. If authentication is successful the file will be opened with the
get the parent of obj. obj must be an instance of a class or an instance of
Returns the root topic of the engine. If the engine is an integer it will return the
Render the given template with the given context and return the result as a string.
str The configuration of the plugin. If capture is not enabled the plugin will be disabled.
str Format a test error.
Split a string by a given number of characters.
Convert to this nbformat. If version is not specified the nbformat will be converted to
str - > tuple of r g b - > bool - > tuple of r g b
str - > str - > str - > str - > str - > str - >
Get a font from a font family. If the font is not available fallback to none.
executes a reply to the current request. If the request has a number it will be
handle history reply
Handle pyout messages.
Handle the display data message. This method is called when a message is received from the client
i. i. c. channels method. This method is called when the kernel is started
str The path to the file to be executed. The path can be relative to the working
Process an error message and append it to the output buffer.
Execute the handler for the given item. If no handler is registered nothing is done.
str Set default style
str Edit the given filename and line. If no line is given the current line is displayed
Make an in prompt with the given number. If the number is not a number it will
Make a continuation string from a prompt.
str Called when the style sheet is changed.
str Changes the syntax style of the editor.
Transform a dictionary to a string.
str Information about the virtual memory of the system.
Get the system CPU times as a tuple.
Return a list of all the UID s of the process.
Returns a list of gids for the current process.
str Returns a list of thread tuples for the current process.
str Returns a list of open file descriptors for the process.
Get the commit hash of a package.
Return information about a given package.
Returns the number of CPUs on the system on Darwin.
Returns the number of CPU cores on the system.
Return the next set of messages.
Fetch a single row from the result set and return it as a tuple. If no row
fetch many rows from the result set and return them as a list. If size is not
fetch all rows from the result set and return them as a list.
str Connects to a node in the tree. The node will be connected to the peer
Reads a notebook from a JSON string and returns it as a notebook object.
Read a notebook from a string.
Reads data from a file or file - like object.
Write nb to a file in a given format.
Write nb to fp in the format specified by format. Returns the number of bytes written.
Convert a notebook to a metadata object.
Load a value from a dictionary. If the key does not exist it will be reset.
str Returns True if the given name matches any of the include and exclude patterns.
Returns True if the given class should be included in the result. If the class does not
str Determine if a directory should be included in the output.
str Returns True if the file should be included in the project or False if it should be
Returns True if the function should be included in the result. If the function is a subclass
Returns True if the given method should be included in the result. If the method does not
Returns whether or not the given module should be included in the list of available modules.
Returns a list of lines from a file. If the file does not exist returns an empty
list a file or a list of lines in a pydb file or a list of files
str Prints a list of lines from a file.
\ x1b [ 1mNAME \ x1b [ 0m pdef -
converts from currency to currency and returns the factor between from currency and to currency.
Convert value from one currency to another. If value is a float it will be converted to
Compute the return value for a given date range. The return value is the percentage of the
Return the encoding of a stream. If the stream is not a string return the default.
Returns the default encoding of the current process.
str Create a new connection file and store it in self. full_connection.
init heartbeats and start the heartbeat thread.
Create a session with the given config and username. The session is created with the given config
str Create sys. stdout sys. stderr and sys. displayhook if self. outstream
Constructor for the kernel. This is the constructor for the kernel. It is called by the
Converts HTML content to text.
Convert Markdown content to text.
Convert a domain name to a domain name in the specified domain s domain family.
str Excludes directories from the command line and adds them to the parser. env is a
str Configure the nose plugin with the given options and conf. This method is called by
str Returns True if dirname is in self. exclude_dirs False if dirname is in self
Returns True if the extension is linked to a dynamic library or False if it is not.
Call each function in the list and return the result.
Call a list of functions in reverse order. Returns the result of the first function call.
str Appends a function to the end of the list.
str Inserts a function at the given index. The function will be called with the given
Format the usage message.
Write the current process id to a file. If the file already exists raise an exception.
Remove the pid file from the profile. If the pid file does not exist print a warning
get the pid from the pid file in the profile. If the pid file does not exist
Construct a parser from a magic function. The function will be called with the name of the
str Returns the real name of a magic function.
str Highlights the current block of text. If the current block starts with a prompt the
Rehighlights the given block. If the block is already highlighted it will be rehighlight
Set the text to be highlighted in the given format.
str Copy the current text to the clipboard or to the current page if no page is currently
executes a command in the current context of the current context of the current context of the
Called when the user presses the end of the prompt. This is called when the user
Returns True if the tab is pressed and False if it is not. If the tab is
Create a menu from the given position.
Filter console keypress events.
Insert a continuation at the cursor position.
Handle a reply to a complete request.
Handle the reply from the client. This is the reply from the client to the client.
handle kernel died
Handle reply to object info request.
Handle pyout messages.
Handle stream message.
Handle a shutdown message.
Execute a file in the working directory. The file will be read from the working directory and
interrupts the current kernel.
Resets the interpreter to the beginning of the input. If clear is set to True the interpreter
restart a kernel if the user asks the user to confirm the user to restart the kernel
Call the tip for the current cursor position. If the current cursor is not on the same
Completes the current request. This is called when the user presses the enter key.
Process an error message. If the message contains a traceback it will be displayed to the user
Execute all the items in the message and print a warning if any of the items are not
called when the cursor changes the contents of the document. This is called when the cursor changes
str - The name of the method to call. If the method is a function it will
Call all the plugins in the chain and return the result of the first plugin that returns the
Generate a list of results from all plugins in the order they were registered with the plugin.
Simple method to call all plugins in the order they were registered. Returns the result of the
str Configures the plugin manager with the given options and configuration.
str Loads plugins from the entry points and adds them to the plugin manager.
str Loads builtin plugins into the plugin manager and adds them to the plugin manager.
Convert a LaTeX string to a PNG string.
str - > str - > str - > str - > str - > str - >
Check if a package already exists in the system.
str - > dict - > str - > str - > str - > str - >
Return the name of the current process.
get the percent of the current CPU usage. If interval is not specified the current CPU usage
Get the current memory usage in percent.
str Get a list of all the memory maps in the system. If grouped is True then
Returns True if the process is running. If the process is not running returns False.
suspends the current process. If the process is not running it will raise an exception
Resumes the current process. If the current process is not running an exception will be raised
kills the current process by sending a SIGKILL to the platform. If the process
Wait for the process to exit. If timeout is not specified wait for up to timeout seconds
str Wires the kernel to the main thread and hijackes the main thread.
Returns True if the given identifier is shadowed by the given IP.
str Register a new transformer.
str Removes a transformer from the list of transformers registered with register_transformer.
str Register a checker.
str - Unregisters a checker from the list of registered checkers.
str Register a handler for the given name and list of strings. The handler will be called
str Unregisters a handler for a given esc string or list of esc strings.
Pre - filters the given line info. Returns the pre - filtered version of the line info
Find a handler for the given line info.
Transform a line according to the registered transformers.
Prefilter a single line of input and return it as a string. If the line is
str - > str - > str - > str - > str - > str - >
Check if the line is a user or not. If it is return the appropriate handler.
Check if the line is a prefilter line. If it is return the appropriate handler.
Check if the line is a command line and return the appropriate handler. If the line is
Check if the line is a pre - filter. If it is return the pre - filter
Return the next line if it is a space and autoindent is enabled. Otherwise return the
Transform the alias from the ifun and the rest of the line into a string.
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
str Handle a single line of text.
Handle a single line of text. If the line is a command the command will be compiled
hides the tip when the user presses enter or escape and hides the tip when
str Enter event handler for the Tip widget.
str This method is called when the user clicks on the Tip widget. It draws the
str Show the call info and the tip of the call. If no arguments are given the
Called when the cursor position has changed. This function is called when the cursor position has been
str Converts a path to an absolute path. If the path is relative it will be prepended
Returns a dict with the masked values.
Check if we are running in a virtualenv without a global variable.
str - > list of word frequencies for a list of filenames. Returns a dictionary of word
str - > str - > str - > str - > str - > str - >
str Define an alias for a command.
Define an alias for a command.
str Validates alias name and command. Returns the number of arguments for the alias.
str alias - > str alias - > str alias - > str rest - > str
Transform an alias into a command string.
Expands aliases in a line of text into a single line of text.
Auto - help directive. This directive is used to display the help for a test program.
str - > str - > str - > str - > str - > str - >
Return a QColor object for the given color and intensity. If color is none return none
Get the format of the color box.
Generate a new token with the given secret age and optional payload. If no payload is provided
Remove expired JWTs that are older than self. age seconds since the last time it was
Check if a token is already used. If it is return true. Otherwise return false.
Check if the given token is valid and return the decoded data. If the token is invalid
Returns the longest common prefix of a list of strings.
Hint for the size of the splitter.
Returns True if the cursor can be cut in the current line.
str Whether or not the user can paste the current text into the clipboard or not.
str Clears the input buffer. If keep is set to True the input buffer will be
str Cuts the cursor.
Get the input buffer. If the buffer is already executing and force is set to False the
str Set the input buffer to the given string. If the input buffer has already been set
str Set the font to use for the tab completion widget.
str Prints the control to stdout. If printer is not specified the default printer is used
str Shows the top line of the prompt window.
Resets the font to the default font family size and style hint.
Append input to the end of the line. If before prompt is True the text will be
str Appends an HTML element to the end of the list.
Append fetching plain text to the end of the list. If before is set to True the
str Append a plain text to the end of the list.
Clear the temporary buffer.
str Shows the completion widget with the given list of items. If the number of items
Fill the temporary buffer with the given text. If html is True the text will be rendered
Returns a boolean indicating whether a control key is down or not depending on the given modifiers.
str - Create a QWidget for this widget. This method is called when the widget is
str - Create a page control for this widget. If a custom page control is provided it
Filter page keypress events.
Get the plain text of the given block.
Return the end of the current cursor.
Get the cursor position in the input buffer. If the input buffer is empty return - 1
Get the current line from the input buffer. If the input buffer is empty return none.
Get the current prompt.
Get the selection from start to end.
str Inserts a continuation prompt into the cursor.
Insert html into the editor.
str Inserts html into the editor and returns the plain text.
str Insert text into the cursor.
Keep the cursor in the buffer and move it to the end of the buffer if necessary.
Quit the keyboard. This is called when the user presses Ctrl + C or Ctrl +
str Page of text. If text is not a string it will be inserted at the current
str Called when the user presses enter. This is called when the user presses enter
Read a line and return it. If callback is not provided it will be called with the
str Set the continuation prompt. If html is set to True the continuation prompt will be rendered
Set the cursor to the top of the scroll bar.
str Adjusts the vertical scrollbars of the control based on the current viewport height.
This is the main entry point for the command - line tool. It parses the command -
str Copy a config file to the project location. If the file already exists and overwrite is
str Create a profile dir from a given path and name. If path is not a directory
str Find a profile dir by name.
Read a file and return its contents as a string.
str Create a temporary file and write src to it and return its name and file object.
str Closes the stream and flushes any buffered data and then closes the underlying file.
str Write data to file and output stream.
str Add a new heart handler to be called when a new heart is added.
str Add a heart failure handler.
Handle PING messages. This is called when a PING message is received from the server
Returns a list of batches of size size from the input sequence. If the input sequence is
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
str Extract wininst. cfg from a. cfg file. Returns none if the file is
str Uncaches the contents of a zip directory.
Convert a string into a string that can be used as an argument to a python function.
Check for conflicts in the given distribution. If any conflict is found return the original distribution.
str Get fetcher options from the distribution and set them in the config file.
str Create the home directory if it doesn t already exist.
Check if file name is an archive file.
str Create a new heading cell.
str Create a new metadata node.
str Create a new author node.
str Check if path is a directory and is writable.
str - > str - > str - > str - > str - > str - >
str Get the full path to a Python file. If the file does not exist raise io
str Return the path to the XDG directory or None if it doesn t exist.
Get the ipython directory for the current user.
Returns the directory of the ipython package.
get ipython module path from a module name
Returns the number of times the target is outdated or None if there is no such target.
str - > md5 hash of the file at the given path - > md5 hash
check for old config files in ipython dir. If it exists remove it. If it
Update the suggestions dictionary for the given object. If the user is not an authenticated user will
Returns a list of suggestions for the given object with the given size. If the object is
Get the suggestions for the given object.
Returns the relative path to the current working directory.
Returns a list of files that match the given pattern in this directory.
Read the md5 hash of the file.
Create a new hotshot profile and save it to self. prof and return self. prof
str Report the pfile to the given stream. If restrict is set to True print the
str Finalizes the process.
str Disables the event loop for the GUI. This is a no - op if the
disable qt4 in event loop and clear inputhook
Turn on interactive mode and enable inputhook for interactive mode. If app is not specified the
str Enable a Tk application. If no app is given a new one will be created
str enable pyglet
str wave saver
Initialize the database from the hist file. This is done by executing a query on the hist
Run a SQL query and return the result as a list of tuples. If output is True
get session info by session number. If session number is greater than or equal to num return
Get the last n rows of the result set. If include = True then only return the
get range by string rangestr can be a string or a list of lists of strings.
str Get the full path to the hist file in the given profile. If no profile is
Set the session name for the given session name. The session number is stored in the database
str Reset the output hist and start a new session if new session is True. If new
Get a range of lines from the history. If no range is given all lines are returned
str - > None - > None - > None - > None - > None - >
str Write out the cache to the database. If no connection is given the current connection will
str Stop the timer and wait for it to finish.
Get the number of CPUs in the system.
get the system per cpu times from a file in the sys. cputimes format.
Returns a list of tuples describing the available disk partitions. If all is set to True only
Get a list of all the process IDs in the system.
Convert a pair into a nice string.
Format a list of statements and lines into a human - readable string.
Returns a short version of the current stack trace as a string. This is useful for debugging
Join a list of regexes into a string. If the list is shorter than the number of
str Remove a file from the filesystem or raise an exception if it is not enoent
str - > None - > None - > None - > None - > None - >
update profiles from ipython and cwdu
str Stop a running cluster in a given profile. If the cluster is running it will stop
str Find the path to a given command or raise an error if it can t be found
Print stdout and stderr to standard out and wait for the process to finish.
finds the code units for the given Morfs. If no Morfs is
str Run fn for each file in the Morfs. If directory is not specified the
Set the trace of the current frame in the pdb. py file. The current frame is
init extension manager and load all extensions in the profile directory. If an extension cannot be loaded
str Initalizes the shell code.
str Executes the lines in self. exec lines and runs each cell in self. shell
str Runs all the startup files in the profile s startup dir.
str Runs the specified exec files.
str Run the code to run in the shell. If no code is provided run the code
str The name of the module to run. This is the name of the module to run
str Returns the full path to a file in the static path. If the file does not
Returns the contents of a file as a string. If the file does not exist it will
Escapes special characters in a string to make it safe to use in a template. This is
str Generates a report of the HTML files and returns the number of bytes covered by the report
make local static report files
Write html to file.
Returns a hash for the given source and coverage object.
Generate an index. html file and write it to the output directory.
Read the status file from the given directory. If the status file does not match the coverage
str Write the coverage information to a file in the given directory.
sorts two lists of strings and returns True if they are equal False if they are not
Get a slice of a sequence.
Chops a string into chunks of size size.
Read the manifest file and return a list of ignore and regexps that should be ignored.
str - > regexp - > glob - > regexp - > glob - > regexp - >
Returns True if filename matches any of the patterns.
Get a list of all versioned files in the current working directory. If the current working directory
Starts a new kernel. Returns the id of the newly started kernel or None if the kernel
shutdown a kernel
Kills a kernel.
Get the kernel with the given id.
str Returns a dict of the ports of a kernel.
Returns the notebook for the given kernel id. If no notebook is found None is returned.
str Start a kernel for a given notebook. If no notebook is given the current kernel is
str Shutdown a kernel with the given id.
str Interrupts the kernel with the given id.
str Restarts the kernel with the given id. Returns the new kernel id.
Create a new iopub for the given kernel id.
Create a new shell stream for the given kernel id.
Create a new HB stream for the given kernel id.
reset all one - time properties to their default values.
str - > str - > str - > str - > str - > str - >
fix html by replacing empty p with empty string.
Get a unique object from the database. If the object does not exist or multiple objects are
Returns a query that includes the terms in tokenized terms and the fields in search fields.
Returns the text query for a given query string and a list of fields to filter on.
Get a date greater than a given number of days or past a given date field.
Get date less than a given number of days.
Query for null or blank fields. If field is none return the field itself. If field
Add case insensitive fields to the fields dict.
str Options to be passed to the command - line parser.
Validate the attributes of the object.
Returns True if the given method is a method of the given class. Otherwise returns False.
Rotates the ring to the left of the cursor. If the ring is empty it will
Returns the websocket URL for the current request. This is the same as the request s protocol
Reserialize a reply to a reply to a user.
Injects a cookie message into the request.
str This method is called when we are about to start the heartbeat. This method is called
str Stop the heartbeat loop.
str - > None - > None - > None - > None - > None - >
Get the index of the block. If index is none return the block index. If index
str Seek to the given block index. If index is less than the number of blocks then
Edit the block at the given index. If no index is given the current block will be
str Show the block at the specified index in the marquee. If no index is
str Show all the blocks in the source file in a colored way. If silent is True
str Runs a function on a sequence in a thread.
str Find the source code for a traceback.
Find lines that can be inspectable at a given position.
countdown returns a countdown tag with the given name description id start and end date.
Send a signal to all the engines and kill the controller. This is done by sending a
saves the last n messages to the history and adds them to the outstanding queue.
str Syncs the results of the given function with the client and the outstanding ones.
Call the function f after spinning the function. Returns the result of the function f.
Get a list of messages from the stream.
Get a message from the queue. If the queue is empty return None. If the queue
Parse a URL into a dictionary.
Get a list of all the modules in the system. The list will be sorted by module
str - > list of module names to be used in completion. Returns a list of module
Magic run completer.
Quote an attribute for use in an XML string. If the attribute is a string it will
str Configure the plugin with the given options and config. This method is called when the plugin
str Prints a report to the given file.
Add an error to the list of errors for a given test. If the test is a
Add a failure to the list of failures for a given test. If the test fails the
Add a test as a success.
Returns a random number between a and b where a is the min of a and b is
str Weighted version of random number generator.
str Register a new engine with the graph.
str Remove an engine from the queue.
stranded tasks.
Audits jobs that have timed out and fail if they have timed out.
str Fails a job that is unreachable from the graph. If the job has no depend
save the unmet job to the dependent graph
str Submits a task to the engine.
dispatch a result message to the appropriate target based on the message s header and the message s
Handle the result of a request.
Handle an unmet dependency.
str Update the graph. Deps can be either none or hwm - num. If
prints the current state of the log
str Log a line to the log file or to the log file if the log file is
str - write data to the log file if logging is active and log output is enabled.
str Stop the log file if it exists. If it does not close the log file.
str Create a new worksheet with the given name and cells. If no name is given the
Add an object to the command chain.
str Add a regex to the list of commands to be executed when the regex is matched.
Returns a generator for the given key. If the key does not exist it returns None.
Yields the flat matches for the given key. The flat matches are returned as a generator
Make sure the new notebook directory exists. If it doesn t exist it will be created.
str List all notebooks in the notebook directory.
Returns a new notebook id for the given notebook name. The notebook name is the name of
Delete a notebook id from the mapping.
Returns True if the notebook with the given id exists in the notebook cache.
Find the path for a given notebook id.
Get the path to a notebook file by name.
str Get a notebook with the given id. If the notebook does not exist a 404 HTTP
str Returns the last modified datetime and notebook object for the given notebook id. If the notebook
Create a new notebook with the given data and save it to the notebook store.
str - > None - > None - > None - > None - > None - >
str Save a notebook object to the notebook store.
str Delete a notebook.
Creates a new notebook and saves it to disk. Returns the notebook id.
Copy a notebook to a new notebook id. Returns the new notebook id.
Takes a list of tokens and returns a list of tokens where each token is a token and
str Loads the default config file.
Returns a list of the default classes for the application. The default classes are the classes that
str - > str - > str - > str - > str - > str - >
str Initialize the ipython interpreter.
str Create a new interactive shell for this configurable.
str Displays the banner in the terminal if the user is interacting with the banner.
Return a string representation of an object.
Parse a notifier name into a list of strings.
Returns a dictionary of traits for the given class. The keys are the trait names and the
Returns the metadata for the given trait or raises an error if the trait is not found.
Validate that value is a subclass of self. klass. If value is not a subclass of
Get the default value of the field.
str Check if the result is a subset of completed or failed. If the result is a
str Return True if the job is unreachable.
Returns a dict representation of the dependency tree.
Returns the depth of the node n in the tree tree.
str Prints a bintree.
str Disambiguates the given URL from the given location. If the location is not an
Returns the result of applying the function f to each element of value. If flat is True
validate targets. targets can be either a list of strings or a list of integers.
dispatch the traffic to the appropriate handler for the given switch.
dispatch a query message to the appropriate handler depending on the type of the message.
Handle a new heart. If the heart is not in the list of incoming he
Handle a heart failure.
str Save a message to the database.
save iopub message to database
This method is called when a client sends a message to the server. It is called by
Unregisters an engine from the queue.
finish registration heart is the id of the registration heart is the id of the registration
Send a shutdown request to the client and wait for it to finish. This is used to
Purge the results for a given client id.
Extract the content and buffers from a record.
get the history of a message from the database and send it to the client.
Query the database for the given client id. The client id is the client id of the
cd moves the current working directory to newdir and then restores the previous working directory.
str decode cmd. stdout and cmd. stderr and return parsed cmd. returncode cmd. args
Run a command in the current working directory. If catched is True the command will be
dispatch a message to the appropriate handler.
Returns True if the message is from the same session as the current session.
str Generates a report of the Morfologik report for the given Morf
str Get the installed version of a package.
Squashes all unicode values in a dictionary and converts them to str.
Extract the header from the message. If the message is empty return an empty dict. If
check packers and unpackers
str Create a new message with the given type content parent and subheader.
Signs a list of messages and returns the signature as a bytes object. If the auth
Sends a message to the given stream with the given flags. If copy is set to True
recv a message from a socket or socket object. Returns a tuple containing the idents and
Save SVG string to file.
Writes a string to the clipboard.
Convert a SVG string to an image. If size is none the default size is used.
Returns a dictionary of information about the object. The keys are the field names and the values
Get the docstring of an object. If the object has no docstring None is returned.
Get the source code of an object.
str - > tuple - > tuple - > tuple - > tuple - > tuple - >
str Find the absolute file name of an object or a wrapped object. If the object is
str Find the source line number of an object or a wrapped object.
str Get the function definition of an object. If the object is not a function return none
Return a string with the head of the table with the given number of cells.
noinfo prints a message and optionally a file name. If oname is not specified
str - > str - > str - > str - > str - > str - >
prints the source of an object to the screen. If the object is not a Python
str Prints the source code of a file or directory.
Format a list of fields into a string with the given width. If the number of fields
Search for a pattern in a namespace table.
Returns the reactor and the twisted thread. If the reactor is not running in a thread
Returns the XML as a string. If indent is set to True the XML will be indented
Returns the XML representation of the object. If the object has data it will be updated.
Load all modules in a set of packages.
invert a dictionary by splitting the string into a list of key - value pairs and then
Convert an object to a primitive type.
get figs by number or list of figures. If no number is given all fig
str Prints a matplotlib figure to the screen.
selects a figure format and prints it to the console. If fmt is not a string
Find the GUI and backend to use. If no backend is specified use the default backend.
activate matplotlib backend. backend can be either a string or an instance of matplotlib. rc.
str Configure an inline backend with a pylab shell and a pylab backend.
Start the current thread and return the current trace as a string. Returns the current trace.
str This method is called when the thread is stopped. This method should only be called when
Start a new tracer and return a function that can be called to stop the tracer.
str Installation of the tracer.
str Start the collectors.
str Stop the current collector and resume the previous one.
str Pause all the tracers and print the current stats.
str Resumes all the tracers and sets the current trace to the installation.
Get the line data as a dictionary. If the line is a branch the data will be
collect exceptions from a list of remote errors and raise them as a composite error.
Render traceback as a string. If excid is None return all tracebacks. If exc
str Start up the coverage process and start coverage reporting if there is a coverage config file.
Returns the canonical directory of the given MARC file.
str Returns the source code for the given filename.
Check if the given filename should be traced. Returns a tuple of the canonical filename and
Returns a tuple of the canonical filename and the frame that should be traced. If the
Add a warning message to the list of warnings and print it to stderr.
str Check for packages and add them to self. match.
str Start the collector.
str Called at the end of the process. This is called when the process is exiting.
str Exclude a regex from a list of strings.
str Save the current data to the file. If suffix is bool the data will be saved
Combine all paths in config. paths into a single file.
str Harvest data from the collector and store it in self. data.
Returns the analysis of the Morf as a tuple of f s m and mf.
Analyzes the given code unit and returns the result. If it is a code unit
str Generates a report of the harvest data and reports it to a file.
str Run harvest harvest and annotate with the given Morfs. If directory is
str Report the results of the harvest process as an XML file.
str Reloads the data from the file or url.
str Find the path to a given command.
Run a command on the remote host and return its exit status. The command is expected to
forward events from a file descriptor to a pull socket and return a pull socket.
str Runs the loop. This is the main function that will be called when the process
Find launcher class by name and kind. If kind is not specified the launcher class will be
str Start a new process and wait for it to finish. If the process is already running
str Launcher class.
str Start the event loop. If daemonize is True the event loop will be daemonized
str Start the main loop. If the process is already running exit. If the process is
Returns a wx. py instance of a wx. wx. Simple instance if it is not
is the main event loop running?
start event loop
Returns an instance of the Qt4 module. If the module is not installed it will be
Returns True if the event loop is running. If app is None it will return True.
Starts event loop. If app is not None it will be run in the event loop.
Create a blank canvas with the given width and height. The canvas will be filled with zeros
draw a cross - section of the image at a given position with a given color and radius
str Draws a line on the image. pos1 and pos2 must be integers.
Convert a grayscale image into an annotated image. If channels is set to True then the
str Returns a UUID of a given length. If version is not specified the uuid will be
str Get a unique key from a get dict.
Get the domain name from a URL.
str Get url arguments as a dictionary.