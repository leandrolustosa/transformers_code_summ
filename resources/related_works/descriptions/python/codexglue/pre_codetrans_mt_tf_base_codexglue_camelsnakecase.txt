Convert sina xml to url list.
Download a file from the Dailymotion site.
Simple sina downloader.
Return text formatted to be displayed in the terminal.
Print text to stderr.
Print a message and exit with an optional exit code.
Print a message and exit with an optional exit code.
Detect the operating system.
get player information by xml string
get mgtv url size segment list
Legitimize a string.
Download a cbs file.
Matches text with all patterns in patterns.
Parse a query parameter from a URL.
Parse a host string into hostname and port.
get title by topic and part
Download wanmen data by course and topic part.
Download bokeccs by course topic part.
Check if the given task instance is currently running or queued.
Returns the event buffer for the given dags.
Return a connection to the snowflake server.
Get AWS credentials.
Returns the value for the given field. If the field does not exist returns default.
Copy expert. sql to file.
Dump the contents of a table into a temporary file.
Upload a file to Google Cloud Storage.
Show the current state of a task.
Returns a connection object to be used to interact with the database.
Get instance information.
Create an instance.
Delete an instance.
Create a database.
Delete a database.
Start sql proxy process.
Stop sql proxy.
Get sql proxy version.
Create a new connection in the database.
Retrieve connection from database.
Delete connection from database.
Get sqlproxy instance.
Get the database hook.
Clean up database hook.
Reserve a free tcp port.
Normalize mlengine job id.
Extract error code from exception.
Delete all runs in all dags.
Remove all task instances from the database.
Set the paused state of all DAGs in the database.
Print task execution time and duration.
Check to see if the job is still running. If it is stop the program.
Equivalent to mkdir - p.
Convert string to float if possible.
Makes a value aware by timezone.
Convert a datetime object to a naive datetime object.
Wrapper around dt. datetime that uses the default timezone.
get druid broker connection
Return a requests session object.
Run the request and return the response.
Check the response for errors.
Send the request and check the response.
Create a session and commit it.
Drop migrations and init db
Get pretty exception message.
Execute HQL query against the database.
Execute HQL query and return as pandas dataframe
Run HQL with optional parameters.
Insert rows into a table.
Return a cosmos connection object.
Check if a collection exists.
Create a new collection in the database.
Check if a database exists.
Create a database if it does not exist.
Delete a database.
Delete a database collection.
Insert multiple documents into a collection.
Delete a document by id.
Get a document by its id.
Return a list of documents matching the query.
Get a function from a location
Create a new function in a project.
Update a location function.
Upload a zip file to a location.
Delete a location function.
Get the status of the dependencies for the given ti.
Return True if all dependencies have been met.
Return a list of failure reasons.
Parse a s3 config file.
Get credentials for a region.
Get a connection to vertica
Flush the buffer to the logger.
Check if the fileloc points to a zip file.
Return the task instance associated with this execution.
Start the process.
Terminate the child process
Properly terminates the process ends the process then exits.
Start the scheduler.
The main loop for the dag parsing thread.
The main loop for the dag parsing loop.
Check if elapsed time since last dag dir is greater than self. dag dir list interval then refresh
print stat if interval seconds have passed
Remove import errors from the database.
Process a list of known file paths and log statistics.
Filter processors by file paths.
Wait until all processors have finished processing.
Terminate child processes and wait for them to finish.
Get SSH connection.
Create a new transfer job.
Returns the result of a transfer job.
List transfer jobs.
Update a transfer job
Cancel a transfer operation.
Pause a transfer operation.
Resume a failed transfer operation.
Wait for a transfer job to finish.
Find for a particular task instance.
Return the number of open slots in the pool.
Run a command and return the output
Allocate ids for the given keys.
Begin a transaction on the remote database.
Commit changes to the remote project.
Lookup a set of keys.
Roll back a transaction.
Run a query against the database.
get operation by name
Delete an operation.
Poll an operation until it is done.
Get hostname from configuration.
Returns connection to the language service.
Return a list of template fields for a class.
Link to template field.
Dispose orm.
Prepare classpath for airflow.
Check the status of the target task
Detect if we have a configuration var.
Convert an SQLAlchemy object to a dictionary.
Yield successive num - sized chunks from items.
Reduce an iterable in chunks.
Chain a number of tasks together.
Render the log file.
Return a connection object to the API.
Runs the given operation on the server and waits for the result.
Coerce content to a string.
Process the databricks operator.
Run airflow s pig command.
Fetch the state of a celery task.
Return the number of tasks to send.
Returns the number of tasks in the process.
Return a connection object.
Returns the result of a job.
Wait for a job to finish.
Creates a new version of a model.
Sets the default version for a model.
Returns a list of versions of the specified model.
Deletes a version of a model.
Creates a new model in the specified project.
Gets a single model by name.
Write batch data to DynamoDB.
Integrate all executors into the globals.
Get the default executor.
Get an executor by name.
Log and raise Airflow exception.
Get a connection to the MS SQL server
Trigger a dag
Delete a dag.
Get information about a task.
List all pools.
Create a new pool
Create or update a container group.
Get the current state exit code and details.
Returns a list of messages for the given resource group and name.
Returns a list of logs for a container.
Delete a container.
Check if a container exists in a resource group.
Construct the ingest query dict.
Respond to a poke command.
Get all task instances in this execution.
Get the task instance for the given task id.
Returns the previous DAG run before this one.
Get the previous scheduled dagrun for this execution.
Verify the integrity of the workflow.
Do a jenkins request with headers.
Convert the airflow context to a dictionary of airflow variables.
Conditionally triggers a run.
Query the metric endpoint.
Get a dag by its id.
Kill a list of zombies
Add a dag to the bag.
Collects all the DAGs in the specified folder.
Return a report on the DAGs in the DAGbag.
Add a number of days to a datetime.
Return True if the file should be pruned.
Return True if the file should be copied False otherwise.
Remove all task instances from the database.
Returns the total number of try attempts.
Get the current state of the task.
Set the state to failed and commit the transaction.
Fetches the latest task instance from the database.
Delete all execution logs for this task.
Returns the string representation of the state of the task.
Returns True if the task depends on the execution date.
Returns the datetime of the next retry attempt.
True if the job is ready for retry False otherwise.
Check if the pool is full.
Get the DAG Run for this node.
push a key value pair into the xcom object
Initialize run context.
Writes the log file to disk if it exists.
Returns a connection to the API.
Start an instance.
Get a single instance template
Wait for an operation to complete.
Check if bucket exists.
Create a bucket in S3.
Check if a prefix exists in the bucket.
List all prefixes for a bucket.
List the keys in a bucket.
Check if key exists in S3.
Get object by key.
Read the content of a key.
Check if a key matches the given wildcard key.
Get the first key that matches the wildcard key.
Query the Cassandra database.
Convert a user type to a list of values.
Returns a connection to the Speech API.
Executes the query.
Load airflow plugins from an entrypoint.
Validate a plugin object.
Skips the given tasks for the given execution date.
Get a connection from the device.
Check if a file exists.
List files and directories in the specified path.
Run the query and check the status.
Uncompress a compressed or bz2 file.
Return a cursor to the database.
Build metrics for the given function name and namespace.
Creates a cgroup for the given path.
Deletes the cgroup at the specified path.
Make a call to the databricks API.
Returns the Salesforce connection object
make a query and return the results
Describe the given object
Get the available fields for an object.
get object from salesforce
Convert datetime column to timestamp.
Get a mongo collection.
Check if there is a mail attachment with the given name.
Find attachments by name.
Returns the filename and the payload of the message.
Sends a batch of records to Firehose.
Get the status of the last dep.
Sends an email.
Send email via SMTP.
Convert UTC datetimes to UTC.
Check if a blob exists in a container.
Check if there are any blobs with the given prefix.
Create a blob from a string.
Reads the contents of a blob.
Delete a file from a container.
Get ftp connection.
List files in a directory.
Store a file on the remote system.
Get the modification time of a file on the server.
Executes the webhook.
Get connection details.
Check if a directory exists.
Check if a file exists in a directory.
List files and directories in a share.
Creates a directory in a share.
Load a file from a path.
Load a file from a string.
Returns storage connection.
Downloads a blob to a local file system.
Upload a file to a bucket.
Check to see if a blob exists.
Check if a blob is updated after a specified time.
Delete a blob from a bucket
Get the size of a blob.
Get the CRC32c of a blob.
Get the md5hash of a blob.
Check if secondary training status has changed.
Generate a secondary training status message from a job description.
Upload a tar archive to S3.
Configure s3 resources.
Check if s3 url is valid
Get a connection to the log.
Execute the dataflow hook
Run migrations offline.
Run migrations online.
Delete instance.
Delete a table.
Update a single cluster.
Prepare the hive command for execution.
Prepare hive configuration from a dictionary.
Checks if a table exists in the database.
Return a connection to the database.
Execute a HQL query and return the results as a dictionary.
Execute a HQL query and return the results as a dictionary.
Execute HQL query and return a pandas DataFrame.
Returns a product search client.
Get API token.
Bind parameters to an operation.
Escapes a string so that it can be used in a URL.
cast string field to bq type
Validates that the value is of the expected type.
Return connection object for this query.
Authenticate and get the service.
Check if a table exists in a dataset.
Submit a query to cancel a job.
Delete a table.
Update or Insert a table.
Get a dataset by id.
Executes the given operation on the database.
Executes the specified operation multiple times with the specified parameters.
Returns the next page or None if there are none.
Return a cursor to the postgres database.
Create intermediate directories on sftp server.
Run the command and return the process object.
Called when finish is called.
Entry point for the script.
Builds the html header.
Build the javascript string for the chart
Create a new x axis.
Create a new y - axis.
Get connection.
Get the last dagrun for the given dag id.
Send the message to SQS.
Generate a JSON response.
Open a file possibly zipped.
Create a cache key for the given args and kwargs.
Returns connection to video intelligence service.
Get API key.
Return a requests session object.
Execute the request.
Build opsgenie payload.
Execute the hook.
Return connection string.
Run a query and return the query execution id.
Check the status of the query execution
Poll the query status for the given execution id.
Returns a pysftp. connection object for the SSH session.
Handle a rate limit exception.
Get the contents of a table.
Returns the location of the table in the database.
Get cluster status.
Deletes the cluster with the given identifier.
Returns a list of snapshots for the specified cluster.
Restore from a snapshot.
Create a new cluster snapshot
Execute Slack API call
Run an EMR job flow.
Filter result to only include files of the specified size.
Filters a list of dicts based on a list of extensions that have been ignored.
Execute mongo command.
Get pool by name.
Create a new pool or return an existing pool.
Delete a pool from the database.
Convert a dict to a JSON object.
Wait for an operation to finish.
Get an operation by name.
Append a label to the cluster proto.
Get the endpoint for a webhook.
Build a discord payload
Runs the bot.
Encrypt a plaintext message for a key.
Returns a connection object to be used for talking to the server.
Writes the log file to S3 if it exists.
Returns a dictionary of environment variables.
Get secrets from kubeconfig.
Get the security context.
Get extra links for the given operator.
Start the DAG instance.
Return True if the job has finished running.
Exit the application gracefully.
Update the import errors in the dagbag.
Finds all runs that have dependencies and processes them.
Get the number of tasks in each dag in the specified states and the number of tasks in each
Change the state of one or more executable task instances to acceptable states.
Queues a list of simple task instances for execution.
Change state for tasks that failed to execute.
Process the executor events for the given dag bag.
Update the counters for the given task.
Manage executor state
Get a dag run for the given execution date.
Returns a dict of tasks to run for the given dag run.
Sets the state of all the dag runs to failed.
Check if the current process is running and terminate the runner if not.
Returns the client for the given project id.
Get instance by id.
Delete an instance.
Delete a database.
Returns True if mail attachment is present False otherwise.
Prepare additional parameters.
Returns a connection to the Cassandra cluster.
Check if a table exists in the cluster.
Returns True if a record exists for the given keys in the given table.
Build command for Airflow to track the current Spark driver.
Run a Spark submit command.
Process the log file.
Process the Spark status log.
Return a task runner for the given local task job.
Wait for the task to finish.
return a cursor to the mysql database
Configure csv file with schema.
Write the schema to disk.
Get column type dict from schema
Map mysql type to python type.
Deserialise extra data from JSON
Scale a list of time units.
Return a datetime that is n days ago.
Initialize a role.
Delete a role by name.
Returns a list of the user s roles.
Returns a list of tuples with perm name and view menu name
Checks if the user has any of the specified roles.
Returns True if the user has the specified permission.
Delete all permission views.
Merge a permission with a view menu.
Update admin perms.
Create permission vms for all dags.
Get the fernet object.
Check if the partition expression is valid.
Poke a message from SQS
Return a connection to the HDFS server.
Get a connection.
Check if hdfs path exists.
Get connection.
Return the URI for this connection.
Convert datetime. date to dict.
Convert a time object to a dictionary.
Get redis connection.
Executes SQL and returns a Pandas DataFrame.
Runs SQL against the database.
Set connection autocommit flag.
Serialize the given cell to a string.
Health of the scheduler.
Return cloudant session object
Execute the Slack webhook
Get Google OAuth 2. 0 credentials.
Authorize to Google API.
Return a list of unfinished state.
Prepare the command to execute.
Normalize a tensor by its mean and standard deviation.
Crop an image.
Flips the horizontal edges of an image.
Apply perspective transformation to an image.
Flip top and bottom edges of an image.
Adjust brightness of an image.
Adjust contrast of an image.
Adjust saturation factor of an image.
Convert an image to grayscale.
Tensor to PIL image file.
Find classes in dir.
Reads the labels from an info file.
Reads matches file into a torch. longtensor.
Calculate the accuracy of the output
Download url to root.
Returns a list of all directories under root.
Returns a list of all files with the given suffix under the given root.
Download a file from google drive.
Get random parameters for an image.
Generate startpoints and endpoints for distortion.
Get random parameters for an image.
Generate a set of transformations for a random set of parameters.
Get random parameters.
Download the tarball extract the tarball and download the file.
Downloads the training and test files and saves them to disk.
Get current theme name.
Returns a list of all themes in the specified directory.
Parse response from Yahoo YQL API
Wrapper around tfd. normal with different shapes.
Computes the joint log prob of the effects of eight schools.
Build a random variable.
Find the maximum along an axis while also masking finite values.
Returns the prod of the event shape.
Evaluate a function over all hot tensors.
Deserialize identifier to a Tensor.
Tensor with num components and params size.
Builds the input pipeline.
Checks that the given map values are valid.
Calls the given transition operator with the given arguments.
Call a transition operator and compute its gradients.
Broadcasts a sequence from one structure to another.
Perform a leapfrog step.
Perform a single Metropolis hastings step.
Create a tfp layers. Config object from a dict.
Convert x into a tensor.
Expand to event rank.
Concatenate softmax and logits.
Ensure tensorflow is installed.
Logistic regression.
Return features and labels of the most specific category.
Makes a positive axis from a number of axes.
Squeeze x along axis.
Tensorflow z.
Inverse of scale and loc.
Semi - local linear trend transition matrix.
Semi - local linear noise.
Return a list of primes less than n.
machine eps for a given dtype.
Minimized linear bisection.
Prints a tensor to a string.
Checks a quadrature parameter.
Interpolates a grid with the given loc.
Interpolate linearly along a scale matrix.
Concatenates multiple tensors into a single tensor.
Computes the log matrix of a vector.
Tensor log matrix vector.
Computes the matrix of a vector.
Extracts log probabilities of num states from the given distribution.
Choose a random direction.
Calls a function with the given arguments or raises an error.
Builds a trainable posterior using the given function.
Computes the mean and variance of the moments of the given time series tensor.
Returns the initial value of the time series tensor that is masked with the given broadcast mask.
Mixes over posterior draws.
Return the range of this interval.
Resolve distribution names.
Build a new distribution from the given model.
Entropy of the joint distribution.
Create an image summary.
Visualize reconstruction.
Implementation of the qualitative analysis pipeline.
Summarize distribution params.
Summarize mean in nats and bits.
Tensorflow multivariate normal function.
Create a zero state.
Call the convolutions.
Sample from the static prior.
The shape of the batch tensors.
Returns the shape of the batch tensor.
Vector size to square matrix size.
Return indices that would sort a numpy array.
Sort an array along a given axis.
Normalized Discriminant Triangulation.
Calculate the log - ndtr asymptotic series of a tensor.
Exponential inverse of x.
The text messages joint log prob.
Checks whether the given index is a univariate marginal distribution.
Returns index points. If index points is none returns self. index points.
Squared difference between x and y.
Computes the jacobian of the function f applied to x.
Split the covariance matrix into marginals.
Returns a string representation of a numpy tensor.
Returns the sample shape.
Sample shape as a tensor.
Sampled value.
NumPy representation of the tensor.
Uniform unit norm.
Log normalization.
Find the most common dtype for all args.
Broadcasts a tensor to a list of tensors.
PDF at peak.
Compute the effective sample size for a single state.
Possible scale reduction of a single state.
Returns the size of x along the given axis.
Broadcast maybelist arg.
Return a mapping where the field is removed.
Merge two values.
Convert nested tuple to sorted tuple.
Get the inputs of a function.
VGG convolutional block.
Returns true if the momentum has no u turn.
Leapfrog algorithm.
Log joint.
Returns a tensorflow element with random bernoulli distribution.
Converts nested structure to tensors.
Returns a dictionary of attributes for the TensorFlow tensor instance.
Make a mixture prior.
Pack images into a batch.
Download a file from a URL.
Call volatility function and possibly gradients volatility function.
Broadcasts volatility across the state.
Calls the given function on the input and reshapes the output.
Calls the given function and reshapes the output.
Gradient of truncated negative binomial log - likelihood.
Samples from the root distribution.
Get the string representations of each topic.
Add ema to the vector quantizer.
Takes an array of images and saves them to a file.
Convert dtype to numpy dtype.
Returns the base dtype for the given dtype.
Check if dtype represents a boolean type.
Check if the given dtype is a complex type.
Returns the maximum value of the given dtype.
Returns the name of the given dtype.
Returns the size in bytes of the given numpy dtype.
Assert that all items have the same base type.
Replace worst with reflected.
Expansion function.
Shrinks the simplex towards the best vertex by shrinkage.
Replaces x at index with replacement.
Prepare arguments for the computation graph.
Prepare arguments for the computation graph.
Build fake mnist data.
Returns the configuration of the Keras module.
Reads a TensorFlowConfig from a dictionary.
Matrix multiplication op.
Calculates the standard deviation of a statistic across the data.
Picks a scalar condition from the predicate.
Finishes the log prob for one fiber.
Finish prob for one fiber.
Rotate the dimensions if needed.
Validates BN layer.
Converts params event to a dict of slices.
Apply a single step of a single - step distribution.
Apply a sequence of slices to the distribution.
Returns the number of columns.
Get static predicate value.
Rank a tensor by its shape.
Checks if scale is a diagonal scale.
Pad mixture dimensions.
Embed x into a tensorflow tensor.
Try to get a static value or convert it to a numpy array.
Check if the dtype of the given dt is unsigned.
Returns true if the dtype of the given dt is known as signed by the underlying tensorflow dtype
Returns the largest integer of the given dtype.
Find the smallest integer of the given dtype.
Returns True if dt is integer False otherwise.
Generate a new seed.
Returns the size of x along axis.
Validate the ndims of the rightmost transposed tensor.
Validates a permutation tensor.
Returns shape of event with static perm applied.
Returns the dimensionality of x.
Build a backward pass.
Propagate mean and covariance using Kalman s method.
Propagate the mean across the given distribution.
Propagate the covariance matrix of a Distributed distribution.
Compute the joint mean of latent and observation latent means.
The joint covariances of the latent and observation matrices.
Push forward latents to observations.
Gaussian lognormalization.
The mode of the concentration.
Rotate samples by the mean direction.
Generate a random 3D sample of the concentration.
Make a copy of a function.
Return a copy of dict with keys with value removed.
Recursively replace dict with pretty dict.
Get samples from the distribution.
Return True if x is a namedtuple like like x.
Choose between two instances of accepted and rejected.
Calls fn and its gradients with the given list of arguments.
Check that shape is valid.
True if any of converged or failed.
Updates position and objective.
Check convergence of the optimization.
Broadcast the value to the target tensor.
Returns the harmonic number of x.
Get field from kernel results.
Compute variance scaling term.
Recursively apply cond to tval and fval.
Check if a value is finite.
Return the bootstrapped results.
Resnet block.
deep exponential family.
Initializes the parameters.
Computes the kl divergence between two types.
Read a TensorFlow image from disk.
Download and extract sprites files.
Create a character.
Create a sequence of frames from a character.
Create a random sequence.
Flatten a summand kernel list.
Flatten a multiplicand list of kernels.
Build training and testing data.
Reshapes x along axis to have the same number of dimensions.
Make static axis non negative.
Sort a tensor by number of dimensions.
Assert that x has ndims equal to expect.
Gather a batch of params along a broadcast axis.
Broadcast event and samples.
Input inputs for the inverse Hessian.
Transpose a batch of matrices.
Tensor sum with right - most ndims axes.
Returns dtype that is common to all input dtypes.
Get the initial state of the correction function.
Masks a tensor by which the eigenvalues of x fall below num.
Get the initial arguments for the objective function.
Find the best value in the population.
Check convergence of the population.
Checks if tensor or list is a list and converts to list if necessary.
Converts tol into a tensor.
Builds the training pipeline.
Plot generated images.
Convert a list of productions to a string.
Call the LSTM with the given input.
Compute the latent norm and diagonal of the encoder.
Cumulative hat integral.
Inverse of hat integral.
Approximately solve a LU decomposition of a right - hand side.
diagonal of sparse matrix.
Returns a list of assertions that verify the matrix is well - formed.
Generate slices.
Generate a mask.
Create input order.
Create masks for degrees.
Create a zero - dimensional multivariate normal matrix.
Convert parameters to weights.
Apply chain rule to model.
Builds a seasonal transition matrix.
Builds the seasonal transition noise.
Build a constrained seasonal transition noise.
Validates the observation data.
Add an item to the list scheduler.
Set the checkpoint for this value.
set grad clip const
Optimize the model.
set train summary
set value summary
set training data.
Get all the texts in the news20 dataset.
Download and parse glove w2v file.
Call the bigdl function to compile the loss function.
Evaluate the model.
Returns the class label for the given input x.
Get mnist record.
preprocess mnist dataset
Get the end trigger.
Validate an optimizer.
Returns the value of the field if it exists.
Call a function on all the Java APIs in the specified type.
Convert Spark RDD to JavaRDD.
Convert Python object to Java object.
Get an activation by its name.
Return the label of the variable.
Read parquet file.
Write a parquet file.
Get the image associated with this frame.
Get the tensor as an image.
Get the label of the tensor.
Return a list of tuples where the first element is the predicted value and the second element is
Predict using the bmodel.
Return the transformed dataset.
Save keras definition to json file.
Build Keras model.
predict class distributed
Get weights.
Whether or not the model is in training or evaluation mode.
Load a torch. nn. Tensor.
Load a keras model.
Create a criterion with the given properties.
Load weights from json file.
Load an imdb dataset
Build keras model.
Return shape of input variable.
Get the shape of the output variable.
Get MNIST coordinates for a given data type and location.
Read movielens data.
Get bigdl classpath.
Returns True if pyspark is below 2. 2
Exports a checkpoint as a dictionary of tensors.
save variable tensors to file bigdl is a function that takes a dictionary of tensors and
Expand a set of units along a given axis into a new set of units.
Simple attention layer.
Attention layer.
Get the log file.
Writes a log message to the log file.
Summarize gradients.
Read data from file specified in config.
Implement the alice interface.
Convert a list of one - hot labels and a list of intents to a one - hot
Convert a probability matrix to one - hot encoding.
Return a TensorFlow session object.
Loads the network from the specified path.
Get the momentum variable.
Updates the learning rate and momentum variables in the model.
Round f1 score using numpy. round
Process a single word.
Creates a variational dropout.
Build the model.
Builds the LSTM network.
Train the model on a batch of data.
Predict on a batch of data.
Given a list of sentences and a bucket length make a vector of word indices.
Given a list of tags return a vector of indices corresponding to those tags.
Enhanced Sentence BLEU.
Verify that a URL is valid.
Extract X. 509 certificates from a string.
Verify the signature on the request body.
Attempts to verify the certificate at the given URL.
Return JSON representation of the UI.
Returns the ms bot framework for this control group.
Returns a list of telegram controls.
Returns the alexa representation of the controls.
Computes the accuracy.
Round accuracy.
Read data and return as dict.
Create a simple bot agent.
Convert to one hot unit.
Prettify metrics.
Loads and restores the current state of the optimizer.
Save the current state of the model to disk.
Get train op.
Search the trie for the given word.
Start timer.
Handle a request.
Performs the action specified by the user.
Generate the response for the given request.
Handle an intent.
Handles the launch command.
Handle unsupported configurations.
Pretty print this object.
Convert elmo loss to ppl.
Build a chainer model from a configuration.
Interact with the model.
Run the model on a stream.
Reads in a file and returns a list of answer words and tags.
Load a function from its name.
Get metric function by name.
Convert string label to decay value.
Returns the value of the best value given the values and losses.
Encodes a list of tokens into embedded tokens.
Read requirements file.
Log loss with sklearn.
Print details.
Builds an ecommerce agent object
Main entry point for ms bot.
Download a file from a URL.
Unpacks a tar file.
Recursively update a dictionary.
Return a new URL with the MD5 hash of the given URL.
Set a query parameter in a URL.
Alexa representation of the document.
Return the JSON representation of the function.
Returns a dictionary that represents the MSM framework.
Return the JSON representation of the receiver.
Generate activity dict for MS bot framework.
Computes squad v2 f1 score.
Returns the recall at k given the true and false positives.
Check if GPU is available.
Recursively parse a configuration property.
Parse configuration file.
Expands the given path with the system s expanduser and resolves it.
Run the loop.
Delete a conversation.
Refresh the list of valid certificates.
Verify a signed request.
Handles a request.
Load class by name.
Get model by name.
Get glm information for a model.
Make a glm object from a model and coefficients.
Create an object from a list of key - value pairs.
Shut down the API server.
Check if the server is running.
List all available jobs
Returns a list of timezones
Copy properties from another h2ocluster instance.
Teardown a test if it fails.
Get a summary of the column in a key.
Delete a frame from the server.
H2O builders for models.
Validate model parameters.
Compute model metrics for a given frame.
delete a model by key
Run instances on EC2
Terminate instances.
Stop ec2 instances
start ec2 instances
Reboot instances.
wait for ssh to finish.
Returns the fully qualified name of the given function.
Get the signature of a function.
Wrap text at the specified number of lines.
Wait for the job to finish.
Fit the model with the given training data.
Returns a dictionary with the parameters as keys and their values as values.
signal handler prints terminates the program and terminates the program.
Delete g output directory.
remove sandbox dir
Scrape port information from stdout.
Scrape cloudsize output from stdout.
Stop the daemon process.
Stop all the nodes and client nodes
Get the IP address of the node.
Get the port number of the node.
Determine the size of the vector
H2O mean absolute error.
H2O mean squared error.
H2O median absolute error.
H2O explained variance score.
Assert that var is of type expected.
Assert that v matches the given regular expression.
Assert that v satisfies cond.
Check if var is of type vtype.
Returns a human - readable name for a type.
Returns True if var is not of the allowed types.
Check if the variable is a valid string.
Returns the configuration as a string
Read configuration from candidate log files.
Return a list of candidate log files.
Store model progress.
Recalculate model parameters at a given time.
Estimate the time needed to complete the current progress.
Guess interval for next poll.
Compute the progress at the given time.
Get the time at which a progress is being made.
Draw text to stdout.
Compute the sizes of the widgets.
Get the size of the terminal.
Set the encoding of the barcode.
Fit the transformer to the given frame.
Refresh cache and frame.
Returns the type of the column.
Print the cache summary.
describe the contents of the file
Returns a DataFrame with the first nrows and ncols rows and cols rows and cols
multiplication of two matrices
Return a list of all levels of this node.
Returns the number of levels in the hierarchy.
Set the logging level of the expression
Set the log levels for this node
Rename columns inplace.
Set column names.
Set the name of the expression.
Return True if this expression matches the given item.
modulo kfold column
Stratified stratified column
Print the structure of the QR code.
Pop a column from the stack.
Concatenate multiple DataFrames.
Create a new expression that binds the given data to this expression.
Rebind a string frame to this frame.
Returns a new DStream in which each RDD is grouped by the given string.
fillna fillna over a given axis with NaNs
relevel returns relevel expression
Insert missing values into the HDF5 file.
Convert to a factor.
Split string on pattern
Strip leading whitespace from the left and right of a string.
The Shannon entropy.
Returns an expression that returns the number of valid substrings of the given words.
Create a string representation of the table.
Replacement for sub.
convert to upper case
omit the first row of the result set
The first column of the difflag
Return an expression that indicates missing values.
Return a minute expression
Return a boolean expression that can be used to execute this expression.
Apply a function along a given axis.
Parse the given text and return a Python code object.
Parse a python file into a Python code object.
Move the range to a new location.
Returns the string representation of the token at the current position.
List of centers of all cells in the model
Centers and standard deviation.
Send API request to H2O
Check the version of the cluster
Lazy import.
Parse raw frame setup dict.
Create a deep copy of the data object xid.
Get model by id.
Given a grid id return a grid object
Get a single frame by ID.
Download pojo file.
Download CSV file from H2O.
Run a demo function.
Load a dataset and upload it.
Make metrics from the predicted and actual DataFrames.
Stores the contents of the specified file into the specified destination.
Check if frame id is valid.
Return human readable bytes representation of given size.
Normalizes a slice so that it encompasses all the parts.
Check if a slice is normalized.
Wait for the job to finish.
Generate deep features for each model in the group.
Print model summary.
Print the metric table.
Returns a list of hyperparams for the specified model id.
Returns a dictionary of hyperparameters for the specified hyperparameter id.
Returns the archetypes of the given test data.
Screeplot of the model.
Translate a name to something more readable.
Dedent the given text at the given index.
Main function for the script.
Closes the connection to the device.
Return session id.
Start logging to a temporary directory.
Prepare data to be sent to Sentry.
prepare file payload
Log start transaction.
Log the end of a transaction.
Write a message to the logging destination.
Print to stdout if verbose mode is on.
Get the project leaderboard and project name.
Download a pojo from H2O.
Download the mojo from the leader.
Fit the model to the given data.
Transforms the data by scaling the means and stds.
Apply the inverse transform to x.
Extracts the true string from a string.
find node name in each line and remove it from list
Find build timeout.
Find a build failure.
Find build id.
extract url from string
Grab a Java message from a file.
save a dictionary of failed test information
Update the global summary file.
Write file content to file handle.
Write a Java message to a file.
load java messages from file
Normalize an enum constant.
Find synonyms for a word.
Poll the status of the job.
Writes the given Java object to the specified POJO.
Fit the model to the given frame
Returns a dictionary of default parameters.
Get the actual parameters of the command.
Get deep features.
Returns the scoring history as a pandas dataframe
Print the model.
Returns the variance of the model.
Return the residual degrees of freedom for the model.
Return the coefficients of the model.
Download the specified genmodel from the H2O archive.
Downloads the mojo for the current model.
Save model details to H2O.
Check the targets are the same.
Get cross validation models.
Wait for a keypress.
Convert to pandas data frame.
Print the table.
Returns the full path to the jar file or None if no jar file exists.
Yield paths to JAR files.
CSV dict writer.
Convert a directory path to a URI.
Discovers all modules under the root path.
Generate and write API documentation.
Convert the table to a list of lists.
load messages from file
add a new message to the dictionary
save message dict to file
Print the dictionary.
Parse command line arguments.
Print usage and exit.
Find all files in a directory and its subdirectories.
Try to guess spelling of a file.
Tokenize all files in the root dir and compare them.
Transform data into a string.
Summarize all failed test runs.
extracts the intermittens and saves the results to a csv file
Plot the metric.
Check if there is an available visibility
Reduce the number of failed tests to keep a certain month.
Return a dictionary of endpoint groups keyed by endpoint name.
Update the site.
Return JSON data.
Comment a user.
Read credentials from the secret file.
Like medias of user id.
Like medias for hashtag.
Check if user is bot.
Read a list from a file.
Add a scheduled enqueue time to the message.
Decrease the state of the connection by setting the message to live.
Guess the service name and arm from a service path.
Get the URI for the given request.
Return a requests connection object for the given request.
Perform a request.
Get the server authorization header.
Validate request uri.
Get CLI profile.
Make an HTTP request to the server.
Set the timeout for this request.
Set the value of a request header.
Get all response headers.
Send a request to the server.
Request status code.
Returns the status text of the request.
Returns the response body as a string.
Set client certificate.
Make an HTTP PUT request to the server.
Set the value of the given request header.
Sends the request.
Get the response from the server.
Get a readable id from a string.
Return the serialization name for the given element name.
Get the properties of a node.
Get the children of the given node along the path.
Find namespaces from child nodes.
Convert XML to a namespace.
Convert XML to a region object.
Convert availability XML to a namespace object.
Convert xml to metrics object.
Update a knowledgebase.
Build a package from a given PR number.
Performs replace operation on a single document.
Get storage account properties
Returns a list of storage account keys for the given service.
Generate a new key for the given service.
Deletes the storage account for the given service.
Check the availability of a given storage account.
Get the properties of a hosted service.
Deletes the specified hosted service.
Delete a vhd or a vhd - enabled deployment.
Swap a deployment between a production and a source deployment
Update the deployment status for a service.
Perform a walk upgrade for a domain.
Reboot a role instance.
Delete role instances for the given service and deployment.
Check the availability of a given hosted service.
List certificates for a service.
Performs a GET request for a certificate.
Add a certificate to this subscription.
Delete a certificate for a service.
Get the management certificate for this subscription.
Add a new management certificate for this subscription.
Delete a management certificate for this subscription.
Get the affinity group properties for the given affinity group.
Create a new affinity group for this subscription.
Delete an affinity group from the subscription.
List the subscriptions for this client.
Delete a reserved IP address.
Associate a reserved IP address with a service.
Disassociate a reserved IP address from a service.
Returns the reserved IP address for the given name.
Get a role by name for the given service and deployment.
Delete a role for a given service and deployment.
Start a role instance.
Start the given roles for the given service and deployment.
Restart a role instance
Add a DNS server to a service.
Update a DNS server for a service.
Delete the DNS server for the specified service and deployment.
List versions of a resource extension.
Unreplicate a vm image.
Share the specified vm image with the specified permission.
Delete a vm image.
List the images for this vm.
Deletes the specified image from the local filesystem.
Get the data disk for a role.
Deletes the data disk for the specified role and lun.
Update a disk.
Deletes the disk with the given name.
Build receiver.
Create a shared connection object from a connection string.
Return a list of clients subscribed to the specified topic
Parse an asynchronous operation response.
Perform a GET request
Perform a PUT request.
Get the operation status for the given request.
Update the management header for the given request.
Create a package for Travis CI.
Returns a list of regions for the service bus.
List all available namespaces.
Get a namespace for a service.
Create a new namespace.
Delete a namespace.
Check the availability of a service namespace.
List all the topics for a given topic.
List all the notification hubs associated with the given name.
List relays.
Rollups a metric for a service bus queue.
Rollups a metric for a given topic.
Perform get metric rollups notification hub
Perform get metric rollups for relay.
Create an environment and return its context.
Context manager that creates a new venv and returns it.
Create a new SQL Server.
Set the administrator password for the given server.
List the quotas for a given server.
Delete the firewall rule for a given server.
Returns a list of firewall rules for the server.
Returns a list of objectives for the given server.
Deletes a database.
List databases.
Get the current session state
Set session state
Validate a challenge string.
Default error handler.
Create queue.
Delete queue.
Get information about a queue.
Create a topic on the server.
Get a topic by name.
Create a new subscription rule.
Perform get rule request.
List the rules for a given topic and subscription.
Create a subscription for a given topic.
Perform get subscription request.
Returns a list of subscriptions for the specified topic.
Send a message to the service.
Unlock a subscription.
Send a batch of messages to a queue.
Unlock a queue.
Receive a message from a queue.
Receive a message from a subscription
Create a new event hub.
Update an event hub.
Get event hub by name.
Send an event to the hub.
Update the request headers and sign the request.
Return the authorization string for the request.
Return True if token is expired.
Get a token from the tokenring.
Update the request URI and the query parameters.
Delete the message from the service bus
Unlock peek lock.
Renew peek lock message
Add headers to the request.
Return the body as a dict suitable for JSON encoding.
General error handler.
Handle redirects.
Set profile to use.
Delete a queue
Delete a topic
Build a SharedAccessKey from a connection string.
Get resource properties.
Returns True if the lock has expired otherwise False.
Process the output queue and return the results.
The thread handler for the task collection thread.
Build a config dictionary from a config dictionary.
Create a message from a response object.
convert etree element to rule object
Convert etree element to queue object.
Convert etree element to topic object.
convert etree element to subscription object
Parse XML response for enum results.
Get entry properties from an etree element.
Return a list of queues
List all topics for this service.
Get details about a site.
Delete a site.
Update a website in a webspace
Restart a site in MAAS.
Get historical usage metrics.
Get metric definitions for a website.
Get publish profile xml.
Get publish profile for a given webspace and website.
Create a new cloud service.
Check the availability of a job collection.
Get a specific job collection.
Cancel scheduled messages
Reconnect to the server.
Get certificate from publish settings.
Load cookies from cache.
Return the width of a terminal.
Get the longest possible prefix of value that is longer than max width.
Print a message to stderr in place.
Return a human readable string representation of the filesize.
Format the elapsed time.
Create a status line.
Print a progress bar for the given iterator.
Return a generator of segment numbers.
Return a generator of segments for this instance.
Block until the condition is met for time seconds.
Put a new segment into the queue.
Put a value into a queue.
Make a PV request.
Extract nonce from http result.
Find vpid from url.
Parse JSON data.
Parse an XML string into an ElementTree.
Parse a query string.
Recursively search a dictionary for a given key.
Iterates over all tags with a given tag name.
Determine the encoding of a sample.
Parse response as JSON.
Parse the XML string from a BeautifulSoup response.
Parse a list of cookies.
Parse headers.
Parse query params from cookies.
Get the formatted message.
Create a record object.
Login with email and password.
Load a plugin.
Update a URL s querystring.
Yields a chunk of audio data.
Yields all Require objects required by the argument named name.
Check if file exists and ask user for output.
Create output.
Create an HTTP server.
Iterate over HTTP requests.
Output a stream.
Open the given stream and return the fd and the prebuffer.
Output data from a stream.
Read data from stream and write to output.
Handle a single stream.
Fetch streams from a plugin.
Fetch streams retrying on fatal plugin errors.
Resolve a stream name.
Print a list of available plugins
Authenticate using OAuth.
Load plugins from a list of directories.
Setup streamlink session
Load plugins from directory if it exists.
Log current operating system python version socks version and websocket version
Extract stream id from text.
Get streams from iframe.
Get the value of an option.
Set plugin option.
Get plugin option.
Resolve the given URL using all available plugins.
Load plugins from a given path.
Convert hours minutes seconds to an integer.
Try to find a player s url.
Parse m3 u8 data into a dict.
Returns the name of a supported player for the given command.
Extract stream id from html.
Extract stream info from html.
Login with username and password.
Add a function that maps an item to a key.
Make an API call to a device.
Start a new session
Get information about a media.
Create API object.
Return a string representation of a character.
Read n bytes from the stream.
Return the value of the instruction.
Return an explanation for the error.
Set decode table and switch to prefix.
Set the length table and switch to prefix mode
Read a tuple from the stream.
Return an explanation for the bit at index.
Return the value at the given index.
Return the span of the bitstring at index.
Return the value and the index of the bit after the index.
Return the mnemonic at the given index.
Return the mnemonic at the given index.
Compile the actions table.
Implement action.
Return a string of hexadecimal data starting at pos.
Read metablock length.
Read uncompressed data.
Count the number of blocks of a given kind.
convert list to multidimensional string
Read prefix array.
Decorator to mark a function as hidden.
Add virtual columns for proper motion2vperpendicular
Run the vaex app.
Open many files into a single dataframe.
Read a single sample from a SAMP database.
Create an astropy. table. Table object from a string.
Create an array from multiple scalars.
Read a DataFrame from a CSV file.
Run a vaex server
Kernel function with zeldovich
Concatenate DataFrames.
Return a fixed - length range from start to stop inclusive.
Opens the dataset specified by path.
Evaluate an expression on the dataset.
Returns the set of variables that depend on this selection
Sort the list.
Wait for the plot to finish.
Open a document in the operating system.
Context manager for writing to a file.
Split a list of arrays into a list of arrays and a mask.
Calculate the median approximation to the expression.
Make a 2D plot from this dataset.
Plot the 3D volume of the DataFrame.
Get the data type of the given expression.
Get the path to the private directory for this instance.
Remove the virtual meta file.
Write virtual meta data to disk.
Write metadata to disk.
Set the value of a variable.
Evaluates the variable with the given name.
Evaluates a selection mask.
Convert the table to a dictionary.
Create a copy of the DataFrame.
Convert DataFrame to a Arrow table.
Convert to an astropy. table. Table object.
Add a column to the DataFrame.
Rename a column in the table
Add virtual columns from cartesian to Cartesian.
Add virtual columns with velocities to the polar basis.
Add virtual columns with polar velocities to the basis.
Add virtual columns of rotation around xnew ynew
Add virtual columns of spherical data to the table.
Add virtual columns from cartesian to Cartesian.
Add a virtual column.
Delete a virtual column.
Add a variable to the model.
Delete a variable from the model.
Returns the last n characters of the sequence.
Print the head and tail of the table.
Prints the table between i1 and i2 using the specified format.
Set the current row to the given value.
Return a new DataFrame with trimmed columns.
Returns a subset of the DataFrame with the given indices.
Extract a subset of the string.
Undo the current selection.
Redo the last num commands in the selection.
Returns whether the current selection can be Redoed
Selects a rectangle in the rasterizer.
Selects rows within a circle defined by the points x y c xc yc and r
Adds a new selection to the queue.
Find a valid name for the model.
Return a graphviz representation of the graph.
Categorize a column.
Return a new DataFrame with unique values for the given column encoded in ordinal order.
Return data as an object.
Returns the length of the array.
Horizontally stack the columns of another table with this table.
Concatenates two dataframes.
Add a new column to the data frame.
Decorator to patch a function on the data frame
Fill missing values in an array with value.
Try to auto - convert an array to a string.
Return the record as a numpy recarray.
Write a series of properties to a file.
Write comment to file.
Writes a key value pair to a file handle.
Generator that yields the universal newlines in a file.
Show the versions of the installed modules.
Properly rename keyword arguments.
Set fft library.
Runs the beat - track algorithm and writes the results to a file.
Adjust the tuning of a wav file.
Convert hz frequency to mel.
Compute the homogeneous frequencies of a set of mels.
Returns an array of frequencies.
Filter a continuous Fourier transform using the CQT filter.
Reduce the number of bins in a cqt array to a specified number of bins.
CQT response function.
Downsampling count using the early downsampling method.
Downsampling with early downsampling.
Generate a transition matrix with states uniformly distributed.
Set current image.
Checks if axes argument is an instance of axes.
scale a set of axes
Compute the cartesian Fourier transform of the hamiltonian.
Compute the mel - hz basis for the given number of channels.
Continuous CQT distribution with hz bins.
Return chroma coordinates.
Create time series of n time stamps
Stretch the time domain.
Computes HPSS beats.
Nearest neighbour filter helper function.
Get the bandwidth for a given window.
Fill a windowed square matrix.
Compute the Jaccard similarity between two ints.
Given a query and a list of intervals to return the index of the candidate that has the query
Matches a set of intervals to a set of intervals.
Load an audio file.
Convert audio data to mono audio.
Returns a set of all files in the given directory with the given extensions.
Stretch a wav file.
Process command line arguments.
Demonstration of HPSS.
Calculate beats for a given envelope.
Compute the beat - local score for a single onset envelope.
beat track dp returns backlink cumscore
Returns the index of the last beat in the cumscore
Detect onsetsets using librosa.
Checks if x is an integer or raises parameter error.
Read the next image from the device.
Get a single frame from the display.
OpenCV file to multiple frames
Run a function on a list of tasks and show a progress bar.
Flip an image.
Rotates an image by a specified angle.
Clip a set of bounding boxes to a given image shape.
Scale a set of bounding boxes by a factor.
Impad an image to a given shape.
Apply an impad to multiple dimensions.
Scale a size.
Resizes an image using OpenCV.
Resize the image using the same algorithm as imresize.
Register a handler for a specific file format.
Get priority.
Dequantize an array.
OpenCV imshow wrapper
Dequantize flow.
Load a checkpoint.
Weight the CPUs of the given dict.
Save model checkpoint to file.
Initialize optimizer.
Initialize logger and add file handler
Returns the current optimizer parameters.
Register a new hook with the given priority.
Run a workflow.
Register hooks for training.
Cut a video file.
Concatenate video files
Read a list of strings from a file.
Read a dictionary from a file.
3x3 convolutional operator.
Read image data from file.
Load image from bytes.
Write image to file.
convert bgr to grayscale
convert from gray to bgr
Cast an iterable to a destination type.
Check if seq is of expected type.
Slice a list.
Calculate the average of the last n values.
Recursively scatter a tensor or list of tensors across multiple devices.
Return the value of a color.
check elapsed time of timer id
Starts the timer.
Returns the number of seconds since the timer started running.
Return elapsed time since last check.
Display a flow diagram.
Make a color wheel.
Compute the accuracy of the batched output
Create a scatter plot of inputs and kwargs along the specified dimension.
Make a request and return the response.
Return JSON string from AWS.
Request the file content as text.
Handle callback.
Perform multiple HTTP requests.
Makes an HTTP request.
Start the worker threads.
v1 normalize ansible task
Return name of wheel distribution.
Return the name of the archive.
Add additional requirements to a package.
Create a message with the given text.
Create a message with suggested actions.
Shortcut to attach an attachment.
Build an activity for list attachments.
Create an attachment with the given content url.
Set telemetry client.
Read items from the database.
Write changes to redis.
Delete one or more keys from the database.
Create a new instance of si from the result.
Returns a copy of si with all non magic attributes removed.
Sanitize a key.
Create database and container.
Get or create a database.
Get or create a container.
Fill qna event.
Returns a conversation reference for the given activity.
Get the fully qualified name of the step at the given index.
Check if channel id supports suggested actions.
Check if card action is supported for given channel id.
Returns the channel id for the given turn.
Determine if the given auth header is a token from emulator.
Create hero card attachment.
Set control registers.
Return a copy of the object.
QASMIF returns string with QASMIF control
Return the QASM code for this method.
Runs the given circuit.
Performs a single pass.
Returns a list of the test names that have been run.
Dumps all the passes for this step into a dictionary.
Factory for creating a flow controller.
Unary Bessel function.
Get parameters of a single gate.
Return the rotation matrix of a single gate.
Returns a DAG representation of the given circuit.
Exponential log - likelihood.
Overlapping Oscillator fit.
Plot the coherence of the data.
shape the rb data
Plot rb data.
Compose u3 operator.
Convert YYZ to zyz.
Validate quantum state.
Remove num - th background pixel from image.
Get the span of the gate corresponding to the given instruction.
Determine the optimal layout for the given dag.
Add a barrier to the circuit.
Process a bit ID.
Process a single gate.
Process binary NOT nodes.
Measure the process complexity of a node.
Processes a single node.
Create a dag gate.
Return channel duration in seconds
Return start time of channel
Return stop time for given channels.
Return an iterable of instructions for this scheduler.
Dump additional data.
Load additional keys from the original data.
Validate an instance against its schema.
Return the model as a dictionary.
Load model data from a dict.
Quantum Fourier transform
Chops an array so that its length is less than epsilon.
Angular spearation between two vectors.
Compute the concurrence of a state.
Compute the Shannon entropy of a state.
Calculate the mutual information of a state and a dataset.
Compute the entanglement of formation in a state.
Return the eof of a qubit.
Flatten a schedule by flattening its instructions.
Shift a schedule by a time.
Insert a new component into the schedule.
Append a child component to the parent.
Unary U3 gate
Return the current status of the backend.
Start the timer.
Returns the number of seconds remaining for the current iteration.
Disassemble a QObject.
Returns the hamming distance between two strings.
Create quaternion from rotation angle and axis.
Create quaternion from euler angles.
Normalize the quaternion.
Convert this quaternion to a rotation matrix.
Convert to zyz basis.
Process data to keep the most common number of occurrences.
Check the type of the value.
Check if range is valid.
Check if matrix is square matrix.
Check if matrix is a diagonal matrix.
Test if op is a symmetric matrix.
Test whether mat is a Hermitian matrix.
Checks if matrix is positive semidefinite.
Check if matrix is an identity matrix.
Check if matrix is unitary.
Convert rep to choi.
Convert rep to superoperator.
Convert to kraus representation.
Convert a string rep to a chi matrix.
Convert to PTM.
Stinespring transform.
Apply the operator rep to the data.
QUBO from operator str.
Stinespring to operator.
Permutes the input data to the output dimension.
Permutes the data to have the same shape as the input data.
Compute the Choi matrix from the kraus decomposition.
Choi matrix to kraus.
Compute a kraus pair from stinespring.
Stinespring to Choi matrix
Compute the stinespring representation of the data.
Convert the kraus coefficients to superop.
Convert from chi to choi
Convert from choi to chi.
Reravel two matrices.
Transform data from pauli operator.
Check that the nqubit dimensions match.
Hide tick lines and labels.
Set the label convention.
Clears all the points vectors and annotations.
Add one or more vectors.
Renders the plot.
Plot the front of the sphere.
show the figure
Returns the top layer as a string.
Return the mid part of the string.
The bot layer string
Returns the maximum length of the message.
Returns a list of string representations of the parameters of the instruction.
Returns the label for a box instruction.
Return a latex representation of the node.
Suppress deprecation warnings.
Returns information about the local hardware.
Checks if the given hostname has a connection to the given port.
Checker for HTML output.
Create a constant time series.
Squares a time series.
Calculates the triangle of the waveform.
cosine function.
Derivative of a Gaussian function at given times.
Circularly square a time series by using Gaussian.
Returns a default unrolled pass manager.
Create a default simulator.
Checks if the given register is in the classical or qreg list.
Return a copy of this circular with its mirrored version.
Return the inverse of the circular.
Append an instruction to the circuit.
Check that the number of qubits in the list is the same.
Check the validity of a list of QArgs.
Check the validity of a list of classical registers.
Check that the QREGs and CREGs are compatible.
Produce a string representing the assembly of the basic block.
Return the number of operations needed to encode this instruction.
Width of the domain.
Count the number of instructions in this code object.
Bind a dictionary of parameters to a new circuit.
Bind a parameter to a given value.
Maps free qubits to transform gates.
Calculate the distance between all gates in a layout.
Return the score of a step.
Copies the circuit metadata from the source circuit into the target circuit.
Transform a gate for a specific layout.
Generate a list of swap ops from the given edge.
Runs the circuit on the input dag.
Add a qubit to the gate.
Add an edge connecting the source and destination qubits.
Create a subcoupling from a list of nodes.
List of physical qubits.
Check if the graph is weakly connected.
Compute shortest path length matrix.
Return the distance between two qubits.
Unary CUDA1 operator.
Inverse of the instruction.
Execute the Q - operator contained in this gate.
Causes a classical gate to operate on a concrete value.
Subscribe to an event.
Dispatch an event to all subscribers.
Unsubscribe a callback from an event.
Dispatches an event to the appropriate handler.
Initialize the register with the given parameters and qubits
Defines the circuit.
Return a circuit of uncomputed gates.
Calculate the bloch angles for a pair of complexes.
Multiplexes a list of angles into a target gate.
Returns True if the value is virtual.
Returns a copy of the layout.
Return a map from virtual to another layout.
Add a CCX rule to the suite.
Insert a new operation into the schedule.
Check if a field is fenced.
Given a list of gates and a dictionary of Q - registers return a numpy array of indices
Run the mapper on the given dag.
Return the pauli group of number of qubits.
Create boolean matrix from string label.
Initialize from z and x boolean values.
Derivative of the product of two phases.
Return the operator representation of the expression.
Return the instruction representation of the gate.
Update z.
Update x.
Append a paulis onto the end of the list.
Delete qubits from the basis.
Generate a random set of qubits
Create a single quantum gate from a label.
Returns the measure outcome of a qubit
Add a sample measure to the state memory.
Add a Qasm measure to the classical model.
Add a qasm resetting a qubit
Validate the initial state vector.
Initialize the state vector
Return the state vector
Determine whether sampling should be performed or not.
Run a single job.
Validate that the QObject complies with this AER.
Validate initial unitary.
Initialize the unitary array.
Return the unitary of the wavefunction
Run a single job.
Check that the number of qubits in the configuration matches the number of qubits in the configuration
Checks if obj is a bit
Runs the Layout algorithm for the given dag.
Does this interval overlap with the given interval?
Shifts the interval by the given time.
Shift the timeslot by the given time.
Returns the start time for the given channels.
Return the stop time for one or more channels.
Return True if any of the time slots in timeslots overlap with any of the other time slots
Merge this timeslot with another.
Shift a time by a given amount.
Report the current commit as an issue or comment.
iplot of the input paulivec state
Add a RZ gate to the gate.
Causes fredkin gate to perform a swap operation between two targets.
Create the program graph for the given dag.
Return the next edge in the program.
Select the qubit with the least cost.
Selects the qubit with the highest reliab value for the given program qubit.
Returns the list of instructions contained in this gate.
Reverse the gate order.
Q - value of gates.
Causes all gates to have a classical value.
Test if the matrix is unitary.
Complex conjugate op.
Transpose the data.
Power operator.
Shape of the network.
Convert a quantum circuit instruction to an operator.
Reduces the number of couplings by swapping the quantum registers and
Takes a bitstring and splits it into a list of substrings.
Format memory.
Format memory.
Format the memory list for level 2 output.
Convert a dictionary of counts to a dictionary of strings.
Format a state vector as a complex number.
Format a unitary matrix as a complex number.
Submit the job to the executor.
Return the status of the job.
Checks if the given frequency falls within this range.
iplot bloch for multivector model
Solve the QR factorization problem.
n choose k
lexicographical index of a list.
Get a list of unique backends.
Return operation string.
Create a constant pulse.
Create a zero pulse.
Sample a square pulse.
Sample a sawtooth pulse for duration seconds.
Create a sampled triangle pulse.
Sample a cosine pulse.
Sine beat.
Sample a Gaussian pulse.
Gaussian derivative of a pulse.
Print this node and all its children to string.
Get backend instance.
Remove all ops with name opname.
Add a quantum register.
Adds a classical register.
Add a wire to the network
Check that the condition satisfies the condition.
Returns the list of bits that match the condition.
Add a new operation node to the multigraph.
Apply an operation back into the graph.
Check the validity of the wiremap.
Map a wire condition to a wire condition.
Extends the classical classical registers and classical classical registers for the given dag.
Check that the number of wires matches the number of arguments.
Create a mapping between the predicate and the succusiton of a node.
Returns the full pred map and succ map for the input circuit.
A list of topologically sorted nodes in the multigraph.
Iterate over the edges of the multi graph.
Return a list of nodes in the multi graph that have the given operation.
Returns all nodes that are gates.
Returns a list of nodes in the multi graph whose operation names match those specified.
Returns the two q gates of the binary quadratic model.
Returns the predecessors of the given node.
Returns all predecessors of the given node that are of the same type as the quantum
Returns the set of ancestors of the given node.
Returns all successors of the given node that are of type quantum.
Remove a node from the graph.
Remove all ancestors of the given node.
Remove all descendants of a node.
Remove all nonancestors of a node
Remove all descendants of the given node.
Yields a list of layers that can be serialised into a single graph.
Iterate over layers in the multigraph.
Iterate over all nodes on the given wire.
Count the number of operations in the graph.
Return the properties of this node as a dictionary.
Return a tomography representation of a basis set.
Add a gate to the QR code.
Return the data for a tomography circuit.
Perform a projector operation on a basis.
Compute the linear inverse of a list of operators.
Return the wizard of a transition matrix.
Return the wigner data for the given qubits and labels.
Measuring a gate.
Check the text status of a job.
Monitoring job status.
Simplification function for u.
Run the qreg transpiler on the given dag.
Builds the job history tab
Add a CU3 gate to the optimizer.
Build a classical bell circuit.
Run a transpile circuit.
Returns channel of the specified drive.
Returns the control channel of the pulse.
Returns the channel number of the measure associated with the pulse.
Acquire channel.
Input state.
Remove a logger from the application.
Displays an iplot of the given state.
Input the given data.
Pop the current lexer from the stack.
Push a new lexer onto the stack.
Get the bound method for an instruction.
Convert acquire instruction to qobj model.
Convert frame change to qobj model
Convert persistent value to QObject
Convert drive to qobj model
Convert snapshot instruction to QObject.
Discretize pulse s annotations.
Convert a DAG to a circuit.
Make observable dictionary from matrix observable.
Add an object to the symbol table.
Verify that the symbol obj is a bit symbol.
Verify that a list of symbols are valid.
Verify that obj is a gate.
Verify that obj is a symbol of type type.
recursively verify all children of the object
Find the position of the first occurrence of a string.
Set parse debug.
Parse the input data and return the QASM.
Parses the input data and returns the resulting string.
Parse the QASM file.
Add a crz gate to the optimizer code.
Create a basis state.
Return the projected density matrix of a state.
Return purity of a state.
Runs the ACE algorithm.
Runs the DAG on the input nodes.
Get backend by name.
Shape of the bipartite dataset.
Get the register specs for the given bit labels.
Truncate float value.
Returns the image in LaTeX syntax.
Get the number of columns and the width of the image.
Calculate beamer page size.
Load a schema from a JSON file.
Load schemas and validators.
Return a random unitary matrix.
Generate a random Ginibre matrix.
Random density function.
Random density bures.
Returns a list of all calls in this function.
Power of the input dim by n.
Compose this subsystem with another.
Convert a quantum circuit instruction into a superoperator.
Run the barrier algorithm.
Solve the QR factorization problem.
Defines the definition of the gate.
Check the type of the value.
Check the type of the value.
Set the desired atol.
Set rtol value.
Reshape the dataset to the input and output dimensions.
Tuple of dimensions of the input data.
tuple of dimension names of output data.
Return a copy of the Dataset.
Return a composition where n is a power of num.
Automatically determine dimensionality.
Deserialize string.
Override default serializer to catch type errors.
Check if value is expected type.
Singular Value Decomposition.
Returns the inverse of the current state.
Set the label of the node.
Check if the expression is unitary.
Convert to operator string.
Convert the circuit to an instruction.
Initialize channel transformer.
Monkey patch the strptime module to use the correct module for the language.
Check if a list of tokens are valid.
Split string by known words.
Parses a time string into a time object.
Returns True if the given date string is applicable for the given settings.
Translate a date string.
Parse date string with given date formats.
Returns the net number of the last exception.
Convert exception parameter to HTTP int.
Compose the configuration file.
Get information about the specified stream.
Log stdout and stderr.
Expand a time string into an integer.
Read configuration options from command line.
Read stepper options from cached file.
Write cached options to disk.
Create a stpd file from the current settings.
Create a DPDP from a schedule.
Return rps at time t.
Execute a command and return its exit code.
Decode monitoring data into a list of points.
Make all the points for a given label.
Publish a key - value pair to the Redis server.
Count the number of matched codes.
Stop the worker thread.
Reads the stpd file and feeds it into the pool.
Add user - defined options.
Configure the core with the given options.
Collect data from the queue and store it in the cache. If end is set to True then
Notify listeners of aggregated data.
Discover jmeter UDP port.
Terminate the subprocess if it is running.
Read the stats from a list of lines.
Create a criterion object from a string.
Get a list of hosts from the specified XML file
Create the startup config file if it doesn t exist.
Check the free disk space for artifacts.
Check free memory.
Get right line.
Add info widget
Fill the rectangle with the prepared lines.
Return the length of a line without markup.
add info widget to screen
Make a request to the writer.
Load plugins from config. plugins
Get the last plugin of the given type.
Returns a list of plugins of the given type.
Collect a file into the artifacts dir.
Add artifact file.
Create a temporary file and set its permissions.
Load config files.
Flush the configuration to disk.
Returns a list of tuples with section option and value.
Find all sections that start with prefix.
Decode stat data.
Install agents startups and customs scripts.
Poll for data from all agents.
Send collected data to listeners.
Detects the current configuration.
Handle data items
Subscribe to a list of channels.
Start the subscription loop.
Closes the websockets and polygon.
Perform a single HTTP request.
Submit an order to Betfair.
Get the position of symbol
List assets for the authenticating user.
Check the type and value of a dict parameter.
Check type and value of dict parameter.
Construct a logger.
Construct a json event handler.
Read configuration from file.
Get pipeline instance by name.
Returns a list of all pipelines.
Get the next event from the queue.
Execute a pipeline through the queue.
Wait for all the processes to terminate.
Factory function for config fields.
Build the execution plan for this pipeline.
Returns a solid node named name for this pipeline.
Construct a list of publish commands.
Commit and tag release.
Wrap text in a block of text.
Download a file from s3.
Upload file to s3.
Context manager to wrap user code execution error exceptions.
Equivalent to mkdir - p.
Context manager for user code execution.
Create a dagster log.
True if this DAGster has a successful execution.
True if any of the steps have been skipped.
Returns a dictionary of transformed values.
Returns the data for a failure event.
Validate dataset config value.
Check if the config value is valid table format.
Return a coalesced version of the execution plan s topological steps.
Get connection parameters.
Create a new connection to the database.
Create a new cursor.
Close the connection to the database.
Convert model dict to mdl format.
Convert a list of dictionaries to Python objects.
Returns the form field to be used for this field.
Convert value to python representation.
Apply filters to queryset.
Compute NFPs for a uniform distribution with varying counts.
Compute real - valued FPs.
Determine the optimal number of partitions for the given number of counts.
Calculate the correlation coefficient.
Initialize the slots with the seed and hashvalues.
Returns the size in bytes of the byte array.
Merge another PseudoMonomer into this one.
Return the union of the given MHs.
Query the index for keys with the given hash.
Compute the weighted minimum hash over the given value.
Remove the key from the key - value store.
Count the number of nonzeros.
Merge other into self.
Clear registers.
Apk test.
Computes the mean apk for the k nearest neighbors.
Sorts the internal hashtables in place.
Returns a list of the k most similar keys to minhash.
Closes the connection to the database.
Get user data from JWT
get social login
Select the text at the given position.
Parse a scoped selector.
Parse a statement.
Parse the value and return it.
Advance to the next line.
Parse a configurable reference.
Run the operative.
Ensure that a function is wrappable.
Return the literal representation of the given value.
Clear configuration.
Check if a function or cls might have a parameter with the given name.
Get cached argspec for fn.
Get the names of the positional parameters of a function.
Parse a config file.
Parse a string value into a ConfigParser object.
Flatten a nested value.
Iterate over all references of a configurable object.
Decorator to create constants from enum classes.
Returns a list of all selectors that match the partial selector.
Return the minimal selector that would match the given selector.
Convert a query dict to a search string.
Parse the number of seconds to wait before sending the email.
Validate value.
Represent the resource as a dictionary suitable for serializing to JSON.
Set the value of the field.
Return the thing at the given index.
Initialize with things and hosts.
Set the default headers.
Prepare for next http request.
Get a thing.
Post a thing.
Delete a thing.
Start the server.
Represent this action as an action description.
Start the task.
Mark the task as finished and notify the associated thing.
Return the event description as a dict.
Get the IP address of the machine.
Return a list of IP addresses.
Set the value of the field.
Update the internal state with the new value.
Represent this link as a dict suitable for JSON serialization.
Set the href prefix for this resource.
Returns a dictionary of property descriptions.
Returns a list of descriptions for the specified action.
Returns a list of descriptions for all events of the specified type.
Add a property to this document
Remove property.
Get the value of the specified property.
Returns a dictionary with the property names as keys and their respective values as values.
Set the value of the given property.
Get action by name and id.
add an event to the event queue
Add an available event.
Perform an action.
Remove an action by name and id.
Add an available action.
Remove subscriber from available events.
Add a subscriber for the given event.
Remove a subscriber for a given event.
Notify subscribers of a property change.
Notify all subscribers of an action.
Notify subscribers of an event.
Annotate the model with the given annotations.
Performs an UPDATE statement on the model instance.
Insert a new record into the database.
Create a new record and return the model instance.
Build insert compiler.
Check if the field is magical.
Create or update signals on model save
Deletes an instance when a model is deleted.
Recursively resolves the expression.
Returns a SQL fragment and a list of SQLAlchemy compiler arguments.
Return a copy of this object with relabels.
Add join conditions.
Check if the field is a hstore field.
Create the required constraint for a hash field.
Renames a hash constraint that requires it to exist.
Drops the Postgres server side table required constraint for a field.
Create a required constraint name.
Returns the sql for creating a new index.
Get backend base class.
Prepare the database for use.
Prep the value for the field.
Returns the SQL for returning the form for this instance.
Returns a list of SQL snippets that can be used to recreate the table.
Rewrite insert.
Rewrite insert and update queries.
Rewrite insert nothing.
Returns the local concrete field for the model with the given name.
Format field name.
Format field value.
Create a new unique constraint for the given field.
Renames a unique constraint for a set of keys.
Drops a unique constraint for the given field in the given keys.
Returns a unique constraint name for the given table and field.
Iterate over uniqueness keys.
Add a condition to the query.
Returns the rewritten sql and parameters for this condition.
Returns the tdist 95 conf level for a given data frame.
Calculates the variance of the pooled samples.
T - score of two samples.
Check if the difference between two samples is significant.
Toplogically sort a list of nodes.
n queens generator.
Select a random child from the unexplored list.
Make a playout.
Filter benchmarks based on number of benchmarks.
Recursively expand a benchmark name.
Initialize benchmarks.
Returns the domain of the parameter.
Fetch posts from self. url. channel.
Yield posts from raw JSON data.
Get information about a specific user.
Fetch all items for a given category.
Returns a generator that yields each entry in the archive.
Setup command parser.
Fetch bugs for a given category and from date.
Returns a list of bugs for the given date.
Returns the comments for the given bug ids.
Returns the history of bugs for the specified bug ids.
Returns attachments for the specified bugs.
Fetch merge requests.
List of merges.
Return the text of the merge with id.
Get the versions of a merge.
Merge a version and return its content.
Return the notes for a given item.
Return a list of emojis for a given item.
Get emojis for a note.
Calculate how long to reset the rate limit.
Fetch a list of items from the GitLab server.
Fetches the repository and updates the rate limit.
Setup command parser.
Fetch items for a specific category from a specific date.
Return an ID for the given item.
Returns the number of members of a conversation.
Get channel information.
Get information about a user.
Setup command parser.
Return the timestamp of the last update of the metadata for this item.
Parse a buglist CSV.
Parse bugs details.
Logs out the user.
Returns the XML metadata for the PubChem wrapper
Returns a list of bugs for a particular date.
Returns a list of bugs.
Returns the activity of a bug.
Fetch all items for a given category.
Fetch events for the specified category.
Get events for a given group for a given date.
Get comments for an event.
Yield RRSVPs for the specified event id.
Fetch html question.
Fetch comments for a question
Builds a question object from the given question html.
Yield questions from the API.
Get the html for a question.
Get comments for a post.
Parse user question container.
parse number of pages in question
Parse user info.
Fetch reviews for a particular category.
Returns a list of reviews.
Fetch gerrit28 reviews
Returns the version of the gerrit server.
Get the reviews for the last 10 days.
Returns the next item in the group.
Execute a command from the archive.
Execute a command remotely.
Setup command parser.
fetch issue data
Fetch attachments for a given issue.
Fetch all messages for an issue.
Get all activities for an issue.
Fetch user data.
Get a user by name.
Returns the text of the issue with the given id.
Get issue collection for given issue.
Yields all the items from a given path.
Returns an iterator over the subscriptions for the authenticated user.
Find the group id associated with the user.
Fetch the given url and payload.
Setup command parser.
Find backend modules for a package.
Fetch items from archive.
Remove the classified data from the given item.
Parse args and return parsed args.
Set authentication arguments.
Set archive arguments.
Add command line arguments to the parser.
Run fetch command
Initialize the archive manager.
Returns the timestamp of the last update of the metadata for the given item.
Parse mbox file.
Fetch and parse messages from the given mailing list.
Copy the contents of the mbox into a temporary file.
Validates the given message.
Convert case dict to message dict.
Get a message for the given key.
Fetch items from the repository.
Parse a git log file.
Initialize Git repository.
Setup command parser.
Parse the stream yielding commits.
Clone a URI into a new directory.
Count the number of objects in the repository.
Check if the repository is detached.
Update the repository.
Fetch and update all references in the repository.
Returns the list of commits for the specified packet.
Update references in the repository
Discover all refs for this repository.
Update a ref in the repository
Execute a command in a subprocess.
Reads the stderr of the process.
Execute a command in a subprocess.
Yield tweets grouped by number.
Setup command parser.
Fetch all items for a given category.
Yield hits for the given category.
Parse hits and return as dict.
Returns the number of hits matching the keywords.
Return the timestamp of the last time the metadata was updated on this item.
Return the category of a pull request repo or issue
Fetch pull requests.
Fetch repo info.
Get all reactions for a given issue comment.
Get the requested reviewers for a given PR number.
Returns a list of SHA1 hashes of the commits for the given PR number.
Get all reactions for a comment
Get user information.
Get reactions for the given issue number.
Returns a list of issues for this user.
Returns a generator of pull numbers for all issues on this repository.
Pull the requested reviewers for a project from the server.
Get a list of commits for a given PR number.
Returns a list of reactions to the given comment.
Returns the username of the specified user.
Returns a user s orgs.
Returns the number of remaining tokens for the given token.
Returns a list of tokens with rate limits.
Choose the best API token to use.
Check if we need to switch a number of tokens.
Fetches the latest rate limit information from the API.
Initialize archive metadata.
Stores the given uri payload headers and data in the database.
Retrieve a resource from the database.
Create a new archive.
Verify the integrity of the archive file.
Loads the metadata from the database
Return the number of rows in a table.
Create a new archive.
Remove an archive file.
Search for archives by origin backend name and category.
Search for all files in the directory.
Generate num month range from from date to to date.
Remove invalid XML chars from a string.
Yield issues parsed from a JSON string.
Issues for a given date range.
Get information about an issue.
Get information about a user.
Make a call to the API.
Fetch data for a category.
Fetch all items from the repository.
Get the content of a repository.
Filter custom fields.
Yield issues from the given page.
Yield issues from url until from date.
Returns a list of issues for this issue range.
Get all comments for a given issue.
Get all the fields for this resource.
Fetch all builds for a given category
Returns a list of builds for the given job name.
Parses a page of questions into a generator of questions.
Returns a generator of questions.
Setup command parser.
Fetch all pages of a given category.
Get the maximum date for a list of reviews.
Fetch 1 27 reviews.
Get a list of pages for a namespace.
Returns a list of the most recent pages for the given namespaces.
Yield messages from a JSON string.
Filter message by chats.
Calls the updates method
Fetch articles from the network.
Add metadata field to item.
Parse article string.
Fetch data from archive or remote.
Fetch article data by article id.
Fetch data from a remote location.
Fetch data from the archive.
Create an HTTP session.
Setup the rate limit handler
Sleep for the specified amount of time.
Update rate limit and time to reset
Parse supybot log file.
Retrieve all archives older than the given date.
Return a list of supybot archives.
Parse supybot messages from the stream.
Fetch topics for a given date.
Parses the topics page and returns a list of topics ids
Get information about a topic.
Get information about a post.
Yield tasks for the given category from the given date.
Yields a list of tasks from a JSON string.
Yield user objects from a JSON string.
Yields the tasks in the Maniphest tube starting at the given date.
Manually maniphest transactions for phids.
Return a list of users for the given phids.
Pass in phids to the Phaber API.
Call API.
Return the metadata id for the given item
Yield the contents of a summary.
Get the contents of a file.
Returns the historical content for the given content id and version.
Parse the measurement result.
Return the capabilities url for the given service.
Read XML document from url.
Read XML from a string.
Parse the result string.
Build the url for this request.
Construct a schema from a list of elements and a namespace map.
Get the url to describe a feature type
Run a Wordpress workflow with a complex input document.
Get a list of movies.
Get a list of TV series.
Get information about the object.
Get alternative titles.
Get credits for a project.
Get a list of external resources by ID.
Get the keywords for the resource.
Get recommendations.
Get release dates for a project.
Get releases for a project.
Get translations for a given resource.
Get similar movies.
Get reviews for the project.
Get the next set of upcoming events.
Get the currently playing song.
Get popular posts.
Get the top rated item in the bucket.
Get account states.
Create a new rating for the object.
Get movie credits.
Get tv credits.
Get information about the resource.
Get a list of the resource.
Get information about the current session.
Get list of movies for current session.
Create a new token.
Validate token.
Create a new session.
Guest session.
Get all the rated movies for the guest session.
Get the status of an item.
Create a list of objects.
Remove an item from the collection.
Clear all sessions.
Get the ratings for the current user.
Get similar resource from the API.
Get the resource on the air.
Get series information.
Get credits for a particular series.
Get a list of external ids.
Get series info.
Get credits.
Get a list of external ids.
Set attributes from a response.
Get a collection of resources.
Search for a company.
Get the resource with the given keyword arguments.
Perform a GET request with multiple GET requests.
Normalize a string.
Given a list of reference strings return a tuple of the number of times each reference appears.
Counts the number of grams in a reference set.
Exponential random variates.
Align source texts to target texts.
Get descriptors for a module or a module type.
Register objects from JSON.
Register a descriptor with the registry.
Echo a string to the terminal.
Return True if desc is a descriptor class.
Convert to json.
Return the 3 - d coordinate of the coordinate system.
Return the atomic saturation for the ith atom.
Surface area of the sphere.
Create a Residue from molecule.
Create a descriptor from a JSON object.
Fill missing values with value.
Returns a copy of the Compound with all missing values removed.
Return a generator yielding tuples of key - value pairs.
Return a dictionary representation of the object.
Dictionary with name as key.
Print a progress message to STDERR if STDOUT is a TTY.
Print a message to stdout.
Prints error message and exits with specified status.
Create a temporary file.
Sets a temporary file to the given target.
Remove temporary files.
Return a fixed version of the path.
Get legal params for a given method.
Merge opt params into kargs.
Add extra client params to a command line parser.
Terminate the loop.
Add a task to the queue.
Wait for all the workers to finish.
Record the number of tasks processed.
Get s3 keys from environment variables.
Get access and secret keys from the command line.
Get s3 keys from s3cfg.
init s3 keys
Connect to S3.
Returns a list of all files under basedir.
Expand source to a list of objects.
Upload a single file to S3.
Copy a list of files into a directory.
Create a bucket on S3.
update a user s privileges
Prints the contents of the specified source to stdout.
Download a single file from S3.
Get a list of files.
Copy single file from source to target.
Recursively copy a list of files from one location to another.
Delete all files from S3.
Returns a list of relative paths to dir.
Recursively dsync source to target.
Calculate the MD5 hash of a file.
Returns the md5 hash of the file.
Create the target directory if it does not exist.
Check if the local md5 is synced with the remote.
Return True if path matches filter.
Recursively walk s3 bucket.
Add object to result only if it is modified before or after the object.
Return the privilege string for the given file.
Lookup object in S3.
Read a chunk of data from a file.
Verify the size of the downloaded file.
Write a chunk of data to a file.
Runs the specified command.
Validate arguments according to format.
list buckets or walk
Create a new bucket.
Upload files to S3.
Get handler.
S3 cat command
dsync handler.
Copies files from S3 to S3
Handles mv command
Delete files from S3.
DU handler.
Total size of objects in S3.
Match date.
Match time.
Match delta.
Check if value is a JSON dictionary.
Get a session from hub.
Push data to all registered callbacks.
Encrypt the token and return the ciphertext.
Exception handler function.
Add a stream handler if it doesn t exist.
Try to find the most appropriate request for this environment.
Wrapper around log. message function.
Create a logger that logs to a file.
Builds the person data from the request data.
Add lambda context data.
Add request data to the data dict.
Check if we should add a local variable.
Build request data.
Build server data.
Build payload from data.
Run the server.
Compose a string composed of two strings.
Decompose a Hangul letter into a Hangul code and a Hangul letter.
Check if the given letter is a Hangul letter.
Attach a word to the josa dictionary.
Check if the given node is inside an except block.
Check if the given node is inside a lambda.
Recursively get all elements of the given node.
Clobber in except statements.
Check if the given node is a builtin.
Check if the node is an astroid. raise node.
Check if the given node is a decorator.
Check if node is an ancestor of frame.
Find the parent of the given node.
Recursively parse a format string and yield all the field names.
Get the argument from a call node.
Check if node inherits from std exception module.
Check if a function is decorated with a property.
Check if the function is decorated with the given qnames.
Find the first try except handler or None.
Check if the given node is from a fallback import.
Get a list of exception handlers for the given node.
Check if the node should ignore the given exception.
Check if the class is abstract.
Try to infer the value of the given node.
Return the type of the given node.
Check if postponed evaluation is enabled for the given node.
Return a list of fully qualified names from a module name.
Get the name of the module referenced by the import node.
Return a string representation of the tree.
Generate a dependency graph.
Visit an import node.
Visit an importfrom node.
Check the position of the node.
Record that an import was imported.
Check relative imports.
Add an imported module to the graph.
Check if a module is deprecated.
Check if a module is preferred.
Produce a report of external dependencies.
Return dependency graph.
Get the default set of options.
Insert default options into sys. argv.
Toggles the visibility of the given node.
Get the methods for the given node.
Visit a node and call its callback method.
Check consistency of messages.
Visit a call node.
Check if the node is a datetime node.
Check for constants in open mode.
Handle messages.
Returns the title for the given node.
Set default options.
Check if the given node should be shown.
add a class node to classdiagram
Yields the ancestors of the given node.
Get all nodes that are associated with the given node.
Recursively extract classes from the classdiagram.
Return package and class diagrams.
Visit an importfrom node.
Class diagram of a class.
Returns a list of diadef diagrams for the project.
Check if the given owner is ignored by any of the given classes.
Selects names that are similar to the given attribute name.
Emit a no member error.
Check if statement has parent of node of type type.
Checks if the given name is one of the variadics in variadics.
Check if the given variadic is not in starred context.
Visit an assignment node.
Check for an uninferable call.
visit a unaryop node by raising errors
Iterate over all the interfaces implemented by the given node.
Create an astroid project from a list of files.
Visit package node.
Visit a function node.
Visit an assignment name node.
Handle assignattr type node.
Visit an import node.
Visit an importfrom node.
Compute the number of a module in the project.
Called when a module is imported.
Register default reporters.
Handle messages.
Handle a message.
Write a graph to the stream.
Write an edge to the stream.
Process a non raw string token.
Generate code for a section.
Handle evaluationsection nodes.
Prints the content of a table.
Add a renamed message.
Register checker messages.
Register a message.
Check if the symbol is defined in the messages definitions and alternative names.
Raise an exception for a duplicate symbol.
Raise an exception for a duplicate message id.
Build builder.
Return the number of CPUs.
Generate a report section from a stats dict.
Temporarily fix python path in sys. path.
Load plugins from the specified modules.
Load configuration from dynamic plugins.
Set an option for the current token.
Register checker.
Set python3 porting mode.
Returns a list of checkers.
Returns a list of checker names.
Prepare checkers to run.
Expand a list of modules into a list of files.
Set the current module. modname is the name of the module. filepath is the path to
Check astroid module.
Evaluate the evaluation and display the results.
Callback for when the help command is invoked.
Prints the documentation and exits.
List all messages.
List all checkers.
Normalizes the given text to the given line length.
Get the module and frameid of the given node.
Safely decode a line of text.
Check if base name is in blacklist.
Register plugins in the given directory.
Comment out a string.
Recursively formats a value according to optdict.
Format a section of the configuration.
Format a list of options and print it to stream.
Insert child at index.
Append a new child node to this node.
Returns the list of parents of this node.
Format layout and write to stream.
Returns the content for the given table.
Generate the content of the given layout.
Recursively collect the lines of a module and its submodules.
Processes ignored messages.
Register a report.
Add stats data.
Get the name of the setter property.
Find setter property for this node.
Check if a function returns something.
Return a set of possible exception types for the given node.
Processes a module and adds all found messages.
Processes the given module.
Process the notes.
Check if the given statement is from the future module.
Return True if parent is a for loop or if stmt is the parent of stmt.
Find the overridden method for the given name in the given class.
Get the extra information about the module that was unpacked.
Check if a class has been explicitly assigned locally.
Mark a node as consumed.
Check if node has homonym in upper function scope.
Check that the unpacking is correct.
Recursively check the metaclasses of the classdef nodes.
Returns a list of all the packages in the specified directory.
Run the install command.
Add a table with similarities between the stats and the old stats
Main entry point for the script.
Append a stream to the editor.
Compute the pairwise similarity of each pairwise pairwise ensemble.
Display a list of couples and their real representations.
Find the common substring between two line sets.
Returns an iterator over all sims common to all linesets.
Enumerate the stripped lines.
Return a dict mapping line numbers to lists of line numbers.
Check equality of attributes of two nodes.
Returns True if the parameters of the overridden method differ from those of the original.
Safe infer call result.
Set a node as accessed in a scope.
Check class attributes.
Check consistent mro of the node.
Check proper bases.
Leave functiondef node.
Check in slots.
Visit name node.
Check if the param is mandatory.
Check if the body contains a raise statement.
Check for bad exception context.
display the report for the section num
Check if the node is a typing namedtuple.
Check if the given class is an enum class.
Check if the given node is a dataclass.
Check for excessive number of parents and attributes.
Check if there are enough methods in the class.
Visit a if node.
Check the condition for boolean expressions.
Check the docstring of the node.
Return a formatted string representation of the object.
Check if a node is an actual elif node.
Check if the given node is simplifiable.
Check if the stopiteration is inherited from the generator.
Check if exception inherits from stopiteration
Check for the presence of more than one nested block at a time.
Check if there are any duplicated objects of the same type.
Check if the node is an isinstance node.
Check if a node is and or ternary.
Check for consistent returns.
Check if Graphviz is available on the system.
Run diadefs.
Writes all packages in diagram.
Writes all classes in diagram.
Set the printer for the analysis.
Create a graph printer for the specified file.
True if there may be newer versions available.
Format the help text for printing.
Get environment variables.
Recursively find cycles in the graph.
Generate the graph using the renderer.
Format a section and print it to the stream.
Disable a previously registered message.
Enable or disable a message.
Returns the symbol for a message id.
Check if a given message is enabled.
Add multiple messages at once.
Get the indent length of a string.
Return an indented string and a delta message.
Returns the token at the given index indented to the current character position.
Handle line start.
Get the indentations for the token at the given index.
Indent after bracket.
Indent the continuation string inside bracket at position.
Push a token onto the stack.
Process a new line.
Check if the token is a valid type annotation.
Check equals spacing.
Check if token is surrounded by spaces.
Visit a default node.
Check multi statement line.
Check the indent level of a string.
Check if the given node is in the for loop context.
Check if the given node is a conditional import.
Visit a builtin function name.
Suppress warnings for subscripts.
Visit an attribute node.
Visit a THROW node.
Try to find pylintrc.
Validate value against optdict.
Register a command line option provider.
Set the value of a provider option.
Set a global option.
Generate a config file.
Load the configuration file.
Load configuration from command line.
Add a help section to the command line.
Get command line help.
Load default values for all options.
Get the attribute name for an option.
Get the value of an option for this parser.
Yield tuples of section name option dict and option value sorted by section.
Check if the given func is a method call.
Determine whether the given node is likely to be a complex format string.
Visit a module node.
Visit an importfrom node.
Visit an import node.
Check that the format string is valid.
Check if the given node is in the loop.
Return the parent of the loop node.
Check if the loop exits early.
Returns a tuple of lists of property classes and names.
Determine the name of a function based on its decorators.
Add a table of reporter stats to the given sect.
Check if the call is a one argument call.
Check for starred assignment.
Check that the call is abstract.
Check for loop exits.
Check in loop.
Open the linter for the given number of modules functions and classes.
Visit an expression node.
Check if the node is an assert node.
Check for duplicate keys.
Check if the node is in try - finally blocks.
Check if the argument is a reversed protocol method.
Check the docstring of a node.
Check whether the given literal is equal to the given node.
Add a sub - graph to the current graph.
Parse the given sub - graph.
Visit a module node.
Walk an Astroid and its children.
Add a relationship from one object to another.
Get relationship by from object and relation type.
Return a list of attributes for the given node.
Add an entity to the graph.
Return a list of class names for the given nodes.
List of class definitions.
Returns the class node of the specified name.
List of astroid. module objects.
Get module by name.
Get a module by name.
Add a module to the graph if it is not already included.
Delete this object from the cache. Returns None if the object was not found.
Returns the query for the model.
Get user by username and password.
Get user by access token or refresh token.
Store a token in the database.
Set a new grant.
Get client by client id and code.
Prepare a request.
Initialize the extension with the given application.
Create a remote application.
Redirects the user to the authorization URL.
Handle OAuth1 response.
Handle OAuth2 response.
Handle an authorized response.
Hashes a token for the given application.
Create a client with the given token.
Create a client from an OAuth access token.
Insecure transport context manager.
Confirm authorization request.
Get client secret.
Get the secret for the given request token.
Get access token secret.
Returns a list of realms for the given token.
Return the redirect URI for the access token.
Get rsa key.
Validate client key.
Validate the request token.
Validate access token.
Validate timestamp and nonce.
Validate the redirect uri against the request client
Validate the realms for the access token.
Validate verifier against request.
Verify a request token.
Return True if the token matches one of the realms.
Confirm an authorization request.
Authenticate client.
Authenticate client id.
Get the scopes for the original refresh token.
Check if the refresh token has the specified scopes.
Return the default redirect uri for a client
Get the default scopes for a client
Invalidate an authorization grant.
Save authorization code.
Save bearer token.
Validate a bearer token.
Validate client id.
Check if the code is valid.
Validate grant type against client.
Validate refresh token.
Validate the response type.
Validate scopes.
Validate user credentials.
Revoke an access or refresh token.
Update qq session data.
Convert all keys in a dictionary to strings
Change weibo authentication header.
Register an oauth to a remote application.
Create a remote application.
Extract the parameters from the request.
Convert text to bytes.
Decode base64 text.
Create a response object.
Get cached clients.
Add a remote application.
Add a remote application to the collection.
Try to get the public key from the certificate.
Generate public keys and check success.
Load private key.
Incorrect load privatekey callback
Attempts to load a private key using the wrong type.
Get all revoked CRLs.
Duplicate a revoked x509 certificate.
Create a X. 509 certificate request
Create a X. 509 certificate.
Use certificate chain from a file.
Use a PEM - encoded certificate.
Set certificate for this connection
Add certificate to ssl context
Use a private key from a file.
Use a private key.
Load an SSL certificate authority.
Set SSL context verification depth.
Load a temporary dh file into the ssl context.
Set the cipher list for this connection.
Set client certificate authorities.
Add a client certificate authority to the SSL context.
Set the TLS extensions to use for authentication.
Set socket select callback.
Set the alpn protocols for this connection.
Set the alpn select callback.
Set the OCSP extension callback.
Set the SSL context.
Return the name of the TLS server associated with this connection.
Set the host name for the TLS extension to use.
Receive a message from the socket.
Read data from the socket.
Request to renegotiate the SSL connection. Returns True if the connection was renegotiated False otherwise.
Shutdown the SSL connection.
Returns a list of the available ciphers.
Return a list of the client s certificates.
Set the SSL shutdown state.
Return a random string of length num from the server.
Return a random string of length num using the SSL context.
Return the master key for this connection.
Export the keying material for this Secure Association.
Get ssl session.
Get the name of the current cipher.
Get the current cipher bits.
Get the version of the current cipher.
Return the version number of the SSL connection as a string.
Get the next negotiated protocol.
Set the SSL protocols for this connection.
Retrieve the negotiated protocol for this connection.
Convert a bio structure to a native string.
Set the time value of an ASN. 1 object.
Return a string containing the ASN. 1 time value for the given timestamp.
Get elliptic curve by name.
Dump public key to string.
Load public key.
Sign data with a private key and return the signature.
Verifies signature on data using certificate cert.
Dump a CRL to a string.
Derive cryptography key from private or public key.
Check if this key is valid.
Return a set of curves loaded from the given lib.
Get elliptic curves dictionary.
Return the EC key for this curve.
Return the DER string representation of the certificate.
Get the names and values of the certificate.
Get the ASN. 1 short name of the certificate.
Get the data associated with this certificate.
Convert the request to a cryptography request object.
Set the public key for the certificate.
Get the public key for the certificate.
Get the name of the Subject.
Add a list of extensions to the certificate.
Returns a list of x509 extensions for this certificate.
Verifies certificate signed by given private key.
Return a cryptography cryptography object representing the certificate.
Set the certificate version.
Get public key for certificate
Set the public key for the certificate.
Sign a certificate with a private key.
Return the hex digest of a certificate.
Set certificate serial number.
Get the serial number of the certificate.
Adjust the GMT time value for this certificate.
Make the certificate not before the given amount.
Return True if the value has expired.
Get the issuer.
Set the issuer of the certificate.
Get the name of the subject.
Set the subject for the certificate.
Add a list of extensions to the certificate
Get a certificate extension by its index.
Add a certificate to the keystore.
Add a certificate CRL to the certificate store.
Set the time for the certificate.
Initialize the store.
Create an x509 exception from the context.
Verify the certificate.
Set the serial number of the certificate.
Return the certificate serial number.
Set the CRL reason.
Return the reason for the certificate.
Set the revocation date of the certificate.
Return a cryptography representation of the certificate revocation list.
Return a tuple of revoked certificates.
Get the issuer for this certificate.
Sign the certificate with the given key and digest.
Export this CRL to PEM.
Return the type name of the PKCS7 message.
Set the CA certificates.
Sign a message digest with a private key.
Verifies the signature of a key.
Encode the key in base64 using the OpenSSL library.
Get the public key for this key.
Set the public key for this key pair.
Create an exception from a queue of error messages.
Get the service metadata.
Yield all issues for all boards and cards.
Extract annotations from a JSON object.
Get boards.
Return a list of lists for a board.
Get all cards of a list.
Get all comments for a given card.
Builds the URL for the API.
Get a list of values from a url.
Link a field to a dictionary.
Get issues by query.
Get all pull requests for a given tag.
Aggregate all the issues in the given conf.
Get a value from the configuration file.
Determine if the issue should be included.
Makes a table from a given grid.
Run an oracle command and return its output.
Return the value of the given option as an integer.
Pull an issue from the local filesystem.
get data from url
Get a collection of values.
Parse a sprint string into a dictionary.
Get credentials.
FDR correction for p - values.
Z - score data2d along the given axis.
Adjust axes ticks and colors.
Prepare an argument parser for the command line.
Adds a subparser to subparsers to add an enrichr subcommand.
Probability density function for seaborn
Returns a pandas. Series containing the names and descriptions of the marts.
Returns a pandas. DataFrame of all the datasets for a given mart.
Returns a Pandas dataframe of the attributes of the dataset
Returns a Pandas dataframe with the filters applied to the dataset
Sets the number of cores to use
Load GMT genesets from a list of genes.
Get libraries for the given database.
Download the genesets for the specified libraries.
Create heat matrix from dataframe
Loads data for a given class vector.
Run GSASA on the given dataframe.
Save results to a CSV file.
Parses the gene sets.
Send a list of genes to the server.
Check the number of genes in a usr list.
Create a cube script.
Create an icosphere layer.
Run a Cube hires algorithm.
Return red green and blue values of a color.
Check if var is a list of num terms.
Make a list of num terms.
Writes a filter script.
Merge the vert script into the current script.
Split a mesh on the nonmanifold face.
Translate script by value.
Rotate a script by an angle.
Multiply a vector by a given value.
Cylindrical co - ordinate function.
Convert a cylinder script to a cylinder script.
Deforms a curve in - place to a curve script.
Write a VC script to a LaTeX file.
Write a mesh filter script to the FireCloud format.
Voronoi color scheme.
Writes the XML filter script to the specified file.
Verticographic quality of a script.
Vertices of a cylindrical script.
Evaluates the spherical verticies of the script.
Renames the layer with the given label.
Changes the current layer of the script.
Duplicates the specified layer in the current filter script.
Delete the lower - case version of the script from the current layer.
begin a script by writing it to file.
Add a new layer to the stack.
Save filter to file.
Write XML filter file for per triangle.
Measure topology of a script.
Parses the hausdorff distance log file.
return the angle in radians between two angles
cross product of u and v
Multiply a scalar vector by a vector.
Write depth filter to xml file.
Sort a polyline file by vertices.
Measure the aabb geometry and topology of all objects in the database.
Convert file extension to lower case.
Get config value.
Return the URL for the given filename.
Returns the full path to a given file.
Check if file extension is allowed.
Resolve conflict.
Extract the vprof version from a file.
Remove duplicates from a list of objects.
Returns the number of objects in objs1 that differ from objs2
Format a dictionary of objects to a list of tuples.
Add memory usage information to list.
Memoized code events.
The number of objects that are overhead for this process.
Compute memory overhead.
Profile the run object.
Profile the module.
Run the code block and return the profiling result.
Run the profiler.
Get a set of all module names in a package.
Run a function in a separate process.
Get run object type.
Initializes the module with the given run object.
Initialize the profile with a run object.
Initialize profile function.
Replace sys. argv with self. run object and self. run args.
Sample signal.
Insert a stack of functions into the call tree.
Recursively fills the node with the sample count.
Formats the tree for profiling.
Returns a tree representation of the call tree.
Return profile information.
Profile the module.
Profile function.
Transform the profiling data into a list of tuples.
Run the profiler for this transform.
Run the profiler on the module.
Profile the function call.
Show the guestbook.
Add a new entry to the database
Start a profiling server.
handle the root page
Handle static files.
Handle GET request.
Do a POST request
Send a response to the client.
Check if a module is in a standard library.
Record a line of code.
Yield lines without stdlib.
Fills the heatmap with the number of lines without stdlib.
Given a list of line numbers and a mapping of line numbers to line lengths return a list
Return a dict with the run object run time and heatmaps.
Formats a heatmap file.
Runs the module and returns the run time and heatmaps
Run the code object and return the profile information.
Runs the given run object with the given profilers.
Profile a function and return the result.
Returns the predicted value of the test statistic on x.
Returns the predicted log probability of x.
Fits the model to the given data.
Counts the vocabularies for the given list of analyzed docs.
Sort the features in the vocabulary.
Limits features to a specified number of documents.
Transforms the input data z using the trained model and returns the transformed data.
Transforms a Tensor z using this Analyzer.
Convert to scikit representation.
Fits a model to the given data.
Predicts the class for each item in x.
Fit the regression model to the given data.
Fit the model to the given data.
Fit and transform the model.
Returns the score of the last step given the input z.
Returns the score of the test given the estimator.
Fit the KNN on the input data z.
Predict the class for x.
Predicts the class for the given input x.
Check that the dtype of an rdd matches the expected dtype.
Fit the SVD model to the input data.
Applies the SVD s transform to z.
Yield packed blocks from iterator of size bsize.
Break an iterator into chunks of size num.
Block a RDD.
Map a function over the RDD.
Return the shape of the array.
Return a numpy array representation of the matrix.
Returns the bitwise perm of stat at position pos.
Check if the given path has a root write permission.
Read config file and print results.
Read the configuration file.
Run as command.
Execute a command and return its output.
Execute a command over SSH.
Validate config data.
Returns the request headers.
Append data to url.
Returns the url for the specified event.
Return the textual representation of a packet.
Print the MAC address of a packet.
Discover devices on a network interface.
Execute the node.
Send confirmation email.
Called when a device is pushed to the queue.
Execute the specified device.
Scan for devices.
Returns absolute path to ledger file.
Run tests for Python 2. 6 compatibility.
Calculate the text measure from a JSON file.
Return an iterable of all supported characters.
Generate a sequence of unicode strings from the given iterable of characters and encodings.
Calculates character to length mapping.
Writes a JSON measurer to a file.
Convolve a 2D image with a Gaussian kernel.
Returns a 1D Gaussian kernel.
Convert image to grayscale and alpha channel.
Main entry point for ssim.
Compute the SIM value.
Compute the ssimulus between two images.
Destroy the drone.
Set code version.
Get the status of the node.
Prints the current status to the log.
Returns the node ID associated with the given connection.
bind to the server if necessary.
Called when a new connection is opened.
Callback function that is called every time a command is executed.
Check if this node should be connected to other nodes.
Connect a single node if necessary.
Send a string to the node.
Called when a message is received from a node.
Called when a connection is disconnected.
add a node to the graph
Remove a node from the graph.
Send a message to a specific node.
Add an item to the queue. If the queue is full the item is appended to the
Add an item to the heap.
Get the next item from the heap.
Try to acquire the lock.
Return True if the lock is acquired.
Release a previously acquired lock.
Set the hosts to use.
Create indexes with the given names.
Migrate the indexes to the latest version.
Strip metadata from report.
Save aggregate reports to kafka
Extract the XML from a file.
Parse an aggregate report file.
Parse forensic reports to CSV.
Parse a DMX - style report file.
Get imap capabilities.
Saves forensic reports to splunk.
Decode base64 data.
Get a hostname for the given IP address.
Convert human timestamp to datetime. datetime.
Get information about an IP address.
Convert outlook message using eml.
Split a string into a list.
Parse a SA report.
Drain all currently - open connections.
Publish payload to subject.
Publish a request.
Publish a message.
Subscribe to a subject.
Unsubscribe from a message.
send message to server and wait for reply
Select the next server to connect to.
Process an error message.
Process operation error.
Generate the connect command.
Process a pong.
Process a message from a client.
Process information received from the server.
Coroutine that flushes pending data to the socket.
Read loop.
Load features from a numpy array.
Load features from images.
Pearson correlation between the images.
dot product of decoded and decoded images.
Select a subset of features.
Get the order of the features in the dataset.
Classify the data.
Fit the classifier.
Set class weight.
Fit scikit learn cross validation.
Fit the classifier to a dataset.
Get random image voxels.
Given a model and a list of feature names return the top n words.
Pearson correlation coefficient.
Find the FDR statistic on the given data.
Load activations from CSV file.
Create an image table.
Returns a list of feature names.
Counts the number of times each feature occured less than threshold.
Load a SFrame from a pickle file.
Save the feature table to a file.
Returns a list of ordered names for the given features.
Search for features in the table.
Get ids by expression.
Convert to scipy. sparse. csr. csr matrix.
Transform a matrix using an orthogonal transformation matrix.
Convert a basis set to a matrix.
Apply a transformation to a FOCI.
Create a mask for the given layers.
Load image masks from filenames.
Create an nifti1. nifti1 image from data mask.
Set effective logging level.
Parse an address into its components.
Convert a dict to a namedtuple object.
Get the price for a ticker.
Get bulk news.
Perform HTTP request
Get bearer token.
Make a request to the API.
Get the tracks of a Spotify album.
Get information about a Spotify artist.
Get Spotify artist albums.
Get the top tracks for a Spotify artist.
Get the artists related to a Spotify artist.
Get a list of artists for a list of Spotify IDs.
Get information about a specific category.
Returns a list of the most played playlists for the given category.
Returns a list of the most popular categories.
Returns a list of the most featured playlists.
Returns a list of releases.
follows a list of artists or users
Get the albums of the artist.
Get all the albums of the artist.
Get the total number of albums of this artist.
Return the currently playing track.
Get current player.
Get available devices.
Returns a list of recently played tracks.
Replace tracks in this playlist.
Create a playlist on this project.
Get a list of playlists for this album.
Returns a list of tracks for this track.
Get all tracks in the album.
Generate URL for OAuth2 flow.
Get a Spotify album.
Get a Spotify artist.
Get a track by id.
Get a Spotify user.
Get albums by IDs.
Get a list of artists.
Extracts an ID from a string.
Create a client id from a client object.
Generate a URL for a given client id and redirect uri.
Return the attributes as a dict suitable for json encoding.
Returns a string with the parameters of the function.
Build the playlist.
Get all tracks in the playlist.
Transfer audio to specified device.
Get the resource at the given href.
Interns the current record and returns a boolean.
Returns the month of data if data is in short month otherwise returns data.
Update code urls
Returns True if version is greater than or equal to the current version.
Check if the current version of the system is the dev version.
Returns True if version is newer than current version False otherwise.
Save configuration to backup file
Restore content from backup file.
Returns True if the line matches one of the ignore patterns.
Handle options.
Recursively extract base from url.
Return list of decoded domains or IPs.
Returns the HTTP status code of the resource.
Get http code.
Check the validity of a domain.
Check if the given domain is a subdomain.
Check if IP is valid or not.
Check if ip is a valid ipv4 range
Check if url is valid.
Load configuration.
stay safe.
Check if url passed and download it.
URL for entry management.
Print configuration header.
decide file status
Interpret the domain.
Set the URL to test or to test.
Prints the logo.
Formats a domain string.
Extract domain from file.
Returns a list of domains that match the input file.
Returns a list of URLs for all files in the directory.
Return expiration date and status string.
Handles the catching of the exception.
Get the config structure
Create directory if it doesn t exist.
Delete files that are not needed in the current directory.
Return tuple with parsed and default configuration files.
Download and install production config.
Install iana configuration
Install the latest version of pipl.
Download and install directory structure file
Merge values from upstream configuration into the current configuration.
Load the config file
Split version string into digits and non digits.
Check local versions against upstream versions.
Return True if this path is cloned
Attempt to intern a string.
Analytic host file directory
Return unified unified file.
Generate and print status file.
Return True if the file should be produced False otherwise.
Add a file extension to the database.
Load JSON from file.
Return the standard string representation of the element.
Load the iana db
Looks up the server name for the specified extension.
Yield tuples of matched file extension and referer.
Update the iana database with the current configuration.
Try to mine a history of URLs from the cache.
Retrieve the configuration from disk
Write the configuration to the backup file
Add a list of elements to the list
Remove the bare object from the dictionary.
Return a list of mined values
Mine and backup.
Return content of json file.
Write content to file.
Write whois information to file
Set expiration date for the archive.
Makes sure the referer is not found in the cache.
Add header to output file if template is authorized
Construct a header from the given data.
Returns a dictionary of data and size.
Extracts the size from the given header.
Colorize the data based on the template
Print data to json file
Print data based on template
Calculate the time difference.
Return a string representation of the execution time.
Return list of files to delete
Returns list of databases to delete
Delete all databases and databases.
Returns the hash of the file using the specified hash algorithm.
Returns the hash of the data using the specified algorithm.
Get the hash of the current data.
Execute the command and return the output.
Remove a key from the main dictionnary
Rename a key in the main dictionnary
Recursively merge a dictionary into the main dictionnary.
Dump the main dictionnary to a json file.
Write the main dictionnary to a yaml file.
Recursively fix the path.
Write data to file.
Read funilrys file
Returns a sorted list of strings.
Merge a list of lists into a single list.
Returns a list of strings that do not match the regular expression.
Match with the regex.
Return string with replaced substrings.
Count the number of times that this job has finished.
Calculate the percentages.
Return True if the element is valid False otherwise.
Check if the domain is valid.
Check that the value is a subdomain.
Get the current status of the function.
Reformat historical formating error
Retrieve the inactive database if it exists.
Write the inactive database to json
Returns the current timestamp in seconds.
Return the content of this module.
Returns True if there is a string in the configuration.
retrieve data from whois db
Backup whois database.
Check if the user is in the database.
Return True if this is older than the current time.
Return the expiration date of this token.
Run Travis - CI build
Run py funceble in Travis mode.
Lookup the network address of the current host.
Send a WHOIS request to a server and return the response.
Get the URL for the current request.
Get the referer.
Get current object attribute.
Return a list of paths to standard library files.
Return an iterator of standard package names.
Yield unused import line numbers.
Extract unused module name from messages.
Yield the line numbers of imported star imports.
Yield lines for undefined and module names.
Yield unused variable line numbers from messages.
Find duplicate key line numbers in messages from source.
Run pyflakes. api. check on the given source.
Extract package name from a line of text.
Multiline import statement.
Returns True if the line ends in a multiline statement.
Filter imports.
Break up an import into a list of imports.
Given a list of messages return a dictionary mapping line numbers to messages.
Filter star import statements.
Filter duplicate key.
Does the given line look like a dict entry with the given key?
Return True if value is a valid literal or a valid name.
Yield useless pass line numbers.
Filter useless pass lines.
Get the indentation of the given line.
Get the ending of a line.
Fix source code.
Split a comma separated string into a set.
Check if the file is a python file.
Check if a file matches one of the exclude patterns.
Reads the lease response payload from the input stream.
Write the payload to the output stream.
Write the cancel request payload to the given stream.
Read this payload from the input stream.
Create a new enum member.
Read the digest from the input istream.
Write the MKIP digest to the stream.
Read the application specific information from the input istream.
Write the application specific information to the stream.
Create an application specific information object.
Read the derivation parameters from the input stream.
Write the derivation parameters to an output stream.
Read the get request payload from the input stream.
Write the request payload to the output stream.
Read response payload from input stream.
Write the get response payload to the given stream.
Write the signature verify request to an output stream.
Read the signature verify response payload from the input stream.
Build an error response.
Process a template attribute.
Get attributes from a managed object.
Set attributes on a managed object.
Set attribute on object.
Check if the given policy is allowed for the given session.
Write the decrypt request payload to the given stream.
Create a secret.
Set the value of the given setting.
Load settings from a configuration file.
BITMASK = X | Y | Z
Filter cryptographic usage masks.
Read the integer primitive.
Write the integer to the stream.
Validate that the value is valid.
Read this primitive from the input istream.
Write this big integer to the given ostream in hexadecimal.
Validates that the value is a valid integer.
Validate that the Field is correctly representable.
Read the value from the istream.
Write the KMIP value to the stream.
Write the KMIP Boolean to the stream.
Validates that the value is a bool.
Read the interval primitive from the input istream.
Validate that the value is valid.
Validate that the key is well - formed.
Validate that the SecretField is valid.
Validate that the Field is correctly representable.
Convert attribute name to tag.
Convert an attribute tag to a name tag.
Get a bit mask from a list of enumerations.
Get all enumerations that have the given bit mask.
Check if an enumeration value is a bit mask.
Writes the attribute to the output stream.
Read key pair response payload from input buffer.
Write the contents of this key pair to the output buffer.
Read attribute list request payload.
Write the request payload to the output buffer.
Write the attribute list payload to the output buffer.
Return a list of all json files in a directory.
Run the policy scanner.
Get the certificate from the given connection.
Get extended key usage from certificate.
Get the common names of the certificate.
Get client identity from certificate.
Read the payload from the input buffer.
Write the payload to the output buffer.
Read the payload from the input buffer.
Write the payload to the output buffer.
Convert an object into a pie key.
Read the payload from the input stream.
Write the field to the output buffer.
Checks if the given attribute is supported by the current version of the ruleset.
Check if an attribute is deprecated.
Check if the given attribute is applicable to the given object type.
Check if the given attribute is allowed to have multiple values.
Read the check response payload from the input stream.
Write the check response payload to the output stream.
Read the attribute from the input buffer.
Write the attribute to the output buffer.
Read the attributes from the input stream.
Write the MKAttribute to a file - like object.
Read the nonce from the input stream.
Write the nonce to the output stream.
Read credential from input stream.
Write the credential to an output stream.
Write the credential to an output stream.
Read credential tag from input stream.
Write the credential to a file - like object.
Read the MAC from the input stream.
Write the MAC to a file - like object.
Write the key to the output stream.
Read the key specification from the input stream.
Write the key specification to the output stream.
Read the extension from the input istream.
Write the extension to the file - like object ostream.
Read the revocation reason from the input istream.
Write the revocation reason to the stream.
Validate revocation code and message.
Read the tag from the input buffer.
Write the contents of the KMIP header to the output buffer.
Write the RNG to the output stream.
Read the tag from the input buffer.
Write the profile information to the output buffer.
Write the specified output buffer to the specified KMIP version.
Stop the DRAC.
Write the locate request payload to the output buffer.
Reads the payload from the input buffer.
Write the payload to the output buffer.
Create RSA private key from PEM or DER.
Read the tag from the input stream.
Write this signature response payload to the given stream.
Read this request from the input stream.
Convert protocol version to KMIP version.
Read the tag version from the input stream.
Write the KMIP version to the output stream.
Read authentication tag from input stream.
Write authentication data to an output stream.
Read this payload from the input stream.
Read the certificate from the input istream.
Write the certificate to the stream.
Read the payload from the input stream.
Write the archive response payload to the file - like object.
Interact with the server.
Read the payload from the input stream.
Returns True if the given conformance clause and authentication suite is supported False otherwise.
Get attributes for a given entity.
Get attribute list for a user.
Send a query to the server and return the results.
Open the connection to the server.
Closes the connection to the remote host.
Register a new managed object.
Get attributes of KMIP.
Activate a KMIP session.
Builds cryptographic parameters from a dictionary.
Builds encryption key information object.
Builds the mac signature key information object.
Builds a cobjects. key wrapping specification from a dictionary value.
Builds a list of attributes that are common for all operations.
Build the attribute list.
Read query request payload from input stream.
Write query request payload to output buffer.
Read the tag and its attributes from the input buffer.
Write the payload to the output buffer.
Get a single entry from a distro.
Get all endpoints in a group.
Get all distros for a given group.
Load object from module.
Create an entry point from a string.
Generate a controller file.
Rewrite a file and copy it to a new location.
Check if url is valid.
Encode something to JSON.
Decode a JSON string into a python object.
Return absolute url for the given endpoint.
Sign in a user to the session.
Get the current user from the session.
Create a WSGI application.
Writes the given dataframe to the given writer in CSV format.
Read a CSV file into a pandas. DataFrame.
Serialize dataframe to writer.
Deserialize dataframe.
URL of the file.
Open the intermediate dataset.
Read the intermediate dataset as a binary string.
Read intermediate dataset contents as text.
Convert to a dataframe.
Get the intermediate dataset for a given node.
Get experiments in a workspace
Get datasets in workspace
Get a dataset by id
Find all globals in a bytecode.
Return a copy of the pen.
Return r g b a tuple for a color string.
Draws the line to the given CR object.
Compute the cubic bernstein extrema of a cubic surface.
Bernstein basis function.
Build the menu choices.
Initialize cache.
Empty cache.
Get a value from the cache.
Update a cache entry value.
Set an entry in the cache.
Initializes the instance variables.
Resolve a tree alias.
True if current app is admin.
Recursively calculate the depth of an item.
Get tree item by tree alias.
Return URL for a given sitetree item.
Initialize a site tree.
Get attribute of current page.
Get the deepest parent of the given item.
Check if user can access item.
Return a string representation of the tree.
Render the children of the given item.
Get children of the given item.
Update has children flag for tree items
Filter list of items based on current page and navigation type.
Get the parent item of the given item.
Recursive function to climb the tree.
Resolve a filter expression or variable name.
Generates a sitetree from a template.
Returns the sitetree of the children of the current node.
Create a breadcrumbs tree.
Render the tree as a string using the given template.
Create a filter from a template tag.
Get model url name.
re - register the tree admin.
Handles redirects.
Redirects the user to the specified URL.
Redirect to the add view of the tree item.
Overrides Django s response change method to redirect the user to the change view.
Populate the form with known URLs.
Returns a tree object.
Move an item in tree.
Save model method.
Returns list of URLs for the admin site.
Dump model tree and item to response.
Import sitetree module.
Get model class from settings.
Create a configuration from a mapping.
Imports from a Python file.
Load configuration from TOML file.
Create an instance from an object.
Create HTTP headers for a new span.
Get the current context for this thread.
Start the span.
Stop the transport.
Update binary annotations with extra annotations.
Add sa binary annotation.
Override the name of the current span.
Create a copy of the endpoint with the new service name.
Build a v1 span object from this span.
Encode a list of spans into a JSON string.
Create a zipkin span protobuf from the given span.
Convert a hex ID to a binary ID.
Returns the protobuf corresponding to the given kind.
Convert a zipkin endpoint object to a zipkin endpoint object.
Convert annotations to zipkin annotations.
Create an annotation string.
Create a new binary annotation.
Create an endpoint object.
Create a copy of an endpoint with a new service name.
Create a list of annotations.
Build a list of binary annotations.
Create a zipkin span object.
Convert a thrift span to bytes.
Encode a list of thrift objects into a single byte string.
Detect span version and encoding.
Convert a list of spans from one encoding to another.
push zipkin attributes to stack
Encode a span for the Thrift codec.
Create JSON endpoint from endpoint object.
Encode a span.
Decode a list of spans.
Convert a thrift endpoint to an endpoint object.
Decode the given thrift annotations into a dict.
Convert from thrift binary annotations.
Decode a thrift span to a span object.
Convert a trace id to a string.
Convert unsigned long to lower case hex string.
Write hex long value to data at pos.
If tag is a date fixup it to get the maximum month day.
m bank set transaction code
m bank set iph id
Match tag against tnr regex and add it to dict
Join the lines of a string.
Get response body as JSON.
Restrict the number of messages that can be logged.
Get bot information.
Get list of bots.
Read a term from the socket.
Write a message to the stream.
Decode a compressed string.
Encode a Term into a string.
Add a source address to the observer.
Send the next num pending messages.
Set the remote service hello callback.
Stop the server.
clear all local services
Search for remote services.
Create soap message.
Discover all dependencies for a given scope.
Get tagged item manager.
Get all child relations of the given model.
Get all child m2m relations for a given model
Saves the instance to the database.
Performs uniqueness checks.
Returns True if any of the forms have changed.
Return an address with a valid checksum.
Generate a checksum for this address.
Prompt user for seed.
Get a single key from the cache.
Get the key associated with the given address.
Create an iterator for the given range.
Create a sponge for the given index.
Accumulate the given trits.
Squeeze the trits.
Apply the transformation to the state.
Add trits from left to right.
Return a list of trits from an integer n.
Add two trits.
Add trits of left and right.
Print seed in human readable form.
Returns a list of transactions.
Promote a single transaction.
Resolve a URI to a specific adapter.
Send a request to this class.
Logs a message at the specified level.
Send a HTTP request.
Interpret the response.
Add a digest to the heap.
Get multisig address.
Generate addresses iteratively.
Convert a digest to an address.
Generate the address for the given key iterator.
find transactions and return a list of transaction objects
Iterates over all addresses used by the given adapter starting at the given seed.
Get all the bundles that match the given transaction hashes.
Check trytes codec.
Get codec info.
Encode the given input using the Trytes algorithm.
Decodes the given input.
Returns a list of addresses.
Add a route to the blueprint.
Create a signature message from a list of trytes
Return a json - compatible dict representation of the Message.
Get the string representation of this signature validation.
Set whether or not this transaction is confirmed.
Get all the messages in the wallet.
Return a list of transactions grouped by address.
Discover all commands in a package.
Executes the given request.
Apply filter to value and return cleaned data.
Return the URL for the given job id.
Returns a list of errors.
Returns True if the document is valid False otherwise.
Create a validator for the given bundle.
Returns a list of bundle signature errors.
Get the error message for a group.
Traverse the bundle starting at the given hash.
Start an IPython repl for the given API instance.
Return a random string of length length.
Return the digest of the key.
Sign input transactions.
Pretty print this object.
Accumulate the given trits.
Adds context to an exception.
Security level.
Increment the legacy tag by num
Returns the tag of the current transaction.
Add a transaction to the wallet.
Finalize the transaction.
Sign inputs.
Create input transactions for security level addy.
Convert value to standard unit.
Decompress a g1 compressed string.
Inverse of prime field.
Create an instance from a JSON file.
Split description into parts.
Return a list of all categories.
Generate a random colour string.
Instantiate a builtin time scale.
Create a palette from an image.
Returns a CSV representation of the table.
Returns the maximum width of all rows.
Get the decoration for the given character.
Plot the data in this dataset.
DEPRECATED - Prints a deprecation warning.
Process a row of text into a dictionary.
Parse canstrat text into a dictionary.
Return a list of unique IDs.
Returns a list of interval objects corresponding to the given tops.
Clean longitudinal data.
Create a set of intervals from a petrel file.
Read a canstrat file and return a list of interval objects
Return a copy of the Striplog instance.
Write the log list to a CSV file.
Write a section to las3 format.
Returns a list of all intervals that overlap the given index.
Returns a list of gaps.
Return a new Strip with only the specified number of strips removed.
Return a new Strip with gaps removed.
Fill gaps in self with the specified component.
Return the union of two VariantVectors.
Intersect this interval with another interval.
Merge overlapping segments.
Invert the order of the list.
Crop the list to the specified extent.
Run a series of quality tests on this instance.
Get the value of the given field.
Returns a list of all the jobs in the cluster.
Parse the given HCL into a dictionary.
Update the token for the specified user.
Returns a list of all available allocations.
Fail a deployment.
Pause a deployment
Enable or disable draining of a node
Drain the node with the given spec.
Check if a node is eligible or not.
List files in a folder.
Stream the contents of a file.
Stat a file on the server.
Join the given addresses with the given agent.
Update one or more servers.
Force a node to leave the cluster.
Get a list of nodes.
Get a list of all evaluations.
Returns a list of namespaces.
Register a job with the given id.
Create a plan for a job.
Send a job to the queue.
Revert a job.
Revert a job to a stable state.
Deregister a Nomad job
Get the current configuration.
Delete a peer from the network.
Returns a list of deployments with the given prefix.
Returns a random string of the given type.
Returns a random mutator function.
Generate a random polyglot attack string.
Return a safe unicode string from a buffer
Generate custom html file.
Serve the request.
Spawn a process.
Get the output of the command.
Finish reading from the terminal.
Terminate the subprocess.
Start the worker.
Execute a command in the terminal.
Build a random string.
Build a string representation of the scope.
Build the query string.
Build a new random value.
Builds opt gram.
Build a new reference.
Build a random gram.
Shut down and run the testcase.
Spawn a new process and wait for it to finish.
Start the process monitor.
Return random float between a and b.
Returns a string representing the fuzzed version of the request.
Get fuzzed value.
Stop the ioloop if the state is str.
quit the main loop
Pauses the subprocess.
Resume paused command
Stop the child process.
Restart the child process
Get a list of events.
Set user mood.
Set user avatar.
Get metadata for a given url.
Get a single contact.
Get a user by id.
Return a list of skype bots.
Get a bot by id.
Search skype.
Return a list of skype requests.
Create a new instance from raw data.
Merge another configuration object into this one.
Merge an object into the cache.
Read token from token file.
Write the token to the token file.
Verify token validity.
refresh skype token
Get user id.
Get registration token from skype.
Fetch all endpoints from skype.
Check user account.
Authenticate using a token.
Set configuration for the device.
Ping this device.
Return recent chats.
Get a single chat.
Create a new user.
Extract user id from url.
Extract chat id from url.
Convert unicode to unicode.
Detect format handler.
Parses the given text and returns the metadata and content.
Return metadata and content as a dictionary.
Load yaml file.
Export metadata as a unicode string.
Export metadata as a unicode string.
Return full match of the pattern.
Return a list of all the items in the string that match the regex.
Returns a list of sublists for the item at index i.
Convert the pattern to a new start string.
Returns a list of arguments.
Returns a list of lists that match the pattern
Build a trie from a list of strings.
Recursively builds a pattern from a trie.
Check the index for the given key.
Insert string at index.
Returns a tuple consisting of the character char and the part after it.
Returns the list of subspans of the given type.
Shrink the spanning tree.
Update the span for the given index with the given length.
Returns the nesting level of this node.
Return a bytearray containing the shadow of this parser.
Return a bytearray of the ext link shadow.
Returns a mapping from type to list of spans.
Pretty print.
Return list of parameters.
Returns a list of parser functions.
Return a list of template strings for all subspans of this sentence.
Returns a list of wikilinks for all subspans of this word.
Return list of comments.
Returns the external links of the module.
Returns a list of tables.
Return all subspans of the given type.
Returns a sorted list of the ancestors of this parser.
Returns the parent of the given type or none.
Returns the mode of the list.
Get the argument with the given name from the given arguments.
Remove the first argument that is duplicated.
Get the value of the argument with the given name.
Checks if the parser has an argument with the given name and value.
Delete the argument with the given name.
Convert a CRS code to a string.
Find an object by ellipsname and crstype
Load CRS data from a URL.
Create a parse object from a file.
Convert EPSG code to CRS.
Convert an EPSG code to CRS.
Create a CRS object from a string code.
Create CRS object from unknown text.
Write the record to the file - like object out.
Read a VLR from a file - like object.
Parse the geo tiff keys from the given vlrs.
Parses a geo tiff file.
Determine the signedness of the extra dimension.
Get id for extra dim type.
Create a new point record from another point record.
Copy fields from another record to this record.
Append zeros at the end of the array if too small
Returns the names of all dimensions of the array.
Create an array of zeros.
Create a Point instance from a data stream.
Create a Point instance from a compressed buffer.
X coordinate of the column
Y coordinate of the data
Z - axis coordinate.
Add extra dimensions to the data.
Writes the VLAZ file to out.
Write the MAR file to disk.
Build a dictionary of dtypes for a given point format.
Build the dtypes for the given point formats.
Convert numpy dtype to point format.
Returns the minimum supported file version for the given point format.
Check if format id is in version to point fmt.
Extracts all VLRs of the specified type.
Read VLRs from a file - like object.
Returns True if all files have the same point format.
Check if all the las files have the same dtype
Raise pylas error if file signature is wrong.
Read the header from the file.
Read a list of VLRs from the stream.
Read points from a vlr.
Read compressed point data.
Read internal waveform packet.
Read the first ENVLR sequence from the file.
Warn if we are not at the expected position.
Create a las data object from a las header object.
Merge multiple las files into one.
write las to file then read again
The date of the citation.
Set the date of the citation.
minimum values of the Quaternion.
mins setter.
Returns the maximum values of the Quaternion.
setter for maximum coordinates
Returns the x y and z scales as a numpy array.
Return the x y and z offsets of the mesh.
Returns the file version from the stream.
Convert the header from the old format to the new.
Unpack an array from a mask.
Returns a list of the names of all dimensions that are missing from point format in.
Returns a dictionary of sub - fields keyed on dimension name.
Returns the number of extra bytes for the given dimension.
True if dimension has waveform packet False otherwise.
Main entry point for the CLI.
Calculate the CRC for a command.
Print data in hex format to logger. debug
Verifies the checksum of the response string.
Returns a list of the indices of the set bits in r.
Generate a query from the given command.
Demonstrate Satel.
Connect to the IRC server.
Start monitoring the device.
Disarm the drone.
Clear the alarm.
Set the output of a command.
Keep the connection alive.
Monitor the status of the device.
Close the connection to the serial port.
Purge user database.
Guess the type of the given path.
Get the file id for the given path.
Get a notebook from the database.
Create notebook model from database record.
Get a directory record.
Convert file records to model instances.
Create directory model from db record.
Create file model from db record.
Save notebook to database.
Save the model to disk.
Rename a file or directory.
Delete a file or directory.
Ensure user exists in database.
Purge files directories and users.
Create a directory entry in the database.
Check if the given user is in the given database directory.
Delete a directory.
Check if a directory exists in the database.
Return all files in a directory.
Return a list of directories in a given user s directory.
Return True if the given path belongs to a file of the given user.
Build a select query for file information.
List of default file fields.
Get a file from the database.
Get a file from a user.
Get file id.
Check if a file exists in the database.
Rename a directory.
Save a file to the database.
Purge all checkpoints for a user.
Reencrypt the content of a row.
Reencrypt content for a user.
Derive single fernet key from password and user id.
Get the name of a column.
Convert a row of data to a dictionary.
Convert a row of data to a dictionary.
Create a checkpoint for nb at path.
Create a file checkpoint.
Delete a checkpoint.
Get the content of a checkpoint.
List all checkpoints for a given path.
Move checkpoints from old path to new path.
Delete all checkpoints for the specified path.
Purge all checkpoints from the database.
Resolve the given API path.
Apply prefix to model.
Manage managers.
Get a file or folder from the filesystem.
Normalize an API path.
Split a path into its parent directory and its name.
Write a notebook to a base64 string.
Read a file from a base64 encoded string.
Decode a base64 string into a string and a unicode string.
Decode a base64 - encoded file.
Return a list of all directories starting with the given path.
Create a new user.
Takes a list of models and separates the dirs and files.
Recursively walk a directory tree.
Walk a directory tree yielding each file.
Walk a directory structure yielding the contents of each file.
Reencrypt a single user.
Unencrypt all users.
Unencrypt a single user.
Create a temporary alembic ini file.
Upgrade alembic to a given revision.
Sanitize a block for internal embedding.
Queue an instance for embed type with data.
Load instances for given embed type and ids.
Insert an instance of the given type into the block.
Loads all instances of each embed type.
Validate the data.
Admin view.
Returns a json representation of the object.
Hide authenticated fields.
Exclude fields from the view.
Overrides Django s get method to handle version and preview id kwargs.
Returns a queryset of publishable objects.
Returns a queryset of publishable objects.
Get the value of the field as a string.
Validate widget.
Validate zone.
Check if uuid id is valid.
Get user permissions.
Modify the permissions of the user.
Author key validator
Save zone data
Returns the data as a dictionary.
Prepares the data for rendering.
Render the template with the given data.
Get integration settings.
Facebook callback.
Get integration settings.
Update the settings for an integration.
View function that handles the signup form.
Map a tag name to a list of strings.
Render a zone.
Save featured image.
Save a subsection of this article.
Get the extension of the file.
Returns the URL for the media.
Saves the thumbnail.
Saves a thumbnail.
SQLAlchemy connection string.
Get a bandwidth limited stream.
Read amount of bytes from the compressed file.
Consume the given amount of time for the given request token.
Processes the scheduled consumption for the specified token.
Returns the projected rate for the given amt and time.
Record consumption rate.
Poll for the result of a transfer.
Get a list of callbacks for a given transfer.
Return a copy of the original dict with only the keys in whitelisted keys.
Decrement the counter. Calls the callback function if the count reaches zero.
Call the callback if the number of items has changed.
Check if a file is special.
Acquire the semaphore for the given tag.
Release a lock.
Adjusts the chunksize to the given value.
Queue file io task.
Determine which download output manager to use for the given fileobj.
Write data to fileobj at offset.
Request all writes at the given offset.
Check if fileobj is seekable.
Send the shutdown command to the IRC server.
Cancel all pending transfers.
Wait for all pending transfers to finish.
Return a filereader for the given data.
Get upload input manager for the given fileobj.
Set transfer exception.
Set the return value of the future.
Set the result of the future to the given exception.
Return the result of the future or raise an exception.
This method is called when the future is cancelled.
Submit a task to the transfer.
Add a done callback.
add a failure cleanup
Announce that the job was completed.
Upload a file to S3 or a multipart bucket.
Download an object from S3.
Step decorator arguments.
Find and refactor the step between old and new.
Get step from decorator s arguments.
Find and refactor the step between two texts.
Update an existing membership.
Delete membership by id
Get catfact.
Post a message to a room
Deletes a membership
Validate base url.
Returns true if the given string is a valid web URL.
Opens a local file.
Check that o is one of the acceptable types.
Create a dictionary from a list of dictionaries and values.
Check response code against expected response code.
Convert json data to dict.
Create a webex teams date time from a string.
Create a new team.
Update a room.
Delete a room.
List organizations.
Returns created date.
Get the access token from the environment.
Update a webhook.
Delete webhook.
Set wait on rate limit.
Update headers for current request
Returns the absolute url for the given URL.
Make a GET request.
Get all pages of a URL.
Make a PUT request.
Send HTTP DELETE request.
Create a new user.
Delete a message from the queue.
Get a person by id.
Delete a person from the database.
Return me object.
Get a list of items.
Create a new resource.
Update a team.
Delete a team from the authenticated user.
Recursively serializes the given data.
Returns webex teams last activity.
Post events.
get ngrok public url
Delete webhook with specified name.
Create a webhook for ngrok
Create ngrok webhook
Read telegrams from a serial port.
Read telegrams from serial connection and put them in queue.
Create a dsmr protocol.
Create a connection to a dsmr device.
Create a TCP connection to a dsmr server.
Process received telegrams.
Called when the connection is lost.
Parse telegram and call callback.
Parse telegram data.
Get the version of the specified executable file.
Checks if the current Python version matches one of the specified Python specs.
Find all packages under top.
Run a command with subprocess. check_output.
Get files from specs.
Get package data.
Compile a glob pattern into a regular expression.
Recursively expand a path.
Translates a glob pattern into a string.
Join a list of translated parts into a single string
Translate a glob pattern to a regular expression.
Truncate table.
Write a table to the database.
Writes the CREATE INDEX... etc. to the database.
Writes the CREATE INDEX sql for the specified table.
Write constraints to the database.
Write the contents of a table to a file.
Writes all indexes for the specified table.
Write constraints for the specified table.
Writes the triggers for the specified table.
Returns the number of messages queued in the queue.
Enqueue data to be inserted into the queue.
Start a task handler thread.
Build extra predicate.
Convert datetime to ISO - 8601.
Reconnect connection to Mysql database.
Executes a query. Returns the first row or None.
Get a connection to the database.
Run the benchmark.
Return a connection to the redis pool.
Look up a module variable by its error code.
Returns the total number of connections and fairies.
Potential connection failure handler.
Create a simple expression with the given fields joined.
Create an UPDATE query for a table.
Connect to the database.
Destroy all tables in the database.
Start a new step.
Stop a step.
Load steps from JSON.
Disconnect from the serial port.
Reconnect to the serial port
Connect to the websocket.
Called when websocket message is received.
Stop all timers.
Send a ping to the server.
Check for a pong from the server.
Send data to the websocket.
Remove all paused messages.
Handle system events.
Default error handler.
Handle incoming data.
Resubscribe to all channels
Handle authentication data.
Handle conf.
Update the timestamps for a channel.
Reset the connection to the default state.
Get candles for a given pair.
Set bitfinex config parameters
Subscribe to ticker pair.
Unsubscribe from a ticker.
Subscribe to order book.
Unsubscribe from order book.
Subscribe to the order book for the given pair.
Unsubscribe from an order book.
Subscribe to trades.
Unsubscribe from trades.
Subscribe to candles.
Unsubscribe from candles.
Authenticate with the API.
Cancel one or more orders.
Called when a command is received.
Process a device command event.
Process a message notification.
Create a new device.
Update a device.
Find clients by status.
Returns a list of all resources.
Create a new DME
Update a schema.
Disconnect from the websocket.
Callback when a client connects to the broker.
Callback when a unsupported message is received
Process device event.
Process device status message.
Process application status message.
Get the last event for a device.
Get all events for a given device.
Make a call to the API.
Initiate a request.
Get the status of a specific request
Closes the connection to the serial port.
Get the bounds for the given coordinate.
Load byte array.
Check the return value of a function call.
Load application.
Runs the gunicorn server.
Convert the value to a native Python object.
Crops the given image.
Process an image.
Invert and save the image.
Open file if needed.
Process the placeholder image and save it to disk.
Saves the versatile image field.
Update the ppoi field of the given instance.
Returns the formfield for this field.
Convert value to string.
Auto - discover Django application configurations.
Unregister a sizer.
Unregister filter for given attribute.
URL for this image field.
Build image filters and sizers.
Returns the full path to the filtered root folder of the image.
Returns the path to the sized root folder for this image.
Returns the path to the filtered folder.
Delete files matching regex from storage.
Preprocess gif image.
Convert jpeg format to str if needed.
Retrieve an image from the store.
Saves an image to disk.
Returns the num th ppoi as a string.
Create a resized image.
Render the input.
Returns the context dict for this input.
Build attributes from base attrs and extra attrs.
Returns path to resized file.
Get filtered path.
Validate a list of combinations of image field sizes.
Get url from image instance by key.
Get rendition key set.
Formats a single instruction for printing.
Format a function body.
Decodes the bytecode into an iterable of instructions.
Yield fragments of a module.
Connect to the server and return a task to handle the connection.
Read a result from the device.
Parse the AGI code check result.
Check if code is a valid agi code
Reset all instances to their initial state.
Returns a list of all the instances in this group.
Get distro metadata.
Get primary keys of a sqlalchemy model.
Deserialize value into a related model instance.
Get an existing related model instance from the database.
Get the declared fields for the schema.
Load data from database.
Split data into kwargs and association.
List available snapshots.
Restore the latest snapshot.
Shuffle indexes after epoch end.
Apply textacy cleaner.
Apply a function to a list of data in parallel.
Processes the given text.
Process text in parallel.
Generate statistics about the document length.
Pandas dataframe of token counts.
Map a param type to a sub type.
Parse the interfaces section of the docstring.
The inverse of the matrix.
Undo the last update and commit the changes.
Return a copy of the current instance.
Return a copy of the node.
Structural equality of two mappings.
Return an inverted version of arg.
Remove all data.
Move the node to the end of the path.
Write text to a temporary file and return the filename.
Merge args into config.
Load all address books with the given names.
Create a new contact.
birthdays subcommand.
Returns a list of phone numbers matching the search terms.
List command line interface.
Modify an existing contact.
Remove a vCard from the vcards.
Command line tool to edit a source file.
Merge contacts.
Get action by alias.
Create a new contact.
Create a private object from a file.
Create a Contact instance from user input.
Create a new Contact instance from an existing contact and a user input string.
Return a list of names for the specified part of the name.
Add a category to the vcard.
Parse type value.
Recursively convert a list into a string.
Parse input string to datetime object.
Compare two UIDs and return the sum.
Search for all contacts that match the query.
Search for contacts by full name.
Search for contacts by name or ID.
Search the database for query.
Returns a dictionary of short UIDs.
Returns a short uid if it exists. Otherwise returns a string.
Yields a list of vCard files in the vCard directory.
Load vcards from local files.
Returns the abook with the given name.
Return a mapping of architectures to archs.
Return a mapping of architectures to archs.
Guess the type of the kwargs.
Performs a replace query.
Returns the first instance of the model associated with the given number.
Deletes rows from the table.
Emulate lua.
Estimate the amount of work required to execute a Lua script.
Count the number of items that pass the filter.
Returns a connection object for the given object.
Return the full text of the given value.
Add an object to the cache.
Returns the value of the given pk.
Write an entity to redis lua.
Save changes made to object to database.
Delete the object from the database.
Get instances by their primary keys.
Open a SEM file.
Puts the result back into the queue.
Add a call item to the queue.
Checks if the number of workers is not too large and starts the queue management thread if necessary.
Start the server.
Duplicate a file descriptor.
wait for num pending work items to complete
Prepare process from data dictionary.
Close only the specified file descriptors.
Recursively terminate process.
Recursively terminate a process.
Get exitcodes for all processes terminated worker.
Format a list of exitcodes.
Spawn process if not running.
Returns the event processor for this frame.
Split a string into a list of lists.
Get the stacktrace for a frame.
Run a list of hooks and return True if any of them return False.
Forget about the current stack frame.
Returns the value of the given arg or None if the arg is not an integer.
Process commands.
Start a new command file.
Finds the next token in the string and returns it as a tuple.
Print error message and exit.
Read a line from the input.
Close the connection to the device.
Disassemble bytecode and return as a string.
Count the number of frames
Get call function name.
Print the stack trace of a proc obj.
Lookup subcmd by prefix.
Print the short help for the specified subcmd.
Add a subcmd callback.
Run a subcmd with the given arg.
Show all commands of a given category.
Run lineinfo command
Finds the frame that should be debugged.
Get an integer or raise an error.
Turns on or off.
sets the value of a setting
Show the value of show in the debugger settings.
Prints the value of the setting as an integer.
Show value of setting.
True if line is a def statement.
Return True if line is a class instruction.
Quit from threaded mode.
Returns a boolean if the background color should be set or False if it should be.
Check if the current color is dark.
Get the signature of the given frame.
Returns a list of all displays
Returns a string representation of the display for the given frame.
Read a single message from the socket
Displays debug information about the current state of the environment.
Runs the debugged code with the given arguments.
Pretty print a simple array
Look up the signal name associated with the given number.
Looks up a signal signum by its name.
Return the canonical name for a signature number.
Set the signal handler for signum to handle.
Check and adjust sighandlers.
Print signal info.
The action method.
Handle print signal.
Handle the signal signal.
Extract module name from filename
Search for a file in a list of directories.
Try to find a file in the specified directories.
Returns a list of filenames for all py files for the specified caller.
Write a message to the output.
Run the event loop.
Sort and columnize a list of commands
Close the connection to the device.
Write a message to the socket
Return completions for an identifier.
Run a command in the background.
Add frames to ignore
Return canonical path for filename.
Returns the filename of the main Python file.
Return True if tracer is running and tracing is enabled.
Check if we should stop here.
Set the next frame in the stack.
Prints the stack trace of a file.
Remove a breakpoint from the list.
Delete a single breakpoint.
Enable or disable all breakpoints.
Enable or disable a breakpoint.
Delete all breakpoints for the specified file and line number.
Open a file for reading.
Read a line and return it as a string.
Prompt user for confirmation.
Submit a query and return a future.
Restore user to its original state.
Loads a module and returns a boolean indicating if the module can login.
Iterate over all documents in the database.
Transcodes a file to a stream.
Normalize data in a stream of dicts.
Convert a date string to a timestamp.
Detect the encoding of a file.
Yield each line of a file as JSON objects.
Strips whitespace from the beginning of a file and encodes the string using the specified encoding.
Open a CSV file in Python 2.
Yield rows dicts from a CSV file.
Entry point for the transcode script.
Save token to file.
Make a request to the luminoso API
Perform DELETE request
Return root url of given url.
Save token to file.
Make a request and return the JSON response.
Make a POST request.
Get the documentation for this client.
Perform a GET request and return the response as text.
Print result in CSV format.
Read params from file.
Simplifies a docstring.
Create a project from a list of docs.
Upload docs from a file.
Upload a stream of documents to a project
Transcode a file to a stream and upload it to the Google Maps server.
Main entry point for the upload script.
Create a LeadinosoClient by authenticating with the given credentials.
Login form.
POST login page
Fetch data for each period.
Prepare view for rendering.
Initialize the handler.
Renders the view and writes it to the client.
Called when a change is received from the browser.
Update menus for current page.
Return a list of default handlers for this site.
Called when a message is received from the browser.
React to changes in the dom.
Create the sub - widget of this widget.
Initializes the widget for this element.
Destroy the widget and its parent if it exists.
Called when a child element is added to this element.
Called when a child widget is removed.
Returns all child widgets of this widget.
Sets the attribute name to value.
Handle changes to the proxy.
Notify the root object that a change has been made.
Returns a list of nodes that match the XPath query.
Initializes the widget for this component.
Set the source of the component.
Called when the mode of the widget changes.
Called when a block is observed.
Observe the children of this node.
Returns the contents of the file at the specified path.
Print msg to stderr and exit with exit code.
Error parsing function.
Get a product by name.
Create a new session.
Reset the session and return the response.
Returns a list of stores that match the search.
Set the delivery system for the given store.
Get the menu for the given store.
Add an item to the basket.
Add a pizza to the basket.
Add side to basket.
Remove an item from the basket.
Set payment method.
Process payment.
Call GET method.
Call POST method.
Call an API method.
Append an item to the menu.
Add a new exit line.
Draw the menu.
Process user input.
Select the currently selected option.
Create a curses menu from a dictionary.
Convert a datetime column from string format to datetime.
Convert datetime. datetime to string.
Apply a mathematical operation to a column in a DataFrame.
Cumulative sum a pandas DataFrame.
Remove oldest cache entries older than limit from cachedir.
Add an offset to a dateobj.
Learning updates from the model.
Parameters for training.
Optimize the parameters and update the free parameters.
First glimpse sensor.
Prepare the layers for training.
Computes the cost of the given tensor.
Apply a function to all elements of the dataset.
Vectorizes the target set.
Prints the training valid and test results to the log.
Train the model.
Sample the input with the given number of steps.
Computes the alignments for the current model state.
Compute the context vector.
Concatenates vars along the given axis.
Pad dataset to given length along given side.
Core theano rmsprop implementation.
End the timer and print the time taken.
Run the cost function on the given data.
Runs the model.
Build a dictionary of neural variables for the loop.
Perform a single scan step.
Compute the momentum core.
If self. training flag then branch else branch.
Skip batches and epochs.
Load parameters from a file.
Train the network.
Run the training loop.
Runs the model on the given epoch with the given valid set.
Prints the current epoch and the new best score.
Returns the current dataset.
Apply a function to the tensor and return a neural variable.
Prints a report to the logger.
Declare a new variable.
Create neural variables from data.
Create a shared theano. theano shared variable for the given value.
Stack encoder layers.
Add decoder layers to the stack.
Encodes the input tensor using a neural network.
Run the decoder on the input data.
Create a 2D Gaussian with the given sigma.
Register a new layer with the model.
Record layer outputs and their mean.
Returns a list of all parameters.
Setup the input and test variables.
Call the compute function with the given arguments.
Save parameters to file.
Load parameters from file.
Prints a report of the problem.
Registers new updates.
Register training updates.
Add one or more monitors to the cluster.
Compute the L2 norm of a list of tensors.
Dumps one element to a file.
Load a pickled file.
Loads the parameters for this block from the given path.
Decode base64 encoded state.
Parse credentials data.
Filter the request elements for the given type.
Logs the user in to the specified provider.
Normalize a dict so that all values have the same length.
Convert a list of key - value pairs to a dictionary.
JSON parse a query string.
Resolve provider class.
Create a new cookie.
Save session data to cookie.
Get the data from the cookie.
Dictionary of data.
Generate a signature for the request.
Serializes the given value into a serialized string.
True if the token is valid False otherwise.
Returns True if the token will expire within the given number of seconds.
Return serialized string representation.
Return True if content is a binary string.
Returns the response content.
Override access to get user information.
Login to Federated portal.
Returns the session key for the given key.
Set the value for the session key.
Generate a CSRF token.
Log msg % kwargs to the appropriate logger.
Check if the status is within the category.
Split url into base and params.
Add CORS headers to the response.
Get app kwarg dict.
Return a string representation of an object.
Ensure inst is iterable.
Check if two floating point numbers are close.
Deserialize an audio segment from a string.
Create an audio segment object from a file.
Interleave an audio segment from a numpy array.
Reduce this audio segment by concatenating the others.
Return a serialized version of the state.
Choose a front id from a list of front ids.
Find front id after onset sample idx.
Get the offset after this onset front.
Match an offset front id to an onset front id.
Returns consecutive and overlapping fronts of onset and offset front.
Return the ID of the front row with the given index.
Given a list of front IDs return a list of front IDs.
Returns the indices of the corresponding offsets for the given ontology fronts and offsets.
Remove overlaps in fronts from segmentation mask.
Remove fronts that are too big.
Merge adjacent segments into a single segment mask.
Separate a mask from other masks.
Downsample one or the other from mask to stft.
Asa task.
Bandpass filter.
A butterworth lowpass filter.
Convert a list of rows to a tensorflow input matrix and outcomes.
Expand and standardize the dataset.
Compare two strings ignoring case.
Loads the audit file and returns the confusion matrices.
Convert a list of rows to a tensorflow input matrix and outcomes.
Update pypi api url from config files.
Autodetects requirements files.
Handles the given error code.
Get the current state of the LSL object.
Open an output stream for reading.
Find the first child element with the specified name.
Next sibling of the element.
Find the previous sibling of the element.
Set the name of the linter to name.
Set the value of the lsl element.
Append a new child element to the list.
Prepend a child to the start of the lxml string.
Append a copy of an element to the list.
Prepend an element to the start of this element.
Remove a child from this lsl.
Returns a list of stream info dictionaries for the resolver.
Get a list of tokens associated with a word.
Autocomplete n - grams.
Returns a list of edge ngrams for token.
Iterate through a pipe.
Yields the results of applying the given function to each element of the iterable.
Given a string make a fuzzy version of it.
Returns a fuzzy version of the given word.
Index a word using fuzzy matching.
Extend the results bucket with relations.
Prints the documentation for the specified command.
show database information
Get or set a database key.
geohash latlon
Index a document.
Get the best scores for a word.
Send a tornado. web. Response object.
Map a list of requests.
Extract a set of bits from an array of words.
Reinterptet harray to the given bits t.
Convert a slice object to a slice object.
Find files in a directory that match a pattern.
Return True if val is contained in iterable or False otherwise.
Iterate over a list of items and apply a function to each item.
Exponential logarithm to ceiling.
Returns True if num is a power of 2.
Adds a case statement to the problem.
Defines a default stemmer for the given statements.
Add a variable to the VCD writer for the given object.
Register interfaces and signals before simulating a synthesised unit.
Log a change.
Generate the handler method for the given process.
Returns a list of agents for the given unit.
Get the clk associated with this unit or its parent unit.
Yields the elements of iterable that are returned by fn.
Group a collection by a function.
Flatten an iterable.
Merge nested if stm into self. el.
Removes signals that are not connected to any other signal in the network.
Check if the given process is too simple.
Merge two processes.
Reduce a list of processes into a single process.
Called when a write request is received.
Given a list of HDL statements find the name of the output that has a generic name.
Remove drivers of dst signal from statements.
Synthesize this entity.
Returns the maximum stm id for stm.
Returns the maximum statement ID for the given process.
Write data to simulation.
Shuffle direction.
Recursively load all the declarations of the class.
Returns a list of signals for this interface.
Get the physical name of the port.
Return the number of bits in the bit field.
Determines the sensitivity of a node based on its operation.
Convert the value to the given type.
Reinterpret the bits in sig to the hstruct t.
Returns the number of full words between start and end.
Group by word index.
Pack data into a generator.
Recursively cleans up the meta data of all stms.
Discover enclosure for a list of statements and a list of outputs.
Discover the sensitivity of a sequence of signals.
Returns the rtl context for this signature.
Performs the reduction.
Merge other stm into this stm.
Return True if stms a can be merged into stms b.
Merge a list of statements.
Merge stms a and b into a list.
Try to reduce a list of statements.
Decide whether this statement is dependent on the parent.
Sets the parent stm for this statement.
Given a list of statements and a list of stements add them to the target list.
Remove this statement from the context.
clean as subunit
Recursively walk through dtypes of val yielding dtypes of sig
Return a copy of this array with the sign changed.
Add sensitivity to assertion.
Simulate a condition.
Connect a port signal from one sim unit to another.
Convert a value to a vector of specified width.
Processes a hw - style program.
Evaluate a parameter.
Set the value of the field.
Convert a list of struct members to a string.
Finalize memory management.
Get the cascade for the index operation.
Return the string representation of the given Python value.
Cast a value to a given type.
Cast the value to the given type.
Recursively walk the params of an interface and its subinterfaces.
Connect src to dst interface.
Pack the signature of an interface.
Synthesize this entity to the Rtl interpreter.
Register an interface in this module.
try to reduce sig to val if sig is full return sig else return val
Try to reduce a signal by XORing with another signal.
Returns the name of the base class.
Return a boolean indicating whether the object should be serialized.
Get the base condition of a condition.
Return a set of similiar bits.
Get a constant by value.
Cut off all drivers of the given signal.
Load from array.
Load from hdl dtype.
Load from a HDF5 type.
Get the width of the array item.
Flatten a bitstring.
Fix the sign of a number.
Get indent.
Check availability of a property
Add a parameter to the method.
Update this scope s params with those from other obj.
Register a new unit under this node.
Add an interface to the context.
Register an array of items.
return a single driver
Static evaluation of the function.
Create a new signal with the given result and the given res.
Returns a copy of the context with an additional indent.
Connect src to dst if not already connected.
Connect clk to all units in obj. units
Connect the clk and rst units to each other.
Connect the clk and rst units to each other.
Connect all RST units to all other RST units.
Propagate RST to all connected units.
Iterate over the bits of a signal.
Prepare entity for serialization.
Prepare entity for serialization.
prepare entity prepare entity prepare entity prepare entity prepare entity prepare entity return bool priv
Get the full name of this object including the interface name.
Make association for all objects in the collection.
Convert a rtl unit to a sim unit.
Re - connects signals to models.
Compute the VCD of a given model and stimultion functions.
Starts the on t signal.
Connect this driver to a signal.
Register an interned signal.
Interns this driver to another driver.
Get an interned signature for this instruction.
Determines if the given signal is dependent on the given process.
Add a process to the queue.
Add a new process to run.
Schedule the next comb update event.
Schedule new processes for the scheduler.
Strategy for conflict resolution.
Run all comb processes.
Run the sequence processes.
Apply the values in self. values to the system.
Returns the value of the given signature.
Write a value to the simulation.
Add a process to the queue.
Synthesize the given unit.
Convert ternary operations to if statements.
Distance between two hashes.
Calculate the average hash of an image.
Computes the Euclidean distance between two images.
Configure the platform.
Update power state.
mute volume.
Increase volume by step
Down volume by step.
Set volume level.
Resets piece pieces and board.
Returns the piece at the given square.
Removes piece at position square.
Sets piece at the specified square.
Moves the pawn. Returns True if suicide False otherwise.
True if the king of the square is suicide.
Determine if the game is over.
Checks if the game is checkmate.
True if this repetition is a fourfold repetition.
Pops a piece off the stack and returns it.
Returns a string representation of the board.
Move the move from usi to usi and return it.
Return a zobrist hash for the hand.
Returns the piece symbol.
Create a Piece from a symbol.
Returns the USI string representation of the piece.
Create a piece from a string.
Parse git commits.
Parse a commit line.
Execute Django management from command line.
Generate a yaml representation of the configuration.
Cast the value as specified by the cast attribute.
Returns a list of dates between first date and last date
Parse a date string.
Load currency file.
Set missing to none for currency
Get rate for currency for date.
Animate a series of frames.
Read a record from the file.
Write a record to the file.
Map a range of words.
Return record comments as string.
Close the file.
Return the position of the next genomic position.
Close the file.
Load data from file.
Visit a call node.
Visit bin op node.
Implement dict walker.
Visit a joined string node.
Visit a keyword node.
Try to find the name of the exception handler.
Detect the logging level of a node.
Get the name of the node.
Returns the id attribute of the given value.
Checks if the given exception node is a bare exception.
Check exc info of a node.
Deletes a file from the database if it exists.
Return rendered content as PDF string.
Render the PDF to a response.
URL encode a string using the unidecode module.
Configure the options for the given module or module type.
Convert string to underscore.
Automatically index the collection.
Parses the given file and returns a list of price models.
Loads a file into a list of lines.
Parse line into price model instance
Translates the given symbol.
Load all symbol maps.
Returns the current session.
import prices from csv file.
last price for security symbol
Download price data.
Prune all security symbol or all security symbol
Get default session.
Add a price map.
List price maps.
Get symbol by id.
Reads lines from a CSV file.
Maps dal. price entity to a price model.
Maps price model to entity.
Read configuration from file.
Get config template filename.
Create user configuration file.
Get config path.
Get the contents of the file.
Set an option to a given value.
Get the value of an option from the configuration.
Save the configuration to a file.
Parses a symbol into namespace and mnemonic.
Add price entity.
Download price for symbol currency agent
Returns the current session.
Get prices for the given date and currency.
Get latest price for namespace on date.
Prune all security items
Prune all prices for a security symbol
Download price for agent from Yahoo Finance.
Get all securities.
Return a partial version of the state.
Update the partial call information for all child nodes.
Recursively descends the tree.
has chosen test.
Returns a copy of the dictionary with only the defined items.
Get the value of the given extension attribute for the given tree.
Test for loop context.
Check that all parts of the solution have the correct context.
Check that the student and solution have the given part.
Check that the student and solution parts have the given index.
Get the true anomaly.
Initialize the application.
Add LDAP server to the pool.
Remove a connection from the context.
Teardown the context if it exists.
Authenticates the user with the given credentials.
Authenticate directly to the LDAP server.
Search LDAP for user groups.
get user info by DN
Get user info for given username.
Search LDAP for an object.
Get LDAP connection.
Create a connection to the database.
Make a LDAP connection.
Destroy a connection.
Search the database.
search the database
search for all artifacts in a collection.
speak to the database
Announce to the user.
update secrets in the settings
update headers of this message.
require secrets for this client
download a url to a local file.
stream a file from a url.
update token in headers
Get or create a folder.
Read the message from the response.
get bucket.
Read client secrets file and update base.
Initializes the native app auth client
load secrets from redis
Lists the logs of the service.
list logs in the bucket
create a folder for an endpoint
Initialize transfer client
search all available containers
Check client secrets.
add a value to the secret
remove a secret variable for a specific backend
Activate a secret backend.
Delete a secret backend
Update base for image.
Create a basic auth dictionary.
Generate HMAC - SHA256 signature.
Generate header signature.
DELETE a URL.
make a HEAD request
Paginate get requests.
return True if ssl is enabled False otherwise.
remove an image from the registry
Get the version information from the installed package.
Returns a list of requirements that can be installed.
get the singularity version
check if installed software is available.
Returns the absolute path to the directory where this package is installed.
Returns the path to the thumbnail image.
Run a command and return the output.
Get image metadata.
update dropbox credentials
print the output to a file or STDOUT
Destroy a registry.
List logs of a container.
Returns a list of collections
update secrets.
Inspect an IPython server.
get manifests for a repository
get a manifest for a repository.
Get singularity download cache location.
extract the environment variables from the config file.
update api base artifacts and job settings
Update self. token from self. required and self. headers
Get the metadata for the job.
Get secrets for a particular client.
get and update a setting
Update a setting for the backend.
Generate an authorization token.
list builders for a project or zone.
return a list of templates that match the specified template name
get the ipaddress for a given instance name.
build a new instance
list all the containers in the bucket
search all buckets
List files in S3.
Command line interface for sregistry.
initialize the database.
get the build template for this project
list all registered endpoints
list all files for an endpoint
share an image with a dropbox.
Read client secrets from file or default.
Get all the services.
Delete an object from a bucket.
delete a file from S3
destroy an instance.
Get subparsers for the given parser.
Generates a string with the specified delim and length.
Get a path to a temporary directory.
extract a tar archive to a folder.
extract a tar archive to a folder.
Get the SHA256 hash of a file.
Open a file and return its content.
Read a JSON file.
delete a file or list of files.
push a file to S3
Get or create a database collection.
Get a collection by name.
Get container by name collection id and tag.
list all images in the registry
Inspect a container.
rename an image
move a container to a new location
remove a container
Parse a header from a recipe.
Find a single recipe for a given file.
create a tarball of the build package.
Update blob metadata.
Format a container name.
Whether to use colorized output or error messages.
Return True if we should emit an error at the given level otherwise return False.
Write a message to a stream.
Prints a formatted table of data.
push an image to the registry
get a template by name
get manifest by repository name and tag
return the contents of a build template file.
update secrets from the client.
Context manager for s3 errors.
Create a new proxy with a temporary file.
Get a gravatar url for a user or email.
Returns a gravatar url for the email.
Check if gravatar exists for email.
Returns the gravatar profile url for the given email address.
Generate blocks of chimera code.
Return a graph representing the quotient of the blocks.
Enumerate all the mesomers in resonance.
Enumerate molecules.
Apply transform to molecule.
Canonicalize molecule.
Validate a SMILES string.
Standardize smiles.
Enumerate all tautomers with smiles.
Canonicalize a Tautomer string.
Returns the parent tautomer of mol.
Returns the parent of the largest atom in molecule.
Cartesian parent molecule
Set the isotope of the parent molecule.
Return the uncharged parent of a molecule.
Main entry point for molvs command.
Remove a molecule from the structure
Given a molecule choose the best match.
Integrate an IVP or adaptive function over an interval.
get members of org
get teams of org
iterate over repos
Returns the total number of contributors for a repository
Get number of open pull requests and number of closed pull requests.
Get the number of closed issues for a repository.
Returns the readme for the repository.
Get license for repository.
Get the number of commits for a repository.
write org json file
Writes the total number of repos members and teams in a file.
Writes the languages to a text file.
Check if directory exists. If not create it.
Remove date from CSV file.
Returns a list of all gov orgs.
Create an enterprise Github session.
Check GitHub API rate limit.
Create a GitHub session.
Query repos in GitHub for repositories.
Get user s organization.
Write the stargazers to a file.
Create a project object from a gitlab repository object.
Convert license to dict.
Get all the information about repos
Get all releases for a repository.
Get referrers for a repository.
Get data from a repository.
Write a dict to a json file.
Write referrers views and clones to files.
Check the redundancy of the data in a file.
Writes data to a file.
Write referrers to file.
Generate DMEcode from a JSON file.
Get DOI code from url.
Process a file url or key.
Login to Github.
Get members of org.
Write to file.
Establish a connection to a BB instance.
Connect to GitLab.
Query projects by repositories.
Compute labor hours for a person given its location and month.
Prune dict where the value is None.
Read a GQL query from a file.
reset the clock and countdown until it s time to reset
Countdown method that prints the number of seconds until num is reached.
Load data from a file.
Save data to file.
Create a tfs connection.
Create a TFS project analysis client.
Create a TFS core client.
Create a tfs git client.
Create a TFV client.
Get the list of git repositories for a project.
Get branches of a project via tfvc.
Get the number of commits for a year.
Calculate the total commits.
Write the list of commits to a file.
Log timing information.
Log a histogram statistic.
Roll up metrics and histograms.
Returns the enum value for the given database value.
Convert the given value to a python value.
Prepare value for serialization.
Resolve a path to a set of objects.
Projects a list of Usls into a dictionary of singular sequences.
Returns the mean value of the histogram.
Increments counter by value.
Returns the mean rate.
Mark a value as derived from previous value.
Serialize and send a metric.
Return a list of serialized strings for a metric.
Format a metric name value type tuple into a string.
Add a metric to the buffer and send it.
Overrides ConfigParser. get to raise an error if the option is missing or the section is
Safely decode JSON data.
Returns the default value for an option if it doesn t exist.
Returns ledger id to GUID map for given ledger codes
Get all the divisions for the current team.
Map the exact invoice numbers to the corresponding foreign invoice numbers.
Create a view from an Injector.
Create and return a form view.
Introduces a view that handles HTTP methods.
Create a view for the API.
Create a view for a generic API.
Create a model view set.
Create an asyncio stream from a file descriptor.
Read data from the socket.
Close the connection to the device.
Add a request for a file to be watched.
Remove an alias from the watchlist.
Setup a new watch.
Set up the transport and listen for events.
Get the next event from the stream.
Send a touch event to the client.
Updates the interval to the given number of decimals.
Called when a timer fails.
Close the connection to redis and query.
Establish a connection to a nsqd server.
Perform a query to the lookupd server.
Set the maximum number of flights to send.
Handle a warning message.
Adds a callback to the event named name.
Remove listener.
Trigger event named name with args and kwargs.
Publish a message to a topic.
set feature transform mode degree
Returns the prediction for the given input data.
Remove paired fastq files if clear == str.
Read a depth file into a dictionary.
Set template path.
Set the main channel names.
Render a Jinja2 template with the given context.
Render self. template with self. context.
Add a sink to the main forks.
Update this object with a dictionary of attributes.
Set secondary inputs for the channel.
Parse an assembly file into a list of contigs.
Get the percentage content of the sequence.
Returns the total length of the assembly
Writes the contigs to a file.
Write the coverage report to a file.
Remove inner forks from text.
Run insanity checks on a pipeline.
Returns the lane in which the fork source will be run.
Return a list of lanes.
Given a list of points return a list of linear connections.
Add unique identifiers to pipeline str.
Removes unique identifiers from a pipeline.
Check that the required files exist.
Convert header string to dict.
Return the hypergeometric mean of a string.
Return the size coverter of a string.
Reads the log file and extracts pipeline information.
Remove all trace information from the system.
Update the status of the barrier.
Retrieves the contents of the log file at the specified path.
Asses the resources of the system.
Run the parsers until the next iteration.
Display the overview.
Up or down the line in the specified direction.
Move left or right.
Get the last n lines from the log file.
Prepare static info of the pipeline.
Returns a DAG as a dictionary.
Compute the hash of the run.
Get nextflow filepath from log file.
Main function for this module.
Brew innuendo.
List all available recipes.
Validate pipeline string.
Recursively builds the upstream pipeline for the specified task.
Recursively builds the pipeline for the given task.
Build and return the pipeline string.
Return a string representation of the given component.
Writes a report to a file.
Parse and save log files.
Fix contig names in asseembly assembly.
Remove files that match the pattern in fastq
Parse a list of files.
Parses a file for coverage identity and accession.
get contig id from contig string
Writes report data to json file.
Parses the contigs of the specified assembly file.
Summarize the contigs in each contig
Returns a list of tuples each containing the contig ID of each contig and the number
Returns the percentage of characters in s divided by length.
Get the number of gcs in the contigs.
Main function for skesa.
Write a report in JSON format.
Parse the bowtie log file.
Parse process name.
Adds a dependency to the workflow
Searches the tree for a process with the specified template and parent lanes.
Build header.
Build footer.
Set initial process.
Set secondary channels
Set the status channels for all the processes.
get manifest string
Set configurations.
Writes a dag to the output file.
Write the configurations to a file.
Export the current parameters of all the processes.
Exports the directives of all processes in the pool to a JSON file.
Build the NPF file
set kmers based on kmer options
Get a unique id for the current report.
Update the trace watch file.
Update log file size and pipeline status.
Send a live report.
Initialize live reports.
Closes a connection with the server.
convert adatpers from fasta to str
Main function of mash.
Print a message using the specified color.
Collects all processes and collects the results.
Get the range of the qual string.
Filter an assembly file to only include contigs with coverage above the minimum.
Get assembly size and contig count.
Filter assembly and bam files.
Convert name to camel case.
Collects all component classes and returns them as a dictionary.
Reroot a tree and write to newick
Map self. w to data.
Apply the median filter to the data.
Gaussian Kernel Density Estimation
Compute the semi - squared root of x.
Compute the number of non - zero components.
Gaussian filter.
Computes the number of non - intersecting features.
Circular shift a vector x.
embeds a space into num subspaces.
Plot formatting.
Plots the boundaries for the specified algos.
Plots the labels for the given GT times.
Return a list of features in the order of bound idxs
Computes the 2D multi - dimensional discrete Fourier Transform from a list of
Fit scatter scatter and partial fit.
Read references from an audio file.
Find an estimation based on the parameters.
Get all boundary algorithms.
Get the configuration for the MSM file.
Get a list of file structs for all audio files in a directory.
Read hier references from jams file.
Returns duration in seconds.
Write a mirex time series to a file.
Get dataset file.
Align the beat times with the song.
Estimate the times and frames of the audio.
Returns the times and frames of the instrument.
Compute the beat sync features.
Returns a list of parameter names.
Compute framesync times.
Returns the times when the feature is played or None if not played.
Returns a list of feature dictionaries.
Preprocess feature string.
Post - synchronize labels and index arrays.
Main entry point for the script.
print the mean of the results
Compute the information gain.
Process a track file struct.
Get the name of the results file.
Compute all features for the given audio file struct.
Compute all the features in the dataset
Gaussian cost function.
Log - normalize a floating point number.
normalize a DataFrame to have min and max values
Return an array of time frames for dur over anal.
Remove empty segments.
Sonify audio by clicks.
Synchronize labels.
Process segmentation level.
Align two hierarchies.
Distance to a given index.
Estimate k knee.
Returns the data corresponding to the given index.
Compute k - means and k - labels for input x.
Computes the BIC for the given hyperparameters.
Returns the magnitude of x.
Convert a JSON file to a numpy array.
Load a bounds array from a json file
Convert a JSON file to a numpy array of labels.
Read beats. json file and return beats as numpy array
Compute the 2D discrete Fourier transformed version of x.
Compute the labels for the given data.
Compute the filter activation matrix.
Get boundary module by id.
Get labels module by id.
Run hierarchical segmentation.
Run a flat segmenter.
Entry point for the translation script.
Runs the given translator on every worker in the parallelism.
Spools text from an iterable into chunks.
Read from inputstream and write to target.
Returns a dictionary of translation codes for the specified language.
Print the translation table.
Remove nodes and edges from a network.
Export network to a pandas hdf5 file.
Read a network from a pandas hdf5 file.
Process a node element.
Make a query to the OSM server
Build a query string for a node.
Return True if the value is a valid regular expression.
Compares the specified value with the specified expectation.
Compare the expression with the given value.
trigger methods on instance
Get matcher by name.
Initialize a matcher by name.
Set the request body.
Set the response body as JSON.
Set a value in the container.
Append a list of functions or methods to a list.
Trigger all request methods on an instance.
Set headers for the current request.
Add a header to the suite.
Add headers that match the given string.
Set the params for the current request.
Set the body of the request.
Set request json.
Set XML request body.
Writes the content of the specified file to the response body
Set persist status.
Set the error message.
Reply to the mock.
Match a request.
Set the mock engine.
Create a mock object and add it to this engine.
remove mock from self. mocks
Activate the mock engine.
Disable the mock.
Check if the request should use the network filter.
Match a request.
Return a copy of this request.
Context manager that activates or deactivates an existing engine within the context.
Add interceptors to the chain.
Remove interceptor by name.
Get a setting from the Django settings.
Return decrypted column sql and parameters.
Sets the original value of the model instance before it is saved.
Get a placeholder for the value.
Get the decrypted value of a column.
Encrypt and return a placeholder string.
Performs a base regression on the given basis.
Inverse covariance matrix
Recurse into all branches of the tree.
Calculates the averages of all branches in the tree.
Return the variance explained by the tips.
Performs a binary regression on the tree.
Set merger rate.
Calculate branch count.
Cost function.
Attach clades to tree.
Normalize a profile.
Validate and set the GTR.
Set ground truth model.
Set sequence length.
Attach sequences to all the terminals in the tree.
Prepares the tree for parsing.
Prepare nodes for parsing.
Calculate the mutation length for each clades in the tree.
Return the branch mutation matrix for a single node.
Returns the expanded sequence of the node.
Return the state of a leaf at position pos.
Returns the ancestral sequence of the ancestral tree starting at pos.
Compute the ancestral likelihood of the tree.
Compute the branch length of the given node.
Compute the optimal branch length for the given node.
Returns a multiple seq alignment of the tree.
Q matrix.
Create a GMT with custom rates.
Solve QR problem.
Return the optimal transition time for the given sequence.
Probability of a profile at time t.
Evolve the given profile at time t.
Return the log - likelihood of a sequence.
Set branch length mode.
Plot the root node of the tree regression.
Print the sequence marginalized or unconstrained positional and coalescent.
Add a coalescent model to the tree.
Find the best reroot for this tree.
Assure the tree of the given AST.
Create a GTR instance.
Read alignments from VCF.
Calculate the fwhm of a distribution.
Discrete delta function.
Assign dates to terminals.
Setup tree regression.
Make time tree.
Returns the likelihood of the time - tree.
Convert dates to ISO 8601.
Estimate date uncertainty due to rate variation.
Returns the minimum value of x.
median interpolation of a grid
Returns the number of days since the given date. If no date is given returns the current date
Create a new Detection object from a regression model.
Close the connection to the AMQP server.
Receive a line from the socket.
Send data to the socket.
Send an instruction to the slave.
UTF - 8 encode a unicode string.
Load an instance from an instruction string.
Encode a single argument.
Return a string representation of the instruction.
Returns the URL for the given class.
Return the URL for this instance.
Returns the url for the given class
Downloads a file from the server.
Get the parent object of the current job.
Prompt user for credentials.
Login to solvebio.
Return the username of the currently authenticated user.
Print user information.
Return a new VariantList with only the specified range of genomic genomic genomics
Return a genomic locus with the given chromosome and position
Returns facets for the query.
Takes a list of filters and returns a list of dictionaries.
Return next page.
Execute query against the API.
Migrate a dataset to another dataset.
Entry point for the solvebio script.
Construct an instance of this class from the given dict.
Logs out the user.
Get the child object for this task.
Parse snpEff info.
Get netrc authenticators.
Save the configuration to a file.
Format a value as a string.
Build a tty - tty row from a list of cells.
Build a string that represents a line of text.
Return a list of aligned attributes for a mediawiki cell.
Migrate this dataset to another dataset.
Upload a file or folder to a vault.
Validate full path.
Validate api host
Annotate a list of records.
Evaluate the expression.
Set format name.
Register a new formatter.
Adapter for tabular data.
Return full path to user config file.
Return list of system config files.
Returns the list of additional files.
Write the default config file to disk.
Read configuration files.
Truncate a string if it is longer than max width.
Replaces all occurrences of replace in s.
Calls a list of commands and exits the program if one of the command exits.
Apply the specified option to the command line.
Initialize lint options.
Run the tool.
Run the command.
Truncate a list of rows and headers to a maximum length.
Formats a row of data.
Simple adapter that formats data as a formatted table.
Yield rows of data formatted as specified in the table format.
Check if the given type is a number type.
Check if type is bool.
Check if the type is a binary type.
Generate a key for a template.
Generate a RSA key pair.
Find num objects in the kernel.
Insert an image into the QR Code.
Show panel of genomes.
Return the first weekday after weekday.
Repeats the current date for the specified day. If no day is specified then the current day
Repeats the date between start and end day.
This is the biweekly version of fill out biweekly.
Handle a single chunk event.
Export all the variants in the database.
Export the mt variants as a multi - line document.
Update or delete a user.
List Variants for a given case.
Retrieve information about a specific variant.
Retrieve a single variant.
Verifies a variant.
Export clinvar data.
Return cancer variants.
Create a new ACMG for a given variant.
Display an evaluation.
Get ACMG for given criteria.
Upload a panel.
Download a verified excel file.
Given a list of HGNC IDs return a dict of genes by alias.
Add incomplete penetrance genes to genes.
Make a request to the Matchmaker API.
Request a list of mme nodes.
Get the cytoband coordinates for a given chromosome and position.
Get the subcategory for a given variant.
Get the length of a string.
Get the end of the string.
Parse coordinates from a variant.
Update a panel.
Export a panel.
Edit a gene.
Load a delivery report.
Return a list of HPO phenotypes for the query.
List blacklisted packages.
Build a phenotype object from a phenotype ID
Create a gene record for the given id.
Return a list of genes in JSON format.
Display list of institutes.
List transcripts of a build.
Return a list of events sorted by start date.
Search for variants in the database.
Retrieve all Variants for a given institute obj and case obj.
Retrieve information about a variant.
Exports the header of the case.
Get all the predictions from a list of genes.
Find the BAI file for a BAM file.
Get observations for a given variant.
parse a gene and add links to transcripts
Create a string representation of a transcript.
Finds the position of the end of the variant.
Get the most common frequency for a variant.
Convert clinsig objects to human readable strings.
Return link to link to dbsnp.
Return a cosmic link for a variant.
Return a beacon link for the given variant object.
Return a link to a Variant object in the ucsc format.
Returns the human - readable version of the given variant.
Returns the set of models expected to inherit from the given variant.
Return a list of all callers that have a given variant.
Return cancer variants.
Export clinvar data.
Get the clinvar submission for a given submission.
Retrieve ACMG criteria and options for a variant.
Submit an evaluation of a variant.
Take an evaluation obj and convert it into an evaluation obj.
Upload a panel of genes to HGNC.
Export a verified excel file for each institution.
Export all genes in the database.
Parse CLNSig from acc sig and revstat.
Parses a compound info string into a list of dictionaries.
List genes in a build.
Retrieve a case.
List available collections.
institute command.
Returns a file handle for the given path.
Get the network number from the request.
Get the next and previous number for a given network.
Check year.
Check if the weekday is in the range of num.
Parse a list of samples and return a list of individuals.
Parse a PED file.
Build an evaluation object.
Takes a list of amino acid terms and returns the pathogenic pathogenic or
Find variants for a case.
Return all sanger variants in the database.
Retrieve a single variant for a given document.
Returns a collection of gene variants
Returns a list of variants and cases verified for the institute id.
Return all causatives associated with an institution.
Check if there are causative variants in the database.
Return all other causatives that are in the same case as the given variant.
Delete variants for a case.
Find all variants that overlap the given variant object.
Returns a list of all variants that have been evaluated.
Find variants for a given sample.
Get a MongoDB connection.
Get objects from a variant form.
Returns the header for a clinvar submission.
Returns a list of lines for a clinvar submission file.
Load a panel.
Build an exon object from a dictionary.
Delete a panel.
Drops all indexes for all databases
Delete a user from the database
Drop genes from the database.
Drop exons from a build.
Delete a case.
List all individuals associated with a case.
Retrieve cases associated with an institution.
Load a user from the store.
Login user.
Build an institute object.
delete event by event id
Return a list of events in the database.
Return all events for a specific user.
Remove a phenotype from a case.
Parse the genotypes for a variant.
Check if the given position is within the given coordinates.
Hpo search terms.
Export transcripts.
Show all exons for a given build.
Load a region from the database.
Return all events for a given month.
Return a queryset of strings that are live for the current time.
Parse requirements file.
Return the existing gene with the given id.
Update a panel.
Create a panel.
Export a single panel
Get archive information.
Migrate mongo database to archive.
Show the HPO terms.
Configure extensions.
Register blueprints.
List aliases of genes or genes.
Build a panel object from a dictionary.
Return the number of verified variants for a given institute.
List variants in a case.
Get a vcf entry from a variant object.
Run the mongo server.
Generate an MD5 key from a list of arguments.
Initialize the database connection from the app configuration.
Set up the database instance.
Index databases.
Initialize Scout database.
Demonstration of Scout
Set up the database connection.
List institutes.
Parse the genetic models for a specific case.
List panels for a given institute.
Add institute.
Returns institute object for given id.
Match a date string to a regular expression.
Get datetime object from date string.
List HPO genes.
Parse the rank score for a case.
Create a new user in the database.
Connect to mongo and check connectivity.
Load a delivery report
Add a user to the database.
Pileup template.
Load exons into the database.
Update compounds for a case.
Add the links to the ensembl IDs in the specified gene.
Show HGNC information.
Parse the lines of HGNC file.
Get the latest clinvar submission for the given user id and institute id.
Update a clinvar submission by id
get clinvar id
Add one or more submission objects to a submission.
Update the status of a submission.
Get all clinvar submissions for a given user id and institute id.
Delete a clinvar object.
Returns a dictionary of clinvar objects for the given case id.
Parse hpo lines into a list of terms.
List genes.
Gene Genes of HGNC.
Genes of the current user.
Get institute and case objects.
Returns a list of institutes for the specified user.
Get HGNC ID.
Create or update a panel.
Show disease terms.
Load disease terms into the database.
Parses the frequency value for the given variant.
Parse variant frequencies.
List users.
Compares two mim panels.
Update the mim version of a panel.
Add a panel.
Get panel object by id.
delete a panel from the db
Return the panel with the given id.
Returns the panel with the given id.
Convert a case object to a dictionary of HGNC panels.
Update a panel document
Add pending action for panel obj.
Return a list of all clinical symbols for this case.
List cases associated with a project.
Sends a record to the configured smtp server.
Loads indexes for all collections in the database.
Update indexes for all collections in the database
Drops indexes from all collections in the database.
Build a variant query.
Return the query for the clinsig database.
Filter the query to keep only the chromosomes
Filter gene query.
Deletes a database.
Parse the panel file.
Load a batch of genes into HGNC.
Load a transcript in bulk.
Load a list of exon objects into the database.
Return a single HGNC Gene object.
Get the HGNC ID associated with symbol.
Return the genes associated with the given HGNC symbol.
Return a list of all genes in the specified build.
Returns the number of genes in the specified build.
Drop genes from the database.
Drop all transcripts in the database.
Drop all exons from the database.
Returns a dictionary of ensembl ID - > transcript object
Get the HGNC symbol for a given build.
Find a gene by its alias.
Return a dict of genes by alias.
Returns a dict of all genes in the ensembl database
Return the HGNC name for the given HGNC alias.
Add HGNC IDs to a list of genes.
Get the coding intervals for the given genes.
Load the omim panel.
Retrieve cases associated with a given institute.
Institute and Case data.
Matchmaker endpoint.
Match a case.
Delete a matchmaker.
Render a pdf of the coverage report.
Diagnosis page.
Update or archive a case.
Assign a case to a institute.
Return a list of HPO terms sorted by name.
Mark validation for a variant.
Mark a causative institution or uncausative case.
Post a delivery report.
Share an institute with a case.
Rerun an institute.
Open research page.
Send a VCF to the Cytosure controller.
Perform a multiqc search.
Returns a dict of lists of cases grouped by status.
Retrieve the list of clinvar submissions for a given user and institute.
Writes mt excel files for all samples in the case object.
Query phenomizer for diseases with hpo ids.
Retrieve a cytosure for a given vcf id.
Perform a multiqc query.
Return a list of all sangers that have not been evaluated.
Delete a case using the MME API.
Return matchmaker data for a given MME case object.
Match a case to a mme server
Retrieve the genes of a build.
Parse the callers information from a variant.
Build a hgnc transcript object from a dictionary
Load an institute from the database.
Parse cadd value from variant. info and transcripts.
Run a case adapter.
Update a Variant.
Update variant rank for a case.
Update a variant compound.
Update compounds for variants.
Update multiple compound variants.
Load a variant from the database.
Insert or update a variant.
Load a number of variants into the database.
Assign a user to a case.
Share a case with a collaborator id
Create a case event for the given omim id.
Mark a case as checked.
Verify the order of a variant.
Return sanger ordered by institute id or user id.
Validate a variant
Mark a case as causative.
Dismiss a variant
Update the acmg for a given variant.
Parse variant IDs.
Parse a simple ID.
Generate md5 key for a document.
Convert panel to HGNC format.
Get a variant ID from a variant object.
Returns the number of cases in the database.
Update the dynamic gene list for a case.
Returns case object by case id institute id or display name.
Delete a case.
Add a case to the case collection.
Replace an object in the case collection.
Update the family id for a case.
Submit an evaluation for a given variant.
Get all evaluations for a variant.
Parse transcript request or ensembl transcripts
Parse ensembl request.
Parse ensembl transcript request.
Parse ensembl genes.
Parse ensembl exons.
Parse ensembl exon request.
Initialize the logging system.
Returns a dictionary of phenotypes for each mim number.
Retrieve morbid genes and phenotypes from a morbid database.
Convert string to int or float.
Return a calendar formatted string for the given month.
Format the day of the week.
Format a month name.
helper function for popover
Get panel info.
Parse a single gene panel.
Show the number of diseases.
Drop HPO terms from the database.
Return a dictionary of users and their events.
Parse conservations from variant.
Parse conservation scores for a variant.
Retrieve the general case information.
Return a list of cases grouped by status.
Render the context to a json response.
get year and month from request
Check if any events have been cancelled for a given date.
Returns the term for the given hpo id
Returns a list of the number of results matching the query.
Returns the disease term for the given disease identifier.
Returns the disease terms for the given HGNC ID.
Load a disease term from the database.
Generate a list of HGNC IDs for each HPO term.
Read a hdf5 file.
Setup the time axis.
Compute lst.
Calculate the median DC signal.
Calculate extent.
Plot waterfall.
Plot time series.
Write the filterbank to a file
Calibrate the data using the median pass.
Convert data to coarse format.
Fractional polarization of a string.
write polfils data to file
Find the index of the closest value to a given value.
Rebin a dataset to a specified number of dimensions.
Unpack the given data with the given nbit.
Get the difference between the input dio cross and the target.
Plot a calibrated diode.
Calculate the selection size.
Calculate the shape of the selection.
Sets up the frequencies
Populate the timestamps attribute.
Calculate the number of coarse channels.
Calculate the number of blobs for the given dimensionality.
Return True if the current selection is heavy.
Read all data from the file.
Read a single row of data.
Read data from file and store it in self. data
Update the header with the current values.
Print information about the file.
Write the container to a. fil file.
Writes the container to an hdf5 file
Write the light to an HDF5 light file.
Get blob dimensions.
Get chunk dimensions.
Grab data.
Command line tool for guppi.
Read the first header dict.
Find the number of data blocks in the file
Print stats.
Plot a histogram.
Generate filterbank header.
Find the size of the header of a round in a file.
Integrate through the calibrator.
Calculate the center frequencies.
Integrate calibrators to compute f ratios.
Estimate flux from diode spectrogram
Returns the length of the header of the given file.
Return True if the file is a filterbank.
Generate a sigproc keyword string for the header of a file.
Calculate the number of ints in a file.
Return the traceback as a dict.
Creates a subparser for the specified record type.
Create the zonefile parser
Remove comments from a string.
Add a default record name to a string.
Parse text lines into JSON zone data.
Parse zone file.
Quote a field in a data dictionary.
Parse schema string.
Builds a python package from a list of classes.
Convert the given record to a JSON compatible dictionary.
Load a JSON dict into a record.
Load JSON data from a string.
Add a record to the schema.
Get the schema for the given record name.
Representation of this column as a dict.
Generate schema dict for given record.
Get the root schema dict for the given record.
Malformed Markdown reader.
Write multiple outputs to a stream.
Return an ordered dict with the given key and value inserted at the front of the dict.
Get the query string for this resource.
Perform a raw filter on the resource
Returns a list of Entity instances for all resources with the specified attributes.
Get entity by href.
Give another quote.
Escape a string for use as a filter.
Returns the rotation matrix for the given axis and angle.
returns the vrad error for a given sky location
Calculate the parallax error.
Magnitude error of g.
Equation for the magnitude error.
Returns the average number of transits in beta.
Returns the angular distance between two points.
Transform cartesian coordinates using the rotation matrix.
Transform sky coordinates.
Transforms the covariance matrix into a Jacobian.
Return the astrometric error scaling factor for observable.
Unquote the given value if necessary.
Apply a function to each item of the collection.
Exclude items from the collection that pass a truth test.
Return a new collection containing only the items that pass a truth test.
Take items from this collection while a condition is met.
Return a new collection with elements dropped while the truth value of func is True.
Zip the elements of this collection with the others.
Find a node that matches the given arguments.
Return the path to the serach executable.
Build a minimal set of runs.
Print the results to the output file.
Output the results to a file.
Cleans up a string of code and returns the cleaned code.
Round to next base
Given a list of indices and a block size returns a list of blocking indices.
Calculate cache access.
Run the analysis.
Strip comments from the beginning and end of the assembler file.
Remove unreferenced labels from the assembler AST.
Selects the block with the largest number of characters.
Prompt user for increment.
Insert markers at the specified positions.
Generate num - sized space between start and stop.
Get the most recently modified datetime of a file or directory.
Checks if the arguments passed to the function are valid.
Entry point for the script.
Main entry point for the pickle script.
Generate a symbol of a given integer.
Transform a multidim declaration to a 1d declaration.
Transform multidim to 1d ref.
Finds all nodes of the given type in the AST.
Check that the number of datatypes is correct.
Set the value of a constant.
Substitute constants in expr with those in self. constants
Get the sizes of the data as a dictionary.
Calculate the relative offset for a variable.
Remove duplicate accesses.
Compute the length of the loop.
Iterate over the loop stack.
Returns a list of free SymPy symbols in the same order as the source SymPy
Returns a dictionary mapping variable names to a list of sympy accesses.
Computes the relative distances between each variable and all its accesses.
Return a dictionary of loop variable names mapped to their indices.
Returns the global iterator for this loop.
Convert indices to global iterator.
Returns the maximal global iteration.
Print information about the kernel.
Print the variables information.
Print the constants in a table.
Print kernel code to output file.
Convert math ast to symbol.
Get the offsets for the given array reference.
Returns the base name of the referenced object.
Get the index of the type of the loop.
Build declartions for all constants.
Get array declarations.
Get kernel loop nest.
Return a list of declarations and a dictionary of array declarations.
Find inner most loop.
Build initializations for multidimensional array.
Build a dummy statement for the kernel.
Build a kernel function declaration.
Builds a list of scalar declarations.
Get the kernel code.
build kernel call
Get the main code of the program.
Perform the IACA code analysis on the kernel.
Return a unique identifier for the file.
Get the last modified datetime of the file.
Returns the name of the compiler to use.
Parse a perfctr string into an event tuple.
Enforces no overlap with the given range.
Returns the absolute path to the header file.
Align current iteration with the cl boundary.
Returns a list of loads.
Returns a list of hits.
Get the number of misses for each cache level.
Returns a list of stores.
Returns the number of evicts.
Returns a dictionary of information about the machine.
Temporarily fix an environment variable.
Configures the argument group for the script.
Parses the description from a text file.
Builds the item to be placed in the basket.
Record a purchase via sailthru.
Get course content from ecommerce.
Get course content from ecommerce api
Update the unenrolled list for a course.
Send a course refund email.
Send an offer assignment notification email.
Retry an order.
Fulfill an order.
Get a sailthru client based on site code.
Returns the value for the given key or None if the key does not exist.
Set the value for the given key to the given value.
Get a configuration variable from the environment.
Get overrides filename.
Get a value from a dictionary by version.
E + version.
Add records to the database from a JSON object.
Returns a list of external file paths.
Set the default values for all tables in the database.
Prepare extensible fields.
Returns a list of short refs for all the external files in the directory.
Get a value from a column based on a filter criterion.
Update the value at the given index.
Update the environment with new data.
Add one or more fields.
Remove and return the field serialized value at the specified index.
Insert value into field at index.
Remove this record from the database.
Register hook to record.
Register a new link.
Create a regex for the given intent.
Returns the number of seconds until this interval ends.
Returns a serializable str representation of the object.
Perform an HTTP request using pycurl.
Get all the endpoints for a given type of service.
Try to create a directory if it doesn t exist.
configure a service
Request CA certificate.
Recording state via HTTP.
Update event status
Update service status and register ca.
Return the path to the configuration file.
Update the configuration with the contents of the specified file.
Check if config file exists and print it if so.
Initialize the logger.
Homepage page.
Serve an image.
Run all the given modules in parallel.
Parse an iCalendar string into a list of events.
Get the schedule from iCal
Main control loop.
Main control loop.
Make an error response.
Make a response with the given data.
Get the service internal state.
Get upcoming and recorded events
Get event by ID
Delete event.
Modify event.
Start capturing an event.
Render the fragment.
Returns a list of resource names.
Return a dict representation of the object.
Create fragment from dict.
Add content to the email
Initialize the library with a javascript function and a JSON API version.
Returns a HTML representation of the resources in this group.
Convert a Resource object to HTML.
Handles GET requests.
Render this view to a standalone response.
Render a fragment to a standalone HTML page.
Calculate p - values and q - values.
Coerce values to one dim array.
Find nearest matches to the cutoff in the error table.
Sample a dataframe with cutoffs randomly sampled.
Summarize the error table of a DataFrame.
Compute error statistics.
Find cutoff.
Run peptidoforms on an input file.
Runs peptide inference on the input file.
Run protein - based inference on the input file.
Subsample a file to a new file.
Reduce a file.
Backpropagate an input file to a new output file.
Get group by id.
Create a group.
Delete group.
Get group members.
Update group members.
Get the effective member count for a group.
Check if a user is a member of a group.
Decrypt an encrypted string.
Get the stdin object.
Get the output of the command.
Get stderr for this command.
Returns the output of the debug command.
Return a context manager for the subprocess stdin.
Context manager for controlling the stdout of the process.
Return a context manager for reading stderr from self. stderr.
Context manager for controlling debug output.
Write error message to file.
Print the help for this option.
Print the usage message.
Print version information.
Resolves the value of the specified option in the specified section.
Returns a copy of the cli context
Write headers to file.
Generate a temporary URL.
Quote a value for inclusion in a URL.
Get a client from the pool.
Decrypt encrypted data using AEAD cipher.
Put an account.
Put a container.
Return the manifest body.
Create a new container.
Print a translation message.
Check if the stream is empty.
Encrypt data.
Get the status of a github repository.
Get a single pull request.
Get pull requests.
Set the published property of all titles to bool.
Return a list of the slider items published for the given request.
slider template tag.
Acquire the reader lock.
Releases the number of readers.
Acquire lock and release lock.
Remove a task from the container.
Get task by id.
List of all tasks in the container.
Return the configuration as a dictionary.
Create an instance of this class from a dictionary.
Initialize archive manager.
Create a new index.
JSON encoder for WSGI applications
Generate and write items to writer.
Add a task to the workflow.
Remove a task from the scheduler.
Yields all the items in the database.
Validate task id backend category and backend args.
Parse args and return archiving task config.
Perform a job and return the result.
Schedule a job for a specific task.
Cancels the given task id.
Run the listener thread.
Listen for pubsub messages.
Schedule listener to listen for events.
Schedules a task for execution.
Cancel the task with the given id.
Build a dictionary of job arguments for the given task.
Register the view in the router.
Overrides the default reverse action method to handle versioning of the request.
Get the name of the view.
Returns the version string for the specified version number.
Resolve a key from the given cursor.
Resolve the engine for the given scheme.
Parse database and schema from path.
Parse a database URL.
Create a new login.
List the users.
Create a new password.
Build url field.
Parse a boolean value.
Parse a value into an integer.
Get parser by type.
Create a dictionary from a model.
Base64 encode a string.
Create field object from field info.
Create a validator class from a dictionary.
Finds unique points in a list of parameter tuples.
Change logging kwargs.
Try to make a directory and its parents if they do not exist.
Get a list of strings from the AST.
Set the logger for this instance.
Extracts replacements from the given trajectory.
Check if there are any filenames in the args and replace them.
Convert a parser to a string io.
Find multiproc options in a parser.
Return a dictionary where all keys starting with str are replaced with str.
Parse the config file and return a parser.
Recursively rename log files and return a new dict.
Add logging handlers and tools.
finalize all the tools and plugins
Start redirection logging to stdout.
Writes the given buffer to stderr.
Deep comparison of two results objects.
Compare two parameters for equality.
Class decorator that adds prefix naming to the decorated class.
Add parameters to a binary quadratic model.
Run brian2 monitor.
Euler scheme.
Add parameters to a troposphere object.
Modified Lorenz - Rao product.
Create a storage instance.
Factory for creating storage objects.
Add parameters to a traj object.
Reshape an array to a different value using the roessler algorithm.
Determine if the traj object is explored in the group node.
Build equations for model and synaptic variables.
Run pre build if required.
Build the model.
Build the model for the given trajectory.
Build pre - built BEL network.
Build BEL network.
Add brian2 parameter annotations to an ANTs object.
Compute the fano factor for a particular neuron.
Compute the fano factor for each neuron.
Run the analysis.
Add spikes vs and i syn e monitors to the network.
Create a folder for the analysis.
Plot the result of a celiac neuron.
Print the graphs for the analysis of the given trajectory.
Run brian2 analyse.
Get the batch number
Run the exploration pipeline for a batch of examples.
Variables of the domain.
Returns the function associated with the constant.
Renames the variable to a new name.
Set the branch and depth of the branch.
Convert a PyPi node to a PyPi message.
Delete a node from the tree.
Remove a node or leaf from the tree.
Translate shortcut.
Determine the type and link for the given start node.
Create a link.
Checks the names for admissible names.
Set details of a node.
Iterate over the nodes of the tree.
Make a child iterator for the given node.
Breadth first search.
Search for a key in a node.
Backwards search for a name.
The list of children of this node.
Add a group from storage.
Add a leaf from storage.
Depth - first list of loaded skeletons.
Returns a debug representation of the tree.
Get the parent of the node.
Remove link.
Remove the function from the graph.
Get the value of a field or return default.
return the children of the node
return groups as list
Returns the leaves of the subtree.
return links as a string
Store a trajectory.
Add a result group to the model.
Add derived parameter group to the model.
Add a derived parameter to the model
Add a config group to the model.
Add a configuration group to the model.
Add git commit variables to a traj object
Make a git commit.
Flattens a nested dictionary.
Nest a dictionary into a nested dictionary.
Get the argspec of a function.
Given a function and a dict of kwargs return the kwargs that match.
Format time.
Convert port to TCP.
Recursively create a directory and its parents as needed.
Resets the interval for the next iteration.
Get the remaining time remaining for the given index.
return self. dict as dict
Remove an attribute from the dict.
Return a string representation of the dictionary.
Request a key from the cache and return the result.
Make a result that is shared with other data.
Store the request data in the repository.
Get node data.
Returns whether or not the given item supports sharing.
Create shared data.
manipulate multiproc safe
Locks a client for a given request.
send a done message
Finalize the context.
start zmq socket
Perform a request retrying up to self. retries times.
Acquire the lock.
Listen for requests.
Put data into queue. Block until room available.
Fork a new process.
Handle data messages.
Run the main loop.
Receive data from the queue.
Read data from connection.
Store an object in the local repository.
Store a message for a specific trajectory.
Store a set of reference data.
Collect all options and values for a section.
Collect the configuration from the config file.
Interpret the arguments.
Add the parameters to the given traj object.
Plot pattern.
Return a cellular automaton for the given rule number and steps.
Updates the display with the current time.
Get overview group.
Load multiple items from an iterable.
Check Srvc properties.
Store multiple items in srvc.
Close the hdf5 file and store if necessary.
extract file information from kwargs
backup trajectory from hdf5 file
Read a row into a dictionary.
Prepare run table for traj run and explored parameters.
Check version against python version.
Load exploration parameters into the given traj object.
Stores the explorations of the given trajectories
Store a single trajectory.
Create a new leaf instance.
Depth - first search of the hdf5 tree.
Store a parameter or result table entry.
Get or create a table from a where node.
Get all nodes with the given name.
insert dict into row
Cut string to max length.
Create a new hdf5 group or get a child hdf5 group.
Create or get all the groups for a given key.
Store annotations on the given node.
Load annotations.
Store a group for a given traj.
Group the given trajectories
Load skeletons and annotations.
Extract missing flags from dictionary.
prm meta add summary
Add parameter and explored attributes to group.
Writes data into shared memory or shared memory group.
Write a shared table to the HDF5file.
Write dict into pytable.
Write data to HDF5 file.
Write data into other array.
Write an array to the HDF5 file.
Delete a link from the trajectory
Returns a pytables col object for the given column
Get the length of the longest string in a list.
Read a dictionary from the repository.
Read shared data.
Read an SVRC file and recall the results.
Create a trajectory object and load it.
Returns the name for the set with the given index.
f set properties.
f add to dynamic imports
Add a parameter to the configuration
Returns True if the run is completed False otherwise.
Remove exploration of stored parameters
Update the run information dictionary with the given run information dict.
Add information about a single run.
Locks all parameters.
Lock all derived parameters.
Finalize the run by setting the crun attribute and setting the crun attribute.
Load the skeleton of the run.
Make the wildcards in reverse order.
Merge many trajectories into one skeleton.
Merge single runs from other trajectory into this one.
Renames a name in the given trajectory.
Merge configurations from other trajectory into this one.
Merge a trajectory into this one.
Merge results from other trajectory into this one.
Restores the initial configuration of the run.
Set all explored parameters to the given index.
Set the graph as a single run.
Returns a list of run names.
Start a single run.
Set the start time of the run.
Set the run to finish.
Constructs an instance of the specified class using the specified constructor.
Return a dictionary representation of the param dict.
finalize the run by removing the old links and nodes
Delete all the links in the trajectory.
Recursively remove all nodes under this node.
Runs the pool single - threaded.
Runs a pool of processes one at a time.
configure pool single run configuration
Freeze a pool configuration.
Runs a single script and waits for it to finish.
Runs a single scoop.
Configure logging.
Configure process niceness.
Runs a single python script with sigint handling.
Wraps the logging handler in a thread.
Load a class from a full class string
Create a new class from the given name.
Return length of range.
Get the value of the field and return it as a string.
Get explored range.
Returns a dictionary of the current state of the fft.
Load parameter from dictionary.
Load parameter from dictionary.
Check if two values are equal.
\ Returns if the provided data is a supported spmatrix.
Build a tuple of parameter names.
Reconstruct a sparse matrix from a list of data.
Loads parameter from dictionary.
Return a dictionary that represents the current state of the object.
Loads parameter from dictionary.
translate a key to a string
Returns a string representation of the value.
Convert to dict.
Set a single variable in the configuration
Returns whether the sparse parameter supports the given item.
Stores the result in a dictionary.
Reconstructs the parameter matrix from a dictionary.
f set single attribute.
Return the pickled version of the result as a dictionary.
Load data from a dictionary.
Merge all files in current working directory.
Create a new session.
Merge multiple trajectories into one.
Start all the jobs.
Multiply a Jacobian.
Run a neuron simulation.
Postprocula los datos del proceso de la clave.
Add parameters to a troaj object
add exploration to the given trajectory
Extract subruns from a given traj object.
Runs a network run on the given trajectory.
Add parameters to trajectories
Runs the network of the given trajectories
Generate a filename for the given traj object.
Return the next string from the chain.
Handle the sigint event.
Read configuration from file.
Request pin from API.
Requests OAuth 2. 0 access and refresh tokens.
Refresh access and refresh tokens.
Get thermostats for the authenticated user.
Write the tokens to the config file.
Set the hvac mode for a given index.
Set the fan min on time
Set the climate for a given index.
Delete a vacation.
Resume the program at the given index.
Send a message to the specified index.
Generate a random delay.
Return the number of seconds until the lease expires.
Generate renewing time.
Dictionary with only the fsm attributes
Reset the state of the DHCPcap object.
Return the timeout function associated with the given state and function.
Set the timeout for the given function in the given state.
Select an offer.
Send a request to the server.
Set timers for current state.
Check packet for NAK.
Initialize the timeout.
Timeout for selecting new offers.
Timeout for requesting.
Timeout the current request.
Attempt to re - bind if needed.
Process offer packet.
Process incoming ACK packet.
Process incoming NAK packet.
Process received ack renewing it if needed.
Called when a NAK packet is received.
re - bind if needed
Called when a NAK packet is rebinding.
Renew the lease on the client.
Set the value of a field.
Return a new S instance with name and value added.
Return a new S instance with the specified name and value removed.
Get the status of the supervisor process.
read tdms file and return names and data
convert tdms file to fcs file
Returns True if the working directory is equal to the working directory.
Create a new Quilt patch.
Delete the next series from the queue.
Remove a patch from the database.
Check if the file exists in the patch.
Backup a file in the current working directory.
Add a file to the database.
Run the quilt program.
Create directory if needed.
Copies this directory to the given destination.
Link to the given file.
Copies the file to the destination.
Returns the directory of the file.
Backup a file in a directory.
Unapply a patch.
Apply a patch to the series.
Apply the next patch.
Apply all patches in series.
Read the series file
Save the series to a file.
Add a patch to the editor.
Insert a list of patches into the editor.
Add patches after a specific line.
Remove a patch from the file.
Returns a list of patches after patch.
Returns a list of patches before the given patch.
Returns a list of patches until a given patch is reached.
Replace an existing patch with a new patch.
Create the version file.
Check version of database.
Add the argument group to the parser.
Adds this argument to the given parser.
Adds the sub - commands to the parser.
set the subparsers args and kwargs
Add this parser s subparsers to the given parser.
Check if the file exists in the patch.
Add a new patch to the database and check for errors.
Apply a patch to a file.
Import a Quilt patch into the repository.
Copy patches to the quilt patches directory.
Add a way to the graph.
Iterator over node ids that are not present in the graph.
add a node to the graph
Build a route object from a relation object.
Create a route long name.
Return the agency id for the given relation.
Process the graph.
Add a relation to the document.
Yield agency objects with agency - num agency url name and timezone.
Create a sequence of stoptimes for a trip.
Writes the contents of the archive to a zipped file.
Write unzipped tar archive to destination.
Build an agency for the given relation.
Extract stops from relation.
Yields shape tuples for the given relation.
Returns a list of supported versions of the device.
Send an apdu to the device.
Attempt to authenticate the given devices.
Register application with the device.
Authenticate using the given device and facet.
Register a device with u2f.
Convert unicode object to str
Wrap a class with flawless. client. client. wrap functions.
Returns True if the filepath matches one of the only blame patterns.
Return the canonical email address for the given email.
Get the entry for the given entry in the entry tree.
convert markdown to re
Fork a new process and serve it.
Convert a URL to a PIL Image.
Convert a string to an image object.
Check that the image is big enough.
Check that the image has the given width.
Check that image has the given height.
Returns the category object for the given item and field.
Parse the value of a field as an integer.
Yields all the items in the document.
Store error message in self. errors.
Parses the config file
Parse an item into a dictionary.
Get an instance of the model based on the data.
Save the instance.
Download file from url to dest.
Open source file and set loaded flag
Returns a generator for the items in the CSV file
Enable or disable network access.
Add one or more files to the working directory.
Add a file to the sandbox working directory and rename it.
Get all course enrollments.
Returns a list of course enrollments for the given course id.
Get all enrollments for a section.
Get all enrollments for a section by sis id.
Get all user enrollments for a given regid.
Enroll a user in a course.
Get all the roles in an account.
Returns a list of roles for the given sis id.
Returns a list of effective course roles in an account
Get a single role by id.
Get role by sis id.
Get a course by id.
Get a course by sis id.
Get a list of courses in an account.
Returns a list of courses in an account.
Returns a list of courses published in an account.
Returns a list of published courses for the given sis id.
Returns a list of course objects for the regid.
Create a new course.
Update sis id for a given course.
Get activity by account id and term id.
Returns a list of grades for the given account and term.
Get the statistics for a given account and term.
Get activity by sis id.
Returns a list of assignments for the given sis.
Retrieve student summaries by sis id.
Get student activity for a given sis user id and course id.
Get student messaging for a given sis id and course id.
Get all external tools in an account.
Get external tools in course.
Create external tool.
Update an external tool.
Delete an external tool.
Check that the given object has all the required parameters.
Get user by id.
Get all users for a course.
Get list of users for a given sis course id.
Create user and return user object.
Get a user s logins.
Update user login.
Returns the next page in the response.
Get resource by url.
Get a resource from the API with pagination support.
Get a resource from the API.
PUT a resource to the specified url.
POST a new resource
Send DELETE request to Datadog API.
Returns a list of admin objects for the given account id.
Create a new admin.
Create an admin by user id and role.
Remove an admin from a user.
Remove an admin from a user.
Create a new grading standard for a course.
Get a section by id.
Get a section by sis id.
Returns a list of sections in a course.
Returns a list of sections in a course by sis id.
Returns a list of the sections with students in the given course.
Returns a list of sections with students in the given course id.
Create a new section.
Update a section.
Returns a list of quizzes for the given course.
Get account by id.
Returns a list of sub accounts for the given account id.
Update an account.
Update sis id of a canvas account.
Get auth settings for the given account id
Update auth settings for the given account
get term by sis id
Import a CSV file.
Import a directory of SIS files.
Get current status of SIS import.
Build the zip file.
Returns a list of assignments for the given course id.
Update an assignment.
Get all available reports for an account.
Returns a list of reports for the given account id and report type.
Create a new report.
Creates a course provisioning report.
Create a course sis export report
Creates a new unused courses report.
Get report data.
Get the status of a report.
Delete a report.
Move detections from one image to another.
Flip detections horizontally.
Get a dictionary representation of obj.
Get config from settings.
Get empty value.
Create metrics for the given metric configurations.
Set up logging for this instance.
Configure the registry.
Create and register metrics.
Get the metric with the given name.
Default handler for home command.
Handle metrics request.
Perform a WAN query and return the result.
Moved to http so that it works in Python 2. 7.
Make a web call to the API.
Return information about the problem.
List of all pods that have either primary or title == str
Encode data as JSON and return the new request.
Make a GET request to the API.
DELETE the specified URL.
PUT request.
POST request.
Group sentences into groups of length nb.
Disambiguates a PDF file.
Disambiguates a query.
Segment text.
Get the translation of the given text.
Get a specific concept by ID.
Fits the model to the given data.
Predicts classes for the given features.
Fits the model and predicts the class labels.
Predict class labels for a set of features.
Transform a numpy array of feature tuples into a new feature tuple.
Returns the score of the model on the given data.
Return a vector representation of the given members.
Vectorized version of pvector.
Compile and then execute a Python file.
Compile and execute a Python code stream.
Evaluates the given string of code in the given module.
Bootstrap a repl for the given namespace.
Run basilisp in a namespace.
Associate a method with a key in a map.
Add a method to the multifunction.
Return a new map with key removed.
Removes the method with the given key from the multifunction.
Returns True if the given variable is a macro.
Return line and column information for the ith form.
Recursively visit a node and raise an exception if the operation is recur.
Recursively visit a node and assert its recur is tail.
Resolve a bare symbol.
Resolve a symbol.
Parses the given form as an AST.
Suppress warnings for shadowed variables.
Map a sequence of key - value pairs to a list of string representations.
Represent a sequence in lrepr style.
Fallback implementation of lrepr.
Recursively fix missing locations in a node.
Compile and execute Python form.
Compiles the given module using the optimizer and py AST.
Compile the given module.
Compiles the given bytecode into the given module.
Return the longest possible subsequence of the given iterable.
Munge a string with its replacements.
Returns a string representing the fraction of a number.
Get a handler for the given level and format.
Map a dictionary of key - value pairs to a list of strings.
Partition a collection into n - sized chunks.
Reads a namespaced string from the reader.
Read a collection.
Reads a list of strings from the reader.
Reads a vector from the reader.
Reads lines of text from the reader and returns them as a list of lists.
Reads a string from the input source.
Reads a symbol from the reader.
Read a keyword from the reader.
Read the next meta - attribute from the reader.
Reads a quoted list of strings
Expand syntax quoted forms.
Reads a quoted form from the input source.
Reads a dereferencing form.
Reads a character from the reader.
Reads a regular expression from a string and returns it.
Reads the next token from the reader and returns a lisp reader.
Read next consuming comment.
Read the next token from the reader.
Read form form from string s.
Read the contents of a file.
Update line and column.
Decrement the index by num.
Returns the next token from the stream.
Generate a bytecode for the basilisp interpreter.
Returns a list of basilisp code objects.
Imports the cache file from the source code.
Hook the basilisp importer into the sys. meta path.
Searches for a module spec in the specified path.
Execute a cached module.
Compiles and compiles a Python module.
Executes the specified module.
Alias for symbol function.
Complete the given text with the given keyword arguments.
Get or create a cache keyword.
Return the keyword with the given name and namespace.
Chain a list of ast objects into a tuple of ast objects.
Compiles a collection of AST nodes.
Set the location of the py ast to the environment s line and column.
Decorator that adds the location information to the generated Python code.
Decorator that adds the location of the dependencies of the decorated function.
Returns True if the value is a dynamic variable.
Returns True if the given variable is redefinable.
Convert an ast. ast to an ast. expr.
Convert an ast. function into an ast. function that can be used as a decorator.
Convert a do node into an ast.
Generate a fully qualified name from s.
Collects the arguments of a function from a set of parameters.
Convert a single arity function to an AST.
Convert node to py ast.
Convert the body of a loop statement into a python statement.
Generate an invoke node as a py ast.
Convert an ast node to py ast.
Loop recur to py ast.
Convert a recur node into a python AST.
Convert set bang to py ast.
Convert a throw node to a py ast.
Convert a try node into a python try node.
Convert a local node to an AST node.
Find a symbol in a namespace in a namespace.
Convert a variable reference to a Python identifier.
Generate an ast for the given interop node.
Convert a maybe class node to an ast node.
Convert maybe host form to ast.
Converts the given form into an ast.
Convert a list of literals to py ast.
Generate a Python AST from a Python AST.
Iterates over all imported modules.
import ast. module from string.
Find and assign a namespace variable.
Return a set containing the given members.
Returns a set of strings with the given members.
Visit an except handler node.
Return node if it is a constant or none otherwise.
Visit a function node.
Visit a while node.
Visit a try node.
Create a new Python module.
Return the first string representation of an object.
Return the rest of the sequence.
Find the nth element of a collection.
Returns the i - th element of the collection after advancing the iterator.
cons is like llist. l except that if seq is None return o.
Convert an object to a sequence.
Concatenate multiple sequences together.
Associate the given kvs with the key - value pairs in the given map.
Complex conjugate of a collection.
Return the string representation of the object.
Returns True if v1 == v2 False otherwise.
Divide two numbers.
Sort a collection.
Return True if coll contains k.
Get a value from a dictionary.
Convert an object to lisp.
Convert an object to Python code.
Returns a human readable string representation of the given object o.
Collect args into a list.
Basilisp function decorator.
Resolves an alias for a symbol.
Resolve a symbol s alias to a variable name.
Add a generated python string to the current namespace.
Interns a symbol name for the given value under the namespace ns.
Interns a symbol name in the namespace ns.
Find a symbol in a namespace.
Find the name of a symbol in a namespace.
Returns the value of the variable whose name is sym.
Add a module to the list of default imports
Adds an alias to the symbol table.
Interns the given symbol to the given variable.
Interns sym with new var if it exists.
Returns the name of the variable referred to by sym or None if none is known.
Adds an import sym to the module.
Returns the imported module type for the given symbol.
Adds a reference to a symbol.
Returns the name of the variable referred to by sym.
Interns all of the variables in the other namespace.
Reference all namespaces of other to this one.
Create a new namespace or return an existing one.
Get or create a symbol.
Returns the value of the symbol with the given name.
Remove a symbol from the symbol table.
Complete all aliases under the given prefix with the given name in the given namespace.
Complete the imports and aliases for the given prefix.
Returns completions for all interns of the given value.
Completes all references to the given value.
Complete aliases imports and references in text.
The positional arguments of the function.
Returns a list of members from the given iterable.
Returns a list of members of the list.
Decrypt a JWT.
Encrypt a JSON object using a JWT key.
Deletes the cache item if it exists.
Return a tuple suitable for JSON serialization.
Parse fiql string to expression.
Dump a NDB model to a file.
Decode date strings into Python objects.
Decodes a date.
Decode a JSON string into a Python object.
Return the default value for an object.
Validate leicacam version
Perform a robust topological sort on the graph.
Set parent.
Get parent fiql object.
Add a new element to the working fragment.
Create a new expression that is the AND of the given elements.
Create an or expression.
Parse a received message string into a list of dictionaries.
Convert a list of tuples to a dict.
Check if there are any messages with the given cmd and if so return that message.
Prepare and send a message.
Flush the buffer to the socket.
Enable a slide
Save a template to a file.
Get information from the device.
Locate the package. json file.
Parse package. json file.
Handle API errors.
Validate yourls response.
homogenize wavelengths.
Interpolate the dep vector of a waveform.
Compute the indep vector of wave a and wave b.
Verify that the two wavelengths are compatible.
Loads the systemjs manifest and returns the bundle files
Trace the parameters of a module.
Expand a short URL.
Return url stats for the given short URL.
Get links and clicks.
Return db stats.
Split an iterable into chunks of size chunksize
Flatten a nested iterable.
Print a table of records as a tab - separated value.
Create a dummy object of the given name.
Create a Number instance from a human readable string.
Trace a module.
Extract links from a JSON file.
Append a version entry to the plist.
Make a multi entry entry for a package.
Convert a string to a list of operations.
Chunk noise into chunks.
Chunk pars data into chunks.
Bound waveform.
Build the units for the given operation.
Create a new wavelength array with the specified operation.
Compute the running area of a dependency.
Validate wavelengths min max.
Calculate the arccosine of the phase vector.
Inverse hyperbolic cosine.
Calculate the arcsine of a waveform.
Inverse hyperbolic tangent.
Add the dependency db to the given wave.
Group delay.
Logarithm of the wavelength.
Square root.
Convert wavelength vector to complex.
Convert wavelengths to float.
Convert wavelength vector to wavelength vector using the wint function.
Implement system finder by checking for systemjs output directories.
Get a short description from a long description.
Build an expression from a list of tokens.
Remove the next item from items starting at pos.
Get a list of functions from a string expression.
Parse an expression.
Remove consecutive delimiters from a string.
Convert a number to a mantissa and exponent.
No scientific notation for a number.
Convert a number from scientific notation to scientific notation.
Return the fractional part of a number.
Return the mantissa of a number.
Check if the app needs a js extension.
Runs the bundler command.
Returns trace information for app.
Check if the hashes of the dependency tree match the hashes of the module.
Format a hexdump - formatted string.
Parse a docstring into parameters and returns.
Returns a list of valid identifiers.
Create a deferred action from an action string.
Split a line by shlex. split.
Check if there are commands in the context.
Return the help text for a builtin function.
Find function by name.
Return a string listing all functions in the specified context.
Check if arg is a flag.
Extract a value from the remaining arguments.
Invoke method based on a line of text.
Classify a section.
Classify a line into a section header or continuation line.
Join multiple paragraphs into one.
Convert value to type.
Convert binary value to given type.
Get the size of a type.
Check if the given type is known.
Split typename into base bool and list of subparts.
Instantiate typename from type base with subtypes.
Check if the type has the given format
Load type from module.
Add a parameter to the method.
Add a return value to the context.
Print the return value of the function.
Match short name.
Returns the type of the parameter with the given name.
Format the return value.
Convert a positional argument.
Convert the given value to the type specified by the arg name.
Return a string representation of the error message.
Return a dictionary representation of the exception.
Validate and execute a function.
Parse a list of validators.
Find all annotated metadata objects in a container.
Create a context from a module.
Get the help text for the given function.
Decorate a function so that it cannot be run without docstrings.
Decorator for annotated functions.
Return a short description of a function.
Autodiscover and load modules and commands.
Install the crontab.
Print all tasks in the crontab.
Uninstall kronos packages.
Create an instance of the appropriate handler for the given uri.
Load all projects from disk.
Save project configurations.
Returns a dictionary of all dependent projects for this component.
Initialize a project.
Calls the function f with the state.
Apply function f to pure state.
View the fold.
Convert fold to list of strings.
Apply a function over a state.
Set the value of a state.
Iterate over a given iterable.
Return the kind of the object.
Main game loop.
Step along the vector and return the result.
Handle input.
Advance robots by one step.
End the current game.
move a player.
Play a game.
Make a move.
Returns the winner of the game.
Returns a generator for the winners of the game.
Process a single item.
This method is called when the crawler is opened.
Upload chunk of data to S3 bucket.
Create a file object from the contents of the collection.
Get the state of an account.
Get the current state of an asset.
Get the hash of the block with the given index.
Get the system fee for the specified block.
Get the contract state of a script.
Get a transaction by its hash.
Call jsonrpc. get storage. value.
Get the output of a transaction.
Execute a JSON - RPC invocation.
Invoke a JSON - RPC function.
Invoke a JSON - RPC script.
Send a raw transaction.
Validate an address.
Make a call to the API.
Return True if the string s is a valid SHA256 hash.
Check if a string is a valid hash160 string.
Encodes a list of invocation parameters.
Decodes the invocation result.
Apply the unit to the given datetime object and timezone.
Render and save the graph to a file.
Render barcode and return raw barcode string.
Renders the code and returns the result.
Command line tool to edit or create configuration files.
Download a file from S3.
Upload a file to S3.
Downsync an S3 environment.
Show the differences between S3 configuration and the local config.
Parse an environment variable.
Basic Auth.
Store API key in config.
Get json content from folder.
Get all schemas.
Get the schema for this instance.
Return a JSONschema. ref. Resolver for the current schema.
Validate the given object against this schema.
Returns a list of valid examples.
Get the list of invalid examples.
Returns auth url for user
Extract auth code from url.
Requests a new access token and returns it.
Get user id.
Lists the contents of a folder.
Create a new empty folder.
Add a comment to an object
Decode bytes to unicode if necessary.
Sets the drop target for the given object and all its descendants.
start drag opperation
Set the default tlw.
Inspect an object.
Migrate a font from the old format to the new.
Sets the current page to location
Log a message and set focus.
Creates a wellcome tip window
mouse down event handler
move the mouse to the start of the selection or overlay
Handles wx. key press events
Delete objects from the list.
Duplicate the objects in the selection.
Refresh bmp.
Calculate best position for a widget
Get py data for item
Set py data for item
Find item by py data
Delete item from list
Delete all items from py and wx. list
Remove all columns from the table.
set item selection
Returns the current string selection
Sets the data for the item at position n
Append a string to the list
Get a wx. Window from its name
Add a child to the sizer
Set parent of widget.
Tile the background using the wx object.
erase background on canvas
Called when paint method is invoked
Returns column headings.
Remove all rows and cols from view
Update values in grid.
Update column attributes
Sorts the table by the given column.
Remove all items from the list
Create a combo box with the specified id and event handler
Begin edit mode
Handles end edits
Returns True if the key event should be handled as a keypress
Handle starting key event.
Enable or disable all menu items.
Check if menu item is enabled or not.
enable or disable all menus
Check if menu is enabled or not.
Remove a menu from the MenuBar.
Set object attributes from tag.
Autosummary table visit method
Create a documenter for the given object.
Mangle a signature to a maximum number of characters.
Import a module by name.
Link to the role of the document.
Shows an alert dialog with the specified message.
Shows a prompt dialog and returns the user input
Opens a font dialog and returns the chosen font.
Display a color selection dialog.
Display a dialog to choose a directory.
Display a search dialog and return the results.
set item has children
Set the icon of the object
Parse a Python source file and return the result.
Save the rsrc to a file.
Builds a window from a dictionary.
Build a control or menu component from a dictionary res.
Convert pythoncard property names to pythoncard property names.
Set clipboard data
Find autosummary in the docstring of a module.
Load an object into the tree.
Inspects an object in the tree.
Activate an item in the tree
Update tree item.
show context menu
Convert the value to a native representation.
Return True if path is the current path of the mock.
Test if the path has no current context.
Select option.
Get webdriver object for given browser name.
XPath - Evaluate the XPath expression.
Switches to the specified frame.
Context manager to accept an alert dialog.
Context manager to accept a confirmation dialog.
Context manager for dismissing a confirm dialog.
Display a prompt and wait for the user to click it.
Context manager for dismissing a prompt.
Save the response body to a file.
Takes screenshot and saves it to specified path.
Raise server error.
Check if a field has a checked state.
Finds the first field that matches the locator.
Check if the field identified by locator is unchecked.
Find and return the first field that matches the locator.
Test whether this document has the specified title.
Fail if the fake has no title.
Return the inner content of a node.
Return the inner text of a node.
Normalize a URL.
Return True if the error should be caught.
Compare the number of results returned by the query.
Cache results.
Returns True if any of the options contains a value that is not None.
Create a failure message.
Check if the given count matches the given options.
Normalizes text.
Normalize whitespace.
Normalize text and convert to regex.
Returns True if the current url matches the expected path.
Resize window.
Boot the server and wait for it to responsive.
Set the function that gets called when the property is accessed.
Set the instance method.
Set the class method.
Return traceback as a string.
Returns the source string for the given instance.
Get the logger for the given instance.
Set the logger to use.
Make a call to the API.
Returns a list of all available channels.
Returns a list of users.
Create a Slack message.
Translate Slack message.
Send Slack message.
Read channel.
Run the slack bot
Run client.
Returns a dictionary with the differences between two dictionaries.
Colorize a message.
Restart a task.
v1 playbook on stats.
Print a skipped task.
Convert a dotted - quad ip prefix to a dotted - quad netmask.
Add a YANG model to the configuration.
Load all filters from all registered filters.
Find a YANG file.
Perform HTTP POST request.
Builds the authorization uri.
Exchange a temporary code for an access token.
Parse url query params.
Remove the query string from a URL.
Build a URL from a base URL and any additional parameters.
Handle exception.
Make a response object from the given body headers and status code.
Make a redirect response.
Make a JSON response.
Get authorization code.
Refresh token grant
Get OAuth2 access token
Get authorization code from uri.
Get token from POST data
Return an authorization object for this request.
Open a serial connection to a device.
Read a single byte from the device.
Read the specified number of bytes from the device.
Read a single byte from the device.
Write bytes to device.
Write a single byte to a device.
Write an i2c command to the specified device.
Create a copy of this file.
Create a copy of the CDN.
Construct a new EffectFile from a dictionary.
Uploads a file to the server.
Returns a list of file cdn urls.
Construct a group from a dictionary.
Create a group from a list of files.
Perform an opration request.
Generator yielding file UUIDs.
List items in a namespace.
Prints a progress bar to stdout.
Returns the home mode status of the user.
Get a list of cameras.
Get camera information for a list of cameras.
Take a snapshot of a camera.
Get camera motion.
camera event md param
Update camera motion settings.
Check if the given item is the last item in the list.
Yield single list nodes with meta data.
Get the ilvl value for a given li tag.
Get the merge value from the XML tree.
Returns the span of a tc element.
Get td at given index.
Return True if style is False.
Check if the string r is bold or not.
Return true if the style of the given node is italics.
Check if the given re pattern is underlined.
Returns true if the given element is a title element.
Yields the elements of r that are valid XML.
Get the relationship information for the given tree.
Get ordered list numbering style.
Build a table element and list of visited nodes.
Get the text content of a tag.
Strip tag from tree.
Find a dataset and return its path.
Load the MNIST pickle format.
Plot a list of images.
Plot the layers of a weight matrix.
Plot a set of filters.
Encode text.
Add convolutional weights to the model.
Decode the input z using the input layer.
Returns the score of x for the autoencoder.
Predict label for input x.
Predict class probabilities of x.
Returns the logit representation of x.
Returns a list of all variables.
Computes the accuracy.
Build an activation from a string.
Generate a reservoir of samples from xs.
add a loss to the model
Train the model and return a list of training monitors.
Build the regularizer graph.
List of all input layers.
Returns a list of all variables in the network.
Saves the object to a pickled file.
Load a model from a file or handle.
Computes the loss of the network.
Build the updates graph.
The size of the output array.
Resolve input shapes.
Resolve input and output shapes.
Log the model parameters and activation state.
Log of all the parameters.
Return a string formatted for logging.
Resolve shape by name.
Find the parameter with the given key.
Add a bias parameter
Convert to spec.
Return the logarithm of a Gaussian distribution.
Inverse of loggabor function.
Add a tier to the domain.
Remove a tier by number.
Get a tier by its name number.
Convert to ELAN format.
Add a point to the tree.
Add a new interval to the reservoir.
Remove interval for given time.
Remove a point from the schedule.
Returns an iterator over the intervals in the track.
Returns a sorted list of all intervals.
Indents the given element.
Add an annotation to the graph.
Add a controlled vocabulary entry.
Add an external reference for the given eid.
add lexicon ref to lexicon list
Add a linguistic type.
Add a locale to the list of available locales.
Remove unused time slots from self. timeslots
Extract the annotations between start and end time slots.
Generate a unique annotation id.
Generate a unique time slot.
Returns the child tiers of the given id.
Get full time interval.
Get reference annotation data after the specified time.
Get reference annotation data before time.
Returns a list of tier IDs for the specified linguistic type.
Remove all annotations from the specified tier.
Remove description from controlled vocabulary.
Remove a license by name or url.
Remove media descriptors linked to the given file path relpath mimetype time origin and ex from.
Remove the specified property from this object.
Remove a reference annotation for a given time slot.
Remove secondary linked files.
Remove a tier from the simulation.
Remove the specified tiers from the simulation.
Rename a tier.
Shift annotations by time.
Prints debug information about the given storage.
Get embedding levels for the given text.
Perform an explicit embedding using the specified storage.
Given a list of run runs resolve neutral type embeddings.
Reverse contiguous sequence of characters.
Re - order the levels of a string.
Normalises the current file.
Add an attribute to an object.
Command line interface for the convert command.
Backwards compatibility with old versions of Python.
Show the current GUI.
Discover GUI class from registered guis
add to filemenu
Context manager that ensures that the selection is maintained.
Context manager that ensures that the time is maintained within the context.
Show no GUI
Get the cumulative data.
Returns a list of single axis values.
Draw a constant line.
Load transform parameters.
Reverse a mapping.
Iterate through a range of floats.
add data to configuration
burn the graph and return svg string
Calculate left margin.
Calculate right margin.
Calculate top margin.
Add a popup to the graph.
Calculate bottom margin.
Draw the graph.
Make datapoint text.
Draw x labels.
Draw y - axis labels.
Draw x guidelines.
Draw y guidelines.
Draw title and subtitle if requested.
Add inline styles to each node in the document.
start svg tag
Returns a list of all the sheets in this stylesheet.
Run the bot in the event loop.
Send data to the socket.
Connects to the server.
Respond to the user with a message.
Return a tuple of dispatch patterns.
Generate a new nick and handle it.
Handle a ping.
Handle a registered server.
Run the event loop.
Sends a boss greeting to the node.
Main task runner loop.
Return a tuple of tuples representing the command pattern for this worker.
Called when a successful registration command has been received.
Runs a single worker.
Add a worker to the pool.
Sends the validation email to the user.
Send password reset email.
Verify token.
Remove the user s avatar.
Check if the current request is allowed.
Return a docker client for this instance.
TLS client credentials.
Return the name of the service.
Calls a docker method.
Submits a docker request.
Check if there are any tasks in the service.
Stop the Docker container.
Lower the email address.
Update password.
Update password.
Validate email address.
Create a new token for the user.
Delete a token.
If the user is not authenticated and the email address is the same as the user s email address
Handle POST request.
Update the expiry time of the object.
Generate password reset email.
Handler for sending email
Password reset email handler
Handler for the validation email notification.
Authenticate user with token.
Authenticate user and token.
Show a bokeh notebook.
Process a list of HV plots.
Get custom JS code.
Returns a widget for the given param name.
Render a HoloViews object.
Text input widget.
Convert a list of named objects into a list of tuples.
Get method owner.
Assign auth values to self. auth.
Ping the device.
Information about the server.
Check the health of the server.
Convert a number of bytes to a readable string.
CPU total load.
Return memory size in bytes.
Get the network up.
List of volumes.
Get a volume by id.
Get the size of the volume in bytes.
Returns the percentage of used or total volume for the given volume.
Return the average disk temp for a volume.
Return the maximum disk temperature for a volume.
Get disk data by disk id
Login to Github s API
get url and retry on error
execute get url request
Update the user s information.
Returns a synotic utilisation object.
Returns the storage object.
Get the context for the given request.
Get tenant token.
Build attributes for this element.
Temporarily override settings. installed apps.
Uninstall one or more apps.
return global settings as a dict
Handle GET request.
Change a value in the config file
Migrate config file
Starts a webserver.
Wait for the server to return a response.
Get new access information.
check if token is present in config
Set OAuth 2. 0 access credentials.
Create manifest table in Amazon DynamoDB.
Split full path into bucket and prefix.
Check if glacier exists.
Remove None values from a dict.
Add a run id to the manifest.
Returns True if the run id is in the manifest.
Extract schema from URI.
Transform a schema string into a schema string that can be used as a model name or model.
Parse a snowplow event string into a list of tuples.
Transform a line of text into a good event JSON.
Convert an enriched event into a JSON string.
Get used template for response.
Pretty print the context.
Prints the variables in the template
pformat sql in html format
Pretty print django context object.
Pretty - print a dictionary as HTML.
Styles the given text.
Formats the given object for the given context.
Formats the given object and writes it to the given stream.
Get a latex token from a string at the given position.
Get latex nodes from a string.
Convert a LaTeX string to plain text.
Convert a LaTeX document to text.
Unescape an ASCII string.
Fetch organisation information.
Get a list of boards.
Get list of members.
Update an organisation.
Remove a member from this team.
Add a new member to this team.
Add a user to this team.
Get list information.
Add a new card to your account.
Get label information.
Get a list of items in this collection.
Update a label by name.
Update a label.
Build authorisation url.
Fetch card information.
Get a board.
Get list of resources.
Get a list of checklists.
Add a comment to the chat.
Add a new file as an attachment to this collection.
Add a checklist.
Add a label to this object
Add a label to this object
Add a member to this team.
Get member information for this team.
Get a list of cards.
Returns a list of organisations.
Create a new board.
Get board information.
Get a list of lists.
Get list of labels.
Get a single card by id.
Get all checklists.
Get the organisation for this team.
Update a board.
Add a list to this collection.
Add a label to this project.
Get checklist information.
Get card information.
Get checklist items for this checklist.
Update a checklist.
add a new item to the collection
Remove an item from the collection.
Update the name of a checklist.
Update the state of this checklist.
Add authentication information to query params.
Check for errors in the response.
Builds the URI from the given path and query parameters.
Makes a request to the specified uri path with the specified http method query params body and headers
Create an organisation on the client.
Create a board on this client.
Create a label.
Create a list.
Create a new card.
Create a checklist.
Create a new member.
Get an organisation.
Get a board by id.
Get a list of objects by id.
Get a card by id.
Get a checklist by id or name.
Get a group member by id or name.
Concatenate domain and suffix from a URL.
markupless convert text to raw text.
Set the password for the specified service.
Split text at locations.
Mark all occurrences of the regex in text as matched and place them in locations.
Mark begin and end locations with a regex.
Main entry point for the CLI.
Create cipher object.
Get cipher mode.
Get priority.
Check the configuration for the AEAD authentication scheme.
Called when a message is published.
Generate a unique id.
Connect to the broker.
Handle connection acknowledgement.
Encode a string to a bytearray.
Decode a base64 encoded string.
Encodes an 16 - bit integer into a bytearray.
Encode a value to a bytearray of length num.
Decode a sequence of bytes into a string.
Return the header as a binary string.
Encode this keepalive message into a header and payload bytearray.
Decodes the given packet into this instance.
Encode the header for the response.
Decodes the given packet.
Decodes the given packet into this message.
Encode the message header.
Encode the message header.
Decodes the given packet into this message.
Encode the message header.
Encode message header as bytes.
Decodes the given packet into this message.
Decodes the given packet into this message.
Returns the URL for the request.
Make a request to the API.
Refresh the list of blocks.
Format the data.
Fit the model to the data.
K - means clustering.
Predicts the class labels for the given data.
Map the number of clusters to the number of samples in a sampled set.
Sort clusters by means.
Get date from datetime string.
Returns the total number of points in a dictionary
Returns the maximum time span of the given dictionary.
Takes an integer or float and returns a tuple of the number of significant figures and the unit
Return a pretty string representation of the element.
Analyte 2 namemass.
convert analyte to massname
Copy all files with the given extension to the given output directory.
Enumerate contiguous bool values.
Create 2 - dimensional boolean array from tuples.
Fastsmoothing with convolution.
Fast gradient of an array.
Find the indices of the minimum values of two arrays.
Cluster the data using mean shift clustering.
K - means clustering.
Get the defined SRMS as a numpy array.
Read the configuration file
Read latoolscfg and configparser
Copies a. srm file to a new location.
Exclude num elements from the filter.
Plot autorange signal.
Create the indices of the background sigrng and trn.
Ratio of analytes to the internal standard.
Calibrate the system.
Returns a dictionary of the ablation times
Calculate the correlation between two analytes.
add a new filter
Get parameters of the filter.
Plots histograms of the data.
Load reference data.
Calculate the mass of a molecule
Generate a namedtuple with the specified fields and values.
annihilates the given predicate in the given stack.
De - duplicates a stack.
Compute gauss - weighted stats.
Gaussian variates.
Standard error of an array.
Return a list of samples.
Calculate the ratio of all the scales.
Make a subset of samples.
Apply a classifier to the data.
return the number of removed subsets
Filter the data.
Export only the traces for each stage.
Save the log to a file.
Fold the function fa to z and add the result to g.
Bayesian Bayesian Scale.
Scale a median value to the nearest num percentiles
Circularly despike a signal.
Despike algorithm for Sigmoid functions
Add a new component to the model.
Remove component by name or setn.
Remove all components and switches.
Remove unused components and switches.
Return the key for fuzzkey.
Grab a boolean mask.
Return a string representation of the information.
Writes the log to a file.
Reads a logfile and returns a list of run arguments.
Get modem information.
Send a message via modem.
Parse a MySQL file or string.
Return a link to a notebook viewer.
Returns the div for the thumbnail.
Returns the code example divided by the code example.
The code example of the notebook.
The URL of the viewer.
Get the output file name.
Create a Python file from nb.
Download the specified number of files.
Create a thumbnail.
scales an image to a given width and height
Save thumbnail.
Copies the thumbnail figure of the notebook to the output file
Returns the URL for the specified notebook file.
Returns list of language codes that need to be changed for db change.
Process a thumbnail file.
Save the resized image if necessary.
Returns all thumbnails.
Create thumbnail.
Delete thumbnail.
Creates a thumbnail.
Get thumbnail.
Delete thumbnail.
Incoming message.
Add a subscriber for a given number.
Returns the set of states that this message was delivered in.
Send a message to a specific provider.
Return blueprints for all receiver classes.
Called when a message is received.
Called when a status message is received from the provider.
Forward an incoming message to all connected clients.
Sign a web3 transaction.
Estimate gas in bytes for a given block.
Estimate gas in bytes for a safe and web3 transaction.
Write to the stream.
Read a line from the serial port.
Check if the message has bad headers.
Attach an attachment to this message.
Register one or more services
Load configuration from a module.
Register resources.
Returns the value for the given key or raises an error if it doesn t exist.
Properly exit the loop.
Setup the service.
Nng of the Nth order number
Solve the Cauchy equation.
Perform a HTTP DELETE request.
Check if two paths refer to the same file.
Create a new symbolic link.
Initialize the global logger.
Raise an error with the given message.
Claim a set of file readers.
Get the header of the VCF file.
Claim a set of VCF readers from the given set of file readers.
Calculates the mean and standard deviation of the population.
Claim the VCF readers from the unclaimed file readers.
Split data into a list of lines.
Return prefix line terminator if any.
Returns the line terminator for the given data string. Returns none if no line terminators are found
Find the next line and return its position.
Go to previous line and return line number.
Returns the last lines of the file.
Returns the first lines of the file.
Follow the file until EOF.
Claim a set of VCF readers from a set of file readers.
Parse a VCF record from a string.
Create sample tag values for the given sample names.
Format the tags for the VCF file
Join the info dict into a single string.
Returns the sample format field.
Return the sample field for the given sample.
Return a stringified version of the VCF.
Add a tag value for a sample.
Add or replace filter.
Returns a list of available categories for the user.
Create product form for given category.
Return a form for staff products.
Add product error
Create a form class for the given model.
Returns a list of commerce cart items that are pending or purchased.
Sends an email to the given recipients.
Parse OpenStreetMap OSM file.
Iterate over OSM notes.
Return True if the filter passes for the given user.
Return True if conditions are met for user.
Returns the user quantity remaining for the given user.
Returns only carts that the user has permission to view.
Returns only carts that the user has permission to view.
Filter queryset to include only items that are relevant for the current user.
Filter the queryset based on user preferences.
Filter by user groups.
Returns a cart for the given user.
Auto - extend reservation duration.
Apply a voucher code to the cart
Checks that all vouchers in the cart are valid and that all products are available.
Recalculates discounts for all products in the cart.
Yields all rows with the given content type.
Returns the form to be used for the given request.
Render the data using the appropriate renderer.
List of all reports.
Returns a report of sold items.
Lists all payments.
Returns a queryset of credit note refunds.
Displays the product status.
Returns a list of cart items with the status of the discounts.
Returns a list of invoices that contain product items for the specified products or categories.
Ranks invoices by date.
List credit notes.
List of all invoices.
List of attendee people.
Return speaker registrations.
Return the set of missing categories for the current user.
Returns the number of credit available for the current invoice.
Returns True if ticket is sold out and unregistered False otherwise.
Edit profile page.
Handle a profile request.
Returns the products form and discounts for the requested products.
Handles a voucher request.
Handle a manual payment form.
Refund an invoice.
Extend the reservation for a user.
Sends an invoice mail.
Manage badges.
Render a badge.
Returns a list of discounts available to the user for the given categories and products.
Annotate queryset with past use count.
Return list of available products for user.
Apply this payment to the invoice.
Calculate the cancellation fee for this note.
Generate a random access code.
Get object from property name.
Returns an invoice for the cart.
Generate a manual invoice.
Applies credit notes to the invoice.
Check if the user can view the invoice.
Refresh the invoice and cart tables from the database.
Validates that the invoice is valid and has a cart.
Updates the status of the invoice.
Marks the invoice as paid.
Checks if the current invoice matches the cart.
Update invoice validity.
Marks this payment as void
Refund the payment.
Sends an email to the user who created the invoice.
Update the annotation with the given data dictionary.
Flatten a field into a flat dictionary.
Print all downloads.
Download the value of the specified annotation field.
Returns a list of processors. If processor name is provided returns the name of the processor.
Print processor inputs.
Runs data from a JSON string
Upload files to a project.
Uploads a file to the server.
Download annotation data for specified objects.
Recursively get subclasses of a class.
Get repo and project IDs.
Yield variants with suggested changes.
Yield evidence and final phenotype with suggested changes.
Update the object with the latest data from the API.
Remove duplicates from a sequence preserving order.
Authenticate using Asana and Github.
Prompt user to select item from list.
Get the saved issue data for the given issue number.
Move a saved issue to another namespace.
Get the saved task data for the given task number.
Get task by asana task id.
Apply the given value to the given key.
Flushes all pending items from the queue.
Create a missing task in the workspace.
Return a list of data types for this project.
Enhanced KM logging function
Initialize serial port.
Set the polling values.
return a string representation of the reads since a given time
Set context string
Calculate the fractional part of a waveform.
Set the maximum demand period.
Set meter password.
get months buffer
Add a schedule to the model.
assign season month day schedule
Assign holiday date.
Read the specified schedules from the device.
Read tariffs for a given number of months.
Read holiday dates from device.
Returns True if all read settings were successful.
write message to log file
Authenticate using the serial port
Update all observers
request a and b until a terminator is received
Request data from meter.
Request bytes.
make upper case request
Set display list to LCDd
Set relay status for seconds.
Post - processing hook.
Set pulse input ratio.
Set the kwh variable to zero.
Set the LCDD IDs.
Iterate over all the fields in a schema.
Recursively iterate over fields in a schema.
Generate a random text.
Returns a string with timing and result statistics.
Return colored string.
Print text to the terminal.
Return a summary of the result.
Parse command line arguments.
Sets up the result.
Runs the example.
Runs the transform script if it is available.
Transforms a describe node into an ast. class definition.
Transform the body of a function.
Transform an example function into an ast. function.
Transform example body.
A ast. arguments node containing only self as the only argument.
Register a finder hook.
Transforms the given source code and compiles it.
Apply a parser to parse command line arguments.
Load a module by its name.
Discover and load modules from a directory or list of paths.
Discover packages in a directory.
Remove a configuration file.
Send a restart message.
Call a function with the given results.
Make a new ThreadPool service.
Refresh the session for the given node id.
Remove expired nodes from the cache.
Remove a node from the hash.
Get the last updated time of a node. If no node id is specified the last updated time
Get all the nodes in the cluster.
Remove expired nodes and refresh session.
Increments the number of seconds that have passed since the last call to phonon.
Delimit a list of values.
Check if the given path is bad.
Merge another Status object into this one.
Check if a string exists in the database.
Query the database for the given value.
Create a service instance.
Parse the reader and return the result.
Return an optional parser.
Repeat a parser a single time.
Return a parser that parses input using the given parser.
Repeat parser once separated with separator.
Repeat a parser separated by the given separator.
Closes the stream.
Check if URL is valid.
Add a heart service if it doesn t exist.
Wrap a service in a multiservice.
Freezes the graph from a checkpoint.
Freeze a checkpoint.
Save graph only from input checkpoint.
Save weights from a checkpoint.
Restore from a checkpoint.
Create an instance of this class from a parser and token.
Render the tag for this class.
Validate arguments for a tag.
Implement get context data method
Create a new Tag instance from a parser and token.
Get context data.
Convert a caffe model to a tensorflow session
Freeze a caffemodel
save a tensorflow graph only
Takes a sequence and returns tuples of rows.
Yield every other item of an iterable.
Remove duplicates from an iterable.
Returns the next item from iterable and the original.
Yield callables suppressing exceptions.
Assert that an iterable is ordered.
Swap result with before item or after item.
Get the first n queues.
Reset the iterator to the original state.
Parses the given token as a string and returns the split bits and the variable name.
Return the descendant public key of the given key chain.
Recursively iterate over nodes of a given object.
Parse a selector string and return a boolean.
Parse a selector string.
Returns the list of nodes in rhs that are parents of the lhs.
Returns the siblings of the nodes in rhs that are siblings of lhs.
Match nodes.
Make a GET request and return the response body.
Expires items in the cache for a given number of seconds.
Set the value of the key k to v
Get a value from the cache.
Returns True if the store contains the key.
Check if the chain is valid at the given timestamp.
Create an instance of this class from a JSON string.
Create an instance of this class from XML.
Minified js template content.
Get the lines of a log file.
Returns a list of the rows in the table.
Validate a JWT.
Get fernet engine.
Check token against supported digest algorithms.
Create a new OAuth token.
Computes 32 - bit counter.
Base 64 Counter
Calculates the average duration.
Create sources and triggers.
Send an event to a single source.
Watch for events and start them if necessary.
Parses a format string into a list of patterns.
parse apache log line into dictionary
Validate that the value of the field is at least the specified number of days.
Verify token and store it in session.
Return device or browser name.
Suppress warning message for node.
Connect the signal receivers.
Create a link to a secret record.
Send a notification for the given request.
Send confirmed notifications.
Send email validation notification.
Send a notification rejecting the request.
Send notification.
Create a new link.
Validate a token and return a boolean value.
Revoke the link.
Create a new record.
Get request by receiver and user.
Send confirmation email.
Create a secret link.
Generate a Sorting Hat hash.
Verify the signature of a message.
Checks if the record is embargoed.
Process an access request.
Send confirmation email.
Returns an ssh connection to the remote host.
Reverse the direction of a column.
Returns the selected item as a string.
Returns the query set of items to sort.
Returns the version of the file.
Add the new version to the file.
Start timer.
Get the next event from the queue.
List of links.
Stop the thread.
Empty the queue.
Add events to the queue.
Create client and start t
Encodes an Event protobuf.
Encode a list of events as a protobuf message.
Decodes the given data into a protobuf message.
Send events to the socket.
Generate a webpage.
Retrieve a preview.
Loop the message queue.
True if the time since the last call is greater than the log interval.
Abort SASL session.
Perform SASL substitution on a list of characters.
Render the admin footer.
Build payment parameters.
Build parameters for register credit card.
Creates a payment request for the given amount of money with the given client ref.
Get the version number.
Connect signals to the filesystem widget.
Configure shortcuts.
Activate file item.
Called when the user selects an item from the filesystem.
Navigate to item.
Add the resource source and target paths.
Fetch children.
Return the icon for the item at the given index.
Calls a command and waits for it to finish.
Return max file descriptor.
Close a file descriptor.
Close all open file descriptors.
Redirect the given stream to the given target.
Set form widgets attributes.
Import module by app name.
Import all submodules for a given module name.
Includes the given template in the current context.
Checks if the given path is a valid local file system path.
Check if url is a valid S3 url.
Get the absolute path to a template file.
List objects in S3.
Build the JSON for the worklfow.
Executes the workflow
Create an archive of a folder.
Recursively create a directory.
List files in the project archive that match the pattern.
Restore the last num files in the folder.
Create a new Spotify client.
Returns a list of file names for the specified path.
Download a file from the server to the specified path.
Returns True if the given path exists in the storage backend.
Get the parent entity for the given path.
Creates a new folder at the specified path.
Uploads a local file to the bucket.
Delete a file or folder.
Validate storage path.
Create a new access token.
Create a new request.
Get metadata for a given entity.
Deletes a project.
Deletes the specified folder.
Copy the content of a file to another location.
Get signed url for a given file.
Emit a record to the collection.
Return a copy of the URL for the given service and version.
Return a copy of this request with the given headers.
Return a copy of this configuration with the given parameters.
Add a single exception to the list of exceptions to throw.
Return list of fields to display
Map a function over a list of samples.
Run oncotator for a vcf id.
Sort the list in place.
Returns a list of timestamps.
Load export from folder.
Shift the time t to the front of each string in the record.
Returns the sum of the numbers in the record.
collect rfxcom.
Create a new user record.
Parse vn results.
Parse release results.
parse prod staff production
Parse character results.
Return a list of tags.
Parse user results.
Add files to a tar archive.
Apply a function to all files in a list.
Copy a file from the local file store to the output directory.
Returns a list of docker parameters for this Docker client.
Refresh the metadata from the database.
Returns a list of StreamMetadata objects for all streams in the registry.
Export data to a directory.
Parse search results.
Reset API key and store it in database.
Return list of users.
Run bwa index.
Returns connector db instance
Add a stream to the database if it does not exist.
Add a stream to the database with the given schema.
Insert a value into the database.
Start sync thread.
Stop the background thread.
Download a file from a URL.
Upload a job to Amazon S3.
Print all labels for an Ontology.
Print the hierarchy of the ontology in a file.
Get the mean of a bam.
Create a new database record.
Export data to a JSON file.
Return device object for this path.
Get labels for a given ontology.
Get the hierarchy for a given ontology.
Returns the contents of the config file.
Returns the mount path for the current docker container.
Add an option to the parser.
Create argument parser.
Create a new pipeline command
Set authentication for websocket connection
Handles the result from the server.
Ping the server
Creates a new resource at the given path.
Partial update of a resource.
DELETE the resource at path
Subscribe to a stream.
Return a list of all devices in the registry.
Run the cutadapt tool.
Run samtools faidx.
Run samtools index for the given bam.
Run sambamba markdup.
Run the samblaster tool
Use picard to mark duplicates in bam.
Run picard sort on the bam.
Run kallisto.
Returns the affinity for the test user.
Send a command to the server.
Subscribe to a stream.
connect to the websocket
Reconnect to the device.
Resubscribes all the streams in the subscription list.
Called when a websocket connection is established.
Callback when the WebSocket connection is closed.
Called when there is an error in the connection.
Called when websocket message is received.
Ensure connection is alive.
Select variants using GATK.
Run a quick check on a bam.
Write configuration to a JSON file.
Read config file and return dict.
Get the ontology term for a given IRI
Search for an ontology by name.
Suggest a name for the ontology.
Yield the descendants of the Ontology at the given iri.
Iterates over the descendants of the Ontology at the given iri.
Iterate over the labels of the ontology.
Yields the terms and children of the ontology in a hierarchical hierarchy.
Run fastqc tool
Add a stream to the query.
Start the container
Start the HDFS cluster
Start a datanode on the remote host.
Stops the container.
Check the status of the container.
Look up a hosted zone by name.
Fetch the configuration from the R53 API.
Merge configuration chunks into a single XML document.
Validate a changeset XML document.
Returns a list of the members with the highest fitness score.
Returns the fitness score of the classifier.
Returns the average cost function value for this cluster.
Returns the median cost function value for this cluster.
Returns a dictionary with the current parameters.
List of members of the group.
Add a parameter to the parameter list
Normalize the keys in a dictionary by replacing str keys with str values.
Get all environment vars.
Run callable and return True if the exception is raised by the callable.
Transform a list of hits into a list of packages.
Transform the result of a query into a string.
Convert html to xhtml.
convert xhtml to html.
Open a document in a browser.
Remove this node from the tree.
Remove this element s tag from its parent.
Return a copy of the document with some css selector applied.
Iterates over all log handlers of all loggers.
Get counts from environment variables.
Check if a string is a single class.
Returns True if module is single module False otherwise.
Check that the params in the request dictionary are correct.
Check that the id is in the request.
Decode path using sys. getfilesystemencoding
Escapes all string or string attributes in an object.
Return the codec name for the given encoding.
Detect the encoding of the stream.
Get the remote address for a given forwarded address.
Convert amount to decimal.
Parse a string and return the root element.
Parse an XML file and return an ElementTree.
Convert BeautifulSoup tree to HTML.
Get the traceback of the current exception.
Return the exception as a string.
Render a summary.
Generate a plaintext traceback.
Render the source code.
Attempt to extract the name from the egg info.
Sort links into eggs and no eggs.
Get the content type for the given url.
Yields all links within the document.
Check if this item is verifiable.
Find the data files for a package.
Return list of files to exclude.
Yield requirements from the given file.
Yields the string representation of each line of the given iterator.
Ignore comments in iterator.
Visit an ast. Node.
visit an Attribute node by returning a fresh instance of it
Coerce a string to a number.
Push a new app context onto the stack.
Pop the current appcontext off the stack.
Return a copy of the current instance.
Match the request against the adapter.
Create a new application context and push it on the stack.
Check if a distribution is editable.
Add preprocessor function for url value.
Add url defaults function.
Get the root path for the given module or module.
Jinja2 template loader
Run completion command.
Get the domain of the cookie for this application.
Check if a package is installed in a wheel.
Yield the paths to the uninstallation files for the given distribution.
Check that the wheel is compatible with the installed version.
build one wheel from req to output dir
Iterates over all symbols in the code object.
Write a pip delete marker file in the specified directory.
Check if the current virtualenv is running under a virtualenv.
Returns the current user s username.
Create a distutils scheme for the given distribution.
Parse cache control headers.
Cache the response.
Load a template from the given path.
Saves the current state of the object to disk.
Convert the given value to the appropriate value based on this configurator.
Add filters to filterer
Add handlers to a logger.
Configure common logger configuration.
Execute a python script file.
Temporarily overrides the temporary directory for the duration of the context.
Get url and revision from Git repository.
Get an item from an object.
Generate code from source code.
Get the default cache location.
Find eggs in a zip archive.
Find on a given path.
Declare a namespace.
Returns the mro of the class.
Find an adapter for the given object.
Ensures that a directory exists for the given path. If it does not create it.
Iterate over all entry points for a given group.
Returns True if the given distribution can be added to this distribution.
Evaluate a marker expression.
Run markerlib and return the result.
Formats the given record using this logger s formatter.
Returns the decimal quantum of a number.
Get the precision of a number.
Return scientific notation elements.
Class decorator that patches a class to be a string module.
Check that requirements are satisfied.
Fetch the build egg.
Roll the dice.
Convert obj into a price object.
Creates a price attribute.
Validate the given request.
get method from app
Apply method with args.
Returns the current module or blueprint.
Returns the blueprint for the route if any.
Return the abstract dist for the given req.
Walk reqs and call handler for each.
Return a list of all namespace packages.
Encode obj as JSON.
Tokenize a docstring with an annotation.
Annotate two HTML documents.
Copy annotations from src to dest.
Compress a list of tokens.
Serialize a list of tokens with markup func.
Expand a list of tokens into HTML.
Find the end of the unbalanced section.
Break up a list of chunks into a list of tokens.
Flatten a BeautifulSoup element.
Split text into words.
Return start tag.
Return end tag and extra text.
Serialize an HTML fragment.
Removes the tags from the document.
Returns a cache URL for the specified operation.
Recursively link all elements in el that do not match any of the avoid regexes.
Find and kill all conditional comments in a document.
Create a DOM document from a string.
Export the package to the given location.
Get the revision number for the given location.
The name of the module.
Propagate exceptions from the configuration.
Auto find instance path.
Update the given template context.
Handle the given exception.
Handle an exception that occurred in the request.
Raise routing exception.
Dispatch the request and return the response.
Return a response object with the default options.
Create url adapter.
Inject default functions into endpoint.
Yield unique values from an iterable preserving order.
Handle packages that may require a package.
Convert a pip. requirement. Requirement to a string.
Convert a pkginfo. txt file into a metadata dict.
Yields all the modules in the directory.
Iterates over all classes in the module.
Yields the names of all methods in the module.
Returns True if the given path is a module path.
Yields all directories and files under the given base directory.
Dump default values into kwargs.
Set default values for kwargs.
Set many keys and values in the cache.
Increments the value of a key by delta. If the key does not exist it is initialized
Return a string representation of the object.
Build a dictionary of editable options from a request string.
Populate self. link attribute using finder.
Returns the absolute path to the source directory of the build.
Remove the temporary pip build directory.
Return the distribution object for this package.
Return a list of site configuration directories for the specified application.
Iterate over all module files.
Spawn a new process and wait for it to exit.
Convert a string to a plain text type.
Try to find the ca bundle.
Parse a docstring using the specified treebuilder.
Parses the given stream as HTML and returns a DOM document.
Parse the fragment of the input stream.
Returns a list of translations for the given word.
Reads a file and returns a list of tokens and a list of strings.
bind to the server
Print the report message to stdout.
Load the bytecode from the file - like object f.
Stylesheet a set of parameters into a dictionary.
Run a subprocess command on the target system.
Get the implementation version.
Return a list of distros for the given location and basename.
Find external links.
Open a local file or directory.
Return a list of paths removed from sys. path.
Returns a set of all directories in sys. path.
Add a package to the system path.
Add a sitedir and all its contents to the system path.
Check if the user site is the correct one.
Add str to default codecs if locale is str.
Set the sys. setdefaultencoding function to the default locale.
Automatically insert eggs after local site packages.
Fix classpath in sys. path.
Wrapper around subprocess. popen that enqueues lines of output in separate threads.
Check if installed pyrex is installed.
Convert pyrex sources to language.
Runs the application and renders the traceback.
Return the content of a resource.
Check if name is a valid URL.
Unpack a file from a link.
Download an http link.
Check if a file exists in the download dir.
Register a currency with the global currency system.
Shortcut for register exchange action.
Decode the data.
Return the default template context processor.
Render the given template with the given context.
Render a jinja template.
Render a Jinja2 template string using the given context.
Parse a version string.
Returns True if the name is declared in this function declaration False otherwise.
Visit a name node.
Visit a from - import node.
Create a WSGI service and serve forever.
URL encode obj with charset and return it as unicode string.
Return wheels that match the requirement.
Populate a requirement set.
Export the archive to a specific location.
Lookup Amazon SageMaker products.
Iterate over pages.
Returns the ancestor of the browse node.
Returns a list of amazon browse node objects.
Safely get an attribute from the root object.
Get the text of the element at the given path.
Safe get element text or date.
Price and currency.
Price as percentage and currency.
Override the default send method to add caching headers.
Build a response.
Capitalize the first letter of each string.
Compare two values using a constant time algorithm.
Verifies the signature for the given key value pair. Returns True if the signature is valid False
Derive the key from the salt and the secret key.
Get the signature for the given value.
Sign a value.
Verifies the signature on the given value.
Unsign the given value.
Sign the value.
Validate signed value.
Serialize obj and return a serialized string representation.
Handle server error.
Yield packages that don t have parents.
Yields all relative paths to all directories under base path.
Prepare the response for the given request.
Unsign a wheel file.
Unpack a wheel file into a directory.
Install scripts for distributions.
Arrange all graphs
redraw the canvas
Get the node with the given id.
Change the connection string of all edges in the graph.
Add edges to object.
Called when a canvas component is changed.
normal left click handler
Called when the canvas is changed.
Clears the current canvas.
Unmap and map the domain model.
Unmaps the given model.
Maps an element.
Parse data using the xdot library.
Process font tag.
Process an ellipse.
Process a polygon from a list of tokens.
Process a list of tokens representing a polyline.
Process text.
Process image.
Render a GridFS file.
Saves the given object as a dot file.
Loads the object from the dot file.
Check if the given point is inside this box.
Draws the bounds line.
Perform the dot graph wizard.
Create the sqlalchemy engine and session.
Parse self. dot code.
Create a new model.
Open file dialog and parse the dot file.
Save the assembled model to a file.
Saves the model to a file.
Configures the traits for the given info.
Configure the nodes of the tree.
Configures the edges of the model.
Generic godot edit
Add a new node to the control graph.
Add an edge to the control graph.
Add a subgraph to the control graph.
Add a cluster to the control graph.
Request a graph to be edited.
Godot options.
configure dot code
Prompt the user to exit.
Move components to the origin.
Save object to file like object flo.
Load object from file like object flo.
Save the instance to a file.
Load an object from a file.
Create a property that will alias the value of the property with the given name.
Parses a text file into a list of words.
Returns a list of start words.
Add a markov chain.
Remove chain by name.
Build the chain from the source.
Create a new dot file.
Remove a node from the graph.
Returns the node with the given id or None if no such node exists.
Delete an edge from the graph.
Add a subgraph to the graph.
Called when a program is changed
Set new node lists for all edges in the graph.
Parse a graph from a dot file.
Parse a. dot file.
Build a topological graph from a list of tokens.
Get time units and multiplier for given seconds.
Formats the given number of seconds in the specified time units.
Changes the name of the editor to the new name.
Create the editor ui.
Break an iterable into windows.
Get the children of the given object.
Append a child to an existing object.
Insert child into object at index.
Delete the child at the given index.
When children are replaced add a trait change listener
When the children of the given object change.
Get the label for the object.
Set the label of the object.
Called when the label of the trait changes.
Initialize the trait editor.
Updates the editor based on the current object.
Add listeners to the object.
Callback for nodes that were removed or added.
Nodes have changed
Add nodes based on a list of features.
Remove edges from the graph and add them to the graph.
Event handler for edges.
Add edges for the given features.
Parse an xdot directive.
Called when drawing the canvas.
Create a node from a graph.
Create an edge from a table editor.
Prepare the database connection.
Parse the xdot directive.
Parse the xdot label directive.
Called when drawing properties have changed.
Called when the position of the widget changes.
Called when the position of the widget has changed.
NORMAL right down event handler.
Highlight info.
Draw the mainlayer
Checks if the given point is inside the polygon.
Draw the mainlayer.
Dispatch an event to all registered engines.
Run the loop.
Get full url for given page number.
Render the prev and next links of the page.
Render the seo links for the current page.
Create a URL identifier from user and password.
Discovers the modules in the specified directory.
Search for modules in a directory and return a list of module names.
Searches sys. path for modules that match mname.
Ensure that a directory exists.
Create a new text blob.
Checks a card number for Luhn check.
Load a Python module by name.
Adds a path to the list of search paths
Searches for a module in the search path.
Splits a line into multiple lines.
Remove all namespaces from the root element.
Return a string describing the consistency of the distribution.
Create an instance from a YAML specification.
Merge another dict into this one.
Executes the actions specified in the constructor.
Add details to the error message.
Emit a record.
Add image rendition to context.
Log an attempt for the given key.
Add url to queue.
Start the worker threads.
Set the value of a key.
Get the value of a key.
Recurse down the tree identified by the key.
Returns the header value for the specified key.
Delete a key.
Plot a heatmap.
Add a number of months to a timestamp.
Add a number of months to a date.
Is this a christmas period?
Use a music service.
Use a Google Storage service.
Reads in a CSV file and returns a list of lists.
Return a list of lists from the JSON file.
Writes the x y data to a JSON file.
Returns a list of tuples where the first item is the label and the second item is the
Returns a dictionary containing the mean of all records with the given label.
restore data from session
Merge dictionary b into dictionary a.
Find blocks for installed apps.
Verify that the given block is valid.
Register a new block.
Unregisters a block type.
Convert a file to MP3 and put it on the queue
Returns an update message if the specified version is reasonable. Otherwise returns a string.
Handle SSL redirect.
Parses a content type.
Parse value into a list.
Resize an image to fit a given width.
Download a file from the tube.
Connect to the remote server.
Upload a file to the server.
Connects to the music folder
Update input filenames.
read aphi from file.
Multiply a phi by scale parameter.
Read pure water absorption.
Read pure water scattering from file.
Read wavelengths from file.
write iop to file.
Build scattering fraction.
Build a.
Build self. c.
Build all iop instructions.
Set batch parameters.
Read a text file into a dictionary.
Convert string to float list.
Set handler for all signals.
Pseudo warning handler.
Default signal handler.
Pause the process for the specified number of seconds.
Exit the application with the given exit code.
Called when the user presses the status button.
Remove an event from the list.
Fetch a metric and return it sorted by number.
Get the signature of the function func.
Initialize a Signature instance from a partial instance.
Create a new set of arguments that can be passed to the executable.
Check to see if a file should be ignored.
Return a key for sorting files by priority.
VLQ to integer.
Parse user data header.
Convert seconds to a duration.
Print the details of the game.
Get batch data from UI
Search file name.
Write batch to file.
Process the data file.
display the graphic connection
Display error message.
Hide the error message label.
Runs the analysis.
Cancel planarrad.
quit application.
Saves the current figure
Opens the log file
Open the documentation file in a window.
Prerequisite actions
Toolbar button click handler
Moves the cursor to the normal mode.
Display the graphic at the specified coordinates.
Given a genesis vote a block of genesis and a private key return a lockset.
Sign this message with a private key.
Hash of the message.
Check if the connection is valid.
Issue funds.
Returns the last lock or None.
Returns the last voted block proposal.
Returns the last valid lockset or none.
Get the timeout delay.
Called when a proposal is received from the protocol.
Generate a list of private keys.
Calculate delay for packet.
Delayed deliver implementation.
Convert an address to the native contract class.
Update the filter with new data.
Variation of numpy. imgfromvgg.
vgg to vgg conversion
Returns the function layer of the specified name
get layer output by name
Get features for a single input x.
Generate a new key and write it to disk.
Finish the acquisition.
Release the database lock.
List of tables in the database
Remove flags from distutils. ccompiler.
Find the latest teradata installation.
Get a value from the configuration.
Set a value in the configuration file.
Print a table of code.
Write the default configuration file.
Set the filtered columns.
Fetch data as a string.
Convert string to float.
Returns a dictionary of specific gains.
Return a dictionary of device settings.
Wrap the given text with textwrap.
soapy wrapper for simplesoapy. detect devices
Set the center frequency of the PSD
Calculate the result of the FFT shift and crop.
Wait for the specified number of futures to complete.
Update the PSD using Welch s simple spectral method.
Read header pwr array from file f.
Write the data to the file - like object f.
Submit a function to the pool.
Return the number of repeats for the given integration time.
Create a buffer.
Set up the internal data structures.
Stop streaming.
Run cmake.
Filter datetimes by number.
Mask a datetime. datetime object.
Mask the given datetime using the cls. days format.
Return a list of datetimes to delete.
Given a list of datetime objects return a set of dates that should be kept.
Returns a list of dates to delete.
Get the spi control byte for a given command.
Read a single bit from memory.
Write a single bit to an address in memory.
Get the number of a given bit in a pattern.
Open the gpio interrupt pin and export it into the userspace.
Set the gpio interrupt edge.
Waits until the specified file exists.
Register a pin.
Deregister a previously registered pin.
Enables gpio interrupts.
Send a string of bytes to the Spi IB.
Render the tab.
Returns True if the given form has any errors.
Render a link.
Extract version of specified distribution.
Add string formatting to form kwargs.
Check the status of the response.
Perform GET request to Github API
Calculate the humidity.
Calculate the dewpoint given the temperature and hum.
Publishes the message.
Calculate the CRC for the given data.
Verify if the data is valid.
Unpack storm date into a string.
Determine if we should use the revision number in the archive.
Wakeup num times.
Run a command on the device.
Get new archive fields.
Parse the fields.
Update weather data in a list of pub sites
Initialize the logging module.
Returns a list of pub services for the given options.
Get the value for the current station.
Set the properties of the drone.
Set command arguments.
Publish the configuration to a file.
Fulfill the given requirements.
Push a new override value onto the stack.
Pop a value off the stack.
Temporarily override the current value in the context.
Extends the current context with the given additional context.
Pop an additional context from the stack.
Context manager to append an additional line to the current line.
Returns a list of field names without duplicates.
Interpret stats results.
Extract params from query.
Returns a pandas dataframe of the DataFrame.
Returns a networkx graph representation of the graph.
Plot the data.
Return a CSV representation of the result.
Add the widget and the template context to the context.
Returns a list of widgets sorted by position.
Returns a list of widgets that need to be updated.
Register a dashboard widget.
Unregisters a widget class.
Get the last update for this dashboard.
Save a setting for this dashboard widget.
Return True if we need to update.
Concatenates two or more arrays.
Check if arguments are valid Spark arguments.
Format axes.
Wrap a function into an array.
Align a multidimensional array with another axis.
Convert to spark format.
Convert this RDD into an RDD of integers
Given a plan and a shape returns a list of integers representing the number of chunks in the plan
Create a boolean mask for a given index.
Repartitions the RDD.
Create a stacked version of the tensor.
Align self with axis.
Returns the first element of the collection.
Compute the mean across records
Reduction along axes with variance along axes.
Compute the standard deviation along the given axis.
Reduction along axes with sum operation.
Compute the maximum across records
Reduction along axes with minimum value
Transpose the array.
Swap axis1 and axis2.
Reshape the array to the given shape.
Return the index of the first matching key or value in shape.
Return a new DStream in which each RDD has been cast to the specified type.
Return a new DStream in which each RDD contains all the elements of this DStream that
Convert to numpy array.
Convert argument into a tuple.
Pack args into a tuple.
Check that the shape is in the specified axes.
Test if two arrays are equal.
Convert a list of integers into a list of integers.
Convert slc into a slice with the given dimension.
Check if new and old can be transposed.
Check whether new and old are reshapeable.
Recursively stack all combinations of vals into a single array.
iteratively expand arbitrarily
Looks up a constructor based on the given arguments.
Create an array of given shape and type filled with ones.
Create an array of given shape and type filled with zeros.
Concatenate arrays along a given axis.
Discrete likelihood.
Discrete max likelihood arg.
Maximum likelihood estimator for discrete data.
Discretized version of the best alpha function.
Plot the probability density function.
Print the lognormal distribution and the likelihood ratio.
Strip turbo tags and attributes from html.
Configure yandex analytics.
Returns a list of tuples of tag name and value.
Return the md5 hash of the decoded key.
Return sha256 hash of the key.
Return SHA512 hash of the decoded key.
Convert a string to a long.
Decode public key from base64 - encoded string.
Process SSH public key data.
Process sshds packet
Process the ECDSA signature data.
Process the ed25516 type.
Parse the given keydata.
Returns a list of available mechs.
Main entry point for the script.
Initialize a setuptools or distutils setup.
Context manager to create a wave file.
djfrontend h5bp css format
Format HTML for DJFrontend.
HTML version for djfrontend fontawesome
Default version for djfrontend.
Replacement for djfrontend. jquery. py
Replacement for djfrontend. jqueryui. default
Return HTML for djfrontend datatables.
jquery datatables html format
Format html for djfrontend datatables version.
Return HTML template for djfrontend.
Scroll to djfrontend app.
Django version jquery smoothscroll template
Replacement for djfrontend. twbs. css
Replacement for django. contrib. auth. decorators. djfrontend ga.
Generate auth hashes.
Calculate the expiry time for a given number of minutes.
Generate a token for a user.
Override the default serialize method to add the username email and date fields.
Update user attributes.
Raise meteor. error.
Validate user token.
Check secure cookie.
Get username for user.
Create user and return token.
Log in a user.
Logout user.
Attempts to log in using the specified credentials.
Authenticate user and get token.
Authenticate user with resume token.
Forgot password.
Reset user password.
Recursively merge two dictionaries.
Get meteor id.
Get meteor ids for a list of object ids.
Get the meteor id for a given model meteor id
Given a list of meteor ids return a dict of object ids.
Get a single object from the database.
Set default values for operations.
Set default reverse for all objects.
Truncate the database.
Truncate the database.
Initialize the options for building meteor.
Set up options and finalize options.
Returns the path to the directory containing the given path.
Seed the random number generator with the given values.
Return the current state of the state machine.
Returns a random string of the given length with the given alphabet.
Iterates over all API endpoints of the given object.
Clear path map for all api providers.
Pretty print a value.
Called when the websocket connection is opened.
Called when the request is closed.
Called when a message is received from the client.
Yield ddp frames from message.
Process a DDP message.
Dispatch a message to the appropriate handler.
Respond to a CONNECT message from the server.
Respond to ping message.
Receive a sub message from a group.
Unsubscribe from a message
Send a method request to the API.
Pseudo - random socket. js info.
Main entry point for the script.
Print to stdout if verbosity is high enough.
Stop all servers and threads.
Run the worker thread.
Run the application.
psycogreen. monkey import patch psycopg.
Generate a meteor id.
Autodiscover API module.
Return the error as a dict.
Get an object from the cache.
Format and emit a record.
Add a resource object to the router.
Send a message to this registration.
Send a message to multiple registrations.
Get a list of inactive registration IDs.
Send a gcm message.
Send a message using the garbage collector module.
Send registration data in JSON format.
Send a request and return the response.
Get model by module location.
Search for a phrase in a Google Music library.
Translate a phrase using the Google Maps API.
Search trending.
Get information about a GIF
Return the screensaver object.
Upload tags to a giphy repository.
Convert all int values in data to integers.
Fetch data from the specified endpoint.
Get trending images.
Lookup a GIF by ID.
Upload a GIF file to the repository.
Provide access control.
Authenticate with youtube.
Upload a video.
Check video upload status
Update a video entry.
Delete a video entry.
Check the availability of a video.
View for a video.
List of videos owned by a user.
Youtube direct upload.
Upload a new video.
Upload a video.
Delete a video.
Get a single entry for this video.
Saves the video. If there is no id creates a new one.
Delete the video.
Updates the metadata for this bucket.
Updates the value of a metadata field.
Update this item.
Parse a string into a list of nodes.
Convert a list of newick trees into a newick string.
Load a YAML file.
Loads a YAML file into a Python object.
Parse a string representation of a node.
Create a new string node.
Newick string representation of the node.
Returns the node with the given label.
Prune the tree rooted at this node.
Remove internal names.
Remove leaf names.
dispose of a JSON string
Require a setting to be set.
Get a list of values for the named parameter from the request.
Decorator to wrap a callback into a partial function.
Get the value of a cookie. If default is None return the value of the cookie.
Delete a cookie.
Redirect the user to the OpenID server.
Get authenticated user.
Make an OAuth request.
Redirect the user to the OAuth provider.
Concatenate url and args.
Parse a HTTP header line.
Add the given value under the given name.
Returns a list of values for the named attribute.
Parse one line of the config file.
Parse headers into a header object.
Return the normalized header name.
Encodes the given value as UTF - 8.
Convert bytes to unicode.
Converts bytes to a unicode string.
Recursively convert any object to unicode.
Check if auth plugin is installed.
Select policy based on origin and request method.
Returns the number of occupied points within the given spacing of the given grid.
Write a gro file
write a pdb file
Determine the molecule numbers based on the total number of molecules relative to the
Resize a PBC object for lipids.
Yield lines from a resource file.
Log a message for the specified user.
Message a list of users.
Get cached messages for user.
Add messages for authenticated users.
Check config file.
Verify profile name.
Extract data from config file.
Extract password from config file.
Update the config data with the given message.
Add password to configuration.
Create a new profile.
Display the required items for a specific message type
Get data from user.
Get authentication from user.
Configure a profile.
Write data to the configuration.
Write auth to cfg. pwd.
Sends the message to the server.
Create a message of the given type.
Validate input.
Validate twilio.
SlackPost validation.
Validate value for attribute attr.
Runs the send coroutine in a thread.
Send message to the coroutine.
Get the body from a file.
Remove keyword arguments from a dictionary of keyword arguments.
Send a message of the given type with the given arguments.
Get chat id for user.
Send the message via HTTP.
Send this message.
Get the SMTP server for the given address.
Generate the email message
Add email headers to message
Add the body to the email message
Add the attachments to the email message
Get smtp session.
Get ssl object.
Get smtp session with TLS enabled.
Sends the email.
Save tag collection to file.
Unload the image.
Get a region of the image.
Validates that the bundle is correctly formatted.
Remove all elements from the container.
Reads data from file.
Delete this chunk and its parent chunk.
Resize the file to the given size.
Insert a chunk into the packet file.
Save the frame to a file.
Deletes the file specified by filename. If filename is None the current filename is used.
Parse a file.
Processes a line of input.
Add lines to the source file.
Draw a string in the given font.
Parse ISO 8601 time string.
Takes a list of words and adds HTML quotes to the beginning and end of the words
Convert a word into an HTML string.
Makes an HTML paragraph from a list of words.
Makes the code.
Render a list of items as HTML.
Save the dictionary to a file.
Update the parents of the given atom.
Run a game.
Register a mapping for a given product and vendor ID.
Get a controller from the registry.
Sign a string using HMAC - SHA256
Get request headers.
Send a GET request to the API.
Send a POST request to the API.
Send a DELETE request to the API.
Convert the given value to the type specified by kind.
Change resource record sets.
Returns the total size of the data in bytes.
Find the last page of a given serial number.
Set the docstring section for the given name.
Add markup to the document.
Process the content and return markups.
Get markup by tag name.
Create a hosted zone XML writer.
Attempt to lock the given file object.
Insert a number of bytes into a file.
Delete bytes from a file.
Convert bytes or text to UTF - 8
Add a change to the model.
Parse a change info element.
Return the width of a string.
Returns True if the object has been modified since it was created.
Delete this hosted host record.
Save changes made to this resource record.
Read up to size bytes from the file.
Delete all keys starting with key.
Add a frame to the cache.
Update the apics that are common to all versions.
Unload the sound.
Set the number of points in the voice loop.
Return a list of adobe glyphs and values.
Filter glyph names based on a list of glyph names.
Dump a list of encodings to a file.
Dumps the contents of the array to the specified file - like object.
Check if a file exists.
Make a list of files.
Parse a single hosted zone element.
Parse the delegation set element for a zone.
Write a list of Blocks to a string.
Group multiple paddings into a single padding.
Delete the file.
Saves the file to disk.
Parse a RRset alias element.
Parse the RRset element into a list of strings.
Parse an RRset element.
Add a record to a hosted zone.
Create mx record.
Create a new namespace record.
Create a new CPtr record.
Create a new SPF record.
Create a new srv record.
Return a dictionary of values for a change.
Write a change in XML format.
Write a change batch for the given change set.
Initialize logging configuration.
Return the item associated with the given alias.
Freezes a dict so that its items are sorted by the key num.
Join HTML attributes into a template and a list of attributes.
Initialize the application.
Initialize all the bars in the container.
Bind a bar to the container.
Returns the arguments of the function as a dictionary.
Checks if the current view is the current one.
Validate that the metric class is correctly configured.
Get statistic by name.
Calculate statistics.
Auto - discover installed apps.
Dump metric data as CSV.
Manage statistics.
Get the value of a GET variable as an array.
Get the value of a request GET variable as a boolean.
Get the next colour.
Get gecko parameters from the request.
Returns the number and cumulative count of a gecko board.
Returns a tuple of the latest count and a metric title.
Chart for geckoboard.
Grab the latest count from the geckoboard
Main funnel for geckoboard.
Returns a list of the currently active stats.
Register a gadget.
Returns the context dictionary for this table.
Print error message and exit with code.
Prompt a user for a long amount of input.
List user input.
Prompt the user to input a filename.
Returns the schedule for the given year.
Returns the winner of the game.
Returns the season.
Surface of the reference frame
Returns the coin toss of the game.
Return the weather table as a dictionary.
Returns information about the ref
Returns a pandas DataFrame with the number of games played in the season.
Returns the league standings as a pandas DataFrame.
Returns the team stats table.
Returns DataFrame of votes cast for each roy.
Returns a pandas dataframe containing the line - score of the game.
Returns the season of the date
Returns a pandas DataFrame containing player stats for the specified table id.
Return a unique key for the given class instance args and kwargs.
Return the age of the person.
Returns a pandas DataFrame containing stats for the specified table id.
Returns a table of stats for all games in the group.
Returns a table of the total number of items in the collection.
Returns a table of performance data for the entire cluster.
Returns a table of statistics calculated for the number of pages per 100.
Get advanced stats.
Get shooting statistics.
Returns the most recent Partial Partial Partial Partial Partial Partial Partial
Returns a DataFrame of basic gamelogs for the given year.
Get current value from session.
Expand details columns in a DataFrame.
Add team columns to features.
Add team features to a DataFrame.
Returns the initial win and tie score for a given line.
Returns a dataframe of passes for this object.
Returns a list of year awards for the given award id.
Returns a string of the team s name.
Get boxscores for a given year
Return information about keyword in the year.
Return a list of head coaches for the given season.
Return the schedule for the given year.
Return the coordinator for the given year.
Return coordinator for given year.
Returns the stadium link for the given year.
Return the scheme name for the given year.
Return the alignment string for the given year.
Returns all splits for a given year.
Get html from url.
Return the next item in the queue without consuming it.
Get a direct item from the queue.
Close the socket.
Get a batch of examples from HDF5.
Get the remainder of a file.
Return a generator for the given path.
Yield protobuf objects from an INI file.
Dumps a list of Python objects to a file.
Read a varint from the file.
Returns an iterator over the contents of the file.
Close the file descriptor.
Writes the given objects to the stream.
Flush the buffer to the output file.
Get game directory.
Emulate the input of the given text.
Returns a list of trait descriptions.
Loop until the condition is met.
Busy loop until all traits are present.
Add exceptions to the list to ignore.
Executes the specified operation on the main volume.
Execute the given operator on the main source and return the result.
Send a message to the server.
Return the status of the device.
Power off.
Power on.
Set the volume.
Select a source.
Deobfuscate a request.
Calculate the CRC of a plaintext string.
Obfuscate a string by encrypting it and slugifying it.
find all missing schemas
returns a list of all hrefs
check if song name exists
parse html and return links
Returns the google url for a song.
Parse google page.
Downloads and parses Google Music s website.
Get html response
Download file using requests module.
download a file using wget
Search station codes by city.
Get the observation for a given location.
Parse observation response from iaqi.
Returns the list of compilers used by this code object.
Returns the mimetype for this file.
Mime type of the first compiler found.
The extension of the compiler file.
Register a processor for a mimetype.
Unregister a processor for a mimetype.
Returns a list of paths to search for files.
Register default values for all of the supported file types preprocessors and postprocessors
import qt core
Get the netnode object.
add a netnode plugin name
Remove plugin name from netnode dictionary
Import settings from a. ini file
Export settings to a qt config file
IDA directory.
Iterate over all keys.
Simple error handler.
Create a DynamoDB table object.
List tables in DynamoDB.
Fetch all items in a category.
Return the metadata id for the given item
Return the timestamp of the metadata updated on the given item
fetch crate owner team information
fetch crate owner user information
Retrieve the versions of a crate object
fetch crate version downloads
Get crates for a given category starting from a given page.
Get a specific crate by id.
Fetch all the items for a given path.
Fetch all items for a given category.
Get questions from kitsune. io.
Fetch all events for a given category.
Return updated time on item.
Return the category of an item.
Yield events activities and users.
Return list of buffers.
The io priority value.
Release the context back to the pool.
Submit a list of blocks.
Cancel a pending IO block.
Cancel all submitted tasks.
Fetch all items for a given category.
Get the raw text of all cells.
Yield events from feed
Return list of export formats.
Permission factory.
Default view method.
Export a record.
Call a callable and record the time since the call.
Close the connection to the serial port.
Remove client from pool.
Increment a metric by count.
Send a timing metric to the client.
Add timing information since start time.
Send a gauge to the client.
Send a gauge delta.
Set the value of a metric.
Request a batch of data.
Create a new batch client.
Return a client for interacting with the unit unit.
Send all pending batches to the remote address.
Create a new batch client.
Flush all pending batches to the socket.
Create a new unit client.
Creates a new user with the specified attributes.
Interpret x as open math.
Interpret the given term as openmath.
Converts an OMObject to a Python object.
convert obj to openmath
Initialize the Flask application.
Yield valid choices.
Create a value for a field.
Generic any form.
Returns the data for a decimal field.
Format email field data.
Return random date.
Return random datetime.
Return a float field data.
Return the data for an integer field.
Generate random time.
Random choice field data.
Multiple choice field data generator.
Chooses a random item from the model.
Encode a Python object into XML bytes.
Publish a message to the distribution server.
Tag the build with the given version number.
Load a python module and return the module global variable.
Decodes the given data.
Precision to fixed
Format a number.
Convert byte string to numpy array.
Pack an array of bytes into a raw byte string.
Add a new configuration file.
Remove a value from the configuration.
Return a list of websockets.
Returns the websocket object with the given name.
Check if repository exists in workspace.
Sync the repositories for a workspace.
clone a repository
Check if the installed version is up.
Convert numpy. ndarray to voxels.
Create a numpy array from a list of voxel numbers.
Print the contents of the specified workspace.
Update a repository.
Add a console handler.
Execute a command and return the process object.
Load PNG file into numpy array.
Save a collection of images.
Print status for a workspace.
Print the status of a repository.
Get the block size for a given token.
POST data with chunking.
Load image from tiff file
Save numpy data to tiff file.
Load a multi - page image from a tiff file.
Write configuration to file.
Clone this executable from the given url.
Get version of installed package.
mix and match.
A decorator that prints the name of the option and the name of the option.
Reserve a number of ids for a channel.
Merge ramon ids into channel.
Check if the propagate status for the given token and channel exists.
List projects for a dataset.
get a dataset by name
List the datasets in this remote repository.
Parse the subparser.
Show the specified workspace or all workspaces.
Show the contents of a workspace
Show all workspaces
Returns the URL for the specified endpoint.
Guess the format of a file based on its extension.
Open a file for reading.
Convert in file to out file according to fmt.
Convert a list of ramon objects to a dictionary.
Return the ramon representation of the given type.
Delete a channel from a dataset.
Returns a nd json string.
Create a dictionary of information about a particular dataset.
Create a dictionary of channel values.
Create a project dict.
Identify image size.
PUT data to the specified endpoint
Find the path of a repository.
Returns a list of public access tokens.
Returns information about the project.
Set meta data for a token.
Returns requests. get request object.
POST request to url.
Sends a DELETE request to the specified url.
Load layers from HDF5 file.
Save array to hdf5 file.
Infer gaps in a tree.
Recover from nvim io.
Install jinja2 translations.
Perform exclusive namespace acquisition.
Returns the percentage of the total for the given part and total.
Get cache stats.
Get slab number from cache.
Return context data as a dict.
Show server status.
Dashboard page.
Show server stats.
Slabs page.
Convert a number of bytes to human readable bytes.
Find a config object in the children dictionary.
Add environment variables to the environment.
Apply applicator to self. fpath.
Returns the full path to the file.
Returns the contents of the file
Write data to file.
Configure the logging system.
Create the file if it does not exist.
Apply the applicator to this node and its children.
Returns the full path to the file.
Remove this directory.
Prepare the environment for this node and its children.
Recursively clean up this node and all its children.
Returns the absolute path to the given relative path.
Returns a list of all files in the directory.
Write data to a file.
Returns the contents of the specified file.
Add a file or a list of files to the tree.
save the current state of the object to disk
Load the configuration file.
Remove the temporary file if it exists
Load all plugins in the specified directory.
Return a child config node.
Get the value of the field.
Apply the parser to a string.
Build callback url.
Read input from socket and process it.
Sends the output data to the NGPU socket.
Send a request.
Read data from a socket.
Write data to a socket.
Returns a dictionary of settled and rcv modes for the link.
Configure the PN link.
The source address of the link.
The target address of the link.
Called when the session is closed.
Create a new sender and return it.
Request sender.
Create a new receiver.
Create a receiver link.
Called when a link is destroyed.
Close the session and all associated links.
Process an endpoint event.
Extend markdown.
Called when the receiver link is closed.
Called when a receiver fails to connect.
Get host and port from server address.
Connect socket to given host and port.
Create a server socket.
Return a list of connections that need processing.
Read data from the transport.
Create a new sender instance.
Reject link identified by link handle.
Create a new receiver link.
Called when the connection attempt failed.
Called when the connection is active
Called when the connection is closed
Handle connection error.
Get the color string.
Returns a ttf dictionary.
Set compression flag.
Add an object to the buffer.
Output a stream to the output buffer.
Write stream to output file.
Add a new page to the parent.
Set the color scheme for the canvas
Set default font.
Add a PDF page to the document.
Set font size.
Add text to the PDF.
Add a newline to the current page.
Add pie chart.
Output the pages.
Returns a list of page indexes that need to be changed to reflect the orientation of the page.
Output all fonts.
Output the images.
Output the image.
Apply a transformation to the current matrix.
Returns the absolute position of x y.
Set the style of the line.
Rotates a point by the angle specified.
Set information about the project.
Set display mode.
Write the document out to file and return the output.
Write PDF header.
Put the pages into the document.
Put resource dict.
Put information into the database.
Put a cross - reference trailer.
Fringe - D sequence generator.
Given a list of sequences and a function that returns a generator yielding the values of the sequence
Yield the Gosper sequence of the given sequence.
Repeatedly brent a list of sequences.
Check if the x - axis fits the given test length.
Returns True if y value is greater than or equal to test length.
Test if x is greater than another coordinate.
Test if ordinate. y is greater than test ordinate.
Return a copy of this cursor.
Add dx to self. x.
Add another y - coordinate to the y - coordinate.
Draws the text.
List tags.
Returns all labels with the given name.
Delete a tag.
Creates a new label.
Returns a list of the users.
Get all tags with a specific label
List hooks.
Sphinx extension setup
Returns the path to the themes. py file.
Performs a POST request.
List all hosts.
Get log set.
Corrected duration in days.
Update the attributes of the model.
Run the optimizer.
Bin of the energy system.
Free memory.
Receive data from the socket.
Generator that yields lines from the internal buffer.
Return status code and message.
Generate info message.
Generate an error message.
Return a list of capabilities.
Read mode.
Send quit command and close socket.
Return a datetime object from the command.
Get command and help message.
Generate new newsgroups.
Generate new news entries.
List all active newsgroups.
List active times.
List all newsgroups.
List overview.
List the extensions in the network.
Generic list generator.
Returns a list of values.
Send an XZ compressed message header.
Generate a pattern using the XPAT protocol.
Execute the Xfeature command and return a boolean indicating wheather the command was successful.
Returns the offset of the given value.
Make a POST request to the API.
Perform an HTTP DELETE request to the given URL.
Make a GET request to the API.
Returns a list of queries scheduled for this account.
List tags for the current user.
Get tags by name or id.
Delete a tag by id.
Create a query on the account.
Delete a tag from this query.
Parse a newsgroup line.
Parse a HTTP header line.
Convert a dict of headers to a string.
Perform a POST request
Run a set of tests.
Generate a docstring for the defaults class.
Set the value of the field.
Check that the value is of the correct type.
Get or set the value.
Check if value can be converted to scalar.
Returns the symmetric error.
Set validation errors.
Set the bounds free errors and value.
Import metrics.
Extract a dictionary of metrics from a list of dictionaries.
Filters out metrics that do not match the filter.
Call the API.
Apply terminal alternation to text.
Return an operator expression.
Add an operator to the string.
Initialize the properties of the class.
Returns a list of parameter objects for the specified parameter names.
Return the values of all of the parameters.
Get the errors of all the parameters.
Clear derived parameters.
Set HTTP method.
Get environment variables.
Call the API.
Validate scene info.
Verify satellite ID and satellite stations
Get the size of a remote file.
Validate the bands parameter
connect to earth explorer
Normalizes a datetime.
Join an iterable with a delimiter and an optional escape character.
Get the list of newline positions in the given text.
Points a source code string to the specified position.
dump relay output to stdout
Remove all relays that match the filters.
Create instance from list of files.
Set number of files and chance of each file.
Main entry point for the script.
Return a retyped version of the text.
Return text with a special handling token.
Returns the parsed grammar as a string.
Returns a list of rules.
Returns a list of all comments.
Returns a list of all the directives in the file.
Returns the compiled source code.
Compiles the token definition to a python string.
Get the imports for this module.
Returns a string representation of the token type.
Get class definition as string.
Get the name of the entry point.
Return source code for given rule.
Returns the transform for the given rule.
Return an asn representation of the expression tree.
Convert a node to an Asn1Value object.
Given a list of operands and a predicate function return the operands hoisted according to the predicate function
Remove grouping groups from an optree.
Convert the given node into Python code.
Convert an OpTree node to Python code.
Convert an ast. Terminal to a list of Python code.
Returns a list of code lines for the given option group.
Converts the given repetition group to a list of Python code lines.
Convert the given special handling AST node to a python code string.
Return a list of code lines for opr.
concat to code
Convert an ast. Op exclude to a list of Python code lines.
Return a list of code lines for an ast. multiply operation.
Return a list of code lines for the ast op repeat.
Find all directives that satisfy a given condition.
Flatten a child expression into a parent expression.
Handle API results.
Returns wx. ID for given wx. ID
Remove a hotkey from a control
Add command line arguments.
Configure logging module.
Validates the arguments.
Recursively postfix a list of nodes.
Convert a list of nodes from postfix to an optree.
Reduce a list of nodes into a single node.
Load the manifest file.
Get the column lengths of the fields.
Returns the maximum length of each column in the metrics table.
Escape all underscores in metrics.
Output markdown for fields.
Output markdown formatted metric data.
Generate markdown output
Parse the given text and return a parse tree.
Attempt to consume the given text.
Add command line arguments
Parse date or datetime from string.
Outputs the data in CSV format.
Outputs JSON data to stdout.
Output raw JSON data.
Output XML data.
Default parser for trimmed pred.
Print a tree - like structure.
Returns a partial function that can be used to perform a repetition of a string.
Process a terminal node.
Get text that matches the exclusion pattern.
Count leading whitespace.
Call extractor with text.
Returns the position of the node in the parse tree.
True if all children of this node are empty.
Add a string to the list of ignored values.
Check if the node is of the specified type.
Return a flattened version of the node.
Return a new parse node with trimmed children.
Merge this node with another.
Return a copy of this node with a new type.
Return a compressed version of this node.
Return the position of the line and column.
Position of max readed line and column.
Step forward to the next character.
Step forward to the next line.
Step forward to the previous line.
Returns the last readed line as a string.
Moves the cursor forward a specified number of characters. Returns the new position.
Save current context position.
Restore the previous context.
Return a string formatted representation of the function call.
Set the name of the signature.
Count the number of vars.
Count the number of functions in the model.
Add a set of signatures to the embedded scope.
Returns a new scope containing the union of the current scope and the given scope.
Update the set with the intersection of itself and another scope.
Returns a new scope that is the intersection of the current scope and the given signature.
Remove all signatures that are not in the set oset.
Returns a new scope that is the difference of the current scope and the given scope.
Add the symmetric difference between this scope and another scope.
Returns a new scope that is the symmetric difference of the current scope and the given scope.
Add signature to signature registry.
Remove signature from the scope.
Discard the signature associated with it.
Returns the first signature with the given number.
Returns the last signature.
Returns a new scope containing the symbol with the given name.
Get the signature corresponding to the symbol name.
Returns a new scope containing all the polymorphic functions in this scope.
Call the parent injector function if one exists.
Recursively normalize an AST.
Set the attributes of this node and othernode.
Check if the hit is valid.
Get compute signature.
Resolves the types in this type to the types in the parent class.
Returns a list of resolved names for the given type.
Set the name of the given type to the value of the given reference.
Delete local file if exists.
Delete a file from s3.
Delete a file from S3 or local filesystem.
Save the contents of the temp file to the local file system.
Saves a temporary file to an S3 location.
Save object to local or Amazon S3.
Find objects in S3 bucket.
Enumerate a set of strings.
Set one namespace in the chainmap.
Read until the end of the stream.
Push the rule nodes onto the top of the tree.
Remove and return rule nodes.
Return the value of the node n.
Parse stream content.
Begin a new tag with the given name.
Mark the end of a tag.
Set class rules.
Set hooks.
Add directives to meta. directives.
Evaluate a rule by name.
Evaluate a hook.
Checks if the next character is the given text.
Read one character from the stream.
Reads a character from the stream.
Read until EOF.
Read until the next blank character is encountered.
Check that the hits struct is compatible with the cluster hits struct
Add a rule clause to the namespace ns.
Adds the given parser r to the dictionary bnf.
Add a new rule to the parser.
Add a sequence to the parser.
Adds a parsing. alt node to the parser tree.
Add a range to the sequence.
Apply a parser function to a node.
Add a capture to the sequence.
Bind a CPT to a sequence.
Add a hook to the sequence.
Set parameter value and pair for param. pair.
Strips string from param. pair and sets param. pair accordingly.
Changes param. pair based on character c.
Updates param. pair and param. node.
Set hook name
add a parameter to hook. listparam
Get the rules from the parser.
Ignore C ++ characters.
Add a state to the state set.
Convert the state to dot format.
Writes the graph to a dot file.
Writes the graph to a dot file.
Return a string representation of the state machine in a readable format.
Return the next state of the tree.
Remove all dead states from the list.
infer a block of nodes
infer a subexpr
Infer a literal value.
Dump the nodes to stdout.
Return an ast. stmt that exits the scope.
Return a clause as a list of conditional statements.
Visit a call node.
Visit a true call node.
Visit a hook node.
Visit a rule node.
Visit a capture node.
Visit a scope node.
Visit the alternative part of a try node.
Visit a sequence node.
Visit a optional node.
Visit a node. n and return an ast. while statement.
Visit a node and return an ast. while statement.
Return dst after the last character of src indented by indent.
Set indent for all indentable objects in list
Recursively convert a list to a string.
Prints the given nodes to stdout.
Populate a graph from a sequence of match expressions.
Populate the given state register with the edges of the given sequence.
Build the state tree for the whole graph.
Compare two nodes for equality.
Build a grammar from a bnf string.
Build grammar from file.
Parse the source string into a node.
Parse a file.
Set node src to dst and return True if changed.
Set src s value to dst s value
Set dst. value based on expr.
Dump a Deposition to a dictionary.
Return recids in Venio12.
Get recids invenio2.
Get database check.
Dump a Token object to a dict.
Return count of users and their data.
Dump a User object to a json - compatible dictionary.
Get modified recids.
Get recids modified on the given date.
Get collection restrictions.
Get the list of revisions for a record.
Get all collections of a record.
Dump a record to a JSON string.
Get modified or modified bibdoc recids.
Dump a BibDocument record to a dictionary.
Dump a RA object to a JSON - compatible dictionary.
Load common model with data.
return a dictionary of all entry points
Initialize Flask application.
Get run sql.
Run a query on the database and return a list of actions.
Dump a Spotify API Token to a JSON dict.
Load token data.
Import record.
Get the value of a config var.
Dump a Crash object as a dict.
Get list of users.
Get number of users and all users.
Dump a User object to a dictionary.
Load deposit.
Create deposit and pid.
Load record.
Load records from sources.
Get profiler statistics.
Run the web server.
Dump profiling data to a file.
Delete the job.
Delete profiler.
Get the current status from the queue.
Calculate translation of images in parallel.
Merge multiple images together.
Add an array of ones along the dimension.
Create a new record from a dump.
Create a new record from a dump.
Update record with given revisions.
Create persistent identifiers for the given pids.
Delete record.
Create a new version of a file.
Delete all buckets associated with a record.
Return a list of pids that do not have a persistent identifier.
Sorts the files by filename.
Prepare pids for fetching.
Return True if the record has been deleted.
Load community record.
Load featured community.
Dump things to files.
Check something.
Delete the widget and all its event handlers.
Returns the magnitude of a vector.
Normalize a vector.
Transform the data by applying the tex coordinates.
Add bones to the dictionary.
Set the length of the bone.
Set the parent of the child.
Get the pivot point for the given data set.
Start a new animation
Set the current state of the camera.
Unset the current state of the scene
Set the state of the bone.
Unset the state of the transform.
Ensure that the model data for the given object exists.
Redraw the list of vertices and tex coords of the scene.
Draw the 3D model.
Set the model for this instance.
Writes the reports to disk.
Add a menu.
redraw the label
redraw the label
Draws the background.
Deletes a widget.
redraw the label
Register event handlers.
Register event handlers.
Add a label.
Quit dialog.
Update the progressbar.
Render all actors in the scene in 3D.
Render the world in 3D.
Returns True if the resource exists False otherwise.
Add a category.
Get the texture of the missing textures.
Get a model by name.
Load a model by name.
Get model data by name.
Add a widget to this group.
Draws the menu.
redraw the background
Redraw scrollable container.
Returns true if the given position is within the bounds of the mouse.
P - Value of the ratio.
Adds a layer at the specified z position.
Add an action to the hug api
Do the given action.
Register a new name with the registry.
Add a layer at the specified zindex.
Draws the widget and all layers.
Deletes the layered widget.
The border of the widget.
The offset of the widget.
Returns the size of the widget.
Read a mesh from an hdf5 file.
Make a connectivity matrix for a given shape.
Set fields.
Add one or more fields.
Check that the existing elements are allowed.
The space of the functional.
Edges of the mesh.
Returns a pandas. DataFrame containing statistical information about the current mesh.
Set an element tag to a node set.
Convert a node set to a surface.
Convert surfaces to element sets.
DataFrame of metadata for each field
Metadata as pandas series.
Make directories if needed.
Run the gmsh command on the mesh.
Read a Pandas dataframe from a history report.
Read a field report.
Convert a list to a string.
Returns a string representation of the Jacobian equation.
Return the set of unsorted labels of a DataFrame.
Parse the response and raise errors if needed.
Make a GET request to the API.
Write XY report.
Return error message.
Check if an exception is thrown by a descriptor.
Set the data of the object.
Returns the mode for the given axis.
Set the options for the axes
Create a new class based on the given class name function and attributes.
Cycle through messages and draw them.
Try to convert value to float.
Convert a string to a number.
Render a graph.
Force unicode.
Returns True if the mime type matches one of the include mime types.
Clean up domain name.
Returns the left - most part of the domain name.
Make hash kw.
Returns a dictionary containing the number of words in the SentenceSet that are not stopwords.
Index the given stream item.
Return the inverted list of tokens for the given hash.
Get the frequencies of the given hashes.
Yield tuples of key - value pairs for the given hash tf.
Create a stream of items from a function f.
Read a varint from the stream.
Reads an instance of cls from the stream.
Serialize Sorting Hat key.
Encrypt a streamitem.
Context manager to temporarily change working directories.
Strip prefix from string.
Strip suffix from string if it exists.
Check if a string is a subsequence of another.
Run the wsgiref server.
Shut down the HTTP server and close the socket.
Get error page callback.
Add a route to the router.
Resolve a route.
Resolve a non - literal route.
normalize pattern to remove leading and trailing whitespace
Return the response as a list of bytes.
Add a header to the message.
Set a cookie.
Return the status line of the response.
Content - type of the response.
Recursively delete a directory.
Returns a list of open file descriptors for the current process.
Attempts to fetch the given url for the given work unit.
Get the lines of a file.
Returns a random species and describer.
Generate a random adjacency list pair.
Morph a sentence.
Get similarity of a request.
Hiragana tool.
Find an entity.
Return the shortsum for a given review.
Search for a keyword.
List chronological information.
Initialize all stages.
Run the writers.
Run a series of incremental transforms on a stream.
Returns a new streamcorpus pipeline with the stages defined in the given configuration.
Return True if all mentions in chain mentions are mentioned in target mentions.
Return True if any mention in chain is in target mentions.
Match a stream item to a list of tokens.
Create a NER file from the specified XML file.
Terminate the child process.
Multiply a polynomial p by a constant n.
Yields all sentences in the text clean.
Create a label index for the given stream item.
Create a list of sentences for the given item.
cleansed file from i - chunk
Create a ner file for a given tagger id.
Remove punctuation punctuation and whitespace from a string.
Instantiate all modules specified in the config.
Generate a chunk of data from a john smith pipeline.
Create a clean XML file from a chunk of data.
Remove punctuation punctuation punctuation and whitespace from a string.
Main entry point for the script.
Try to load a stage function from a module.
Load stages from external modules.
Initialize a stage with the given configuration.
Read bytes until stop bytes are reached.
Filter URLs based on configuration.
Create a list of labels.
Yields all paths in input dir.
Yields all tasks with the given key.
Return a random entry from the available table.
Returns a list of sentences for the given nerdom.
Verify an MD5 hash of a string.
Get S3 bucket.
Decode data according to config.
Extract a single chunk from a bucket.
Convert a stream id to a kvlayer key
Convert a kvlayer key to a stream id.
Return a tuple containing the md5 hash of the URL and the stream number.
Main entry point for the script.
Build an argument parser.
convert sentences to char tokens
Convert a list of tokens to char offsets.
Add an element to the document.
XPath - return the piece of XPath.
Returns the index of the text element.
Yield all descendants of the given element.
Returns a list of elements in the source XML document.
return all XML elements with the specified name in the source XML document
Select XML elements that match a pattern.
Returns an iterator that traverses the XML tree following the given element.
Call inkscape with the given arguments.
Export an image using inkscape.
Exports an SVG file to a PDF file.
Export an SVG to PNG.
Returns a Jinja environment for the given file path.
setup template file and environment
Fills the file with the given docstring.
Save content to file.
Load a doctype from a template file.
Replace characters in docstrings with svg code.
Renders the graph to the specified file.
Render the template to a file.
Parse the given XML source using the given expat handler.
Parse source markup and return a fragment.
Insert text at the start of the element.
Insert node before ref node.
Clone this node and return the new copy.
Return a string representation of the node s XML value.
Insert a child into this element.
Parse the config file.
Get Google credentials.
Create event datetimes.
Create an event.
Main entry point for google - event.
Get file extension.
Add extension to filepath if it doesn t already exist.
Create a temporary file.
Remove all files with the given extension from the given workdir.
CSV to JSON conversion.
Replace a string in a file.
Run the parser.
Check next tag.
Wraps a tag to make it italicized.
Wraps the given tag if necessary to make it strong.
Wraps the given tag with an underline if necessary.
Parse the attributes of a tag.
Remove line breaks from a tag.
Parse the href into a string.
Parse the value of an attribute.
Given a dictionary and a list of translation keys translate the keys to the values specified in the translations
Return a JSON string representation of the object.
Find all files in a folder that match a regex.
Concatenates multiple strings together.
Matches strings starting with a given substring
Checks if the full string contains the part string
Yields a boolean value from the given sequence
Apply the expression expr to each element of seq.
Looks up a sequence of values in a postgresql table.
Replace characters for svg code.
Check svg file.
Merge multiple pdfs into one.
Embed a list of font files into an svg file.
Embed a font into an SVG file.
Check if all inputs are of the correct type.
Check if the function has the correct number of arguments
Recurse down the input tree and execute the function.
Create an input string from a list of options.
Recursive function to add options to the tree.
Recursively convert an object into a string.
Convert an object to numbers.
Convert an object to a sequence of booleans.
Yield string representations of the AST.
Change the encoding of a file.
Save text into a qrcode file.
Launch an option.
Calls the specified command with the specified arguments.
Convert a. tex file to a. pdf file.
Returns a list of the options that my invokes.
Transform geometry from one spatial reference to another.
Create a geometry object from a string or list of strings.
Expand this range by expanding other into num bases.
Intersect this envelope with another.
Check if this envelope intersects the other envelope.
Return a polygon of the current ring.
Create from znm and znz.
Writes the dataframe to a CSV file
Selects a table based on a condition.
Return the table at the given nuclei.
Return a table that contains the intersection of self and table.
Return a new table that is the difference between self and table.
Return subset of elements with odd or even number.
Return a collection of the evenly odd elements.
Return subset of elements with the index evenly divisible.
Returns a Table of the differences between self and self.
Returns the binding energy of the system.
S2N Derivative of the singular value decomposition.
Derivative of the S1 number.
S to P matrix
Derivative of S1 p.
Returns a pandas DataFrame derived from self. df using formula.
Wraps a function that uses the database session.
Derive the key from the master password.
Create the database if it doesn t exist.
Search for domains by name.
Get or modify a domain.
Create a new domain.
Extracts the contents of the HBS file.
Returns the vsi prefix for the given path.
Return the SRID of the user.
Main entry point for the script.
Update file from url.
Return a dictionary of available drivers.
Find driver by file extension.
Convert a shapely geometry to an array.
rasterize a raster layer
Open raster file.
Create raster from bytes
Copies a raster object to another raster object.
Returns a dict of all available options.
Create raster at path
Set the geotransform.
Read the data stored in this object as an array.
The envelope of the current transform.
Returns the image driver
Create a new raster.
Return the masked array for a geometry.
Returns the nodata.
Read raster data.
Resample the image to a new size.
Save object to file.
Set the projection for the dataset
Warp this image to another spatial reference.
Calculate the number of chunks needed to encode a chunk of data.
Lookup alphabet for charset.
Encode the chunk at the given index.
Convert chunk to long.
Returns a chunk of data at the given index.
Return a compiled regular expression for the given file.
Normalize a date.
Detect timezone.
Convert this object to a dictionary.
Runs the given job handler on the given connection.
Worker entry point for the asyncio event loop.
Run a worker pool.
Set the classification.
Send a message to the socket.
Turn on a light.
Turn on a switch.
Turn on the specified brightness.
Turn off a device.
Send messages from the queue.
Send a message and wait for a response.
Set nature.
Set config files.
Yield tuples of option name and value.
Create a new configuration file.
Update the configuration with a dictionary.
Read a configuration file.
Read configuration files.
Return a list of possible option names.
Return a list of sections for this command.
Build the argument parser.
Parse command line arguments.
Return a bash compliant command list.
complete bash completion
Start the master server.
Called when a connection has been established.
Called when a line of output is received.
Called when the connection is lost to the server.
Called when a job is loaded from the pool.
Process a response from the server.
Terminates the execution of the job if it is running.
Add a job to the queue.
Close the connection and all the workers.
Change the state of all waiters.
Add a new result.
Add a new future to wait for the future to be completed.
Load a job from the queue.
Mark the job as done.
Add a result to the queue.
Cancel all the jobs.
Wait for the number of jobs to be completed.
Distribute jobs from the active job to the ready jobs.
Add a list of jobs to the queue.
Get a job from the queue.
Return a job from the pool.
Add a result for a job.
Set the active job to done and distribute jobs.
Close the browser window.
Remove duplicates from a list preserving the order.
Match a regex against an object.
Get region.
Filter entries based on filters and exclude.
Get public dns name of instance.
Create a new instance from a dict.
Get an attribute from the object.
Create a new instance from a boto instance.
Returns True if the attribute matches the filter.
Returns a string representation of the IP address.
Add a timestamp to the event dict.
Create a structlog logger
Setup a celery application
Deletes a job.
Return configuration section as ordered dict.
Handler for config subcommands.
Prepare the rows of a table.
Get a color from a string based on its hash.
Returns a random string of the specified color.
Check if credentials are valid.
Check token for user.
Check if a process is running.
Dynamically import a module.
Returns the IP address of the remote host.
Make a request
Prepare post parameters.
Run an application.
Render the template with the given name and value.
Streams a list of dictionaries to the console.
Returns the number of network days between two dates.
Get the path to a command.
Build ssh command string.
Create a lsi profile from command line arguments.
Add a relationship to this model.
Returns a list of related objects for the given type.
Load relationships from source.
Add a part to the container.
Load a part from the given data.
Find the file extension for the given file name.
Create an instance from an XML element.
Parse a chatl input string.
Build the JWT token.
Assign force field to AMPAL object.
Find the maximum radius and npnp.
Make force field parameter dictionary.
Return a file - like object representing the file.
Yields all the segments that start with the given name.
Returns a list of all filenames in the given directory.
Returns a list of all directories in the given directory.
Create a prefix for the given directory.
Delete a file from S3.
Ensure that the user is logged in.
Returns the loudest word in the specified language
Return the URL of the home page.
Return the list of hotspots.
Get a keeper token.
Upload a new build.
Determine if a travis event should be skipped.
Confirm that a build is complete.
Recursively update a dictionary.
Main entry point for the keeper script.
Edit a file or directory.
Command line tool to pack a directory.
Split a path into drive parts and tail parts.
Get editor for given filepath.
Process a module node.
Generate html for chart.
Generate html for chart.
Serialize a data object into a chart string.
patch json data
Convert json to html.
Convert dict object to pd. dataframe.
Write html to a file in a folder.
Returns a chart instance for the specified chart type.
Encode the given xfield and yfield.
Infer url from tarball.
Create a new build.
Delete an app.
Generate a random binary string.
Generate a random IPv4 address.
Generate random datetime. date object.
Return a session object.
Make a request to the API.
Create a new build.
Check the status of a build
Generate a sequence of strings with the given prefix.
Register sub commands to a parser.
Returns the root argparse class.
Returns the description of the method.
Get the help text for this command.
Run the appropriate command.
Encode a single dataset.
Get a list of all the athletes.
Get the last n activities.
Returns a pandas dataframe with the activity stats for the given athlete. athlete is the name of
Retrieve activity data for a given athlete and file.
Returns the endpoint string for the given athlete.
Returns the URL for the activity endpoint for a particular athlete.
Make a GET request to the golden cheetah API.
Create a new tarball.
Create a URL from a view or list.
Returns a random title for the given languages.
Generate a random person.
Generate a random last name.
Renders the template and returns self.
Set dataset and series.
Render the axes to a string.
Check if type is in types. Otherwise return type.
Returns the full url for this request.
Opens the document in a web browser.
Saves the file to fname.
Returns a file - like object for the URL.
Returns a PIL image object for this URL.
Write the contents of this URL to the given file - like object.
Return checksum string.
Return a random decimal amount.
Return unprotected and protected claims.
Return the signing keys as a JWKS dictionary.
Unpack metadata statement.
Pack a metadata statement into a signed statement.
Evaluate a metadata statement.
Corrects federation usage in metadata.
Extend a request with a dictionary of SMS messages.
Parse the command line arguments.
Add command line arguments to an argparse parser.
Apply logging options to log files.
Log msg % args with severity VERBOSE.
Returns a dictionary mapping each letter to its number.
Find all the anagrams in a word.
Return the class and its name as amp - separated string.
Transform data from one timeseries to another.
Get the last value from a timeseries.
Validate a page number.
Get a page of items from an iterator.
Equivalent to unix chmod.
Make an internal signing service.
Make a signing service.
Sign a message.
Create a new resource.
Update metadata statement.
Update the signature for the given location.
Yield bundle instances from JSON data.
Create a bundle from the given data.
Returns a list of URLs for the given asset type dependent on this asset type.
Render HTML for the asset type and its dependencies.
Generate HTML tags for all asset types.
Return url with protocol if not present.
Returns a list of hrefs for the given URL.
Listen for clients to connect to.
Get the list of modules in the project
Import modules.
Select one or more fields from a nested dict.
Apply a date map to a document.
Print a cursor to the screen.
Prints the result of the cursor to the screen.
Returns a list of dependency graphs for the given tasks.
Add dependencies for default departments
Add default dependencies and sequences.
Create a new sequence in the database.
Create all tasks for the given element.
Returns the value for the given section and key.
Add a new component factory.
Remove a factory from the container.
Connect to a remote peer using a protocol factory.
Called when data is received on a connection.
Disconnect a connection from the specified connection.
Call a remote command.
Called when a connection is made to the remote device.
Handle a multiplexed connection response.
Called when data is received from the server.
Send data to the remote host.
Called when the connection is lost.
Returns the local protocol for the given connection identifier.
Called when data is received on the remote side.
Disconnect from the given connection.
Center a string on the current terminal line.
Print the clock on the right.
Build a version number string.
Identify the framework for a given target unit.
Assert that the value is convertible to the target unit.
Pad data to block size with leading zeroes.
Remove padding from data.
Sign the given request.
Gather metadata statements for the specified context.
Pretty print a word.
Argument parser.
Main entry point for the script.
Process incoming data.
Called when a unregistered type is received.
Create a stub for the given URL.
Check if the callid is in the local or remote to local cache.
Return a tuple of regex and completers for this command.
Convert a string to a list.
Return a string representation of the object.
Verify the metadata.
Parse the remote response.
Return a list of databases.
Sync local files to S3
Build a package.
Create a readonly fridge.
load data from json file
Create a JWT signed by a keyjar.
Create a JWT signed by signing keys.
Discovers all modules in a test directory.
Entry point for librarian.
Return the score of a letter.
Calculates the score of a word given a list of letters.
Read a word list from a file.
Check if a word is a valid scrabble word.
Process a string received from the device.
Get command and responder for given command name.
Parse values from request.
Write a response to the client.
Stop receiving boxes and call the connection lost method.
Build and return a protocol object.
Create a key jar from a JWKS string.
Load a JSON key bundle from a string.
Process nova event.
Process cinder event.
Process a neutron event.
Process a glance event.
Process swift event.
Process a message using keystone.
Process a heat event.
Run the wsgiref. simple server for this instance.
Print msg to stdout with optional logging.
Prints msg to stderr followed by an optional log instance.
Register a subcommand class.
Register a command sub class.
Returns the string representation of the given value.
Parse the given string as a Python value.
Update completer dictionary.
Run the ternya work.
Initialize connection and consumer.
Initialize modules.
Create nova consumer.
Create cinder consumer.
Create the neutron consumer.
Initialize glance consumer.
Create heat consumer.
Enable a notification for an openstack component.
Get information about a song.
Downloads a song to disk.
Iterates over the instructions of the basic block and executes them.
Load a value from the globals dictionary
Call a function at the current stack position.
Dump a MySQL database into a temporary file.
Called at interpreter exit.
Run the application.
Context manager to temporarily change working directories.
Recursively copy a directory tree.
Starts a debugger for this exception.
Get the last modification time of a file.
Check if file has changed since last check.
Reads all the files in the fdir and updates the db accordingly
Clears the cache.
Scrape an IPDB feed
Downloads the image from the server and returns the filepath.
Check if the image has changed since the last refresh.
Find the caller of the calling method.
Returns the defining component of a peptide.
Entry point for the command line application.
Find a symbol in the stack.
Return True if root is contained in pe.
Return True if the module is global.
Get data type name.
Return two lists of related attributes.
Create a namedtuple enum from a edt.
Factory for bridge functions.
Create a namedtuple namedtuple containing all the functions associated with the given external entity.
Create a function that interprets the given sync.
Make a constant from the constant pool.
Create a class method that can be used to execute an operation.
Build a derived attribute.
Make a simple association.
Construct a association for the given model and relation.
Create a component from the given bp model.
Run a single RPC call.
Accept the reply.
Reject a call.
Raise an exception.
Create a new call and wait for it.
Establish a connection to a call.
Handle reply to a request.
Guess the type name of the given value.
Deserialize a value for the given ty.
Get a single feature from the index.
Put a collection of items into the index.
Delete a document from the index.
Delete all documents from the index
Delete the index if it exists.
Yield features for all features with a given prefix.
Scan for all ids associated with a prefix.
Query the index for documents with a certain value.
Returns a list of source names for the given feature names.
Return a list of filters for the given key ranges.
Returns a dictionary mapping features to their index configurations.
Returns the list of field types for this document
Returns a disjunction of the indexes in query fc with the terms in query
Return the number of bytes required to encode the features in fc.
Count the number of bytes that pass the filter.
Return a pretty string representation of a feature collection.
Process docopt arguments.
Default formatter for error messages.
Given an instance and a Link return a string representation.
Generate a pretty unique identifier for the given instance.
Check uniqueness constraint on the given model.
check integrity of link
Check subtype integrity.
Basic string transformer.
Delete all rows from the table.
Returns a list of the keys associated with the given index with the given prefix.
Store the given ids and fcs in the index table.
Put raw value into the index table.
Yield tuples of indexes for the given ids and fcs.
Returns the index for the given name.
Add a direction to a string.
Get the name of a type.
get refered attribute.
Build the core type for the given schema.
Build enum type.
Build struct type.
Build user element.
Build a type from the given dt.
Build a class from an object.
Build classes for component c.
Build a schema for the given model and context.
Returns a pretty - printed version of the XML string.
Fetch bikes from the server.
Sets the positional information on the node.
Create a queue.
Returns the content and properties of a queue.
List queues.
List all exchanges.
Purge all messages from a queue.
Create the message body.
Reads the image if it has changed and returns the cached text.
Return True if the text is visible False otherwise.
Main entry point for xtuml.
Serializes the given value for the given ty.
Serialize association into a string.
Return a string representation of the class.
Entry point for the script.
Partition a collection into two lists based on a condition.
Django bidi context processor.
Given two instances inst1 inst2 and rel id find the link between them.
Compute the lookup key for the given instance.
Compute the index key for the given instance.
Returns the type for the given attribute name.
Creates a new instance of this class and adds it to the storage
Iterator over all the instances of the metaclass
Define a new meta class.
send a message to a zmq socket
Receive a message from a socket.
Runs the dead code command in the project directory.
Parse emails.
Decorator to wrap a function to return an RPC function.
Return a table of rpc specifications for the given application.
Normalize postcode.
Goes to the next line and returns it.
accept sys inst
Recursively visit children of inst.
Recursively accept ep and its children.
Get brightness.
Matches the expression with the given arguments.
Finds the closest match to the given position. Returns the position of the match.
return the selection for the next character at position position
Called when cursor position has changed.
Return the traceback information.
Get instance by name.
Appends the history to the history buffer.
Go up one line in history.
Ctrl + Shift + Backspace pressed.
Searches backwards for a substring in the history.
Goes forward in history.
Handle reply messages.
Returns True if history is locked.
Returns the edited value for the given index.
Sets the history for this edit.
Stores the current edit in the history buffer.
Clean up resources and close the console.
Convert a collection to a pandas DataFrame.
Set attributes from kwargs.
Subscribe to all topics.
Log a message.
Yield the results of a remote iterator.
Convert notebook to this version.
Get the importer for the given path item.
Replacement for sys. io import io
Override setuptools s default setuptools function.
Parse a requirement from a string.
Return parsed package info.
Collapse leading ws in txt into a single string.
Reimplemented to disconnect signals.
Reimplemented to connect signal handlers and event filter.
Return current cursor position.
Update the current item.
Register models in the admin site.
Return a list of disk partitions.
Return the total number of idle and user times for the CPU.
Return a list of cputimes for each cpu.
Reads from stdin and returns a string.
Read a block of data from stdin.
Update the visibility of the tab bar.
Create tab with current kernel.
Add tab with frontend.
Populates the magic menu.
close all window
Check if a passphrase matches a hashed passphrase.
Return indented short title for the item.
Returns True if the requesting user has permission to change the object.
Returns True if the requesting user has permission to delete an object False otherwise.
Recursively add the children of a node to the graph.
Make a binary tree with the given number of levels
Submit jobs to nodes in graph g.
Validate the tree.
Create a color table for a given class.
Return a copy of this color scheme.
Add color scheme.
Set the active color scheme.
Return the full path to the library.
Process IOPUB messages
Block until kernel is ready to be run.
Set the current style of the widget.
Get the format for the given token.
Get format from document.
Get format from token and style.
Find a command in a list of paths.
Normalizes a path.
Check that the distribution has all of the nsps in value.
Check that entry points are valid.
Check if the last blank line is a string.
Return True if src has at least two blank lines.
Replace the assign system command in the given line.
Replaces the magic string in the given line by the corresponding command.
Remove classic prompt characters from line.
Remove ipy prompt characters from line.
Find the number of indentation spaces and whether a line should be dedented or not.
Store lines in buffer.
Reset the parser to the original source and return it.
Process cell magics.
Append a line of text to the cell.
Transform a single cell.
Post a notification to all registered observers.
Returns a set of all observers for the given notification type and sender.
Add an observer for a message type and sender.
Update the status of the jobs in the queue.
report a group of jobs
Flush all jobs in the group.
Return a new component or dead component.
Report the status of the job.
Initialize thread.
Insert a new value into the field at the given position.
Returns a copy of the file.
Declare a special variable.
Create a list special variable.
Declare a set special.
Change of cwd.
Move the route num items between the locked and unlocked range.
Calculates the energy of the given route.
Returns a dictionary with default values for the given keys.
Check if the table exists and is up to date
Render a single check expression.
Create a table from a list of rows.
Create a link.
Returns the js file for the given url.
Returns a css file for the given url.
Create an HTML img tag.
Subtracts arg from value.
Multiply two numbers.
Divide a number by another number.
Return value % arg.
Get verbose name of a model instance.
Split line on pattern.
Add command line options to parser.
Remove builtin functions from the registry.
Find the url with the given name.
Yields all links with the specified explicit rels.
Split a string into a list.
Main entry point for the coverage script.
Add an action to the command.
Add an action code to the parser.
Print help on the command line.
Handle the help command.
Check if args are allowed in options. actions
Run Python code.
Print coverage information.
Unserialize a previously serialized object.
Set the display hook.
Calls the function f with the self as the first argument and returns the result as a string
Checks if the given string is a valid IP address.
Validate URL.
Validate url container.
Pull a value from the globals namespace.
Select n random ports and return them.
Calls the function with the given sequences and returns the result.
Get the last num lines from the readline history.
Set autoindent.
Initialize logappend logfile logstart magic.
save current sys module state
Restore the original state of sys module.
Register a function to be run after the hook is run.
Return a new main module.
Initialize user namespace.
return all namespace refs
Reset the session.
Delete a variable from the repository.
Remove all namespaces that match the given regex.
ofind property wrapper.
Find an object by its name.
Inspect the specified method on the specified object.
Initialize shell history.
Show the traceback of the given exception.
Print the traceback to stdout.
Show the traceback of a syntax error.
Insert new line before the next input.
Sets a custom completer for the specified position.
Set completer frame.
Run the specified magic on the specified line.
Find a magic by name.
Define a new macro in the namespace.
system raw command
Auto rewrite the input of a command.
Return a dict of the variables named in names for the current user.
Convert user expressions to strings.
Evalutes expr and returns the result.
Execute a python file.
Run a cached cell magic.
Expand variables in a command.
Create a temporary file.
End session and clean up any temporary files.
Broadcast a message to all subscribers of sender.
List all profiles in a directory.
Returns a list of bundled profiles.
Find dist matching req. key.
Returns the full path to a given file.
Returns the next line in the file.
Write a string to the child process.
Send a terminal interrogation.
Prepare regex pattern.
Prepare regex pattern.
Search the string buffer for the best substring that matches the search string. If no substrings match
Search the buffer for the best match to the buffer.
Unpack a directory.
Returns the last error.
Execute a command and return the output.
Find the coverage source for the given filename.
Returns a list of arcs that have been executed.
Returns a list of arcs that are not executed yet.
Return the arcs that have not been executed yet.
Return a list of branch lines.
Return the total number of branches.
Return a dictionary of missing branch arcs.
Return the exit counts for each branch line and the number of missing branches.
Set precision.
Returns the coverage of the current statement and branch.
Return the covered percentage as a string.
Highlight the given needles in the given haystack.
Highlight the given string using the given keywords.
Highlight the words in the given string using the given keywords.
Runs the given function in the context of the current process.
Remove the end of a string.
Return a marquee version of the input string.
Format a string for display.
Dedent a string.
Wrap paragraphs in num columns.
Find the optimal alignment for the given separator size and display width.
Returns the ith element of mylist or the default.
Build the kernel argument list.
SSH into the kernel.
Pretty print a Python object.
Pretty print a Python object.
Get the mro for a class.
Default pretty print function.
Pretty print a pretty class.
Print pattern and flags.
Prints the name of the object.
Prints the module and name of the given object.
Pretty print a Python object.
Decorator for registering a printer function for a type.
Add a pretty - printed version of a function for a type.
Add a string to the output.
Appends a breakable string to the output.
End the current group and remove it from the stack.
Flush the buffer and reset the width.
Pretty print an object.
Write a single row into an Excel workbook.
Get the clipboard content.
Get the clipboard content from the operating system.
Get clipboard content from tkinter
Get the build prefix for the current user.
Rekey the dikt dict.
Recursively extract datetimes from strings lists tuples and strings.
Recursively squash datetime objects into strings.
Default formatter for datetime objects.
Check for the existence of the pth file in the target directory.
Write a script to the install directory.
Sleep for t seconds.
Create argument parser.
Disambiguate topics from a text file.
Build the package finder.
Callback when the log level of the logger changes.
Return default logger instance.
Check that the flags have been updated.
Prints help for all registered classes and traits.
Prints flag help.
Print the list of subcommands.
Prints the help for this parser.
Prints the examples if there are any.
Update the configuration with a given dictionary.
Initialize a subcommand.
Flatten the flags and aliases.
Parse the command line.
Load configuration from a config file.
Generate the config file for this module.
Downsamples an array by k.
Format an info tuple into a string.
Write a message to the output.
Called when the configuration of a configurable instance has changed.
Returns a help string for the given class.
Get the help text for a trait.
Clear the instance of this class from all its subclasses.
Format a failed test.
lite crash handler
Flush queue and process events.
Start the channels and emit the started signal.
Read a notebook from a file - like object.
Read from p ignoring interrupts.
Split a string into a list of tokens.
Compress a DHT string.
Add a magic function to the dictionary.
Return a list of all the docstrings of all the magics.
Format a string for LaTeX.
Add a default option to the options table
Page reference for ipython notebooks
Create a task from a callable string.
Get information about a task.
Get the function from the info dict.
Calculate the next cron job run.
Submit the task.
Run the task.
Run asap.
Run a task for the specified number of iterations.
Runs the given callable for the specified amount of time.
Find url file.
Bind the kernel to the engine.
Create an interrupt event.
Run the thread.
Filter a namespace by a pattern and type pattern.
Recursively list namespaces.
Exclusive locks.
Draw the active figure if interactive.
Flush all currently open figures.
Print a figure.
Load ipython extension module.
unloads an extension module
Yields n random ports starting at port.
Initialize the webapp.
Handler for SIGINT signal. Stop confirmation thread and confirm exit
Exit the program.
Shutdown all kernels
Price options.
Replace multiple keys in a dictionary.
Render the prompt for the shell.
Create a. zip file.
Fixes the python version in the code.
Check if an object is mappable.
Returns the subsequence of seq partitioned at position p.
Runs the code in the specified file.
Run a source command.
Download a file from the internet.
Reduce a frequency list to a single array of frequencies
Compute n - digit frequencies for a given file.
Read a text file and yield digits.
Return a frequency matrix for the given list of digits.
Generate two - digit frequencies from a list of digits.
Generate n - digit frequencies from a list of digits.
Plot two digit frequencies.
Plot one digit frequencies.
Print a debug expression in the current frame.
Reverse a URL using the Django reverse function.
Check if a string is private.
Run the script from src and print the result.
Runs a Python script in a temporary directory and optionally in the post - mortem debugging mode
Runs a test script in the module with the given name.
Return a dictionary of all the hashes under hashroot.
Compress the cache for the specified hashroot.
Returns a list of the keys of the directory.
Returns True if the record should be included in the ACL.
Format an error for a test.
Run interactive shell.
Get trans and meta writers.
Prepare directories for languages.
Write a list of po entries for each language.
Write the po header to the specified file.
Subscribe a user to this channel.
Initialize the option parser.
Run python module.
Run Python code from a Python file.
Compile a Python source file.
Load Python code from a Python file.
Returns an HTML table representation of the item matrix.
Set the current value.
Cancel completion.
Selects the index of the given cell.
Updates the list with the given number.
Return a dictionary mapping words to their frequency.
Print word frequency data.
Return a string representation of the XML document.
Writes the document to a file.
Validate a pin.
Send a shared pin.
Delete a shared pin.
Send a pin to a user.
Delete a user pin.
Subscribe to a topic.
Lists the subscriptions for the specified user.
Begin the progress bar.
Context manager that starts a task and then closes it.
Context manager for subtasking.
Update the total number of worked units.
Create a submonitor and add a listener.
Mark the task as done.
Make sure that the build directory is correct.
Load a set of pyconfig files.
load config from file
Load a flag from a dictionary.
Decode a list of strings into a list of unicode strings.
Load configuration from argv or sys. argv.
Convert the configuration data to a configuration object.
Try to find a module by its name.
Relay a stop event to the callback function.
notify the start of processing
notify stop of data
Interrupt then kill.
Find the command line arguments for the program.
Restart the walker at the first n lines.
Copy a local file to a remote machine.
Fetch a local file from the remote host.
Returns the number of engines.
Start n engines.
Start the next n jobs.
Context to be used when no context is specified.
Parse the output of the command and return the job id.
Write the script for a batch of jobs.
Start a batch of jobs.
Create context menu.
Append a JPG image to the end of the screen.
Append a PNG image to the end of the screen.
Appends svg to the end of the line.
Add image resource to document.
Copy image to clipboard.
Get image by name.
Insert an image.
Insert svg string.
Save image.
Called when exiting the program.
Initialize environment variables.
Rewrite the input of the command.
Tell the kernel to exit.
Set the next input.
Read a configuration file.
Get a list of values from a list option.
Return a list of lines for a given option in a given section.
Set timid from environment variable.
Set attributes from keyword arguments.
Load a configuration file.
Set attribute from config file.
Set the delimiters for this expression.
Split line into parts.
Returns a list of global words that match the given text.
Returns a list of words that match the given text.
Called when the greedy attribute of the splitter changes.
Return a list of aliases that match the given text.
Returns a list of matches for the given text.
Attempt to complete the given text.
Match one record against a set of tests.
Returns a list of records that match the given dictionary.
Extract a subdict from a record.
Return True if quiet is enabled False otherwise.
Write output prompt.
Write formatted string to stdout.
Log output to the logger.
Raise an exception if the operation is frozen.
Convert MySQL timestamps to Python datetime. datetime.
Called when the event loop has changed.
Run one iteration of the simulation.
Publish pyin code.
Send an abort request.
Clear the screen for idents.
Return the topic for this node.
Send the shutdown message and flush all shell streams.
Memorizes the module stack.
Remove modules from the stack and update sys. modules.
Returns the absolute path to the given relative or absolute path.
Return True if name is a file name.
Checks if obj is a class or subclass of class.
Check if the given path is a valid package.
Return a string truncated to num lines.
Return a new class with the same module and name as cls.
Get cpu times.
Get process cmdline.
Returns a list of open file descriptors for the process.
Returns a list of connections of the specified kind.
Check if user has group.
Resolves a class by its absolute path.
Return usage percent.
Login to Google docs.
get gdocs key
ensure temp directory exists
Remove temp files.
Upload file to gdoc.
Synchronize local and global po files.
Downloads the contents of the CSV file into the temp directory.
Uploads the po file to ods.
Empty the temporary file.
Create a new qtconsole instance
Check if the given url is accessible.
Check if the given URL has the given contents.
Get the HTTP response code for a given url.
Compares the content type of the given URL with the given content type.
Compares the response code of the given URL with the given code.
Validate data.
Clears the output of the console.
Create code units from a list of MORFs.
Returns the full rootname of the module.
Open source file.
True if file extension is a python file.
Returns the total number of seconds in the given datetime object.
Get a response from the queue.
Wait for all the outputs to finish.
Get metadata as a dictionary.
Abort the current action.
Returns the number of seconds that have passed since the last time the message was sent.
Wait for the progress bar to show.
Re - publishes a display pub.
Block until all outputs have been processed.
Block until all outstanding results have been processed.
Returns the absolute path to the specified file.
Prepare a list of patterns for matching.
Return the separator for the string s.
Find all python files under the given directory.
Remove self. relative dir from filename.
Returns the absolute path to the canonical file for the given filename.
Get the contents of a zip file.
Returns True if the given file path matches one of the patterns.
Returns True if the path matches one of the patterns.
Map self. aliases to canonical filenames.
main qt4 main loop.
Run the gtk embedding loop
Enable event loop for given gui.
goe number
Computes the difference in eigenvalues between the center of each matrix.
Computes the eigenvalues of the differential fluxes.
Returns a new instance of this class initialized with the given ctxt and step address.
Load the config file if it exists.
Writes the file to disk.
Erase all lines and arcs.
Dictionary with file names as keys and line numbers as values.
Dictionary with arc names as keys and their associated arc data.
Write line arcs and collector to file.
Read lines and arcs from file.
Return the raw data of a pickled file.
Read lines and arcs from a file.
Combine parallel data files.
Add line data to the editor.
Add arc data.
Add the executed lines and arcs to the hash.
Returns a summary of the file contents.
Get pasted lines from user.
Main loop for interacting with the user.
Replace a multiline history item.
Prompt the user for a line of text.
Edit syntax error.
exit interactively
Return url and revision.
Create a new frontend master.
Initialize colors for the widget.
Return information about the connection as a tuple.
Convert a numpy recr object to a numpy recarray.
Set the colors for the current active scheme.
Toggle the active color scheme.
Convert a structured traceback to text.
Create a structured traceback.
Formats a list of lines into a list of strings.
Print only the exception message for the given type and value
Set the mode of the join.
Ensures that fromlist is a list of strings.
Add line to code.
Adds a new section to the code.
Returns the code for the given function.
Return code for expr.
Render the template with the given context.
Perform dots on the value.
Render a template with the given context.
Return a dictionary of default formatters.
Set a printer function for the given type.
Set precision for floats.
Returns a list of user config files.
Configure the logging system.
Configure where to search for test files.
Page through a string.
Page a file.
Get pager command.
Get the start position of a pager.
Print a string to the screen and return the snip.
Pretty print o with unicode.
Convert latex output to PNG.
Returns a PNG representation of the given object o
Returns True if o can be printed in LaTeX syntax.
Print a string representation of o using LaTeX formatting.
Add command line options.
Validate list of strings.
Validate string dict.
Run the main loop.
Handle incoming messages.
Send complete message.
Get information about an object.
Send a shutdown message and wait for a response.
Flush all pending messages to the device.
Send a string input to the server.
Start all the channels.
Stop all open channels.
Returns if any of the channels are running.
load connection from json file
Launch the ipkernel kernel
Shutdown the kernel.
kill the kernel if there is one
Send a signal to interrupt the kernel.
Send signal to kernel.
Check if the connection is alive.
Return the shell channel object.
Return the sub channel object.
Returns the HB channel object.
Bind a ZeroMQ kernel to an application.
Print a debug message to stderr if debug level is > = level.
Returns a list of all registered extension classes.
Pre - step the first extension that matches the given step
Yields tuples of base directories and files for a given egg directory.
Scan a module for safe imports.
launch a new instance of ip. instance
Save connection dict to file.
load config from json file
Load a secondary configuration file.
enable auto - px mode
Disable automatic pixelation.
Run a single cell in the execution context.
Run tasks based on the heartbeat message.
Run the task with the given message.
Remove a task from a message.
Patch an attribute of an object if it does not exist.
Accept a connection from the pool.
Reject the connection.
Get an agent for this node.
Validates the form and saves the object.
Handle DELETE request.
Set user attributes when saving.
Check all modules in sys. modules to see if they need to be reloaded.
Opens a file in the editor.
Get the clipboard.
Add a function to the chain.
Return the installed wheel or develop version of the specified module.
Configures the logger based on options.
Import an item from a module.
Try passwordless SSH.
Try passwordless SSH connection.
Try passwordless SSH connection.
Establish a tunnel connection.
Open a tunnel to a remote host.
Stop scheduling tasks.
Unwraps an exception.
Register a new engine.
Unregister an engine.
Handle a execute reply message.
Send all pending notifications to the client.
Flush all results to the socket.
Flush control messages to the socket.
Flush all ignored control messages from the socket.
Flush the metadata for all messages in the socket.
Spin the container every interval seconds.
Stop spinning thread.
Flush all queued messages.
Apply a function to a socket.
Return hub history.
Query the database.
Returns a set of opcodes corresponding to the given names.
Get byte parser.
Returns a set of line numbers that match the given regexes.
Return the first line of a multiline string.
Returns a set of the first lines of the given list of lines.
Parse the source code.
Returns a list of arc lines sorted by line number.
Returns a list of child parsers for this code object.
Yield bytes and line numbers for this bytecode.
Find all statements in the file.
Return a string representation of the block stack.
Check that all chunks start with a minimum number of starts.
Yield tuples of arc lines.
Split the parser into chunks.
Returns a list of all arcs in this parser and its descendants.
Begin covering.
Run the coverage analysis.
Returns True if file should be included in coverage False otherwise.
Generator for interpreting a distro name.
Return a urllib2. urlopen object for the given url.
Get the parent class of an object.
Returns the engine root topic as a string.
Render a template with the given content and context.
Configure capture.
Format a test error.
Split data into num chunks.
Convert nb to this version using v2. convert.
Convert hex color to rgb.
Return a dict of colors for the given stylename.
Get a font by name.
Handle reply from interpreter.
Handle reply to a history command.
Handle pyout messages.
Handle display data.
Listen for channel changes
Execute the script located at the given path.
Process execute error messages.
Execute payload handler for item.
Set the default style sheet.
Edit a file.
Make a prompt with the specified number.
Make a continuation prompt.
Called when the style sheet of the document has changed.
Highlight syntax or style sheet if it has changed
Transforms a dictionary into a plain dictionary if it is a dict.
Return virtual memory information.
Get CPU time information.
Get process uids.
Get process gids.
Returns a list of tuples representing the threads running this process.
Returns a list of open files for the process.
Return the SHA1 of the commit of the package at the specified path.
Return information about the package at the given path.
Returns the number of CPU cores on darwin
Returns the number of CPU cores on this system.
Returns the next set number or none if there are no more results
Fetch one row from the result set.
Fetch multiple rows from the current result set.
Fetch all rows
Connect to a Discord object.
Read a JSON string and return a notebook object.
Read a py file into a notebook object.
Read a string or file - like object s content as JSON or Python objects.
Wrapper around nb. writes.
Write a notebook to a file object.
convert notebooks to metadata
Loads the value for the specified key from the specified dictionary.
Returns True if the given name matches the filter.
Determine if the given class should be included in the test suite.
Return True if the directory should be included in the output.
Check if the given file should be included.
Check if the given function is wanted by this plugin.
Check if the given method is wanted by this plugin.
Check if the module should be included in the list of wanted modules.
Returns a list of lines from a file.
Lists the lines of a pdb file.
Prints the lines between first and last.
find the line where the program is defined
Calculate the conversion factor between two currencies.
Convert currency value from one currency to another.
Given start date and end date return the exchange rate for that period.
Get stream encoding.
Get the default encoding to use when reading from stdin.
Write connection profile to file.
Initialize the heartbeat socket
Init session.
Initialize the io module.
Initialize the kernel.
Convert html to text.
Convert Markdown content to text.
Return the fully qualified domain name for the given domain.
Add command line options to parser.
Configures the exclude option for the nose environment.
Return True if we want to exclude the directory.
Check if there are any links to dynamic libraries for this extension.
Calls each function in funcs with the given args and kwargs.
Call a list of functions in reverse order.
Add a partial function to the end of the chain.
Insert a partial function at a given position.
Format the usage string.
Write the PID to a file.
Remove the pid file.
Get the pid from the pid file.
Constructs a parser from a magic function.
Returns the real name of the given magic function.
Highlight the given string in the current block.
Rehighlight the given block.
Sets the format for the highlighter
Copy control to clipboard.
Execute the given source.
Called when the prompt is finished.
Perform tab completion.
Create context menu
Reimplemented to handle Ctrl + Backspace key presses.
Insert continuation prompt.
handle complete reply
Handle execute reply.
Handle kernel died signal
handle object info reply
Handle pyout messages.
Handle stream messages.
Handle a shutdown message.
Execute a file in the temporary directory.
Interrupt kernel.
Reset the state of the interpreter.
Restart kernel.
Call tip of current shell channel
Send completion message to kernel.
Process execute error messages.
Callback function for processing a message.
Changes the document contents.
Add a plugin to the list of plugins.
Call all registered plugins and return the result.
Generate a sequence of results from the registered plugins.
Executes all registered plugins and returns the first result.
Configure the plugin.
Load plugins from entry points.
Load all builtin plugins.
Convert latex string to png string.
Convert latex to html.
Check if the requirement exists.
Return the interval as a dictionary.
Return the name of the process.
Get the CPU percent.
Return the percent of total memory.
Return a list of memory maps.
Check if the process is running.
Suspend the process.
Resume the daemonized process.
Send a signal to kill the process.
Wait for the subprocess to finish.
Wire up the kernel
Return True if identifier is shadowed by the given IP.
Register a transformer.
Unregister transformer.
Register checker.
Unregister checker.
Register a handler for a string.
Unregister handler for given esc strings.
Prefilter the given line info.
Find handler by line info.
Transform a line of input.
Prefilter a line.
Prefilter a list of lines.
Return the prefilter handler for the given line.
Return the appropriate prefilter handler for the given line.
Check prefilter for given line info.
Check if the given line is a prefilter.
Return line if line is indented.
Handles a single line of code.
Handle a prefilter line.
Process a single line of a command.
Handle a single line of input.
Run prefilter on the given line.
Reimplemented to hide when text edit is closed.
Overrides Enter event to hide the tip widget.
Qt method override. Draw the tip label.
Show call information.
Reimplemented to hide when cursor position has changed.
Canonicalizes the given path.
Dictionary of masked attributes.
Check if we are running in a virtualenv.
Compute the word frequency for each word in fnames.
Returns a list of aliases for the current platform.
Same as define alias but suppress errors.
Define an alias for a command.
Validate alias.
Call the given alias with the given arguments.
Transform an alias to a command.
Expand aliases.
Autohelp directive.
Resets the style.
Get QColor object for given color.
Return QTextFormat object.
Generate a new JWT
Clean expired JWTs.
Check if a token has already been used.
Validate a JWT token.
Returns the longest common prefix of the given paths.
Get size hint for this widget.
Returns True if the cursor can be cut.
Return True if clipboard can be pasteed.
Clear the input buffer.
Cut text from clipboard.
Get input buffer.
Set input buffer.
Set the current font.
Print control.
Prompt the user to the top of the screen.
Resets the font.
Append custom text before or after prompt.
Append html to the end of the line.
Add html to the end of the input. Prompt the user for plain text.
Add plain text before or after the current line.
Clear temporary buffer.
Show completion with the specified items.
fill temporary buffer with text
Return whether or not the key is a control key.
Create the Qt control for this edit.
Create page control.
event filter page keypress
Get plain text selection of block.
Get end cursor position
Returns the column number of the current input buffer.
Get input buffer cursor line.
Return the current prompt cursor.
Get selection cursor
Insert the continuation prompt at the cursor position.
Insert html into cursor.
Insert html at cursor position.
Insert plain text at cursor.
Keep cursor in buffer.
This method is called when the keyboard quits.
Insert text into page control.
Start the prompt.
Read a line from the terminal.
Set the continuation prompt.
Set the top cursor position.
Adjust scrollbars for the current page.
Main entry point for the metadata tool.
Copy a config file to the ipython notebook location.
Create profile dir by name.
Find a profile dir by name.
Returns the contents of a file as a string.
Create a temporary file and return the filename and file object.
Close the stream.
Write data to file and flush.
Add a new heart handler.
Add a failure handler.
Handle a pong message.
Create a list of mini - batches from a sequence.
Get the path and filename from a pathfile.
Print the elapsed time and the total time spent.
Returns the time unit of elapsed avg est.
Extract the configuration from a. cfg file.
Uncache a zipfile or zipfile - like object.
Quotes the given argument string.
Check if there are any conflicts in the distribution.
Set fetcher options.
Create directories if they do not exist
Check if file name is an archive file.
Create a new heading cell.
Create a new metadata node.
Create a new author node.
Returns True if path is a directory and is writable.
Unquote a filename.
Checks if the given filename is a file on the system.
Get the xdg directory.
Get the current ipython environment directory.
Returns the path to the ipython package directory.
get ipython module path
Returns the number of dependencies that are older than the given target.
Return md5 hash of file.
Check for old configs.
Update dictionary for guests and users.
Get suggestions for the given object.
Get suggestions for the given object.
Returns the relative path to the current working directory.
Returns a list of objects that match the pattern.
Returns the md5 checksum of the file.
Start profiling.
Print the report to the given stream.
Finalize method.
Disable the wx event loop.
Disable event loop for qt4
Enables GTK interactive mode
Enable tk for the current gui
Enable pyglet.
save the wavefunction to the global histogram
Initializes the database.
Runs SQL against the database.
Get information about a specific session.
Get the last n rows of the table.
Returns a generator yielding all lines within a range.
Return the full path to the hist file.
Name the current session.
Reset the history.
Get a range of lines from the session.
Store the output repr for the given line number.
Write out the input and output caches to the database.
Stop thread.
Get the number of CPUs on the system.
Get system and CPU times.
List of disk partitions.
Returns a list of pids.
Return a nice string for a pair of start and end strings.
Format a list of statements and a list of lines into a string.
Return a string representation of the current stack.
Join a list of regexes into a single regex.
Permanently remove a file.
Recursively update the MD5 hash of the given value.
Update self. profiles.
Stop cluster.
Search for a command in the current working directory.
Terminates the process and waits for its termination.
Find code units.
Run fn for each code unit found in morfs.
Causes the debugger to print the stack trace to stdout
Initialize the extensions.
Initialize the environment.
Run the exec lines.
Run all startup files in the workspace.
Executes the specified executable files.
Run code or file.
Runs the specified module.
Return full path to a static data file.
Returns the contents of a file as a string.
Escape a string so that it can be used as a literal.
Run coverage on the HTML file.
Make local static report.
Writes an HTML string to a file.
Return the hash of the file at the given location.
Writes the index file
Reads the status file from the specified directory.
Write the status file to disk.
Returns True if lst1 == lst2.
Get a slice of a sequence.
Splits a sequence into chunks of the specified size.
Read manifest file.
Translate a glob pattern to a regular expression.
Returns True if the filename matches any of the patterns.
Returns a list of files that are versioned.
start a new kernel
Shut down a kernel.
kill a kernel
Get kernel by id.
Returns a dictionary of kernel ports.
Returns the notebook associated with the given kernel id or none if no notebook was found.
Start the kernel for a notebook.
Shut down kernel.
Interrupt a kernel.
restart a kernel
create iopub stream for given kernel id
Create shell stream for given kernel id.
create hb stream for given kernel id
Remove all one - time properties from this object.
Converts html to an xhtml file and writes it to a file.
Remove leading and trailing whitespace from html.
Returns a unique instance of the given model or none if no such instance exists.
Build a query from a list of terms and a list of search fields.
Get a query from a query string.
Returns a query that will query the given date field greater than the number of days ago.
Return a query that will query the given date less than the given number of days.
get null or blank query
Add case insensitive fields to dict.
Add command line options.
Validate the attributes of this element.
Check if we want to use the given method.
Rotate ring.
Return the websocket url for this request.
Reserialize a reply message.
Inject a cookie into the request.
Start beating if necessary.
Stop heartbeat.
Loads the file.
Get the block index.
Seek to the block at the given index.
Edit a block.
Print the block for the specified index.
Print all the source code blocks to stdout.
Runs a function in a separate thread.
Return the source code for the traceback.
Find inspectable lines starting at pos.
Create a countdown tag.
Send signals to all engines and kill the controller.
Decorator to save the IDs of the messages that have been processed by this client.
Synchronize the results of a function with the client.
Runs f and spins after self.
Get all the messages in the mailbox.
Get a message from the queue.
Parse a URL into a dict.
Get the root modules of the current Python environment.
Returns a list of module completions for the specified line.
Implement Python s completer.
Quote an XML attribute.
Configure the plugin.
Writes the statistics and errors to a file.
Add an error for a test.
Add a failure to the error list.
Record a successful test.
Returns a random two - binary number.
Weighted random variates.
Register a new engine.
Unregister the given engine.
Handle any lost tasks.
Audit task timeouts.
Fail unreachable jobs.
Save any unmet dependencies for the given job.
Submit a task to the mon stream.
Dispatch the message to the appropriate handler.
Handle a result message.
Handle unmet dependencies.
Update the dependency graph.
Print the current state of the log.
Write a line to the log.
Write data to the log file.
Stop logging.
Create a new worksheet node.
Add a string to the bot.
Add a regular expression to the chain.
Dispatch a key.
Yields the flat matches for the given key.
Called when a notebook dir is changed
List all notebooks.
Create a new notebook id.
Delete notebook id.
Check if notebook with given id exists.
Find path for notebook with given id
Get path by name.
Get notebook metadata.
Return the last modified date and notebook object for the given notebook id
Create a new notebook from the given data.
Save a notebook from a string.
Save notebook notebook object nb.
Delete a notebook by id.
Create a new notebook.
Copies notebook to disk and returns notebook id
phys tokens generator.
Load default config file.
Return the default classes for this plugin.
Parse the command line.
Initialize ipython environment.
Initialize the interactive shell.
Displays the banner of the user.
Represent the type of an object.
Parse a notifier name into a list.
Returns traits for the given class.
Get trait metadata.
Check if the value is a subclass of self. klass or self. allow none.
Return the default value for this field.
Check if the circuit is completed or failed.
Returns True if there is at least one node reachable from the completed set or the failed set.
Returns the dependency as a dictionary.
Calculate the depth of a node in the tree.
Print a binary tree.
Attempt to disambiguate a DNS URL.
Apply a function to each element of the sequence and return the result.
Validate targets.
Dispatch monitor traffic.
Dispatch a message to the appropriate handler.
Handle a new heart.
Handle a failure of a heart.
Unserialize message and save it to database.
Save a message to the database
Send a connection message to a client.
Unregister an engine.
Finish a registration.
Send a shutdown request to the server.
Purge results from the database.
Extract content and buffers from record.
Get client history.
Query the database.
Context manager to temporarily change working directories.
Decode the output of a completed command.
Run a command under r root.
Dispatch a message to the appropriate handler.
Returns True if the parent session is the same as the current session
Annotate a set of morfs and report the results.
Returns the installed version of the given package.
Recursively squash unicode objects.
Extract message or header.
Check the packers and unpack them.
Create a message of the given type with the given content.
Sign a list of messages.
Sends a message list to the given stream.
Receive a message from a socket.
Save string as svg file.
Copy svg to clipboard.
Convert SVG string to image.
Return information about an object.
Get the docstring of an object.
Get source code of an object.
inspect. getargspec implementation.
Find the absolute file path of an object.
Find the source lines of an object.
Get the definition string for the given object.
Return a header line with the given height.
Prints msg % oname if oname is not None.
Print class or instance defintion.
Pretty print the source code of an object.
Print the contents of the source file for the given object.
Format a list of fields into a string.
Search for namespaces matching pattern in ns table.
Run twisted in a thread.
Return a string representation of the document.
Returns xml representation of the document
Loads all modules in the specified packages.
Invert a dictionary.
Convert an object to the primitive type.
Returns a list of figure objects for the specified number of figs.
Print a matplotlib figure.
Select figure format.
Return gui and backend.
Activate a matplotlib backend.
Configure inline support.
Start the thread.
Stops the current thread and warns about it.
Start a new Tracer.
Starts tracing and returns the installation function.
Install the collector.
Stop the tracer.
Pause tracing.
Resumes all tracers.
Return line data as a dictionary.
Collect all remote error exceptions and raise them.
Return a list of traceback lines.
Process coverage information from environment variables.
Returns the canonical directory for the given MORF.
Returns the source file name for the given filename.
Returns the canonical filename and the reason why it should be traced.
Determine whether to trace the given frame.
adds a warning message to the warnings list and stderr
Check for packages in self. source.
Start the collector.
Called at interpreter exit.
Returns a regular expression to match against the exclude list for which.
Saves the harvested data to a file.
Combine data and parallel data.
Gather data from the Python source.
Performs the MOF analysis for the given model.
Runs the code unit analysis
Run the report command and return the results.
Annotate the morfs with the specified annotations.
Run the xml reporter.
Reloads the data from disk.
Runs a shell command and returns the full path to the executable.
Run command and wait for it to finish.
Forward a file descriptor to another thread.
Read line by line and write to socket.
Find launcher class.
Start the daemon process.
Build launcher from class clsname.
Start the engine.
Start the engine.
get wx application
Return True if wx is running.
Start event loop.
Get Qt application instance.
Return True if the app is running in the event loop False otherwise.
Start event loop.
Create a blank canvas.
Draw a cross.
Draw a line from pos1 to pos2.
Create an annotated image from a grayscale image.
Generate a UUID.
Generate a unique key for the given dict.
Returns the domain part of the given URL.
get url args