convert sina xml to url list
dailymotion_download url - > download. txt
Download sina files.
Returns the given text formatted with the given colors.
Print to stderr.
print an error message
print a green log and then terminate the program
Try to detect operating system.
Return dictionary video_dict from ckplayer_info XML file.
get mgtv real url and segments size
legitimize a text string
Download content from cbs page.
Match all patterns in text with re. findall
Parse url query param.
Parse a host string.
get title by topic and part from json
Download wanmen files by course
Download wanmen files by course and topic part.
Check if task is in the queue.
Clears the event_buffer if dag_ids is None or all dag_ids if dag
Creates a connection to the snowflake DB.
Retrieves the AWS access key ID and secret key if available from extra_dejson
Get a field from the extras dict if it exists otherwise return default
Copies an SQL file into a SQL file.
Bulk dumps a table to a file
Upload a file to Google Cloud Storage.
get task state
Get a connection to the database.
Get instance details
Create instance and wait for operation to complete.
Delete an instance and wait for its termination.
Create a database for the given instance.
Delete a database from an instance.
Start the sql proxy.
Kill proxy process and remove the directory containing the SQL Proxy file if it exists.
Get the proxy version from the sql_proxy_path
Creates a new connection and adds it to the session
Retrieve a connection from the database.
Delete a connection from the database
Returns the SQL Proxy Runner.
Get the database hook.
Clean up database hook logging notices.
Reserve a free TCP port and assign it to the proxy
Attempt to normalize job_id to make it more human - readable.
Try to extract the error code from the given exception.
Delete all dag runs.
Delete all task instances of all dags.
Set paused state of dags.
Print the task stats to stdout.
Check the number of dags in the job.
Equivalent of mkdir - p.
Convert a string to a float if possible.
Make value aware of timezone timezone - naive datetime object
Convert naive datetime
A wrapper for dt. datetime.
Get a connection to druid broker
Return a requests. Session object that can be used to make requests to the API
Send a request to a given endpoint and return the response.
Check the response and raise airflowexception if needed
Run a request and check the response
Context manager to create a SQLAlchemy session and commit and close it.
Drop all tables from the database
Get the pretty version of an exception message
Query the database and return list of records
Return a pandas dataframe from a HQL query
= parameters )
rows = None ) returnrows
Get a new connection to the API.
Check if a collection exists in the database.
Creates a new collection if it does not exist yet.
Check to see if a database exists.
Creates a database if it does not exist yet.
Delete a database.
Delete a collection with the given name.
Insert a list of documents.
Deletes the document with the specified ID from the specified database or collection.
Retrieves a document by its ID.
Returns a list of documents matching the given SQL string.
Get a function by name.
Create a new function in the given project with the given body.
Update a function in the connected region.
Upload a zip file of a function to the Uploads API.
Delete function in this lab.
Get statuses of this dependency.
= None )
Get the reasons for failed dependencies
Parse a config file and return access and secret keys.
Get credentials for the given region.
Get a connected vertica db
Flush buffer to underlying logger.
If fileloc points to a zip archive then correct it to be a zip file. Otherwise return
Construct a task instance object from this task.
Start the dag as a child process.
Terminate the manager and send terminate signal.
Exit gracefully.
Start the scheduler.
Asynchronously start the dag parsing process
Start the agent in a non - blocking way.
Refresh dag directory
Print stats if print_stats_interval is over
Removes all nonexistent import errors from the database.
Log file processing stats.
Sets the list of file paths for processing.
Wait until all processors are finished
Kill all child processes and wait for them to finish
Return SSH connection to remote host
Create a transfer job.
Get a transfer job by name.
Return a list of transfer jobs matching the filter
Update a transfer job
Cancel a transfer operation.
Pause a transfer operation.
Resume a transfer operation.
Wait for a job to be in a certain status.
Finds task reschedule records for a task instance.
Return the number of slots open for this pool.
Run a command and return its output.
Allocate ids to the project
Begin a transaction on the project
Commit a transaction.
Lookup keys in the project.
Rollback a transaction
Run query on the project and return the result.
Get an operation by name.
Delete an existing operation.
Poll the operation until it is done.
Get the hostname of the airflow node.
Get a connection to the API.
Get the template field from the fullname.
Role for linking a template field.
Remove the orm from the database.
Appends paths to sys. path if not in sys. path.
Check if target_task_id exists and is ready.
Check if there is a configuration variable in the conf.
Convert an SQLAlchemy model object to a dictionary
Yield successive n - sized chunks from a list
reduce in chunks
Chain tasks together by num_.
Render a log filename.
Get a new connection to the API.
Submit a dataproc operation and wait for completion.
Deep string coercion to string
Handles the execution of the Databricks operator.
Run a pig command
Fetches the state of a celery task.
Returns the number of tasks that can be sent to a single process based on the number of processes
Return the number of tasks to use per fetch process.
Build and return a new Connection object authorized by the user.
Queries the ML Engine for the specified job ID
Wait for a job to be done.
Creates a new version of a model.
Sets a default version for a model.
Lists all versions of a model.
Delete a version of a model.
Creates a new model
Retrieves a model by its name
Write batch data to Amazon DynamoDB.
Integrates the plugins manager module with sys. modules.
Get the default executor
Get an executor instance by its name.
Raise AirflowException on error.
Get a SQLAlchemy connection to the database.
Trigger a dag
Delete the dag with the given id.
Get information about a task.
Get all pools.
Create a new pool.
Create or update a container group.
Get state exit code and detail status.
Get all messages for a resource.
Get logs of a container.
Delete a container group.
Check if a container exists in a resource group
Construct ingest query dictionary
Get the next message and push it to the context if it matches.
Query the task instances in the specified state.
Get task instance for given task_id.
Get the last dagrun that has executed before this one.
Get the last dagrun that has been scheduled for this execution
Verifies integrity of the internal state of the task.
jenkins request wrapper with headers
Convert a Context object to a dictionary of airflow variables.
Conditionally trigger a dag run.
Query the metrics with the given query
Get the dag with the given dag_id.
Takes a list of zombie tasks and kills them
Bag the dag and all subdags into the dags dictionary
Processes all the python files in the dag_folder.
Generate a DAGbag report.
Add days to datetime
Filter files in HDFS by regex.
Make sure that self. filepath points to the right file.
Clear task instances from the database.
retries ( self )
Get the current state of the task.
( self, str_ ) raise
Refreshes the task from the database
Removes all XCOM data from the database.
Return a unique key for this task.
returns True if all the taskids in the task are done
Returns the datetime for when to retry the task.
True if the job is ready to be retried
Check if the pool is full
Get the dagrun for this execution.
Push a record to XCOM
Initialize run context
Upload the log to the wasb server.
Return a connection to the API. Will build the connection if not already created.
Start an instance.
Get an instance template.
Wait for an operation to complete.
Check for the existence of a bucket
Creates bucket with given name.
Check if prefix exists in bucket.
List prefixes for a given prefix.
List all keys in the bucket matching the prefix
Check if key exists on s3
Get a key from S3
Read a key from S3
Check if a wildcard key exists in S3 using the specified bucket and delimiter.
Get a key from a wildcard key.
execute cql using cassandra hook
Convert a user type to a dictionary.
Get a connection to the speech API
Execute the query and return None.
Load airflow plugins from entry points
Check if plugin is valid.
Skip some tasks for a given execution date.
Get a connection to Azure File System
Check for the presence of a given file
Return a list of files and directories in path
Invoke the awsathena hook
Uncompress a compressed file
Query mssql database return cursor
Build a dictionary of metrics.
Create a cgroup at the given path.
Delete the cgroup specified by the path
Do an API call to the Databricks API.
Get Salesforce connection
Send a query to the db.
describe an object
Return a list of available fields for an object
Get object from Salesforce.
Convert a datetime column to a timestamp column
Get a mongo collection
Check if the mail has attachments by name
Get all attachments by name
get file name and payload
put records to the queue
Get status of a task instance based on the last reschedule period
Sends an email using the backend defined in configuration.
Sends an email using SMTP
convert datetime to utc
Check if a blob exists in a container
Check if a prefix exists within a container
) return str_ Load a string
Read a file from a container.
Delete a file from a blob.
Return a ftplib. ftplib. ftp object
Return a list of files in a directory.
Store a file on the server
Get file modification time of a file.
Executes the webhook command.
get a fileservice connection
Checks if a directory exists for a given share
Checks if a file exists on the server
= None ) : return :
) Creates a new directory.
, * * kwargs ) :
Uploads a string to a file on S3
Get a connection to the database.
Download object from S3.
Upload a file to a bucket.
Check if an object exists on S3
Returns True if object has been updated after ts
Delete a blob from a bucket.
Get size of object in bucket.
Get CRC32C of object in bucket.
Get MD5 hash of an object.
Returns True if the secondary training status has changed since the last time this function was called.
Get the secondary training status message
tar and s3 upload
Configure s3 resources.
Check if s3url is valid
Return a botolog. client. Client object.
Start a dataflow job.
Run migrations in offline mode
Run migrations in online mode from the database
Delete instance based on instance_id.
Delete a table from the dataset.
Update the cluster for the current instance.
Prepare the hive and jdbc CLI commands
Converts a dictionary into a list of hiveconf strings
Returns True if a table exists False otherwise
Get a PyHive connection to the database
Get the results for a HQL query
Get a list of records for the given HQL query
Get a pandas dataframe from a HQL query.
Get a conn to the API.
Get Airflow API endpoint.
Bind the parameters to the operation.
Escape a string for use in LIGO LW XML
Convert string field to the bq_type.
Validate that a value is of a certain type
Get a connection to the BigQuery SQL Server
Build and return the service object.
Check if a table exists in a dataset.
Cancel the query and wait for it to finish.
Delete a table from GCS.
Run insert or update on a table in the dataset.
Get a dataset by its ID.
Execute a SQL operation.
) return self
Fetch the next batch of rows from the queue.
Return a query to postgres
Make intermediate directories on the remote machine.
Runs the command and pipes the output to the subprocess pipe.
Remove the configuration file on finish
Entry point for the script.
build html header
build jschart string
Creates a x axis and adds it to self. axislist
Creates a y - axis with the given name and adds it to self. axislist
Get a connection to the database.
Get the last dagrun for a given dag.
Send message to SQS queue.
Send a JSON response.
Open a file or zip file if it is zipped.
Return a cache key for the given request arguments.
Get the connection to the service.
Get API key from connection string.
Return a requests. Session object for the current request.
Executes a command against the API.
Builds a payload to send to OpsGenie.
( self, context ) : = self. hook
Return a connection to the Redis server.
Run a query and return the query execution id
Check the status of a query execution
Poll query status until it is finished.
Return a pysftp connection object
Handles rate limit exceptions
Get a table from the database.
Get the location of the table in the database
Get cluster status
Delete a cluster and all of its data
Get cluster snapshots
Restore a snapshot of a cluster.
Creates a cluster snapshot
Make the call to Slack
Creates a job flow
Filter a list of dicts to those with a greater or equal file size
Filter a list of dictionaries for files with ignored extensions
Execute the mongo query and load the results into s3
Get a pool by name.
Create a pool if it does not exist already.
Delete a pool.
Convert python dictionary to google. protobuf. DataONE object.
Wait for an operation to complete.
Get an operation by name.
Appends label to cluster resource labels
Get the webhook endpoint from the connection string.
Build the payload to send to the Discord API
Sends the payload to Discord to the webhook endpoint
Encrypt plaintext with the specified key.
Get a connection to the speech service
Upload the log to S3
Get environment variables for worker.
Get secrets from kube_config. kube_secrets.
Build security context based on kubeconfig.
Return extra links to the qds task
Start the DAG process.
Check if the airflow process is done.
Exit gracefully.
Delete any previously uploaded files and add any new import errors.
Process task instances from the active dag to the dag itself.
Returns a map of the number of dags and tasks in the given states
Change the state of executable tasks in task_instances to queued.
Enqueue the task instances with their queued state.
Change state for tasks that failed to execute.
Process events from the executor
Update the counters
Manage the state of the executor.
Get a dag run for the given execution date
Task instances for a given dag run.
Set all unfinished dag runs to failed.
Check the task state and terminate the process if not running.
Get the client to access the API.
Get a single instance belonging to the provided project.
Delete an instance with instance_id.
Delete a database from an instance.
Poke if mail attachment exists.
Prepares an additional_properties dictionary for storage in the database.
Get a connection to the Cassandra cluster
Check if a table exists in the current cluster
Check if a record exists in a table.
Build the track driver status command.
Submit a Spark application.
Process the spark submit log.
Get the status of the spark driver from the status log.
Retrieve the appropriate task runner for the local task job.
Wait for the job to end.
Return query to mysql DB
Configure CSV file with given schema.
Upload schema to local file.
Get column type dictionary from schema
Maps a MySQL column type to a SQLAlchemy column type.
Deserialize self. extra as JSON
Scales the time_seconds_arr by the given unit
Returns the number of days ago
Initialize a role if it does not exist
Delete role by its name
Get user roles
get all permissions views
Check if user has any of the given roles
Check if a user has a permission
Clean all permissions
Merge permission with view menu if not exists
Update admin permissions
. create_perm ( )
Returns a fernet instance.
Parse the table expression and check for partition.
Use the hook to receive messages and poke to the hook s AWS connection
Get a HDFS client based on the connection id.
Get a webhdfs connection
Check for the existence of a file on HDFS.
Get connection to PinotBroker
Get the uri for the connection.
Convert a datetime. date object to a dict
Convert datetime. time to dict.
Returns a redis connection
get_pandas_df from sql
Execute the given SQL query or list of SQL statements.
Set autocommit on a connection.
Serialize a cell to a string.
Check scheduler health
Return a Cloudant session object to a Cloudant session.
execute Slack webhook command
Get credentials from either keyfile or info
Authorize and return an authorizedhttp object.
. none ]
Prepare the command string for sending to the master
Normalize a tensor by a mean and standard deviation
Crop the PIL image.
flips the image horizontally
Transforms a PIL image to perspective
Vertical flip on top and bottom of PIL image.
Adjust PIL image brightness.
Adjust contrast of PIL image.
Adjusts the saturation of PIL images.
Convert PIL image to grayscale
Save tensor to image file.
Find all classes in a directory and its subdirectories.
Reads an info file and returns a torch longtensor
Read matches file.
Compute the accuracy
Download a URL to a directory.
Return a list of all directories under root
Returns a list of all files ending in a suffix within a root directory.
Download a file from Google Drive.
get random hypercube parameters
Generate random start and end points for image cropping.
get random hypercube parameters
get the parameters for the random transform
Get angle translation scale and shear parameters.
Download the file from the URL to the root.
Download all the files in raw_folder to processed_folder.
Get the current theme name.
Get list of available themes
Given a BeautifulSoup response parse it and return a list of answers.
mvn wrapper for tfd. independent
Compute the log probability of an eight schools joint treatment.
Build randomvariable with custom name.
Max along an axis masking NaNs
Calculate the total size of an event shape.
Eval all one - hot tensors.
Get a function to convert identifier to tensor.
Calculate the total params size for a single component.
Builds the input pipeline from slices x and y.
Check whether map_values is valid.
Call the function fn with the args args.
Call a function and get its gradients.
Broadcast from_structure to to_structure.
A single leapfrog step.
Metropolis hastings step.
Create an instance of this class from a config dictionary.
Converts a value x into a tensor.
Expand x to the shape of event_shape.
Compute the probabilities for each component of the cat.
Import tensorflow if it is not present in the current distutils version.
Calculate the logistic regression labels.
covertype is a function that returns the most specific category of the dataset.
Adds positive integers to axis if greater than num_.
Squeeze op.
Z op.
Inverse of z.
Semilocal linear transition matrix.
Semilocal linear transition noise.
Find primes less than a given number
Machine translation of numpy dtype eps
Breadth first search.
Prints the values of a tensor.
Check that the shape of a parameter matches the expected quadrature.
Interpolates the given location along the grid.
Interpolates the grid by a scale factor.
Concatenate list of vectors.
Computes the log of the vector and matrix vs.
Compute the log of the matrix and vector components.
Apply vector and matrix product to vs.
Extracts the log probability of each state.
Choose a random direction for the graph.
Calls fn with fn_arg_list unless fn_result is none.
Builds a trainingable posterior for the given parameter.
Calculates mean and variance of masked time series.
Returns the value of the first unmasked time series in the time series.
Mixing over posterior draws.
Returns the range of the range inclusive.
Resolve distribution names based on arguments passed to the distribution function
Builds the model for the heapify_cache.
Calculate the entropy of the distribution.
Image summary op for seqs.
Visualize a reconstruction tensor.
Visualize the quantitative analysis part of the model.
Summarize the distribution parameters.
Summarize mean in nats and bits.
( inputs ) ) ( )
Creates the initial state of the decoder.
Performs convolutions on the input.
Sample from the prior distribution.
The batch shape of the network.
Batch shape tensor for all parameters.
Converts vector size to square matrix size.
Returns the indices that would sort an array.
Sort an array along a given axis.
Inverse complementary trigonometric norm function.
Asymmetry series log_ndtr_asymptotic_series
Compute the inverse of the erfinv tensor.
Text messages joint log probability.
Checks whether index_points represents a margin of univariate distribution.
Get the index points
Compute the outer square of the difference between x and y.
Compute the value of f and the batch_jacobian.
Splits the covariance matrix into block_sizes marginals
Return text representation of tensor.
Returns the sample shape as a tf. tensorshape.
Returns the sample shape tensor.
Sample from the distribution.
Returns numpy array of the eager tensor.
Uniform unit norm sampling.
Logarithmic normalization.
Find the common dtype for a set of args.
Broadcast a tensor to a set of tensors.
( str_ )
Calculate the effective sample size for a single state.
Potential scale reduction for a single state.
Returns the size along an axis.
Broadcasts secondary_arg to all states in states.
Remove a field from the mapping
Merge two values.
Recursively descend through nested tuples.
Find the inputs to the given function.
VGG convolution block with strided convolution.
Returns whether the momentum has no u turn.
Least - squares log - probability linear regression.
Log joint of current target and momentum.
Random bernoulli variates.
Converts a nested structure to a tf. Tensor.
Returns a dictionary mapping tensor attributes to their values.
Creates a mixture prior of the same family.
Pack images into rows and cols.
Download filename from url to directory.
Calculates the volatility function and its gradients if needed.
Append zeros to volatility portions if needed.
Call fn with input x reshaped to match self. batch_shape.
Calls fn and reshapes the output if static_event_shape_list is none.
BDTR function for Truncated Normal tensor.
Helper function for flat sampling of distributions.
Return a list of strings corresponding to a set of topics.
Adds control dependencies to the codebook based on updated ema counts and ema means.
Save all images in array x to fname.
Convert a dtype object to a numpy dtype.
Get the base dtype for a dtype object.
Return True if dtype is a boolean type.
Check if a dtype is a complex NumPy array.
Returns the maximum value of the given dtype.
Returns the name of a dtype object.
Get the size of a numpy dtype.
Assert that each item in items has the same base type as expected_type.
Returns a function that replaces the worst value in simplex with the reflected value
Returns a function that when called will expand the simplex and objective_values at the worst_
Shrink the objective function towards the best possible simplex.
Concatenates x with replacement at the specified index.
Prepare arguments for _prepare_args_with_initial_simplex.
Prepare simplex and simplex_face for the batch_evaluate_objective.
Build a fake data object for testing
Returns the current configuration for Keras.
Creates a new TensorFlowFlowGraph from a dict.
Matrix multiplication op.
Helper function for _std_var.
Returns cond_true or cond_false depending on pred.
Compute the final log probability for one fiber.
Finalize the probability for one fiber.
Rotate dimensions if necessary.
Validate a batch normalization layer.
Slice params to a dictionary with slices as the key.
Apply a single step override to the given distribution.
Apply a slice override sequence to the given distribution.
Returns the number of columns in x.
Returns a static value for the given predicate.
Calculates the rank of a shape tensor based on its shape.
True if scale is a diagonal scale.
Pad mixture and categorical dimensions on the last axis.
Assert that x is a nonnegative integer form of x.
Tries to get the static value of x from tensorflow or numpy. array.
Is the dtype known and unsigned by dtype?
Whether the dtype is known to be signed by or not.
Returns the largest integer in the given dtype.
Returns the smallest integer in the given dtype.
Is the given dtype an integer like by the value of its base_dtype.
Generate a new seed from the given seed and salt
Dimensionality reduction op.
Validate rightmost transposed Ndims.
Validate the permutation.
Returns the shape of the event tensor given the shape and static permutations.
Returns the dimensions of x.
Builds a backward pass step function for a given state and a given transition matrix
Propagate a transition matrix to the mean and covariance of the predicted mean.
Propagate the mean through the tensor.
Propagate the covariance matrix
Computes the joint mean of the latent and observation latent priors.
Returns the joint covariances of the latent and observation priors.
Builds the observations from latent means and covariances.
Log - normalizing the concentration.
( str_ )
Calculate rotation between samples and the mean direction.
Sampling frequencies.
Copy fn to a new type.
Remove keys from a dict where the value is not val
Recursively replace dict objects for prettydict
Get samples from the given distribution.
Check if x is a namedtuple like x.
Recursive function for choosing between two types.
Calls fn with inputs fn_arg_list and returns result and gradients.
Check if the shape is valid.
reduce_any op.
Update the position of the objective with the given position delta.
Check if the optimization has converged.
Equivalent of tf. broadcastto.
Harmonic number computation.
Returns the kernel results attribute with the given name.
Compute the variance scale term of the model.
Applies cond to the values of tval and fval.
Is the first tensor finite and the second one finite.
Returns the result of the bootstrapping of the current model for the current step size
Resnet block with projection shortcut
Deep exponential family.
Initializes the amplitude and length_scale parameters.
Returns the kl function which is registered for type_a and type_b.
Reads an image from a filepath and returns it as a tensor.
Download and extract sprites from data_sprites_url.
Create a character from skin top and pants parameters.
Create a sequence of frames from a character.
Create a random sequence.
Flatten a list of summand kernels into a single list.
Flatten a list of multiplicand kernels into a list of kernels
Build train and test data for testing
Expand dimensions before insertion and keep dimensions.
Make a list of non - negative static axes for the given axis.
Sort a tensor by top k.
Make sure that x has the same ndims as x unless expect_static is True.
Helper function for batch_gather_with_broadcast.
Broadcast the event and samples along the given dimensions.
Control inputs for inv_hessian.
Transpose a tensor by transpose operation for num_ batches
Rightmost dimensions preserving the shape of x.
Returns the common dtype for a list of dtypes.
Returns the initial state of the optimisation problem.
Computes a mask for PSD of a tensor.
Get initial arguments for SGD.
Find the best value in a list of values.
Check if the function and position convergence has been reached.
Ensure tensor_or_list is a list.
Returns the tol or num_ if tol is none.
Builds a training pipeline from training images.
Plots the generated images
Given a list of tf. Tensors and a list of tf. Tensors return
Call the LSTM with the given input tensor.
Returns the multivariate normal diagonal of the covariance.
hat integral op.
hat inverse op.
Returns a list of assertions to solve the LU decomposition.
Block diagonal version of sparse_block_diag.
Check whether a is a valid matrix.
Generate slices for a region of a mask.
Generate a mask with the specified type for the specified number of blocks.
Create an input order array
( degrees, num_ ) ]
Zero - dimensional multivariate normal diagonal matrix.
weights_noncentered is ignored for now.
Build the model prob_chain_rule.
Builds a transition matrix for each seasonal event.
Builds a function that generates the seasonal transition noise.
Builds a function of the form multivariate normal tril of seasonal transition noise.
Validates that the index points and observations are valid for the given kernel.
Add to self. value
Set the checkpoint for the current value
Set gradient clip to constant value
Optimize the model in place.
Set the summary for the train
Set the summary description of the value
) return str_ Train data
Get all the texts from BLAST 2. 0.
Download and parse GloVE W2V with pre - calculated values.
Compile the function
Evaluate BigQuery expression
Predict the class of x.
Get MNIST dataset as numpy record.
Preprocess MNIST dataset
Get the end trigger given the options.
Validate optimizer.
Returns the object s value
Call a bigdl function
Convert a PythonRDD to a Java Object Rdd.
Convert Python object to Java object.
Get activation by its name
Get the label of the column
Read a distributedframeframe from a parquet file
Write a Parquet file to disk.
Get the image from the file.
Return a list of tensors corresponding to the image
Get the label for the given tensor
Get the predict values of the table.
Local and global predict using the trained model
. transform ( dataset ) )
Save keras model definition to JSON.
Build a keras model with str_ input_shape
Predict class distributed
Get the tensor weights
Performs training or evaluation of the RDD.
Load a model from a torch file.
Load a keras model from json or hdf5 file.
Create a criterion for the jcriterion
Load weights from json file.
Load the IMDB dataset.
Build a keras model with num_ embeddings.
Returns the shape of the input BigQuery
_bigdl ( ) shape
get mnist data
Download and extract data sets from movielens.
Get the classpath for bigdl.
Check if Spark is below 2. 2.
Returns a dict of tensors from checkpoint_path.
Save tensors to BigDL file.
Expand a tile to have a number of time steps.
Simple attention using tanh.
Applies an attention layer on the given inputs.
Get the log file.
Write utterance to the log file.
Compute the gradient updates for all variables in the summary.
read data by config dict
Send an agent to the dialog asking to interact with it
Convert labels into one - hot vectors.
converts proba to onehot
Configure the TensorFlow session.
Loads a network from the load path specified in the configuration file.
Get the momentum variable of the current optimizer
Sets the learning rate and momentum of the graph.
F1 macro round to string average
Process a word into a list of words.
Dropout layer with variational dropout.
Builds the model and compiles it
Builds a basic network for the word word_lstm_units
Train the model on a batch of data
Predict on a mini - batch.
Make a vector for the sent words
Given a list of tags make a vector of bucket indices for the tags
BLEU Advanced Measure.
Verify whether the given URL conforms to the specification in Stack Crawl
Extract certificates from certs_txt
Verify the signature for the request.
Verifies the certificate given the signature chain URL.
Returns controls in JSON format
Return ms_bot_framework representation of controls
Return the telegrams of all controls.
Return all controls as a list of alexa strings
calculate the accuracy of a prediction
Calculate the accuracy of a predicted string against a list of predicted strings
read data from a file path
Create a default agent for hello and bye bot
Converts x to one - hot encoding.
Prettify the values of a metric list
Loads variables from a previously saved checkpoint.
Saves the current model to disk.
Get the trainable variables for the loss and clip_norm.
Search the given word for the given d.
Start a timer for a given config.
Handle a request.
Runs the agent with the given utterance.
Generate response from request
Handler for intent requests
Handler for launch request
Handle unsupported method.
Print self in pretty format.
convert losses from Elmo mean to ppl
Builds a chainer model from a given model configuration.
Interact with a model.
Predict on a file or stream.
Read a file and return a list of lists of words and tags.
Get function from string
Get a metric by its name.
Convert a label string to an integer.
Get the best value of a value list.
Encode tokens to embedding vectors.
Read requirements from requirements file.
Computes the log loss for sk data.
show details for item_data dictionary
Creates an ecommerce agent based on the trained model
Run the MS Bot Server
Download source_url to dest_file_paths.
Untar a tar file at the given path.
Recursively update the editable_dict with the editing_dict
Set MD5 on path in URL.
Change a query parameter in a URL.
Alexa ordered response
control json as dict
Return the ms_bot_framework attributes of the card action as a dictionary
Serialises and returns control in JSON format
Returns ms_bot_framework structure
Score a prediction using Sustain V2 method.
Calculates the recall at a given k examples.
Check if GPUs are available.
Recursively parse a config property.
Parse a JSON config file and return a dict.
Expand ~ and ~user constructs.
Runs the main thread.
Delete a conversation if exists.
Refreshes the list of valid certificates.
Verify the signature of the request.
Handle a request from the Alexa API
Get class from string
Get a model class by its name.
get glmregularizationpath from h2o API
make a generalized linear estimator from a h2o model
construct a h2ocluster object from a set of key value pairs
Shutdown the h2o server
Returns True if the server is running
Return a list of all jobs on the server
List all available timezones
Fill properties from another h2ocluster.
Stabilize this h2o instance with a test function.
Retrieve a summary of a column.
delete a frame from the graph
Return a list of model builders
Validate the parameters of a model.
compute model metrics from frames
Delete a model from the database
run specified number of ec2 instances
Terminate the given instances
Stop instances in EC2
start EC2 instances
Reboot ec2 instances
wait for ssh to appear on given ips
Get the full name of a function by inspecting its module and its methods.
Return the signature of the given function s arguments as a string.
Wrap text at specified length
Poll the h2o API and resolve the model.
Train the model with the given data
Get the parameters of the estimator
This function handles all signals. It sets a global variable for g_handling_signal to True
delete g_output_dir if exists
remove sandboxed box if exists
Scrapes port from stdout.
Scrape cloud size from stdout.
stop a running process
Stop all nodes and stop all client nodes
Get the IP address of the node
return the port used to connect to the node
Determine the size of the vector.
Compute the H2O mean absolute error.
Compute the H2O mean squared error.
Calculate the median absolute error between two hypothesis results.
H2O explained variance score
Check that a variable is of a certain type.
Assert that v matches regex.
Assert that v satisfies cond.
Check if a variable matches a type.
Get the type name of a variable type.
Check if the variable is of the correct type
Check if var is in enum
Return the configuration file path.
Read configuration from one or more config files.
Yields absolute paths to all log files which are suitable for use in log - setup.
Store the model s progress
Recalculate the parameters of the model.
Estimate current completion time for progress data.
guess_next_poll_interval - function to guess next poll interval
Compute progress at time t
Returns the time at which x_target is progressing.
Write text to stdout.
Figure out how many widgets can be rendered in order to avoid overlapping widgets.
Get the current size of the terminal
Set the encoding of the barcode.
Fit the encoder to the given frame.
Refresh the frame from the cache
Return the type of the column.
Display a summary of the table.
Describe this H2O frame
Return the first rows and columns of a Dataframe
Multiply a matrix.
Return a list of all levels in the expression
returns the number of levels in the tree
Set the level of the DataFrame to level.
Set the levels
Rename one or more columns.
Set the names of the columns in the expression
Change the name of a column in the DataFrame
Check if item is in self.
Return the modulo k - fold column as a DataFrame.
Create stratified k - fold column
Print the structure of the factor structure in a pretty format
Remove column i and return it.
Concatenate multiple DataFrames along an axis
Bind data to this table.
Rebind a frame or list of frame to this table.
Group the results by the given column name or index.
Fill missing values with NaNs
RELEVEL y to a single value.
Insert missing values in the current frame.
Convert expression to a factor
Split string according to pattern
Return a copy of the frame with whitespace removed.
Calculate the entropy of the DataFrame.
Returns the number of valid substrings for the given path
Return the table of the frame
Substrate string using given pattern and replacement
Return the upper case of the string
Return a new expression where the na_omit is zero
First derivative of the expression string.
Return a boolean expression that indicates whether NaN values are present.
Create minute expression
Return a dummy DataFrame with the given seed.
Apply a function along an axis
Parse a text string and return an iterable of Python code objects.
Parse a file and return a Python code object.
move cursor to drow dcol
Get the next token and unparse it.
Get the centers of the cluster.
Get the std of the centers of the cluster
Send an API request to h2o.
Check h2o version
Like import but does not import at all
Parse a raw data dictionary into a Pandas dataframe
Make a deep copy of a H2Oframe.
Get a model by its ID.
Return a gridsearch object given a grid_id
Get a single frame by its ID.
Download POJO code from H2O.
Download a csv file from the server
Call a demo function
Load a h2o dataset.
Make metrics API from predicted and actual
Upload a key to the registry
Check frame ID.
Returns a human - readable representation of the given byte size.
Return a slice normalized to a total.
and s. step == 1 )
Wait for the job to finish.
Returns deep features for all models in self. models.
Print the model summary
Show the metric table.
Return hyperparameter values for a given model
Return a dict of hyperparameter names and values.
Projection of archetypes for a single test_data
Makes a simple scatter plot of the data
Translate a name to Camel Case
Dedent text at the specified indentation level.
main entry point for the extractruninto script
Closes the session
Get or set session id.
Start logging to a file or STDOUT.
Prepare data payload for HTTP request.
Prepare file payload.
Log start transaction info.
Log the end of a transaction.
Write a message to the logging destination.
Print if verbose print if enable
Get the automl dict from a given project.
Downloads the pom of the given genmodel to the given path.
Download moloscript model to the given path
Fit the model with the given training data.
Transform data by means and stds.
Inverse of transform method
Extract true string from a string
Find the node name in the file and extract the failed test info.
Try to find build_timeout and store failure_occurred.
a helper function to find build failure for the test suite
Function to find the build ID for the project.
Extract the jenkins job build URL and store it as a global variable
Try to grab a message from the java file.
save g_failed_test_info_dict to pickle
write the summary text to the output file
write file to a file handle
Write java message to text_file
Load Java messages to ignore.
Normalizes an enum constant string
Find synonyms for a word
Poll the job until the status is set.
Writes the Java entity to a POJO.
Implement the h2o. api fit method.
Return a dictionary of default parameters for the given command
Get actual parameters
returns a deepfeature layer.
Return the scoring history as a pandas DataFrame.
Display the current object in the terminal
return the variance of the design matrix
Return the degree of freedom for each str_
get the coefficients of the model
Download the specified POJO from the server.
Download the model jar or the genmodel. jar from h2o.
Save model details to disk.
Check that the number of targets is the same
Return a list of models from cross - validation
Wait for a keypress from the user.
Return the table as a pandas dataframe
Print the table.
Attempt to find a jar with the given path.
Yields absolute paths to jars in the current working directory.
csv. DictWriter wrapper for csv. DictWriter
Convert path to uri.
Discover modules in the package at self. root_path.
write api documentation to outdir
num_, num_ = 0
Load dictionary from pickle file or create empty list if not found.
add a new message to the dict
pickle the ok_java_messages to a file
Print dictionary to file
Parse arguments and set global variables.
Print usage and exit
Locate all files with a given file extension in a given root directory.
Return a tuple of magic names found in a file.
Tokenizes a text file and normalizes its tokens.
Transform data to a h2oframe.
add failed tests to summary_dict_all
extract intermittent prints and save results in summary_dict_name
Plot the curved curved curves
Check if H2O API is available.
Trim data back to the given months.
Get all endpoint groups grouped by endpoint type
Forward update of the current site.
Returns JSON data.
Comment on a user
Get login and password for current user.
like the user with the given id
Like the given hashtag.
Check if user is not a bot
Read a list from a file.
Schedule the message to be enqueued at the given time. The message must have a scheduled enqueue
defer the change to the outgoing message
Guess service name and arm status from spec path.
Returns the URI for the given request.
Get a connection for the given request
Perform a request and return an HTTPResponse.
Get the authorization server name.
Validate the request URI and return the netloc.
Get CLI Profile
Open a HTTP request using the specified method and URL.
set the timeout for the next HTTP request
Set a request header.
Get all response headers.
Send a request to the server.
Get the status of the response
Get status text of the request.
Get the response body
Set the client certificate
put request to the uri
Send a header to the request.
Send the HTTP request.
Get HTTP response from the request.
Get a readable id from an id_name
Return a serialization name for an element name.
returns a dictionary with properties of the given entry node
returns a list of children of the node at the specified path
recursive function to find namespaces from a child
Convert a XML string to a namespace object.
convert xml to servicebusregion
converts xml to namespace availability response
Convert XML to a metrics object.
Update a knowledge base by ID.
Build a package from a specific pull request number
Replaces the document with the given word alterations.
Get the properties of a storage account.
Get the list of keys associated with a storage account.
Regenerate keys for a storage account.
Delete a storage account for a service.
Check whether a storage account name is available for the service.
Get the properties of a hosted service.
Delete a specific hosted service.
Delete a deployment from the service.
Hotswap a deployment for a service.
Update the status of a deployment.
Walks over a given upgrade domain in a given service.
Reboot a role instance in a deployment.
Delete one or more role instances in a deployment.
Check availability of a hosted service by its name.
List the certificates associated with a service.
Get a service certificate.
Add a certificate to a service.
Delete a service certificate.
Get the management certificate of the subscription.
Add a management certificate to the subscription.
Delete the management certificate associated with the account.
Get the properties of an affinity group.
Create an affinity group within the current subscription.
Delete an affinity group.
Get a list of all subscriptions owned by the authenticated user.
Delete a reserved IP address.
Associates a reserved IP address with a service.
Disassociate a reserved IP address to a service instance.
Get a reserved IP address for a service.
Get a persistent vm role.
Delete a role from a deployment.
Start a role within a deployment.
Start the roles specified in role_names for a service in a deployment.
Restart a role within a deployment.
Add a DNS server to a service.
Update a DNS server.
Delete a DNS server.
Get the list of resource extension versions for a resource extension of a publisher.
Unreplicate a VM image.
Share a VM image with the calling user.
Delete a VM image from the compute session
Retrieve a list of all vm images available to the account.
Delete the image specified by image_name
Get a data disk.
Delete a data disk from the deployment.
Update a disk.
Delete a disk.
Builds the receivers message handler.
Create a service instance from a connection string.
Get all subscriptions for a given topic
Parse the response for an asynchronous operation.
Perform a GET request to the management API
Perform a PUT request to the management API.
Get the status of the specified operation.
Adds the X - Management - Version and Content - Type headers to the request.
build the package that pypi is running at
Get a list of all regions in the cluster.
list the namespaces in the cluster
Get a namespace by name
Create a namespace in a region.
Delete a namespace from the store.
Check namespace availability for the given namespace name
Get a list of topics for a topic.
Get a list of notification hubs for the specified instance.
Get a list of all relays for a project.
Get metrics rollups for a queue.
Get metrics rollups for a topic.
Get metrics rollups in notification hub.
Get metrics rollups for a relay.
Create a new environment in the given directory.
Context manager that creates a virtualenv and runs pip on it
Create a SQL Server.
Set the admin password for the selected server.
Get a list of all quotas for the server.
Delete a firewall rule.
Get all firewall rules for a server.
Returns a list of service objectives for the server.
Delete a database.
Get a list of databases for a service.
Get the session state.
Set the state of the session
Remove bearer token from challenge
Return an error handler for an error condition
Creates a queue in the specified account.
Delete a queue.
Get a queue by its name.
Create a topic.
Retrieve a topic by its name.
Creates a rule within a subscription.
Retrieve a rule by its name.
Retrieve the list of rules for a subscription.
Creates a subscription in the specified topic.
Get a subscription by its name.
Retrieve a list of subscriptions to a topic.
Send a message to a Kafka topic.
Unlock a message for a specific subscription
Send a batch of messages to the queue.
Unlock a message previously locked by another client.
Receive a queue message from the backend.
Receive a subscription message from the backend
Create an Event Hub.
Update an Event Hub.
Get an Event Hub by name.
Send an event to the hub.
Add the Service Bus HTTP header to the request.
Get the authorization header
Check if token is expired
Get the token from the http client if it is valid.
Update the request URI and query
Deletes the message from queue or topic.
Unlock the message from queue or topic.
Renews the lock with the current settings.
Add properties to the request.
Return the batch body as a dictionary.
Default error handler for general http errors.
Handle redirect response
Set a new profile to use.
Delete a queue by its name
Delete a topic from the service
Create an instance from a connection string.
Get the properties of the current object
True if lock is expired False otherwise
Process results from the output queue
Task collection thread handler.
Build a config dict from a config dict.
Create a Message object from a HTTP response.
Private method that converts etree element to Rule object.
Converts an etree element to a queue object.
Convert an etree element to a topic object.
Converts an lxml. etree. Element to a subscription object.
Parse a list of enum items from XML response body.
Return a dictionary with properties of an entity feed element
List all the queues in the service
List all topics for a servicebus instance
= website_name )_
Delete a website from the DCNM.
Updates a website.
Restart a website in the given webspace.
Return historical usage metrics for the given webspace and website
= True ) return metric definitions
= True ) return str_
= True )
Create a cloud service.
Check the name of a job collection in a service.
Get a job collection.
Cancel scheduled messages for the specified sequence numbers.
Reestablish the connection to the broker.
Get a certificate from a publisher settings file.
Restore cookies from cache
Calculate the total width of a terminal line
Get the cut prefix from the given value
Print a message in place in the terminal
Returns a human - readable filesize according to the standard.
format time in human readable format
Create a status line based on the available formats.
Print progress bar.
Compute the number of segments available for this presentation period
Generator of segments.
wait for the condition to be true
add a segment to the queue
Queue a value in a queue
Get pv params.
Extract nonce from last redirect url
Get the vpid from the given mediator endpoint.
Deserializes JSON string into Python object.
Parse an XML string and validate it against a schema.
Parse a query string and validate it against a schema.
Search a dictionary for a key.
Iterate tags in a HTML string.
Determine the json encoding of a sample.
Return a Python object from a HTTP response.
) from res
Parse and set cookies in the request.
Parse the headers from a response.
Parse query params from cookies
Get the formatted message.
Create a log record and return it
Login to TonicDNS API.
Loads the support plugin specified by name
Update the querystring of a URL.
Iterate over tags in FLV header chunks.
Generator yielding all required arguments of the given name
Check if file exists and output if not ask user for file output
Create output object based on the arguments.
create http server
Generator that yields HTTP requests from server until player is not running
Output player output stream passthrough
Open a stream and prebuffer it.
Output the contents of the given stream
Read chunk_size bytes from stream and write to output.
Handle streams and determine output type.
Fetch streams from a plugin
Attempt to fetch streams from a plugin in a given interval.
Resolve stream name from name of a stream.
Print list of available plugins
Authenticate using Twitch OAuth
Load plugins from a list of directories.
Setup HTTP session for streamlink
Load plugins from plugins_dir if it exists.
Logs current OS and Python versions
Return stream id from image text.
Return iframe if found in text.
Get a value from the options dict
Set a plugin option.
Get a plugin option.
Resolve a URL using the plugins.
Import all plugins in a given path
converts hours minutes seconds in string to int
Finds a player s url from the response body.
Parse M3U8 data and return m3u8 data
Return player name supported by given command.
Get stream id from stream html
Extracts stream info from the HTML page
Login to the server using username and password
) return str_
Make a call to the crunchyrollapi
Start a session using the current auth token
Get information about a particular media
Create the crunchyrollapi object
Char formatter for Python 2. 6 output strings.
Read n bytes from the stream
Get the value of code at index
Get the explanation of the error.
set self. decodetable to decodetable
Set the length of the text.
Read tuple tuple from a stream.
The explanation of the bit.
Get the value at index with extra or valueerror.
Return the span of the bitstring to the index
Get the value for a given index.
The mnemonic of the symbol at index
Returns the index into the mnemonic string for a given index
Compile the table of actions from the action table
) ( w, action )
Make hexdata.
The length of the metablock in bytes.
return True if stream is uncompressed else False
This method adds a block type to the internal state. It also adds the block type
Modified text tranform function.
Read prefix array.
Patch a function to be hidden.
Add virtual columns for both velocity and velocity perpendicular from a proposed motion 2 vper
Main Vaex CLI application.
Open many files and concatenate them into a single dataframe
create a sample from a vaex. samp instance
. astropy_table
( kwargs )
Create a DataFrame from a CSV file.
Serve a URL with vaex. remote. serverrest.
instance of the zeldovich problem
Concatenate a series of DataFrames
Virtual range with columnvirtualrange
Open and return a dataset.
Evaluate the given expression against the current dataset.
Returns the set of columns that depend on this selection
Sort the pair table.
Wait until the plotting queue is empty.
Opens the given document in the operating system.
Context manager to open and close a file.
Combine multiple mask arrays into a single mask.
compute the median of values at the given indices
Plot the dataset as a jupyter notebook.
Plot the data in 3d.
Get the datatype of the column for the given expression
Get the path to the private directory for this node.
Remove the virtual metadata files associated with this bundle
Write virtual metadata to the private directory.
Write meta information to file.
Set the value of a variable.
Evaluate a variable in the context of the template.
Return the selection mask of the given name at the given indices
Converts the table to a dictionary
Create a copy of the table
Convert the table to an arrow table.
Convert the table to astropy. table. Table
Add a column to the DataFrame
Rename a column.
Add virtual columns from cartesian to polar
Add virtual columns from cartesian coordinates to polar velocities
Add virtual columns corresponding to polar velocities to Cartesian coordinates
Add virtual columns and rotation to expression
Adds virtual columns for spherical data
Add virtual columns for cartesian to spherical model
Add a virtual column.
Delete virtual column by name
Add a variable to the table.
Delete a variable from the model
( num_ )
Print the head and tail of the table.
Print rows i1 and i2 in a table.
Set the value of the currently selected row.
Trims the columns of a Dataframe to the range specified by the index.
Take columns specified by indices.
Extracts a subset of the string
undo a selection
Redo a previously selected item.
returns True if selection can be Redoed
Selects a rectangle in the current canvas.
Selects circles within a 2d circle
internal method to add a selection to the selection history
= False )
Displays the graph in Graphviz DOT language.
Add a column to categorize
Encode selected values as ordinal in a column.
Returns an object with the data columns of the table.
Length of the field
Horizontally stacks two tables.
Concatenates two dataframes
add a column to the dataframe
Patch a function in a pandas dataframe
Fill missing values in a numpy array
Return a NumPy array with type autoboxing
Convert to recarray.
Store a series of key value pairs into a file.
Write a comment to a file.
Write a property to a file.
Unicode newlines in a file.
Shows sys. version and version
Rename a keyword argument.
Sets the lib numpy library to use. If none is specified the current lib numpy library is used
Extracts beat track from a librosa dataset.
Adjusts the pitch shift of a harmonic tuning.
Convert frequency array to Mel index.
Convert mels to hz.
Generate frequencies for FFT
Filter a frequency domain waveform with a FFT basis.
Trim stack of cqt data
Compute the cqt response of a signal.
Calculate early downsampling count.
Downsample early y by a given number of octaves
Returns a uniformly distributed transition matrix
sets the current image
Check if axes is an instance of axes.
Helper function for scaling axes.
Calculate the coordinate basis function for Hz
Calculate the mel - frequency hz basis functions.
Return the cqt_frequencies for the given octave count n and frequ
Return the coordinates for a chroma raster
Calculate the time at which each frame would be placed in a mesh.
Time stretch for a given rate.
Extracts beat times and tempo from hpss file
helper function for __nn_filter
Get the bandwidth of a window.
Fill the window square with win_sq
Compute the Jaccard similarity between two lists of integers
Find the best interval that overlaps with the query
Match two lists of intervals
Loads audio data from a. audio file.
Convert audio waveform to mono audio
Returns a set of all files with the given extensions in the given directory.
Stretches a waveform using librosa
Process the command line arguments
hpss librosa demo.
Calculate the beat tracker for a given time period
Calculate the local beat score of the given onset envelope for the given period.
Calculate backlink and cumscore for beat detection
Returns the index of the last beat in the recording cumscore
Detect onsets using onset_detect library.
Check that x is a valid integer.
Read image from device.
Get a frame from the VCAP file.
Read image from OpenCV and write to frames.
Decorator to track the progress of multiple tasks.
Flip a 1D or 2D image
imrotate returns a rotated copy of the image
Clips input bounding boxes to the image size.
Scale a set of bboxes
Impadify an image to the specified shape by adding a specified value to the end of the
Impad to multiples of size divisor
Scales a size based on the number of characters in the font
Resize image with cv2. resize
Same as imresize but takes NumPy array as argument
Register a handler for a set of file formats.
Get priority from a priority value
Dequantize an array to a specified number of levels.
Wrapper for cv2. imshow
Dequantize flow in x and y dimensions
Load a checkpoint from a file.
convert weights to cpus
Save a model checkpoint to disk.
Initializes an optimizer for the given model
Initialise and return a logger
Returns the current learning rate for the current optimizer
Register a hook.
Runs a workflow.
register learning hooks
Cuts video from in_file to out_file.
Concat video to out_file.
Return a list of items from a file.
Load a dictionary from a file.
3x3 convolution with padding
wrapper for cv2. imread
Read image from byte string.
Write image to OpenCV file
convert bgr to gray
Converts from gray to bgr.
Cast inputs to dst_type.
Check if a sequence is of a certain type
Slice a list of lists to a list of lists.
compute average of the history n times
Create multiple GPUs from multiple GPUs
Convert a color value to a color tuple or color channel value
Returns the time since the timer was last checked
start the timer
Return the amount of time since the timer started.
Returns the time since the last timer check if the timer is running.
Display flow data as image.
Creates a wheel of colors to be used in the color wheel
Compute the accuracy of the output and target
Scatter inputs and kwargs
Make the request and return the response.
Get JSON from the service.
Return text sent to the client.
Handle callback and response from AWS API request
Send multiple HTTP requests at once.
Sends the request to the specified URL using the specified method.
Start the master process.
A helper function for normalize_task_v1.
( ) )
Get the name of the archive that this package was built with.
Add additional requirements from the setup. cfg
Creates a text message activity.
creates activity with suggested actions
\ Activity that creates a single attachment.
Create a list activity.
Create and return a Content - URL attachment.
Set telemetry client.
read data from the cache
Write changes to the database.
Delete an item from the database.
Create storeitem from result.
Create a dictionary from a storeitem
Sanitize a key for use in Redis.
Creates the database and container objects
Method to get or create database using the specified client and id.
Get or create a container in the document database
fill Qna event from query results
Get a conversation reference from an activity
Get name of the step at the given index.
Whether the bot supports suggested actions for the given channel.
Check if card actions are supported for the channel.
returns the channel id or None if it is not set
Check to see if the token is coming from the emulator
creates a hero card attachment
Change the control bit of the conditional.
Make a copy of this element and return it.
Return qasmif %s on string
Return QASM code for self as a string.
Run all the passes in the circuit.
Perform a single pass if it is required.
Return the passes of the test.
Dump all the passes of this flowcontroller
transpiler controller factory.
u_base
Return parameters for a single gate
Return the single - gate matrix of a single gate.
Convert a PyQT circuit to a DAGCircuit
Exponential fit function
fit function of the oscillator
Plot the correlation and the fit of a qubit.
Shape rb data into a list of lists
Plot data with rb data as markers
compose angles u3 and u4
Transpiler to Zyz basis functions
Validate the input quantum state.
Trims the background from the image
Get the span of the gate from the start of the qregs for this instruction
The main transpiler method. It computes a property_set for each qubit in
Add a barrier to the state
Process bit_id nodes
Traverses a gate node and builds the dictionary
CNOT node.
Apply the measure on the bit IDs
Process if nodes
Create dag operation class
Get duration of one or more channels
Get start time of one or more channels
Get the stop time of one or more channels
Generate instructions for all child schedules.
Add additional data to valid_data
Load additional data into valid_data
Validates instance against its schema
Return a dict representation of the model
Load data from a dictionary.
qft eqnj qft
Chops a real or imaginary vector into a real or imaginary part
outer product of two 3D vectors
computes the convergence matrix of a state
Calculates the Shannon entropy
Calculate the mutual information of two traces
Entanglement of formation.
get the number of qubit not yet reached
Flatten a schedule to a single instruction structure
Shift a schedule by a given time
insert one schedule into another
Append a schedule into another one
u3gate
Return the status of the backend
Start a number of iterations.
Get the time remaining in the est.
Disassemble QObject into a list of dictionaries.
Compute the Hamming distance between two strings
Create a quaternion from a rotation along an axis
Calculate a quaternion from euler angles
Normalize the quaternion.
Convert this vector to a 3x3 matrix
Converts the rotation matrix to cartesian coordinates.
Process data to keep only the most common string value in a group
Check type of value if collection return string
Check the range of index j.
Check if a matrix is a square matrix
Check if a matrix is diagonal
Check if op is a symmetric matrix
Check if a matrix is Hermitian
Check if matrix is positive semidefinite matrix
Returns True if the given matrix is Identity Matrix
Check if a matrix is a unitary matrix
convert data to CHIi operators
convert to superoperator
Calls the Kraus operator to convert the data to a Kraus operator.
Convert data to Chi matrix.
Convert a superoperator to a permutation matrix
Convert data to stinespring.
Convert data to an operator.
Create operator from operator.
convert stinespring to operator.
Convert a superoperator into a permutation.
Shuffle data according to the Choi convention.
Convert kraus to choi
Convert CHI data to kraus
Convert stinespring to kraus
Translate from stinespring to Choi.
Convert kraus to stinespring.
Convert kraus to superoperator
Convert chi to chimera.
Convert CHI to chi.
Reravel two matrices.
Transform data from Pauli basis.
Check the dimensionality of the nqubits
Hide tick lines and labels of an axis
Set the label convention of the plot
Clear all points and vectors.
Adds a list of vectors to the mesh
Render the 3D plot
Plot the front of the sphere
Render and show the plot.
The string representation of the top layer
Return the mid layer
The bot layer
( self ) )
Returns a list of parameters for the label of an instruction
Creates a label for a box that can be used as a label for a menu entry.
Returns the node in LaTeX syntax.
Filter deprecation warnings by adding a simple filter.
Returns general information about local hardware
Check if we have a connection to the given hostname and port
Check the status of a job
Return a constant vector of the given amp at each time point
Calculates the square of a time series
Triangle of sawtooth
cosine function
Derivative of a Gaussian profile.
Smooth a time series by a Gaussian amplitude square.
Default pass manager.
Creates a default pass manager simulator for a basis set
Check if the given register has been used in the instruction
Mirrors the circular.
Inverts the circular.
Append an instruction to the end of the program.
Check for duplicate qubits.
Check qubits are valid qubits
Check classical arguments for compatibility with Qgskit.
check compatible qregs and cregs
Returns Qasmasm as a string.
Returns the number of gate operations in the machine.
) * 2
Count the number of opcodes in the code
Bind a dictionary of parameters to a new circuit.
Bind a parameter to a value.
Return a list of gates mapped to free qubits.
Calculate the distance between the layout and the given gates.
Return the score of a step based on the number of query parameters it has and the number of
Copy Circuit metadata from the source to the target.
Return a copy of the gate mapped to the layout.
Returns a list of dagnodes for the swap op to the given edge.
Map the circuit to a set of gates.
Add a physical qubit to the coupling.
Add an edge to the network.
Build a subcoupling from a set of nodes
List of all physical qubits in the domain.
( False )
Compute the distance matrix of the coupling.
Return the distance between two qubits.
cu1gate
Inverts the string.
Q - if - then - else - if - then - else
if val else val
Subscribe the callback to the event.
Dispatch an event to all subscribers.
Unsubscribes a callback from a event.
Publish an event to the broker.
Add a new qubit to the reservoir.
Defines the Quil program.
Returns the list of Quil gates to uncompute.
Calculate angles theta and phi for a complex pair of complexes.
Returns a multiplexed version of the given circuit
True if value is a virtual instruction.
Create a copy of the layout.
Combine this layout into another_layout.
ccx creates a cross product of two control points
Insert a schedule into the schedule at a given time.
Check if name is already fenced
Convert a list of gates to gate index arrays
Maps the input qubit layout to the coupling layout and maps the input layout onto the
Generate a set of Pauli groups.
Create QPlane from label.
Initialize from boolean components.
Compute the product of two complex numbers
( str_ )
Convert to a Quil instruction.
Update self. _z with new values.
Update x inplace
Append Paulis elements at the end of the list.
Delete specified qubits from the wave.
Generate a random unit quaternion.
Instantiate a single Pauli operator
Get the outcome of a measure.
Generate a sample measure and add it to the memory.
Add a QSM measure to the model.
Add a QSM reset to the state
Check that the initial state vector is of the correct length
Initialize the state vector
Returns the state vector as NumPy array.
Validate whether measurement is allowed for the experiment.
Run a single job.
Validate the Quil object
Ensure that the initial unitary is of the correct shape
Initializes the unitary matrix
Get unitary matrix.
Run a single job.
Validate the quality of the Quil object
Return whether the object is a bit.
Generates the trivial layout for the given Quil graph.
Check whether interval overlaps self
Shift this interval by the given time.
Shift the time - slot by the given amount.
Returns the start time of one or more channels
Returns the stop time of one or more channels
Return whether this timeslots can be merged with the given timeslots
Return a new timeslotcollection with the given timeslots
Shift time by time.
Report this thing as an issue or comment
Iplot a Paulivec state rho
Rzz op.
,'swap' )
Creates the program graph from the given Quil program object
Return next edge that is mapped in pending_program_edges.
Select the best remaining cx by greedy search of self. gate_cost
Given a program qubit select the best remaining qubit.
returns a list of all instructions contained in the gate
Inverse the gate permutation
Same as self. q but only applies to qregs
If the gate is classical apply val to all of the variables in the list
Returns True if the matrix is unitary.
Conjugate op.
transpose the array
Power of the matrix.
( str_ )
Convert a Quil instruction to an operator.
This function updates the layer in the coupling map by updating the layout of the first layer and
Separate bitstring into a bitstring of the specified length.
Format a memory list so that it is of length num_.
Format a memory list to have a level 1 structured array.
formats a list of memory
convert counts dictionary to str for display
Format a complex state vector into a complex one
Formats a unitary matrix
Submit the job to the Executor
Get the status of the job.
check whether lo_freq is included in frequency list
Iplot bloch for a multivector covariance matrix
Perform the decomposition on the input dag.
n choose k
Compute lexicographical index of lst.
Get a list of ibmq backends with unique names
return the op of the object if exists.
Sample a constant pulse.
Create a zero pulse with the given duration and name
Sample a square pulse.
Sample a sawtooth pulse.
Sample a pulse of a triangle.
Return a samplepulse of cosine.
Return a samplepulse of sinusoidal pulse.
Create a Gaussian pulse with the given duration and sigma
Return a samplepulse with the derivative of a gaussian pulse.
string representation of tree
Returns backend instance from backend class.
= opname
Add a quantumregister to the circuit.
Add a classical register to the circuit
Add a wire to the graph.
Check if the condition is valid.
Returns the indices of all the bits in a condition
Adds a new node to the graph with a given operation.
Apply an operation back to the original graph.
Check the validity of the wiremap.
Map a wire condition to a new condition.
Extend the backbone of this node with the classical registers of the given dag.
Check the list of wires for the node.
Create a map for the predecessor and successor edges of a node.
Compute the full predecessor and successor maps for a full circuit.
( ) )
Edges connected to the given nodes.
Returns a list of op - nodes for the given operation type
return list of nodes that are gate operators
Returns a list of named nodes in the graph.
Returns a list of nodes in the graph that define a two - qubit gate.
Returns all predecessors of the given node
Returns all predecessors of a quantum register node
Returns all ancestors of the given node
Returns all successors of a quantum register
Remove an operation node from the graph.
Removes all ancestors of a node
Removes all descendants of a node
Removes all nonancestor nodes of a given node
Removes all nondescendants of a node
Generate serial DAG circuit layers
Yields all multigraph layers in the multigraph.
Returns all nodes connected to the given wire
Count the number of ops in the topological order
Returns a dictionary with the summary of the properties of the node.
Converts a basis set to tomography format
Add a Pauli Meas gate to the circuit.
Returns the data from the tomography circuits
Projector function for Eigenvalues
inverse of linear inversion
Algorithm for the Hermitian wizard.
Calculates the Wigner score for a given set of labels and measqubits
( circuit, op ) )
Does a text check on the status of a job
Monitor the status of a job
Simplify an u3gate.
Add qubit qubits to the graph.
Build the job history tab
Gate of Cu3gate
Build a bell circuit
Run a single transpiled circuit.
get single drive channel
return the control channel of the pulse
Return the measure channel of the pulse
acquire a pulse control channel
The state of the input after Manning - Strickler
Removes all Qiskit logger handlers.
Iplot state hints on a state rho
Input the given string
remove lexer from stack restore filename and line number
Push lexer on stack and create new one
get bound method for given instruction
Convert an acquire instruction to a QObject
Convert a FrameChange instruction to a QObject.
Convert persistent value to real time
Convert drive to qobject
Convert a snapshot to a qobject
Update the pulse annotation to use a new string and an integer annotation.
Convert a DAG to a circuit.
Convert a matrix of observable states to a dictionary of observable states
Update current symbol table
Verifies that the specified symbol is declared as a bit.
Verify the current symbol table.
Verify that the specified symbol is a gate
Verify that the specified symbol is a valid register in the global symbol table.
) return obj. children )
Find the column in the string that the token is in.
Set parse_deb to True or False for debugging.
parse qasmasm string
( str_ )
Parse the given file and return a list of assembly instructions.
, [ theta ], )
Create a basis state from a string state and a number.
Projector for density matrix
Calculate the purity of a state
Computes the property set of this graph based on the graph.
Finds all the nodes in the CXE dag that match the query pattern
Get a backend by name.
= str_ )
Get register specs from a list of bit labels.
Return a string truncated to float if present
Generates LaTeX representation of the QCircuit object.
Computes the total number of columns and the total number of parameters for the image
Calculate height and width of beamer page
Load a schema from a given file path.
Load all schemas and validators from default schema paths.
Random unitary operator.
Generate a random matrix with aginibre indices.
Generate a random density matrix.
Generate a random density matrix with Bures
Returns a list of the names of functions in the module
Power of the matrix.
Compose this system onto another.
Convert a single circuit instruction to a superoperator.
Apply the barrier layer on the topological graph dag.
Compute the decomposition of the Quil program.
Define the qubit
Check if value is a collection or not.
Check if the value is a list of valid types.
Validate atol is within the bounds of the tolerance.
Internal function to set the rtol.
Reshape input and output dimensions.
Get dimensions of the input array.
List of output dimensions.
Make a copy of this array
Power of a tensor by an integer n.
Automatically determine dimensions.
Deserialize string into object.
Extend base class s serialize method to catch typeerror exceptions.
Check if the value is of the expected type.
Function applied to SVD of matrix a
( num_ ) ) inverse
Set the label of the Dataset.
Check if the array is unitary.
Convert to operator.
Convert to a circuit instruction.
Return a quantumchannel transformer based on the input data
Monkey patch strptime
Check if any of the tokens in the list are valid.
Split a string by relative or absolute words.
Parses the given date string and returns the corresponding time object.
Check if this format can be applied to the given date_string
Translate a string to the current locale.
Parse date_string with date_formats
Convert exception name to net number.
Convert an exception name to an HTTP code.
Compose a configuration file from all the streams and write it to disk.
Get info about streams.
Log output from stdout and stderr
expand time string to multiple units
Read config options from the config file
read in cached stepper options
write cached options to a file
Write the stpd file to disk.
Create a schedule from a list of rps_schedule
return the RPS at a given time
Execute a shell command.
Decode the monitoring data from a list of dictionaries
Builds a list of points for the given label.
Publishes a message to all connected clients.
Count the number of matched codes in a dict
Stop the thread and wait for all tasks to finish
read plan from stpd_filename and feed it to workers
Add user defined options to the core
Configures the core with the passed options
Collect data from the queue
Notifies the listeners about the new data
Discovers the UDP port used by the jmeter protocol.
Terminate the process.
Read and parse data from the file.
Parse a criterion string and return a criterion object.
Parse XML file and return a list of host configurations.
Create a startup config file if it does not exist.
Checks the disk limit of the current core
Check free memory.
Get right panel line
Add info widget
Fill a rectangle with the longest string in the prepared list.
Calculate the length of a line of text if it contains markup.
Add an info widget to the main window
Make a request to the writer
Load plugins from the plugins section of the config file.
Get the most recent plugin of type plugin_class
Return list of plugins of type plugin_class
Copy a file to the artifacts directory
Add a file to the artifact files list.
Create a temporary file and set its permissions.
Load config files from a list of paths
Flush the configuration to disk.
Get all options and their values from a section
Find all sections with a prefix
Decode a chunk of data into a list of statistics items.
Install agents and artifact files
Polls the agents.
Send collected data to listeners.
Detect configuration in the core and monitor it
Parses all the data and adds them to the data dict
Subscribe to the specified channels.
run the publisher in the event loop
close the websocket
Make a single request with the given method and url.
Submit an order to the Trading API.
Get current position of symbol
Retrieve a list of assets with a given status.
Check whether the value of a dict parameter is of a certain type.
Check whether an object is a dict or not and if it is return a dictionary of key value
Constructs a logger that records the event using the provided callback.
Creates a JSON event logger using the given json_path.
Creates an instance from a configuration file.
Returns the pipeline instance corresponding to the given name
Returns all pipelines in pipeline_dict
Get the next event in a queue.
Execute a single pipeline through the message queue.
Wait until all processes are finished.
Factory function for creating a field corresponding to a configtype.
Build the execution plan.
Returns the solid with the given name.
Construct the list of publish commands
Release a new version.
Emulate a block of text
Download file from S3
Upload a file to S3
Context manager for handling dagster user code execution errors.
creates a directory if it does not exist
Context manager for executing user code.
Creates a free log for the given run config and pipeline definition.
Returns True if any of the expected expectations of the step have been met False otherwise.
True if the step is skipped
returns a dict with the transformed values
Returns the failure data found in the expectations
Check if dataset is valid.
Check if the table is valid.
Coalesce the execution steps for a given execution plan into one ordered by solid name.
Get the connection params from the settings
Create a new connection to the database.
Create a cursor for the given name or None if not given.
( self )
Make a MDL from a model and model_dict.
Converts a list of dictionaries into a list of MDL objects.
Returns a custom form field for the array type.
Convert the value to a model container instance
Applies the relative filters for the given queryset.
Compute the number of frames in a uniform distribution.
Compute the set of real frames for each real frames.
Find the optimal number of partitions to use for an operation.
Calculate the center and radius of the line
Set the seed and hashvalues attributes.
Return the number of bytes needed to store this object
Merge another HyperparameterStatistics object into this one.
Union of multiple MultihashMethods.
query the table with a minhash
Hash a set of values using weighted minhash.
Removes the mapping for the given key.
Counts the number of non - zero elements in the string
Merge another parameter vector into this one.
Clears the contents of the region
calculate average probability of actual vs predicted
compute mean of actual and predicted classifiers
Sorts the hashtables
query k keys from the minhash
Closes the hashtable and all hashtables.
Get user details from rest_auth
Set the social login state variable to the authprocess. connect state
Select a piece of text from a list.
Parses a scoped selector string
Parse a binding statement.
Parse a value from a string.
Advance to the next line if it is the first line.
Parse a configurable reference.
Write the operative config to disk and add a summary.
Ensure fn is wrappable.
Format a value to be able to be used as a key.
Clears the entire configuration.
Check if a function or class has the given parameter.
Returns the cached arg spec for the given function
Returns a list of positional parameter names for the given function and arguments.
Parse a config file.
Parse a value and return a ConfigParser object.
Flatten a value into a list and return it.
Iterate over all references.
Decorator to register enum constants.
Get all selectors matching a partial selector.
Return the minimal selector that does not contain the complete selector.
Convert a search query into a searchable string.
Parse retry_after header.
Validate a value.
Return a dictionary that describes this resource as a property description.
Set the current value
Get thing by index.
self. initialized = True
, str_ ) str_
Check if host is in whitelist.
Get a Thing by it s ID
Process the POST request for the thing.
Delete an action from a Thing
Start the service in Tornado
Returns a dictionary of actions as a dictionary of strings.
Start the action
Record the result of the action as completed.
Return a description of the event as a dictionary.
Returns the IP address of the machine
Returns a list of all IP addresses in the network
Set the current value of the field
Notify of an external update that the value has changed
Return Thing description as dict.
Sets the href prefix for all actions and properties in this resource
get property descriptions as a dict
Get a list of descriptions of actions performed by this service.
Get event descriptions
Add a property to the resource.
remove property if exists
Get the value of a property or none if not found
get properties as a dict
Set the value of a property.
Get the action with the given name and ID
( event ) return
Add a new available event.
Perform an action and add it to the list of actions.
Remove an action from the actions list
Add a new available action to the actions list.
Remove a websocket from the list of subscribers.
Add an event subscriber to the available events
Remove an available event subscriber by name and ws.
Send a property notification to all subscribers.
Send action notification to all subscribers
Sends a notification to all subscribers subscribed to the event
Annotate the object with the given annotations.
Update model fields in the database
Insert fields into the table returning the primary key of the inserted row.
Insert and get model instance.
Build the INSERT query and return an INSERT compiler
Check if a field has changed in the database.
Called when a model instance is saved
Called when a model is deleted
Recursively call hstore. resolve_expression on all values.
Returns a SQL string and a list of SQL params suitable for inclusion in a SQL query.
) if self. alias else self
Add join conditions to the SQL
Check if a field_name is a hstore field
Creates a required constraint in the store for a field.
Rename hstore_required constraint in current table.
Drop hstore required constraint.
Returns the name of a required constraint for a field.
Creates the sql for creating the index.
Get the psycopg2 database backend base class.
Prepare the database for use.
Convert value to SQL
_form_returning ( )
Returns the SQL commands for the insert
Rewrite a SQL insert statement based on the query conflict action.
Rewrite an insert update clause.
Rewrite an insert query that does nothing.
Get model field.
Format field name for use in the query
Format the value of a field
Creates a unique constraint in hstore for the given field and keys
rename hstore unique constraint
Drop Hstore Unique constraint for field in keys
Generate unique constraint name.
Iterate over uniqueness keys for a given field.
= value return self
Compile the expression as SQL and replace placeholders with actual values.
Returns the 95th percentile of the 95th percentile for a given df.
Calculates the variance of two pooled samples
Computes the T - score of two sets of data using the pooled sample variance
Check if two samples are significant using Tdist95 configuration.
Topological sort a list
N - queens algorithm
return a random position from the unexplored list
Perform a random layout of the given board.
Filter benchmarks based on the given base version.
Recursively expand a benchmark name.
Benchmarks used to run benchmarks
num_ = 1 return )
Fetch and parse posts from a given category for a given date
Parse posts from a raw_posts response.
retrieves a list of users from the server
Shortcut for fetching categories.
Fetches all entries from the feed
Setup the argument parser for the backend command line
Fetch from a given date.
Retrieves bugs for a period of time.
Get comments of one or more bug.
Get history for a list of bugs
Get attachments for a given bug_ids.
Fetch all merge requests from Gitlab
Return a list of merges from the date you passed in.
Merge a merge into a project.
Return all versions of a merge.
Merge a version into a merge.
Return a list of notes notes for a single item.
Return a list of emojis for the given item.
Get a note s emojis.
Calculate time to reset the rate limit.
Generator for items from the next URL to the repository.
Fetch and update the rate limit.
Setup the argument parser for the backend command line
Fetches messages from a given date.
Generate an id from a metadata dictionary.
Get the members of a conversation
Get information about a channel.
Retrieve information about a user
Setup the argument parser for the backend command line
Return the timestamp of last metadata updated on a given item.
Parse a buglist CSV and yield each row as a dictionary.
Return a generator yielding bugs details.
Logout from the CGI server
Get bug metadata as str_
Get bug list for a given date
Get list of bugs by ID
Get bug activity by bug_id
Fetch from a given date to a certain category.
Yield items from the API
Fetch events for a given repository group.
Fetch comments for an event.
Fetches all RSVPs for a given event.
Fetch HTML questions for a given question
Fetch all comments for a question
parse html to question object
Get API questions at the given path.
Get HTML question
Get comments for a post
parse question container and get the information from it
Parse the number of html pages from given html question.
Parses the user info box.
Fetch all the reviews from Gerrit.
Parses the reviews from a raw_data string and returns a list of reviews.
Fetchgerrit28.
Returns the version of gerrit
Method for getting reviews from gerrit server
Returns the next group_item to retrieve.
Executes a command from the archive
Execute a command remotely via SSH.
Setup the argument parser for the backend command line
Fetches issue data from the API.
Fetch all attachments for the given issue
Yields all the messages for the given issue
Get all the activities for a given issue.
Fetches the user data from the server
Get user details by name
Get a specific issue by its ID.
Get a specific issue collection by name.
Fetch all items from the given path.
Get list of subscriptions
Finds the subscription id for the given group name
Fetch url using requests. get.
Setup the argument parser for the backend command line
Find backends in a given top package
fetch all items from archive
Remove classified data from the given item.
Parse args.
Set authentication arguments.
Set the arguments for the argparse module.
Set the output arguments for the script.
Fetch category and write to outfile.
Initialize archive manager.
Return the timestamp of when the metadata was last updated on the given item
Parse a mbox file and yield dicts.
Fetches and parses all messages in mailing_list
Copy the contents of the mbox into a temp file and return the path.
Validate the message and return a boolean value if the message is valid
Convert a casedict to a dict
Return a Message instance for the key.
Fetch the commits for a given category and date range
Parse git log from a file.
Add git path attribute to self. parsed_args.
Setup the argument parser for the backend command line
Parse the stream and yield Git objects
clone the file from uri to dirpath
Count the number of objects in the repository
Is the repository detached from the current branch?
update the working copy
Fetch the latest commits from the remote repository.
Read the list of commits from a pack file.
Update references on the current branch
Return a list of git reference names for this repository
Update or delete a ref in the repository
Execute a command and yield lines of output
Read stderr of the process.
Executes the given command and returns stdout.
Fetch the relevant tweets from the API.
Sets up the argument parser for the command line
Shortcut for fetching items from the database
Fetches the hits for the given keywords
parse hits from xml
Get hits for the given keywords.
Return the timestamp of last metadata updated on a given item.
Return the category of a metadata item.
Fetch pull requests between the given dates
Fetch repo info from the github API
Get all reactions to an issue comment
Requested reviewers for a given pull request.
Get the commit hashes from a pull request.
Get all reactions for a pull review comment
Get user info by login
Get all reactions for a given issue.
The Issues API provides a list of all issues that have been created since the specified date.
Get all pulls from the repository since a given date.
Pull requested reviewers from a pull request.
Get commits from a pull request.
Retrieve all reactions for a comment.
Get user info by login.
Get the list of organizations that the user is a member of
Fetches the rate limit for the given token
Get rate limits for each token.
Choose best API token based on number of tokens and rate limit settings.
Check if we need to check tokens before switch
Update current rate limit by fetching the archive from the server
Initialize archive metadata
Store a new uri and payload in the DB.
Retrieve the object from the database
Create an archive at archive_path
Verifies that the archive is valid
Load metadata from the database
Return the number of rows in a table.
Create a new archive
Remove archive at archive_path.
Search for archives matching the given criteria.
Search for all files in the current dir
Generate a range of months.
Removes characters that are not valid XML characters.
Return a generator of issues parsed from JSON.
Fetch issues for a given date range by date.
Fetches an issue by its ID.
Returns a single user.
Call the API with the given parameters
Fetch data from dockerhub
Fetch the items from the API.
Retrieve content of a repository.
Filter a list of dicts to keep only bool fields.
Return a generator of issues parsed from the raw_page.
Get items from GitHub since a given date.
Get all issues for a given date.
Get all comments for a given issue.
Get all the fields for the current object
Return a list of items for this category
Get builds for a given job_name
Parse raw questions from Quizzes index page
Get all the questions for a given date
Setup the argument parser for the backend command line
Yield page_reviews for a category
Get the latest date from a list of reviews
fetch review articles v1. 27 of the original post
Get a list of page objects for the given namespace
Calls the get_recent_pages call for the list of namespaces
Return a generator of messages from a json string
Filters a message based on chats.
Get updates of current object.
Fetch all articles of a group.
Add metadata to item.
Parse an article from raw article.
Calls the method with the args
Fetches the data for a given article from the API.
Fetch data from a remote object.
Fetch a call to a method from the archive.
Creates a requests. Session object for making HTTP requests to the URL.
This function sets up the rate limit handler
If self. rate_limit is not None and self. min_rate_to_sleep
Extract rate limit from response headers and calculate reset timestamp.
Parse supybot log file.
Get all suveybot archives from the given date
List the supybot archives in the current directory
Parse supybot stream
fetch and parse all the topics for a category
Parse the topics page
This interface is used to get details of a specific topic.
Fetches a post by its ID.
Return a generator yielding all tasks related to the given category.
Parse a JSON response containing a list of tasks.
Parse a list of users from a JSON string
Returns a generator that yields tasks ordered by most recent first.
Invoices by Maniphest IDs
Returns a list of user ids for the given user ids
Returns a list of phids
Make HTTP call to the conduit.
Generate a unique identifier from a metadata entry.
Parse a contents summary and return a generator of contents
Get a list of contents from a given date.
Get the history of a piece of Content.
Parse the result of a testcase.
Returns the capabilities URL for a given service URL
Read url and return xml.
Read XML from string.
Parse the results and extract the measurements
Build the url with the url_query_string and append path to the url
Construct the schema from the XML elements
Construct the URL for the describefeaturetype request.
Uses WPS to execute a complexdatainput program and print the output.
Get a list of movies for a given search string
Get a list of tv shows for a given str_
get info by id
Get alternative titles for a given object.
Get credits for a project.
Get a list of external ids for a project.
Get a list of keywords for the current user s company.
Get a list of recommendations for the current user
Get all release dates for a project.
Get releases for a project.
Get translations for a given str_
Get a list of movies similar to the one selected.
Get reviews for a studio or studio
Get upcoming reminders for a given date range.
Get now playing track for a given str_
Returns a list of popular comics.
Top rated items.
Get all the account states for a given user.
The rating endpoint provides a simple way to get a rating for a movie specified by its str_
Get the movie credits for a specific movie id.
Get the credits for a specific tv.
get info from the API
Get a list of configs.
Get info about the object.
Get a list of movies from the watchlist.
Send a POST request to create a new token.
Token validate with login
Request a new session from the API.
Send a POST request to create a guest session
Get a list of rated movies for the guest session id
Get the status of a item.
Create a list.
Remove an item from a collection.
Clear the list of objects in the collection.
Get content ratings for a studio.
Get similar search terms for the current user.
Get a list of messages currently on the air from the API.
Get information for a specific season number.
Get credits for a season by season number.
Get all external ids for a season by season number.
Get info of a TV series.
Get credits for a specific series.
Get the external ids for a series from the API.
Set instance attributes to response values
Get a collection of objects from the API.
Get company info from the API.
Get a list of keywords from the API.
Send a GET request with multiple params
normalize a string
Count the number of n - grams in each reference
count the number of n - grams in ref
ERFCC Inverse Complemented CondorCc function
Align source blocks with target blocks.
Yield all descriptor classes in a module
Register a list of descriptors from a JSON object.
Register a subtitle file.
prints s to the terminal
Returns whether the given descriptor is a class that is a subclass of descriptor.
Convert to a JSON serializable format
Returns the axis coordinate of the complex object
Compute the atomic sa for the node i
] surface area
Create a molecule from a molecule object.
Create a descriptor from a JSON string.
Fill missing values with a given value
Drop all missing values from a Compound
). items
Convert to dict.
Returns the name of the type.
Print a progress message to stderr.
Display a message to the user.
Exit the program with an error status code
Get a random tempfile name and add it to temp_files
rename tempfile to target and remove tempfile from list
Remove all temp files
Get fixed path for self. path
Returns a list of legal input parameters for the given method
Merges self. opt parameters that are present in kargs.
Add boto boto client params to command line parser.
Terminate the task
Add a task to the queue.
join all workers
count the number of processed tasks
Extract AWS credentials from environment variables.
Get the s3 keys from the command line
read keys from s3cfg path
Set s3handler s3_keys based on opt.
Connect to S3 using botolib
local walk function for a given base directory
Expands a S3 source into a list of files.
Uploads a single file or directory to S3.
Put source files to target path.
Create bucket on S3
Update the privileges for the given target file
Get list of files to show in console
Get a single file from s3 and save it to target.
Get multiple files from a single source directory.
Copy a single file from source to target.
Copy source files to target path.
Deletes all the files in a S3 source
Walk a directory and return relative paths to its root.
Sync files between S3 and S3
Calculate the md5 hash of a file
Returns the md5 hash of the file
Recursively create directories in the path of the target.
Compares the md5sum of the local and remote key against the md5sum of the
Check if filter_path matches path
Walks an S3 bucket returning a list of matching items.
Conditionally filter out objects that should not be modified
Get the privilege of a file.
Check if object exists in S3.
Read a chunk of data from a file.
Verify the file size of the downloaded file is correct.
Write a chunk of data to a file.
Parse the command line and run it.
Validate format string and arguments.
List S3 Buckets
Create a new bucket.
Upload files to Amazon S3
Get handler for given source and target
Print the contents of a bucket
dsync num_ = args. length
Copy source to target path in S3
Move source to target.
Delete an S3 source
get size of objects
get total size of all objects in s3
Attempts to match a date in the given value. Returns a tuple with the date and the
Match time in string.
Match the value for the timedelta attribute.
%s must be a dict
Get a device from the hub
Calls any callback functions registered for the given data
Encrypts the token and returns the encrypted key
Called when an exception occurs in a job.
Add a stream handler to the log if not already there.
Get the current request from the middleware
wrapper for _report_message
Create a logger for the agent.
Build a dictionary of person data based on the request object
Adds the current lambda context to the data dictionary
Add request data to data dictionary.
Check if local variables should be added to the frame.
Build request data from request object
Build data to send to the server.
Build a payload to send to the API.
main ( )
Compose Japanese and Japanese text fragments.
Return the Hangul code for a hangul letter.
Check if a character is a Hangul
Attach a word to a josatable.
Check if a node is inside an except handler.
Check if a node is inside a lambda.
Recursively iterate over all the elements of the given node.
Clobber assignments in except statements
Check if the node is a super builtin
Check if a node is an error.
Check whether the given node is a decorator of a function
returns whether node is an ancestor of the frame s base class
Returns the parent of the given node that may be a tuple or list.
Collect all string fields from a format string.
Get the argument from a call node
Check if a node inherits from standard exceptions module.
Check whether a function node has property decorator.
Check if the given function is decorated with any of the given qnames
Find the topmost astroid. excepthandler or astroid. tryexcept wrapper node
Check if the given node is the node of a from fallback block.
Return a list of astroid. excepthandler for the given exception type.
Check if a node ignores an exception.
Check if a class is abstract.
Safely infer a node.
Get the inferred type of a node
Checks if the postponed evaluation is enabled for the given node.
Return a list of fully qualified names from a module name.
Get the module name from an import node
Helper function for repr of tree defs.
, dep_info, )
Check names imported by imports.
Check if node is imported by basename.
Check the position of the first non import node.
Record an import in the import stack.
Check relative imports.
Add imported module to the stats graph.
Check if a module is deprecated.
Check whether the module is preferred by the user.
Report external dependencies as a tree def list.
Return a graph of importers and their dependencies based on internal or external dependencies.
Get default options from rcfile
Insert default options into sys. argv
Show only the visibility attribute of the given node
Get callback methods for event and link
Visits a node and calls the appropriate method for it
Check consistency of all messages in the queue.
Check whether the function call is valid.
Check the type of the node is a datetime.
Check the open mode of the function call.
Add a message to the list.
Returns a title for the given node
Set default options
Show the given node.
add a class to the document graph
Get all ancestors of the given node
get associated nodes of the klass_node
Extracts classes from a klass_node.
Called when leaving the project node.
Visit a from - import node.
create and return a class diagram
Get all class diagrams
Check if an attribute is ignored by an owner.
Picks up similar names for attrname in owner.
Return True if no member should be emited False otherwise.
Check if node has parent of node_type
variadics
Check if the name of a node is variadic.
Check whether the node is a call to a function or a method.
Check whether the function call is uninferable.
Unhandled unaryop type validator.
Generator for all the interfaces of the node.
Create an astroid project from a list of files.
Visit a package node.
Clear type information for functions.
Visits a variable assignment node.
Handle assignattr_type nodes.
Visit a import node.
Visit an from - import node.
Compute the module_name for the given mod_path
Add module_path to module s dependencies if it is imported from it.
( linter ) ( )
Handles a message.
Handles a single message.
, graph_attrs = )
, edge_attrs, ) return str_
Process a non - raw string token.
Recursively visit the children of a section
Recursively visit the children of a section
Write a table using a layout.
Add a renamed message.
for checker in checker. messages :
Register a message.
Check the msgid against the symbol in the current message. Raise error if the msgid is
Raise duplicate symbol error.
Raise duplicate message id error.
Called when the builder has been initialized.
Return the number of CPUs the current machine has.
Produce a table of messages stats.
Temporarily adds the import path to sys. path.
Load plugin modules and register them.
Loads plugin configuration.
Set the value of an option.
Register a checker.
Python3 Porting Mode
. _checkers ]
Get all checker names except the one provided as str_.
Find all checkers and prepare them for use.
Expands all black_list and white_list_re into a list of modules and add
Set the current module and store its information in self. stats.
check an astroid module node.
Evaluates the current evaluation and prints the result
Callback for help message.
Callback for full documentation printing.
Callback for list_messages.
List groups of checkers.
Normalize text to line_len characters.
Get the module and frame ID of the given node.
Decode line to unicode if encoding is None or unicode.
Check if base_name is in black list
Import all plugins in the specified directory.
Comments a string.
Format the value of an option based on its type.
Prints a section to the stream.
Format options with ini format.
insert a child in the tree
) return child
return list of parents
Accepts the given Layout and formats it with the specified Layout.
Return the content of the table as a list of lists.
Compute the content of a layout and yields it.
Collects all the block lines from the messages stored in msgs_store for the given module
Handle an ignored message.
Register a report callback for a checker
Add statistics to the object.
Get the name of the setter property declared on the given node.
Retrieves the setter property for a given class node.
Check if the function returns something
Return a set of all possible exception types that the given node may raise.
Processes a module and adds its messages to the message queue.
Check encoding of each line in module.
Process the comments and extract notes and fixme.
Check if the local name is from the future import.
( parent, stmt ) )
Return the overridden method for name if it exists.
Get extra info when unpacking a module.
Check if the given name node has been assigned locally.
mark name as consumed with new_node
Check if a node has homozym in upper function scope
Check the unpacking of astroid.
Check metaclasses of astroid. ClassDef nodes.
Get all packages in a directory and sub - directories.
Run parent install and copy the lib to the install dir
Produce a report of similar statistics to old_stats
Run a simulation.
Append a stream to the document.
Compute the similarity between all pairs of ensembles.
Prints sims with their real lines.
Find common lines between two sets.
Iterates over all similiar linesets
Enumerate all stripped lines.
Create a mapping from stripped lines to line numbers.
Checks if attr_name of node_a and node_b is equal
Check whether the two parameters are different.
Safely infer a call result from the given node.
Add node to the list of recently accessed scopes.
Check if class is safe to use.
Check the mro of the class to see if it is consistent
Check the bases of the class and its superclasses.
Check if node is a method def and add message if so.
Check if a node is in one of its slots.
Visit a name node.
num_ = 0 ) node
Checks if a function or method body is a raising function
Check if bad exception context is used.
Displays reports in the given Layout object.
Return true if the class is derived from typing. namedtuple
Check if the node is an enum class
Check whether the given node is a dataclass
Check maximum number of ancestors and instance attributes.
Checks that class does not have too many public methods.
Implement if - > if - > if - > if - > if - > if -
Check the number of boolean expressions in the condition
Check spelling of docstring.
) return str_
Check if the node is actually an actual elif.
Check if the if - else - if logic is simplifiable.
Check if the node is inside a generator.
Check if the exception inherits from the stopiteration module
Check the nested blocks for functiondef nodes.
Find duplicated instance types.
Check if we should consider merging isinstance ops.
Check if a node is an and or ternary operator.
Check consistent returns of functions.
Check if graphviz is available on the system.
Generate the project diadefs.
Write diagram packages to graphviz.
Write diagram classes to graphviz.
Sets the dot printer to use for this graph and sets self. file_name and self.
Open file and set printer.
Return whether or not this package may be emitted based on the sys version.
Generate a help message.
Add sys. path to os. environ
Recursively finds cycles in a graph.
Generates a graph and writes it to a file.
Format a section for the REST API.
Disable or enable message.
Enable or disable message.
return the message symbol for msgid
Check if message is enabled based on message description.
Add one message from a message description.
Get the indent length of a line.
Get indent hint line for progress bar.
Get indent for token at given index.
Check if line starts async or continuation block opener.
Get a list of valid indentation strings for a token at the current indentation level.
Return hanging indent after bracket.
Return continuation inside bracket.
Push token onto the token list
New line.
Check if token at i has a valid type annotation.
Check if spacing around operator is valid.
surrounded )
Visit default nodes.
Check if node is a multi - line statement node.
Check the indent level of a string.
Check if the parent node is in an iterating context
( str_ ) ) node
Check name for builtins.
Subscripts can be inferred from std ex.
Check for errors in attribute expressions.
Check if the value of raise is None.
Find pylint. rc.
Validate the value against the optdict.
Register an options provider.
Callback for set_provider_option
) return value
Generates a config file from the options providers and prints it to the stream.
Load the configuration file into the ConfigParser object
Load configuration from command line arguments.
Add a help section to the cmdline parser
Return the help string of the parser.
Load default values for options that have no default value.
Returns the attribute name for the given option.
Get the option def for the given option.
Yield options grouped by section.
Check if the given func is a method call for the given types and methods
Check if node is a string with a complex format
Visit a module node.
Visit an from - import node.
Visit a logging. import node.
Check if the format string is valid.
Check if a node is inside a loop.
Get the parent for a break loop node.
Check if a loop exits early.
Get the set of property classes and names from a given configuration
Determine the type of the function name.
Report stats by node type
or call. keywords
Check if starred variable is referenced in other functions.
node. func return str_
Check if loop exits early with an else block.
Check if node is inside a loop.
Start the experiment.
Check whether the expr is const and if so add a message describing the expr.
Assert check if there are no errors in the test tuple
Checking dict keys.
Check if node is not in a try - finally.
Check if the function call contains a reversed protocol method
Check the docstring of a given node.
Check if the comparison of the literal with the other literal is correct
Create and parse a subgraph from a node
Parse a sub - graph out of the body and extra blocks.
Specific visit method for module nodes.
Walk an astroid and call the visit and leave callback functions.
Add a relationship to the object
Get a relationship by from object and relation type.
Get all the attributes of a given node.
Add an object to the diagram.
Return a list of all class names in the given nodes
: str_ }
returns the class with given name
: return str_
get module by name
Get module by name.
Add from_module as a dependency of node
Delete the response from the cache
Return the query object for the model
Get user by username and password
Get user by access or refresh token.
Stores the token data in the database
Create a new grant based on the code
Get user by code.
Prepare the request parameters
Initialize application with extension.
Creates a remote app with the given name and optionally registers it.
Redirect to the authorization URL and store the resulting token in the session.
OAuth 1. 0 response handler
OAuth 2. 0 Response handler.
Authorizes the client and returns the response to the request.
Hash the token of a token dict or tuple
Return a client for the token.
Create an OAuth client using a token.
Temporarily disable secure transport.
Confirm an authorization request
Get the client secret from the request
Get the request token secret from the token and client_key.
Get the access token secret from token and client_key.
Get the realms for the given token.
Get the redirect uri for a token.
Get rsa key from client
Validate client key before signing a request
Validate the token against the client_key
Validate the access token for the request.
Validate timestamp and nonce if nonce is valid.
Validate redirect uri
Validate the realms for a request.
Validate the verifier for the request.
Verify token and update request_token if necessary
Verify the request for the given token and realms
Confirm an authorization request
Authenticate a client based on the request.
Authenticate client_id
Get the original scopes from the refresh token.
Confirm that the given refresh token has the given scopes.
Get default redirect uri for client.
Get default scopes for client
Invalidate an authorization code given a client id and code code.
Save authorization code to the request and return the redirect_uri
Save bearer token and return redirect_uri.
Validate the bearer token and update the request object.
Validate client_id before adding it to the request
Validate the code passed in against the grant rules for the client
Validate the grant_type against the client
Validate a refresh token.
Validate response type against client. allowed_response_types
Validate scopes against the client.
Validate username and password and set request. user
Revoke a access or refresh token.
Update the default data for the qq api request.
Convert dictionary keys to string
replace weibo auth header with our auth header
Register this provider with an OAuth2 client.
Create a new remote application with the given oauth instance
Extract params from request.
Convert a string to bytes.
decode base64 to unicode
Create a Flask response object.
Get the cached clients for the current app
Add a remote application to the gateway.
Create a remote application and add it to the remote chain.
Check if any exception occurred in the certificate
Generate keys and certs for each iteration of the benchmark
= str ) return str_
Check if the load_privatekey_callback_incorrect method is correct.
Check that load_privatekey_callback is callable with wrong type.
Get and check for revoked CSRs
Check x509 revoked copy.
Create a certificate request.
Create a certificate from a request
Use a certificate chain from a file.
Use a file as the context for a certificate file.
Use a certificate as context for handshake
Add a certificate to the end of the chain.
Use a private key file for authentication or authentication.
Use a private key object.
Load a client certificate file.
Sets the verify_depth value.
Loads a previously saved DH file into the SSL context.
Set the cipher list used by the SSL context.
Set the list of certificate authorities used by the client.
Add a certificate authority to the context.
Enables or disables the use of SRTP profiles in the current context.
Setup next proto select callback.
Set the ALPN protocol versions for the current context.
Setup the alpn select callback.
Internal helper for setting the ocsp callback and OCSP data.
Set the context object.
Get the name of the server the handshake is running on.
Set the TLS extension host name.
Receive a message from the socket.
Read data from biodata and return as a byte string.
Renegotiate the handshake.
Shut down the SSL connection.
Returns a list of the ciphers supported by the current connection.
Get the client certificate authorities list.
Sets the shutdown state of the stream.
Return a random string of length num_ bytes or none if the server has no valid session
Return a client random string from the SSL session. The returned string can be used as an input
The master key of the session.
Exports a keying material.
Get a session from the library.
Returns the name of the current cipher
Returns the cipher bits in the current context.
Returns the version of the cipher in the current context.
Get the protocol version name of the SSL context.
Get the next protocol negotiated by Negotiate.
Set the ALPN protocol versions for the current thread.
Returns the ALPN protocol negotiated by the server.
Convert a bio into a python string.
Set a time object using ASN. 1 encoding
Get ASN. 1 string from an ASN. 1 time.
Get an elliptic curve from its name.
Dump public key to PEM or DER structure.
Load public key from a file.
Sign data with a hash digest.
Verifies signature over data with the public key of cert
Dump a CRL to a string.
Convert public key to cryptography private key
Check whether this key is valid.
Loads elliptic curves from the specified lib.
Get elliptic curves from a lib
Creates a new EC key instance based on the curve name
Derives a DER encoded X. 509 name
Return a list of tuples with the name and value.
Get the short name of the extension.
Get the extension data.
Certificate signing request to cryptography.
Set the public key in the certificate request.
Get the public key from the certificate request.
Get the subject name from the certificate request.
Add multiple extensions to the current x509 request.
Get the extensions from the certificate request.
Verifies the certificate request.
Convert to cryptography. hazmat. cert. Certificate
Set the certificate version of the certificate.
Get the public key from the evp. Raises libx509_get_pubkey
Set the public key in this cert.
Sign a digest with a private key.
Derive a message digest value by name.
Set the serial number of the certificate.
Get the serial number of the certificate as an integer.
Change the not - after date of the certificate by amount seconds.
Change the not - before date of the certificate by some amount.
True if the not after value has expired False otherwise.
Get the issuer from the certificate.
Set the issuer of the certificate.
Get the subject name from the certificate.
Set the subject name of the certificate.
Add extensions to the certificate.
Get a specific extension from this X509 object.
Add a certificate to the store.
Add a CRL to the store.
Set the verification time of the certificate.
Initialize the store context with the current certificate.
Returns an x509storecontexterror from the current context.
Verifies the certificate.
Change the serial number of a revoked certificate.
Get the serial number of the revoked certificate.
Set the reason reason for the certificate revocation list.
Get the reason for the CRL.
= str_ or None =
Convert to cryptography. hazmat. CipherSuite
Get the revoked data from the certificate.
Get the issuer name from the certificate.
Sign digest with the issuer_cert and issuer_key.
Export a certificate or key.
Get the type name of the PKCS7 structure.
Set the cacerts
Sign a digest with a private key.
Verifies the key against the private key in this key pair.
Return a base64 encoded version of the key.
Returns the public key for the peer.
Sets the public key pair for this spki to pkey.
Raises an exception from the error queue.
Get service metadata from config.
Returns issues for all the cards
Builds and returns the annotations for the given card_json.
Get all boards from the configuration.
Get all lists for a given board
Retrieve a list of cards from the server
Get a list of comments on a card
Construct the API url with the host name.
Generic getter for retrieving a resource from a link
Convert a link field to a dictionary.
Get the issues for a given query
='' )
Yields issues as they appear in the queue.
Get config value or default if key is not found
Returns True if the issue should be included in the project False otherwise
Make a table from a list of lists of cells.
Execute a command and return the result
Get int value of option in section
Pull changes from the data directory.
( url ) )
Get a collection of data from the given url.
Parses a string and returns a dictionary of sprint_fields
Get credentials from the credentials_path
Corrects pvals according to the FDR method.
Z - Score along an axis
Adjust the colors of the spines of a plot.
Build argument parser with all sub - commands
Add argument parser for the enrichr subcommand.
Calculate GSEA p - value for GSEA input
Return a Pandas dataframe of all available marts
Return a pandas dataframe with the data from the datasets
Return a pandas dataframe with the selected attributes
Return a Pandas dataframe of the selected filters.
Sets the number of cores used by the multiprocessing pool
Load GMT from gene_list.
Get library list from a database.
Download libraries from the enricher.
Organize heatmat and create a heatmat.
Load data into a Pandas dataframe.
runsamplespermu - compute random permutation for each sample in the dataframe
save rawes and res2d to csv
gene_sets can be a string or a list of strings
Send gene list to Ensembl.
Return number of genes in usr_list
Adds a cube filter to a script.
Adds an isosphere filter to a QGIS filter script.
Thin wrapper of the cube_open_hires function.
Find color name in source code and return red green blue tuple.
Make sure a variable is a list
Make a list from a variable if not already a list
Adds a filter to a filterscript.
Merge two or more vert - filters into one.
Splits a vert on the nonmanifold face with the given ratio
translate the verticies in a script.
rotate script by given angle
script = vert_function ( script ) value = value
function cyl_co ( script x y z )
Wrap a 2Cylinder script to create a Delphi wrapper script
convert deformed quadratic curve to vert
Writes a TeX filter to the given file.
Write mesh filter to file.
Voronoioioioi op.
Creates a filter file in the DICOM file.
Writes a vert filter to the provided file.
Vert script for cylindrical polygons
Scherical Vert script.
Renames a filterscript.
Changes the layer number of a filter script.
Duplicates the specified layer of the filter script.
Delete lower letters from the current script.
Add layers and files to script.
Add a new layer to the stack
Save the current state of the editor to a script file.
Creates a per - triangle filter and writes it to a file.
Measure topology of a filter script.
Parse thehausdorff distance log file.
calculate angle in radians with 2 decimal angle
Get the cross product of two vectors
Return vector multiplied by scalar.
Writes a depth filter to disk.
Sort a polyline file
Run aabb measures and return aabb geometry and topology
Lowercase extension if not already lowercased
Get the configuration for this upload set
Returns the URL for a file.
return the absolute path of a file in the destination folder
Check if extension is allowed
Resolves a conflict between this basename and the target folder.
Get the vprof version from the source file
Remove duplicates from a list of objects.
Calculates the object count difference between two lists of objects
Returns a list of tuples where key is the object name and value is the number of objects
Traces the memory usage of the target process.
The list of code events in this file.
Get the overhead for the current execution context.
Computes the memory overhead of the process.
Profile the package in the runpy interpreter.
Profiles the module for code events.
Profiling function execution
Runs the profiler and returns information about the run.
Get the names of modules in the given package
Run the function in separate process and return the output.
Return the type of a run object.
Initialize the module for the given run string.
= self. profile_package
= self. profile_function
Replace sys. argv with run object and run args.
Sample the profiling data and update the counters
Insert a stack of functions into a call tree.
Recursively fill node s sample count.
Recursively formats the tree and returns a dictionary mapping str_ to a dict of samples.
Compute the call tree for the current sample and return it as a dictionary.
Profile the package and return a dict with profile information
Profile the current module.
Profile the function call and return a dictionary with profile data
Transform a profile into a list of tuples.
Profile the runpy package.
Profile the current module.
Profile the function call and return a dictionary.
Show the guestbook page.
Add a new entry to the database.
Start the profiling server.
handle the root page of the project
Handles the case where we don t know what it is.
Handle a GET request.
Read a profile from the server
Sends an HTTP response to the client.
Check if module_path is in standard library path.
Record the line number and time of the previous line.
Generator for lines without stdlib
Updates the internal heatmap with execution count and runtime.
Skip over lines specified in skip_map
Calculate the run time and heatmaps for a package.
Format heatmap for output.
Calculate the run time and heatmap for the module.
Profiling function execution time.
Given a run_object and a list of prof prof_config return a dict of run_
Run a function with profilers.
predict_proba over each row in x
returns log probability estimates for each row in the x matrix
Calculates the average model given a 2D adjacency matrix.
Counts the vocabulary for a list of analyzed documents
Sorts the features in a vocabulary by their values and returns a numpy array of the sorted features
Limits the number of features in the given dataset.
Fit str_ model to z.
Apply the vocabulary to a vector or matrix
Convert to scikit - compatible object.
Performs a fit of the class to the data in Spark data z and averages the results
str_ )
Compute the linear regression model for the given data.
Fit the model using the pretrained model
Fit and transform the last step of the pipeline
Calculate the score of the given z.
Compute the score of an estimator against a z_test score function.
K - means clustering.
predict on an RDD
predict using a sparksgd classifier
Check the dtype of an Rdd.
Compute the SVD on the provided data
Transform an RDD or dict - like object to a new format by mapping each column in the
An iterator that yields blocks of bsize
Block the iterator yielding tuples of fixed size
Block a RDD with specified block size and dtype
Return a transformed RDD by applying a function to each element
Return tuple with shape of DataFrame.
Convert each row to an array.
Return the bitwise permission of a file or directory.
Check whether the path only has write permissions.
Read and check config file
Read and parse config file
Runs a shell command as a specific user
Execute a command and return stdout and stderr
Execute a command over SSH.
Validate the form
Get the headers for the request.
Returns the full url for the current configuration
get url of the event
Return the text body of the packet
Print discovery output.
Discover devices on the network.
Execute the plugin instance and send a confirmation
Send a confirmation message to the client.
Called when a push notification is received.
Execute device.
Scan for devices.
Try to find ledger file
, install )
Load a precalculatedtextmeasurer from a JSON file.
Generate all Unicode character sets in the given font
Generate encodeable characters from a list of characters.
Calculate the mapping from characters to their length.
Calculate character lengths and pair to kerning in JSON and write to file f.
convolve 2d gaussian with kernel 1d
Get a kernel for a gaussian.
Convert an image to grayscale and optional alpha channel
Entry point for the compare script.
Compute the value of the ssim between two images.
Compute the similarity between two images.
Destroy the device.
Change the code version of the device.
Returns a dictionary of the status of the Raft Node
Prints the status of the hunt.
Get node name from a connection string.
Try to bind to the server if not ready yet.
Inform a connection that it is coming from a server.
Send a utility command to the server.
( str_ )
Connect ifnecessary.
Called when an outgoing connection is established.
Called when an outgoing message is received from the other end
Called when a connection has been disconnected.
Add a node to the cluster.
Drop a node from the graph.
Send a message to a node.
Add item to the queue.
Put item into the queue.
Get a value from the heap
Try to acquire a lock with a timeout.
( lockid ) ) return
Release a lock on this entity.
Set the hosts to connect to.
Create multiple indexes.
Migrate the aggregate and forensic index schemas
Strips all the metadata from the report.
Save aggregate reports to Kafka.
extract xml from file object or string
Parse an aggregate report from a file or file - like object.
Convert a list of forensic reports to a CSV file.
Parse a dmacorr report file or email report
Returns the capabilities of an IMAP server.
Save forensic reports to splunk
Decode base64 padding characters.
Get the reverse DNS name for a given IP address.
Convert human readable timestamp to datetime. datetime object.
Get the information about an IP address.
Converts an Outlook Message in bytes to a RFC822 Message.
Convert a string to a list.
cli function to parse an AWS Batch Export report
Drain the connection.
Publish a message to a subject.
Publish a request to a subject.
Publish a message to a subject.
Asynchronously subscribe to a subject.
Unsubscribe from the given subject.
Send a ping to the server and wait for the ping to be sent.
Select the next available server in the server pool.
Process an error message received from NATS
Handle errors from operations like disconnect or disconnect
Return the command to send to HP IMC
Processes a ping from the internal list of pongs.
Process a message and add it to the pending queue
Process the info dict from the client and add to the server pool.
Flushes the pending data
Read loop for the asyncio asyncio object.
Load features from NumPy array.
Load features from images
Pearson correlation of two sets of images
dot product of images.
Selects features based on support.
Returns a list of features in ascending order.
Classify using the scikit learn API
Fit the classifier and returns a clf object
Set the class weight
fit cross - validation classifier
Fit classifier to an image or feature table
Get a random set of voxels
Get the top words for each topic.
Pearson correlation between two arrays
Find the frequency of the signal p
Load activations from a file.
create image table
get feature names
counts the number of times each feature appears in the dataset.
Load a pickled feature table dataset.
Save the feature table to a pickle file.
Returns the ordered list of feature names in the features columns
Search for features in the table.
Return a list of ids that match the expression.
Convert SDF to CSR
transform foci by inverting the matrix mat
Convert XYZ to MATLAB.
Apply the transformation with the given name.
Returns a boolean mask of the requested layers. If layers is none the entire image will be returned
Load images from a list of files using a masker
Save image masker to a file.
Set logging level.
Parse a string as a WalletAddress object
Convert a dictionary to an object.
Get price of ticker
Get a list of NewsItem from file_id
Make a request to the specified URL and return the response.
Get bearer token info.
Make an HTTP request to the specified endpoint with retries and retries.
Get a list of tracks from a spotify album
Get artist by Spotify ID.
Get a list of albums by artist.
Get artist top tracks by country.
Get artist related artists for a Spotify artist.
Get artists from Spotify.
Get a category by its ID
Get a list of playlists for the given category.
Get a list of categories
Get featured playlists
Get new releases from the API.
Get the artists or users the logged in user follows or follow the artists or users specified in ids
Get the albums of the artist.
Get all albums of the artist.
Return total albums for the artist.
Get the currently playing track and context.
Get the current player.
Get list of available devices.
Get recently played tracks.
Replace tracks in a playlist.
Create a playlist for this playlist.
Get all playlists for this playlist.
Get tracks from this album
Get all tracks from this album.
Return OAuth2 authorization URL
Get Spotify album by ID.
Get artist by Spotify ID.
Get Spotify track data.
Get a user by its Spotify ID.
Get albums by IDs.
Get multiple artists by their IDs.
Convert a string to a document identifier.
( client ) )
URL to redirect to OAuth2 authorization page
Get the attributes of the authorization request as a dict.
Return the parameters string of the model
Build playlist tracks.
Get all tracks from this playlist.
Transfer a device to a new URL.
Get object from href.
Get user input for whois server.
Convert month to short month if possible or shorten month.
Update code URLs in the current directory.
Return whether the current version is greater than the current version.
Check if the current version is a development branch.
Return whether the current version requires deprecation
Backup the current configuration and save to json file
Restores the previously saved configuration.
Check if a string is to be ignored.
Parses the options and returns a list of domains
Extract base from url
Recursive function to format decoded data
Do HEAD request with pyfunceble wrapper.
Return an HTTP code if available.
Check if the domain is valid.
Check if a domain is a subdomain of the current config
Checks the syntax of an IPv4 address.
Returns True if IP is in IPv4 range else False.
Check if url syntax is valid.
Loads the configuration from the current directory
Check if a random number is safe and print it if not
Download entry management URL if valid.
Add url_file to entry management url cache.
Print header.
Decide what to do with a file.
Get or set the domain.
This method is used to choose the URL of the specified file.
Colorify the logo for better readability.
Format the domain according to the extraction scheme.
Extract the domain name from a file.
Return a list of files to be filtered
Return a list of URLs for all the files in the folder.
Get status and expiration date.
handle functions for catched modules
Download and parse JSON structure.
Create a directory and all its subdirectories.
Delete all uneeded items in the directory structure
Set path to configuration and default path.
Install production configuration
Install iana configuration.
Install PSL configuration file.
Download and install directory structure file.
Merge upstream config with new config.
Load the configuration from a file.
Split a version string into a tuple of digits and non - digits.
Check if version number is greater than or equal to upstream
Return True if path is a clone of a folder or file.
Handle non - existing interned strings.
This method is used to get the host file directory of the pyfunceble object
Prints a unified version of the output file.
Called by pyfunceble whenever a status file is selected.
Don t try to produce a file if the status of the domain is inactive.
Parse and store public suffix for each extension
Load json file into intern dict
\ Standard replacement for the given element.
Load the IANA database from the pyfunceble object.
Return the referer to the file with the given extension.
Yield tuples with matched extension and referer
Update the IANA database with the contents of the database.
Tries to mine the history of url for pyfunceble.
Retrieve data from json file and store in intern dict
Backup a previously saved instance to JSON.
Add element to dictionary.
Remove bare_from the object.
Return a list of mined pyfunceble objects.
Mine and add to list.
Return JSON content from file.
Write json content to file.
WHOIS record to file.
Update expiration date of extraction based on extracted date.
Called when referer not found.
Called before generating the page header.
Construct header of table.
constructor of data to be printed
Return the file size from the header
Colorize the output data.
Print data as JSON to self. output
Return the data to print or none depending on the type of template.
Internal method to calculate time differences.
Format the execution time of a job.
Return list of files to delete.
Return list of databases to delete.
Deletes all the databases and files in the current directory.
Return the hash of the file.
Hash data with algo.
Returns a dictionary with the hash of the specified algorithm
Executes the shell command and returns output
Removes a key from the main dictionary
Rename a key in the dictionaries
Merges two dictionaries recursively.
Save the main dictionary to a JSON file.
Write this section to a YAML file.
Fixes the path by adding directory separator if needed.
Write data_to_write to file.
Reads and returns the contents of the file
Returns a sorted list of unique strings
Merges a list into the main list
Return a list of items that do not match the regex
Perform the regex match and return the result
Perform replacement operation on input string
count the number of items in the status list
Calculate the percentages for the intern tables.
Check if url is valid.
Check if a domain is valid.
Check to see if the domain is a subdomain.
Return a syntax status object.
Reformat historical_formating_error.
Retrieve data from inactive database.
Backup inactive database to JSON.
Return the timestamp for a given string.
Return the content of the object as a list.
Return True if str_ is present in the dictionary False otherwise
Retrieve whois data from the whois server.
Backup a whois database.
Return True if the user is in the database False otherwise.
Return True if authorization and time is older than current time.
Return the expiration date of the token
Set travis build permissions
Executes travis if pyfunceble. configuration. travis is set.
Lookup namespace for pyfunceble namespace.
Do whois server on whois server and return response.
Get status from status key.
Get the configuration for the requested domain extension.
Get the current object of the actor.
Yield paths of standard library directories.
Generator of standard package names.
Returns line numbers of unused import messages.
Find unused import module name.
Generator that yields line numbers of imported star imports.
Yields undefined name and module name for importstarusage messages
Returns line numbers of unused variables.
Find duplicate key line numbers in messages list.
Check source code.
Extract package name from a line of text.
Check for multiline imports
Return true if line is a multiline statement.
Remove all imports from the specified module
Return line with imports broken up up into a list
Given a list of messages return a dictionary mapping line numbers to messages
Filter undefined name from star imports.
Filter duplicate keys
Return whether the dict entry contains the given key.
Check if a value is a literal or name in python
Yield line numbers that would be skipped if a pass was found.
Filter useless pass lines from given source file
Get the indentation of a line of text
Get the ending of a line.
Removes unused imports from a source code fragment.
Split a comma separated string into a set
Return True if filename points to a Python file
Check if filename matches any of exclude patterns.
Read data from a binary stream to the obtainleaseresponsepayload
Write the LeaseResponsePayload to the output stream.
Write CancelRequestPayload to output_stream.
Read method for cancelresponsepayload.
Create a name from a value and a type.
Reads the digest from the input stream.
Write a KMIPv1 tag to the output stream.
Read the application specific information from the input stream.
Write the application specific information packet to an output stream.
Create a new application specific information resource.
Reads the derived parameters from the specified input stream.
Write derivation parameters to output_stream.
Read the request payload from the specified input stream.
Write GetRequestPayload to output_stream.
Read the response payload from the specified input stream.
Write GetResponsePayload to output_stream.
Write the contents of the object to a byte stream.
Read signatureverifyresponsepayload tag from the input stream.
Build a failed operation response.
Processes a single template attribute.
Retrieves attributes from the given managed object.
Set attributes on the given managed object.
Set the attribute on the given managed object.
Returns if a user is allowed to perform an operation on an object.
Write the contents of the object to output_stream.
Create a new SecretKeyEntry.
Set the value of a configuration setting.
Load settings from the given path.
Combines all the strings in a list into a single bitmask
Returns a list of enums. CryptographicUsageMask values.
Reads the longinteger from the input stream.
Write the LongInteger to the stream.
Make sure the value is of the correct type
Reads the biginteger from an input stream.
KMIP0041 - > Hexdump.
Check if the value is one of the allowed types.
Check if the option is valid
Read data from istream.
Write the value to the stream.
Write this boolean to the given ostream.
Checks if the value is of the correct type
Read the interval from an input stream.
Check if the value is in the allowed range.
Check that the credential is valid.
Ensure that the secret data structure is valid.
Validate the opaque data.
Convert an attribute name to a tag.
Convert an attribute tag to a name.
( enumerations )
Get enumerations from bitmask
Check if potential_mask is a bit mask of enumeration.
The method writes the template to the output stream.
Read data from the input buffer.
KmipCreateKeyPairResponsePayload. write is used to save the createkeypairresponsepayload
Read method for getting attribute list request payload from the input buffer.
KMIPv3 GetAttributeListRequestPayload.
Write the response payload to a file - like object.
Return a list of json files in directory p
Start the monitoring loop.
Get the certificate from a connection
Get the extended key usage from a certificate extension.
Get common names from a certificate object.
Get the client identity from a certificate
Read the createrequestpayload tag from the input buffer.
Write CreateRequestPayload to the output buffer.
Read the createresponsepayload tag from the input buffer.
Write CreateResponsePayload to output_buffer.
Build a key from a pobjects object
Read data from input_stream.
Write the field to a bytearray.
Check if the given attribute is supported by this object.
Check if attribute is deprecated in current version
Check if an attribute can be applied to an object type.
Check if an attribute is multi - valued.
Read checkresponsepayload tag from the input stream.
Write check response payload to output stream.
Read the attribute reference from the input buffer.
Write the attribute reference to a bytearray stream.
Read the attributes block from the input stream.
Write the attributes to a bytearray stream.
Read the nonce from the input stream.
Write the nonce to the output stream.
Reads this usernamepassword credential from the specified input stream.
Write the username and password to output_stream.
Write the device credential to the output stream.
Reads the credential from the specified input stream.
Write the credential to a bytearray stream.
Reads this mac signature key information from the specified input stream.
Write MacSignatureKeyInformation to the output stream.
Writes the keywrapping data to the output stream.
Read keywrappingspecification tag from the input stream.
Writes this keywrapping specification to a file - like object.
Read the extension information from the input stream.
Write Extension Information to a byte stream.
Read RevocationReason data from the input stream.
Write a revocation reason to the stream.
Validate revocation parameters.
Read the objectdefaults tag from the input buffer.
Write the object to a bytearraystream.
Write the contents of the KMIP packet to a byte string.
Read the profile information from the input buffer.
Write the profile information to a bytearraystream.
Write the capabilities of this KMIP to a bytearraystream.
Stops the interface.
Write the field to a bytearray.
Reads a binary string from the input_buffer.
Write Response Payload to output stream.
Create RSA private key from PEM encoded private key.
Read data from input_stream.
Write the signature and unique identifier to output stream.
Read data from input_stream.
Convert a protocol version to a KMIP version.
Read the protocol version from the input stream.
Write the protocol version to output_stream.
Reads the authentication tag from the specified input stream.
Write the authentication credentials to the output stream.
Read the pollrequestpayload from the input stream.
Read details of certificate from the input stream.
Write this certificate to the given output stream.
Read the archive response payload from the specified input stream.
Write the payload to output_stream.
Run the client.
Read the rekeyresponsepayload tag from the input stream.
: rtype : bool_
Get attributes of the item with the given uuid
Return a list of attributes for the item with the given UID
Send a query to the TSDB server.
Open the connection to the server.
Close the connection to the XMPP server.
Register a managed object with the backend.
Get attributes of a user.
Activate a KMIP tunnel.
Build and return a cryptographic parameters object from a dictionary.
Builds the encryption key information object.
Builds a mac signature key information object.
Build a key_wrapping_specification object from a given value.
Builds a list of common attributes for a resource.
Builds a list of name attribute.
Reads a query request payload from the given input stream.
Write the query request payload to a bytearraystream.
Read method for a getattributesresponsepayload.
Write GetAttributesResponsePayload to output_buffer.
Get a single entrypoint by group and name
Get all endpoints in a group ordered by endpoint name
Get all entrypoints from a group.
Loads the module and object specified by the module_name
Create an entry point object from a string.
Generate a controller file.
Rewrite src_file to dst_file with project_name and copy to dst_file
Check if url is valid.
Encode a dict into a urlsafe - encoded string.
Decode a serialized object.
Return absolute URL for a given endpoint.
Add a user to the session.
Return the current user if there is one.
Create the flask app
Write dataframe to csv file.
Read a pandas dataframe from a CSV file.
Serialize a DataFrame object to the writer.
Deserialize a Pandas dataframe.
Contents URL.
( self. path ) )
( self. id ) )
, self. name )_
Return a DataFrame from the stream.
Returns the intermediate dataset of a port.
Fetch all experiments in workspace.
Fetch all datasets in workspace
Fetch a single dataset from the server
Find all globals names in a code object
creates a copy of the pen
Lookup a color scheme and return its r g b a values
Draw the line
cubic bernstein extrema calculation.
Derivative of the cubic bernstein equation
Build tree choices
Empty the cache and populate it with empty values
Empty the cache and initialize the object.
Get a value from the cache.
Update a value in the cache for a specific entry.
Set a key value pair in the cache.
Initialize the page
Resolve a tree i18n alias.
Returns True if the current app is the admin app
Calculate the depth of the item in the tree
Get the current item for the given tree.
Generate a URL for the given sitetree item.
Initialize sitetree and sitetree items.
Get an attribute from the current page.
Get the level of the ancestors of current_item
Check if the current user has the right to access the item
Build a tree from the given alias and context
Returns the children of the current item
Returns the children of the given item
Update has_children attribute for tree items
Filter items based on navigation type
Get the ancestor item of base_item
Set in_current_branch attribute on base_item
Resolve a variable name from the current page context
Returns a node for parsing the sitetree for a tree.
Returns a Node object representing the immediate children of the given node in the DOM tree.
Returns a list of nodes representing the breadcrumbs of a sitetree.
Render a tree using a template and return its string representation
Return a Node instance for the current tag.
Return the URL name for a model and page.
= True ) return str_
Redirects to a specific URL
Redirect to a URL in the POST of the request.
Add a new object return the redirect to the add view
, str_ )
Add the choice field to the form for each namespace
Get tree instance.
Move an item within a tree.
Change the parent of the object and save the tree.
Get urls for tree admin
View to dump the tree to a file.
Import the application s sitetree module.
Get the model class for a given settings entry name
Build a str_ instance from a mapping.
Imports a module from a Python source file.
Loads a str_ instance from a TOML file
Create a str_ instance from an object
Create HTTP headers for a new span.
Get the current context for this span.
Start the span. Return self for chaining.
Stop the tracer.
Update binary annotations and logging context.
Add binary annotation to remote endpoint of this client
Override the span name of this ingredient with a supplied name.
Copies the endpoint with a new service name.
Build a new span based on the current span.
Encodes a list of spans as zipkin_pb2. ListOfSpans.
Convert a Trace span to a Google Span protobuf object.
Convert hex_id to bytes
Converts ZipkinSpanKind to ZipkinSpanKind.
Convert Endpoint to zipkin_pb2. Endpoint.
Convert zipkin annotations to zipkin annotations.
create zipkin annotation with timestamp value and host
Creates a binary annotation.
Create Zipkin endpoint object.
Copy endpoint with new service name.
Create a list of annotations.
Builds a list of binary annotations from a dictionary.
Create a new span.
Converts a thrift Span to bytes
_list = encode_bytes
Detect span version and encoding.
Convert spans to the specified output encoding.
Push zipkin attributes to the stack.
Encodes a span from v2_span to bytes.
Create JSON endpoint from endpoint attributes
Encode a single span.
Decodes thrift spans.
Converts from a Thrift endpoint to an endpoint object.
Decodes the given Thrift annotations into a dictionary.
Convert zipkin binary annotations to zipkin annotations.
Decodes a Thrift span to a python span.
Converts a trace_id to a string
_, num_ = 16
Writes a 64 - bit unsigned integer to the data starting at pos.
date_fixup_pre_processor replace month of year with max_month_day
Set the transaction code for MBank tag.
Set the IPH ID of a tag in the tag_dict
Set the number of the transactions for this tag in tag_dict
Join the lines in a string
Parse the response body as JSON if the body is in JSON format.
Logs a limited duration
Get bot info by ID.
Get list of bots.
Read and return the next term from the UDP packet
Write message to socket and return length + packet
Decode an encoded string.
Encodes a unicode term into a zlib encoded string.
Add a source address to the multicastoutsocket.
Send all the messages in the queue
Set the callback function called when the remote service hello message is received.
Stop the web server.
remove all local services
Search for services on the connected server.
Create a SOAP message from the WSGI environment.
Discover and execute a python script.
Get the manager related to the through model field.
( str_ )
Get all child m2m relationships that are a child of given model
Overrides the save method in ClusterableModelBase. saves.
Make sure all forms are valid and that there are no duplicates.
True if any form has changed
Creates a new address object with the same fields but with a valid checksum.
Generate checksum based on the address trits.
Prompt for seed from user.
= 1 )
address = address
Create an iterator based on the seed.
Creates a sponge based on the index of the seed.
absorbs a sequence of trits into the state
Squeeze a block of trits.
Applies the truth transformation to the current state
add trits to the left and right
Converts an integer to a list of trits
Tritral addition.
Accumulate the trits of a full add with carry.
Outputs the seed to the terminal
find transactions by address
Promote a transaction to the top of the stack
Resolve a uri to an adapter.
= str_ )
Logs a message to the logger.
Send a HTTP request to the specified URL and return the HTTP response.
Interpret the API response.
Add a digest to the message.
Get the multisigaddress of the value.
Create an iterator for the addresses of the security level.
Given a cryptographically secure digest return an address.
Generate an address from a key iterator.
Return a list of transaction objects matching the given search criteria.
Generator for all the addresses used in a block from seed
Get a list of bundles from the given transaction hashes.
Trytes codec check.
Get codec info.
Convert a bytearray to a trytes bytearray
Trytes decodes a bytearray into a bytearray.
Find random addresses of the given security level and checksum.
Add a route to this blueprint.
Construct a signature message from a string of transaction trytes.
str_ = None return str_
). encode ( )
set the is_confirmed
Get the list of messages in the signature transaction group.
Group transactions by address.
Recursively discover all command modules in given package
Send a request to the adapter and return the response
Apply filter to value.
Return the jobs URL for the given job_id.
get list of errors from validation
Check if the form is valid.
Creates a validator for the bundle based on transactions grouped by bundle hash.
Get the signature errors for a bundle of supported signatures
Return an error message if the group signature is invalid
Traverses the bundle referenced by txn_hash and returns the bundles in a list.
Start an IPython repl with the given api object.
Return a random string of length length
Generate a digest using the key and fragment lengths.
Sign the input transactions of the bundle
Prints a pretty formatted representation of the object.
Add the given trits to the hash and update the key.
Add context to exception.
Get the security level as a string
increment the legacy tag num_ = 1
Return the tag of the most recent txn.
Adds a transaction to the block.
finalize transaction by removing transactions from the bundle and inserting them into the transactions list.
Sign all inputs with a given key.
Create a list of proposed transactions for inputs to this block.
Converts a value from one unit to another.
Decompress a g1 compressed number
Prime field inverse algorithm.
Create an instance from a JSON file.
Splits the text into a list of words.
Return a list of categories.
Create a random component.
Build a builtin timescale by name
Construct color components from an image file.
Convert the table to a CSV string
Returns the maximum width of the table
Get a decor for component c.
Plots the elements of the list.
DEPRECATED. See rock. component.
Process a text row into a dictionary of columns.
Parse Canstrat text and return a dictionary of lists.
Unique list of thicknesses and primary values.
Creates intervals from a list of tops
Cleans the longitudinal data.
Create a set of intervals from a petrel style file.
Load a list of intervals from a canstrat file.
) return copy
Writes the history to a CSV file
Convert the table to LaS3.
Find overlaps between strings.
Find gaps in the string.
Remove segments from the string based on a number of criteria.
Anneals the strip in accordance with the annealing order.
Fills gaps with component
Return the union of two intervals as a list.
Compute the intersection of two intervals
Merge overlapping segments into a single segment
Invert all entries in the list
Crops the log list to a given extent. If copy is set to True the new
Run a series of tests and return a dictionary mapping test names to test results
Try to find the field_name in the customformatter.
Get a list of jobs from the server
Parses the given hcl string and returns a dictionary with the results
Update a token for a user.
Get a list of all available allocations
Fail a deployment by ID
Pauses a deployment.
Enable or disable a node.
Drain a swarm node using the drain spec.
Check if a node is eligible and ineligible
List files in a folder or in a path.
Get content of file or URL.
Stat a file on the server
Join agent to the cluster
Update the list of servers.
Force leaves a node
Get all nodes matching the given prefix
Get all the evaluations for a given prefix.
Get namespaces with a prefix
Register a job with the given id
Add a job to a workflow
Dispatch a job.
Revert a job to a previous version
Revert a job to a previous version
Remove a job from nomad
Get the current configuration.
Delete a peer by its address.
Get all deployments with a specific prefix
Get a random string from the mutator function
Get a mutator function for a given object.
Returns a random string for polyglot attacks.
Return a unicode string from the given buffer
Serves a custom html file to the client
Context manager that yields the fuzzed JSON
Spawn a process and wait for it to finish.
Get output from process.
Finish reading from the process.
Terminate the process and log the result.
Start the worker.
execute the command and return the output
Build a random string.
Build and return a string.
Build quote and quote string.
Generates a random value from this builder.
Build a new opt string.
get the ref definition from fuzzer and build the result
Build a star.
Shut down the testcase and wait for it to finish
Spawn the process and monitor the process for sigint.
Start the process monitor
returns a random float in the range [ a b )
Returns the fuzzed version of the JSON
Get fuzzed JSON
Signal handler for SIGTERM.
Kill the process if running
Kill the running process if it is still running.
Resume the game if paused
Stop the server process
Restart the child process
Return a list of skype events from the API endpoint.
Set user mood.
Set the avatar for the logged in user.
Get the meta data for a URL
Get Skype Contact by ID
Retrieve the user with the given skype ID
Return all the bots.
Get Skypebot user by user id.
Search skype for users
Return all Skype requests sent to this user.
Create skype from raw dict.
Merge another object into this one.
Merges an object with the current one. Returns the merged object.
Read token from tokenfile.
write token to tokenfile
Verify Skype and reg token
Refresh Skype token and get reg token.
Get userid from API.
Retrieve the token using the skypetokenprovider
Retrieve the list of skype endpoints from the msgs server
Check if a user is logged in
Authenticate a user by sending and getting the token
send msg to msgshost
Ping this message.
Get the most recent chats.
Get chat info by id.
Create a user.
Return user id from url
Get chat id from url
unicode encode and un - encode text
Try to find a format handler for the given text
Parse text with given format handler and extract metadata.
Return a dictionary representation of the file.
yaml. safe_load = safeloader
Export metadata to yaml
Export metadata to JSON
Return a tuple of fullmatch and string.
Return a list of items in the string
Get all sublists of the current node.
Changes the pattern of this matcher with a new start string.
The list of arguments for this command.
Returns all lists matching the pattern in the arguments list
Plant the trie for each string in the list
Builds a pattern from a trie structure.
Check the key for an index and return the start and stop indices
Insert string at given index.
Partition char into words and shadow.
Returns a list of subspans for the given type
Shrink the spans in the field by rmstart to rmstop.
Update the span of the inserted text
The number of nesting levels in this context.
Get the shadow of this string.
Ext link shadowing.
Returns dict mapping each type to a list of spans in the original string.
Pretty print the AST.
list of str_ - > Parameter
parser functions for this str
Return list of template for this string.
Return list of wikilinks in this string.
Return list of comments for this string.
The external links of the text
The list of tables in the current state
Generate all non - overlapping spans of a given type
Get all ancestors of the span of the current node.
Get the parent node of this node.
Returns the mode of this list
Get argument by its name.
Removes the first occurrence of duplicate arguments.
[ argument ]
Does the function have an argument with the given name and value?
Delete argument by name.
Convert a CRS code to a string.
Find an ellipsoid by name.
Opens a CRS object from the specified URL.
Loads a geometry object from a file
Creates a CRS from an EPSG code.
Returns the Esri projection corresponding to the given code
Convert a SR code to a CRS object
Creates a CRS from an unknown text string
) return str_
Read VLR record from data stream.
Parses the geotiff keys from the vlrs
Parse GeoTiff key directory and return a list of geotiffkeys.
Get the signedness value for an extra dimension.
Returns the extra_dim_id for the given type string.
Create a new point record by copying an existing point record.
Copies the fields from the other record to this record.
Append zeros if too small
) + tuple
Create a point collection with zero data
Read point data from a stream.
Create a point object from a compressed buffer.
X dimension in points.
) or str_ Y dimension
) or str_ Z dimension
Add an extra dimension to the data
Write vlrs to a binary stream.
Write the header to a file.
Build a dict of point formats and their corresponding dtypes.
Build a dictionary of unpacked dtypes for each point_formats_dimensions.
Convert a numpy dtype to a point format identifier.
Returns the minimum file version for a given point format ID.
Checks if a point format is compatible with a given file version.
Extract vlrs of type vlr_type from vlrs.
Read a list of VLRs from a data stream.
Check if all las files have the same point format id
Check if all las files have the same dtype
Raises an error if the signature of the input file does not match the signature of the output
Read the header from the stream
read vlrlist from the data stream.
Read points from the data stream.
Read points data from the stream.
Read internal VLR waveform packet.
Read evlrs. evlrlist.
Print a warning if we are not at the expected position.
Create a lasdata instance from a lasdata header
Merges multiple LaS files into one.
write a las to disk and then read again
Date of creation day of the year.
Set creation date of the Dataset.
min of each dimension
set the minimum values
s ( )
Set the maximum values of the axes.
( str_ )
Offsets of the mesh
Read the file version from the stream.
Convert a header from one version to another.
Unpack an array with a mask to a given dtype.
Returns a list of dimension names that are completely lost from the unpacked dimensions.
Returns a dictionary mapping each sub - field name to a tuple containing the sub - field name and
( str_ ) for num_
( ) for dims in self )
Entry point for the cli.
Calculate the CRC of a sequence of bytes
Print hex data in debug mode.
Verifies and strips the last digit of the response if the checksum is good.
Return a list of the set bits in a string.
Generate a query string from the given command.
Demonstration of asyncsatel.
Connect to the IRC host and port.
Start monitoring the websocket connection
Send disarm query to server.
Clear an alarm.
Set the output of a machine.
Keep connection alive.
Monitor the status of the device.
Close the stream.
) return True
Try to guess file type from the path.
Get file_id of a file.
Get a notebook from the database.
Build a notebook model from a database record.
get directory from database
Convert file_records from DB to notebook or file.
Create a base directory model from database record.
Create a file model from database record.
Save a notebook model to disk.
Save file to database.
Rename a file or directory.
delete file or directory
Ensure that a user exists in the database.
Purges a user from the database.
Create a directory at the given API path.
Check if user is in directory.
Delete directory from the database.
Check if a directory exists.
List all the files in a directory.
List all directories in a directory.
Return files. c. name == api_path.
select file from api path
files. c. id ]
Get a file from the database.
Get a file from the server.
Get file_id from API path.
Check if a file exists.
Renames a directory and its parents.
Save file to database.
Purge remote checkpoints for a given user.
Reencrypt row content with given decrypt and encrypt functions
Reencrypt the content of a user.
Derive a single Fernet key from a password and user_id.
Get the name of a column like object.
Convert row to a dictionary where the keys are the field names.
Convert a row into a dictionary with encrypted content.
Create a remote notebook checkpoint from a given notebook object and path.
Create a checkpoint from the given content.
checkpoint_id, path )
Get the content of a checkpoint.
= path )
) Rename all checkpoints.
) return True
) return True
Resolve a URL path into its component parts.
Joins the given prefix to the model if the model has a key of str_.
Called when managers are changed.
Get a file or directory.
Remove leading and trailing whitespace from api_path.
Split a file path into its directory and file name
encodes a notebook to base64
Read a notebook from a base64 encoded string
Try to decode content from base64 if it s not possible.
Decode a file from base64 to python.
Return a list of all directories up to and including path.
Create a user in the database
Separate files and directories from each file in a list
Traverse a list of directories.
. name yield file
Yields all files in dir with content
Reencrypt the user content for a user with a user_id.
Unencrypt all users with user_id
Unencrypt the content of a single user.
Context manager to create alembic. ini file in alembic_dir_location
Upgrade alembic. ini file to a revision
Embeds a block of data into the internal representation based on the serializer registered for that type
Adds instance to embed queue.
Load the embeds for the given type from the database
Insert an instance of the embed type into the block
) return self. data )
Validates the data against the schema
Admin view for the admin app.
Convert to json.
Hide all fields that are not authenticated
Remove fields from fields if request query param
Get version and preview if present in GET
Get the list of articles to display
Get the list of items to be displayed
Handle null boolean field.
Check if given widget is valid
Validate a zone raising error if invalid.
Check if id is a valid UUID.
Get permissions of the user
Add or remove group based on permissions.
make sure the author has a string
Save widget and data to a zone
get data from self. data
Prepare data to be sent to the client
Render the template using the given data.
Get integration settings.
Get the list of pages for this integration.
Get integration settings.
Update settings for a given integration.
Create a new user with the given invite.
contents )
Render a zone by its id
Saves the featured image attachment
save article subsection by id
Returns the extension of the image
Returns the medium url for the video.
Saves the image as thumbnailed thumbnails.
Save the thumbnail image to disk.
Get a connection to the database.
get_bandwith_limited_stream from fileobj
Read a number of bytes from the file.
Consume amt amount for a request_token.
Process scheduled consumption.
Returns the projected rate for the given amount of amt
Record the current consumption rate
Poll transfer for result of transfer.
Get callbacks for transfer future by callback type.
Filter a dict based on whitelisted keys
Decrement the counter.
Finalize the callback and call the callback if the callback has been called
Check if file is special or not.
Acquire an exclusive resource.
Release a previously acquired lock.
Adjust chunksize based on file_size
add file to IOTask
Returns the output manager class for a given transfer fileobj.
+ str_ )
Request pending writes.
Return True if fileobj is seekable False otherwise.
Shutdown the application.
cancel all of the pending transfers
wait for all transfer coordinators to finish
Wrap the given data and return a file - like object.
Returns the input manager class for a given transfer fileobj.
Set the exception of the transfer.
Set the result for the future
Set the exception of the future.
Get the result of the job.
Cancel the future if it is not done
Submit task to executor
Add a done callback to be invoked when transfer is complete
Add a failure cleanup function to the failure cleanups
Announce the task is done.
Upload a file to a bucket.
Download a file to S3
Parse decorator arguments.
Find step node and refactor step code and params.
Check if the decorator arguments are valid and step accordingly
Find step node and refactor step function and return diffs.
Updates a membership.
Deletes a membership.
Get catfact from the facts page
Create a message in a room
Deletes a membership.
Validate the base URL.
Check if given string is a valid web URL.
Open a local file at the given path.
Check that o is one of acceptable_types.
Create dict from items with none values.
Check if the response contains the expected response code.
Convert json data into dict.
Return a webex_teamsdatetime object from a string
Creates a new game.
Updates a room.
Delete a room.
Returns a list of items in the org.
Get created date
Get the access token from the environment.
Updates the webhook with the given id.
Deletes a webhook.
Set the wait_on_rate_limit parameter.
Update headers of the request
Returns the absolute url given a relative url
Send GET request to given URL.
Get all pages of a given URL.
Send PUT request to given URL.
Send a DELETE request.
Create a new token for a subject.
Delete a message.
Gets a person object by their ID.
Deletes a person object from the account.
Returns the current logged in user
Get a list of items from the API.
Creates a new custom domain
Updates the specified team with the provided name.
Deletes the specified team.
Serialize a tuple or dict into a tuple.
Last activity of the object
Post events to a room
Get the public url of the ngrok instance
Delete webhook with a given name.
Create ngrok webhook
delete and create ngrok webhook
Read telegrams from the serial port and parse them.
Reads messages from the serial connection and puts them in the queue
create DSMR protocol factory
Creates a connection to the DSMR Pebble.
Creates a TCP connection to the DSMR.
Called when data is received.
Connection lost handler
Parse the incoming telegram and call the telegram_callback
Parses a telegram into a dictionary
Get the python version from a python file
Given a list of specs ensure that the first spec is python.
Find all packages in a given top directory
Run a shell command.
Get data files for given data specs.
Find packages in root that match file_patterns.
Compile a regex pattern.
Yields all possible parts of a path
Translate a glob pattern to a regular expression.
Join translated parts to a single string.
Translate a glob pattern to a regular expression.
Override postgresdb. Writer. truncate
( str_ ) ( )
( str_ )
write out all the index triggers for a table
Write constraints to the database.
, ) return str_ % table. name
( table ) )
( table ) )
( table ) )
Returns the number of elements in the queue
Add a new record to the queue.
Start executing tasks in the background. If block is True sleep until there are no tasks left to
Builds the extra predicate to be used when searching for objects.
SimpleJSON datetime serializer.
Reconnect to the MySQL database.
Executes a query and returns the first row or none.
Get a sqlite3 database connection
Benchmark function.
Return a connection to the pool
lookup error code by errno
+ len ( self )_
Connection failure callback
Return expression and params sorted by field name.
Create sets and params for update statement
Connect to a database in the connected database.
Destroy the database
Start a new step
Stop a step by adding an end date to the step data.
Load the steps from the yaml file.
Disconnect from the server.
Re - establish connection to the device.
Connect to the websocket at self. url
Called when websocket message is received.
Stop all timers
Send a ping to the websocket.
Check if a pong is received. If it is cancel timer and reconnect.
Send data to the connected client.
Clear the paused state and resubscribe the socket
Handle system response and ping events.
This method is called when an error is raised.
= ts
Resubscribe to the current channel
Handle authentication requests.
dtype, data, ts
Used to update the last timestamp of a channel.
Resets the channel to its initial state
Get candles for the specified pair
Configure the bitfinex library
Subscribe to a symbol change.
Unsubscribe from a currency pair.
Subscribe to an order book.
Unsubscribe from an existing order book.
Subscribe to a raw order book.
Unsubscribes the client from the raw order book of the given pair
Subscribe to trades for a given pair.
Unsubscribe from a pair of trades.
Subscribe to candles of the given identifier.
Unsubscribe from candles for the given pair.
Authenticate to the channel
Cancel an order in the Market
Invoked when a command is received from the server.
Invoked by the device when a device command is received
Message notification event handler
Create a devicetype
Update a device with provided deviceuid
Find clients with specified status.
List all datasets.
create a dmedata
Update a schema
= 'Disconnected'
Callback function called when a client wants to connect to the broker
_unsupported, message )
Device Event Messages
Callback for device status messages received from the device.
Callback for when the client receives a STATUS message
Get a specific event by id
Get all events for a deviceuid
make api call to configured url with given parameters
Initiate a management request
Get the status of a request
Closes the stream.
Return the bounds of the index.
Load bytearray to string.
Check return value of function call.
Loads and returns the application.
Runs the gunicorn server.
Return the native value.
Crop the image and save it to a file.
Processes and saves an image.
Inverts an image and saves it to a file.
If data is a StringIO open the file.
Save the image from the placeholder image field if not yet saved.
Update ppoi_field from pre_save
If the file has a ppoi_field set it to the file s ppoi
Remove adminfilewidget from kwargs and add centerpointpointclickdjangoadminfield
Convert field value to string.
Auto - discover INSTALLED_APPS flavors.
Unregister a SizeImageSizer identified with the given attr_name.
Unregisters a filter given the attribute name.
Return the url of the image.
Build filters and sizer objects from filters and sizer registry
Returns the root folder where the filtered images are stored.
+ filename + '.jpg'
( self ) : return :
Delete matching files from storage
Takes a gif image and returns a tuple with the image and the kwargs used to save
Preprocess JPEG data
Retrieve image from path_to_image
Save image file to disk at save_path.
% num_, str_
Create a resized image from a given path_to_image.
Render the widget as a string.
Add the clearable fileinput widget to the context.
Build a dictionary of HTML attributes from base_attrs and extra_attrs.
Return the path to the resized file
Get path to image with filtered filename
Validate a list of size keys in theversatileimagefield
Get url from image key.
= None if key else None
Formats an instruction for printing
Format the bytecode of a function body.
Decode bytecode to an iterator of Instructions.
Decode a module string to a series of fragments.
Connect to a running server
Read AGI result from the server.
Parse an agi_code_check output line
Check AGI response code.
Reset all instances to their default values
if self. instances else None
Get the metadata of the installed package.
Get primary keys for a given model.
Deserialize instance from the database
Get an existing instance of the related model from a value.
Extends get_declared_fields for schemameta.
Load data using schema from database.
Split the data into kwargs and association attrs
List all snapshots
Restore a slave environment
Reset the indexes for each epoch
Clean text for Textacy.
Apply func to each element of data in parallel.
Process text with the same arguments as the event.
Process text in parallel.
Generate statistics about the doc length of the text
Pandas dataframe of token counts for all words in the corpus
Map the parameter type to a list of acceptable types.
Parse interface descriptions.
get the inverse of the expression
Update a set of items with a rollback of writes.
Returns a copy of the string object
Returns a copy of the object
True if two mappings are equal in the same order.
Return a generator yielding the inverted keys and values of arg.
Clear the contents of the object.
Move a node to the end of the list
Write text to a temporary file and return the filename.
Merge command line arguments into a config object
Load address books.
New contacts sub command.
Display birthdays for a list of vCard objects.
Searches for phone numbers matching a search term.
List vCards with contacts using the CLI.
Prompt user to input a new vCard from the user.
Remove a vCard from the selected address book.
Subcommand to source the vcard using the provided editor.
Merge vCards from a search result into a target one.
Get the action associated with the alias or None if not found
) Create a new contact object
, None ) : return None
Create a contact object from user input.
Creates a new contact object from an existing contact and new user input.
Get a part of the vCard names.
Add categories to the vCard.
Parse type value.
Converts a list to a string.
Convert a string to a datetime object
Compare two UIDs and return the sum of the matches
Searches for all contacts matching a query.
Search contacts names by regular expression
Search contacts by UID
Search the catalog for the given query.
Returns a mapping of short UIDs to contacts
Get the short version of the uid
Find vCard files matching a search pattern.
Load vCards from disk
Get a book by name
Return a dictionary of architectures and their respective flags.
Return a dictionary of architectures and their options.
Guess the type of a keyword argument based on the type of its value.
Return a copy of the current query with new values replaced with kwargs
Get the first item of the queryset
Delete all the records in the query.
Emulate redis prefix lua
Given an index and a prefix estimate the number of work to do.
count the number of records that match a set of filters
Returns a connection to the object
Return the full text representation of a value.
Add an object to the session.
) or None
writes a lura item from redis
Save changes to the database
Delete a record from the database
Retrieve one or more cache entries.
Wrapper for pthread. sem_open.
Send back result and exception to the queue.
Add a call item to the call queue.
Make sure the executor is running.
Start the server.
Duplicate file descriptor
wait for all pending work items to be finished
Prepare the process for execution.
Close all open file descriptors except the ones specified in keep_fds
= e. strerror raise
recursively terminate a process and all its children
Get exitcodes of processes terminated by worker
Format a list of exit codes into a string.
Starts a child process if it is not already running.
An event processor that outputs events to the debugger
Split a string into a list of lists.
Gets the stack from frame f to traceback t.
Run a list of hooks on an object.
forget the frame and reset the stack
Returns the value of arg or none if arg is None
Processes all the commands in the main loop
queue_startfile - queues a command file to be run
Get the next token from a string.
Print error message and abort execution.
Read a command from the input and return it.
Close the connection
Disassemble a bytecode object into a string.
count the number of frames in a traceback
Try to find the name of the function calling the given frame
Print the stack trace of a processor.
Lookup sub - command based on prefix
Display the short help for the specified subcommand.
Add subcmd_cb to the command list
Call subcmd_name with arg
Shows a category of commands.
Get line number filename and line number for current frame
Try to find a frame that has the same local name as the one being debugged.
Return int from arg if it exists else default.
Set the value of the setting.
Sets the value of the setting.
Show a boolean value in the GUI.
Show the integer value of the setting.
Show the value of the settings key.
True if line is a def statement.
Check if line is a class def
Quit all threads except the current thread.
Returns True if the default background color should be used
Returns True if the given RGB value is darker
Return the frame signature as a tuple.
Return a list of all available display names
Convert a frame to a list of display strings.
Read a message from the connection.
Display a debug message.
Runs the debugger for the given arguments.
Pretty print an array.
Lookup a signal name by its absolute number.
Lookup a signal from its name
Returns a canonical signature name for the given number.
Set a signal replacement. signum must be one of sys. signal_handler or sys. signal
check and adjust all sighandlers in self. sigs
print information about a signal
Takes signal name as string or list of strings.
handles print instructions
Signal handler for SIGINT and SIGQUIT
Get module name from filename
Search for filename in any of the directories
Return full path to a python script
Return a list of pyfiles for the caller callername.
Write a message to the output
If self. proc. event is None print the main program message otherwise print the event argument.
Sort and columnize commands.
Close the connection to the socket
Write a message to the TCP connection
Complete identifier names according to prefix.
Command execution wrapper.
Add ignore frames to ignore_filter
Returns canonical filename for a given file name.
Returns the filename of the main py file to use when generating the code.
) or ( not )
Check if there is a stop condition here.
Set the next frame to be displayed
Displays the stack trace for the given file.
Delete a breakpoint from the list.
Deletes the specified breakpoint by its number in the system.
Enable or disable all breakpoints
Enable or disable a breakpoint by its number
Delete all breakpoints at given line number
Open the file and set its input.
Read line from the input stream.
Writes a confirmation prompt and returns whether the reply is true or false.
Queries the database and returns a Future object which is resolved when the future is complete.
Restore original login as the logged in user
Load a module and return a can_login_as attribute.
Generator that iterates over all the documents in the collection.
Transcode a JSON file to a stream.
Normalize data in a stream of JSON objects.
Convert date string to float or datetime.
Guess the encoding of a file.
Generator for iterating over lines of a json file.
Transcode a text file to UTF - 8
open_csv_somehow_py2 does the same thing as open_csv but it
Read CSV file and yield dicts.
Entry point for command line transcoding.
Save token to a file.
Send a request to the Luminos API.
HTTP DELETE operation.
Returns the root URL of the given URL.
Save token to a file.
Send a request to the API and return the JSON response.
POST data to the api - server
Get the raw content of the current user.
Request raw data from the API.
Print csv to stdout
read params from json body and params list
Simplify a docstring.
Create a new project with the given docs.
Upload docs to Google Docs.
Upload a stream of documents to a project.
Upload a text file to the server.
Main entry point for the script.
Create a User object from username and password.
Login to the API.
Login to PyLink.
Fetches the data from the service
Prepare the page for rendering.
Initialize the view for the current company
renders the view if websocket is enabled otherwise returns the default
Called when a message is received from the browser.
Add menus to menubar if menus exist.
Return a list of default handlers for this site.
Called when a message is received from the browser.
, str_ )
Create the underlying widget
Initialize the widget
Remove the widget from its parent and destroy the webcomponent
Insert widget when a webcomponent is added
Remove widget from children
Generator yielding all child widgets
Set an attribute on the widget.
Update proxy attribute and notify modified
Notify the root object of a modified event.
Execute an xpath query against the binder and return the resulting nodes
Initialize the underlying widget.
Set source from html source.
Called when a mode change is observed
When a block is changed remove all children of the block
Changes the children of the current block if the mode is str_. If it is str
read the content of the file specified by pathcomponents
Print an error message to stderr and exit
Print error message and exit.
Get a product by its name.
New session and store session in self. session
Resets the session store.
Get stores using a search term.
Set the delivery system for a store.
Get a menu for a given store
Add an item to the basket
Add Pizza to a basket.
Add a side to a basket.
Remove an item from the basket
Set the payment method for your account.
Process a payment using current session and return the result.
) return str
, str_ )
Call the API with the given verb and path
Append a menu item to the menu
Add the exit item if it is not already there
Draw the menu
Process user input and go to the next item
set the selected item and call the action
Convert the old style menu data to a cursesmenu
Convert a string to datetime
Convert datetime to string
Perform a basic math operation on two columns
Compute cumulative sum in a column.
Delete old cachedir entries from a cachedir.
Add offset to datetime. timedelta object
learning updates for the model
Get parameters used for training.
Optimize the network using the given parameters and gradients.
First glimpse sensor.
Prepare the encoder and decoder for the network.
Computes the cost of the given internal variable.
Call func on each of the features in the dataset.
Vectorizes the target dataset
Prints report of the training and validation set
Train the model using the given data
Sample a sequence for the given number of steps
Compute the alignment weights for a single string.
Compute the context vector of the current state given the inputs.
Concatenate neural variables along a particular axis
Pad Datasets.
Root Mean Square Propagation algorithm for optimizers.
Prints the current elapsed time in seconds.
Perform the cost function on the given data
Invoke the training
Build the loop vars for the loop if not already build
Perform a single scan step
momentum_core is a weighted sum of momentum and free parameters
If - else statement.
Skips the next n_epochs batches.
Load parameters from the given path into the model.
Train the model.
Performs a single train step of the workflow
Run a single valid step.
Report the score map.
Get the data for the given data_split
Apply a function to the neural variable and return the resulting tensor.
prints a report to the logger
( self. shape ) )
Creates a list of vars from the given dataset
Create a shared theano variable
Stack encoders into one set.
Stack decoding layers onto the stack.
Encode a set of input tensors.
decode using a neural network
Creates a 2D gaussian kernel with the given shape.
Register a layer with the optimizer.
Monitor the output of each layer during training
returns a list of all parameters
Sets up the input and test output variables
Compute the outputs of the model.
Save the model parameters to a text file.
Load parameters from pickle or numpy array.
Prints a report of the model to the console
register_updates - Register new updates to the node.
Register a set of training updates
Register monitors with the trainer.
Returns the L2 norm of a list of tensors.
Dump one pickled element to a file object.
Yields elements from a pickle file.
Load parameters from a file into the model.
Decode state parameter from base64 if state is not None.
Parse X - Credentials element.
Method to filter request elements with access_token parameters.
Log in to the user with the given provider.
Takes a dict and returns a dict where the keys are str and the values are str.
Convert a list of items to a dictionary.
Parse a JSON or QS query string.
Resolve provider class
Serialize and create a cookie
Saves the current session
Get data from cookie by name.
Get data as a dictionary.
Generate a signature for the given parts.
Serialize the value to a string and add a timestamp and signature.
True if this token is still valid.
expire_soon - True if cookie will expire in given amount of seconds
Return provider_id and provider_type_id as a quoted string
Return True if the string is a binary string
The content of the response.
bitbucket. bitbucket_client. access_user_info
Logs the current user into GAE
Return the session key for the given key.
set value in session
Generate CSRF token.
Log a message with the class name and the level passed.
Return True if the HTTP status falls in the given category.
Split a URL into its component parts.
Set the CORS headers if needed.
Get application kwarg dict.
Return a string suitable for displaying or sorting an object
Return inst as a list if inst is iterable else inst.
A more lenient version of numpy. isclose
Deserializes a pickled audiosegment
Creates an audiosegment from a file.
Create an AudioSegment from a NumPy array.
Reduce this segment with another audiosegment.
serializes the current state of the object to a string
Choose an offset front id from a set of candidate offset front IDs.
Find the offsetfront id after onset_sample_idx
Returns the offset_front_id after the onset_front_id
Match a onset front id to an onset front id.
Given a list of onset_fronts and offset_fronts return a list of consecutive
Helper function to get front id from index
Yield front IDs one at a time from a list
Given a list of onset front ids and a list of offsets returns a list of tuples
Remove segments that overlap with num_ or fronts
Remove fronts that are too small to be kept
Merge adjacent segments into a single mask
Split a mask into multiple masks with different thresholds
downsample one or the other stft
ASA task to perform ASA sampling of amplitude
butterworth bandpass filter
butterworth low - pass filter
Converts a list of data to tf inputs
Expands and standardizes a dataset.
Compare two strings ignoring order
Loads the confusion matrices from an audit file.
Converts a list to a tf. Input and a list of outcomes
Try to find a pip config file and update self. pypi_api_url
Autodetect filenames based on requirements files.
Handle some error conditions.
Returns information about the stream.
Opens a new stream for reading and writing.
) Get a child by name.
Returns the next sibling of the element.
Return the previous sibling of node.
Sets the name of the node.
Sets the value of the LSL element
Appends a child element to the current element.
( name ) )
, str_ )
( str_ )
Removes a child from the current element.
Resolves all streams found in the resolver s result set.
Pair a word with a list of tokens
Autocomplete a query with edge n - grams
Computes the edge ngrams for a given token.
Iterate over a pipe applying a set of processors
Emulate imap_unordered.
Returns a list of fuzzy words
\ Fuzzy search.
Index a word in the database
extend results extrapolation with ManyToMany and ManyToManyRelation
Prints the help for the given command
show database information
Get the value of a key
Generate geohash from latitude and longitude
Index documents by id
Find best score for word
Send a request to the API and return the response
Maps a list of Requests to a list of Responses
Get bits from an array.
Convert a HArray to a bits string.
Convert a slice to a slice.
Find files in a directory matching a glob.
True if any element of iterable matches sigorval.
Generate code for a foreach loop
Return the ceiling of a number
Is num a power of 2?
Add a case to the boards.
Set the default statement.
Registers the given object as an interface with the VCD writer.
Set up the VCD definitions for this simulation.
return str_
classmethod for Process statemnts
Add all the simulator agents to the interface list.
Returns the associated cross - reference fk for the current unit
Returns an iterator that yields the distinct elements of iterable for which fn returns True
Group items in collection by fn and key
Flatten a nested iterable
Merge nested if statement from else into self. ifs.
Removes signals that are not connected to a given netlist.
Simple check if a statement is a conditional statement.
Merge two processes and raise an error if they are not compatible
Yields processes grouped by their rank.
, addr )
Returns the name of the largest non - generic output in a list of statements
Cut off drivers of a signal in a set of statements.
Synthesize all signals of a unit
Get the maximal stm id for which a waitstm is referenced.
Get the maximal stm id for a procedure.
) write to file
The master direction of the robot.
Loads all declarations of the class and makes them read - only
Return a list of signal instances corresponding to this interface
Return the physical name of the entity
The number of bits required to store this struct
Get the sensitivity corresponding to a particular edge op.
Convert a number of bits from one type to another.
Reinterpret bits to hstructt.
Count the number of full words in a range.
Group transactions by word index.
Generator that packs all the data into a single object.
. signal_meta = None
Discover the closures for a list of statements and outputs.
Detect casual sensitivity sequence for a set of signals.
Returns the context used in the rtl compiler
Called when the result of a reduce is received.
Extend the statement with the information from another statement.
Return whether a statement list is mergable.
Merge multiple statements into a single list and a decrease rank.
Merge two list of statements into a single list
Reduce a list of statements
Called when the parent event is dependent on another event.
Set the parent statement and remove it from the top of the statement stack.
= statements [ 0 ] return
Destroy the statement and all its inputs and outputs
assubunit ( self )
Generator that recursively walks through the fields of sigorval.
convert signed to unsigned
add a process to the sensitivity list
Conditional evaluation function for conds.
Connect a port to another port in a different direction
Create a NumPy vector with width bits
Process a hwprocessing. Resource instance.
Returns the value of a parameter or the raw value of the parameter.
Set the default value of the variable
creates a ctypes struct type from a dict interface map
Combine all the memories into a single string and add to self. resources
Get the index cascade of a single driver.
Convert a Python object to a string.
Perform automatic casting of sigorval to totype.
Reinterpret casting.
Yield all parameters of the given interface and all its children
Connect a packed source string to a destination interface via walkphysinterface.
Pack interface from. intf to a python.
Truns a tortl instance into the target platform
Registers the interface and loads its signals
Attempt to reduce sig to the same dtype as val
Attempt to reduce sig by xor val
Return a namescope for the base of this class.
Serialization decision method.
Get the second notation of a condition
Simulate the bitstring of a given width.
Get the constant name for the given value
Cut off drivers of the given signal
Load this node and its children from an array
Load from a HDL struct to this struct.
Load from a hdl type.
Get the width of each item in the array.
Walk the structure recursively and flatten it at the given offset.
signfix val to num_ if val > num_
Get a string indented by the given number
Raise intflvlconferr if attr is not None
Register a parameter in the current scope.
Call updater on params from otherobj
Register a unit with the block.
Registers an interface with the current node.
Register an array of items as attributes of the class.
get single driver
self. result
Create a rtlsignal from a operator definition and operands.
Return a copy of self with indent changed.
Attempt to connect to the specified interface if it doesn t already exist.
Propagate the clk and all connected units along the way.
Propagate clk and rst_n to connected units in obj.
Propagate clk and rst.
Propagate rst_n to all connected units.
Propagate the right - hand side of obj to its siblings
Iterator that yields bits in one of the signal s bits.
Part of the serialize_exclude_eval algorithm.
evaluate once to determine whether to serialize or not
parentunit = parentunit. _entity. params prevunit = parentunit. _entity.
Returns the full name of the object including the interface name itself.
) return self
Convert a unit into a SimModel instance.
Reconnect the unit or interface signals to the model
Unit of time series of a simulation
( str_ ) ( )
Connect this signal with another signal
Register a signal as intermediate signal
Connect in or out endpoints with intermediate drivers
get intersection of direction and input
Check if a signal is dependent on another process.
( proc ) )
Add hdl or comb proc to run.
Schedules a combupdatedoneev.
Schedule the applyvalues and runseqprocesses if not already scheduled
Conflict resolution strategy - creates update and array update callables.
Run all subprocesses that have been added to the outputcontainers
Run all seqprocs and signal handlers
apply the values if there are any
Read value from a signature.
Write a value to the signal
( proc ) )
Simulate this unit for the given time period
Convert ternary operator assignments to if statements.
Calculate the distance between two hashes.
Calculate the average hash of the image.
Calculate the distance between two images.
Set up the vizio device.
Update the power state and volume level using the device.
Mute the volume.
Increase the volume level.
Decrease the volume level by the given amount.
Set the volume level.
Resets the instance to its initial state.
Gets the piece at the given square.
Removes a piece from the board.
Sets piece at a square
is_suicide or was_check_by_dropping_pawn
( self. turn ) )
Is the game over?
is the game in checkmate mode
Return true if the transposition is a fourfold repetition
Pops a move off the stack and returns it.
Returns the force of the game as sfen list.
from usi
Returns the zobrist hash for the current position
Returns the piece symbol.
Creates a Piece from a piece symbol.
Returns the USI string for the piece.
Create a Piece from a USI string
Return a generator yielding parsed commit objects.
Parse parts of a git commit message.
Load config from command line and execute Django management function
Generate yaml file from the class s initial values.
Cast the string val to the type of self. cast_as
Return list of dates between two dates.
Parse a date string
Load a currency file.
Set all rates for currency to None.
Get the exchange rate for the given currency on the given date
Display a series of frames with an animation.
= 2 ** n
) write a record to the file
Return the mapping between start and end words in the file.
Get the comments from the file.
Closes the file
Compute and return a random position
Closes the file and any associated segments.
Internal method for loading data from a DAF file
Detect logging level and visit call node.
Checks logging statements by binary operator.
Check keys and values in dict.
Checks whether the node is a joined string
Check if keyword is whitelisted.
Visit an excepthandler node.
Detects the logging level of the given node
Returns the name of the except handler for the given node.
Get id attribute from object
Check if node is a bare exception.
Check if an exception has the same logging level as its parent.
Deletes the file related to the instance if it exists.
Render the PDF and cover it using the cover template.
Overrides the standard render_to_response method. If the response_class is pdftemplate
Quote a string for use in an HTTP request.
Configure options from a module or a prefix.
Convert camelcase to underscore
Automatically create indices for this collection
parse file with price model
Loads a text file into a list of lines.
Parse line into pricemodel object
Translates a symbol using the symbol maps.
Loads all symbol maps from the repository
returns the current session
Import price data from CSV file
Display the latest price for a security symbol
Download prices from the Marketplace.
Prune all or specified symbol
Get a default session from the config
Add a new map.
List all maps available in the database.
get a symbolmap by its id
Read lines from a CSV file.
maps entity to pricemodel instance
maps the model to a price object
read config from file
Returns the template path for the config file
Copy the user config template into the user config directory
Get the configuration file path.
Get content of config file
Set a value for a specific option.
Get a value for an option in the configuration.
Save the config to the file.
Parses a symbol and returns the namespace and mnemonic.
Add a new price to the account
Downloads and saves a new price for the given symbol
returns the current session
Method for retrieving all prices
Fetches latest prices for a symbol on a date
Prune all price items
Delete all prices for a securitysymbol
Downloads the price of the given symbol from the given agent
returns all securities
return the partial of the current state
Update the arguments of all child nodes.
Descend into children yield self if include_me is True
has_chosen ( state correct, feedback_msgs )
Return a copy with only the defined items
Get an extension from a parsed tree
Test if a loop has a context loop.
Check if there is a context with the given state.
Check if a student part exists and is a solution part.
Check a part index against the student and solution parts.
Calculate true anomaly.
Initializes the Flask app object for the given Flask application.
Add an LDAP server to the connection pool.
De - contextualise a connection
Teardown the current ldap3 connection if it exists.
Authenticate the given username and password.
Authenticates a user via direct bind.
Get user groups for the given DN
Get LDAP user info object
Get user info for a specific username
Get object from LDAP
Get a connection to the ldap3_manager
Creates a SQLAlchemy connection.
Makes a connection to the ldap server.
Destroys a connection and all associated resources
Search the container and return a list of results.
search for all objects in the database
search for all artifacts in a collection
use this function to speak to the user.
Announce usage of a given command
get secrets and base from environment and set in config file
update headers of the http response
require secrets for this client
download a URL to a local file
download a file to a local or remote location
get AWS auth token and update headers
Get or create a folder.
Read a response from the server.
get s3 bucket if exists else create one
Loads the secrets and sets the base
Initializes self. _client and self. _secrets
Load secrets and setup auth and transfer
Get the latest log entries on the server.
list all the logs for this instance.
create the endpoint folder.
Initializes the transfer client
search all containers and return all matching containers
Show the status of the current client secrets.
add a setting for a given backend
remove a variable from a given backend
activate client secrets
Delete a specific client from your local secrets file
Update base from input image.
Generate the HTTP Basic Auth header
Generate the HMAC signature for the given payload and secret.
Generate the header signature.
\ Call the HTTP DELETE method on a URL.
wrapper for requests. head
Send a GET request and return a list of results.
verify https connection
remove an image from the registry
Get the lookup for the package.
Get a list of requirements for this module
get singularity version from environment variable or command line
check if a software is installed
Returns the absolute path to the directory containing this package
Returns the path to the thumbnail used for the current project
Runs a command and returns the output as a dictionary
get metadata from dbx metadata
get and update the secrets
print the response to the terminal
Kill one or more registered commands
List the logs of a container
Get list of collections from account
get secrets from the environment and update the secrets dict
ipython announces a command to the given endpoint
get all the manifests for a repository with a given digest
get the manifest for a repository.
Get the download cache directory.
get the environment variables from the config file
get the base from the environment and update the settings.
Update secrets and add token to headers
Return the metadata dict for this run.
Get client settings from client secrets.
get or update a setting and exit if it is not set
Update setting on the saltant client.
Authorize a request.
list all builders in a zone.
load all templates that match a given template name
get the ipaddress of a given instance
run a build using the compute service
list all containers that have the same name in their metadata.
search all containers and print it out to the console
Lists the contents of a registry.
Main entry point for the sregistry CLI.
create and initialize the database used to store sregistry data
return build template as json dict
list all available endpoints.
list files in a given endpoint
share a dropbox image with another user
Read the client secrets from the secrets file or use the default.
Get all the services we need to make a request to Google Storage
Delete an object in a bucket.
delete a file or list of files from a bucket.
destroy an instance.
Get subparsers from an argparse. ArgumentParser
Generate a string of the given length and chars.
Get a temporary directory in which to store temporary files.
extract a tar archive to a given folder.
extract a tar archive to a given folder
Get the SHA256 hash of a file
read a file and return the content as a string
read json data from file
remove the given files if they exist
push an image to S3
Get or create collection with a given name.
Get a registry collection by name.
Get a container from the database.
list of all images
Inspects a container
rename a container based on the image name.
mv will move the specified image to the specified path.
remove a container based on image_name
Parse the header from a recipe and return the header
Attempts to find a single recipe that matches filename and pattern.
create a tar file with all the package files package_files should be a list
Update blob metadata
Formats a container name in lower case.
Return whether to colorize output and error streams.
Return True if the specified logging level should emit an error message.
Write a message to a stream.
Prints multiple table at once
push a new image to the registry
get a template by name
get manifest from a repository by its tag
get build template by name and manager
get the secrets from the client and cache them for future use
Context manager that translates boto errors into boto errors.
Creates a proxy for the given filename and returns it.
Returns the gravatar URL for the given user or email address.
Generate a gravatar url for a given email.
Check if user has Gravatar
Return the gravatar profile URL for the given email.
Generate blocks of Chimera DNA.
Builds a graph out of a set of blocks using Chimera s block quota algorithm.
Enumerate all the resonance smiles.
Enumerate all resonance molecules in mol.
Apply reaction transforms.
Canonicalize a molecule.
Validate a smiles string
Converts smiles to standardized forms.
Enumerate all tautomers in smiles.
Canonicalizes the smiles of a Tautomer.
Return the parent of the tautomer molecule
Get the parent fragment of molecule
Remove stereochemistry from molecule
Set the parent isotope number of the given molecule
Get charge parent of molecule
Entry point for molvsparser.
Remove fragment molecule from molecule.
Choose molecule from molecule.
Integrates the prior and second order vector of the prior
get the members of the org in json format
get teams of org
repo_type = repo_type organization = organization or str_
Get the total contributors of a repository.
Get open and closed pull requests of a repository in JSON format.
Get issues of a repository
Get the README of a repository.
Get license from github
Get all commits for a given repo
Write dict_to_write to json file at specified date
Writes the totals to a file specified by file_path
Write languages list to a languages. txt file.
check if directory exists and create if not
Remove date from CSV file
Get list of gov orgs from US Bank
Create an enterprise Github session
Check API limits and sleep if needed
Connect to GitHub Enterprise.
Query GitHub for repositories.
Get organization of the logged in user
Write the stargazers to file.
Create a project from a gitlab repository.
Returns the correct object for a license string
Get the traffic for the repos in the organization
Get list of releases for a repository.
Get referrers from a repository
Get data from the API and store in dict_to_store
Write dict_to_write to json file on specified date
Writes all data to the specified file.
Check for redundant data in CSV file.
Writes the data to the file at the specified path.
Write referrers to a file.
Extract DOEcode data from a JSON file.
Get DAECODE from URL and extract DOECODE lines
Processes a JSON file or a URL.
Login to GitHub and store the logged in user in the Github object.
get all the members of the org and store them in a dict in self. emails
Writes the list to a file.
Connect to the stashy server.
Connect to a Gitlab server.
Query or list projects by repos.
Compute labor hours for the given sloc based on the month_hours argument.
Remove all None or string values from a dictionary.
Read a GQL query from the specified file
Asynchronously wait until the timer resets
A countdown method for the countdown method used in redis.
Load data from a JSON file.
Save the data to file.
Creates a connection to the tfs service.
create a tfs project analysis client
Create a tfs core client
Create a TFS Git API client.
Creates a TFVC client for a given URL.
Get the Git repositories associated with this project.
Get TFVC branches for a project.
Get the number of commits for a given year.
Calculate total commits for the given week of commits.
Writes the commits to the given file.
Log timing information
) return str_
rollup the metrics if it has expired
Convert from database value to enum.
Converts the enum value to a native python type
Convert enums to strings to be stored in database.
Given a topic or text node and a Path object return the set of nodes that the path points
Takes a list of USL objects and a dictionary of USL objects and returns USL
return the mean value
Mark the occurrence of a given number of events.
Returns the mean rate of the current counter
Overrides the base class mark to derive new values for the derived class
Send a metric to TSDB.
Converts a metric to a list of strings.
Format the metric name and value for printing
Send metric to TSDB in a buffered manner.
Get a setting and raise an exception if it doesn t exist.
Decode data to JSON if it isn t already.
Get or set default value of option in section.
Get a mapping from ledger code to GUID
Get a list of choices for the current division
Returns a mapping from exact invoice numbers to none or a dictionary mapping invoice numbers to none.
Creates a handler for the given injector and injects it as a view.
Makes a form view out of the given injector.
Creates a view function from the injector and injects it as the view function
Creates a handler for the API view.
Creates a generic API handler and injects it into the injector
Creates a handler for the model view set which can be used by any injector.
Create a stream from a file descriptor.
Read ready to be read
Close the connection.
Register a watch on a file or directory.
Stop watching the given alias.
Add a watch entry in the inotify descriptor.
Setup inotify client stream and transport.
Get an event from the client.
Touch the object.
Update intervals after a successful scan
Called when the timer is failed.
close all connections
Connect to an nsqd instance
Send a query to Lookupd.
Set the maximum number of in - flight data requests.
) print ( message
Add a callback to the listener identified by name.
Unregisters a callback for a given event listener name
Triggers a named event
Publish a message to a topic
Sets the feature transform mode and degree.
prediction of the model
clean up unpaired fastq pairs if clear is set to True
Reads the depth file and returns dictionary with reference and position information
Sets and checks the template path.
Set the main channel names.
Render a Jinja2 template with context.
Returns the rendered template as a string.
Update self. main_forks and self. output_channel
Updates the attributes of the view from a dictionary.
Set secondary inputs
Parse the assembly file and populate self. contigs.
Get GC calculated properties and number of sequences
Get the total assembly length for all non filtered contigs
Writes the assembled contigs to a file.
Write the report to a file.
Remove inner forks.
Perform sanity checks on the given pipeline.
Finds the source lane of the fork process that the fork process was started in.
Parse string to list of lanes.
A helper function for creating linear connections between two nodes
Add unique identifiers to the pipeline string.
Removes unique identifiers from a pipeline link dictionary.
Check that trace and log files exist.
Return mapping from header name to its position in the header.
Convert a string to a float in HMS format
Get the size coverter of a string.
Reads the log file and extracts processes from the log
Clear inspect of all processes
Reads the status of the processes from the log file.
Read lines from a log file.
Assemble resource warnings for the given process.
Inspect the environment and log and trace files.
Display the overview page
Handle up and down navigation
Handle right and left clicks
Get the last n lines from the log file
Look for static info for pipeline and configuration files.
Load dag json file into dict.
Compute the hash of the current run of the pipeline
Returns the nextflow filepath from a given log file name.
Extracts sequences from the assembly and writes them to a text file.
Run an innuendo pipeline
List all recipes in the pipeline
Validate pipeline input string
Recursive method that builds the upstream graph from the process descriptions.
Recursive method that builds the downstream subgraph of the workflow.
Build and run the auto - pipeline for the given tasks.
Generate the string representation of a component.
Writes the storage dictionary to a JSON report file.
Create a report from a list of log files.
Fix contig names in asseembly_path
clean up FASTQ files
Parse a list of files.
parse fl file and store data in storage
Get the contig ID from a string
Writes the plot and table data to a JSON file
Parses the contig assembly file into self. contigs
Calculates summary statistics of contigs
Get a list of tuples of contig_id and window for each contig
Garbage collection property
returns a list of GC sliding window values
Main function to run Sekea from the command line
Generate a JSON report from two data sets
Parse bowtie log file.
Parses a process name from a string.
Add a dependency process to the pipeline.
Searches backwards from the given template starting from the given parent_lanes
. render ( )
. render ( )
Sets the initial process for the loop.
Set all secondary channels
Creates and adds the status and report compilers to the processes list.
get manifest string for pipeline
Sets the configurations of the process.
Write dict_viz to a file.
Write all configs to files in project_root.
Export the parameters of all processes to stdout as JSON.
write json directives from all processes
Build the Nf_File.
Return kmers list based on kmer opt string
Get report_id from report_file.
Reads the trace file and updates the self. trace_retry and self. trace_size
Update log watch.
Send a report to the live report queue
Initialize live reports
Close the connection to the report.
convert adapters to amino acids
Parses the mash output file and sends the results to output file
Colorize msg using color_label.
Collect all the processes and exit.
Get the min and max values of a quality score string.
filter out assembly lines that have coverage below minimum_coverage
Calculates the assembly and contig size from the assembly file.
Main function to filter assembly and bam files
Convert camel case to snake case
Collect the map of component process to component class.
Reads a json file and writes it to a file in the same directory as newick
Maps self. w to self. data using the voxel coordinates self. data and the
median filter with m columns
Compute krnl with symmetrized Gaussian.
Compute the squared mean along a given metric
Compute the number of non - intersect points between two groups
Apply Gaussian filter to an array
Computes the normalized clustering coefficients
Circular Shift op.
Encapsulates the embedded space of a vector
Plotting function for format_histograms
Plots the boundaries of the estimated file with the given algorithms
plots labels with time intervals
Return a list of feature segments in f bounded by num_
Compute the maximal 2dfmc maxima for a list of features.
. _fit ( )
Get reference times and labels for a given annotator.
Find the estimation of the jam with the given parameters
Get all boundary type algorithms.
Get the configuration of the MAF.
Return a list of file_structs for the dataset at the specified path.
Read hier reference intervals from jams_file.
Get duration of each feature as a float
write mirex file
Get the dataset file for the audio file.
Aligns the segmentation times with the beats of a song
Estimate tempo and frames for the given librosa beat track
Read annotation from reference file
Computes the beatsync features from the given beat_frames and beatsync_times
Return a list of non global and non global parameter names.
Computes the framesync times based on the features.
Get the times at which each framesync occured.
Get all the features of the audio file
Preprocess the feature string before it s added to the lib
Postprocess inbound estimations and synchronize labels.
Entry point for command line invocation
Print the mean of the results.
Compute information gain given information gain and estimated file.
Process a track in est_file and ref_file
Get the results file name.
Compute all features for a given file_struct
Compute all features for a dataset.
Cost function for Gaussian distribution
log normalize f to a range [ 0 num_ )
Min max normalize f so that the max value is equal to the min
Get time frames from dur and anal
Remove empty segments from times and labels.
sonify clicks audio - > out_audio
Synchronize the labels of two sets based on the median value of the labels.
Process segmentation level.
Align end hierarchies based on their endings
Calculate the distances between the points in the data array and the distance function specified by the distance
Estimate k - knee.
Get clustered data
Compute k - means and k - labels for a sample.
Compute the BIC score of the given distance matrix.
Calculate the magnitude of a complex number.
Convert segments json to bounding box
Convert bounds json to numpy array
Convert segments json to labels.
Load beats from json file to numpy array
Compute the 2D Fourier coefficients for 2D data
Compute the labels for a 2D array of data.
Filter the activation matrix of a neuron based on the median filter coefficient
Returns the boundaries module for the given ID
Returns the label module for the given labels identifier.
Run hierarchical segmentation on the audio data
Runs a flat segmentation on the given audio file.
Entry point for the translator script.
Set the task for the translator.
Split an iterable into maxlen - sized chunks.
Sources inputstream to target.
Return a translation table for the given language
Print the translation table.
Remove nodes and edges from a network
Write a network to a pandas. HDF5 file.
Load a network from a pandas HDF5 file.
Process a node in the etree.
Make an OSM query
Build a node query from lat and lng data.
isregex checks if value is a regex
compare value with expectation
Compare value with expression expr
Trigger all callable methods on the instance.
Get matcher by its name.
Initialize a value by name and arguments.
Set response body.
Set the JSON response body.
Sets a key to a value if the key is already set
append functions to the target
Triggers request event callbacks.
Add a headers parameter to the request
Add a header present to the mail.
Add a header present to the email
Add parameters to the url
= body )
) return self
) return self
) Load a file
Sets persist state.
Set error message.
Create a response for this mock.
Match a request against the mock.
Set the mock engine
Add a mock object to the engine
remove a mock from the recording
activate the mock engine and activate the engine
Disable the mock engine on the active engine
Should we use a network for this request?
Match a request against the mocks.
Creates a copy of this request.
Context manager to temporarily switch networks.
) return self
Removes interceptor from the chain.
Get a value from the settings dict or from the django settings object
Returns the SQL for the decrypted col.
Overwrite the original value if it exists in the model
Returns a SQL placeholder for the given value.
Get decrypted column name for the given alias and the output field
Returns a placeholder for the given value to be used in a SQL query
Calculates the base regression function and hessian
Correlation matrix of the inverse of covariance matrix
Recurse down the tree
Calculates the averages for all nonterminals in the tree.
get the explained variance of the tree
Calculates the clock regression of the tree.
Set the value of the threshold to a given value
Counts the number of branches in the tree
Cost function for estimating the merger cost
Attaches the merger to the tree.
Normalize a profile.
Set the geolocation type.
Set self. _gtr to in_gtr
Set sequence length.
Attach sequences to nodes in the tree
Prepare the tree by generating all nodes and ladderize the tree
Prepares the nodes of the tree.
Calculates the distance to the root in the tree.
Computes the branch mutation matrix for a given node
Return node s reduced sequence.
Return the state of the element at position pos.
Returns the left - most sequence of the tree.
Computes the ancestral likelihood of the tree
Return the largest branch length that can be represented by this node.
Compute the optimal branch length for the given node
Returns a multipleseqalignment containing reconstructed Ancillary sequence.
computes the q in the unnormalized form of the equation
Creates a custom Grater
Check equation for fixed q.
Find the optimal translation given two sequences
Compute the probability of a trio of profiles at a given time.
Evolve a profile onto a profile.
Returns the log of the sum of sequence states
Sets the branch length mode
Plot root to tip under the tree
prints the left - hand side of the tree
Add a coalescent model to the tree
Find the best root for the tree.
Assure that a tree has been inferred
Create a GTR instance from the given parameters.
Read if aln ends with. vcf suffix and if it is a VCF then extract
Calculates the FWHM of a given distribution
Creates a delta function distribution.
Assign raw_date_constraint and bad_branch attributes to nodes in tree.
Creates a treeregression object
Make time tree.
Compute the likelihood of the time tree
Adjust dates in tree.
Returns the uncertainty due to rate at a given interval.
min of the interpolation object
median of interpolated grid
Return a numeric version of the current date
Create a new instance of DiscreteCovarianceModel from a regression model
Closes the connection to the memcached server.
Receive line from socket.
. encode ( )
Sends an instruction to the drive.
Converts unicode_str to utf8 bytes.
Loads an instruction from a string.
Encode a single argument for redis.
Encodes the instruction
Get the URL for the given class.
The URL for the instance of the resource
Return the URL for the given class.
Download the file and return its path.
Get the parent object of this job.
Prompt user to ask for credentials
Interactively login to solveborg
Display the current user s name.
prints a user
Return a new string with a range from start to stop
Filter by chromosome and position.
Queries the database and returns one or more faceted result
Processes a list of filters to a dictionary of dicts
Return the next item in the iterator
Build query and execute it.
Migrate the dataset to another dataset.
Main entry point for the solvebio command line tool.
Construct and return str_ instance from dict
Logout of the user.
Return the child object of the task
Parse info from snpeff annotation
Get solvebio API credentials
Save the project to a. hosts file.
Formats a value according to its type.
Render a row of TTY table cells.
Build a single line from a list of column widths
Mediawiki style cell attributes
Creates a migration between this dataset and another dataset
Upload a file or folder to a Vault
Validates full path string
Validate the API host url.
Annotate the given records with the given settings.
Evaluate the expression
Set the output format name.
Register a new output format.
Adapter for tabulate.
or None or self. filename
( ) ]
] Additional files
Write the default config file
Read and parse config files
Truncate a string to a maximum width.
Replace strings in a string with another strings
Calls a list of commands and exits the process if the command exits successfully.
Applies the option to the command.
Overrides lint. OptionParser. initialize_options
Run git checkout command
( str_ )
Truncate the data and headers to the given max length.
Formats a row of data to be put into a table.
Adapter to render CSV - formatted table.
Generator that yields formatted terminal tables.
Is this a number type?
is bool True or False
( str_ )
Generates a key for use with mechanismaes
Generates a keypair using the specified mechanism.
Return a list of CK_OBJECT_HANDLEs matching the template.
Insert image into QR Code
Print the list of panels.
Add num_ days to d until d s weekday == weekday
Repeats the period on a given day
Re - count items in range [ start end )
helper function for biweekly repeats
Handle a single chunk event.
Get the variants from the database.
Given a list of variant objects for a single sample export it as a multi - document.
Add or remove institutes to a user.
Display variants for a given str type.
Retrieve a single variant.
Return the string representation of a variant.
Verify a variant.
Controller for clinvar_export action
Return cancer variants.
Add an ACMG for a variant
Deletes an existing evaluation.
Get ACMG for given criteria
Upload a filter panel
Download a verified Excel file.
Group genes by their alias
Add incomplete penetrances to genes.
Request to Matchmaker API.
Get all nodes from MME.
Get the coordinates of a position in the cytoband
Return the subcategory of the category
Get the length of the segment
Get the end of the BND record based on position alt and category
Parse coordinates from a variant
Handle a panel update request.
Exports a panel as PDF.
Create or edit panel gene information
Load delivery report for a case.
Search HPO terms in the store
List all whitelisted devices.
Build a phenotype_obj based on the phenotype_id
Retrieve the gene information from the hgnc_id.
Return a list of JSON objects for the given genes search
Display list of institutes accessible to current user
List transcripts.
Return a list of events for the given day.
SV variants search.
str_variants wrapper that uses str_ variants
Create a string representation of a variant.
Returns the header for the variants file
Get predictions from a list of genes.
Find a BAI file for a BAM file.
Get observations from the loqusdb
Parse a gene and add the links and refseq transcripts
Create a string from a transcript object.
Returns the end position of a variant in a string
Return the most common frequency of the variant.
Convert clinsig objects to human readable strings
Generate a link to a thousandg page for a variant.
Returns a link to a cosmic variant
Build and return a link to a beacon for this variant
Returns a link to a variant in ucsc context.
spidex human variant name by abs
Return expected inheritance of models from a variant_obj.
Returns a list of callers for the variant in the given category
Return all variants for a case.
Export a single clinvar.
Retrieve the clinvar submission for a case and variant.
Variant ACMG object for the given variant.
Function used to submit an evaluation for a variant.
Takes in an evaluation object and adds the appropriate data to the evaluation object
Uploads panel of HGNC symbols to the store.
Create an Excel file of verified variants for the given institute list.
Generator to export all the gene s associated with a given build
Parse clnsig output
Parse a list of compounds from a variant_info string
List all genes.
Show a single case.
List available collections.
Institute a new project
Returns a file handle for the given file path.
Get the net from the request.
returns next and previous numbers
Check if year is in range.
Check the weekday
Parse individuals from a list of samples.
Parse a PED file and return a family id and samples
Builds an evaluation object from the given variants.
Given a list of string terms in the ACMG lexicon return the prediction of the ACM
Return a list of variants for a case
Return all sanger variants.
Get a single variant from variant collection.
Get a list of variants that belong to a given category.
Get all verified variants for a given institute
Return list of causatives from institute_id or case_id
Checks the causative variants for the given institute and case.
Yield other causatives that are not the same in case_obj
Delete variants for a case
Get all variants overlapping with a category
Return a list of all variants that are evaluated for a case.
Return a list of variants for a sample
Connect to a mongo database.
Create a list of submission objects from a list of variant_ids
Get the header of ClinVar submissions.
Generate a list of submission lines from a list of submission objects and a submission header.
Load a panel from a file.
Builds exon object from dictionary.
Delete a panel if the number of panels equals num_
Drop indexes for all collections in the database
Delete user from the database
Drop all genes for a given build.
Drop all exons for a build
Delete a case and its variants.
List individuals from the database.
Show cases and their variants.
Load user from database.
Handle a login request.
A function to build institute object from the given parameters
Delete an event from the database.
Return all events in the database.
Get all user events.
Remove a phenotype from a case
Parse the genotypes for a variant given the individuals and individual positions.
Check if a position is within a given coordinates
HPO Terms Controller
List all transcripts.
Manages exons for a build
Load a region for a genomic variant.
Return all events in a certain month.
Return the live items for a given time range
Parse requirements file.
Return the existing gene for a HGNC ID or None
function to update a gene panel
Add a new panel object to the store.
Export a panel to JSON.
Returns the information about the archive.
Migrate scout and archive info to archive db.
Show HPO terms and description
Configure extensions.
Register blueprints to application.
List aliases of genes.
Build panel and gene objects.
Write verified variants to a CSV file.
List variants for a case.
Returns the vcf entry for the given variant_obj
Start a mongo web server
Generate a md5 hash key for a list of strings
Initialize the database for the given app.
Set up collections from a database instance.
Index the database.
Initializes scout with institute data
Demonstration of Scout.
Setup the database connection and mongo adapter.
List institutes.
Parses the genetic models info string.
List all the panels in the institute
Add institute to database.
Return institute object by id.
Match date with regular expression
Extracts a date from a date string.
Generate list of HPO gene IDs
Parses the Rank Score data from a VCF row.
Add a user to an institute
checks the connection status of a mongod
Load delivery report from the database
Add a user to the user collection
Pileup view.
Load exons from ensembl exons csv file.
Update compounds of a case
Add links to the ensembl gene ids.
Print hgnc gene symbol and gene list for a gene.
Parse hgnc gene IDs lines
Get Open Clinvar Submission for a user and institute. If the user does not exist
Update clinvar_id and submission_id
Get clinvar_subm_id from submission_id
Add multiple variables and cases to a submission.
Update the status of a clinvar submission
Get clinvar submissions for a user and institute.
Delete clinvar submission and variant object from the database
Convert case to clinvar dict.
Parse hpo lines and yield dicts
Display a list of all Genes.
Display gene information.
Return JSON of genes data for the current query.
Retrieve an institute and a case from the database
Return the institutes of the user
Get the HGNC ID for a given gene_info
Create or update a panel
Load disease terms from mim files
Load disease terms from mim file
Parses the frequency of a variant by looking for the key in the variant info
Parse sv frequencies from a Variant object
List users.
Compares existing panel with new panel returns list of differences
Update MIM versions in the panel.
Add gene panel to the database
Get panel by its identifier.
Delete a panel from panel collection
Get panel by ID.
genereate panels by id and institute id
Return a dictionary mapping HGNC ids to sets of panel names.
Update a panel
Add pending action to panel
Returns set of clinical symbols associated with a case
List cases to be processed.
Send an email via SMTP
Drop and create indexes from the indexes dict.
Create indexes for collections that don t exist yet
Drop indexes from the collection.
Build the variant query to be used in the search.
Convert mongo query to clnsig query
Add the coordinate field to the mongo query
Add the HGNC symbols to the query if not present in the query.
Wipe the entire database.
Parse a panel CSV and return a list of dicts
Load hgnc_bulk bulk method.
Load many transcripts into the collection
Bulk insert Exon objects to Transcripts collection.
Return the hgnc transcripts for the given hgnc_identifier
Return the HGNC symbol ID for the given build
Return the list of Gene objects for the given HGNC symbol
Return all the genes for a given build.
Return the number of genes in a build
Drop all of the genes from the database
Drop all the transcripts of a build
Drops all the exons in the database
get ensembl transcripts for a build
Return a dict of HGNC symbols to Gene object
Get gene by symbol and build number.
Return a dictionary mapping aliases to HGNC ids.
return a dict of Ensembl gene ids to HGNC symbols
Return a HGNC symbol for the given HGNC symbol
Add hgnc_id for each gene
Return a dictionary mapping chromosomes to intervals in the chromosome
Load OMIM API panel.
Return all cases of given institute.
Return a case.
The matchmaker admin view for matchmaker admins
Matchmaker action.
Delete case from matchmaker
Return a PDF of a case.
A form for diagnosing a case
Update or archive a case.
Assigns an institute to a case
Search terms from the HPO index.
Mark a variant as validated in a case
Mark a variant as causative or uncausative
Return the delivery report of a case.
Share an institute case with another.
Reruns the current case.
Opens the research for the given case.
Send a vcf to cytosure
Function to download multiqc files from the server
Return a dict of cases and their groups.
Retrieve clinvar submissions for a user and institute.
Writes the mt variants to an Excel file.
Get diseases of the hpo_ids
Return cytosure name and id for given vcf.
Multiqc function for building multiqc files.
Return the list of unevaluated sanger ordered variants for the given user.
Call MME Delete endpoint
Get matches from MME.
Makes a matchmaker request to the MME server
Drop genes and transcripts
Parse callers from the variant info.
Build a hgnc transcript from a dictionary.
Load institute data from the database.
Parse cadd from a variant and return the highest cadd
Load a case from a YAML file.
Update a single variant
Update rank of variants in a case
Given a variant and a dict of variant_objs load the variant_obj for that compound
Update compounds in a variants dictionary
Updates a collection of variants using pymongo. UpdateOne
Load a single variant from the database.
Upsert or update a variant.
Load multiple variants into the variant_collection
Assign a case to a user.
Share a case with a collaborator
Diagnose a case
Marks a case as checked by a user
Order the verification of a particular variant on a case
Sanger ordered event.
Validate a variant
Mark a case as causative.
update or dismiss a variant
Update the ACMG for a variant
Parses the ids and returns a dictionary of ids
Parse a simple id from parts.
Parse a document ID using the MD5 key.
Add HGNC ID to each gene in the panel.
Get the variant ID from a Variant object.
Returns the number of cases in the database.
Update dynamic gene list for a case
Return a case by it s id or display name.
Delete case by case_id or institute_id
Add a case to the database.
Replace a case object by a new one
Update the caseid of a case
Submit an evaluation for a variant for a given user and institute.
Get all evaluations for a given variant
Parse Ensembl transcripts from a list of transcript lines
Parse Ensembl gene ID request.
Parse Ensembl transcription request and extract transcription info.
Parse Ensembl gene IDs lines
Extract exon IDs from Ensembl output.
parse ensembl exon request
Initialize a console logger.
Returns a dictionary mapping mim number to a set of phenotype numbers for the MIM
List genes and phenotypes for a MIM.
Convert string to int or float
render a month of a year
Formats a weekday name and sets attributes for the day.
Return a month name formatted as a string.
Populate the attributes for the popover
Extract panel info from panel lines.
Create a gene panel from a gene panel file.
Show disease terms.
Drop all HPO terms for a given adapter
Return a list of users and their events.
Parse conservations for a variant.
Parse conservations for a variant
Get general case information.
Return a list of cases grouped by case number.
Render a context and return a JSON response.
get year and month from GET or GET query string
Check for cancelled events on a given date.
hpo_id - > Term
search for hpo terms
Return a disease term by its identifier.
Return disease terms by HGNC identifier.
Load disease term from the given disease object
Generate a gene list from HPO terms
Read data from HDF5 file
Setup timestamp axis based on start and stop timestamps
computes the last time step
blank dc with n_coarse_chan channels
Return the extent of the time series.
plot the waterfall
Plot the time series.
This function writes the sigproc filterbank file to the filterbank
Calibrates the n1 - th bandpass.
Convert data to coarse - channel
Compute the fraction of the polar angle of a given string
write out a series of linear and circular filters to a single file
returns the index of the closest value
Rebin a d d into n_x n_y and mean respectively
Unpack an array of 8 bit unsigned integers.
Get the difference of two time series
Plot a calibrated diode.
Calculates the size of a selection.
Calculate the shape of the selection
Calculate start and stop frequencies for each channel.
Populate timestamp array with start and stop timestamps.
Calculate the number of coarse channels in the file.
Calculate the number of blobs for a given blob_dim
True if selection is heavier than max_data_array_size
Read all data from the PNG file
Read a row from the PNG file
read data from file and time range
Updates the header based on the current container information
Print information about the file.
Write to the. fl file
Write the container to an HDF5 file.
write to hdf5 light file
Return blob dimensions for chunk_dim.
Get the chunk dimensions based on the header
Grab data from the table.
Tool for guppiraw.
Return the first header as a dict.
Find the number of data blocks in the MAR file.
Prints the stats plot
Plot a histogram from the data stream.
Generate the header for the filterbank file.
Finds the size of the header in a given file
Integrate calibration data using foldcal.
Return center frequencies averaged over a channel per coarse voxel.
Calculate the on - off and off - on ratios.
Get the Tsys from the spectrogram
Return the length of the header of filename
Check if a file is a filterbank
Generate a sigproc header for a given file.
Calculate the number of integers in a file.
Converts the traceback to a dictionary.
Create a subparser for a record type and its subcommands.
Create the parser for parsing the zone file.
Remove comments from text
Add a default record name if it is not one of the supported records.
Parse lines from a zonefile into a dictionary of zones.
Parse a zone file and return a zone dict.
Quote a field for use in LIKE clauses.
Parse avro schema string.
Creates a python package from the given classes
Convert a django. db. models. fields. Model to a json compatible dictionary
Load JSON data from dct using record_store and schema.
Load data from a JSON formatted string and store in the supplied record_store.
Add a schema record to the schema map.
Get schema for a given record name.
Return a dict of varname = > value for this variable
Generate a schema dict for a given record
Get the root schema dictionary for a given record
Read from a stream of messages.
Write MultiReduce outputs to a stream.
push dct at the front of dct
= str_ )
raw_filter - filters to apply to this collection
Returns a list of entities including specified attributes.
Given a result from an OData endpoint determine the entity that should be added to the result.
Give another quote which isn t already in use.
Escape a filter value
Return the elementary rotation matrix for a given axis and angle.
Calculate Vrad errorsky average.
calculate parallax error
Return the error of magnitude of g.
Return the magnitude error of g in the eom of the earth.
Calculate the average number of transits for a given beta value
Return the angular distance between two angles
Transform cartesian coordinates
Transform sky coordinates phi and theta from spherical to spherical.
Compute the transformation matrix of the covariance matrix with the given parameters
Return the errorscaling factor for the given observable and beta
Uniquote a value.
Iterate over a collection applying a function to each item
Exclude elements according to func.
Return a new collection containing only the elements that satisfy a condition.
Return a new collection with only elements while func returns True.
Return a new collection with only the elements while func returns True.
Zip this collection with other collections.
Find first occurrence of a string
Return the path of the serach executable
Build a minimal set of runs based on scheduled runs
Print the report to output file.
Prints the results to the output file.
Cleans the code and removes comments macros and pragma statements
Round to next base
Blocking search for boundary indices
Calls the predictor s get_misses get_hits and get_evicts
Calculate the total number of cycles in the entire simulation.
Strip and uncomment ASM lines
Strips all unreferenced labels from a list of assembly files
Select the best block for a given string
Prompt the user to select an amount.
Insert start marker and end marker at given lines.
Generate num items spaced between start and stop
Get the datetime of the last modified files in a directory.
Check the arguments passed to the script
Entry point for the script.
Parse command line arguments and update a mapping.
Like sympy. symbol but takes str_ as the first argument.
Replace multidimensional declaration to 1d decl.
Convert multidimensional array to 1d array using dimension dict
Find all nodes of a given type
Check that the datatypes are all unique.
Set a constant for the block.
Substract constants in expr
Returns the sizes of the array variables.
Calculates the relative offset for a dimension.
Remove duplicates accesses.
Get the iteration length for the given dimension.
Returns a generator yielding all the loops in the top of the loop stack
Returns a list of expressions in the order they should be indexed
Returns a dictionary mapping variable names to lists of accesses to sympy variables.
Compute the distances between all the variables in sympy_accesses.
Converts a global iterator into a dictionary mapping variable names to indices.
Calculates the global iterator of the loop stack
convert indices to global iterator
Calculate the maximum number of global iteration in the loop stack
Print information about the kernel to a file.
Print information about the variables in the model.
Prints constants info.
Print the kernel code to a file.
Convert an AST to a sympy. sympy sympy. Int
Recursively get indices for array and arrayref nodes.
Returns the basename of an array reference
Get the type of the index in the kernel loop NEST
Build decls for constants
Returns all declarations of array type
Returns the kernel loop nest as a list.
Returns a tuple of declarations for constructing an array and a dict of arrays.
Traverse a for loop nest and find the innermost loop.
Build kernel initializations for 1D arrays.
Build dummy calls to the kernel.
Build and return a kernel function declaration node.
Returns a list of scalar declarations for the kernel
Returns the kernel code from the kernel_ast.
Builds a kernel call node.
Build code from the kernel AST.
Performs IACAC instrumenting analysis on the kernel.
Returns the unique identifier of the data item
Get the last modified datetime of the file
Get the compiler name and flags for the given command
Parse a perftr event string.
Enforces no overlap in the dataset.
Get the absolute path to the header file.
Align iteration with cacheline boundary
: str_ = 0 ]
in self. machine ] return
in self. machine ] return
in self. machine ] return
: int ]
Returns the informations about the cache
Temporarily replace an environment variable with a value.
Configure the argparse argument group.
Parse the description in the README file if exists.
Helper function to build a purchase item from course data
Records a purchase on the sailthru server.
Return the content for a given course from the Sailthru API.
Returns course content from ecommerce
Update the unenrolled list for a given user
Send a course refund email to the given email address.
Send Offer Assignment notification email to sailthru
Retry the order if the maximum number of fulfillment retries has been reached.
Fulfill the order passed in.
Get the sailthru client based on the site code.
Get the value of a key if it is expired
Set a value in the cache
Get a configuration variable from a module.
Get overrides filename from environment variables
Find a value by Eplus version.
Returns the version of the eplus SDK being used.
Populates this instance from JSON data.
Get external files for all tables in database
( ) return
Prepare the descriptor for extensible usage
Return a dictionary mapping short references to their corresponding external references.
Get a value from a column in the table.
Updates the value at the given index
Update the inert document and activate hooks and links.
Add new fields to the datamat.
Remove and return the last value from the cycle.
Insert value at index.
Remove this record from the device.
Register a record hook.
Add a Link to the LinksManager
Create a regular expression from the line and intent name.
( time )
Return a dict that can be passed to json. dumps.
Make an HTTP request to the given URL.
Get all endpoints for a given service type
Tries to create a directory. If failed tries to create it.
Uses pycurl to configure a service while waiting for it to be started
Register the certificate with pycurl
Recording state.
Update the status of an event
Configure the service register the ca and update the agent status
Return configuration file path.
Update the global configuration and check for changes
check if the config exists and if so print the info and warning message
Set up logging.
Render the home page.
Try to get image path from config file.
Run all the modules in parallel
Parses a VCAL string and returns a list of dictionaries
Get the current schedule from iCal
Main loop of the scheduler
Main loop of the control loops.
Make an error response
make data response
Get internal service state
Get all upcoming and recorded events
Get a specific event by UID
Delete event if hard_delete is True
Modify event data from POST.
Start the recording of a particular event
Render the template to a HTML fragment.
Resource list excluding duplicates.
: self. name, }
Return a frag based on pods dict.
Add content to the message.
Set JavaScript initialization parameters.
Return html string of resources associated with the given placement.
Convert a resource to HTML.
Return a JSON fragment or a standalone response.
Return a standalone response with the given fragment.
Render to standalone html.
Calculate the sensitivity matrix for a given number of pvalues and lamb
Convert values to one - dimensional numpy array
Lookup values in pep spe qep and qvalue columns from an error table
Extract the final error table from the given cutoff dataframe.
Returns a summary error table for a given qvalues.
Computes the error statistics for a set of scores and decoy scores.
Find the best cutoff score for a test.
Inverts the peptidoforms of the input file using the IPFS method.
Infer peptides using the model.
Produce proteins by inferring them from a protein file
Subsample the infile to the outfile
Reduce the infile to outfile using reduce_osw
Backpropagate an OSM file to an output file.
Get a group by its identifier
Create a group
Delete group by id
Returns a list of group members for the given group id
Update the group members
Returns the effective member count for the group by group_id.
Return True if group netid is an effective member of the group netid
Decrypt data with AES.
Get the stdin object.
Get the stdout of the process.
Get the stderr of the daemon.
Get the debug output.
Context manager yielding stdin.
Context manager for redirecting stdout to file.
Context manager for redirecting standard error to STDERR.
Temporarily redirect stdout to debug stream.
Print error message and set error flag as True
override print_help to print the epilog
Print usage information for this parser.
Print the program version and exit.
Resolves environment variable and configuration option if present.
Creates a copy of the clicontext
Write headers to file.
Generate a temporary URL using HMAC - SHA1.
Quote a value for inclusion in a query.
Get a client from the pool.
Decrypt data with AES256cbc
Upload an account.
Upload a container.
Generate the manifest body.
Create a container
Transulate a transaction id.
Check if the stream is empty.
Encrypts the text stdin with the given key.
Get the status of a commit in a repository.
Get a GitHub pull request.
Get list of Pull Requests for this application.
, orm )
Return a queryset of slider items.
Return the list of hero slideritem
Acquire a lock on the readers
Release a previously acquired reader.
Acquire write lock for writing.
Remove task by task id.
Get a task by task id.
Return a list of tasks sorted by task_id
Return a dictionary representation of the object
Create a configuration object from a dictionary.
Initializes the archive manager for the given archive path
Create an index if it doesn t exist.
A simple JSON encoder
Write items from items_generator to writer.
Add a task to the scheduler
Cancel a task by task id
Return a generator for all stored items
Validate the arguments passed to the backend and category commands
Parse the args and return an archivingtaskconfig object.
Publish the status and result of the job to the RabbitMQ.
Schedule a job task.
Cancel a job task by its task id.
Starts the application in thread.
Listen for pubsub messages
Schedule the scheduler thread
Schedule a task using the scheduler.
Cancel a job task by its id.
Build arguments for q_storage_items job
Register a admin view
Same as django. core. urlresolvers. reverse_action
Returns the name of the view
Get a version string.
Resolve a key to its value.
Get the engine for a given scheme.
Parse database and schema names from given path
parse database url and return databaseinfo
Login a user and return a login response.
Get list of users
Create password change form.
Add the view name to the url kwargs.
Convert a string to a boolean value.
Convert a value to an integer.
get parser function for a type
Create a modeldict from a model and fields.
Base64 encode with y64_decode
Create a field from a dictionary mapping field type to field class.
Create a validator class from a data struct dictionary.
Find unique points in explored_parameters.
Change logging settings from kwargs.
Try to make directories for a file.
Get a list of strings from a list of strings
Sets self. _logger to log from the given name
self. trajectory = trajectory return
Checks the parser for options that contain strings and renames them.
Convert a parser to a stringio object.
Finds multiproc options and returns a parser instance
Find a dictionary where keys are multiprocedural strings.
Parse the log file using nointerpolationparser.
Recursively handle dict type configs
Create logging handlers and tools.
Finalizes the instance. Cleans up after itself.
Start redirecting output to the console.
Write buf to stderr.
Check if two results are equal
True if parameters a and b are equal
Decorator to add prefix to attribute names when needed.
Add all the parameters to the traj object.
Run the network and monitor the results
Generate an Euler scheme.
Add function and array parameters to the model
Differential array of a Lorenz system
Creates a storage service with the given kwargs.
Storage service factory.
Add parameters to the model
Computes the difference between two values using the Roessler method
Check if a parameter node is in a group node.
Build the equations of the model.
Check if the model should be built before the analysis.
Build the model if not already done
Builds the model neurons.
Check whether the connections for the trajectory should be built.
Build the connections if not already done.
Add parameter to the model
Compute the Fano factor for the specified spike result.
Compute the mean Fano factor for a set of neurons.
Analyse the results and compute the mean fano factor.
Add the monitors to the network
Create the folder for the output if it does not exist already.
Plot the celia_neuron results
Print the graphs to the screen.
Analyse the brian2monitor output
Get a batch number from command line
Explore a single batch in the TROJ.
The set of variable names referenced in this node.
The function that the node is in.
Renames the actor based on the full name.
Sets branch and run branch details.
Converts a PyPi node to a PyPi message.
Delete the node from the root of the tree
Removes a node or leaf from the tree.
Translate a shortcut name to a boolean and a wildcard string.
Determine types based on the current node and its branch.
Creates a link to the act_node to the instance specified by name and adds it to
Check if names in split_names are valid or not
Sets the details of a tree node
Return an iterator over the nodes in the tree.
Creates an iterator over the children of the given node.
Traverse a BFS tree starting at a given node.
Search a node for a key.
Private method for backwards searching in a name string for a candidate node.
Children of the node.
add a group from storage
add a leaf from the storage
return list of direct children of this node
Debugging function to give debugging information about the tree.
Get the parent node of the current node.
remove a link
Removes recursively the child nodes of this node.
Get the default value of a setting.
Returns the children of the node.
Get list of groups.
Get the leaves of the tree.
Return links as a dict.
Store the trajectory data in the trajectory name
add a result group to the network
add a derived parameter group to the model
add a derived parameter to the model
add a config group
add a config to the network
Add variables related to commit to the config file.
Create a git commit and return the SHA of the commit
Flattens a nested dictionary into a flat dictionary
Nests a flat dictionary into a dictionary with keys separated by separator
Get the positional or keyword arguments of the given function.
Get matching kwargs for func and kwargs.
Format the time to a readable string.
Convert a random TCP port to a TCP address.
Make all directories up to path create them as needed.
Reset the state of the class.
Get the remaining time for a given index
function to convert to dict
Remove a key from the field.
convert annotation to formatted string
Creates an ordered result from a result key.
Make a shared result from a result with the given key.
Calls the storage service to store access data for this trajectory.
Get the data node.
Check if item is a supported item
Create shared data for the given item.
\ Store the results of a multiprocessing. Process.
Lock the resource if it is already locked else wait for it to become locked
send done message
Finalize the connection
Start the client and connect
send request to server and retry on failure
Acquire a lock.
Listen for requests
put data to the queue
Automatically detects fork if pid is not provided
Handle data received and store it.
Receive data from the device and handle it
Receive data from the queue and return it.
Receive data from the server.
Store the state of the object in the storage service.
Stores the given message in the store
= references. keys ( )
Given a section name return a dictionary of options and values
Return a dictionary of configuration values.
Add the config file to the keyword arguments if it is not already present.
Add parameters and configurations to the given trajector.
Plot a pattern.
1D cellular automaton.
Called when an update message is received
Get or create overview group.
Loads multiple items into the registry
Get HDF5 storage service properties from the hdf5traj.
Store multiple items in a single call.
Synchronizing routine called by the closing of the rvc file.
Extract file information from kwargs
Backup the trajectory of the given trajectory
Read out a row into a dictionary.
Prepare the merge of the old and new data into the overview_group
Check python interpreter version against pypet version
Load exploration from the trajectory group or the overview
Store explorations in the overview group if necessary.
Stores the trajectory into the hdf5 file.
Create a leaf instance in the tree.
Private method for tree_store of nodes dfs
Store param or result table entry.
Get a table from the where clause or create it if it does not exist
Get a node from the trajectory matching the given name
Insert all keys and values in insert_dict into row
Cut string if it is longer than max_length.
Create a group if it doesn t exist yet and return the group object
Private method for creating or getting groups from a key.
Annotate or delete annotations in item_with_annotations
Load annotations for item_with_annotations
Helper function to store a group.
Recursively load a group from the trajectory file.
Loads the traj_node and hdf5_group as appropriate and assigns the
Given a dictionary of data and a dictionary of flags extract the missing ones
Add a summary row to the overview group.
Attempts to add meta information to the group.
Write data into a shared array.
Write shared table to HDF5 file
Write a dictionary into a table.
Write pandas data to HDF5
Write data into a group.
Write data into a group.
Delete a link in the dataset.
Get table column.
Get the length of the longest string in a list of strings
Read dictionary from HDF5 file.
Read the shared data of a node.
Read HDF5 array and return native data type
Load a trajectory from HDF5.
Makes a name for a set
set properties of the object
Add dynamic import to the import list
Shortcut for setting default parameters.
Return True if run with given name or id is completed
Removes all exploration from the file.
Update information about the run.
Add information about a single run to the data structure.
Lock all parameters
f_lock all derived parameters
Sets the flags self. _is_run and self. _meta_data
Recursively load the skeleton of the object.
Populate self. _reversed_wildcards with wildcards and their indices.
Merge many trajectory into one.
Merge information from a single trajectory into this trajectory.
Rename the full_name according to the wildcards in the other_trajectory
Merge config into other_trajectory
slow merging of dicts
Merge the results of the other trajectory into the results of the other trajectory.
Restore the default value of all parameters
Set all explored parameters to a specific index in the list
Make a single run of the graph.
return run names of the run
Start a single or multiple run.
sets the start time of the run
Sets the finish time for the run and adds the summary to run information dict.
Construct an instance of the given class.
Returns a dictionary of items from a param_dict.
Finalizes the run and computes the information about the run.
Deletes links from a trajectory.
Remove all nodes matching the predicate from the Tree
Pooling for single run signal handler.
Set the crun to the given index in the frozen pool
= str_
Configure the frozen pool for a single run.
Process a single run of the system.
A wrapper for _single_run that configures scoop based on kwargs.
Configure logging.
Try to configure niceness using os. nice
Handles the sigint - handling for a single run.
Wrap the handling functions.
Load a class from a full class string
Create a class from a name and dynamically imports.
Get the length of the range if it exists.
Same as self. f_get but as str.
Returns the range of the field.
Return a dictionary containing the current state of the field
Load the parameter from a dictionary.
Load the parameter from a dictionary.
Check whether two values are equal
Check if data is a supported matrix format.
, num_, sparseparameter
reconstruct a matrix from a list of data
Load the parameter from a dictionary.
Stores the current state of the field and returns a dict containing the name of the field and
Load the pickled parameter from a dictionary.
Translate key into view name.
Convert dictionary to string
Return self as a dict.
Set a single value by name
Check if item is supported by matrix
Stores the current state of the parameter into a dictionary.
Load the data from a dictionary.
Set a single value by name
Pickle and store the current state of the object
Load from a pickle dump.
Merge all files in a folder
Create a session with the current user and password.
Merge all trajectories for this service into one service.
Start saga jobs.
Multiply two points
Run a single neuron.
Postprocessing after a neuron is processed
Add a parameter to the trajectory
Add an exploration to the trajectory
Extract all subruns of the given trajectory.
Execute the network run.
Add parameters to components and analysers.
Run the analysis on the specified network.
Create a filename for the given Trajectory object.
Return the next element in the chain.
Handles keyboard interrupts.
Try to load a JSON config from a file.
Request PIN from API.
Request access and refresh tokens from the API.
Refreshes the access_token and refresh_token stored for the user.
Queries the thermostats API and returns the thermostats dictionary
Write tokens to a file.
Set hvac mode of a thermostats
Set the thermostats s fan minimum on time
Set the global temperature of a thermostat
Delete a vacation from the list
Resume a paused program
send a message to the thermostats
Generate a delay in seconds between nowutc and nowutc
Renew a timeout request.
Generate the renewing time based on the lease time and how far it has to be renewed
Dictionary of self. fsm_attrs.
Reset the DHCPCap object to a clean state.
Get timeout for function in state
set function timeout for the specified state
Select an offer from the offers vector
Send a request to the server.
Sets the timers for the current state.
Process an incoming NAK packet.
Initializing timer if not yet initialized
Timeout selecting if too many offers were collected
Timeout the request if too many requests
Timeout request renew if too many requests
Timeout the rebinding attempt if the number of requests has been reached
Handle an incoming Offer packet.
Receive an ack request.
Called when a NAK request is received
Receive an ack replacing the existing one
Called when a NAK is received to restart the session
Called when an ACK is received and the connection needs to be re - bound
Called when a NAK rebinding is received.
_request ( self ) :
Set a value in the query string
Add a value to the query string
Returns a new QuerySet with the given name and value removed.
Get the status of the server.
Read data from tdms file.
convert tdms file to fcs file.
Returns True if the two nodes are equal False otherwise
Create a new patch with the given name.
Delete the next record in the database
Delete an existing patch
Check if a file exists in a patch
Backup a file
Add a file to the database
Run the command and wait for it to finish.
Create the directory if it does not exist.
Copies this file to dest.
Create a link to the given link target.
Copies the file to the given destination creating the destination directory if necessary.
Get the directory of the file
Backups a file and returns the path to the backup file
Remove a patch from the end of the document.
Apply a single patch
Apply the next patch after the current one
Apply all patches after the current point
Reads the series file and creates patch objects
Writes the patchlines to the series_file.
Add a patch to the plot
Insert a list of patches to the document
Add patches to the line after or before another patch.
Remove a patch from the document.
Get the patches after a given patch.
Get the patches before a given patch.
Return a list of patches from the given patch
Replace a patch by a new one.
Create the directory for the package.
Check the version of the database we are connected to.
Add this group to the parser.
Add this command to the given parser.
Add the command line arguments to the subparsers object.
set args and kwargs for sub - commands
Add subparsers to the parser
Check if the file exists in the pc subdirectory of the patch
Check if file exists in next patches
Revert a file to a given patch
Import a Quilt patch.
Import the patches.
Add a way to the way node
Generator yielding missing node_ids from the graph
Add a node to the graph
Creates a route from a relation
Creates a long name for a route based on its relation tags.
Get the agency id for a relation
Process the file.
Add a relation to the current version
Create agency objects for each agency in agencies.
Generate dummy trip stoptimes.
Write the current state of the context to a zipfile.
Writes the contents of the archive to the given destination.
Build an agency for the given relation and nodes.
Extract all stops from a stop relation.
Iterate over nodes and ways to build shape objects
Get the list of supported versions
Send an APDU to the arbiter.
A simple wrapper of u2f. authenticate that prompts for a valid apdu connection and
Register a new application on the device.
Authenticate a client app with the apdu client.
A simple wrapper for u2f register and register with the apdu library
Convert unicode to str
Wraps cls with flawless. client. client. _wrap_function_with_
Checks if filepath matches only_blame_patterns
Get the email address from the string.
get the entry in the entry_tree
Convert markdown to rest.
Serve the web server and thrift web server.
Download the image at url and return it as a PIL Image object.
Convert image string to PIL Image object.
Check if image is big enough
Check if image is big enough for this width
Check that height is big enough for the image
Returns the category to use or None if not found
Parse totals from a totals field.
Get all items from the XML source
Save an error to the database
parse data from source and save to database
Parses the item using the configured parsers.
Get an instance of self. model from the data.
Method for saving the instance of model
Download the file at url to dest.
Open self. source with self. source
Get items from source
Enable or disable network access for the running node.
Add files to the sandbox
renames a file in the sandbox
Returns a list of canvas enrollment objects for the given course
Get enrollments for course by sis_course_id
Get all the enrollments for a particular section
Get Enrollments for a given Section by its ID.
Returns a list of canvas enrollment objects for the regid
Enroll a user to a course.
Get all the roles in an account.
Get all the roles in a given account.
Returns the list of course roles that are effective in an account
Get role by id
Get a role by its account_sis_id.
Get a single course by its ID.
Get a course by its sis_id
Get list of courses in account
Get courses in account by SIS ID
Get the list of published courses in a given account.
Get published courses in account by sis_account_id
get all courses for the given regid
Create a new course for the given account.
Update SIS id
Returns a restclients. models. Activity object for the given account and term.
Returns a list of grade objects for a given account and term
Returns a restclients. models. statistics. Statistics object for the given account and term.
Returns a restclients. models. activity. Activity object for the given sis_course
Get assignments by SIS course id
Return a restclients. models. StudentSummaries object for the given semester course id
Returns a uw_sws. models. StudentActivity object for the given course and user
Returns the student messaging for a given course and user.
Get list of external tools in account.
Get list of external tools in course
Create external tool.
Update external tool data for a context
Delete external tool.
Check if all required parameters are present on given object.
get user by id
Returns a list of users for the given course.
Get list of users for a given course id.
Creates a new user.
Get all logins for a user.
Update a user login.
Get next page url from response header.
Get the data from the given URL.
Returns a resource from the given url with the given parameters
Get resource by url with params
Send PUT request with given body and return result.
Generic POST Request with headers
Private method for deleting a resource from the API
Get a list of canvas admins.
Create a new canvas admin on the given account.
= None ) : return :
Deletes a user as an administrator of a user.
Deletes an admin from the given SIS account.
Create a new grading standard for a course.
Get a section by its ID.
Get a section by its sis_id
Get all sections in a course
Get all sections in course by sis_course_id
Returns a list of sections with students in the given course
Get all sections with students in a course by sis_id
Create a new canvas section.
Update a section name or sis_section_id
Returns a list of Quiz objects for the given course_id
get a single account by id
get all sub accounts for the given account id
Update account information
Update SIS id.
Get the auth settings of a user.
Update auth settings of a user.
Get a term by its sis_term_id.
Import CSV from SIS into canvas.
Import a directory as CSV into your account.
Get the import status of a SIS import.
Build an archive of the CSV files in dir_path.
Returns a list of Assignment objects from the API.
Updates an existing assignment.
Get list of available reports for a given account_id.
Get a list of reports of a certain type for a given account.
Create a report for a given account.
Creates course provisioning report
Creates a course SIS export report
__, term_id
Get data from a report
Get report status
Deletes a report.
Move all detections in label by given amount of pixels.
Horizontal flip detections.
Get a dictionary from an object with foreign keys.
Returns a dictionary with inplace_edit_options and inplace_edit_options_one
Empty value of inplace edit
Create metrics for the given metric configurations.
Setup logging for this class.
Configure the process stats registry.
Create and register metrics for the given metric configurations
Get a metric by name.
Render the home page.
Handle a metric update request.
Send an email using the wolframalpha library.
Fixes the http_client. httpmessage. get_content_type and http_client
Query the API with the given input.
) return str_
( pod. title
Encode the data as JSON and add it to the request
Make a GET request to the API.
HTTP DELETE method
Make a PUT request to the API.
Make a POST request to the API
Group sentences into groups of length group_length
Disambiguate a PDF file.
Disambiguate a query.
Segment text using segmentation service.
Get the language of the text
Get concept by concept id
Train the ensemble on the given features and classes
Estimates the accuracy of the new feature by using the trained ensemble.
( features )
Score the new feature with the given class labels.
Transform features to a new format based on the mapping
Calculate the score of the trait with respect to the given targets.
Return a persistent vector from a member iterable
\ Returns the vector of the given members.
Compiles and executes a Python file.
Evaluate a stream of Python source and return its result.
Compiles all forms in the given string and returns the result.
bootstrap repl in runtime namespace
Run basilisp in the context of the given namespace.
Add a method to the map
Add a method to the multifunction.
Removes a method from a map
Removes a method from the multifunction.
True if v is a macro
Get line and column information from a lispform.
Raises an exception when the node op is not recur.
Check whether recursion is at the tail of the function body.
Resolve bare symbol
Resolve a form symbol into a maybeclass hostform or varref
Shortcut for ast. parse_ast.
Returns whether to warn on the shadowed variable.
Returns a string representation of a map for printing.
Returns a string representation of a sequence of objects.
Returns a string representation of a Python object.
Recursively fix missing locations in attributes and children of this node.
Compile Basilisp form and exec it in the given module.
Compile py_ast into a module using optimizer.
Compile multiple forms to a single module.
Compile bytecode to the given module.
sequence takes an iterable and returns a simple sequence
Mangles a string.
Returns a fraction string from numerator to denominator.
Create a handler with the given level and formatter.
map kvs to kvs with meta
Partition a collection by n elements.
Namespaced reader.
Read a collection from the token stream.
Read a llist. list.
= ctx. token. value
Read a mapping from the YAML stream.
Reads a string from the reader.
Read a symbol from a file.
Read a namespaced keyword from the specified parser context.
Read the metadata of the object at the current cursor position
read a quoted string from the reader
Expand a string using syntax quoting.
read when the syntax is quoted
reads aderef lispform
Reads a single character from the current reader position
Read a regular expression from the stream.
Read a reader macro.
Read the next token and consume the comment token
Advance to the next token and return the lispreaderform
read from resolver in str format
Reads a file and provides readerforms for it.
Update column and line locations
Reduce the index by num_ to the left.
Advance to the next token and return it.
Return Basilisp bytecode as bytearray
Return Basilisp bytecode from cache_data.
Returns the full path to a cached copy of the source file.
Hook basilisp importer to sys. meta_path
Try to find a spec for the given fullname in the given path.
Compiles and executes cached module
Load and compile a single Sass module
Execute a module.
shortcut for making a symbol
Completer function for completion of text in keyword dictionary
Get or create keyword object in kw_cache.
Returns keyword with given name and namespace.
Chain pyasts and return deps and nodes
, ) -> str_,
Change the AST node lineno and column offset
Decorator for ast generators
Decorator for ast generators
returns True if v is dynamic
Check if a variable is redefeable
Convert an ast. ast to an AST statement.
Expressionize the body of a function.
Convert a do node to a python ast.
Name of function.
Returns a tuple with arg list varg arg list and body ast for the function.
Converts a single - arity fn to a Python AST.
Converts an AST node to a python ast
Converts an if statement to a Python AST.
Convert an invoke node to a python ast.
. generatedpyast. quote
Convert a loop node into a python AST.
Converts a recur opcode to a pyast node.
Converts a setbang node to a python ast.
Convert a throw node to a python AST.
Convert a try node to a python AST.
Convert a local to a pyast node.
create pyast node from var name and namespace name
Convert a varsym to a pyast node.
Convert an interop property to a Python AST.
Convert a maybeclass node into a pyast node.
Convert maybe_hostform to pyast.
Converts a constant to a pyast node.
, str_ ) -> None
Generate Python AST from lisp AST
Generate all the imports for a module.
Create an ast. importfrom node.
Finds the name of the variable and creates the corresponding symbol.
Returns a set containing the given members.
set of members.
Return new instance of ast. excepthandler node.
Return node if it is not a constant expression.
Compile the functiondef node to a fresh instance of it.
Filter nodes before the while statement.
Compile the try node to a fresh try node.
Create and initialize a new python module
get the first element of a seq or the first element of the seq
Get the rest of the argument or None if it is none.
Return the i - th rest of the collection
Return the nth element of a collection.
cons op.
Convert an object to a sequence.
Concatenate multiple sequences into a single sequence
Associate kvs with m.
Conj ( coll ) - > PersistentCollection
Dereference an object.
Return true if the two arguments are equal.
divide two numbers
Sort a collection.
Does coll contain k?
Get a value from a mapping.
Returns a JSON - serializable representation of the object o.
Convert an object to Python.
Returns a human - readable representation of a Python object.
Collect args into a list
Mark a function as basilisp s fn.
Resolves an alias for the given symbol
Resolve alias for symbol s
Adds the generated python code to the specified variable if it does not exist already.
Interns a name in a namespace.
Interns a unbound variable in a namespace.
finds a name in the namespace
Find the value of a variable in a namespace.
Find the string that is safe to use in a namespace
Add module as default import for cls. default_imports
adds an alias to the namespace
Interns a symbol into this namespace.
Intersect a map with a variable
Find an entry in the table for sym or None if it is not found.
Add an import to the current scope.
Get an import for sym.
Adds a reference to var in the context of the current scope.
) or None
Find all variables in other_ns_interns that are not private
Refers other_ns to this namespace.
Get or create a namespace with the given name
Get or create a namespace by name.
Returns the name in the current namespace.
Removes a name from the namespace.
completion for aliases
completion for imports and aliases
Returns a list of completion strings for all interns matching the given value.
List of possible completions for references of the given value.
Autocomplete text.
A tuple of varargs for the final parser.
Convert members to a list.
List member of a list
Decrypt JWT payload.
Encrypt a JSON string using the JWT and the JWT secret
Delete the object from the cache
) + str_
Convert a fiql expression to a fiql expression.
Dump a NDB model to a file.
Convert dict to dict for JSON encoding.
Try to decode a date string to a python datetime object
Convert val from python format to json.
Default JSON encoding for NetworkDB objects.
Validate leicacam version
Strongly connected components topological sorting.
Set the parent of the row.
Get the parent expression object.
Add an element to the current fragment.
Combine with and operator.
Combine with or operator.
Parse a receive line and return a list of dicts.
Convert a list of tuples to an ordered dict.
Check a list of messages for matching command and value.
Prepare the message to be sent to the socket
Flush data to the socket
Enable a slide
Saves the current template to a file.
Get some information about the device
Returns the absolute path to the package. json file.
Parse package. json.
Handle API Error with JSON data
Validate yourls response
Homogize wave a and wave b
Interpolate indep_vector for wave indep_vector
Get the indep_vector between wave_a and wave_b
Verify that wave_a and wave_b are compatible.
Load the systemjs bundle manifest
Get trace parameters for a callable.
Expand shorturl to fullname
Get url statistics for a given short url
Get statistics for the given filter
Get database stats for the current user
Split an iterable into chunks of size chunksize
Flatten an iterable.
Print a table to a tabular output
Create a dummy class with given name and attributes.
Creates a number from a human readable string.
Trace Python module.
Defining links to external websites.
Appends entry to plist for common requirements.
, num_ ) :_ = '-' )
Convert a string of ops to a string of words.
Split noise into frequencies angles and resolutions
Yields the pars for each chunk
Bound a waveform based on min and max values.
Build and return a string representing the operation to be applied to the units.
Perform a single operation on a Wave object
Calculate the running area of a graph given its indep_vector and the dep_vector
Validate min and max values of wave and return min and max values
Return the arccosine of a waveform.
Inverse hyperbolic cosine of a waveform
Return the arcsine of a waveform.
Return the inverse hyperbolic tangent of a waveform.
Convert waveform to directed waveform.
Group a waveform by its delay and phase
logarithm of a waveform
Return the square root of a waveform.
convert waveform to complex waveform
Convert waveform to float.
Interpret the wave vector as an integer vector.
Use systemjs_output_dir as the output directory
Get the short desc from a long desc string
Builds a single expression from a list of tokens.
Find the next available item after pos and return it.
Find functions in a template
Parse an expression.
Removes consecutive delimiters from a string in a series of sequences
Convert a number to a scientific notation mantissa and exponent
Return mantissa and exponent without scientific notation.
Convert suffix to float
Returns the fractional value of number in string
Peng mant corrisponding to number
Whether or not the app needs its own extension.
Bundle the application into a. js file.
Get the trace for the given app.
Compares the hashes of all the modules in the dependency tree
Format a hex dump string into a readable line
Parse a docstring into its parameters and return
Return a list of valid identifiers.
Resolve a deferred add action.
Split a line of text and remove quotes
Check if a context needs to be initialized and invoke all init commands
Return the help text for the last command.
Find a function in the given context
Returns a listing of the context and its modules
Return True if arg is a flag False otherwise
Extract the next argument value from the remaining list.
Invoke the method with the arguments from a string
Given a section name determine what kind of section it is.
Classify a line into different parts of a section
Join a list of lines into a single paragraph.
Convert a value to a type.
Converts a binary value to a type.
Get the size of the given type
Check if type is known in the code.
Splits a type name into base type bool and sub types.
Instantiate a new type and inject it into the type system.
Check if the given type has a formatter for the given format
Loads all the types defined in a type module.
Add a parameter of the given type.
typed_returnvalue - Set return type
Custom return value.
match a short name to all the possible names
Returns the type name of the param with the given name.
Format value according to the return_info
Converts a positional argument to its value
Converts an argument to the type specified by its name.
Format error message.
Create a dictionary representation of the exception.
Check if the function spec is filled and execute the function.
Parse a list of validator names and their arguments.
Find all objects in a container
Get the name and context from a module
Get the help text for a function.
Dontate a function if it is already decorated.
Mark a function as annotated.
Return a short description of the given function
Load all django - core - commands
Install cron schedules
Print all registered tasks in crontab
Uninstall crons.
Create an object from a URI.
Load project configurations from disk.
Save projects to disk.
Get the dependent projects of this project.
Initializes the project and collects the failed names
raise NotImplementedError ( message )
, pure )
View the fold.
Convert to a list.
Apply a function over a state
Set the value in the given state
Iterate over an iterable.
Return the kind of the object.
main entry point for the command line program
Step towards another string and return the result.
Handles user input
Advance robots to the next step towards the player
end the game and display a message
asks the user for a move
Play the game.
make a move if it is the same as the board return self
Returns a string indicating the game winner.
yield from self. board yield from self. board
Processes a single item.
Modified open_spider method to update ts attribute
Upload a single chunk to S3
Creates a file - like object from the JSON lines
) return str_ account state
get_asset_state method.
) return str_ hash of block
) [ 0 ]_
) return str_ Contract state
get_raw_transaction.
Get data from storage
) [ str_ ] )
Invoke a contract method.
Invoke an operation on a contract.
Invoke a script and decode the result.
= str_ )
) [ 0 ]
Makes a call to the VI.
Return True if s is a valid SHA256 hash.
Is the string a valid hash160?
Takes a list of parameters and recursively encodes them into a JSON - compatible format for use
Decodes an invocation result. If the invocation was successful a copy of the original result is returned
Apply the filter and timezone to a datetime object
Render and save as file.
Render barcode.
Renders the code and returns the result.
Manage local and global configuration files
Download a file from S3.
Upload a file to S3 using s3conf
Downsync an S3 section
Show differences between local config and S3
Parse an environment variable from a value
Set the basic auth credentials.
Set the API key.
Returns a generator that yields json objects from a folder.
Get all schemas.
Retrieves the schema for the current database and returns it as a dictionary.
get a reference resolver for the current schema
Validate object against the schema.
Get the valid examples from the schema folder
Get invalid examples from the schema folder.
Url for redirecting the user to GitHub
check url for auth code and set auth_code
Requests and returns a token from the authorization server
Return the user_id for the logged in user
Get a list of files in a folder
Create a folder.
Add a comment to an existing object
Return a unicode representation of a python object
Sets the drop target for the given object and its children.
start drag opration
Sets the default label designer and inspector
Inspect a Python object with the inspector tool.
Migrate a font from one string to another.
Loads a page into the wxPython app
Sends a message to the console window
Show a nicely formed tooltip
mouse down event handler
mouse move event handler
handles key presses on cells
Delete selected objects from the window
Duplicate selected objects
Refresh the widget to the current snapshot
Calculate best position for tooltip
Returns the python data of the given item
set python data for item
Returns wxPython data instance for python_data
delete an item from the list
delete all items from the list
Clear all values from all columns
set selected item in the list
Returns the string selected by user
set the data for the widget
Append a string to the end of the grid
Get parent wx component by name
add a child to the sizer
set the parent
Draw the background
Erase the background
repaint the label
Return a list of column headings.
Resets the grid view to its initial state
Updates the values of the cells
Updates the grid column attributes
sorts the data in the given column
Deletes all the items from the list
Creates a combobox
Begin editing of cell
Ends editing of cell changed returns bool_ True if changed
isacceptedkey - Returns True if key is accepted False otherwise
starting key event handler
Enable or disable all items in the menu
Return whether or not the menu is enabled
Enable or disable all menus.
Return whether or not this menu is enabled
Remove a menu from the menu bar
Sets the object attributes from the given tag
Visit HTML table to autosummary table.
Get the autodoc documenter for an object.
Mangles a python - style signature
Import object by module name.
Link to an element if it doesn t exist yet.
Displays an alert message box
Displays a text entry dialog and returns user input
opens a font selection dialog
A dialog to choose a color from a list
Prompts the user to select a directory.
Find text in a table
set if the item has children
set the icon
Parse datetime. datetime and decimal. Decimal.
Save a RSRC structure as a. rst file.
Build a GUI window from a result dictionary.
build a control or menu component from a resource dict
convert pythoncard property name to pythoncard property name
sets the data in the clipboard
Find autosummary of a python object in its docstring
Loads an object into the tree
Inspect the tree
Activate item in tree
Update the child in the tree
show the context menu
Return the representation of the thumbnail as a string.
( False )
( False )
Select an option from the base editor.
Returns a webdriver class with the given name and capabilities.
Return the XPath of the current node.
Switch to a specific frame.
Accept a modal dialog yielding the result.
Accept a modal prompt and wait for the result.
Dismiss a confirm dialog yielding the result.
Accept a modal prompt and wait for the response
Dismiss a modal dialog with the given text.
Save page to file.
Saves a screenshot of the current window to disk.
Raise CAPYBARA server error if raise_server_errors is True.
wrapper for has_selector with str_ argument
checked field has no checked field specified
wrapper for has_selector with str_ argument
( locator )
raise expectationnotmet
has no title
Get the inner content of node.
Get the inner text of a node.
Normalize a URL by removing querystring parameters and encoding encoding.
Check if an error should be caught and raise an exception.
Return a comparison function for the count options.
Cache all results at least size
Check that none is present in options.
Create a failure message based on description and options.
Returns a boolean indicating if the string matches the given count in the options
Normalizes text.
Remove leading and trailing whitespace from text.
Normalize text to regex
Resolves the current URL against the expected URL.
resize the window to new size
Start the capybara server and wait for it to become responsive.
Decorator to register a custom getter function.
Set instance method to call when instantiating the entity
Set the class method to be called when the entity is instantiated
Returns the traceback as a string
Returns the source code for the object
Returns the appropriate logger for the given instance
Set the logger for the data block. If no logger is given one will be set.
Call the API with the provided method and params.
Get list of channels from Slack
Get list of users.
Make a message.
Translate a message to Slack
Send a Slack message.
Read from the channel layer.
Run the bot.
Run the client.
Return a dictionary with keys that differ from prv and nxt
Colorize msg with color.
Print last task name when starting task.
Print out a list of hosts and summarize the result
Callback for v2 runner when a task is skipped
Convert a prefix to an addrmask.
Add a model to the Section
Load all filters from Jinja2 filters.
Try to find a yang file in the current directory.
HTTP POST request.
Build the authorization code URI to redirect the browser to.
Get token by code
Parse url query params
Dequery a URL string.
Build a URL with the given base and additional parameters.
) return str_
Create a response object for the request.
Make a redirect response with an error.
Make a JSON response
Generate an authorization code and store it for future use
Get a new access_token and a new refresh_token.
Get the access token using the authorization code.
Get the authorization code from a URI and return it.
Get access token from POST data.
Returns the authorization object.
Open the device with the given bus.
Read a single byte from the device.
Read number of bytes from the device.
Read a byte from a device
Write bytes to a device.
Write a byte to a device.
Write i2c block data to the device.
Copies the image to the local or remote device.
Creates a local copy of the given effects
Construct file instance from file info dict.
Upload file_obj to store.
Returns a list of CDN URLs for each file in the group.
Construct group from group_info dictionary.
construct group from list of files
Base implementation of the operation over the API
generator on all file uuids
Returns a list of objects from the API endpoint.
Print a progress bar for iter_content yielding chunks.
Get the status of the home mode
Get a list of cameras belonging to this scene.
Get information about cameras by their ids
Get a snapshot of a camera.
camera_event_motion_enum ( self camera_id ) Motion setting enum.
Camera Event MD Parameter Save Method
Update all camera objects to API server
is_last_li checks if current_numid is the last in a list or not
Get data for a single list element.
Get the level of interest for this node.
Get the vertical merge part of the sentence
Return the grid span of the term
Get td at index
Check if a style dict is false.
Returns True if bold style is false.
Returns True if italics style is false.
Return True if underline style is false.
is_title determines if a BeautifulSoup element is a title
Get text run content data from a BeautifulSoup object
Get relationships between elements in the given XML tree and media.
Return ordered list type or default list_numbering_style
Build a table element.
Get the HTML content for a given HTML tag.
remove element with given tag from given tree
Find a dataset by name and download the url to it
Load images from mnist file using pickle and numpy arrays.
Plot a set of images
Plots all the images of the layers
Plot the selected filters
) + str_
Add a set of convolutional weights to the layer.
Decode a dense vector
Encode autoencoder outputs as a string.
predict on a sequence.
predict_proba in the last layer
predict logit function
Returns the list of target and weights as variables
Compute accuracy of the prediction.
build activation by name and kwargs
Reservoir sampling pool.
Clears the losses and adds a new loss
Call itertrain on all monitors.
Connects layers and regularizers together
( str_ )
Returns a list of variables seen in the input and loss
Pickles the object and dumps it to disk.
Loads a pickled model from a file.
Compute a total loss function for the given regularizer.
Returns updates graph from the current state of the kernel
Returns the size of the output shape.
Resolve the input shapes.
Resolves the output shapes based on the input and output kwargs.
Log the activation function and the parameters.
Log the parameters and their shape at once.
Appends the name to the string if not already in the string.
Returns the output name and shape based on the input name.
Find a parameter by its index or name.
Add a bias parameter to the layer.
Returns the spec for the class suitable for passing to the underlying layer.
Returns the logarithmic position of a waveform.
Evaluate the loggabor equation for the image
Add a new tier.
Remove tier by name number.
Get tier by its name number.
Convert mpi to eaf.
Add a new point to the tier
Add a new interval to the tier
removes an interval given the time
Removes a time point from a tier
yields intervals stored in self. intervals
Return a list of intervals sorted by tier_type
Indents el. text and el. tail.
add a annotation to the segment
Add a description to a controlled vocabulary
Add an external ref to the external_refs dict
Add a reference to a lexicon
Add a linguistic type to the map
Add a locale to the Translator object
Remove all timeslots from tiers
Extract a range of annotations from a EAF
Generate a unique annotation_id
Generate a time slot name.
Returns the child tiers of a given tier by its id.
Get the full time interval of the object
Returns the ref annotation data after the requested time.
get ref annotation data between a certain time
Returns tier ids for a given linguistic type.
Removes all annotations from a tier.
Removes the description of a CV language.
Removes a license from the license list
Removes media descriptors linked from self. media_descriptors if they match the specified parameters.
remove the specified property if it exists
Removes a reference annotation from a tier
Remove secondary linked files that match the given criteria
Removes a tier from the scheduler.
remove tiers from the time_slots
Renames a tier.
Reduces the number of slots in tiers by time.
Prints debugging information about the storage structure.
Get embedding levels for text.
Given a dictionary of bidi types and a dictionary of bidi levels find the embedding level
Resolves neutral types for strings in the storage dictionary
Reverse contiguous sequences in a contiguous set of characters
Reorder levels so that the highest level is before the lowest level
Normalise the current file and add it to the context.
) return value
Command line interface for the tool.
Maintain backwards compatability of the binding.
Show the GUI.
Discover and return gui
Add commands to the file menu
maintained_selection maintains the selection for the duration of the context
Context manager that ensures the time is maintained in the future
Show messagebox with no gui
Yields the cumulative sums of all the data
Returns a list of values for a single axis from a dataset
Draw a constant line
Loads the transform parameters for the plot.
Reverse a mapping.
Generate a range of floats
= conf return
Generates the graph and renders it.
Calculate left margin
Calculates the right margin
Calculate top margin
Add a popup to the table.
Calculate the bottom margin of the page.
Draw the graph
Make text for a data point
Draw the x labels for the current step
Draw the y labels for the current step
Draw x guidelines at the x - axis
Draw y guidelines to diagram
Draw the titles of the graph
Render inline styles if enabled
Start an SVG document
Return a list of stylesheets to be included in the report.
Connect to a IRC server join all channels and run the bot.
Send data to the client.
Connects to the server and registers the user.
Send a message to a channel or user.
Returns a tuple of patterns and callables.
Changes the user s nick.
= True )
Called when the socket is registered
Enter event loop.
register with boss
Task runner.
( str_, ) )
) : return False return True
Queue a task for execution.
Add a nick
Sends an email to the user when their email is validated.
Sends the password reset email to the user.
Verify token for authenticated users.
Remove user s avatar
allow request if method does not match request method
Return the api client for this service.
Returns a tuple containing the TLS certificate and key if the TLS certificate was used. Otherwise returns none
Return the name of the service.
Calls a docker client method
Submit a docker call to the executor
Check the state of the docker container
Stop the service on the docker host
Validate unique email address.
Update the password on the user
Set the password and return the instance.
Validate email address.
Create a new token for the user and return its key
Delete the token from the database
Resend confirmation email check if user is logged in and email matches confirmation email.
Send validation email.
Update the expires field based on the creation date.
Return the email context for the password reset email.
Send email to user.
Email handler for password reset
Email handler for site validation emails.
Authenticate the request with a token
Extends the authentication method to check token expiration.
Publish Bokeh plots embedding content
Given a list of bokeh plots and a widgets object a plot or a list of
Returns a customjs callback that fetches the data from the remote data source.
Returns the widget to use for the given parameter.
Render a dimensioned object to a function
A wrapper for textinput. textwidget
Return a list of tuples where key is the name of the object and value is the obj
Get the owner of a given method.
Assign http auth values.
Send a ping request.
Perform an HTTP GET request to the API.
Check the health of the service by communicating with it.
Convert a number of bytes to a readable string.
Return the total load of the CPU
Returns the memory size in bytes.
Check if a network is up and return its data.
returns a list of volumes
returns the volume with given volume_id
Get the size total of a volume.
Returns the percentage used of the given volume
Get the average volume disk temp for a given volume
Get maximum volume disk temp
Returns the disk with a specific id
Login to the API and get the access_token.
Get a URL using the GET method
Execute a GET request against the given URL and return the result.
Update the objects utilisation and storage
Retrieves the utilisation figure for the Scrapyd service.
Get a reference to the synostorage service for the current session.
Return a context object for the webhook.
Get the tenant token for this entity
Build HTML attributes and add it to the tag
Temporarily override installed apps in settings. py
Temporarily disables the specified apps
Get all global settings
HTTP GET method.
Change the value of a key in the config file.
Migrate a file from old config to new config
Start web server.
Wait for a response from the server.
Get a new access_information dict from server
Check if token is present in the config file
Set OAuth access credentials
Create the manifest table in Amazon DynamoDB.
split full path into bucket and path
Check if the given prefix is a glacier.
Remove None values from a dict.
Add the run_id to the manifest.
Check if run_id is in the manifest
Extract a schema from a uri.
Fix schema string
Parse a json unstruct into a python datastructure
Transform a line of text to JSON.
Convert a good event to a JSON dict.
Get used template for response.
Returns a string with the formatted context
Print the variables of the template to a string
Formats a SQL statement using HTML.
Returns Django context html for the given object
Format a summary of a dictionary into HTML
Apply styling to text.
Override format method to catch handled exceptions.
= self. _format )
Get the next latex token from a string.
Get LaTeX nodes in a string.
Get text from latex document.
) num_ = latex.
Convert unicode string to ASCII.
Get Organisation Information.
Returns a list of Board objects.
gets all the members of the group
Update an organisation
Removes a member by ID from the group.
Add a member by ID
Add a member to the group.
Returns the list information of the current user.
Add a new card
Returns the label information for the current user.
Request a list of items from the server
Update label name in InfluxDB
Uses the fetch json method to update the label dictionary and creates the label object.
Build authorisation url from application name and token expire
Returns information about your current balance.
Get a board from the ThreatConnect API.
) return self. client. list
get list of checklists from server
Add a comment to the list of comments.
Add an attachment to the email.
Add checklist to the server
Add a label from a dictionary.
Add a label from class label.
Add a member by ID
Returns the current member information from the server
get list of cards from the server
Get organisations from DCNM.
Create a new board with default properties.
Get information about the board.
get lists from the server
get list of labels from the server
= query_params ) )
get list of checklists from server
) get organisation by query params
Create or update bulletin board.
Add a new list
Add a new label to the list
Get the current user s checklist information.
get card from checklist information
get items from the checklist
Updates the checklist with the provided name
Add a new item to the queue.
Remove Item from by ID
update name of checklistitem
Update the state of the checklistitem
Add the authorisation string to the query params.
Check for errors in the response.
Build the URI from the path and query_params.
Fetch JSON data from the API.
Create an organisation using the given organisation json
Create a board from a JSON dict
Create a label for the given label json
Create a list given a list json
Create a card object given a card json
Create a checklist given a checklist json
Create a new member given a JSON dict
Get a Organisation object by id.
Get board by id.
Get a list by id.
Get a card by its id.
Get a specific checklist by id.
Get a member by name or id.
Extract domain from URL.
Convert text to markupless raw text.
Set a users password for a service.
Split the text at the positions specified by locations
Finds all matches in text and marks them as such.
Find all matches from begin to end and mark them as undecided.
Entry point for commandlinetool.
Creates a cipher for the password
Get the AES mode to use.
Sorting priority of messages in the queue
Check the scheme of the aesconfig.
Publish message received from server
Generate a new id and return it.
Connect the client to the broker.
( response ) )
Encode a string as a bytearray
Decode a string from an encoded buffer
Encodes a 16 bit signed integer into a bytearray
Return a length encoded bytearray.
Decodes the length value from a sequence of bytes
Create a string representation of the table
Encode this session token as a binary payload.
Decode a BIP0022 UDP packet into attributes.
Encodes the result to a string.
Decodes the packet into the object
Decode a BCC Packet into self. Topics.
Encodes the message header into a byte string.
Encode the message header into a byte string.
Decode a BCC Packet into self. Topics.
Encode the message header into a string.
Encode a message header into a byte string.
Decode a BQ message
Decode a BIP0016 Message.
Get the URL for this request.
Make a request to the API
Refresh self. _blocks.
Formats the data according to self. analytes
Apply fitting to the data
Fit k - means clustering to data
Predict the closest clusters of the data.
Map cluster ids to a new array.
Sort clusters by mean mean of each cluster
Get a date from a given datetime string.
return the total number of points in a dict
Get the total time span in a dict
Returns a dict with keys as keys and values as values
Pretty print an element.
convert analyte to namemass
convert analyte to mass name
Collates all the files in the in_dir with the given extension
Enumerate the indices of the bool_array.
convert tuple to boolean array
Fast smoothing with a stochastic kernel
Computes the gradient of an array using a rolling window with num_ trials
Find the minimum values of y in x
Cluster meanshift classifier.
Cluster data by k - means clustering
Get the indices of all defined SRMs in the srm_file
Read the configuration of the LATools.
Read the latools. cfg file.
Copies a SRM file to the target directory
Exclude all holes in a bool filter with < = threshold threshold
Autoranges the plot to match the given analyte.
Populates self. bkgrng, self. sigrng and self. tr
calculate the ratio of an analytes using the internal standard
Calibrate to a set of analytes
Dictionary with ablation times as keys and times per ablation as values
Calculate the correlation between the focus points x_analyte and y_analyte.
add a new filter
Get all the parameters of the element and store in a dictionary
Plot histograms of data
Load reference data from a Pandas DataFrame.
calculate molecular molecular weight
Generate named tuple with keyword arguments
annihilate a stack based on a predicate.
Deduplicate a stack of strings
Calculates the weighted stats of a new set of points using gaussian kernel
Gaussian Distribution Function
Stderr op.
Return a list of subsets or a dictionary of subsets
Calculates the ratio of all the stages.
Make subset name if it does not exist.
Applies the classifier to the given samples
print number of removed nodes from all subsets
Filter a set of reports.
minimal export of traces to csv files
Save the log to a file.
Folds fa with function f on the left.
Bayesian scaling using the Bayesian Model
Scale a time series to the median value
Increase noise by despike.
Decay decay decay method using Taylor Series.
Add a new component to the data.
Remove a component from the MOC.
Clear all the information of the object.
Remove unused switches
Given a fuzzkey return the indices of the components that match.
Get a component from a component or make a new one
Return a string with information about the stimulus
Write a log file.
Read log file and parse arguments.
Get information about modem.
Send a message to the given modem.
Parses a SQL file or string and returns a SQLFile object.
Get the link to nbviewer page given a url
Returns div for thumbnail
Generate code div.
code example of the node
URL of this notebook or metadata page.
Get the output file name with extension.
Create the python file to save notebook to.
Return the download url of the data.
Create a thumbnail for the current figure
Scale an image to a given width and height.
Saves a thumbnail of the image if the image exists.
Copy thumbnail figure from notebook to output directory.
Get URL for notebook file.
Returns a generator that yields the languages that have changed for a given db table field name
process thumbnail file
Resizes the image if necessary and saves it to disk
Return all thumbnails as a list.
Creates a new thumbnail.
Delete an image of a certain size.
Create a thumbnail and return the thumbnail.
Get a thumbnail by name and size
Delete a thumbnail.
Called when a message is received from the transport.
Subscribe to a channel number.
Returns a set of strings describing the current state of the message.
Send a Message.
Get all receiver blueprints.
Receive a message from the provider.
Receive a status from the provider.
Forward a message to all connected clients.
Sign web3 transaction.
Returns the gas estimate for the transaction with the ethereum client.
Estimates gas estimation for transaction in bytes.
Write to the socket.
Reads a line of text from the serial port.
Check for bad headers in the message.
Add an attachment to the email.
Register multiple services at once.
Load configuration from a module.
Register multiple resources at once.
return value of key or raise valueerror exception if not found
Exit the debugger or throw an exception.
Setup DataAccess object.
, num_ )
Cauchy equation for a wavelength and coefficients
Delete request to API endpoint
True if paths refer to the same physical file.
Create a new junction.
Initialize logging.
Shortcut for raising error with invalid subcommand.
Claim readers with MuTect.
Returns the column header for a vcf based on the sample names in the metaheaders
Claims VarScan files for variant calling.
Parse vcf_reader and get mean and stdev from samples
Claim unclaimed file readers from all the registered callers.
) Return a list of lines.
Try to find a line terminator from the given data that is a prefix of the text
Suffix line terminator.
Move to the beginning of the next line.
Move to the beginning of the previous line.
\ Return the last lines of the file.
\ Return the first lines of the file.
Follow a file and yield lines as they become available.
Claim a set of file_readers to be used by Strelka.
Parse a VCF record from a line
Create ordered dict with sample names as keys and tag values as values.
Format tags according to the sample_tag_values
Join the info_dict into a string.
Format field based on sample_tag_values
Return the tag field for a sample.
Formatted VCF line.
Add a new sample tag value to the metadata.
Add or replace filter in self. filter
Return a list of all available categories for the given user and products
Generate a products form for a given category and products
Return a staffproductsform.
) Add an error for a product
Return a multiple choice form for the given model
Returns a list of items pending or purchased
) return str_ Send an email
Parse OpenStreetMap OSM file and return nodes ways and relations
Iterate notes in OSM Note Feed
Returns True if the condition passes the pre_filter checks
Returns True if the requirement is met for the user
Returns the quantity remaining for the given user.
Filter the queryset to exclude carts not in user cart
Filters the queryset to exclude carts not in paid or active status
Add some filtering to avoid displaying too many items in the list
Filter the queryset to include only cancelled presentations.
( user ) )
Creates a new commerce cart reservation for the given user
Extends the reservation duration of the cart to include any vouchers and product items.
Applies a voucher code to the cart
Removes vouchers that are not available from the cart
Calculates all available discounts based on available discounts in the cart
\ Returns an iterator over the rows in the table.
Returns the form to use when validating the form
Render the data as a CSV string.
Display all available reports.
Returns a report of all the items sold.
Show list of payments.
Returns the credit note refunds view.
Returns a list with the items in the cart ordered by product status.
Returns a list of all discounts that are in the cart and whose status is in the selected status
Returns a list of product line items for the given products or categories.
Returns a list of tuples of paid invoices grouped by date.
Returns a paginated list of credit notes
Returns a list of all invoices.
Returns a list of all attendees and their profiles.
Returns a list of speaker registrations for the given kinds.
Returns a set of categories that the user has not bought yet
Returns the amount of credit available for the current invoice.
Returns True if the user is not registered with a ticket product category.
Edit profile page
Handle a profile creation.
Handles products.
Handles a submitted voucher
Show a form to make a manual payment.
Refunds the invoice with invoice_id
Extends the current reservations of the user for a given number of days
Sends an email to the recipients of the selected invoices if the form is valid.
Show badges for selected users.
Render a badge from a user.
Return a list of discounts available to the user from the given clauses.
Annotate the discount queryset with quantity of past use.
returns a list of all products available to the user in the given category
Applies the credit note to invoice.
Calculates the cancellation fee for this credit note and applies it to the invoice
Generate a random access code
Get object from given name.
Creates a new invoice for the given cart
Generates a new invoice for a user after a given amount of due_delta.
Applies all unclaimed credit notes to the invoice if they are not already applied.
Can the user view the attendee list?
Refresh object data from DB.
checks if invoice is allowed to pay
Updates the status of the invoice
Marks the invoice as paid
Check if the invoice matches the cart
Checks to see if the invoice is valid and updates validity
Void the invoice
Refunds the invoice
Send an email to the user who is logged in
Update the attributes of the object from a dictionary.
Flatten a field into a flat dict.
Print all downloaded files to stdout
Download a file from gencloud
Get processors in the fleet cluster
Print all inputs of a processor.
POST data to run
Upload files to the project.
Uploads a file to the registry
Download a list of data objects.
Get all subclasses of a class.
Get the GitHub repo and project from the input arguments.
Get variant phenotypes with suggested changes
Get variant phenotypes with suggested changes merged from a previous variant.
Update the element
Remove duplicates from a list of strings
Authenticate via asana api and github api
Prompt the user to select from a list.
Returns the data saved for the given issue number
Move saved issue data from issue to other namespace.
Get task data from the saved state.
Returns the Asana Task object for the given task id.
Apply on_load and on_save functions
Flush the queue and wait for the queue to empty.
Create missing task in Asana.
Get all data types associated with this project.
Send log messages to Ekmmeters
Initialize serial port
Set polling values for callbacks.
Render json reads since a given time
Set ekm template context
Returns the fraction of the fraction in which the given string can be converted to a number.
Set max demand period in minutes
Set the password of the meter
return the months buffer for the given direction
Assign schedule to the schedule.
Assign season and schedule to self. m_seasons_sched_params.
Assign holiday date to params list.
Read schedules from the device
Read months tariffs from the device
Read Holiday Dates from the device
Attempt to read the settings of the device
Write command message to log file
Send password auth command to the serial port
Update the observers.
Interact with the observable
Read a value from the sensor and calculate block height and precision
Read bytes from the meter and calculate CRC
make req and req_by_blk
Set display items in the LCD.
set relay timer
Serial post - end.
Set pulse input ratio of current line
Send zero or reset table request to device.
Set the lcd to the specified password
Recursively iterate over all fields and sub - fields of a schema.
Iterate over all schema sub - fields.
Generate random text
Returns a string containing timing information and result statistics
Colorize text with given color.
Show text in the console
( result )
Parse a list of arguments.
Setup ivoire example
Run all examples specified in the config
Execute the runner and return the result.
Transform describe node.
= None num_ = 0
Transform example to ast. functiondef.
Replace the context variable in all examples body nodes with a string.
Returns a ast. arguments object with only self as the first argument
. register ( cls ) )
Transform source bytes to python code.
Apply the argument parser to the command line
import module by import path or by module name
Load python modules from a given path
Recursively discover all gemspecs in a given path.
Remove a file from the places config
Restart a message in the Places object.
Parse results and call a function
make a service from command line
Refreshes the session of the nodelist from the redis
Remove nodes from the nodelist.
Remove a node from the nodelist
Get the last_updated time for a node in the list
Get all nodes in the cluster.
Remove any expired nodes and refresh the session
Increment the number of times modified by one.
This function takes a list of values and seperates it into a list of toks.
Check if all children of path are not bad
Merge two status strings.
EXISTS predicate for token objects.
Get identifiers for token value.
Create a timer service.
Consume reader and completely parse it.
Declare an optional parser for a parser.
Create a parser that parses the first input.
REPL for parser repeated parsers
REPL1 SEPARATOR = separator REPL2
REPL for parser with a separator
Cancel the value if not closed and raise a ValueError.
Check whether the value is valid.
Add a heartser if it doesn t exist.
Create a multiservice master with a heart of one service
Freeze the graph from a checkpoint.
Freezes the output from the checkpoint at the path str_.
Restore the graph from a checkpoint and save it to a file.
Save weights from a checkpoint.
Restore from checkpoint.
Parse the tag from the given token.
__name__
Validate the arguments against the class requirements
, * args, * * kwargs
Parse tag.
Get the context data for this tag.
Caffe to TensorFlow Session
Freezes a caffemodel checkpoint saving it to disk.
Save a graph of the inputs to a file.
Create rows from a sequence of sequences.
Generator that yields every other element of an iterable.
Remove duplicates from iterable based on key.
peek at the first element of iterable
Suppress exceptions raised by the given callables.
Assert that the items in iterable are ordered according to comp.
Swap before with item if it is hit.
get the first n available queues
) return str_
Pull out as_var and remove num_ from token if it is a variable.
Return a descendant of this keychain at the given path.
Iterate over nodes in a structure.
Select element based on selector.
Parse selector string.
if node. parent
Returns list of nodes in lhs that are siblings of nodes in rhs.
Match validators against obj.
Send a get body request to the given URL.
Expire cache items older than age
Set a value in the store
Return tuple of values stored for given key
Check if a key exists in the store
Check if a timestamp corresponds to a valid record.
Builds a Transaction object from a JSON string.
Builds a Response from XML.
minified js template response content.
Get a file from the log and pass it to fn.
Get a list of rows from the table.
Validate token return the data if it is valid None otherwise
Return a fernet instance based on the app config.
Validate the token using all supported digest algorithms
Create a token for the given object ID and data.
Compute the counter used to store the number between a and b
Return the number of bits in between a and b
Calculate the average duration of a visit list.
Create sources and setup triggers
Send an event or a list of events.
Stop the watchdog every num_ seconds
Parse the format string to extract names and types
Parse a line of Apache Log.
Validates that the field is not expired.
Verify token and save to session.
Return device or browser name
Same as warn_node_old but only warns if msg starts with str_
s ( ) : returns
Create a link to add a new secret to a record.
Send an accept notification email for the given request.
Send confirmation email to record owner and receiver email.
Send email validation notification.
Sends an email to record that the request was rejected.
Send a notification via delayed delivery.
Create a new Secretlink.
Validate a token against expected_data
Revoke the current link.
Create a new email validation request.
Get by request_id and user
Confirm email.
Create secret link for this appointment.
Returns the SHA512 hash of the transaction data.
Verifies the signature of a message.
Return True if record is already embargoed
Create an access request.
Confirm access request by sending confirmation email.
, * * kwargs ) endpoint
Reverse the order of the selected columns
Return string representation of currently selected item.
return the items in the menu
Get version from. md file
Set the version in the. txt file
Start the timer
Tick the event loop of the event loop
Revoke secret links.
Stop the thread
Empty the queue and send events.
Append received events to self. events if self. maxsize permits
Creates elasticsearch client and starts elasticsearch thread
Encodes an event to a protobuf.
Encodes a list of events into a message
Decodes a protobuf message
events = [ ]
Generate file previews for a given image URL.
Retrieve a file preview.
message loop for workers
Whether or not to log the current time
Abort the SASL authentication process.
Mapping between C12 and B1 characters
Add an admin footer to your template.
Build payment parameters
Build parameters for register credit card request
Make a payment with an alias.
Get a version string.
Finish the initialization of the window
Setup up button shortcuts.
Called when the user selects an item in the list.
Called when the user selects an item in the list
Called when user navigates to the location in the location widget.
Combine resource_source_path and resource_target_path
Fetch the children of the current node
icon of the source in the tab
Fork a child process and return its PID.
Get maximum file descriptor limit.
Close an opened file descriptor.
Close all open file descriptors except those in the exclude list
Redirect the given stream to the given target. If none is specified redirect to a null stream.
Set the widget attributes on the form widgets.
Import app_name module_name
Import all Django project modules.
Includes a template given a root template.
return True if path is a valid file or directory
Check if url is a valid s3 url
Returns the absolute path for the given template file. If the file is not absolute it will be
Return a list of objects in the bucket.
Builds a wf. json file from the task template
Executes the workflow.
Archive a folder.
Make all directories up to p.
List all files matching the given glob pattern.
Restore a folder from the archive
Create a new instance of the Api client.
Returns the list of files in the given path
Download a file from the server
Return True if the given path exists.
Get parent entity for given path.
Create a folder at the given path.
Upload a file to the swift storage
Delete a file or folder from the server
validate storage path string
Create a new instance with the given access token.
Creates a new instance of the Storage Service
Get the metadata for the given entity
Delete the project with the given project uuid
Deletes the folder with given folder name
Copy file content
Returns a signed URL for the given file_id
Emit a record.
_for_service ( service )
creates a new request with the given headers
Creates a new object with the specified parameters
) Adds an exception to throw
Get the list of fields to list
Parallel map job function.
Run oncotator on a vcf
Sort the list by the given function
) [ 0 ]
Load a JSON file from a folder
Shift this string by the given amount.
Return the sum of the column in a given string
RFxCom collector.
Create user account.
Parse VN results from the result page.
Parse results from release page
Parser for producers staff results.
Parse results from character searches
Parse tags results from given soup.
Parse results from the user search engine.
Tar a list of file paths to a tarball
For all files in file_paths run op on them and copy the result to output_dir
Copy a file from the filestore to the output directory.
Add this option to docker parameters.
Refresh the metadata from the database.
Returns a list of strm objects corresponding to the streams in the database
Export the project to a directory.
Parse results from search types.
Reset the API key and store it in the database.
Return a list of users in the database
Run bwa index on the given ref_id
Connect to the Connector Database
add a stream
Add a new stream to the database and specify its schema
Insert a stream in the database.
Start the synchronizing thread if not already started
Stop the synchronizing thread if it is running
Download a URL from the server to the local temp dir.
Uploads a global file to s3
Print all labels for a ontology
Generate a tree view of a ontology
Calculates the mean insert size of a bam.
Create a new database file.
Export the dataset to a directory in JSON format
Device object for this path
Get all labels for an ontology
Get the hierarchy for a ontology
Get empty config file.
Get the mount path of the current docker container
Add an option to the arg parser
Create the argument parser for the script.
Create the pipeline command string.
Set the authentication on the websocket and r. auth
Check for authentication errors and server errors.
Ping the robot.
Creates a new object in the database
Update an object in the database
( path ) )
Subscribe to a stream.
Return a list of device objects.
A wrapper for the cutadapt tool that provides access to the cutadapt and cutada
Run samtools faidx tool via docker call.
Index bam file with samtools
Run sambamba on a markdup bam file
Run samblaster on the DNA bams.
Mark duplicates in BAM and BAI using picard.
Run Picard sort on the input bam.
Run Kallisto on the machine.
Returns the user affinity matrix for the provided test
( cmd ) )
Subscribe to a stream.
Connect to the websocket
Start a timer to reconnect to the device.
Re - subscribe to the events
Called when websocket connection is opened
Callback for closing the websocket connection
Called when websocket connection error occurs
Got a message from the websocket connection
Ensure the websocket connection is still alive by sending pings.
Run GATK select variants on a VCF.
Quick check if a bam file exists.
Write a configuration dictionary to a JSON file.
return the configuration as a dict
get the term by the iri
Search the ontology by name
Provide a suggestion for the ontology.
iterator of all the descendants of a term
iter_descendants_labels - generator yielding labels as strings
iterator over all labels in the ontology
Yield hierarchical terms from the ontology
Run fastqc on the given pair of input files
Add a stream to the query.
Start the container and wait for it to start
Start a Spark job.
starts a datanode if it doesn t exist
Stop the filestore.
Check the status of the spark and hdfs containers.
Given a zone name lookup the zone name
Fetches the config from the API.
Merge config chunks into a single XML tree.
Validate the changeset.
Minimize n best members by fitness score.
return the fitness of the group
return the average cost function value of the group
Median cost function value of the group
Get the parameters of the group
Get the members of the process.
Add a new parameter to the list
Normalizes the keys in a dictionary by converting keys that are not prefixed with str_ to
Returns a generator of environment variable names and their values.
Check if a callable throws an exception when called
Transforms the results of package_search into a format that can be used by package_search
Transform the result from bytes to unicode if typ is bytes
Converts HTML tags to XHTML elements.
Convert xhtml to html with xhtml_namespace.
Open a document in a web browser.
Drop this node from the tree.
Remove this tag from the parent.
Apply cssselector expr to the current node.
Returns a generator of namedtuple members for all loghandlers in the root logger.
Returns a dictionary mapping environment variable names to their counts.
is_single_class determines if the current class is a single class
is_single_module is_single_class is_single_module
Check if params are correct
Validates that the id in the request is correct.
Decode path from file system encoding.
Escape any string attributes in the given argument spec.
Returns the canonical codec name for the given encoding or None if not found.
Try to detect the BOM.
num_ = 1 return None
Convert amount to decimal
) fromstring - Parse a string
Parse a file or file - like object into a beautifulsoup.
Convert a BeautifulSoup tree into a beautiful soup tree.
Get the current traceback
A string representation of the exception.
Render the summary as HTML.
Yields plaintext traceback of the execution context
Render the source code.
Check if link matches egg_info.
Sort a list of links into eggs and no eggs
Get Content - Type of a URL.
Iterates over all links within the page
Check if the certificate is verifiable by checking the api_version of the certificate against the trusted
Return a list of data files to include for package in src_dir.
Return files that should be excluded from data directories.
Generator for all requirements lines in a requirements file.
Join lines without trailing end string.
Ignores comments and replaces them with their non - comment counterparts.
Validate node according to allowed nodes.
Visit an attribute node.
Coerce a JSON string to a number.
Push a new application context onto the stack.
Pop an app context from the stack.
. copy ( )
Match the request against the url_adapter.
Push the current request context onto the stack.
Check if a distribution is editable.
Add a url value preprocessor function to the app.
Add a url default function to the app.
Get the root path of an import.
return jinja_template
Prints the completion script for the specified shell
Get the domain for the cookie from the app config
Check if the library is a pure library in the wheel
Iterate over uninstallation paths from a CSV file.
Check compatibility of wheel version and name.
Build one single wheel file and move it to output directory.
Yield all code symbols in code.
Write delete marker file to given directory.
Check if we are running under virtualenv.
Get username of current user
Build a distutils scheme
Return a dict with cache control headers parsed from the Cache - Control HTTP response headers.
Caches the response if it is in the cache.
Load template from resource directory.
Saves the current state of the editor
Convert a value from one type to another
filterer. filters = filters
( logger, handlers ) )
Configure a logger from a dictionary.
Execute a python file.
Context manager to override tempfile. tempdir with replacement.
Get URL and revision for the current file.
Get item from obj [ argument ]
Generates python code from the given source.
Get the default cache location.
Yield egg distributions found in a zip file
Yield distributions found on a path item
Declare a namespace package.
Returns the mro for cls.
Find an adapter for ob in registry.
Ensure directory exists for a given path.
Iterate over entry points of a group
is not None
Evaluate a marker expression.
Evaluate text with markerlib and return the result.
Format a record and return it as a string
Get the decimal quantum for a given precision.
Get the precision of a decimal number.
Returns the scientific notation elements of the decimal value
Get unpatched class.
Verify that value is a valid requirements list
Fetch and install the build egg.
do dice roll
Converts a price string to a Price class.
Creates an attribute that validates a price.
validate a request object
Get method from app args.
Call method with parameters from args
The module name of the blueprint or None.
Get blueprint from endpoint string
Return whether or not req_to_install is an abstract dist
Iterates over the requirements to install and passes them to the given handler.
Get all namespace packages
Convert a model instance to a dict
Tokenize a document with a specified annotation.
Annotate and merge annotations in HTML sequences.
Copies annotation from source tokens to destination tokens.
Compress a list of tokens to a single token.
Given a list of tokens return a generator that yields the tokens in markup serialized format.
Generator that expands a list of tokens
Locate unbalanced end
Given a list of chunks return a list of tokens.
Flatten an HTML element.
Split text into words.
Return the HTML start tag of the element.
Return closing tag of element.
Serialize a HTML fragment.
Fixup insertions and deletions of block - level tags.
Build and return the cache url.
Recursively auto - link el. text and all of its children.
Kill conditional comments.
Parse a document from a string.
Export the repository to a file at the given location
Get the revision number for a given location
Name of the module
Propagate exceptions to children.
Automatically find instance path based on package name.
Update the template context with the current blueprint context.
Try to find a handler for the given HTTP exception code and return it.
Called when an exception is raised during the request processing.
Raise request. routing_exception if debug is False otherwise raise redirect exception.
Preprocess and dispatch the current request.
Make a default OPTIONS response.
Create a url adapter for the given request.
Inject URL default values into the values dict
Yield unique values in iterable
Add may - requires information to the metadata object.
Convert a requirement to a requirement distribution string.
Convert a pkginfo. txt file into a metadata. txt file
import all modules in self. paths
Yields all subclasses of unittest. TestCase from modules
Generator yielding all method names for all classes contained in self. classes.
Checks if path is a valid module path
Perform a os. walk on the given basedir.
Dump the default args to kwargs.
Load default jsondecoder from app kwargs.
Set many keys at once.
Increase the value at key by delta.
Dumps a python object into a string
Build editable options from the request body.
Populate link attribute of self with the link of the upgrade.
Ensures that there is a source_dir and returns it if it does not.
Remove temporary source directory if it exists.
Get a pkg_resources. distribution for the package.
Return a list of paths to site config dirs for appname.
Iterate over all files in sys. modules and yield filenames.
Spawn a new Python interpreter with a custom loader.
Convert a value to text.
Find the path to the CA bundle which will be used for the current operating system.
Parse an HTML document using the given treebuilder.
Parse HTML from stream.
Parse a fragment from a stream.
Translate a word according to the dictionary
convert args to token dictionary
bind to self. host self. port
Prints the report message.
Loads bytecode from a file - like object
Prepare paramsdict for stylesheet_params.
Run a command within this subprocess.
Get implementation version.
Return a list of distro for the given location and basename.
Find external links in a page
Open a local file or URL.
Remove all directories in sys. path that are not a known path.
Return set of directories in sys. path
Add a package to sys. path
Add sitedir to sys. path if not in known_paths.
Check if enableusersite is set
alias mbcs to current platform encoding
Set sys. defaultencoding to a reasonable default.
Force global eggs after local site packages
Adjust sys. path to include all classpaths.
Nonblocking version of subprocess. Popen.
Check if we have pyrex installed.
Convert pyrex source files to the requested language.
Runs the application and collects the traceback frames.
Return the contents of the given file.
Return True if name looks like a URL
Unpack a file at link into location.
Download an HTTP URL to a temporary directory.
Check download dir if exists and verify hash
Format currency with currency symbol
Exchange component with backend backend under base.
Decodes and optionally flushes decoder.
Returns the current template context as a dictionary.
Render template and send template_rendered signal
Given a template name or list of strings render it with Jinja2 and return the result
Render a template string using Jinja2 with the given context.
( version ) Parse version string
True if name is already declared
Visit a name node.
Visit fromimport node.
Flask - RESTful service factory
URL encode a single string with a given charset
Return wheels that match requirements.
Populate the given requirement set with the requirements specified in the options.
Export the project to a specified location.
Lookup Amazon Products.
Iterate over all pages
Descendant element or none
return list of amazonbrowsenode objects
Try to get an element from a path.
Safe get element text.
Safe get element date.
Get price and currency.
Get list price.
Overrides the standard send method to add cache control headers.
Overrides the default build_response method to cache the response if necessary.
Capitalize first letter and title case.
Compare two values in constant time.
) == 0
Derive a key from the salt and the secret_key.
Get the signature of the value.
( str_ )
Verifies the signature of a value.
Unsign value from signed_value.
Create a signature for given value.
Validate a signed value.
Serialize obj to a string and sign it.
Raise a server error.
Find parent packages of all given packages.
Return all directories under base_path relative to base_path
Prepares an HTTP response for the given cached items.
Unsigns a wheel file.
Unpack wheel file to a directory.
install egg scripts for all distributions
Arranges the graph using godot data parser.
Redraw the graph using the current state of the graph
Get a node from the graph by its ID.
Called when the directed status of edges has changed
Called when edges are added or removed
Called when a component is changed
Tool left click handler
Called when the diagram canvas has changed
Clear diagram canvas
Maps the model of the diagram to the new value
Unmaps a model from the graph.
Maps an element to the corresponding node in the diagram.
Parses xdotdot data
Procs the font
Process an ellipse token
Process a polygon component
Process a polyline component and return a component
Process text tokens
( str_ )
Renders a GridFS file as response.
Saves an object to the dot file.
Loads the dot file and returns a python object
Check if a point is inside the box
Draw the bounds on the canvas
Perform the graph wizard
Create the sqlalchemy session and add it to the context.
Callback for when dot code is fired. Parses the graph and stores it in self. model
Create a new graph and store it in self. model
Open file dialog
Saves the current model to a. dot file.
Save dot file as info
Configure the graph for the given info instance.
Configure nodes after the model is initialized
Configure edges between nodes
Shortcut to edit the given info info view
Add a node to a graph
Add edge to the graph
add a subgraph to the graph
add a cluster to the network
Request graph selection
Edit Godot options
configure dot code
Quit application with confirmation.
Move components to origin
Save the file like object to a file or file like object.
Load from a file like object.
Save the image to a file.
Load audio metadata from a file.
Create a property that is an alias of another property
Parse a text file to a list of words.
Returns a list of start words
Add a markov chain.
remove chain by name
Traverse the source and build the chain.
Creates a graph using the specified program and format.
Remove node from the network.
Get a node from the graph.
Delete an edge from the graph.
Adds a subgraph or a cluster to the graph.
Called when a program is changed.
+ new. nodes
Parse a DOT file and return a Graph object.
Parse a file or string with DOT metadata.
Build a top graph from a list of tokens.
Returns the time units and multiplier for a given number of seconds
Format a duration in seconds as a string.
Called when the user clicks on a new file path.
Create UI for editing the graph
Generate windows of a given length from a given iterable.
Get all the children of the given object
Append a child to a subgraph
Inserts a child into a subgraph at the given index
Delete a child from a node
Calls on_trait_change method on object when its children are replaced.
Call listener for each child of object.
Returns the label for the given object. If self. label is None the label will be returned
Sets the label of an object
When the label of the given object changed
Initialize the editing.
Add nodes and edges to the editor
Add listeners to nodes and edges of the specified object
) : return True return False
, event ) : nodes changed handler
Add nodes to the graph for the given features.
, str_ ) : return
Called when edges are changed.
Add edges to the graph for the given features.
Parse xdot directive
Called when a drawing operation is done
Returns a node object based on the name of the row
Edge factory.
Called before the query is executed.
Parse drawing directive.
Add a label to the drawing
Called when the drawing changed in the component.
Called when the component position has changed
Called when the component s position has changed
Tool right down event handler
Highlight pygments info.
Draw the main layer.
Returns whether the given point is inside the polygon.
Draw the main layer.
Calls the event method on each engine in self. engines
Run the thread
Get full page URL with scheme
Render the prev and next links as HTML.
Render prev and next links if total number of pages is reached.
Create a URL identifier from user and password.
Discovers all modules in the given directory and its subdirectories.
r Discovers modules in a given directory and its subdirectories.
Return a list of modules and submodules of mname
Create a directory if it does not exist.
= str_ )
Check the number against the Luhn algorithm.
Load a module using the name of the module to load.
Add a new path to the finder.
Searches for the specified module in all the paths.
Split a line to a list of strings.
Remove all namespaces from XML elements.
Check the consistency of the package version with the desired version.
Create an instance from a YAML specification.
Merge a dictionary of actions into the current object.
Execute the actions in self. actions
Add details to the message
Send log messages via e - mail.
Add the image rendition to the context.
Add an entry to the attempts list if it exceeds the max attempts.
Add url to queue
Create workers and start them.
Sets a value in the key - value store.
Retrieve a value from the kvstore
Recurse into a nested key.
Get an entry from the API.
Deletes the key k from the key k.
Plot a heatmap using feature importance indicators.
Add months months to a timestamp.
Add months months to a date.
Is this period a christmas period?
Use the specified music service.
Set the current storage backend to Google Drive.
Load data from CSV into a dictionary.
Create a list of tuples from the JSON file
Write x and y to a JSON file.
Filter a list of tuples by reference label
Average by label
restore data from session
Merge dictionary b into dictionary a.
Import all blocks from installed apps.
Verify that a block is valid.
Register a block of a given type.
Unregister a block type with the block manager.
Convert a file name to MP3 using ffmpeg.
Return a reasonable version for desired_version.
Return a redirect to the ssl URL if the endpoint needs to be SSL
Parse a Content - Type string and return a datastructures. contenttype
Parse a list from a string.
Resize image to fit inside the given width.
Download a video from youtube
Connect to S3 using clientsecrets.
Upload a file to the swift folder
Create the music folder if it does not exist.
Update the sky file name.
Read phi coefficients from a phi file.
scale the a_phi of the lattice by a parameter
Read pure water absorption from file.
Read pure water scattering from file.
Read the IOP from a CSV file.
Write iop to file file_name.
Calculates the b parameter for the given scattering fraction. Uses b_water and b
Calculate a = a_water + a_cdom + a_phi
Builds the C matrix and stores it in self. c
self. build ( ) return
Batch parameterize a single parameter.
Read in a parameter file to a dictionary
Return a list of floats from a string
Set a signal handler for a list of signals
handler for SIGWINCH
Default signal handler.
Pause the program for a number of seconds.
= 1 )
Handler for signal. Call status callbacks
Remove event from event_list.
Fetch a metric sorted by the value of the num_
Sets the signature from a function
Set the signature from a partial signature instance
Return new argv and extra argv.
ignore certain metainf files
Key for sorting list of filenames.
VLQ to int.
Parse the header of the archive file
Convert seconds to a human readable duration
Prints the details of the game.
Gets the data from the ui
Search for a file and display the result.
= '.batch' = str ( self )
Process the data file.
Display the graphic connection.
Displays the error message
Hides the error message
Run the batcher.
Cancel the planarrad if running
Quit the app
Saves the figure to disk.
Open log file and show log window.
Open Qt documentation in the current directory.
Prerequisite actions actions
Ctrl + Num click.
normal mode mouse move handler
This method is called when the graphic is clicked.
vote_block num_ = genesis. hash vote_block sign_block
Sign this RLP packet with a private key.
Hash of the message.
Check the validity of the equation.
Issue funds from the sender to the receiver
Return the last lock for the most recent round.
Return the last voted block proposal
Return the last valid lockset for this round or none if there is no such lockset
Get the timeout for the next round if it is not already set.
Called when a proposal is received.
Generate a list of sha3 privkeys for the given number
Calculates the delay needed to transmit the packet
= self. round_timeout
Returns the native contract class for the given address.
Update filter with new data
VGG image from vgg data
Convert image to vgg image
get layer function
get layer output by name
gets the features of the network
Create a new key file at path.
Call checkpoint and apply rows.
Release a previously created table.
Returns all tables in the view as a list.
Fix distutils. ccompiler. compile to remove the specified compiler flags
Find teradata installation.
Get a value from config.
Set a key value pair in the config file.
Table formatting.
Write the default config to a file.
Sets the column names to filter.
Convert the table to a string.
Convert string to float with multiplier.
Extract specific gains from a gain list.
Parse device settings string.
Wrap text with textwrap.
detect devices via soapy
Set the center frequency
Extract the frequency and pwr values from the given PSD state.
Wait for the result of a command to be available and return it.
Update the PSD with new samples.
Read data from file and return as tuple.
write pwr_array to file f.
Submit a task to the pool.
Calculate how many times to repeat.
Create a buffer for the given number of bins.
Setup the stream.
Stop the stream.
build with cmake
Filter datetimes for the future datetimes.
Mask a datetime object
Mask a datetime by week number based on firstweekday
Delete datetimes from list of datetimes
Given a list of dates to keep and return a set of dates to keep
Given a list of dates to delete return the set of dates to keep
Get the control byte for SPI device.
Read a single bit from the specified address.
Writes the specified bit to the specified address
Get the bit number for a given bit pattern
write gpio interrupt pin to userspace
set edge for gpio interrupt device
Wait until file with given filename exists.
) : param pin_num
Deregister a previously registered pin.
Enable interrupts by pin
Send data via SPI device.
Render the tabset.
Check if form has any errors
Render the form as a link and return the link text
Get version from pkg_resources or read configuration file.
Add str_ to the kwargs passed to the form
Check the status of the response from Ariane server
Send a GET request to the API.
Calculate the humidity from temperature and dewpoint
Calculates dewpoint given temperature and hum
) Publish this message
Calculate the CRC for a given string.
Verify the CRC of the given data.
Unpack a Storm Date into a string.
Determine whether to use revision b or rev b archives.
Wake up the device.
Send a command to the device and wait for an ack.
Get the newest record from DMPAFT.
Parses the given input and calculates fields derived from them.
Update the weather data for a list of pub_sites
Initialize log.
Given a set of opts return a list of pub services.
Get the current value of the sensor.
Set the options of the CLI.
. args = kw
Publish the current command dictionary to a file
Fulfill the requirements.
Push override to override stack.
Pop an override context from the stack.
Override current node with another node.
Push an additional context onto the stack.
Pop an additional context from the stack.
Context manager which appends additional text to the current line
Remove duplicate field names
Interpret the results of a stat update.
Extract params from query
Get a pandas dataframe from the table
Returns a networkx MultiDiGraph of the graph
Plot the data
Prints the table in CSV format.
Add the widget instance to the context.
Return a list of tuples of widgets sorted by widget name.
Get the list of widgets that need to be updated
Register a dashboard widget.
Unregister widget.
Returns the last update of the dashboard widget
saves the setting to the database
Should we update the site?
Concatenate two or more arrays along an axis
Check whether the given arguments are spark contexts or boltarrayspark arrays
Check that axes is valid for shape
Convert a function into a Spark RDD.
Transpose and reshape axes in a single operation
= axis )
Convert to an RDD of column - major format
get number of chunks for shape in plan
Return a boolean mask of the given indices.
Repartition the RDD.
Stack the elements of the array.
Align the array to the given axis.
Return the first element of the array
Compute mean along specified axes
Return the variance along given axis
Standard deviation along specified axis
Compute the sum along given axis
Return maximum along given axis
Calculate minimum along given axis
Transpose the array along the specified axes
Swap axes of the array.
Reshape the KeyVector or ValueVector to a new shape.
Reshape the table to match the shape of the table.
Cast each row to the given dtype.
Clip values above and below.
Convert an RDD to a NumPy array.
Turn arg into a tuple.
Pack an argument list into a tuple.
check shape for incompatible axes
( a, b
Make sure that lst has a length of at least dim.
Slicify a slice or int into a slice.
Check whether new can be transposed as old
new and old must be the same length
allstack like numpy. allstack
expand arry by expanding as many dimensions as needed
Lookup a constructor for the given arguments.
numpy. ones
NumPy array filled with zeros
Concatenate multiple ndarrays along an axis
Computes the discrete likelihood of the data
Discretized Maximum Likelihood Parameter.
returns the discrete alpha for all values less than xmin
Identify the best alpha for the given data.
Plot the PPF value as a function of choice.
Calculate the lognormal distribution of the data
Sanitize HTML according to the allowed tags and attributes.
Configure analytics for Yandex.
Return a list of tags for the given tags.
Return md5 hash of the key.
Hash with sha256 algorithm
Hash a password using SHA512
Parses a long integer from a byte string.
Decode a public key and return it as a str or unicode string.
Process SSH_RSA packets
Process the SSH DSA parameters.
Processes a SHA - 512 hash of the data
Process an ed25516 EDM packet
Parse a string or file containing a RSA public key.
The mechs of the client.
Entry point for the script.
Try to import setuptools and distutils. core.
Context manager to create an audio file.
Returns the css for frontend static files
Normalize the HTML output of the Django front - end.
Return the HTML for the FontAwesome frontend
Returns the HTML for the Modernizr dashboard
Returns HTML for frontend static pages.
Returns the HTML for the page with JQuery UI
Returns the HTML for the DataTables frontend.
Returns the css for the DataTables frontend
Themeroller for Djfrontend JQuery DataTables.
Returns the html for a formset in the frontend
Returns the HTML to scroll to the top of the page in the iframe.
Returns the HTML for the jquery smoothscroll iframe.
Return HTML for frontend Twbs CSS.
Generate a Google AppEngine GA tag for frontend.
Generate authentication hashes for a user.
Calculates the expiry time based on the number of minutes valid
Creates a token for the given user.
Custom serializer for user fields.
Update a user profile.
User authentication failed.
Returns user if token is valid
Check if request is secure or not
Get username from dict username_field - > username
Creates a user and returns a user token
Do login with user
Log out of the user
Login with username password or resume token
Log in with a username and password
Log in with a resume token
Send a signal to the user when he forgot the password
Reset a user s password
Recursively merge two dicts.
Get the id of a meteor or object
Given a model and a list of object_ids return a dictionary of meteor_ids
Given a meteor_id return the object_id.
Given a list of meteor_ids return a dictionary mapping meteor_ids to
Return the object with the given meteor_id
Set default forwards for newly created objects.
Set default reverse references for operation.
_forwards ) return True
, * * kwargs ) :
self. version = None return
Check for undefined options before building.
path to directory from path args
Seeds the instance with a given list of values
Current state of the Stimulus
Returns a random string of given length and alphabet.
Yields all API endpoints for the given object.
Clears the API path map cache.
Pretty print a variable.
Called when websocket connection is established.
Called when the connection to the server is closed
Called when websocket message is received
Generator that yields ddp frames from a message
Process a message received from the server.
Dispatch a message to the appropriate handler.
Create a connection to the backend server
Send a ping message to the peer
recv message for SUB command
Send an unsub command to the server
Call the remote method and reply with the result.
WSGI wrapper for ddpp. sockjs_info.
Entry point for command line invocation
Print if self. verbosity >= num_ print msg
Stop all servers and threads.
run the ddplauncher
Connect to the PostgreSQL database.
Patch psycopg and psycopg2 if necessary
Generate a random meteor_id
Autodiscovers python modules and registers them as services.
Returns the error as a dictionary.
Get an instance of the class by name.
Send a log record to the client.
Add a resource object to the router.
Send a message to the GCM server.
Sends a message to multiple APNs.
Get list of inactive ids from APNS feedback socket.
Sends a message to Google Cloud Messaging.
Send a bulk message to the given registration_ids.
Send JSON data to the GCM server.
Sends the request with the api_key and api_url as headers
get model class by module location
Search the Giphy API.
Translate a phrase using Giphy.
Get trending photo for authenticated user
Retrieve a gif from the Giphy API
Retrieve the screensaver URL for the specified tag.
Upload a file to the Graph API.
Internal method that normalizes all values in a dictionary to int.
Internal method for fetching data from the API
trending search by rating
Retrieve a gif from the API.
Upload a GIF to the Giphy API.
Returns an Atom extension element corresponding to the given access control value.
Authenticate using programmatic login
Upload a video to Youtube
Check video upload status
Update existing video
Delete a video
Check video availability
Renders a video given its ID
Lists all videos owned by the given user.
upload video directly to youtube
Upload a video.
Return to youtube
Delete a video and redirect back to YouTube.
fetch and return a video entry
update video via api
Delete the video
Update metadata of a file.
Update a metadata field.
Update the item on ProvStore
Parse a string into a list of Python objects.
Convert a list of newick trees into a string.
Load yaml from open file object.
Read yaml file fname and return as dict.
Parse a node string.
Create a node with the given attributes.
Return a Newick string representation of the tree
Get a node in the graph with the given label
Prune the tree to remove all nodes in the set of leaves.
Removes internal names defined in this tree
Removes leaf names
Takes a JSON string and returns it as a list.
Check if a setting exists.
Get all the arguments for the given name
Partially apply the callback to the result of an asynchronous call.
Get a cookie from the cookie monkey.
Delete a cookie from the cookie monster
Redirect to the authentication URL for the user.
Get the authenticated user.
Build the request parameters to sign.
Redirect to the authorization page for the user.
Concatenate url and arguments
Parse a header line and return a key and a dictionary.
Add a header name and value.
Return the value of the field name as a list
Parse a single line from the file.
Parse headers from a string to a Header object.
Return the normalized header name of a request.
Convert a string to UTF - 8.
Convert a string to unicode if possible.
Convert a value to a Basestring
Recursively convert input object to unicode.
Check that all plugins are of the same keyword
Select policy based on origin and matchstrategy
Return the number of occupied binary cells in a grid within a given spacing
write GMRES data to a GMRES file
Writes a pdb file for the given atoms and box.
Determine the number of molecules based on relative and absolute values.
Resize a Pbc to fit hole size for num_ lipids
Read a resource file and yield its lines as unicode strings.
Send a message to a user.
Send a message to a list of users.
Get cached messages for the given user.
Add messages for authenticated users.
Check the config file for missing data.
Check that the specified profile name is known in the configuration.
Retrieve any missing data from the configuration.
Retrieve the password from the config and add it to the message
Update configuration data based on message attributes.
Update password in the config.
Create a profile for the given message type.
display all required items for the given message type
Get data from user.
Get auth from user defined in config
Configure profile using message type data and auth
Write data to the config.
Write authentication data to config.
Send the message via HTTP POST.
Return a message of the specified message type.
Validate a single input.
Validate Twilio.
Validate slackpost input.
Validate that value is an int or a URL
Send messages in a co - routine.
Add a message to the bus.
Get body from file if it exists.
Remove keyword arguments from a set of keyword arguments.
Send a message.
Get chat_id of username
Send a request to the API.
Sends the email to the recipients
Get a valid smtp server given an address
Generate the email message by using mimemultipart.
Add the header to the message
Add the message body to the email
Add attachments to the message.
Get a session to the server.
Returns ssl version of smtplib
Start TLS on the server
Sends the email to the recipients
Save tags to file.
Unload the image from the GPU.
Get a region of the current image.
Validate keys and values.
Removes all of the elements from this list
Read data from the file.
Delete this chunk and its parent chunk
Resizes the file to the given data size
Insert a chunk into the File.
Saves the ID3v2 frame to the specified file.
Delete the file named by filename.
Parses the given file and adds lines to self. lines
Process one line of input.
Add block of source lines to the source.
Draw a string at x y
Parses an ISO 8601 time string and returns a datetime object.
Make the words HTML - encoded.
Makes an HTML word out of it.
Makes html from paragraphs.
Make html code from a list of lines
Make HTML from list of items.
Save metadata to a mp4 file.
Add delta to each parent atom in path
run the bacon game
Register a mapping with the factory.
Get a controller from the registry.
HMAC - SHA256 HMAC - Signing
Returns the request headers that will be sent with the request.
Send GET request to DCNM.
Send POST request to DCNM.
Send a DELETE request to the API.
Converts text binary or external values to native Python values.
Send a request to the change_resource_record_sets API.
Get the size of the TCP header in bytes
Find last page of an ogg file.
Sets the section of the current docstring. If the section does not exist it will be created
Add markup to self. markups.
Processes the content and extracts markup from it.
Return the markup associated with a given tag name.
Create a writer for a hosted zone.
Attempts to lock the file - like object fileobj.
Insert num_ bytes of size at offset into fobj.
Delete num_ bytes from file fobj at offset.
Convert bytes to utf8 bytes.
add a change to the change list
Parse change_info element.
Measure the width of a string using a glyph run
Check if the object has been modified.
Delete this changeset from the zone
Save changes to the zone.
fullread - reads the specified number of bytes from the file.
Delete all values for given key
Called when a tag is loaded from the tag loader.
Update the apics in the database.
Unload the current sound instance.
Set the loop points for the voice.
Return a list of values for glyphs and values for adobe glyph list
Filter glyph names with the given filter
Write a encoding list to a file.
Writes the array to the binary dump.
Check if a file exists at the given path.
Create a list of files from the command line.
Parse a hosted zone element.
Parses the delegation set element and updates the zone.
Write a list of blocks to a binary string
Given a list of padding blocks group them into a single block.
Delete the metadata block and reset tags to none
Saves the ID3v2 data to the specified file
Parse alias element.
Parses the resource record values.
Parse an e_rrset element and return an instance of route53. rset. R
Add a new record to the zone.
Create a mx resource record
Create a new ns record
Create a pointer resource record
Create a spf resource record
Create a new SRV record
Get the values from a change.
Write change XML block to XML file
Write a change_resource_record_set to XML.
Initialize the logging for the plot
Return the item with the given alias or None.
Sort a dictionary by its keys.
Returns a tuple of a template and the list of HTML attributes.
= self. str_ )
Initializes all bars on the progress bar
Bind a bar instance to the bar signal on this plot.
get args as a dict
True if the current request is the same endpoint and view_args.
Validate the metric_class.
Get a statistic by its name.
Calculate statistics for the given stats and frequencies.
Auto - discover INSTALLED_APPS admin. py modules and fail silently when not
Exports a metric as a CSV.
get stats by name
Get a list of values from GET.
Gets a GET variable as a boolean.
Get the next colour in the colour list.
Get parameters for gecko.
Returns the number and the previous number for a metric from geckoboard
Displays the latest count for each metric in the geckoboard with a weighted average of
Returns a line chart for a Geckoboard line chart.
Returns the latest count for a geckoboard gecko.
Returns a dictionary of items for geckoboard metrics.
Return gadgets stats.
Register a gadget.
Returns a dictionary with the context variables for the table template.
Print error message and exit with given code.
Prompt user for a string forever.
Get a list of strings from the user
Prompt user for filename.
Return a pandas DataFrame representing the schedule for a given year.
Returns the winner of the game.
Get the season of the week for the given month.
Get the surface value of the table.
Return coin toss if it exists in the database
Parse weather information from the table.
parse the ref_info table from the response
Returns the schedule of the given kind for the given month.
Returns a pandas dataframe with the team standings.
Get team stats table as a pandas dataframe
Rumorvoting table as a DataFrame.
Get the linescores as a pandas dataframe
Get the season of the month
Return a Pandas dataframe of player stats
Return a unique key for the given class with respect to the given arguments.
Get the age of the person given year month and day
Returns a pandas DataFrame with the stats
Get a listing of stats per game for each player in the league
Get the totals for a set of stats.
Get the per - 36 stats for the specified kind.
Get the per - 100 best stats from fastcache
Advanced stats by kind
Get sky stats shooting for the specified kind.
Get the statistics table as a pandas DataFrame.
Return a Pandas dataframe of gamelog entries
Get a single item from the session and return its value
Expand details columns in a Pandas dataframe
Add team and opp columns to features.
Add all homeonoff and homeonoff features.
Return the probability of a line being an initial win.
Returns a Pandas dataframe
Simple year award based on the award id.
Name of the team
Get the boxscores for a given year.
Get the first PQ entry for a year and keyword.
Get head coaches by season.
Returns a dataframe of schedules for a given year.
Return the off - coordinatorial date for the given year
Return the default coordinator for this year
get the stadium id of a year
Return scheme for a given year
Return the alignment scheme for the given year
Turn off splits for a given year
Get HTML from a URL.
_direct )
Directly get the next element.
( str_ )
Get a batch for the given path and length.
Get the remainder of a file.
Get a generator from the queue
Generator that parses a PB file and yields a PB object.
Write protocol buffer data to a file.
Read a varint from the stream.
Return an iterator of objects read from the file.
Flush and close file descriptor if open.
Writes pb2_obj to the output buffer.
Flush the buffer to the output file.
Returns the path to the game directory
Emulate the text with the keyboard emulation
Evaluates traits and returns a list of traits that were evaluated
Repeatedly call condition until a condition is met.
Repeatedly polls element until all traits are present.
Causes the deferred to emit the given ignored exceptions.
execute shell commands and get main volume
returns the source code of the main command
Send a message to the IRC server.
Get the status of the NAD.
Power off the device
Power on the device
Set the volume.
Select a new source
deobfuscate a url with key
Calculate the CRC for a plaintext
Obfuscate a string using unfriendly encryption and slugify the result
Finds the missing schema in the song
Get a list of all hrefs from an html page
Check if song name is valid
parse a url to get song name
Returns the Google Music URL for the specified song name and website
Parse google video and return download url
Parses the song website
get html response for url
download a file using requests
download file using wget
Find stations by a city
Get location observation by lat and long
Parse the JSON response from the iaqi endpoint
] List of compilers to use
). lower ( ) mimetype
Mime type of last compiler in reversed order.
Get format extension of the compiler as a format extension.
Register a processor for a mimetype.
Unregister a processor for a mimetype.
List of paths used by finders.
( self. config ) return
Import qtcore. pyqt5 or pyside qtcore. pyqt
Get the netnode object for the metadata.
Adds a netnode plugin name to the meta data.
Deletes a netnode plugin name
Import all settings from the ini file
Export all settings to ini file.
Directory where to store config files.
Iterate over all keys in idb directory user and system
A simple error handler that returns a response with the appropriate status code and headers.
Get a DynamoDB table.
List all tables in Dynamodb
Fetches the items of a given category from a given date
Return the ID of a metadata record.
Return the timestamp of last metadata updated on a given item.
Fetch the owner team of a crate.
Fetch the owner user of the given crate id.
Fetch all versions of a crate.
Fetch the crate version downloads for a given crate id
Get crates from the API.
Get a crate by its id.
Generator that fetches the items from the specified path
Fetch a list of items
Get all questions
Fetches the list of items from the server
Get the time that the item was last modified
Get the category of a metadata item.
Get all the items in a category
The list of buffers this IOCommand should listen for.
IO priority of the socket
Close the stream.
Submit a list of blocks.
Cancel a pending IO block.
Cancel all submitted tasks.
Return a list of items for this category
Get a list of cells.
Parses the feed and returns the events
Get export formats for given pid_type.
Permission factory used to create permission objects from config.
Default view method for record viewed signal.
Export a record.
Record the execution time of a callable.
Close the underlying socket
Remove client from the websocket.
Increment a counter by count.
Send a timer metric in the current thread.
Send timing information since a specific time
Send a gauge metric to the server
Send a gauge delta metric with the given name
Sets a metric at the current time.
Add a request to the storage
Instantiate and configure a batch client.
Return a new unit client.
Send all pending batches and remove them from the queue
create a batch client tcpclient and configure it
Send all pending batches to the server.
Return a new unit client.
Returns a User instance of any type for the given parameters.
Interpret x as a OpenMath object
Converts the given term to OpenMath using the given converter.
Returns Python object from an OM class
Convert object to OpenMath object.
Initializes the Flask application
Generator for valid choices.
Create a value from the provided arguments.
any_form_default ( form_cls kwargs ) - > form data form_files kwargs
Returns the field data for a decimal field.
Returns the data for an EmailField field.
Generate a random date for a date range
Returns a random datetime between two dates
Returns the field data for a float field.
Returns the data for an integer field.
Return a random time string for a datetime field.
Return a random choice from a field s choices
Returns random choices for a multiple choice field
Get a random choice from field s queryset.
encodes an object to bytes
publish build and upload to sdist and tag
Build and tag the project with the given version.
Load python global.
Decodes a BASE64 encoded string into a bytearray
Returns a fixed number with the given precision
Format a number.
Convert a string to a numpy array.
Convert an array to a bytearray
Add an entry to the configuration file.
remove a variable from the configuration
Lists the websockets in the config
Get the value of a websocket property.
Check if a repository exists in a workspace
Synchronise all the repositories for this workspace
clone a repository
Check the version of the web server
Converts numpy array into indices of voxels
Create a numpy array from a voxel array
( self, args ) return
Update repository info and print to screen
Set up a console handler.
Execute a shell command.
Load png file as numpy array.
Save a collection of numpy arrays as a single png file.
Print the workspace information.
Print status of repository at repo_path.
Returns the block size for a given token.
Cutout with chunking blosc.
Load TIFF file as numpy array.
Save numpy array as TIFF file.
Load multipage TIFF file.
write config to file
_ % url )
Get package version.
Alternate to mix_and_match.
Decorator to add an option to an option table.
Reserve ids for a channel.
Merge multiple ids into one.
Propagate a previously uploaded or uploaded channel to the remote data server.
Return a list of projects that the dataset is in
Get a remote dataset by name
Return a list of datasets of the collection.
Parses the command line and sets up the parser
Show workspace or list of workspaces
Shows workspace information.
Shows all workspaces
Returns the full url for a given endpoint.
Guess format from file extension.
Open an image file.
Convert from one format to another.
Convert ramon objects to a dictionary.
Return the raml form of a python type
Delete a channel from a dataset.
Return JSON for NDJSON
Generate dataset dictionary
Generate dictionary for channel
Create a project dictionary.
Identify image size
PUT data to the workspace
Find path from a name in a workspace configuration.
Get all the public tokens of this site
Get project info for the given token
Set the metadata of the remote data
Get a URL using the authentication token as a header
Encapsulates POST requests
Send a DELETE request to the given URL.
Load a HDF5 file and return numpy array of data layers
Save array to HDF5 file.
Infer gaps in tree using dendropy s ProteinCharacterMatrix.
NvimIO recovery step
Install Jinja2 translations
Run a namespace function with an exclusive lock.
Returns the percent of total or part if it is zero.
Get stats from memcached.
Get cache slabs from mc_client.
Merge context data with site context.
Return server status.
Show the dashboard of the current client.
Get cache statistics for the specified server_name
Get list of slabs.
Convert a number of bytes into a human readable format.
Find config in children.
Add new variables to the environment
Apply applicator to self. _fpath
Returns the absolute path of the file.
. strip ( )
( data )
Configures the logging module.
Create the file if it does not exist.
Apply a config applicator to the tree.
The absolute path of the menu including the menu s parent
Remove the directory and all its contents.
Prepare the environment for execution.
Clean up this node and its children.
) return path
] List the files
( filename ) )
. strip ( )
Add one or more files.
save to yaml file
Loads the configuration from the file if it exists.
remove the temporary file used by this object
Loads all plugins from a given directory.
Returns a confignode for the given path.
Get the value of the field
Apply the config dictionary to a string.
Build the callback URL.
Reads input from the socket.
Sends output to the client.
Send a request to the API.
Read data from the socket until it is full.
Write data to the socket.
Returns a dictionary with theettle modes of the remote.
configure the link
Return the source address of the link
Target address of the link
Callback for when the session is closed
New sender by name.
Request a sender link.
Create a new receiver by name.
Request a receiver link.
Called when a link is destroyed
Respond to close of the entity.
Process a single endpoint event.
Extend markdown with inline patterns.
Called when the receiver remote is closed.
callback for when a receiver fails
Get host and port from server address.
Connect a socket to a host and port.
Creates a server socket.
Determine what connections need to be processed.
Read data from the transport output stream.
Create a sender and link it to another address.
Reject a sender link
Create a receiver instance on the device.
Called when the connection failed to the server.
connection is active
Called when the remote endpoint needs to be closed
= str_
Returns a color string based on color_type
Get a dictionary of font families and their source files.
Private method to set compression.
Adds a new object to the PDF and returns it. If flag is none a new object will
Internal output method for debugging.
= '\n' + stream
Add a page to the document.
Set color scheme for drawing and filling text
Set the default font.
Add a new page to the document
Set the font size.
Add text to the document.
Add a new line to the current page.
Add a chart that draws a series of pie charts.
Output the pages to the screen
Return a list of page indices that have been changed
_fonts ( ) return
_images ( ) Output images.
Output the image to the screen.
Transform the current transformation matrix.
calculate the absolute position of a point
Set the style of the text.
returns rotated point
Set the information of the object.
set display mode
Finalize the document and write any remaining data to the file.
Add a header to the document
Add pages to the document in PDF format.
Add resources dictionary to resource table.
Add basic information to the information page.
Writes the cross - reference data to the file.
Floyd - Fulk test for cycles.
Yields seqs naively.
Cycle - Reduce sequence to shorter periods.
Brent iterative implementation
return True if x fits into xmax
Fit a y value to a maximum value
Checks if this coordinate x is greater than test_ordinate.
Checks whether this coordinate is greater than test_ordinate.
creates a copy of the cursor
Add dx to self. x
add a line to the y position
Draw the table
List all tags.
Return all labels with given name.
Delete a tag
Create a label
Return a list of all the services.
Get tag with a specific label serial.
List all hooks.
Setup the extension and intersphinx extension links
Get path to directory containing imported theme files
Make POST request to DCNM.
Get a list of hosts.
get log records from the server
Time duration in seconds
update the object with new values
Compute the model using the current settings.
Calls the binary function
Free the memory used by the object.
Recieve data from the socket and append it to the buffer.
Generator that yields lines from the buffer
Status of the NTP server.
Generate an info response
Generate a error response with given code and message.
Get the capabilities of the device.
Send a MODE_READ command.
Send a quit message and close the connection.
A datetime object representing the date the server replied to.
Send a help command to the server.
Send a command to the NTP server to generate new groups.
, str_
Send a command to the NTP server to list all active newsgroups.
A generator which yields the active times of the NTP server.
Generate a list of newsgroups and their descriptions.
Generate a generator for the list overview format.
A generator which yields the list of available extensions from the server.
list generator.
( str_ )
Send a XZ header and xzlen.
Send a XPAT query to the server.
Send a Xfeature compress_gzip command to the server.
Return the offset of a number in a string.
A helper method for posting to the API
A helper method for making DELETE requests to the API
A generic method to make GET requests to the API
A list of all scheduled queries for the current account
A list of all tags for the given account
Get tags with a given tag name or id.
Deletes an existing tag
A helper function to create scheduled query
Delete an existing Alert on the server
Parse newsgroup line
Parses an HTTP header from a line of text
Unparse headers.
Sends a POST request to the server
Run a set of tests and report results to a reporter.
Returns a docstring for the defaults docstrings.
Set the value of the cell.
Check type of value
Returns the current value of the attribute
Check type of value.
Compute the symmetric error.
Set the errors for the data.
Set the object from keyword arguments.
import all the metrics
Extract a dictionary from a list of metrics
Filter the metrics according to the filter expression
Send the RPC request to the API and collect the results
Parse the expression as a terminal
Parse an operator token.
). value + str_
Initialize missing properties.
Get a list of parameters from the input
if pnames else None values
get the parameter errors
Clear all derived parameters
Sets the method of the class.
Get environment variables and store them in the class
Call the API
Check if sceneinfo is valid
Verify that the product type is a product
Get remote file size
Check that the bands are a list of valid bands
Connect to Earth Explorer
Normalize a datetime object.
Joins an iterable with an escape sequence to escape the delimiter.
Get the positions of newlines in given text.
point_to_source is a function that takes a source string and a position and returns a
Dump relay output in text format.
Remove metrics control and plugins from relays.
Create a new instance from a list of fortunes.
Reduces the number of files loaded from disk to the specified number of chance.
) return str_
Produce a rule using concatenation.
Add identifier handling to the given text.
Get parsed grammar.
A list of rule objects created from the grammar
List of comments in the input file
Returns a list of directive names referenced in the docstring.
Returns the output source code for the template.
Compile the token into a string.
Returns the imports for the specified class in the DSL.
Get token type enum.
get the class definition string for the current class
Get the name of the entry point of the function. If there is no entry point return the
Returns the source code for the given rule.
Find the directive that transforms the rule
( str_ ) + expression
Convert node to ASN.
Hoist operands and apply predicate pred.
Remove grouping groups from an optree.
Convert AST node to Python code.
Convert AST node to Python code.
Convert AST terminal to Python code.
Returns a list of code lines for the given AST option group.
Return a list of code lines for an AST repetition group
Convert AST special handling to code fragments.
Compile AST op_alternate to Python code.
Compile a concatenation AST into Python code.
Convert an AST operation exclude to python code.
Compile AST multiplication code.
Compile a repeated AST operation.
Find directives satisfying the predicate pred.
Flatten an expression into a string.
Handle API results and print results to stdout.
Returns wx. Newid or wx. None
Removes a hotkey from a control
Add command line arguments to parser.
Configure logging.
Validates the arguments passed to the constructor and sets the error message accordingly.
Converts a list of nodes from postfix to postfix
Convert postfix operator nodes to optree nodes.
Reduce a list of nodes into a list of nodes.
Load the plugin manifest file.
Get the lengths of the columns in the table
Get the lengths of the columns in the metrics table
Escape metrics with underscores.
Print the table in markdown format.
Print the metrics in markdown format to the screen
Generate the definitions and output as markdown
Parse the text and return a tree.
Attempt to consume the given string.
Add command line arguments to the parser
Parse a time or date and return a datetime object
Outputs the results in CSV format.
Outputs the results as JSON.
Output json with indentation.
Outputs the results as XML.
( parent )
Pretty print the tree.
Returns a function that can be used as a replacement for str. repeat.
Get terminal node if text starts with value.
Get text after applying exclusion.
Count leading whitespace characters.
Call the extractor on the given text.
The position of the parse node or None if it is not defined
if self. children else False
Add a string to the ignored list
Check if node has a specific node type
Flatten this parse node and all children.
Returns a copy of the parsenode with all whitespace removed.
Merge two parse nodes into a single node.
Retyped parse node by new type
Compress the parse tree into a new type.
Position of current expression state.
+ self. _offset )
Step to the next character.
Move forward one line.
Step to the previous line
Return the last line read from the cursor
Increment cursor position.
Save current context and move cursor to it.
Restore the last context from the stack.
Returns a format. indentable representation of the notification.
Set the name of the signal
Returns the number of variables in the signature
Returns the number of functions in the signature
Update the signature of this scope.
returns a new scope with the union of this and the given signature
Update the set keeping only elements found in it
Return the intersection of two scopes
remove elements from self that are not in oset
Returns a new scope with the difference of this and the given signature
Update this scope with the symmetric difference of the two sets.
compute the symmetric difference of two signatures
Add a signature to the state
Remove signature it from the list
Discard a signature.
Return the first signature of the object.
Return the last signature in the signature chain.
creates a scope by symbol name
Get signature by symbol name
Create a scope with all polymorphic return types
Injects a translator function into the AST by calling the asttranslatorinjector
Normalize a dictionary list or tuple.
set self from othernode
Return True if hit is ok False otherwise
Get the signature for the compute function
Determine the resolution of the signature
Get resolved names for a type name
Set the resolved name for a type name reference
Delete local file if exists.
Deletes a file from Amazon S3
Deletes a file from local or S3
Save file on local filesystem.
Saves temporary file to s3
Save object to a local or S3 location
Get list of objects in S3 based on the path
Generate enum type with sequential values.
Add thing_name to the chainmap inserting a number into the beginning of the thing_
Read and validate end of file.
Create a new rule node and push it onto the stack.
Pop the rule nodes from the stack.
Get node value as str.
Parses the specified string as a stream.
Begin tag.
End of tag with given name.
Set the rules for the class
Set the hooks in the class.
Set the directives
Evaluates the rule with the given name.
Evaluate a hook and return its result.
Check text is matched in stream
Read one char and increment position.
Reads a character from the stream.
Read until the stream is at EOF.
Ignore blanks in text stream.
Check that the dtype of the cluster hits matches the dtype of the hits
Add a rule clause to the given namespace name.
Add r to bnf.
Add a rule to the grammar.
Add sequences in cla as a child of sequences.
Add alternative parser tree to alternative parser tree.
Add a range to the sequence
Add a parser tree node to the current node.
Add a capture to the sequence
Bind a character class to the parser tree.
Add a parsing hook to the parser tree.
return True if the n th parameter is numeric
Strip and replace string in param. pair
Read param from character c and save as str_ param.
Assign param. pair to param at index i
Set the name of hook based on the name attribute
Add a parameter to a hook.
Evaluates the rule evals it and returns the result
Ignore CXX comments.
Add a state to the machine
Returns a string with a dot representation of the machine.
write the graph to a DOT file
write the graph to a png file
Return string representation of the binder
Returns the next state based on the given one
Resets the alive state of all living states
Infer the types of a block.
Infer the type of a subexpression
infer a string as a literal in the current scope
Dump all nodes in the grammar.
Return an ast. stmt of the current scope.
Return a list of ast. stmt given a clause.
) -> ast. expr.
= str ( node ) )
Parse hook node by calling ast. subscript.
) -> ast. expr.
Compile the capture node to a list of ast. stmts.
( self, node ) : pass
Parse alt try - catch block.
Visit the seq node and assemble a list of statements.
Visit rep and optional nodes.
Visit rep 0n node.
Visit rep 0n node.
Concatenates text to the end of one string with the specified indentation
sets the indent level for all the list
Convert a list to a string.
Print a list of nodes
Populate a graph from a sequence of match expressions
Populate the state register with the initial state
Build the tree from the statement sequence.
Compares two preds.
Builds a grammar from a BNF.
Builds a grammar from a grammar file.
Parse source and entry.
parse a file into a parsing node.
Set a node in the grammar.
Set dst. value to dst. value
Get subnode value.
Dump a Deposition object to json.
Return recid list for invenio_12 dataset.
Return recid list for invenio_2.
Return check.
Dump a Token instance to a JSON formatted dict
Return number of users and all their extensions.
Dump User instance to a dict.
Return modified recids using invenio. search_engine.
Get modified records in Invenio 2. x.
Return collection restrictions.
Get record revisions.
Return all collections of a record.
Create and dump record in JSON format.
Get modified recids for a given date
Dump a record into a JSON formated dictionary
Dump a resource into a json serializable format
Load a model and insert it into the database
Return a dict of things and their contents.
Initialize application context.
. run_sql
Returns a list of actions matching the query
Dump OAuth2 token to a dict.
Load token from given data.
Import a record from a dump.
Get import string from config if present else return default.
Dumps the object to a JSON formatted dictionary
Return list of users using invenio 2. 0 user table.
Return count of users in Invenio2.
Dump user to json.
Loads a deposit.
Create record and persistentidentifier.
Load a single record dump of a given source type.
Load records from JSON.
Get JSON profiler statistics
Create a Tornado web application with a profiler
Dump profiling info to a file.
Delete the current profiler
Delete the current profiler
Get the current status of the daemon
Calculates translation functions for each image in parallel.
Merge multiple images into a single image.
Add 1s to the last axis of a numpy array
Create a new dump.
Create a new record in the database.
Update a record from a list of revisions.
Create persistent identifiers for a record.
Delete a record.
Create file instances and return last created object version.
Delete all buckets in a record
Return a list of missing persistent identifiers.
Sort files by name and save to self. files
Prepare the PIDs for each process.
Return True if the record is deleted.
Load community.
Load featured community.
Dump a thing to a JSON file
Check a thing
Deletes the object from the system
Calculate the magnitude of a vector.
returns the vector normalized of the vector v
Transform the texture coordinates
Adds the bones to the data dictionary.
Sets the length of a bone in the data.
Set the parent of the bone.
Return the pivot point of the waveform as well as the rotation and length of the waveform
Start an animation.
Set the state of the light
Remove the state of the object
= True = self. data
_state ( )
Create the object if it doesn t have any model data
Redraw the entire model
Draw the given object
setmodel - sets the model for the field
Writes the reports as XML to a file.
Adds menu to GUI.
Redraw the label
Redraw the label.
Draw the background to the window
Delete a widget from the editor.
Redraw the label
) register event handlers for mouse events
register event handlers with Peng.
add label with main text
called when dialog is closed
Update progress bar and label.
3d (
Render the world.
return True if resource exists False otherwise
add a category to Peng
Return a pyglet. image. Image of the missing texture
get model by name
Load model from database.
get model data by name
Add a widget to the window.
Draw the submenu to the screen
redraw the bg and stencil
Redraw the scroll bar
Abbreviation of mouse abbreviation
bins )
Add a layer to the end of the layers list.
Add an action to the actions list
Runs all registered actions for the given action name.
Register a new name with the registry.
Add a layer to the scaffold.
( ) return self
Delete the layered widget
The border of the region as a watchinglist.
Offset to the right of the cursor.
gets the size of the widget
Read a mesh from an HDF5 file.
Creates a connection matrix for a given shape
Set the fields to be selected
Add fields to the current object.
Check that elements are of the right types
) return space
Returns a pandas DataFrame with the edges of the triangulation of each vertex.
Returns a pandas dataframe with the graph stats.
Convert a ElementSet to a NodeSet.
Convert a node set to a surface element.
Convert a surface tag to a set of element sets.
Return the metadata of the fields as a pandas DataFrame.
Return a pandas Series with metadata about the step
Make the work directory if not already exists.
Run the GMSH script on the mesh and return the mesh
Read a history report from a ProCoDA data file
Read field report from csv file
Convert a list to a string.
Returns equation string
Return unsorted set string for a dataframe
Parses the response and returns the payload if raise_errors is set
Send a HTTP GET request with the specified method to the API.
Write XY plots to a text file
Return error message string for this field
Return whether the exception was thrown by a descriptor object
Private method to set the data.
Return the mode of the axis if it is timevariable
Set xaxis and yaxis options
Creates a new class with the given name using the given function and attributes
Cycle through the datafeeds
Try to convert a value to a float if convertible.
Convert string to int or float.
Returns a string containing a plot of the given graph
Force unicode decoding of a string.
Check if the given mime type matches any of the include_mime_types.
Cleans a domain name from being a URL or file name.
Get the left cuts of a domain name.
Make a kwarg to be used in document hashing.
Return a dictionary mapping words to the number of times they appear.
Index si.
tok_hash ] Invert hash
Returns document frequencies for a list of hashes.
lookup_tf for kvlayer hash h yield tuples
Make a list of stream items from a stream descriptor.
Read a varint from the stream.
Read A node.
= '!H' )
Converts a streamitem to a key and data pair.
Change working directory temporarily and return when done.
Strip a prefix from a string
Strip a suffix from a string
Check whether needle is a subsequence of haystack
Start the web server.
Shutdown and close the server.
Get error page callback.
Add a route to the router.
Resolve a route.
Try to find a matching callback for a non - literal route.
Reduce the pattern to a type and strip wildcards.
Send the response and return a list.
Add a header to the request.
Sets a cookie on the request.
status line for the response
Content - Type header value. Append charset if not already specified
A wrapper for shutil. rmtree that can handle symlinks.
Returns a list of open file descriptors for current process
Attempts to fetch the specified work unit from a remote server
Get lines from a file.
Return a random species and describer pair.
Return a random species pair.
Morph a sentence into similar words.
Get similarity for a search query.
Hiragana a text document.
Get a list of entities from goolabs.
Get the shortsum for a review
Print keyword results to stdout.
Get chrono text for a sentence
Initialize all stages for a single str_
Run the writers and return output paths.
Performs incremental transforms on a streamitem.
Replace the pipeline config with a list of stages.
Checks if chain_mentions contains all the target_mentions as defined by target_ment
Check if any of target_mentions in chain_mentions matches any of chain_ment
Look ahead match for tokens in multiple tokens of the same sentence.
Make NER file using template.
Shutdown the child process
multiplies a function with a number n
Split visible text into sentences.
Build index for labels in stream item.
Create a list of sentences from a stream item.
Cleansed file for each stream in i_chunk.
pipeline to NER file
Remove punctuation and whitespace from span.
This function instantiates the python modules in the pipeline
Generate a stream item for each original file in the path_to_original directory.
Creates a clean visible file from the index chunk of i_chunk.
Cleans up span according to Penn Treebank rules
Extracts characters from HTML files and prints them to stdout
Try to load the stage from the given module and function name.
Load external modules stages from a given path
Initialize a stage with the given configuration.
Read bytes from an iterator to a string.
Return True if href should be included in links.
Return a list of label objects based on the clean_html.
Generate all paths in a directory and its subdirectories.
Return a generator of tasks matching the given key prefix
Get a random available item from the pool.
get list of sentences from ner_dom
Verify that a given md5 matches the md5 of a packet
Get bucket from s3
Decode data based on the input format.
Get a single chunk from a bucket.
Converts a stream_id to a kvlayer key.
Convert kvlayer key to stream_id
Returns a tuple that can be used as a key for a stream item
Main entry point for the server.
Build the argument parser
Given a list of sentences return a list of character tokens
Yield char and offset tuples from a series of tokens
Add an element to the tags list
Return an XPath for the current node.
Return index of text element
Recursively iterate over all descendant elements.
Select elements in source.
Select elements by name.
Select elements matching a pattern.
returns following siblings of elem
Call inkscape with the given arguments.
Exports an image to the specified file.
Convert a SVG file to a PDF file.
Convert svg file to png file using inkscape_export.
Return a Jinja environment for a given file path.
Try to load a template file from the given path.
Fills the docstrings into the docstrings
Save content to a file.
Create a doctype from a template file.
replace chars for svg code
Render the document to a file.
Render the file at file_path to file_path.
Parse an XML string and return an ElementTree.
Return a fragment of HTML markup from a string.
Insert text before or after element
Insert node before refnode
Clone this element.
Return the XML value of the node as a string
Insert a child element at the specified position in the children list
Parse config file and return config data
Get Google credentials.
Create datetime objects for the events.
Create an event in the specified calendar.
Entry point for command line invocation
Get the extension of the given filepath.
Add an extension to a filepath if it doesn t exist.
Get a temporary file.
Remove all files in workdir that end in extension
Convert csv file to json file.
Replace a string from a file.
Parses HTML and extracts markup
Check if next sibling of element is the same as the one we want to blacklist.
Createitalic tag.
Create a strong element for the given tag.
Create an underline for a given tag.
Parse tag attributes based on attr_whitelist
Removes linebreaks from the tag
Parse href query param.
Parse the value of an attribute.
Translates keys from one dictionary to another.
Produce a JSON string representation of the object
Find all files matching a regex recursively
Concat strings using join function.
Does full start with part?
Does full contain part?
Convert an iterable into a boolean sequence.
Iterate over elements of a path.
Lookup items in a table
Replace characters for SVG code
Check input svg_file type and return svg figure object
Merge multiple PDF files into a single one.
Embed font files to svg
Embed font files to an SVG file.
Check the inputs to ensure they are input objects
Check function is callable and has the correct number of arguments
Recurse through inputs and run the function
create input from jinja2 template
Recurse through the option list and add each option to the output list
Convert an object to a string.
Convert an object to a number.
Convert an object to a boolean value.
Yields token strings that can be serialized into JSON.
Change encoding of XML files.
Save text into a QR Code.
Launch a melody command.
Call a command and return its return value.
convert a TeX file to a PDF file.
Recurse through schedules to find loops and loop options
Transform geometry to spatial reference
wrapper for ogr. geometry
expand self from other expand num_ by half
intersect two envelopes
returns True if the two bounding boxes intersect each other
polygon of the ellipse
DataFrame constructor to create DataFrame from Z n and m values
Write the main dataframe to a CSV file.
Select rows according to a condition
Return a table at a given nuclei.
Perform an intersection between two tables
Return a table with rows where self is not in table.
Remove even numbers from the table.
even odd elements
even even parts of each group.
Return the difference between self. df and str_
Calculate the binding energy of a molecule.
Derivative of N where num_ = 1
Second order singular value decomposition.
Derivative of p - derived function
Derivative of the second kind of order 1
Return derived table
Executes a function using the database connection.
Derive a key from a master password
Create the database if it doesn t exist
Search for domains by name.
Modify a domain in the database
domain. Domain creation
Open the specified file and extract HBCodes.
Return the vsi prefix for a given path
Get the EPSG ID of the epsg_id in scientific notation.
Entry point for the script.
Download and update a file in the package directory
returns a list of all available drivers
Returns a driver for a specific file path.
Convert a geometry object to a numpy array.
rasterize layer in rast
Open a GDAL raster file
create a raster from byte data
Copy source to destination
Get a dictionary of options
create a raster raster object from the file at path with size
Set the geotransform for the data set
Read data from the file and return as NumPy array.
return the envelope of the dataset
Get image driver.
Create a copy of this band
Return ndarray with mask of given geometry and offset.
Get the nodata value
wrapper for ds. readraster
Resample the raster to a new size
Saves the image to the specified location.
Set the dataset projection to a spatial reference
Warp the dataset to a spatial reference
Calculate the chunk length for a string.
Lookup alphabetic character set.
( str_ )
Convert chunk to a long integer.
, num_ )
Returns a compiled regular expression for the given filename.
Normalizes date format for Pandas
Detect timezone from locale
Convert object to a dictionary
Connect to a server and handle incoming jobs.
Worker main function
Start a pool of workers to run job_handler concurrently.
Sets the classification of the Dataset.
Send a message to the front of the send queue.
Turn on light.
Turn on switch.
Turn on with a brightness value
Turn off relay.
( ) return str_ Send queue
Send a reliable message to the lwlink device.
Sets the nature of this Product.
) str_ Config file paths
return option values of the group
Creates the configuration file at the given index and dumps it to a TOML file.
update self with conf_dict
Read and parse a TOML configuration file.
read configs from config_files
Return a list of names for the option and its value.
Return a list of sections for the given cmd
Build the argument parser
Parse command line arguments.
Return a tuple of command and help strings.
bash_complete wrapper for self. subcmds
Start the server as a master.
Called when the transport is ready to be used.
Called when a line is received from the server.
) del self. _worker
Called when a job is loaded.
Called when a response is received from the backend
Return the job back to the pool.
job_list )
Shutdown the server.
Reset all waiters.
Add a result
Wait for the task to change.
Load the next job from the queue.
Called when the job is done.
Add a result to the result set
Cancel all the jobs
Wait for all the jobs to be done.
Distribute jobs until there are no jobs left.
Add a set of jobs to the job queue.
Get job from the active javascript object and add it to the list of ready callbacks.
Return a job back to the pool.
Add the result of a job.
Called when a job is set to done
Cancel all pending callbacks and close the browser.
Remove duplicates from a list preserving the order.
Returns True if the object matches the regex.
Get region from environment variable or AWS region info
Filter list of entries with given filters and exclude
Get EC2 host by name.
Create a new instance from a dictionary.
Get an attribute from the object
Converts a boto instance object to a resource instance object.
Returns True if the given string matches the filter.
Display IP address as a human readable string.
Add the timestamp to the event_dict
A logger for StructLog.
Setup celery.
Remove a job from the queue.
return a dict of configuration options
Handler for config commands
Prepares the rows in the table ensuring that all columns are strings
Get a color from a hashed string
Generate a random color str_.
Check if credentials are valid
Check token and return user if found
Check if a process is running.
Dynamically imports a module and reloads it.
Get self IP from a URL or return None
Make a request to the API
Prepare POST parameters
Starts the server
Render widget to html
Streams a list of dicts to the console
Returns a list of holidays between from_date to to_date
Get the path for a command.
Build and return ssh command
Construct a lsiprofile object from command line arguments
Add a relationship to this part.
Get the related packages of the given type
, * * kwargs ) :
Add a part to the registry
Load a part from the given data
Find a filename for the given name.
Create an instance of this class from an XML Element
Parse a string and return a chatl AST.
Builds a JWT token from the secret key.
Assigns a force field to every atom in an AMPAL object.
Find the maximum radius and npnp in the force field
make a dictionary with forcefield parameters
. read ( )
Returns a generator yielding all the segments matching name
List all the files in a directory.
List all the directories in a given directory.
Create a prefix for a new bucket.
Delete a file from the bucket.
Ensure that the user is logged in with the Keeper service.
Get loud name
Try to get the url of the home page
Samples of the hotspots in the live data
Get the keeper token for the given host.
Upload a build to S3.
Determine if the travis event should be skipped based on the command line arguments.
Confirm that a build was completed by the keeper
Update dictionary d with the contents of u.
A simple CLI for pypi cli.
Edit part of an XML file
Print contents of a directory
Split path into drive and all subfolders.
Returns the editor to use for the given file path.
Check the content of a module to see if there are any errors.
Generates html for a chart.
Generate HTML for a chart object.
Serialize a data object to a GChart cell.
Patch JSON data
Convert JSON data to HTML.
Convert a dictionary to a pandas dataframe
write html to a file at folderpath
Return chart class based on chart type.
Encode the input xfield and yfield according to the inputs.
Infer the URL of the tarball from the app json
Create an app in the current directory
Delete app.
Generates a random binary string
Produce a random IP Address
Generate a random date between two dates
Return a requests. Session object
Send API request to API endpoint.
Create a new build from a URL
check the status of a build
Generate a sequence of strings starting with prefix.
Register all sub - commands
Returns the root argparser for this namespace
Get the description from the docstring
Get the help string for the command.
Parse arguments and run the command.
Encode a single dataset.
Get all the athletes of the current team
Get the last n activities.
Request list of activities for an athlete
Request the activity data from the activity endpoint of the athlete
Return the URL for the given athlete.
Build the endpoint URL for the activity page
Get request to Golden Cheetahs API.
Create a new build
Generate a URL with api_auth
Get a random title for the current locale.
Generate a random person
Get a random last name
Render the options to string.
Set dataset for plot.
Render the plot.
Check if type is valid.
. SEPARATOR )
Show the string in a web browser
Saves the file to the specified path.
urlopen wrapper for urllib2 urlopen and urlerror
( self. url ) )
write to a file object
Calculate the checksum of the rendered image.
Returns a random amount with decimal_places decimal_places
get unprotected and protected claims
Return the signing keys as JWKs
Unpack a metadata statement
Pack a set of metadata statements into a single string.
Evaluate the metadata statement recursively
Check federation usage against the current usage
Extend the request with the values in sms_dict
Parse the command line arguments
Add command line arguments to an argparse argument parser.
Apply logging options to the logging module.
, str_
Return a dictionary mapping each letter to a number or num_ for that letter
Get all the anagrams in a word.
( str_ )
Transforms a list of timeseries data points to a new list.
Get the last value from a timeseries
Validate a page number
Get a page of items from an iterator
Change file or directory mode
Create an internal signing service based on the given configuration.
Create and return a signing service based on the given config.
sign a message
Send a POST request to create the resource
Update metadata statement
Update the signature of the current transaction at location
Yield bundles from a bundle dict.
Creates a bundle based on the given data.
Return the urls for the given asset type.
Returns HTML tags to include this bundle and all its dependencies.
Return HTML tags for all asset types
Attempt to protocolise a URL.
Return a list of links to the given url
Listen on connected clients
Get a list of modules in the project
Import the modules from the config
Select a list of fields from a nested document
Add a datemap field to a document.
Print a cursor to the database. Returns the number of rows printed.
= None )
Build a graph of all tasks in do_tasks using dep_graph
Add default departments to project
Add dependencies and sequences to project after saving
create shot after save from sequence
Create all tasks related to the given element.
Get a value from a section of the config.
factory. stop ( )
Remove a factory.
Connect to a device using a protocol factory.
Receive data from the specified connection.
Disconnect a protocol from the protocol stack.
( str_ )
, str_ ) return d
Called when a multiplexed connection is made
Data received from the socket
Send data to the remote end.
. connection ]
( connectionidentifier )
Called when remote data is received.
Disconnect a connection
Centers a string within the terminal width.
print clock on right
Return a string that contains a version number and optional prerelease or build number.
Identify the framework to use for the given target unit.
Assert that the given unit can be converted to the target unit.
Pads data_to_pad to block_size with bchr
Unpad a padded data string to block_size.
self - sign given request dict
Return a dictionary of metadata statements
Print the input_word with the anagrams in the correct order.
Argument parser.
Parse arguments and print anagrams in words
Called when data is received.
= unregistered_type )
Create a stub for a remote function.
Ping a remote client to check whether it is alive.
Return a tuple of regex for the command and its completers.
Parse AMP list from string using the given protocol buffer.
= str_ )
Verify that this metadata statement is valid
Parse the remote JSON response and return the JWS object.
Return a list of databases in the database.
Synchronize the contents of a folder to the S3.
Recursively builds the python package tree.
Create a readonly fridge and close it
Load dict from JSON file.
Create a self - signed JWT using the given keyjar.
Create a JWT signed by using the given keyjar.
Load all Python modules in a directory and its subdirectories
Main entry point for the librarian CLI.
Return a score for a single letter in a string
Calculate the score of a word against a list of letters.
Word list generator.
Check if a scrabble word is valid or not
Called when a string is received from the server.
Get the command and responder function for a given command.
Parses the values of the request based on the command
= str_
( reason )
( addr )
Convert a JWKS to a keyjar.
Load a keyjar from a json string or dictionary.
nova_customer_process processes the message based on the event type.
Process Cinder event type with gateway.
neutron customer process entry.
Process a glance message.
Process a message using the swift client process table.
Process keystone customer events.
Process HEALTH_CUSTOMER messages
Serve the application. If server is none a simple WSGI server will be created.
Print msg to stdout with optional log argument.
Print msg to stderr.
Register a subcommand class with the global command registry.
Register a command class with the bot.
( value )
Parse string to value.
update completer dictionary
. work ( self ) connection
create and initialize MQ connection and consumer
init and import modules from config
Initialize the nova message consumer.
Initialize the consumer for cinder
Add the neutron message consumer to the queue.
Initialize the glance consumer.
Initialize the heat consumer for this component
Enable notification for openstack component.
Get information about a song
Download a song using threads and a filename
Executes the instructions and yields the result.
Load a global name from the globals dictionary.
Call a built - in function.
Dump a MySQL database into a MySQLdump file.
atexit event handler
Run the application.
Change the current working directory temporarily and return after the block ends
Recursively copies a directory tree.
Start the debugger
get the last modified time of a file
Check if item has been changed since last load
sync the database with the file list in self. fdir
Remove all items from the dictionary.
Scrape data from IPS website.
Downloads the image from the URL and saves it to the cache_directory
Check if the image has changed since the last time it was loaded. If it has not changed
Find the caller function in the source code.
Return defining component of the element
Load the metamodel and prebuild the model
Find a symbol in the current stack.
Check if element is contained within another element
Check if PE is global or not
Get data type name.
Get the related attributes of a relationship.
Create namedtuple enum from string ERT.
Return a bridge function for an interpret action.
Create an external entity object.
Make function to run a sync function.
Make constant from symetric object
Make a function that runs an operation on an object.
Create a derived attribute for a model attribute.
make a simple association between a relation and a relationship
Make an association for a resource relationship.
Generate a component from the given model.
Do the work required by the client.
Send an accept command to the socket.
Send a Reject message to the channel.
Raise exception and send reply to client
Send a call to the collector and wait for it to finish.
Establishes a connection to the result queue and waits for it to be available.
Dispatch a reply to a remote method call.
Try to guess the type of a value
Deserialize a value from a string based on the type
Get a content feature collection by its ID.
Insert or update features in the index.
Delete a document from the index
Delete all mappings for a type
Delete index if exists
= None ) : return resp
Get all ids from a prefix.
Yield ids found in the index matching the given value.
Return a list of strings corresponding to feature_names.
Return a list of filters for a range query.
Get the mappings between the indexed features and the fulltext indexes
Get field types from Elasticsearch mapping
Return the disjunctive index terms from a FC index query.
returns bytes of all features in fc_dict
count the number of bytes in the file matching the filter_preds
Return a pretty string representation of a feature Counter.
Process all docopt arguments.
Default formatter used when no formatter is specified
Convert instance attributes to a link
Returns pretty string for unique identifier
Check uniqueness constraint of many instances in the database
Check the integrity of a link
Check if all instances of super_kind are of the same type as rel_id
Transform val to bytes.
Delete all keys from all tables.
Implementation of scan prefix index scan.
Create or update an index.
Stores the value in the index for idx_name.
Index keys for content_ids in ids_and_fcs.
Return an index by name.
Adds directionality to string
Get the type name of a Structure.
Returns the referenced attribute
Build core type from a single source code element
Build enum type element
Build struct tag tree from a StructureNode node.
build user type xml element
Builds a CDT type from a string
Builds an etree element from a given object
Build a component from an OAI - Fooa component.
Build schema etree
pretty print xml_string
Fetch bikes from Xero API.
Set node position information from lexer position.
Create a queue.
delete a queue by name
List all queues in the fleet cluster
List all exchanges.
Purge a queue.
Create a MIME message body.
Reads the text from the Tesseract database.
Check if the text is visible or not
Parse the command line and create a component model
Convert a python value to a JSON datatype
Serializes a single Association.
Return serialized version of class cls.
Main entry point for command line invocation
Partition a collection based on a condition
Add bidi support to views.
Find link between two instances of the same metamodel
Compute the lookup key for the given instance based on the key map.
Computes the index key for a given instance.
Returns the type of the attribute.
Creates a new instance of the class and adds it to the database
Generator yielding all instances of all metaclasses
Define a new metaclass.
Send a message to the given socket.
Receives a message from socket and parses it.
Runs python project and pipenv to get rid of unnecessary code.
Parse a list of emails.
Decorator to register an RPC function.
Return a lookup table of rpc specs for the given application.
Normalize postcode to uppercase and redirect if needed.
Return the next element and reset the cursor.
( inst )
( inst )
( inst )
Get the brightness of the lamp
Matches the string against the provided set of arguments
Finds a match for the position
Return extra selection for the character at position
Updates the extra selections when the cursor position has changed.
Return exception info in a tuple.
Return an instance of the given class.
Override execute method to add history to the history list
\ Press the up arrow in the history buffer.
Return True if down pressed and history has been replaced
Go to the previous history item by substring.
Goes to the next history item by substring.
Handle a reply message from the execute method
True if the history is locked.
Get the text to be edited by the user.
Sets the history and resets it.
Store the current history edit if it has changed.
Close the console and exit the application
Convert a collection to a pandas dataframe
, True ) return
subscribe to the topics in self. topics
Log a message to the syslog
Iterate over a remote variable.
Convert notebook to this nbformat.
Get importer for path item
wrapper for cstringio. stringio.
Return whether or not setuptools overrides a version in the requirements file.
Parse a string src to a requirement.
Return parsed pkg_info as a dict.
Combine leading whitespaces into a single string.
Override hide event to disconnect signal handlers and event filter.
Reimplemented to connect signal handlers and event filter.
Return the current text cursor
Update the current item based on the selection.
Register all admin site for the given appname.
Return the disk partitions of the running windows
Get the cpu times of the system
Return system per cpu time
Non blocking reading from stdin
Get the raw block from stdin replacing str_ with str_.
Update tab bar visibility
Creates a tab with the current kernel
Add a new tab with a frontend
Populate all the magic menu
qtGui close event handler
Check passphrase against hashed_passphrase for validity
Returns the indented short title for the given item
Returns True if the given request has permission to change the object.
Returns True if the given request has permission to delete False otherwise.
Recursively adds children to graph.
Create a graph with bintree.
Submit jobs for a graph.
Validate the tree by comparing the start time of each node to the finished time
Make color table for a class.
Make a copy of this colorscheme.
Add a colorscheme.
Set the active scheme for the current string
Return the absolute path to the home library
Run iopub sub - process
Wait for kernel to finish.
Sets the style to be used.
Returns the document format string for the given token.
Get format from document
Return qtgui. qtextcharformat. QTextCharFormat for token from qt
Find a command within a list of commands.
( path ) )
Verify that the value for dist. attr is a valid NSP
Check if entrypoint is valid.
Check if the last blank line is the same as the string.
Check if last two blank lines are in the source code
Transforms a line from assign system to core if it contains a rhs system.
Replace assignment magics with their respective command.
transform classic prompt
Remove the IPython prompt from a line
Find indent spaces and dedent flags.
Stores the source code lines in the specified attribute.
Reset and return source and source_raw
Parse cell magic lines.
Append lines to the current cell.
( str_ )
Post a notification to observers.
Get the set of observers for a notification
Add an observer to the event loop.
Update the status of the jobs in the running list.
Print a group of jobs
Flush group to output.
Status is changed return None or new status
Update the status of the component and report results.
Modified from threading. Thread.
return str_
. copy ( ) ) )
Declare a special object.
Declare a list variable.
, setvariable )
The cwd setter.
Move to a new state
Calculate the energy of the given state route.
Returns a dictionary with the default value for each key
Check that the table exists and has the correct types
Render the check as an expression.
Generate a table from a list of rows
Generate a HTML link.
Returns the javascript file for the given url
Returns css file for given url.
Outputs an HTML image tag.
Substr subtraction of two numbers
Multiplies two numbers.
Divide value by arg.
return value % arg or str_
get model verbose name
Split a line of user input into pre esc ifun and rest
Add options to the parser
Deactivates the built - ins.
Find url_name in index_url s content.
Generate explicit links based on given relationships.
Split a string into a list of shell commands.
Main entry point for coverage script.
Add an action to the menu.
, str_ )
Prints the help for the specified topic.
Invoke the help command.
Check if args are allowed
Execute a python file or module
debug prints coverage information
Unserialize a Pickle object.
set the display hook
Decorator to catch and log errors.
Check if url is a valid url.
Validate a URL.
Validates a dictionary containing a URL structure.
Pull a value from globals.
Return a list of n random ports to listen on
Applies the callable to each element in sequences and returns the result.
Return the last n lines of the readline history.
Set autoindent value.
Choose the magic number and start logging.
save sys module state
Restore sys. modules to their original state
Register a function to be called after the query is executed.
Create a new fake main module and initialize its namespace
Create the namespace of the user namespace
- > list of all namespace references
Clear all user history and reset session.
Delete a variable from the display hook.
Resets the selective namespace reference counter.
Find the object of type property
wrapper for _ofind_property
Inspect an object.
Initialize the history module
Show the traceback of an exception.
) Show traceback.
Show a syntax error traceback
Insert text before readline
Add a custom completer to the chain.
set the frame object for the completer
Run a line of code with the given magic_name.
Find a magic by name and magic kind
Define a user defined macro.
raw system call without shell interpolation
Rewrites the user input to match cmd s input.
Return user defined variables as a dict.
Evaluate user defined expressions
, str_ )
Execute a file IPython notebook if it exists.
Runs cell magic while caching the current cell magic body.
Expand variables in a string with the formatter
Create a temporary file and add it to our list of tempfiles.
Performs atexit operations and cleans up.
Send a message from a sender to a destination.
List all profiles in a directory.
Return a list of all bundled profiles in the current ipython package
Find a distribution matching requirements.
Returns the full path to a file in the current working directory.
Read the next line from the file.
Sends string s to the child process and returns number of bytes written.
Sends the character that was typed into the terminal
Prepare regex pattern for matching.
Prepare regex pattern for matching.
Return the index of the first occurence of the string in the buffer
Search the provided buffer for a match to the search string.
unpack a directory to extract_dir
Get the last error that occurred in the log.
execute a command and return output
Try to find a source for the given filename.
Return list of arcs that were executed in the file.
Returns list of arcs that are not executed
Returns list of arcs that are not yet predicted.
Return a list of branch lines with the most exits
Get the total number of branches in the tree
return a dictionary of arcs that are missing from the branch
Return a dictionary of branch line numbers and their exit count minus missing branch arcs
Set number of digits to precision.
Get the coverage percentage of the whole block
Return the covered percentage as a string.
Highlight haystack with needles using needles cls_name
Highlight keywords in a string.
Highlight keywords in a string.
Call the function with the current context and then restore the context to the original.
Removes the end of a string if it exists.
marquee - style string marquee
Formats a string to be displayed on the screen
Dedent text for Pygments
Wrap paragraphs to the specified number of columns.
Find the optimal row and column based on the display width.
Return the i th item in mylist or default if default is none
Build kernel argv for cli.
Tunnel the kernel to the host
Pretty print a Python object
Pretty print a Python object
Get the MRO of an object.
Default pretty printer.
Override default pretty printer to print class and self.
Pretty print a re. Pattern object.
Prints the name of the given object and its module.
Pretty print a function object.
Prints an exception object in pretty format
Register a printer function for a type.
Register a printer function for a type by type module and type name.
Adds obj to the output buffer or creates a text group and adds obj to the end of
Create a breakable string that will not break the current group unless it is the last group.
Pops a group off the stack and adds it to the text
Flushes the buffer to the output
Returns a pretty - printed representation of obj.
Write row into ods
Get text from win32clipboard.
Get the current clipboard content.
Get text from the clipboard
Create a temporary directory and return the prefix path to use.
Rekey the keys in a dictionary
Recursively extracts dates from nested objects.
Recursively squash datetime and list objects to ISO8601 strings.
Default date formatter.
Check if the instdir is in site_dirs.
Write a script to the install dir
Print out a message and sleep for t seconds.
Create and return the argument parser.
Reads a connection file sends a query to the dealer and publishes the results.
Build package finder from command line options.
Called when a log level has changed
Default logging configuration.
Check that the flags have changed.
Print alias help to the screen.
Print the help for all the flags
Print the subcommand description and help for this parser
Prints the help to the screen.
Prints the examples section of the file.
Merge config into self. config
Initialize a sub - command.
Flatten self. flags and return a dict with flat flags and aliases.
Parse the command line
Load a config file.
Generate a config file for the current project.
Downsample k items from an array
Format an info row.
write to output file if should pass
Update the attributes of this instance based on the contents of a configuration.
Return a help string for this class and all its traits
Returns the trait help for the specified instance or trait name.
Clears cls instance
Format a test failure tuple.
lite crash handler printing message to stderr
return str_
start all channels and emit started_channels signal
Read the cell from the file and return the string.
read from a file descriptor ignoring interrupts
Split a string into a list of tokens.
Compress a BIDS DH.
Record a function as a magic for a specific kind in a dict.
List all the documentation of all the magics
Format strng as latex.
Set default value of a given option
HTML page for a GUI reference.
Create a Task with a callable function info.
return task info dict with given label
get the function object from the info dict
Calculates next run time based on last run time and schedule
Submit the task with the given timestamp.
Run the task
Run APA at the current time
Run a number of iterations for a scheduled task.
Run the_callable one at a time until the callable returns True.
find url file in security dir
Bind the kernel to the zmq router
Create an interrupt event.
Wait for multiple objects of the same architecture
Filter a Namespace object to only those objects whose name matches the given pattern.
List all the objects in a namespace filtered by a type pattern.
Check if op is in dict raise valueerror if not
Draw the figure if in interactive mode.
Flush pending figures to the display.
Send figure to frontend.
Load an extension module from the given module path.
Unload a python module extension
Generate a range of random ports
Create the web_app and listen for requests.
Handle INT signal.
Confirm exit and restore sigint handler.
shutdown all the kernels
Calculate the price of a set of options.
Replace multiple placeholders in a string using a dictionary
Render the prompt
Create all the zip files in a directory.
Fix the version of a project file.
Return a boolean indicating whether the object is mappable.
partition seq at index p in [ 0 q )
Run scss from a file.
Run source code in the child shell.
Download a file from the Pi ftp server
Reduce frequencies from a frequency list
Compute the frequencies for n digits of a text file
Generator to convert a txt file to a series of digits
Returns frequencies for each of the digits in digits
Returns frequencies of two - digit strings in digits.
Compute the frequencies for the given number of digits
Plot two digit frequencies.
Plot one digit frequency spectrum.
DEBUGX ( expr pre_msg = str_ )
Same as django. core. urlresolvers. reverse but adds a query string.
Return whether base is a private key based on prefix.
Print out debugging information about a source file.
Run a script in a temporary directory.
Debug a test in a module.
Return a dict of all items in the cache
Remove all files in hashroot
Return a list of keys in the tree.
Allow the record to be logged.
Hook to capture test log records
Start an embedded shell
Create writer for trans and meta csv files.
Prepare locale directories for the transifex scan
Write entries to. po file
Write the header to a po file.
Subscribe a user to the root of the subscription
Initializes the option parser
Import and run python module
Run a python file as a module.
Create Python code from a Python file.
Load Python code from a Python file.
makes an html table out of the item_matrix
Set the current value of the slider.
Cancels the completion of a tab.
sets the index of the selected row and column in the grid
Update the list.
Return a dictionary of words to their frequency in a text.
print n words and their frequencies in descending order
Get a string representation of the document.
Write the table to a file.
validate a pin document
Send a shared PIN to the fan.
Deletes a shared PIN.
Send PIN to user.
Delete a user s PIN.
Subscribe a user to a topic.
Return a list of the subscriptions for the given user.
Begins the profiling.
Context manager for performing a task.
A context manager for performing a subtask within a with statement.
Update the number of units of work
Create a sub - monitor and add it to self. sub_monitors.
Called when the task is done.
Move the temporary build dir to a new location.
Given a list of pyconfig files load the corresponding pyconfig files
Load the configuration file and return it as a dict.
Load a single config dict or config dict as a dictionary.
decodes all unicode arguments in argv
Load the configuration and return it.
Converts self. parsed_data to config.
Attempts to find the module with the given name.
callback for when the stream is stopped
Called when a start message is received.
Called when a stop signal has been received
Interrupt the process then kill it after delay seconds.
+ self. args
( n )
Send a file via scp
Fetch a file from a remote location via ssh.
return the number of configured engines
Start up the specified number of launchers
Start a job by its number n.
= str_ )
Parse the output to get the job id.
Write the batch script to the batch file
Run the batch script and wait for the job to finish.
Make context menu
) return str_ Append jpg
png ) return str_ Append png
, svg ) return str_
Add image to the document.
Copies an image to the clipboard
Retrieve image from the document.
Insert image data into the document.
Insert svg into the document
Save image to disk.
Called when the exit time has changed
Initialize the environment.
Rewrite the input of the current line to include the given cmd
ask user to exit
Set the next input to be displayed
Read a file into this ConfigParser object.
Get option from section as a list.
Get all lines of an option from a section as a list.
Set timid from environment variable
Set instance attributes based on keyword arguments.
Load a configuration file from a given filename and add it to the configuration.
Sets an attribute to a value from a given config file.
Set the delimiters to use when parsing.
Splits a line by delim and returns the result as a tuple
Return a list of global keywords and namespaces matching the given text.
Return a list of completion matches for the attr name in text.
Change greedy delims.
Return a list of aliases that match the text
Returns a list of all matches found in text.
completer for rlcomplete
Match one record against a set of tests.
Find records that match a set of filters.
Extract subdicts from a record.
Return whether we should show the quiet input dialog
Write out the output prompt
Write format data to stdout.
Log output to logger.
Raise InvalidOperationException if operation is frozen.
Convert mysql timestamp to python datetime. datetime
Called when the event loop is changed.
do one iteration of the simulation
Publish a PythonIn message.
Send an abort request.
Clear the request of the shell.
Return the topic name as a bytes object.
Send a shutdown signal to all shell streams.
Pushes sys. modules to the stack
Remove modules from sys. modules that are not in the stack.
absdir takes an absolute path and converts it to an absolute path
Return whether name is a file or not.
Return True if obj is a class
Check if given path is a package or not.
Natural logarithm of a number.
Given a class cls and a module name transplant cls to that module.
Returns the CPU times of the system
Get the command line of the current process.
Return a list of open files for this process.
Get the connections for the process.
Checks if a user has the given group
Resolve a class based on its full path.
Returns the usage percentage as a string.
Login to the PoDocs server.
Get the gdocs key from the url querystring.
ensure temp path exists
Clear temp files to make it ready for next run
Upload file to podocs
Synchronize translations between local and gdocs files
Download the trans and meta csv files from Google Docs.
Uploads the po files to the Google doc.
Clear the temporary file and upload it to podocs
create a qtconsole and connect it to the qtconsole
Check if a URL is accessible.
Check if a URL has a specific content
Get the HTTP response code from a URL.
Compares the content type of a URL to a provided value.
Compare the response code of a URL with a given code.
Validate the data and metadata types.
Clear the output of the process.
Create a list of code units from a list of MOrf objects.
Return the flat rootname.
Open source file.
Whether the extension of the file is python.
Get total seconds of datetime. timedelta object
Get the result or raise an error if not ready.
Wait for the messages in the queue to be sent.
Get a dictionary of the results of the job.
Abort the current message.
Get elapsed time of all the messages in the queue.
Wait for the queue to be ready and print the progress bar
Republish a display pub
Wait for all the outputs to be available.
Wait for the messages in the queue to be sent.
returns absolute path for given absolute filename
Prepare patterns by converting paths to absolute paths if needed
Get the separator from a string
Find all python files in a directory recursively
Remove the relative part of a filename
Returns the canonical filename for the given filename. If the canonical filename is already absolute it will be
Get the zip data from a file.
Returns True if fpath is in one of the dirs.
Returns True if fpath matches one of the patterns in self. pats
Map path using aliases
loop for qt4.
Loop over a gtk kernel
Enable event loop for a given gui
Calculate the Goe equation from standard normal distribution
Calculate the center eigenvalue difference of a matrix.
Compute the ensemble difference of n eigenvalues
= step_addr
Load the config file if it exists.
Write the barcode to a file.
Erase the contents of the object
Returns a dictionary mapping file names to line names.
arc_data
Write the current state to a pickled file
( filename )
Load pickled data.
Read a file and extract lines and arcs from it.
Combine parallel lines and arcs data
Add line data to the document.
Add arc data.
( filename ) ) return hasher
Summarize the file content
get pasted lines from stdin
Main loop for the interactive shell.
Replace rlhist for multiline strings.
Get raw input from the user.
Edits the syntax error list
ask user to confirm exit
Get URL and revision from URL if any.
Creates a new frontend master page
Initialize the colors for the widget.
) : return :
Convert a NumPy array to a NumPy array.
Set the active color scheme.
Toggle the color scheme of the QR Code
Convert structured traceback to text.
Returns a list of formatted traceback lines
Format a list to be printed
Show exception only in the text stream
Set the mode of the variable
Ensures that fromlist is a subset of mod.
Add a line of code to the generated code.
Add a new section to the code.
get a function by name
Returns the python code for the given expression
Render the graph and return a string.
Apply dots to the value
render a template
Returns a dictionary mapping format types to their default formatter.
Register a printer for a type.
Called when precision of floating point has changed
Return list of user config files.
Configure logging.
Configure where to search for tests
Prints screen lines from a string to stdout
Page a file using system call.
Returns the pager command to use. If pager_cmd is none it returns the environment variable str
Get start string for paging.
Print a string to the screen snipling at the end of a string
Print unicode in pretty format
Convert an image to PNG.
Convert an object to a PNG image
Returns True if o can be printed in LaTeX.
Print latex version of a object
Add configuration options to the parser
Validate that lst contains only strings
Validate that keys and values of a dictionary are strings
Run the ioloop until the event loop terminates.
Handle incoming IRC message.
Autocomplete a complete message.
Get info of an object.
Shutdown the server
Tells the IOLoop to wait until all pending messages are sent.
Send an input command to the client.
Start channels.
Stop all the channels.
True if any of the channels are running
Load the connection file
Start kernel.
Shut down kernel.
kill kernel if there is one
Interrupt the kernel
Send a signal to the kernel
is the device alive or not
Return the shell channel for this client.
Returns the sub_channel.
Gets the HB channel for this node.
Bind kernel.
Print debug messages to stderr if debug level is high enough
Return a list of extension classes in the current namespace.
Pre - step method for all extensions.
Walk an egg s contents
Scans a module for dangerous dependencies.
Start a new instance of the ipcontroller app.
Save connection dict to file.
Load config from json file
Load config from JSON if reuse_files is True.
enable autopx
Disable autopx.
Execute a cell and return whether it was successful or not
Check the time of the heartbeat message and run tasks if so
Run a task from a message.
Remove task object from message.
Patch an attribute on an object if it is missing
accept a connection from the server.
Reject the pending connection attempt.
Return the agent to use for this connection.
save the form and redirect to success url
Delete the considered object and redirect to success URL
Set the user field on the model instance.
Check python modules
Open editor.
Get the clipboard content.
Add a function to the chain.
Get the metadata of a project or a module.
Configure debug options.
Import item by name.
Try to connect via passwordless SSH.
Try passwordless ssh with pexpect.
Try to connect with passwordless paramiko.
Establish a tunnel connection
Open a tunnel to a remote host and return the local port and tunnel
Stop scheduling tasks.
Unwraps exception and adds engine identifier to exception. engine_info
read engine id from message.
Remove an engine from the engine list
Handle a reply message from the execute method
Send all pending notifications to the notification handler functions.
Send all pending messages to the handler for the message type specified in the queue_handlers dictionary.
Flush all control messages on the socket
Flush ignored control lines to the control socket.
Flush all messages in iopub
Spin forever.
Stop spinning thread.
Coroutine to flush data from the sockets
Send a apply request to the engine.
Query hub history from the server.
Perform a query against the database
Returns set of opcodes in names
Get byte parser for current text
Find lines matching one or more regular expressions.
Return the first line that contains the given line.
Find the first lines in a list ignoring certain lines.
Parse the python source file.
return a list of tuples of arc tuples in sorted order
Return a list of child parsers.
Yield tuples for each byte and line number
. strip ( )
Return a string representation of the block stack.
Check that all chunks are within str_ range.
A generator that yields arcs in the order of the lines in the file.
Return a list of chunks containing all child parsers.
Return a set of all arcs in this parser and its children.
Load cover and start serving
Report coverage of sys. modules via coverall.
Check if we should cover this file
Interpret a source distro name.
Open a URL using urllib2.
Get the parent object of the given object
Get the root topic for the current engine
Render template with context.
Configure capture plugin.
Called when an error occurs during the test execution
Split data by num chars.
Convert nb to this nbformat.
Convert hex color to rgb
Return a dictionary of colors for the given style name.
Return the font with given family.
Handle reply message from the executed request
Handle reply messages from the history API.
pyout message handler
Handle display data.
Start channels and show channel history.
Execute a file and hide the file or directory.
Process a execute error message.
Process the execute payload.
Set the default style sheet and syntax style.
Edit the file with the editor.
Make the in prompt text.
Makes a prompt that contains a space character at the end of the line
Called when the style sheet is changed
Highlight text when the syntax style changed.
Transform data if it is a dict.
Returns Virtual Memory information
Returns the CPU times of the system
Get the uids of the process.
Get the gids of the current process
Get the threads associated with a given process.
Get the list of open files for this process.
Get the commit hash for a package.
Return information about a package given its path.
Return the number of CPUs on Mac OS X.
Return the number of CPUs the current machine has.
Fetch the next set of results from the database
Fetch the next row from the result set.
Fetch many rows from the result set.
Fetch all rows
= root_id ) return
Convert a JSON string to a notebook object.
Convert a Python string to a notebook object.
Read a notebook from a string.
Write a notebook to a file.
( nb ) )
Convert notebooks to metadata
Loads the value for the given key from the given src dict.
name in self. patterns )
Check if a class should be processed by the plugin
Return True if a directory should be included in the build.
Check if a file should be processed by this build
Whether the function should be called.
Determine if the method wants to be called
Check if a module should be processed by the plugin
Read lines from a file into a list.
pydb style list command
Print a list of lines to the screen.
pdef xdef ydef zpdef xdef
Get the conversion factor between two currencies on a given date.
Convert currency from one currency to another.
Computes the return on the specified currency for a given period.
Get the encoding of a stream.
Get the default encoding for reading from stdin.
Write the connection file to disk.
Initialize heartbeat.
create a session with default settings
Setup sys. stdout and sys. stderr output streams
init kernel by class name
Convert html content to text using html2text
Convert Markdown content to text
Convert a domain name to a fully qualified domain name.
Add options and arguments for this plugin to the parser.
Configure the plugin.
Return True if we want the directory to be processed.
Return whether this extension links to a dynamic library
Call multiple functions in sequence and return the result.
Call each function in list in reverse order.
Append a function to the list
Insert func at index.
Format the usage message.
Write the PID file for this process.
Remove the pid file for this process.
Get PID from pid file.
Construct a parser for the magic function.
Get the real name of magic_func.
Highlight the current block of text
Enable or disable highlighting for this block.
, str_ )
Copy the current selection to the clipboard
Send a execute request to the kernel
Called when the prompt is finished.
Tab pressed - Handle tab completion
Make context menu
Qt method handling keypress event.
Insert continuation prompt
Handle a reply from the server.
Handle reply message from the execute request
Handle kernel died event.
Handler for object info reply messages
Process a pyout message.
Process a stream message.
Process reply from the shutdown command.
Execute the specified file.
Interrupt the kernel.
Clear execution and reset request info.
Restart the kernel.
Do a calltip request for the object
Calls kernel channel. complete with a completion message
Process an error message received from the kernel when executing a task.
Process execute OK message
Update tip if document position has changed
Add plugin to list of plugins.
Call all plugins with the same arguments
Generator yielding results from all plugins
Calls all plugins and returns first non - none result
Configure the plugin proxy with the given options and configuration
Load entry point plugins.
load all builtin plugins
convert latex text to PNG
Convert a LaTeX string to HTML.
Check if the requirement exists.
return a dictionary of the current object attributes
Returns the name of the process.
Returns the percent of CPU usage.
Returns the memory percent complete.
Returns the memory maps of the specified instance.
Returns True if the process is running.
Suspend the process.
Resumes the paused process.
Kills the process.
Waits for the task to be completed.
Wire the kernel to the gtk main window
Return True if identifier is shadowed by another namespace.
Register a transformer function
Unregister a transformer.
Register a checker.
unregister a checker method
Registers a new handler that will be called when the given name is called.
Unregister an event handler.
Prefilter line_info and return a str_ or None
Find handler for the given line_info.
Apply all transformers to the line
Prefilter a line before it s been input.
Prefilter a list of lines for output.
Returns the appropriate prefilter for the given line_info
Returns the prefilter handler for a given line
Returns the prefilter for the given line_info
Get the prefilter handler for the given line_info.
Do autoindent on line info.
Expand aliases in ifun and ifun_rest
Handles magic lines.
Process a single line.
Call rewriter if autocall is enabled
Handles the given line info.
Reimplementation of QAbstractItemWidget. eventfilter
Overrides the enter event to stop hide timer.
Paint the calltip
Show call info.
Handle cursor position change.
Canonicalize a relative or absolute path so that it is absolute.
Cached version of maskeddict
Check if we are running in a virtualenv and there is no global variable defined.
Partition a set of text files by word frequency.
Get the default aliases for the current platform
Define a soft alias for name
Define a CLI alias.
Check if name is a valid alias for cmd
Calls an alias
Transform an alias to a command.
expand alias name if any
Implements the autohelp directive.
Resets SGR to initial values
Return the color that corresponds with the given color and intensity.
Return QTextCharFormat for current character format
Generate a JWT token for the given secret and age
Remove old tokens.
Check if token has already been used
Validate a JWT token
Get the common prefix of a list of paths.
Return the size of the control as a QSize object.
Returns True if the current selection can be cut
True if the clipboard can be Pasted else False
Clear the screen and optionally keep the input.
Cuts the text from the cursor
Return the input buffer
Set input into the input buffer
Set control and page font
Print the current output to the screen.
Moves the cursor to the top of the prompt.
Reset font according to font family and size
Append some text before or after prompt depending on user input
) return str_ or html
, before_prompt, )
, before_prompt )
Clear temporary buffer
Cancel current completion and show items.
Fill temporary buffer.
Return whether or not control key is down.
Create and return QTextEdit control
Create a qtGui. qpagecontrol.
Return True if page pressed and False if not.
Get block plain text
Get end cursor
Returns the column number of the cursor in the input buffer.
Get the current line in the input buffer cursor.
Get the cursor to the prompt.
Return text cursor for given range and selection
Inserts the continuation prompt
Insert HTML into text edit block
Insert html into text fetching plain text
Insert plain text
Keep the cursor in the buffer if it is not already there.
Quit keyboard.
Page text in the GUI.
When the prompt is started write out the input buffer.
read a line from the user
Sets the prompt to display in the terminal.
Sets the top cursor in the control.
Adjust the scrollbars for the editor.
Main entry point for the formatter.
Copies the specified configuration file to the ipynb location
Create a profile dir from a given path and name
Search for a profile directory by name.
Read and return the source of a given file.
create a temporary pyfile and return the name and file object
( self. closed
write to the file
Add a new heart handler to the hug api
Add a heart failure handler
Process a Ping message.
Batches a list in evenly spaced bits
Convert a path to a filename
Display elapsed and average time for display_amt prints if count % display_amt
Convert time to a human readable timeunit.
Extract wininst config from dist_filename
( path ) ) return path
Quote a string argument if needed.
Check for conflicts with other distributions.
Set fetcher options for the specified file.
Create home directory of user if not exists.
Check if file is an archive file.
Create a new heading cell
Create a new notebook metadata object and return it.
Create a new notebook author.
) return str_
Unquote a filename or path.
Resolve a filename to a file path.
Get the current XDG directory.
Get the ipython interpreter temporary directory.
Get the directory of the ipython package
Get the full path to a python module.
Check if target is older than any of the deps.
Return the md5 hash of a file.
Check for old ipython configs in the current directory.
Create a dictionary of suggestions for the given object.
get suggestions with the size of the object
Get suggestions for the given object.
Return self relative to cwd.
glob like glob. glob
read md5 hash for file
Create the profiler and save it to the pfile
Print the profiler to the given stream.
Closes the profiler and cleans up.
Disable event loop integration with the GUI.
Disable the Qt4 event loop integration.
Enable event loop integration with GTK.
Enable event loop integration with tkinter
Enable Pyglet support
save function for saving the wave file
Create a sqlite3 db and fill it with data
Run a SQL query against the database.
Get session info from the database
Get the last n rows of the table
Get a range of lines from a string.
Get the name of the history file.
Name the session with the given name.
Reset the history
Return a range session
Store the output at the given line number in the db_output_cache.
Write out the cache for this session
Stop the thread and save current state.
Get the number of CPUs the program is running on.
Get system per cpu times
Returns the disk partitions
Get a list of PIDs in the system.
Given a pair of strings return a nicely formatted string
Format a list of statements and lines into a nice string.
Returns a short stack trace as a string
Join a list of regular expressions into a single string.
Delete a file if it exists.
Update md5 with value in argument
Update the profiles in the project
Stop a cluster
Find a command in the shell PATH environment variable.
Print the stdout and stderr body of the process p.
Populates self. code_units with a list of CodeUnit objects.
Call report_fn for each file found in the given morfs.
Simple wrapper around pdb. set_trace
Initialize all extensions.
init_code - Initialize the code
Run the shell for each line
Run startup files if they exist
run all exec_files in self. exec_files
code_to_run is a list with the code to run
Run the module if it exists.
Find a filename in the data directory.
read data from a file.
Escape a string for use in LIGO LW XML
Cover all the files in the html directory.
Make local copy of static report files to self. directory
write html to a file
Generate a hash for the source code and coverage context.
Write index. html
Reads the status file and loads its contents.
Write the status of the coverage report to a pickle file.
Sort two lists and compare their elements.
Get a slice from a sequence
Split seq into chunks of size
Read the manifest to get ignore list.
Translate glob pattern to regexp.
if pat in patterns
Returns a list of all versioned files in the current directory.
Start a new kernel and add it to the pool
= kernel_id
Kills the kernel specified by kernel_id
Get a kernel by its identifier
Get the kernel ports.
Returns the notebook with the specified kernel ID or None if not found.
Start the kernel for the given notebook
Shutdown the kernel and delete the mapping for it
interrupt a kernel by its id
Restart a kernel if its running.
= kernel_id or )
= kernel_id )
( kernel_id ) )
Remove all onetimeproperties of this instance
Exports a XHTML fragment to a. png file.
Fix empty paragraphs.
Returns a unique object or None if it doesn t exist.
Given a list of tokenized terms and a list of search fields return a query that will include
Returns the text search query for the given search query string.
Get a date greater than a given number of days
Get a date less than a given number of days
Gets null or blank query for a given field.
Remove case insensitive fields from fields_dict
Add options to the parser
Validates the attribs of a call to a method.
Return whether or not we want to use this method.
Rotate the ring.
URL for websocket connections.
Reserialize a reply from the server.
Injects a cookie message into the request.
Really start the heartbeat if we are not already beating
Stop the heartbeat stream.
Load self. fobj into self. fobj
Get index from input index.
Seek to the specified block index.
Edit the block at the given index.
Display the block with its title
print all src blocks to stdout
A thread function for parallelization of a sequence
Get the source code for a traceback s frame
Finds all lines that can be inspected and returns a list of those lines
Countdown to a given date.
print ( str_ ) pass
Decorator for saving message IDs in the context of the current transaction.
Decorator to sync the results of a method with the client.
Decorator to spin after a function
Return a list of all messages in the queue.
Get a message from the in queue.
Parse a URL and return it as a dict
Return a list of all root modules
Returns a list of completion suggestions for the given line of text
completer for magic_run
Quote a XML attribute.
Configures the plugin.
Writes the error report to the error report file.
Add an error to the errorlist.
Add a failure to the failure list.
Add a successful test to the list.
pick a random two bin of length num_
Generate a random load weighted by weight
Add engine uid to the list of engines
Remove the engine with the given uid from the list of registered engines.
handle stranded tasks
Check if timeouts have expired and fail the task if so
Called when an unreachable dependency is encountered.
Save a job that has not been met.
Submit a task to the engine
Dispatches a single result.
Handle a result from a client.
Process a dependency that hasn t been met.
Update the graph with jobs depending on dep_id
prints the current state of the logger
write a line to the log file
Write to log file and flush
Stop logging and close log file.
Create a new notebook
Add a string to the chain.
Add a regex to the chain.
Dispatches a key to the appropriate str or regex.
[ str_ ]
Called when a notebook directory has been changed
Return list of notebooks in notebook dir and sorted by notebook name
Create a new notebook id and associate it with a name.
Delete a notebook by its id
Check if notebook with given identifier exists.
Return the path to a notebook
Return path of notebook with given name
Get a notebook by its ID.
Get notebook object based on notebook_id
Save a new notebook and return the notebook id
Save a notebook object to the database
Save a notebook object
Delete a notebook by its identifier
Create a new notebook and return its ID
Copy notebook to the clipboard.
Tokenize paragraphs of phys.
Load the default IPython profile directory.
] + self. classes_
Parse the terminal command line arguments.
Initialize the terminal - ipython app
. shell = self. shell
Init banner if required
Returns the type of an object as a string.
Parses a name into a list of strings.
Return traits that are defined on a class
get trait metadata by name
Check if value is a subclass of self. klass. Raise error if not.
Returns the default value of the field
Check if the list is a subset of completed and failed
Checks if the list can be reached from a completed state.
, * * kwargs
Get the depth of node n in a tree
Print a binary tree
Disambiguate a DNSS URL.
Same as reduce. But return str_ instead of str.
Make sure that targets is a valid list of targets.
Dispatch traffic received from the monitor to the appropriate handler.
Dispatches a query message
Called when a new heart is received.
Called when a heart failure occurs. Unregister the engine that failed.
Save task request to database
Save a message to the database
Send a connection request to the server
Unregister an engine that was previously registered.
Called when a heart is finished and the engine has successfully registered
Shutdown the connection to the server.
Purge results from the database
Extract content and buffers from record.
Get the history of messages and send the status
Perform a DB query.
Change the current working directory and return after the context exits
Decodes the stdout and stderr of a completed command and returns a completedcommand.
Run a command command command under the current working directory.
Dispatches the message to the appropriate handler.
Check if a message is from this kernel session
= directory )
Get the installed version of a package.
Squash all unicode objects into bytes.
Extract the header from a message.
Check packer and unpacker.
Create a message structure.
sign a message
Send a list of messages to a stream.
Recieve a message on a zmq socket
Save svg to file.
Convert svg to clipboard
Convert SVG string to QImage.
Return information about a model object.
Get docstring of an object.
Get source code for an object.
Get the argspec of a function or method.
Try to find a file for an object
Find the source line number of a Python object.
Get the default value of an object.
% ( h, ) )
print no info message
Prints the definition of the object obj to the terminal
Print source code of Python object.
Print the source file of the given object.
Formats given fields into a string.
Search for namespaces using a pattern.
Start a threaded twisted reactor run in a thread
Return a string representation of the XML document.
Returns the XML representation of the document
Load all modules in a set of packages
Invert a dictionary with keys matching a list of strings
Convert an object to a primitive Python object
Get a list of figure objects by number.
Print figure to terminal.
Select figure format.
Find the gui and matplotlib backend.
Activate a matplotlib backend.
Configure inline support for ipython notebooks.
start the trace
Stop the thread logging if it is running
Start a new tracer instance and add it to the tracers list
Installation tracing.
Start the collector.
Stop the tracer from accumulating traces.
Stops the tracers and prints the current stats.
Resume the tracers.
Returns the line data for a branch
Collect all exceptions in a list of remote exceptions.
Render the traceback of the exception id.
Start coverage reporting.
Return the canonical directory for the given morf
Determine the source file name for the given filename.
Determine whether a file should be traced and a reason string if so.
Check whether to trace filename for the given frame.
= '%s\n'
Look for packages in source_pkgs.
Start the actual measurement.
atexit callback to stop timer if auto_data is True
Get a list of regexes to exclude
Save data to file.
Combine all the paths in self. config. paths into a single path.
Harvest data if not measured.
Analysis of motion.
Run analysis on a codeunit.
Report summary information about the harvested data.
Annotate a set of files with tarballs
Report morfs with coverage in XML format.
Reload self. data from self. filename or self. url
Find command in PATH environment.
Run a shell command with subprocess.
Forward all read events from a socket to the push socket.
Send data to the server.
Find launcher class by name.
Start the daemon.
Build a launcher from a class name.
start the main loop and the main loop
Start the application.
Get the wxPython application installed in this Python shell
Is event loop running for wxPython
start event loop using wxPython
Return an instance of the qt4 application.
Is the event loop running for Qt4?
Start event loop running in Qt4.
Create a blank canvas
draw a cross with the given color on the screen
Draw a line with the given color on the screen.
Create an annotated image from a grayscale image.
Generate a random UUID.
Get a unique key from get request.
Get domain from URL.
Parse url query arguments.