convert xml data to url list
Download a file from a URL .
wrapper for sina download
Return a string representation of text .
Print text to stderr .
Print message to syslog .
Print a message to stdout .
Try to detect the OS .
get video info by xml
get m3u url
Convert a string to a Unicode string .
download a cbs website
Match a list of patterns to a list of strings .
parse a query param into a string
Parses a host and port into a tuple .
get the title by topic part
download by course topic topic part
a method to download json data by course
Returns true if the given task instance has a running task .
Clear the event buffer .
Return a connection to the connector
Get AWS access credentials from AWS
get a field by its name
Execute SQL on the database
Bulk dump an expert model
Execute the upload .
Print current state of a task .
Get a connection to the server .
Get instance details .
Create an instance .
Delete an instance .
Create a database .
Delete a database .
start proxy process
stop the proxy process
get the proxy version
Create a connection to the database
Retrieve a connection from the database
delete a connection
get sqlproxy runner runner
get the database hook
Clean up database hook .
Reserve TCP port .
Normalize a mlengine job id .
Get the code of an error .
Remove all dag runs from the database .
Delete all dag instances from the database .
Set all dags in the database
Print statistics about the task instance .
Check the status of all tasks .
Recursively create a directory .
Convert string to float if possible .
Make a timezone aware value .
Make a naive datetime . datetime .
Convert datetime to datetime
Get the druid connection
Get a Requests session .
Run a request against the server .
Check response .
Run a request and check the response .
Context manager for creating a session .
Drops all databases
Returns a string representation of an exception .
Get records from the database .
get a dataframe from the database
Execute the given SQL query .
Insert rows into a table .
Get a connection to the server
checks to see if collection exists
create a collection
Check to see if a database exists .
Create a database .
Delete a database
Delete a collection .
insert documents into a collection
Delete a document from the database
Get a document by document id
Execute a query against a collection .
Get a function by name .
Create a function in the specified location .
Update a function .
Uploads a function to a given location .
Deletes a function .
Return a list of depuses for this task .
Returns True if the requirement is met .
Return a list of failure reasons .
Parse s3 config file .
Get credentials for the specified region .
Get a connection to this vertica .
Flush buffer .
Check if a file location is a zip file .
Construct a task instance from the database .
Start the process .
Terminate manager .
Exit gracefully .
Start the worker process .
Run the main loop .
Start the worker process .
Refresh the dag dir list
print stats to stdout
Remove nonexistent import errors from the database .
Log file processing stats .
Set new file paths to new file paths .
Wait until all processors are finished .
End the running process .
Return a connection to the SSH server
Create a new transfer job .
Get information about a job .
Fetch all transfer jobs matching the filter
Update a transfer job .
Cancel a transfer operation .
Pause a transfer operation .
Resume a transfer operation .
Wait for transfer job to complete
Find tasks for a given task instance .
Get the number of available slots for this pool .
Run a command and return its output .
Allocate ids for the given partial keys .
Begin a transaction .
Commit a commit request
Fetch information about a project .
Rolls a transaction .
Execute a query against the database .
Get an operation by name .
Delete an existing operation .
Wait for an operation to complete .
Get the hostname of the host
Get a connection to the database
Get a list of template fields from a full name .
Link to a template field .
Cleanly dispose of ORM
Prepare the classpath for use in the system .
Check the current task id
Return the configuration variable .
Convert an alchemy model to a dictionary .
Split a list into chunks .
Apply a function fn to an iterable .
Chain a list of tasks .
Render a jinja2 log filename .
Return a connection to the server
Execute a operation .
convert a string into a deep string
Handle databricks .
run the pig command
Get celery task state .
Return the number of tasks per send process .
Get number of tasks per fetch process .
Get a connection to the server .
Get a job by job id .
Wait for a job to complete .
Create a version for a model
Set the default version for a model
Returns a list of version information for a given project and model name .
Delete a version of a project
Create a model in a project
Get a model by its name
Write batch data to DynamoDB
Integrate airflow plugins .
get the default executor
Get an executor by name .
Called when an error occurs .
Return a connection to the database
Trigger a dag .
Delete a dag .
Get information about a task .
Get all available pools .
Create a pool .
Create or update a container group .
Get the state of an instance .
Returns a list of messages for the specified instance .
Get logs from a resource group .
Delete a container group by name .
Check if container exists in the specified resource group .
Construct the ingest query string
Pushes a message to the pubsub channel
Returns a queryset of all task instances in the database .
Get task instance by task id .
Get the previous dagrun
Get the previous dagrun for this run .
Verify the integrity of the flow
Send a request and return a json response .
Convert airflow variables to airflow variables .
Conditionally trigger a dag run .
Query metric for time ago seconds since last seconds ago
get dag by dag id
Kill a given zombie .
Bag a dag .
Collect all DAGs in the given folder .
Return a report of the dagbag stats .
Add number of days to datetime .
Return a list of strings matching the regex pattern .
Return a tuple containing the contents of the file .
Clear task instances from a task instance .
Get the number of attempts to run .
Get current state of this task .
Log error in case of failure
Refresh the current task state from database .
Remove xcom data from the database .
Return a key that can be used for debugging purposes .
Return True if this task has dependents done .
Date of the next retry .
Return True if the service is ready for retry .
Return True if the task pool is empty .
Returns a Dagrun object for this Dagrun
Push a value to xcom .
Initialize the run context .
Closes the upload .
Get a connection to the server .
Start an instance .
Get instance template .
Wait for an operation to complete .
Check if a bucket exists .
Create a bucket .
Check if a prefix exists in a bucket .
List prefixes for a bucket .
List all keys in a bucket .
Check if an object exists
Get an object from S3
Read the contents of a key .
Return True if the given wildcard key exists in the bucket .
Get a wildcard key
Query cassandra .
Convert a value into a dictionary .
Get a speech connection object
Execute the query
Load entry point plugins .
Checks if a plugin object is valid .
Skip one or more tasks from a dag run .
return adl connection
Check if a file exists
Return a list of files in a directory .
Execute the query
Unzip a file .
return a cursor to the database
Build the metrics for a given function
Create a cgroup from a path .
Delete a cgroup
Make a request to the API
Return a connection to the server
Make a query to the server
Get the description of an object
Return a list of string fields for the given object
Get object from Salesforce .
Convert a column to a timestamp .
Get a MongoDB collection
Check if email has a mail attachment .
get email parts by name
Get file and payload .
Put records to firehose .
Determine the status of the deputations for this task .
Send an email to the given location .
wrapper around smtpmail
Return a string representation of value .
Check if a blob exists
Check to see if the given prefix matches the given prefix .
Create a blob from a string .
Read the contents of a file into a string
Delete a file from a container
Get ftplib connection
List all files in a directory
Store a file in a local path .
get mod time
Execute the webhook .
Return a connection to the service
Check if a directory exists .
Check if a file exists on the server .
Returns a list of directories and files and files in a bucket .
Creates a directory in the specified share directory .
Load a file from a local file .
Load a file from a string .
Get a connection to the storage server .
Download a file from a bucket
Upload a file to a bucket .
Check if a bucket exists .
Returns True if the object is updated after the given timestamp .
Delete an object from a bucket
Get the size of a blob in bytes
Get the crc32c32c32c32c32c32c32c32c
Get the md5 hash of an object
Check if secondary training status has changed .
Return the secondary training status message .
Upload a tar and a file to S3 .
Configure s3 resources
Check if s3 URL is valid .
Get a log connection object
Execute this job in a local file
Run all migrations offline
Run online migrations .
Delete an instance
Delete a table
Update a cluster
Prepare the command to be run
Convert a dictionary to a list of strings .
Returns True if table exists False otherwise .
Get a connection to the hive
get results from query
get the results from query
get dataframe from query and return as pandas dataframe
Get a connection to the database .
Get the auth token
bind parameters to an operation
Escape a string .
Cast a bq type to a string
Raise TypeError if value is not of expected type .
Return a bigquery connection to the database
Builds a service object .
Check to see if a table exists .
Cancel a running job .
Delete a table from the dataset
Update a table in a dataset .
Get a dataset .
Execute a SQL operation .
Execute an operation on the server .
Return the next page of data .
Query postgres database
Recursively make intermediate directories .
Run a command in a subprocess .
Remove config file .
Parse command line options .
build html header
build jsonchart string
Create a x axis
Create a y axis
Return sqlite3 connection
Get the last executed dag run .
Execute the message
JSON response .
Try to open a file .
Create a cache key for the request .
Get a connection to the video intel service .
Get API key
Get a connection to the server .
Execute the query against the API
Builds a payload from opsgenie
Execute the action
Get connection string .
Send a query to the server .
Get the status of a query execution .
Poll the status of a query .
Get pysftp connection
Handle a rate limit exception .
Get a table from the database
Get the location of a table in the database .
Get the status of a cluster
Delete a cluster .
Describe cluster snapshots .
Restore a backup from a cluster .
Create a cluster snapshot
Execute the method against Slack
create a job flow
Filter a list of filesize by size .
Filter out strings that match the given extensions .
Execute the query
Get pool from database .
Create a new pool .
Delete pool from database .
Convert dict to proto
Wait for an operation to complete .
Retrieve metadata about an operation .
Append label to cluster proto
get webhook endpoint
Build a Discord payload .
Execute the server .
Encrypt plaintext .
Get text to speech to speech .
Closes the upload if necessary .
Get environment variables .
Get k8s secrets
Get security context .
Get the link to the task
Starts the process .
Return a boolean indicating whether the process is done .
Exit gracefully .
Update import errors in the database .
Processes tasks in a dag .
Returns a dictionary mapping the number of dag ids to the number of tasks in the given states .
Change the state of a task instance to a new one .
Enqueue tasks with queued state .
Change state of tasks failed to run .
Process all events from the given dag bag .
Update the counters for the given status .
Manage the state of the executor .
Get a Dagrun object for the given run date .
Returns a dictionary mapping tasks to tasks that are scheduled to run .
Set failed dag runs to failed .
This callback is called when the connection is running .
Get a client for a project .
Get instance details .
Delete an instance
Delete a database .
Ping the attachment .
Prepare additional parameters .
Get a connection to the cluster
Check if a table exists .
Checks if a record exists in the database
Build track driver status
Submit a Spark submit command .
Process log lines from the server .
Process the spark status log
Get task runner for local task .
Wait for the task finished .
query mysql
Configure csv writer
Write the schema to a local file .
Returns a dict of column type and value
Map mysql type to mysql type
extract extra data as a string
Scale time units by unit .
Returns a string representation of the number of days ago .
Create a role
Delete a role by name
Get user roles .
Returns a set of all permissions
Return True if the user has a role
Returns True if permission name is in the permission menu .
delete all permissions
Merge permission and view menu
Update admin permissions .
Create permission vms for all dag s dag permissions
Get fernet from configuration .
Check if the condition is in the database .
 poke a queue
Return a connection to the remote host
Get a client s connection object .
Check whether the given HDFS path exists .
Get the connection to the pinot broker
Get the URI as a string .
Convert date to dict .
Convert time to a dictionary .
Get redis connection
Get a dataframe from the database
Execute SQL statement .
Set autocommit for the connection .
Serialize a cell into a string .
Return the current scheduler status
Return a cloudant connection object
Execute the Webhook .
Get Google Cloud Storage credentials .
Authenticate to Google .
List of unfinished tasks .
Prepare the connection to be executed
Normalize a tensor .
Crop an image
Flip an image to the left right .
Return the perspective of an image
Flip a vox image onto a pil image .
Adjust the brightness of an image .
Adjust the contrast of an image .
Increase the saturation of an image .
Convert image to grayscale .
Save a tensor to an image file .
Find all classes in a directory .
Reads the label file .
Reads matches files in a given directory .
Compute the accuracy of a tensor .
Download a file from a URL .
Returns a list of all subdirectories .
Returns a list of all files in the given root directory .
Download a file from Google Drive
Generate parameters for a given image .
Generate random params
Generate random parameters .
Generate random params .
Generate random parameters .
Download the tar archive
download all extracted images
Get current theme name .
Get a list of themes from a path .
Parse a search response
Compute the variance of a tensor .
Calculate joint log probability .
Build a custom variable
Return a masked version of x .
Returns the size of the event .
Evaluate all one hot - hot features .
Convert identifier to Tensor fn .
Compute the size of component params .
Build input pipeline .
Check if map values are valid .
Apply a function to the given arguments .
Call a function and return its gradient and gradient and gradient .
Concatenate two structures into one .
Create a leapfrog step .
Compute a state step .
Create a TFPLayer from a dictionary .
Convert x into a tensor .
Expand x to event rank .
The category probabilities .
Raise ImportError if tensorflow version is not installed .
Logistic regression .
Compute coverage type and labels .
Make positive axis tensor .
Remove dimension from x .
Compute the value of x .
Return the inverse of the tensor .
Construct a semilocal trend transition matrix .
Semilocal trend noise .
strain primes less than n
Returns the eps of a given dtype .
hager line search for a given value and gradient .
Return a string representation of a tensor .
Check if quadrature param is valid .
Interpolate a given grid along a dimension .
Linear interpolate by scale .
Concatenate vectors .
Compute log - sum of a vector .
Compute log - likelihood of a matrix .
Generate a matrix from a sequence of vectors .
Extracts the log probabilities of a distribution .
Choose the direction of the current state .
Call fn with optional arguments .
Build a tf . posterior .
Compute the moments of a masked time series tensor .
Compute the initial value of a masked time series tensor .
Build a mixture of posterior draws .
Get the range in the range .
Resolves distribution names to a function name .
Build the distribution of a model .
The entropy of the joint distribution .
Summarize a sequence of seqs .
Visualize reconstruction .
Visualize the qualitative analysis .
Summarize distribution parameters .
Summarize mean .
Compute the multivariate normal diagory .
Generate the zero state for the given batch size .
Call convolutional layer .
Sample the static prior from the given samples .
Return the shape of the batch .
Return the batch shape tensor .
Convert vector to square matrix size .
Returns the indices of the indices of the values along an axis .
Sort a list of values .
Compute ndtr .
Calculate log - ndtraced series .
Compute the standard deviation of x .
Return the joint log probability of a text message .
Returns True if index points are univariate marginal .
Get index points .
Return the outer squared difference between two arrays .
Compute the value of a function f .
Split a covariance into a list of marginalizations .
Return a string representation of a tensor .
The shape of the sample shape .
Return the sample shape .
Return the string representation of the sample .
Return a string representation of the tensor .
Return a uniform unit norm .
Log normalization .
Returns the common dtype of the args list .
Broadcast to target tensors .
PDF of the peak at peak
Calculate the effective sample size for a list of states .
Compute the potential scale reduction .
Returns the size of the input tensor .
Convert a secondary argument to a string if it is a list of states .
remove a field from the array
Merge two dictionaries .
Recursively flatten a nested tuple .
Return a dictionary of keyword arguments for a given function .
vggconv block .
Tests whether two states have no u turn .
Perform a leapfrog function fn and return the resulting value .
Calculate the joint log probability of current momentum .
Return a random bernoulli .
Convert a nested structure into a tensor .
Get a dictionary of tensor - like attributes for tensor .
Makes a mixture of random components .
Pack images into numpy array .
Download filename to directory .
Call a volatility function and return the gradients .
Create a broadcast volatility from a list of volatility parts .
Apply fn to x reshape input .
Call a function and return the result .
Compute the DTR of a tensor .
Return a list of normalized distributions .
Get a string representation of the topics .
Add ema control dependent loss .
Save images to a file .
Convert a dtype to a numpy dtype .
Returns the base dtype of dtype .
Check if dtype is bool .
Return True if dtype is complex .
Returns the maximum value of dtype .
Returns the string representation of dtype .
Returns the size of a given dtype .
Asserts that the given items are the same type as the same base type .
Replace a simplex with the best objective function .
Expand the objective function to expand the given objective function .
Shrink towards a minimum vertex .
Replace each dimension in x with a replacement .
prepare args for initializing the objective function
Prepare arguments for evaluation .
Build fake data .
Get the configuration for Keras .
Construct a tf . Vocabulary from a dict containing a list of strings .
Matrix multiplication .
Helper function for standard deviation .
pick a scalar condition
Finish log prob for one fiber .
Finish the prob for one fiber .
Rotate dimensions if necessary .
Check that a layer is valid .
Convert parameters into a dictionary of parameters .
Apply parameters to a new step .
Apply a function to a sequence of slices .
Returns the number of columns in x .
Get static predicate .
Return rank from shape .
Whether scale is diagonal .
Pad x with event ndims .
Ensures that x is not negative .
Try to get a static value if possible .
Returns a string representation of the given dtype .
Return a string representation of dtype .
Return the largest integer of a dtype .
Return the smallest integer representation of a datetime .
Return True if dt is an integer like int .
Generate a random seed .
Return the dimension size of x .
Helper function to validate the rightmost transposed ndims .
Check if perm is valid .
Compute event shape .
Return a list of dimensions of x .
Build a backward pass step .
Perform a kalman transition on a set of samples .
Propagate mean .
Propagate a covariance matrix to a covariance matrix .
Compute joint mean .
The joint covariances of the model .
Push latents to observations .
Log normalization .
The mode of the neural network .
Rotate a vector of samples .
Generate a sample of length n .
Return a copy of a function .
Remove all keys with value from dict .
Recursively replace all strings in a nested dict .
Get a string representation of a tensor .
Check if x is a namedtuple like x .
Choose a choice from an accepted tuple .
Call fn and gradients .
Check if shape is valid .
Return True if any of the converged or failed .
Update position value .
Check convergence of two objective function .
Create a broadcast to the given value .
Return harmonic number .
Get field from kernel results .
 variance scale .
Apply cond to tval .
Tests if a value is finite .
Returns the kernel results as a string .
Resnet block .
Create a deep exponential family .
Initialize params .
Returns the name of the registered mro function for a given type .
Read image from file .
Download and unzip all data sprites .
Create character .
Create a sequence from character and action metadata .
Create random sequence .
Flatten a list of kernels into a single list .
Return a flattened list of product kernels .
Build fake data .
Inserts the dimensions of x into the given dimension .
Make a list of non - negative integers .
Sort a tensor by its length .
Assert that x is at least ndims .
Batch gather function .
Broadcast event and samples to samples .
Asserts that the inverse of the inv of the given Hilbert space is valid .
Batch transpose a tensor .
Compute the sum of the input tensors .
Get the common dtype for a list of lists .
get initial state
Compute psd mask on x .
Get initial arguments .
Find the best value in a population .
Check if a value is converged .
Ensure that tensor is a list or tuple .
Convert to tf .
Build the input pipeline .
Plot generated images .
Convert a list of productions into a string .
Call the LSTM .
Calculate the input tensor .
Calculate the hat integral of x .
Calculate the hat integral of x .
Build a LU - solve assertion .
Create a sparse block diagonal tensor .
Try to validate a matrix .
Generate a list of strings for the given number of blocks .
Generate a tf . mask .
Create an array of integers
Return a list of strings that are within degrees of degrees .
Create a zero - dimensional multivariate normal diag .
Convert parameters to weights .
Build model from a model .
Build a seasonal transition matrix .
Build a seasonal transition noise .
Convert seasonal transition to seasonal state .
Ensure that the observation data is correct .
Add a new value to the scheduler .
Set the current value of the checkpoint
set gradient to gradclip
Optimize the value of the model
Set train summary
set summary
Sets the training data for the training dataset .
get the news20 content
downloads glove w2v file
call big ddl function
Evaluate the dataset .
Predict on x .
Read MNIST dataset and return as numpy array .
Preprocess mnist data .
Return the end trigger number .
Validate validation .
Return the value as a string .
Calls java function
Convert an RDD into a Java RDD .
Convert a native Python object to Java .
Get layer by name and activation name .
get label
Read image data from parquet file .
Write a file to disk .
Return a string representation of an image .
Get a list of tensors for this dataset .
Return a string representation of the tensor .
Get predictions for the given key .
Predict on x .
transforms the data
Save Keras model to json file .
build keras model
Predict class distributed with data .
Returns a list of tensors representing the weights .
Get the string representation of the evaluation .
Load torch . layer from path .
Load Keras model from json path .
Creates a string representation of the Jcriterion
Load weights from json file .
Load Keras data .
Build a keras model
return shape as string
get shape output shape
returns a string representation of the MNIST dataset
read data sets from a zip file
Get the full path to the bigDL classpath .
Check if Spark version is running
Export tensors to a dictionary .
Save a numpy array of tensors to a file .
Expand a tile along a dimension .
Simple simple attention function .
Compute the attention layer .
Get the log file .
Log a utterance to the log file .
Compute gradient updates for gradients .
read data by config
Interact with an agent .
Convert labels to onehot format .
Convert labels to one - hot encoded labels .
Configure tf . session .
Load the network configuration .
Get or set the momentum variable
Updates graph variables .
Round f1 to y
Process a word .
Generate a variational dropout .
Build the network .
Build pre - trained network .
Train the model on the data .
Predict on a batch of objects .
Turn a sentence into a vector .
Make a vector from a list of tags .
Advanced BLEU measure .
Verify a sc url
Extract certificates from a string
Verify a signed signature .
Verify the certificate chain url and verify it
Return a JSON representation of the container .
Returns the MSMS bot framework .
Return a list of telegram controls .
Return a string representation of the editor .
Calculate accuracy .
Round accuracy to the predicted accuracy .
Read a file .
make hello bot agent
Convert x to one hot encoding .
Pretty - print metrics .
Loads the model into the given path .
Save the current model to the given path .
Get a tf . train op .
Search for words in trie search .
Start the timer .
Handle a request .
Runs the given utterance and returns the response .
Generate the response template
Handles the incoming request .
Handle a launch request .
Handle unsupported configuration .
Pretty print the object .
Convert loss loss to pvl .
Build a model from a config file .
Run an interactive model .
Run inference on a model .
Read a text file .
Load a function from a string .
Get a function by its name .
Convert a label into a decay type .
Get the best value for a loss .
Encodes a list of tokens into a numpy array .
Read requirements from requirements file .
Calculate the log loss .
Format the details of an individual item .
Create an ecommerce agent
Run the ms bot server .
Download a file from a source URL .
Untar a tar file .
Recursively update a dict recursively .
Compute the MD5 hash of a URL .
Set a query parameter in a URL .
A lexa representation of the response .
JSON representation of the control .
Return the ms bot framework
Returns JSON representation of the control .
Generate ms bot framework .
Calculate the F1 of squad v1 .
Calculate the recall at k .
Check if the GPU is available .
Recursively parse a given configuration string .
Parse a JSON config file .
Expand ~astropy . path . expanduser .
Run the server .
Delete a conversation .
Refresh expired certificates .
Verify a signed request
Handle a request .
Load a class from a string .
Retrieve a model by its name .
Get a single model
Construct a GLM model from the given CO coefficients .
Create a string object from a list of key values .
Shutdown the server .
Returns True if connection is running False otherwise .
a list of all the h2o jobs
Get timezones .
Populate this object from another h2ocluster object .
Runs test func on the test func .
Get the summary of a key column
Delete a key from the device
Get model builders .
Validate parameters of a model
Get the metrics for a particular model and frame .
delete a model by key
Run one or more EC2 instances .
Terminate one or more instances .
Stop one or more instances .
Start one or more instances .
Reboot one or more instances .
Wait for a list of IPs to finish .
Get the full name of a function .
Return a string representation of the function arguments .
Wrap a string with a given number of characters .
Wait for the job to complete .
Train the model on the given data .
Get parameters as a string .
Prints a signal handler to stdout .
Remove the output directory
remove a sandbox sandbox
Scrape the port from the output file .
Try to scrape cloudsize from the output file .
Terminate the process .
Stop all nodes .
Get the IP of the client .
Get the port of the client .
Determine the length of the data frame .
H2o mean absolute error .
H2o mean squared error .
Calculate the median absolute error .
H2o explained variance .
Raises an exception if var is not a type .
Fail if v matches a regex .
Fail if v satisfies condition .
Check if var is of type vtype
Returns a human - readable string representation of the given type .
Check if a variable is valid .
Check if a value is a string .
Get the configuration as a string .
read config files
Generate a list of paths to log files .
Store model progress .
Recalculate model parameters .
Attempt to estimate the completion time given the current progress .
Guess the next poll interval .
Compute progress at time t .
get time at x target at x target
Draws text to the terminal .
Compute the width of all widgets .
Get the size of the terminal .
set encoding
Compute the encoder for the given frame .
Refresh the cache .
Return the type of a column
Return a formatted summary of the table .
describes this Frame
Return a copy of the first rows .
Build a multiline of this matrix .
Return a list of all levels in the tree .
Returns the number of levels in the tree
Set the level of the expression .
Set levels .
Rename columns .
Set the names of the expression .
Set the name of the table .
Returns True if the item is contained in the given item .
Return a modulo expression that computes n folds .
Stratified kfold .
Print the structure of the structure .
Pop a column from the list .
Concatenate string frames .
Convert a DataFrame to a string expression .
Bind data to the expression
Group the results by a column .
Fill missing values with missing values .
Return a string representation of the expression
Insert missing values in the DataFrame .
Return a string representation of the expression .
Split the string into a str .
Return a string with the strip removed .
The string representation of this DataFrame .
Compute the number of valid substrings for a given path to the corpus .
Return a string representation of the table
Subtracts a substring from the string
Get toupper expression .
Return an astroid . expr node as a string
Returns a string representation of the difference between columns .
Return a string representation of this instance
Return a string representation of the minute
Return a string representation of the expression .
Apply a function to each element of this expression .
Parse a string and return a code object .
Parse a file into a Python code .
Move the cursor to another position .
Unparse the parse tree .
Returns a list of the centers of the cluster
Calculate the standard deviation of the cell .
Make a request to the API .
Check version of the cluster .
Load a module from path .
Parse raw frame .
Deep copy of the data .
Get a model by its id
Get a Grid object from Grid
Get a single frame .
Download a pojo file .
Download a CSV file
make a demo function
Load a dataset .
Make an api - compatible metric
Upload a file to a destination
Check if frame id is valid .
Return a human readable string representation of size .
Return a slice normalized to the given total amount .
Check if a slice is valid .
Wait for the queue to complete .
Compute the deepfeatures of each model in the test data .
Print model summary .
Print the metric table .
Returns a list of hyperparameters for the given id
Get the hyperparameters for the given id
Get the types of the data in the frame
Utility function to display a scree plot
Translates a string to a lowercase letter .
Return a string with indent .
Main entry point for running java script .
Close session .
Get the session id .
Start logging .
Convert a payload into a string .
Parse a file payload and return a dict .
Log a start transaction .
Log end transaction .
Log a message to the logging destination .
Prints a message to stdout .
Get automl .
Download a pojo .
Download mojo file
Fits the model .
Apply scaling to x .
Inverse of the transform
extract true string from string content
a helper method to extract node name from each line in a list
find the build timeout in each line
try to find build failure
find build id in temp list
Extract information from a URL string
Parse a jupyter notebook file and add it to the file
Save the global dict to a pickle file .
Update the global summary file
Write string content to file .
write a string to a file
Load java messages to ignore .
Normalize an enum constant .
Find synonyms for a given word .
Poll the status bar .
Writes a POJO to a JPO file .
Fit the frame to a frame
Get the default params .
Returns a dictionary with the actual parameters .
Get the deep features of a scene .
Return a string representation of the scoring history
Print the status of the job .
returns a string representation of the model
Get the residual degrees of the model .
Returns a dictionary of coefficients for the model .
Download a pojo file .
Download mojo file .
Save the model details
Raise ValueError if the target is not valid .
Return list of cross validation models .
Wait for a keypress .
Return a string representation of the table .
pretty print the table
Search for a jar in the jar .
Generate a list of jar paths .
Write csv file .
Convert a path to a URI .
Return a list of all modules in the package .
Write documentation to outdir .
Return a list representation of the table .
Load a dictionary of strings into a dictionary
Add new messages to the message dict
save global dict to file
print all gokata to file
parse command line arguments
Print usage and exit
Find all files in a directory .
Find a magic string in a file .
Parse all the files in the given directory .
Transform data into a string
Summarize failed runs and add them to the summary dict
extracts informations from the log inconsistens
Plot the metrics in a matplotlib plot
Check if H2oO is available
Removes all tests to the specified number of times to keep .
Returns a dictionary with the list of endpoint groups .
Update the site model .
Convert json data to string
Comment a user .
Read credentials from a file .
Like a user .
Like the given hashtag .
check if user is not bot
Read a list from a file .
schedule the message to be sent
Tries to settle the message
Guess service info from path
Get the URI from a request .
Create a connection to the given request .
Perform a HTTP request .
Get the authorization server value .
Validate a URI .
Get the CLI profile .
Opens a http request .
set http timeout
Set request header .
get all response headers
Send a request to the server .
Get the status of the device .
Return the status of the HTTP request .
get the response body
Set the client certificate .
Send a HTTP request to the server .
Set a request header .
Send a request to the server .
Get the HTTP response body and body text .
Return a readable string with the given id and prefix .
Get the serialization name for a given element name .
Get properties from an XML node
Get children of node .
Recursively find namespaces from parent xml children
Convert xml string to a namespace object
Return a ServiceBusRegion instance from a XML string .
Convert a XML string to a namespace response
Convert xml string to object
Update a kb .
Build a package from a repository .
Perform a replace operation .
Get storage account properties .
Get the keys for a storage account .
Generates keys for a storage account .
Delete a storage account .
Check availability of a storage account .
Get the properties of a hosted service .
Delete a hosted service .
Delete a deployment by name .
Swaps the specified deployment with the given name .
Update the status of a deployed deployment .
Walk an upgrade domain .
Reboot a role instance .
Delete one or more role instances from a service .
Check availability of a hosted service .
Lists certificates for a given service .
Get a specific certificate .
Add a certificate to the subscription .
Delete a service certificate .
Get the management certificate for this subscription .
Add a management certificate to this subscription .
Delete a management certificate .
Get the properties of an affinity group .
Creates a new affinity group .
Deletes the specified affinity group .
Lists all subscription operations .
Delete a reserved ip address .
Associate a reserved ip with a service .
Disassociate a reserved IP address .
Get a reserved IP address .
Get a role by deployment name .
Delete a role from a service and deployment .
Start a role instance .
Start one or more roles .
Restart a role instance .
Add a dns server to the appliance .
Update a DNS server .
Delete a DNS server .
Lists the versions of a resource extension .
Unplicate a vm image .
Share a virtual machine image with permission .
Delete a virtual machine image
Returns a list of VM images .
Delete an OS image
Get a data disk .
Delete a data disk .
Update a disk .
Deletes a disk .
Build receiver .
Generate a service instance from a connection string .
List subscriptions for a topic .
Parse an async operation result .
Perform a GET request
Perform an HTTP PUT request .
Get the status of an operation .
Update the header of the request .
Parse travis build package .
Returns a list of regions .
Returns a list of namespaces .
Get a namespace by name .
Creates a new namespace for the specified service .
Delete a namespace .
Check the availability of a named service .
Fetches a list of topics .
List notification hubs .
Get a list of Relays .
Get metrics rollups .
Get metrics rollups for a topic .
Get metrics rollups for a given hub
Get metrics rollups for a relay .
Create a new Jinja2 environment .
Create a new venv with the given packages .
Creates a new SQL Server .
Set server password .
List quotas for a server .
Delete a firewall rule .
List firewall rules .
List all service objectives for a server .
Delete a database
List databases .
Get session state .
Set the session state .
Validate a challenge string .
Convert an error into an error handler function .
Create a queue .
Delete a queue .
Get a specific queue .
Create a topic .
Get a specific topic .
Create a rule for a topic .
Get a rule by topic .
Fetch rules for a topic and subscription .
Create a new subscription .
Get a specific subscription .
Returns a list of all subscriptions in the specified topic .
Send a message to a specific topic .
Unlock a subscription message .
Send a batch message to a queue .
Unlock a queue message .
Receive a message from a queue .
Receive a subscription message .
Create an event hub .
Update an event hub .
Get an event hub .
Send an event to a hub
Update the header of a request .
Generate an authorization token .
Check if token is expired .
Get a token from the API .
update request path with query string
Deletes the message from the queue .
Unlock the message queue .
Renew lock on the broker
Add headers to the request .
Return a JSON - serializable version of the batch .
Raise an exception with an appropriate error .
Handle a redirect request .
Set the profile to use .
Deletes a queue .
Deletes a topic .
Parse a connection string .
Get the properties of the entity .
Returns a boolean indicating whether the lock was locked .
Process results from a queue .
This function is called every time a task in the results queue .
Convert a configuration dictionary into a string .
Create a message from an HTTP response
Convert an ETree element into a rule object .
Convert an Azure queue element to queue .
Convert an ETree element to a topic .
Convert an ETree element into a subscription object .
Parse enum results list
Get properties from an element .
List queues in the service bus .
List all known topics .
Get a specific site .
Delete a website .
Update a website
Restart the specified website .
Get historical usage metrics for a given website .
Get the metric definitions for a website .
Get publish profile XML .
Get publish profile .
Create a cloud service .
Check the availability of a particular job collection .
Get the contents of a job collection .
Cancel scheduled messages .
Reconnect to the server .
Get a certificate from the publish settings path .
Load cookies from the session .
Return the terminal width .
Get cut prefix from string .
print a string to the terminal
Format a file size .
Format elapsed time .
Create a status line
Print progress information .
Iterate over segment numbers .
Yield the segments of the attachment
Wait for the event to complete .
Adds a segment to the queue .
Put a value into the queue .
Parse PV SWF request .
Extract the nonce from the HTTP response .
Get vpid from a url
Parse a JSON string .
Parse XML .
Parse QSL query data .
Searches for a given key in a nested dictionary
Iterate through all tags in HTML .
Determine the encoding of a sample .
Parse a JSON response .
Parse XML response .
Parse cookies .
Parse headers .
Parse query parameters .
Return a string representation of the message .
Create a new log record .
Login to the user .
Load a support plugin .
Update the query string with the given query parameters .
Yield chunks from file .
Returns a list of required dependencies for the given argument .
Checks if file output is in a terminal .
create output handler
create an http server
Yield HTTP requests .
Output a stream to a file .
Open a file descriptor and return the stream .
Write stream to file .
Read data from a stream .
Handle a stream .
Fetch streams from plugin .
Fetches a list of streams from the specified interval .
Resolves a stream name to a name
Prints the available plugin plugins .
Authenticate with Twitch .
load plugins from a directory
Setup HTTP session
Load the plugins specified in the given directory .
Log current version .
Get the stream id from a text .
Parse iframe .
get a value from the configuration
Set plugin option .
Get the value of a plugin option .
Resolve a URL .
Load plugins from a given path .
Return a string representation of hours and seconds .
Find a player s url
Load a string from data .
Determine the player name for a given command .
get stream id from html
get stream info from html
Login to the plugin
Add a function to the map .
Make an API call to the API .
Start a new session
Get information about a media .
Create API object .
Return a string representation of a character .
Read n bytes .
Return a string representation of the code .
Return an explanation of the code .
Set decode table .
Set the length of the sequence .
Read a length tuple from the stream .
Return an explanation for this feature .
Get a value from the array .
Return the span of the given row .
Return the integer value at index .
Get the mnemonic for a symbol .
Get the mnemonic for a given index .
Compile the actions table
Evaluate the given action .
Make a string representation of the hex data .
parse the metablock length
print uncompressed bytes
Set block type .
Convert a sequence of integers into an integer array .
Read the prefix array .
Monkey patch tf . hidden .
add a proper vcenter to the model
gets a vaEx application
Open a list of filenames .
Convenience function for reading a vex . samp
Create a dataset from an astropy table .
Convert scalar values into a single array .
Load data from a CSV file .
Return a URL to a VEX server .
Variant of zeldovich .
Concatenate a list of strings
Return a string representing the range of start to stop .
Open a dataset .
Evaluate an expression on the dataset
Returns a set of variables that are used in the selection .
sort the pairs by ncol
wait for changes to queue
Open OS control file .
Write a file - like object .
Split arrays into multiple arrays .
Calculate the median of an expression .
Create a 2D plot
Draw a 3D plot of the data .
Get the dtype of the column .
Get private directory
delete virtual meta
Write metadata to a file
Write metadata to disk
Set a variable .
Evaluate a variable .
Evaluate a selection mask .
Return a dictionary representation of the table .
Create a new DataFrame with the contents of the DataFrame .
Convert to arrow table
Convert to astropy . table
Add a column to the table .
rename a column
add virtual columns to cartesian
Add virtual columns to the matrix .
add virtual columns to cartesian
Add a rotation matrix to the matrix .
Add spherical columns to cartesian .
Add virtual columns to the cube .
Add a new column to the model
Delete a virtual column .
Add a new variable to the table .
Deletes a variable
Return the last n elements of this array .
Print the head and tail of the table .
catenate two lists
Set the current row .
Trim the columns from the DataFrame to the original dataframe .
Return a new DataFrame with only the given indices .
Return a string representation of the text .
str - > undo
redo method to redo the selection changed
Return True if the current selection can be redo .
Selects a rectangle .
Selects a circle with the given coordinates .
Create a new selection
Find valid name
Return a graphviz representation of the table .
Add categorical labels to a column .
Encode a column in the DataFrame .
String representation of the data
Length of the array
Stack two DataFrames together .
Concatenate two DataFrames .
Add a column to the dataframe .
Patch a data frame to a data frame .
Fill missing values with given value .
Return a string representation of an array .
Return a numpy . recarray with all elements in the dictionary
Write properties to a file .
Write comment to file .
Write a property to a file .
Iterate over all newlines in a file - like object .
Print the versions of the current python version .
Rename a keyword .
Set the fftlib library .
Load beat track .
Adjust the pitch of an audio file .
Convert a set of frequencies to melis .
Helper function to convert log - likelihood to a frequency domain .
Return a string of Fourier Transform frequencies .
String - Time Fourier Transform fft using cqt .
Trim n bins to n bins
Compute cqt response .
Calculate early downsampling count .
Early downsampling .
Generate a uniform transition matrix .
Set the current image to plot .
Check if axes is valid .
Helper function to scale axes .
Calculate the FFT of a 2 - dimensional Hilbert space .
Generate a Mel frequency basis .
Calculate the ht frequencies for a chord .
Calculate the chroma for each octave octave .
Generate a coordinate time .
Compute time - stretch of time .
Calculate beat track for a given audio file .
strain nn filter
Get window bandwidth .
Fill a sliding window with window shape .
Calculate the Jaccard rank .
Matches interval overlaps between candidates to the given interval .
Match two intervals .
Load audio file .
Convert audio to mono .
Returns a set of files matching the given extensions .
Use librosa to stretch the audio file .
Parse command line arguments .
Use librosa to generate the harmonic coefficients of a given file .
Compute a beat track for a given onset envelope .
Compute beat local score .
Return a string representing the beat track .
Returns the last beat of the given cumulated score .
Calculate onset detection .
Return a valid integer .
Read from the VAP .
Get a frame from the buffer .
write image to file
Compute a progress bar for each task .
Flip an image to an numpy array .
Rotate image .
Clip a bounding box to the given image shape .
Scale a bounding box of bounding boxes .
Add padding to an image .
Impad to multiple images .
Scale size of size
Resize an image .
resize an image to another image
Register a file handler .
Convert a priority value to a string .
Dequantize an array to a given number of levels .
display an image
Dequantize flow between two tensors .
Load checkpoint from file .
Convert weights to cpu .
Save a checkpoint .
Initialize optimizer .
initialize logger
List of current optimizer parameters .
Register a hook .
Run the pipeline .
Register training hooks .
Write a video to a file .
Concatenate a list of videos into a single file .
Read a list of strings from a file .
Read a dictionary from a file .
3x3 convolution .
read image data
Creates an ANTsImage from a byte string
Write image to file .
Convert color to grayscale .
RGB to RGB .
Cast inputs to dst type .
Test if seq is of expected type .
Slice a list into a single list .
Calculate the average of the values .
Apply scatter on input devices .
Convert a color value to a tuple .
check timer id
Start the timer .
Returns the elapsed time since the timer started .
Return the elapsed time since last check .
Display a flow showing the flow in a window .
Make a color wheel .
Compute the accuracy of a tensor .
Convert inputs to kwargs .
Make a request to the server
Return the JSON as JSON .
Return text as text .
Handle a request callback .
Perform multiple requests .
Perform a HTTP request .
Start the server .
Convert a task v2 format to a string .
Return the distribution name and version .
Return the archive basename
Add requirements to the metadata .
Create a text message .
Creates an activity message .
Build an attachment .
Create an attachment .
Create an attachment .
Setter for telemetry client .
Read one or more keys .
Write changes to the store .
Delete one or more keys .
Create a store item .
Create dict from si .
Sanitize a key .
Create db and container
Get or create a database .
Get or create a container .
Create a Qna event .
Get a conversation reference for activity .
Get the name of a step .
Checks if the given button supports suggested actions .
Check if a card supports card actions .
Get the channel id .
Return token from an auth header
Create a hero card attachment .
Set control .
Return a copy of this object .
Convert a QASTA instruction into a string .
Return the QASM instruction .
Run a circuit on all the gate sets .
Perform a pass of the given pass .
Returns a list of all the names in the working list .
Returns a dictionary containing the pass of the flow controller .
Create a flow controller .
Build a u .
Return parameters for single gate .
Return a single - gate matrix .
Convert a circuit to dag .
Function to fit the exp function
Function to fit the OSC fit function
Plot coherence .
shape rb data
Plots Rb data
Compose 3 - dimensional ui and lambda functions
Convert yz coordinates to zyz coordinates .
Validate a quantum state .
Trims the background of the given image .
Returns the span of the given gate .
Compute the layout for a given dag .
Create a new barrier .
Process a bit id node .
Process a gate .
Process a C NOT condition .
Process a single measure .
Process if condition .
Create DAG op .
Get the duration of a channel .
Get the start time of a channel .
Return the stop time of a channel .
Iterate over all instruction instructions in the scheduler .
Dump extra data to a string
load additional data
Validate the model against the schema .
Return a string representation of the model
Load a model from a dictionary .
Calculate the Fourier Transform for a given quadrant .
Chops a 1 - dimensional array and removes it from the given epsilon .
Return the outer product of two vectors .
Calculate the concurrence of a state .
Calculate the Shannon entropy of a state .
Return the mutual information of the state .
The entropy of a state .
Calculates the entropy of a qubit .
Flatten a schedule into a string .
Shift a schedule by a given time .
Insert a new schedule into a schedule .
Append a new schedule to parent .
Create a U3 gate .
Return the backend status .
Start the simulation .
r Returns a string representing the time remaining .
Disassemble a QObject into a list of circuits .
Returns the hamming distance between two strings .
Return a quaternion representing the rotation about the given axis .
Return a quaternion from euler angles .
Normalize this quaternion .
Convert this vector to a numpy matrix .
Convert the vector to a z - z - z - z - z - z - z -
Processes a list of strings to keep the number of occurrences .
Check if value is a collection type .
check the range j
Check if a matrix is a square matrix .
Check if a matrix is diagonal .
Check if op is symmetric matrix .
Check if a matrix is a Hermitian matrix .
Test if a matrix is positive semidefinite .
Check if a matrix is identity matrix .
Check if a matrix is a unitary matrix .
convert input to choi
convert input to superoperator
Convert str to str
Convert a string representation of the input data to a chi - operator .
Convert a string representation of a string to a PTM operator .
Convert a string representation of a tensor to a tensor .
Convert a string representation of an operator to an operator .
Convert an operator to a tensor .
strain to operator
Convert data to choi .
Reshuffle input to the superop .
Convert a list of kraus operators into a matrix .
Convert a choi matrix to a Krais operator .
Convert stines to kraus .
Convert stines to choi .
Convert a list of kraus pairs to stines .
Convert a set of kraus operators to a superoperator .
Translates the input tensor to a choider .
Transform the input data to chi - decomposition .
Rrenravel two matrices .
Compute the transform from a data matrix .
Raise error if the input dim is not the same .
Hide tick lines and labels and labels
set the x and y label for the data
Clears the object .
Add vectors to the vector
Render the plot .
Plot the front .
Renders the plot .
Get a string representing the top of the layer .
The mid content of the layer .
Gets the bot s text
The length of the sentence .
Return the parameters for an instruction .
Return the label for a given box .
Return a string representation of this node .
Add deprecation warnings .
Returns information about the virtual machine .
Check if a host exists on the given host .
strain checker
Return a constant for the given times .
Return a square matrix with the given amplitude .
Return a triangle of a triangle .
Return the cosine of the given times .
Gaussian derivation
Generate a square of the given square .
The pass manager for the pass manager .
Default pass manager for simulator .
Returns True if the given register is a quantum register .
Return a copy of this instance .
Return the inverse of the circuit .
Append an instruction to the instruction table .
Raise an exception if the qubits are not the same .
Check that the qubits of the given qubits are valid .
Check that the cargs are valid .
check that two registers are compatible
Return the QASM assembly instruction .
The number of bytes in the list .
Width of all registers
Returns a dictionary containing the number of operations in the database .
Return a new circuit with new parameters removed .
Associate a parameter with a value .
Map free gates in layout .
Calculate the distance between gates .
Returns the score of a step .
Create a copy of the circuit with the given coupling map .
Map a layout gate to a string .
Return a list of swaps between two layouts .
Run the circuit .
Add a physical qubit to the graph .
Add an edge to the graph .
Return a subgraph of the coupling map .
A list of all physical qubits in the graph .
Returns whether the graph is weakly connected .
Compute the distance matrix for the shortest path .
Return the distance between two physical qubits .
Creates a cu1 gate .
Returns the inverse of the instruction .
Test if the gate is q .
If classical instruction is classical .
Subscribe to an event .
Calls all registered subscribers .
Remove a callback from an event .
Publish an event to the broker .
Add the given parameters to the matrix .
define the circuit definition .
Returns a string representing the circuit to uncompute .
Calculate the bloch angles between two complex sets .
Multiplexer .
Return True if value is a virtual machine .
Returns a copy of this layout
Combine this layout into an edge map .
Build a Tffoli gate .
Insert a schedule into the schedule
Check if the given name is fenced .
Convert a list of gates into integer indices .
Run the transformation on a given dag .
Greedy function for pauli operators
Construct a boolean array from label .
Init from boolean values .
Return the Pauli operator acting on the Pauli operator .
Convert to operator
Converts this circuit into an instruction string .
Set the z - value of self .
set x to x
Append a Pauli operator .
Removes qubits from the matrix .
Generate a random string .
Build a Pauli operator .
get the outcome of a qubit
Add a sample measure to the machine .
Add QASM measure .
Add a qubit to the model .
Validate the initial state vector .
Initialize the initial state .
Get the state vector of the circuit .
Validate that the experiment is valid .
Run a job .
Raise error if the circuit is invalid .
Ensure that the initial unitary is correct .
Initialize the unitary .
Get a unitary representation of the unitary .
Run a job .
Validates that the vehicle is valid .
Return True if obj is bit value .
Generate the layout for a given dag .
Check if this interval has overlap .
Shift the interval by a given amount .
Shift the timeslot by a given amount .
Returns the start time of the given channels .
Return the stop time of a channel .
Check if the given timeslots are mergeable .
Merge the timeslots into a single one .
Shift the timeslot by a given amount .
Report the issue as a comment .
a method to display a state of a state .
Build a rzz expression .
Apply a cswap gate between two sets of arguments .
Create a program graph from the given dag .
Select the next program edge .
Select the cost of the gate .
Select the best qubit to use .
Returns a list of instruction instructions .
The inverse of the gate .
Evaluate the gate if any .
Modify the gate .
Returns True if the matrix is a unitary matrix .
Creates a conjugate operator .
Returns a transpose of the data .
Return the power of the input tensor .
The shape of the output shape .
Convert a circuit into an operator .
Compute the Mapper layer for a single layer .
Separate bitstring into pieces .
format memory as a string
format memory as a string
Format memory .
Formats a counts dictionary
Format a state vector into a complex complex vector .
Format a complex number of basis functions into a complex complex type .
Submit the operation to the scheduler .
Status of the job .
Returns True if loq is within bounds .
Generate HTML for a single bloch .
Run the given dag .
Chooses k - means k .
Generate lex index based on lexicographical indices .
Returns a list of unique hardware backends
return the string representation of the operation
Generate a sampled pulse .
Generate a new zero pulse .
Sample a square .
Generate a sample of sawtooth pulse .
Sample a triangle .
Generate a sample of cosine .
Sample a sin pulse .
Generate a sample of a Gaussian .
Generate a sample of a gaussian derivation .
Convert the tree to a string .
Get a backend instance .
Remove all operations named opname .
Add a quantum register .
Add a classical register .
Add wire to the graph
r Check condition for condition .
get all bits in condition
Add a node to the graph .
Apply an operation to the graph .
Check that the wiremap is valid .
Map condition in wire map .
Extend this gate with another gate .
Check that a list of wires are valid .
Returns a dictionary mapping node names to pred and succes .
Return the full prediction map for the given circuit map .
Return a lexicographical topological sort order .
Get all edges in the network .
Get all nodes that match the given op .
The list of gate nodes .
Get all nodes that match the given names .
Returns a list of q gates .
Return the list of predecessors of node .
Returns a list of predecessors of a node .
Get all the ancestors of a node .
Return the successors of a node .
Remove an op node from the graph .
Removes all ancestors of node
Remove descendants of node .
Removes all non - ancestors of node from the multi - graph .
Removes all descendants of node from node
Generate a serialization layer .
Get a list of multigraph layers .
Return all nodes connected to the wire
Count the number of operations in this graph .
Get a string representation of this node .
Create a tomography basis from a basis set .
Apply Pauli measure gates to the gate .
Create a dictionary of tomography data .
Evaluate a set of operations on a basis set .
Compute the linear inverse of the given frequencies .
Calculate the eigenvalue of an rho matrix .
Return a string representation of the Wigner data .
Apply the operation to the circuit .
Run a checker that checks the status of a job .
Monitor the status of a job .
Simplify u3 .
Apply the transformation to the graph .
Builds the job history .
Add a 3 - dimensional 3 - dimensional 3 - dimensional 3 - dimensional 3 matrix .
Build a Bell circuit .
Transpile the given circuit .
The drive in this channel .
Current control channel .
Return the measure of this channel .
Get the channel name .
Return input state .
Remove all log handlers from the Qiskit logger
Displays the HTML of a state hinton state .
Handle input .
Pop the lexer from the stack .
Push a lexer to the stack .
Get the bound method of a given instruction .
Convert an acquire instruction into a QObject instance .
Convert frame change to QObject .
convert persistent value to persistent value
Convert a drive command to a drive .
Convert a snapshot to a SQL snapshot
Update the annotations of a pulse .
Convert a DAG to a Quantum circuit .
Make a dictionary observable to be observable .
Update an existing symtab .
Verify that the declared bit is a boolean .
Raise an error if the exp list is not valid .
Raises an error if the object is not a gate .
Verify that the register object is valid .
Recursively verify the structure of an object .
Find the column in the input string .
Set debug flag .
Parses the input and returns a QASM string .
Parse the input data .
Parse QASM code .
Add a crz gate .
Create a basis state .
Return the density matrix of the given state .
Calculate the purity of a state .
Run the DAG process .
Remove all nodes from the given dag .
Get a named backend
The shape of the bipartite shape .
Get the register specs and indices of the given bit labels .
Return a truncated float .
Returns a string representation of the image .
Calculate depth of the image .
Get the width and width of the screen
Load schema from file .
Load schemas and validators
Generate a random unitary matrix .
Generate a ginibre matrix .
Generate a random density density matrix .
Generate a random density bures
Returns a list of strings representing the function calls .
Return the power of the input tensor .
Compose this subsystem into another .
Convert an instruction into a superoperator .
Run the given dag .
Apply the decomposition of a dag .
define the quantum gate definition
Check type of value .
Check type of container .
Set the value of the class atol .
Raise an exception if the class is not valid .
Reshape this tensor .
Return a tuple of input dimensions .
Return a tuple of output dimensions .
Return a copy of this model .
Return the power of this vector .
Automatically set the dims to be used by qiskit .
Deserialize string into a string .
Serialize the value to a string .
Check that the value is in the choices field .
Compute the SVD of a vector .
Returns a string representation of the state .
Set the label of the message .
Return True if this operator is unitary .
Convert to operator .
Return a string representation of the circuit .
Convert an input to a string .
Monkey patch django . strftime . strftime
Check if given tokens are valid .
Split a string into a list of tokens .
Parse a date string .
Return True if the given date is applicable .
Return a string representation of a date .
Parse date string using date formats .
Convert exc to net number .
Convert an exception to an integer number .
Compose the configuration file
Get info about all streams
Log stdout and stderr to stdout .
Expand the given time string into a given amount .
Read config from config file
Reads the stepper info from the stepper file
Writes the cached settings to a file
make stpd file
Create a composite schedule from a schedule .
Get rps at time t .
Execute a command and return its exit code .
Decodes the monitoring data .
Create labels for the given label .
Publish the given key and value .
Count the number of matched codes in codes dict .
Stop the worker threads .
feed stpd file
Add user - defined options .
Configure the plugin .
Collect data from the queue .
Notify listeners for data and stats .
Attempt to discover jmeter UDP port .
Terminate the process .
Read a list of lines from a CSV file .
Create a criterion from a string .
Parse xml file and return a list of configs
create a startup config file
Check if the disk is free
check memcached memory
Get the right line output
Add a widget to the list
Fills the given string with padding and padding .
Return the length of a line in a string .
Add info widget .
Makes a request to the writer
load plugins
Get the name of a given plugin class .
Get a list of plugins of a given type .
Copies a file to the artifacts dir
Add an artifact file .
Create a temporary file .
Load configuration files .
Write configuration to file .
Get a list of options from a section .
Find the sections that start with the given prefix .
Decode stat data chunk
Prepares the host and artifact configuration files .
Poll the agents received by the agent
Send collected data to all listeners
Try to detect configuration .
Convert a dictionary of values to sign .
Subscribe to the polygon
Start the hub .
Close the Widget .
Perform an HTTP request .
Submit a new order .
Get position of symbol
Get a list of assets .
Check if a dict has a key and value type .
Get a dict parameter for an object .
Create an event logger .
Create a JSON event logger .
Read configuration from a file .
Get a pipeline by name .
Get all pipeline definitions .
Get next event from queue .
Execute a pipeline through a pipeline .
Wait for all processes to complete .
Define a field on a dagster type .
Build the pipeline .
Get a solid named name .
Construct a list of publish commands .
set the current version
Wrap text with given prefix .
Download a file from s3
Upload a file to S3
Raise a user code exception with a user code exception .
Create a directory .
A context manager that creates a user code in a context manager .
Create a log object for the given run .
Returns a boolean indicating whether all the steps have been completed .
Return True if this step is skipped .
Returns a list of transformed values .
Return the failure data of the input expectations .
Return True if config value is valid .
Check if a config value is a valid table
Concatenate a sequence of solid names into a single order .
Get the connection parameters from the database .
Get a connection to the database
Creates a cursor .
Closes the connection to the database .
Convert a model dict to a python object .
Convert value to mdl .
Returns a formfield for the form field
Convert a value to a mdl string .
Apply rel filters to a queryset
Compute a uniform nfps .
Compute real frequency real number .
Return the optimal optimal partition for a given size .
Calculate the two numbers
Initialize the cache for the given seed and hashvalues .
Calculate the size of the bytes in bytes .
Merge the contents of another Hash .
Return the union of the given lists .
Get the keys of a given hash .
Calculate the minimum hash value of the dataset .
Remove a value from the cache
Count the number of nonzero values .
Merge self with other .
Clear the register .
Calculate apk .
Compute the K - 1 - D map between actual and predicted labels .
Index of the hashtable .
Query the list of keys in the sorted set .
Close the connection to the database .
Get user data .
Set the state of the social login
Select text from text .
Parse a scoped selector .
Parse a single statement .
Try to parse a value from the parser .
Advance the current line by line .
Try to parse a configurable reference .
Finish session after create session .
Ensures that the given function is decorated with the wrapped function .
Return a string representation of the given value .
Clear the configuration .
Determine if a function has a parameter .
Get a cached argspec for a function .
Get the positional parameter names of a function .
Parse a config file .
Parse the given string and return the parsed configuration .
Iterate over flattened values .
Iterate through all configurable references in the configuration .
Create a string constant for the given enum .
Get all matches of the given partial selector .
Return the minified selector as a string .
Transform a search query into a string .
Parse the retry after a response .
Validate a value .
Return a string representation of the resource .
Validate and set value
Get a thing by idx
Initialize the context manager .
Set the default headers .
Prepare the HTTP request header .
Get information about a thing .
POST a thing
Remove a thing and action .
Starts the server .
Return a string representation of the action .
Start the thing .
Set the status of the thing to completed .
Return a string representation of the event .
Get the IP address .
Returns a list of all ip addresses
Set the value of the field .
Emits an external update .
Return a string representation of the object .
Set the href prefix for all properties .
Returns a string describing the property descriptions .
Returns a list of descriptions of the given action .
Returns a list of event descriptions .
Add a property
Remove a property
Get the value of a property .
Returns a dictionary with the name and value .
Set the value of the property named name
Get action by name and id .
Add an event to the list .
Add an available event .
Perform action with given name .
Remove an action .
Add an available action .
remove subscriber from ws
Add a subscriber to a named event subscriber .
remove an event subscriber
Notify subscribers of property
Send an action notification .
Send a message to all subscribed events .
Annotate model fields with annotations .
Perform an update statement .
Insert a record into the model
Insert and return the model
Build the compiler for the insert query .
Check if a field is a magic field
Custom save method .
Called when a model is deleted .
Return a string representation of the expression .
Return a string representation of the record .
Return a new version of this record .
Add join conditions to the table .
Checks if a field is a hstore field .
Creates an hstore required for a given table .
Rename an existing table field in a table .
Drop an hstore constraint for a given field .
Generate a constraint name for a constraint field .
Create the sqlite create index
Get the backend base from settings . py
Prepare database .
Prepare value for serialization .
Return the return value for the query
Returns a list of sql statements that can be inserted into the query .
Rewrite the insert .
Rewrite insert fields into the sql statement
writes sql to insert
Get field by name .
Formats the field name for a given field .
Format the value of a field .
Create an hstore unique constraint for a field .
Rename an item in a table .
Drops the unique constraint for the given field .
Generate unique constraint name .
Iterate over unique keys of a field .
Add a double condition .
Rewrite the query with extra conditions .
str - > tdist level
Return the sample variance .
Compute t - score of two samples .
Check if two samples are significant .
Topological sort a list of nodes .
Generate a sequence of queens .
Pick a position from the board .
Run a random playout .
Remove benchmarks that are less than base version .
Expand a benchmark name into a set of benchmarks .
Returns a string with the string representation of the regex
Get the domain of the path .
Fetch posts .
Parse the raw posts into a generator .
Fetch information about a user .
Fetch a list of items .
Fetch and parse feed .
Setup command argument parser .
Fetch items from the given category .
Returns the number of bugs in a given date .
Fetch comments .
Get a list of bug ids .
Fetch a list of attachments
Fetch a list of merge requests
Get a paginated list of merges .
Get the contents of a merge .
Get the merge version of a merge .
Fetch a version of a merge .
Get a list of notes for a item and item .
Get emoji list .
Get a list of emoji for a item .
Returns the time to reset the rate limit .
Get a list of items from the repository
Initialise the rate limit
Setup command line arguments .
Extract items from date and timestamp .
Extract the metadata for a user .
Returns the number of members of a conversation .
Get information about a given channel
Get user info
Setup command argument parser .
Get the timestamp of the last modification timestamp .
parse a csv file into a list
Parse bugs details into a generator
Logout from the server .
Returns metadata about the bug
Get a list of uglist bugs .
Get a list of bug ids
Get bug activity
Fetch events from a given category .
Fetch events from a given category .
Get events from a group .
Get all comments for a group .
Retrieve all vrs in a group .
fetch a question
Fetch comments for a given question
convert a question into a dictionary
Fetch raw API questions
Get the html for a question
Get comments .
parse the question container
Parse the number of pages in HTML .
parses user info
Fetch reviews for given category .
Parses raw data into a list of reviews
Fetch latest reviews from GitHub .
Get the version of gerrit server .
Get the reviews of the last item .
Get the next group item .
Execute a command from the archive
Execute a command on the remote server .
Setup command line arguments .
Fetch data for given issue id
Fetch issue attachments for an issue .
Fetch messages from issue .
Fetch activities for an issue .
Fetch user data
Get user by name .
Get information about an issue
Fetch a collection of items for an issue .
Fetch a list of items from the server
Get the user s subscriptions
Find the group id
Perform a GET request .
Setup command argument parser .
Find all backends in a given top package .
Fetch metadata from archive
Filter out classified data .
Parse arguments and return a parsed string .
Set auth arguments .
Add arguments to the archive .
Set command line arguments .
Fetch objects from the backend .
Initialize the archive manager .
Get the timestamp of the item updated date .
Parse a mbox file .
Fetch and parse messages from a given mailing list .
copy the mbox to a temporary location
Validate a message
convert dict to dict
Get a message from the file .
Fetch commits from Git repository
Parse a git log from a file .
Initialize a git path .
Setup command line arguments .
Parse the stream and return a list of strings .
Clone a URI .
Count the number of objects in this repository .
Returns True if the current working directory is detached .
Update the current working directory .
Fetch changes from the repository .
Returns a list of commits from Packet .
Update a list of refs
Return a list of refs in the repository .
Update a ref .
Execute a command on the remote repository .
Read lines from stderr .
Execute a shell command and return its output .
Fetch tweets for a given category .
Setup command line arguments .
Fetch hits for the given category .
Fetch items from a given category .
Parse hits raw string
Search for hits .
Get the timestamp of the metadata item updated
Determine the category of a item .
Fetch pull requests
Get repo info
Get issue comment reactions
Get list of reviewers requested by PR number .
Get the hashes of the specified pull commit .
Get pull review comment reactions
Get user information .
Get reaction reactions .
Fetch issues from a date .
Get a list of pull requests .
Get the reviewers for a given PR number .
Return a list of commits for a particular PR number .
Pull review reactions from the API .
Get user info .
Get the user orgs for the given login .
Get a token rate limit .
Return a list of tokens to be sent to the archive
Choose the best api token to use .
check the rate limit
Fetch current rate limit
Initialize metadata .
Store an archive in the archive
Retrieve an archive
Create a new archive
Verify the archive metadata
Load metadata from the archive
Count the number of rows in a table .
Create an archive
Remove an archive .
Search archive files .
Search all files in the directory .
Generate a range of months between two dates .
Remove illegal characters from XML .
Parse a JSON string into a list of Issue objects
Get the number of issues in a given date .
Get information about an issue
Get user info
Make a call to the API .
Fetch dockerhub data
A generator that fetches the JSON data for the given category .
Fetch the contents of a repository .
filter custom fields by boolean
Parse a raw page as JSON
Fetch issues from a given URL .
Get all issues from a given date
Get comments for an issue .
Get the fields of the resource .
Fetch items .
get the build info
Parse a raw page
Get a list of questions .
Setup command line arguments .
Fetch page reviews .
Get the timestamp of a list of reviews .
Fetch page reviews .
Returns a list of paginated pages
This method is used to get the most recent pages .
Parse a JSON string .
Check if a message is in a chat .
Returns the updated updates .
Fetch articles and parse them
Extracts the metadata of the item .
Parse an article .
Fetch data from remote
Get information about an article .
Fetch data from remote server .
Fetch data from archive .
create http session
Setup rate limit handler
Sleep for rate limiting .
update rate limit
Parse supybot log file .
Retrieve archives from a date
Get a list of supy bot archives .
Parse supybot stream
Fetch and parse topics
Parse the topics page
Get information about a topic
Get a post
Fetch the tasks from the given date .
Parse a raw JSON string into a list of tuples .
Parse a JSON string of users .
Returns a generator that iterates over all the tasks in a given date .
This interface is used to get all transactions in a transaction .
Calling phab users
The phid list
Make a call to the conduit .
Extract metadata from a metadata item .
Parse the contents of a json summary .
Get the contents of the collection
Get historical content .
Parse measurement result .
Construct a capabilities URL .
Read an XML file .
Convert a string to an etree .
Parse the result of a measurement .
Build and return a url .
Construct a schema from a list of elements .
Convert a query string into a query string .
Execute a complex processing command
Get movie list .
Get TV list .
Get info about the object
Get alternative titles .
Get credits for the object .
Get external ids
Get all keywords associated with the user .
Get recommendations for the user .
Get release dates .
Get release releases .
Get translations for the current user .
Get similar movies .
Get reviews .
Get the upcoming data .
Get the currently playing song .
Get popular entries .
Get top rated items .
Fetch account states
Get a rating for a user .
Get movie credits .
Get tv credits .
Get information about a node .
Get a list of attributes .
Get information about the device
Retrieve movie list .
Get a new token .
Validate and set login credentials .
Get a new session
Get a new guest session
Get a list of movies .
Get item status
Create a list .
Remove an item from the collection .
Clear all session data .
Get content ratings .
Get similar objects
Get data from the vehicle .
Get information about a series .
Get credits .
Get external ids
Get information about a series .
Get credits .
Get external ids
Set the attributes of a response .
Get a collection of attributes .
Get company metadata .
Get a specific keyword value .
Perform a GET request .
Normalize a string to a lower case .
Take a list of refs and return a tuple of n - grams .
Take a ref set and return a tuple of n - grams .
Compute the error correlation coefficient .
aligns two blocks
Get all descriptors in a module .
Register a JSON descriptor .
Register a package .
Echo the string s to the terminal .
Return True if descriptor is a descriptor .
Convert the object to a JSON string .
Return the coordinate as a string .
Calculate atomic angle of a sphere .
The surface area of the surface .
Creates a molecule from a molecule .
Deserialize this object into a descriptor .
Return a string with missing values .
Returns a new ParameterSet with all values removed .
Returns a tuple of key value pairs .
Return a dict representation of the object .
The name of the parameter .
Print a progress message .
Prints a progress message
Fail an exception with the given status code .
Get a temporary file .
Set a temporary file in the temp file .
Delete all temp files
Return the absolute path to this URL .
Get legal params for a method .
Merge parameters from a given method into the kwargs
Add extra options to a parser .
Terminate all tasks .
Add a task to the queue .
Wait for all the workers to complete .
Total number of processed tasks .
Get s3 access key from environment variables .
Get s3 keys from command line options .
Get s3 keys from s3cfg
Initialize s3 keys
Connect to S3
Recursively walk the base directory and return a list of paths .
Expand the given source to a list of strings .
Upload a file to the pool .
Put a list of files into a single file .
Create a bucket .
update privilege of target
Print the contents of the given source as a string .
Download a file from S3
get files from source to target
Copy a single file to the pool
copy files from source to target
Delete all files from S3
Return a list of relative paths relative to a directory .
Copy files from source to target .
Compute the MD5 hash of a file .
Return md5 hash of the file .
Ensure that the target directory exists .
Check if a remote key matches the local md5 cache .
Return True if path matches filter path .
Walk an S3 URL path and return the result .
Conditional check if obj is modified or not .
Get the privilege of a file .
Look up an object in S3 .
Read a chunk from source at pos .
Verify the object s size .
Write a chunk of data to a file .
Run command .
validate if format is valid
Executor for globus ls
Create a new bucket .
Put files to S3 handler .
Handler for getting files from S3
catalog for S3
Dsync files from S3
Copies source files to S3
Copies a file from S3 to S3
Delete a file from S3
File size bytes .
Sets the total size .
Match date .
Attempt to match time in time .
Match delta to a datetime . timedelta .
Ensure that the value is JSON .
Get a message from the hub .
Push the given data to the server .
Get the encryption key .
Handle an exception raised by Rollbar .
Add a log handler to the log .
Get a Flask request .
Report a message .
Create a logger for logging .
Build person data .
Add lambda context data
Add IP data to request
Check if a frame is added in the given frame .
Build request data .
Build server data .
Build a JSON payload from a dictionary .
Run the server .
compose chosung and jongodb
decomposes a number from a Hangul letter
Checks if a letter is a Hangul character .
attempt to attach josa to word
Check if an exception is inside an exception handler .
Checks if the given node is inside a lambda function .
Get all the elements of a node .
Remove exceptions from an except statement .
Return True if the given node is a super class .
Check if the given node is an error .
Check if a node is a function decorator .
Return whether the given node is an ancestor of the given node .
Find the parent of a node .
Recursively iterate over strings in a format string .
Get an argument from a call node .
Return True if the given node is an exception module .
Check if a function is decorated with a property decorator .
Check if a function is decorated with the decorated function .
Find an exception handler node .
Check if a node is from a fallback block .
Return a list of exception handlers for the given exception .
Returns whether the given exception is ignored .
Checks if the given node is abstract .
Try to infer the value of a node .
Returns the type of a node .
Check if the given node is a postponed evaluation .
Return a list of fully qualified names for a module .
Get the absolute name of an import node .
Return a string representation of the file definitions .
make a dependency graph
Visit an import node .
Visit an import from a module .
Check if node is not imported .
records an import node
Check if a relative import is valid .
Add a module to the graph .
Check if a module is deprecated .
Check that the preferred module is valid .
Add external dependencies to the section .
Return a filtered list of imports .
Get the default options .
Insert default options into sys . argv
Return whether the given node is visible .
Get the callbacks for a node .
Visit the given node and return the result .
Check consistency of messages .
Check the function call .
Check if the datetime is a string .
Check if open mode is valid .
Handle a message .
Get the title for a given node
Set default options based on config .
Show whether or not the given node should be shown .
Add a class to the class diagram .
Get the list of ancestors for a given node .
Get a node s association .
Extracts classes from a klass node .
Leave the current project .
Add import from node .
Return the class diagram for a given class .
Return a list of Diadef diagram objects .
Returns True if the given class is an owner of the given class .
Return a list of names similar to the given attribute .
Emit a no member .
Check if a node has a parent of type .
Returns True if the given variadic is a valid name .
returns true if the variable is not in the context
Visit function calls .
Check that the function is callable .
Handle unaryop errors .
Iterate over the interfaces of the given node .
Create a project from a list of files .
Visit a package .
String definition .
Visit a variable .
Handle assignattr types .
Visit an import node .
Visit an import from a module .
Compute the module module number .
Import a module and check if it is imported .
Add reporter to linter .
Handle a message .
Writes a message to the console .
Write open graph .
Write an edge .
Processes a non - raw string .
Format a layout .
Write the contents of the evaluation section .
Write a table to the output .
Add a renamed message .
Register all messages from a checker .
Register a message
Check if a specific symbol exists in this message .
Raise an error if the given symbol is not duplicated .
Raise an invalid message with the given message id .
Generate documentation for the built - in module .
Return the number of CPUs in the system .
Add messages stats to the table .
Context manager to fix the import path .
Load a list of modules from a list of modules .
Load plugin configuration .
Set an option .
Register a checker .
set the porting mode
Get checkers .
Get a list of checker names .
Prepare checkers .
Expand a list of modules into a string .
Set current module s current status .
Check the given astroid .
Run evaluation on the file .
Handle help message .
Print full documentation .
List available messages .
Print checker groups .
Return a string with the given width .
Get the module and frameid for a given node
Decode a line of text into a string .
Return True if base name is in blacklist
Register all plugins in the given directory .
Comments the given string .
Format an option value .
Formats a section as a string .
Format a list of options into a file - like object .
Insert a child at the given index .
Add a child to the tree .
Return a list of all parents .
Format a given layout .
Return a string representation of the given table .
Compute the content of the given layout .
Collects the block lines from the given module node .
Handle an ignored message .
Register a report .
Add stats to the instance .
Returns the string name of a setters property .
Get setters property .
returns True if return returns False otherwise
Return a list of possible exc types .
Processes a module s message .
Check the given module for encoding .
Parse the comments .
Returns True if the given name is a future import .
Return True if a statement is in a for or branch .
Return the overridden method or None .
Get information about the given node .
Return True if the given name is assigned locally .
Mark a node as consumed .
Check if a node has homonym in the upper function scope .
Check that the given node is unpacking .
Check metaclasses for class definitions .
Get a list of all the packages in the given directory .
Run the INSTALLED version of install .
report stats from old stats
Run the simulation .
Append a stream to the parser .
Compute the similarities between two lines .
Displays the complexity of the simset
Find the common parts of two sets .
Iterate over all simsets .
Iterate over stripped lines .
Return a dict mapping stripped line numbers to line numbers .
Check whether the given attribute equals the given attribute .
Check if two overrides have different parameters .
Infer call result from node .
Add access to the given node .
Check class definition .
Check if the given node is consistent .
Check that the given node is valid .
Leave function def .
Check that the given node is in slots .
Visit the name of the node .
Return True if node is a mandatory method param .
Check if the body is a raise .
Check if the given node is an exception .
display the report
Check if a node is a typing namedtuple .
Check if the given node is an enum class .
Check if the given node is a dataclass decorator .
Check if classdef is too long .
Leave a class def .
Visit an if node .
Check if the condition is too long .
Check the spelling of a node .
Return a string representation of the given template .
Whether the given node is an actual elif .
Check if a node is simplifiable .
Check if a stop iteration is inside a generator .
Check if an exception is derived from stopiteration .
Check if a node is nested .
Return a dict with the type of an iterable of call types .
Check if the given node is an instance of the check .
Return True if the node is AND or not .
Check for consistent returns .
Check if graphviz is available .
Print project information .
Write packages in the given diagram .
Emits the class properties of a diagram .
Setter for printer .
Open the graph for printing .
Return True if version info is emitted .
Return a formatted help string .
Get environment variables .
Recursively get a list of cycles .
Generate the graph and write it to a file .
Formats a section into a readable string .
Disable a message .
Enable a message .
Return a message identifier for a message .
Returns True if message is enabled for a given message .
Add a message to the layer .
Get indent length .
Return a string representing the indent hint .
str - > indent
Handle line start at pos .
Return valid indentations for the given idx .
Hook for hanging indentation .
Return a continuation string .
Push token at position .
Add a new line .
Check if a token has a valid type annotation .
Check that the equals spacing is equal .
Check if i is surrounded by i .
Visit a default statement .
Check if a multi statement line is a single statement .
check indent level
Return True if the given node is in an iterator .
Check if a node is a valid import statement .
Visit a name .
Visit the value of a substring .
Visit an attribute .
Raise an exception .
Find a pylintrc file .
Validate a string value .
Register an option provider .
Set provider option
Set the value of an option
Generate a config file from all registered options .
Load the options from the config file
Load command line options .
Add a help section .
Return the help string for this command .
Load the default values for the given options .
Get the string attribute of an option .
Get the value of an option .
Iterate over the options section and their value .
Return True if func is a method call .
Check if the given node is a complex format string .
Initialize a module .
Visit the import from module .
Visit a module .
Check format string .
Whether a node is in a loop .
Get a break loop node from a break node .
Check if the given loop exits .
Extract property names and names from config .
Return the type of a function .
Add stats to a report .
Check if a call is exactly one argument .
Check if a starred node is a valid assignment .
Check if the function is abstract .
Check if a loop is on loop .
Check if a loop is in a loop .
Opens the linter .
Check if expr is valid .
Visit the assert node .
Visit a dict node .
Check if a node is not in the final body .
Check if the reversed protocol is reversed .
Check the docstring of a node .
Check if the given literal is valid .
Add a subgraph to the graph .
Parse a subgraph .
Visit a module and add its complexity .
Walk an AST tree and call the visit events .
Add a relationship between two objects .
Get a relationship from object
Return a list of attributes for the given node .
Add object to diagram .
Return a list of class names that are proxied .
List of class declarations .
Return the class corresponding to the given name .
Returns a list of module names .
Get a module by name .
get a module by name
Add a dependency from a module to a module .
Deletes the cache
Query the model s query
Get user from database
Get a single token from the database .
Set the token for a user .
Set grant code .
Get a user s authorization code .
Prepare a request .
Initialize the extension for the given app .
Add a remote app .
Authorize and redirect to user .
Handle an OAuth1 authorization request .
Handle an OAuth2 response .
Handle authorization response .
Hash a token .
Create a client using a token .
Create OAuth client .
Context manager to temporarily temporarily remove insecure transport .
Perform authorization request .
Get client secret .
Get the secret for a request token .
Get access token from request .
Get realms from request .
Returns the URL to redirect to .
Get rsa key .
Validate client key .
Validate request token .
Validate access token .
validate if timestamp is valid
Validate a redirect URI .
Check if realms are valid .
Validate a verifier .
Verify a request token
Verify that the realm matches the given request .
Confirm an authorization request
Authenticate a client .
Authenticate a client .
Get scopes .
Verify scopes
Get the default redirect URI for a client .
Get default scopes for a client .
Invalidate an authorization code for a client .
Save an authorization code .
Save a bearer token to the client .
Validate a bearer token .
Validate client id .
Validate code grant .
Validate grant type .
Validate a refresh token .
Validate the response type .
Validate scopes .
Validate a user
Revoke a refresh token .
update session data
convert all keys to strings
Changes the auth header to the headers
Register this application to a remote app .
Create a new OAuth application .
Extract parameters from a request object .
Convert text to bytes .
Decode a base64 - encoded string .
Create a response object .
Get cached client s cached clients .
Add a remote app .
Add a remote app .
Check if all certificates are valid .
check success
Check the load private key .
Check if the private key is incorrect .
Check if the private key is correct .
Get the list of revocation certificates .
check revocation revocation tree
Create a certificate request
Create a X509 certificate
Use a certificate chain to use a certificate chain .
Use a certificate file .
Use a certificate in the current context .
Add a certificate to the current context .
Use a private key file .
Use a private key to use a private key .
Load the client ca file .
Set verify depth .
Load a temporary dh file .
Set cipher list .
Set the certificate names for the given certificate authorities .
Add a client ca to the context .
Set the ttlp text using the given profiles .
define callback for npn select
Set the protos of the alpn command .
set alpnc select callback
Sets the OCRSP callback .
Set ssl context .
Get the server name .
Set host name .
Receive data from the socket .
Read bytes from the stream .
Try to renegotiate a pending session .
Shut down the socket .
Get a list of cipher strings .
Get a list of certificates .
Set the SSL shutdown state .
Get random string from server .
Get a random client .
Get master key .
Export a keying material .
Get a session object .
Get the current cipher name .
Get the bits of the cipher .
Get the version of the cipher .
Get the protocol version version .
Get the protocol negotiated protocol .
Set the protos of the TLS protocol .
Get the alpn protocol negotiated .
Convert a bio object to a string .
Setter for asn1 time .
Convert a timestamp to a string .
Get elliptic curve by name
Dump a public key to a file .
Load public key from buffer
Sign a message with the given pkey .
Verify a signed certificate
Dump a CRL to a file .
Return cryptography key .
Check if this key is valid .
Load curves from libcloud .
Get curves from lib .
Return an EC key .
Derive the certificate string .
Returns a list of name components .
Return the short name of the certificate
Return the string representation of the certificate extension .
Return a cryptography certificate signing request .
Set the public key of the request .
Return public key as public key .
Return the name of the certificate as a string .
Add a list of extensions to the request .
Return a list of certificate extensions .
Verify a certificate
Return a cryptography certificate string .
Set version .
Return the public key .
Set the public key of the certificate .
Sign a message with a private key .
Get a certificate digest by name .
Set the serial number .
Returns the serial number as a string .
Get the value of the date after time after time .
Get the value of the time modified since the given amount .
Returns True if the cache has expired .
Return the issuer name .
Set the issuer .
Return the name of the certificate .
Set the certificate subject .
Add one or more extensions to this certificate .
Get the extension from the x509 certificate .
Add a certificate to the store
Add a crl to the x509 store
set verification time for verification
Initialize the certificate store .
Create an error message and return it .
Verify certificate
Set serial number from hex string
Get the serial number of the certificate .
Set the reason for the certificate
Get the reason of the certificate
Set the revocation date for this certificate
Return a cryptography certificate revocation list .
Get a list of revoked certificates .
Return the X509 issuer
sign a digest
Export a certificate to PEM format .
Get the type name of the object .
Set the ca certificates
Sign a message with a private key .
Verify a certificate .
Return a base64 encoded base64 encoded string .
Get public key .
Set public key to public key .
Get an exception from an error queue .
Get service metadata .
Yield all issue information .
Extract annotations from a JSON file .
Get a list of boards .
Get list of lists for a board .
Get a list of cards .
Get comments .
Construct and return the api url
get a url
Convert a string field to a dictionary .
Fetch issues from the server .
Returns a list of Requests for the given tag .
Aggregate issues in the given configuration file .
Get a value from the configuration .
Whether or not the issue should be included .
Make a table from a list of cells
Run a command and return the result .
Return the int value of an integer or None .
Pull issues from the config file .
get data from url
Get a collection from the server
Parse a sprint string into a dictionary .
Get OAuth credentials .
This function is used to reduce the finite difference of a set of p - values .
Score a 2d array along an axis .
Adjust the spines to be displayed in a plot .
Create argument parser .
Add enrichr parser to subparsers .
Compute the normalized Gsea p - value of an array of observed values .
Returns a pandas DataFrame with all the available names and descriptions .
Returns a pandas dataframe of all available datasets
Returns a pandas dataframe of the attributes of the dataset .
Returns a pandas dataframe of all the filters in the dataset .
Set the number of cores to use .
Load gene list from a gmt file .
Get available libraries .
Download a set of specified libraries from the cache
Construct heatmat matrix
Load data from a CSV file
Run permutation on a DataFrame .
save the results to a file
parse gene sets
Send a job to a gene list
check the number of genes in user list
write a cube
Draw an ICosphere layer .
Write a new cube to a new shapefile .
return color values
check if var is a list
Make a string representation of a variable .
write filter xml
Merge vertices in a script
split vert on a triangle
Translates a text representation of a vector .
r Rotate a script .
Scale a vector .
convert cylindrical function
Convert a SVG script to a cylinder .
transform a script to a curve
write a vc to a LaTeX file
Writes a mesh script to a file .
Run voronoi on a script .
write a filter script to all faces
write a filter to a text file
Draw a cylindrical vertex .
Draw a spherical vertices in a script .
Rename a filter .
change filter XML element
Duplicate a filter .
Delete lower layer num .
Parse a script and save it to disk .
Add a layer to the stack .
Save filter to file .
write a filter to a script
Measure a filter script
Parse a haus -dorff distance file
Convert two numbers into a floating point number .
cross product of two vectors
v multiply by scalar
Writes a depth filter to the script
Sort polylines in a file .
Measure the geometry of a file .
Convert filename to lowercase .
The configuration of the instance .
Returns the URL to a file .
Returns the path to a file .
Returns True if the given extension is allowed
Resolve a filename with a given basename .
Get the version number from the given file .
Remove duplicates from an iterable .
get the difference between two objects
Formats the object count as a string
Trace memory usage .
A list of code events .
returns the total number of overhead objects
Return the memory overhead .
Profiling the package .
Profiling the module .
Profile the function execution .
Run the profiler .
Get a set of module names in a given package .
Run a multiprocessing process in parallel .
Return the type of a run object .
Initialize a module from a run object
Initialize a package from a run object .
Initialize the function object
Replace sys . argv with run arguments .
Sample a frame .
Inserts a new call tree into the stack .
Fill sample count .
Formats a tree node as a dictionary .
Return the call tree as a dict
Provides a profile information about the package .
Return a dict of the module s profile information .
Return a profile of the function .
Transform a profiler stats into a string .
Profile the object .
Profile the module .
Profile the function .
Show guestbook .
Add an entry to the database .
Start the given stats server .
Handle the root directory .
Handle file content .
Do a GET request .
Do a POST request
Send an HTTP response .
Check if module path is in standard path
Add a line to the log file .
Return a list of lines with stdlib .
Calculate the heatmap .
Skips lines with the given skip map .
Return a dictionary containing the runtime information about the run .
Format a heatmap file
Profile the module .
Profile a function on a heatmap .
Run profiler on a run object .
Run profiler on a given function .
Predict probability of x .
Predict probability of x .
Fit the model to the model .
Count the number of documents in analyzed documents .
Sort a vocabulary by its indices .
Limit features to the given vocabulary .
Fit a numpy array to the model
Transform a numpy array to a SparseMatrix
Convert to scikit .
Use Spark to fit the model .
Predict for the class .
Fit the model to the data
Fit the model to z .
Fit the model with the given parameters
Calculate the score of a step .
Returns the score of an estimator .
Fit k - means clustering
Predict on a sequence of values .
Predict the value of x .
Check if the dtype is in expected dtype .
Fit the model to the model .
Apply the transformations to the matrix .
Concatenate an iterator into a sequence of blocks .
Yield tuples from an iterable .
Convert an RDD into an RDD .
Apply a function to each RDD .
Return the shape of the RDD .
Convert the RDD to a numpy array .
Get the bit perm of the stat .
True if root write is only root write .
Check config file .
Read config from file .
Run a command as a string
Execute a command and return its output .
Execute a command via SSH .
Validate the configuration .
Get HTTP headers .
Returns the URL for the assistant .
Get the URL for the request .
Convert a packet into text .
Print discovery information for a given Packet .
Scan for discovered devices .
Execute this command .
Send a confirmation message .
Execute a push on device
Execute a device .
Run check on devices .
Find the BEL ledger file .
Install compatibility for tests .
Read a measure from a JSON file .
Generate supported character codes .
Generate a sequence of encodeable characters .
Returns a mapping between characters to the given length .
Write a measurer to a json file .
convolve a 2D image with a gaussian kernel .
Get the gaussian kernel
Convert a grayscale image to grayscale .
Parse command line arguments .
Calculate the ssim value of this image .
Compute the ssim value between two images .
Destroy the container .
Set the code version of the device .
Get the status of the cluster .
Print the status of the service .
Returns the name of the connection to this node .
Try to bind to the transport if possible .
Called when a new connection is received .
A helper method to send a command to the server .
Returns True if this node should connect to this node .
Connect a single node .
This method is called when a connection is received .
Called when a message is received .
Called when a connection is disconnected .
Add a node to the network .
Remove a node from the pool .
Send a message to the given node .
Add an item to the queue .
Put an item into the heap .
Get a string from the heap .
Try to acquire a lock .
Returns True if the given lock is acquired False otherwise .
Release a lock .
Set the host for the given hosts
Create indexes .
Migrate aggregate indexes .
Strip metadata from a report .
Save aggregate reports to Kafka
Extract XML from file object .
Parse an aggregate report file
Convert parsed reports to a CSV file
Parse a dmarc report file
Get a list of capabilities from the server .
Save the crimes to splunk
Decode a base64 - encoded string .
Get the reverse name of a given IP address .
Convert human timestamp to datetime .
Get information about an IP address
Convert an outlook message to RFC822 format .
Convert a string to a list .
parse a report file
Continually drain the connection .
Publish a message .
Publish a reply to the broker .
Publish a message to the server .
Subscribe to a subject .
Unsubscribe from the specified ssid .
Send a ping .
Select the next available server .
Called when an error occurs .
Called when an error occurs .
Return the connect command
Process a ping .
Process a message from the queue .
Process server info .
Flush pending messages .
Read data from the server .
Load features from a numpy array
Load feature names from images .
Calculate the Pearson correlation coefficient for each image in image .
Return the dot product of the feature images to decode .
convert a feature selector into a list of features
Returns a list of feature names in a dataset .
Classifier for classifier .
Fit the classifier .
set the class weight for the classifier
Fit the cross validation .
Fit the model to the dataset
Get n voxels from dataset .
Returns a list of top words .
Calculate the Pearson correlation coefficient .
Calculate the frequency of a linear distribution .
Load activations from a CSV file .
create an image table
Get feature names .
Returns a dictionary with the number of occurrences of the given threshold .
Load dataset from file .
Save the feature table to a file .
Returns a sorted list of column names .
Search for features in the DataFrame .
get ids by expression
Convert sparse matrix to sparse matrix .
Transform a matrix to a matrix .
Convert a list of coordinates to a matrix .
Apply function to foci .
get mask for layers
Load image data from given files .
Save a nifti image .
Set logging level .
Parse a string representing an address .
Convert dict to namedtuple
Get price for a ticker
Get bulk news for a file .
Perform a HTTP request .
Get bearer info .
Perform an HTTP request .
Returns a list of tracks .
Get information about a specific artist .
Get a list of artist albums .
Get a list of tracks for a spotify .
Retrieve a list of artist related to a spotify id .
Returns a list of artists with the given spotify ids .
Get a specific category .
Returns a list of playlists .
Returns a list of categories .
Get a list of played playlists .
Returns a list of releases that have been released .
Issues a search request to retrieve the given artist or users .
Get a list of albums .
Get all albums .
Get the total number of albums in the artist .
Get currently playing song .
Get the current player .
Get list of available devices .
 recently played .
Replace one or more tracks .
Create a playlist .
Get a list of playlists .
Get a list of tracks .
Get all tracks .
Get the URL to redirect to .
Get a specific album .
Get a specific artist .
Get a track .
Get user info .
Get a list of albums .
Get a list of artists .
Convert a string to an ID .
Create a Client instance from a HTTP client .
Construct a URL for a client .
A string representation of the redirect URI .
Returns a string representation of the parameters .
Build a list of tracks .
Get all tracks .
Transfers a device to a remote device .
Get a resource from a href .
Return the object as a response .
Convert a month to a string .
Recursively updates the code urls in the current working directory .
Returns True if version is greater than version yaml .
Determine if the current branch is a development version .
Check if the current version is deprecation .
Create a backup file
Restore the backup content
Return True if line is to ignore .
Parse list of domains .
extract base from element
Return a string representation of the given to format .
Attempt to access this file .
Get access code .
Validate a domain .
Check if given domain is a subdomain
Check if an IPv4 address is valid .
Check if a string is a valid IP range
Check URL syntax .
Load configuration .
Prints a pretty print message .
Download URL to file system .
Get entry management url
Print header .
Process file decision .
get the domain state
get url to test
Return a string representation of the logo .
Formats the domain if it is a valid domain .
Extract domain from file .
Extracts a list of files and formats them as a list
Get file url
Get the current expiration date .
Handle the status code .
Get configuration from file .
create a directory
Delete uneeded uneeded uneeded directory .
Set configuration parameters to a string .
Install the production config
Download the ia .
Download psl configuration .
Download a directory structure and write it to disk
Merge the configuration into the upstream configuration .
load config from file
Split a version string into a tuple .
Check if version is newer than upstream .
Returns a boolean indicating whether the file is cloned .
Fix internals .
The analytic host directory .
Get the unified file representation .
output status file
Return a boolean indicating whether the file should be produced .
Add public suffix to file
Load configuration from disk
Return standard string representation of element .
Load database .
Return the referer for a given file extension .
Extract URLs and referer of URLs .
Updates the current database to the given destination .
Mine the history of this object
Retrieve data from file
Saves the configuration to a file .
Add one or more elements to the set .
Remove the element from the list
Get a list of mined versions .
Processes the mine .
Get content of a file
Write content to file .
Writes the current user s content to the file .
Update the extraction date .
Post referer not found
Write the header before the template .
Construct header data .
Construct a string representation of the data .
Get size from header .
Colorize data .
String representation of the data
return the formatted data
Calculate the difference between two functions .
Format the execution time .
Return a list of files to delete .
Returns a list of databases to delete .
Deletes all databases in the database
Returns the hash of the file .
Returns a hash of the data
Get a hash representation of the data .
Execute the command .
remove a key from main dictionnary
Rename a key in a dictionary
Merge two dictionaries into a single dictionary .
Write the dictionary to a JSON file .
Save the main dict to a YAML file .
Return a normalized version of the path .
write data to file
Read the file contents .
Return a string representation of the main list
Merge two dictionaries into a single list .
Returns a list of strings that match the regex
Return a string representing the match .
Return a string representation of the regex .
Count the number of items in the status dict .
Calculate the number of fractions .
Check if url is valid .
Check if a domain is valid .
Returns a string representation of the domain .
Get information about this check .
format historical formating error
Retrieve the database from the database .
Saves the database to a backup file
Get timestamp .
Return a list of strings .
Returns True if the configuration is present in the dictionary
Retrieve the credentials from the user
Backup user to backup
Checks if user is in database
Returns True if the user is older than the database .
Get the expiration date of the token .
Return docker permissions .
Run travis permissions
lookup the name of the class
Queries whois server .
return the current status code
Get the referer for this object .
Get the current object .
Return a list of all standard library paths .
List of standard package names .
Yield line numbers from unused messages .
Parse unused import message .
Yield line numbers for import .
Generator for import usage .
Yield line numbers from messages .
Iterate over the duplicate key line numbers .
Check PyFlakes source .
Extract the package name from a line .
Import a multiline statement .
Return True if line is a multiline statement .
Remove unused imports from a module .
Split a line into a single line .
Get a dictionary of messages by line number .
Remove undefined star imports from a string
Remove duplicate key numbers .
Check if a dictionary entry contains a key .
Return whether value is a literal or not .
Generate line numbers from source .
Remove useless lines from a source .
Return a string with indentation .
get the end of a line
Remove unnecessary whitespace from source .
Split a string into a set of strings .
Return True if filename is a valid python file .
Return True if filename is in exclude list
Read lease response payload .
Write the lease response to a file stream .
Write the request payload to a stream .
Read a cancel response payload .
Create a new name .
Read digest from file .
Write this digest to a file stream .
Read information from a file .
Write the application information to a stream .
Create an application specific information .
Read data from a file stream .
Write the object to a file stream .
Read the payload from a file - like object .
Write the payload to a stream .
Read the object from a file - like object .
Write the object to a file stream .
Write signature data to stream .
Read signature from input stream .
Build an error response .
Process a template attribute .
Get attributes from the managed object .
Set attributes on the object .
Set the attribute on the managed object .
Returns True if the object is allowed to perform an operation .
Write the decrypt request to a stream .
Create a new Secret
Set the setting of the server .
Load settings from a file .
Return a bitmask for the given value .
Return a list of cryptographic usage masks .
Read a long integer value from the input stream .
Write the value to a kmip object .
Check that the field is valid .
Read a big integer value from an input stream .
Write the big integer to a file - like object .
Ensure that the value is a valid integer .
Check that the field is valid .
Read parameter value .
Write the value to the stream .
Write the boolean value in kmip format .
Ensure that the value is a bool .
Read interval from file .
Validate the interval .
Validate the key .
Check that the field is valid .
Check that the field is valid .
Convert a string attribute name to a tag .
Convert an attribute tag to a name
Return a boolean mask from a list of enumerations .
Get a list of enumerations from a given bitmask .
Returns a boolean mask indicating whether the value is a bitmask .
Write the metadata to a file .
Read key pair response .
Write this KeyPair to a file .
Read attribute list .
Write the attribute list to the output buffer .
Write the attribute list to a file .
Get all json files in a directory .
run the worker
Get a certificate from a connection .
Get extended key usage from a certificate
Returns a list of common names from a certificate .
get client identity from certificate
Read a create request payload .
write the object to a file - like object
Read response payload .
Write the response payload to a file .
convert obj to python type
Read a decrypt response payload .
Write the metadata to a file .
Returns True if the given attribute is supported by this rule set .
Check if an attribute is deprecated .
Returns True if attribute is applicable to object type
Returns True if attribute is multivalued .
Read bytes from a stream .
Write the payload to a file stream .
Read attribute reference .
Write the attribute reference to a file .
Read attributes from a file .
Write the attributes to a file stream .
Read a nonce from a file - like object .
Write the nonce to a file .
Read username and password .
Write the credentials to a stream .
Write credential data to a stream .
Read a credential from a file .
Write credential data to a file stream .
Read MACIP packet .
Write MAC to file stream .
Write this key to a file stream .
Read signature information from a file .
Write this key to a file - like object .
Read the extension information from a file - like object .
Write the extension information to a stream .
Read revocation reason from file .
Write this revocation code to a stream .
Validate the revocation code .
Read the object type .
Writes the object to disk .
Write the metadata to a file .
Read profile information .
Write this profile information to a file .
Write the capabilities to a file .
Stop the network .
Write the metadata to a file .
Read response from input buffer .
Write the location to a file .
Create RSA private key from bytes .
Read signature payload .
Write the signature data to a file stream .
Read usage allocation data .
Convert a protocol version to kmip version .
Read protocol version .
Write this Protocol to a stream .
Read credentials from a file .
Write credentials to a file .
Read payload from input stream .
Read certificate information .
Write this certificate to a stream .
Read an archive response .
Write the archive to a file - like object .
Run the handshake .
Read a rekey response payload .
Returns True if the profile is supported by the user .
Get attributes .
get attribute list
Send a query to the server .
Open the proxy connection .
Close the proxy .
Register a managed object .
Get attributes and attributes .
Activate a device .
Build a cryptographic parameters from a dictionary .
Build an encryption key .
Build mac signature key .
Build a key wrapping specification .
Build a list of common attributes .
Build a name attribute .
Read a query string from input buffer .
Write the data to a file .
Read attributes from input buffer .
Write the attributes to a file .
Get a single entry point for an entry point .
Get a dict of all subgroups of a group
Return a list of all installed entry points in a group .
Load object from self . object
Parse an entry point .
Generate a controller file
Rewrite a file with project name .
Check if URL is valid .
Encode something .
Decode something to a string .
Return the absolute URL for the given endpoint .
Signs a user in the session .
Get current user
Create a Flask application .
Write dataframe to CSV file .
Read data from a csv file .
Serialize a DataFrame to a writer .
Deserialize a dataframe into a DataFrame .
The URL of the contents of the file .
Get the contents of the intermediate dataset .
Read the intermediate dataset contents .
Read the intermediate dataset contents .
Convert to a pandas dataframe .
Get the intermediate dataset for a node .
Get information about a workspace .
Get all datasets in a workspace
Get a dataset
Return a set of all global variables in code .
Return a copy of the string .
Lookup a color name .
Draw the image .
Calculates the extrema of a cubic Bernstein bernstein .
Generate a cubic Bernstein Bernstein bernstein .
Build a list of choices .
Initialize the cache
Empty the cache
Get the value of a cache entry .
Update an entry in the cache .
Set a cache entry .
Initialize the context
Resolve an i18n tree alias
Returns True if the current user is admin .
Calculate the depth of a given tree item .
Get the current tree current item .
Return the URL for a given sitetree item .
Initialize the tree and sitetree
get the attribute of the current page
Get an ancestor level .
Check if the item has access to the current user .
Get a tree from a sitetree
Render a list of children
Get the children of a given item .
Update the has children of a tree item .
Filter items according to the current settings .
Get ancestor item from tree alias
Closes the tree
Resolve a variable name to a string
Return a sitetree .
Return the children of a sitetree .
Return a sitetree .
Render the given tree items using the given context .
Create a template for a tag .
Get the URL for a model nfo .
reregister model admin
Handle redirects .
Redirect to the request .
Redirect to Django s redirects .
Redirect to the user s response .
Get the form field for the tree item
get tree object
Moves the item to the given direction
Saves the current tree to the tree .
Returns a list of urls for the admin view .
Dump a view tree to a JSON file .
Import a sitetree module .
Get model class
Create a Config object from a mapping .
Load a class from a python file .
Loads the class from the given file .
Create a string from an object
Create http headers for a new span .
Returns a tuple containing the current context attributes .
Start the Span .
Stop the span and log it .
Update extra annotations .
Add a binary annotation to the client .
Overrides the span name .
Returns a new endpoint with new name replaced with new service name .
Create a v1 span for this span .
Encode a list of spans to a string .
Convert a Span to a protobuf .
Convert hexadecimal id to bytes
Get the protobuf kind for a given kind .
convert endpoint to zipkin endpoint
Convert annotations to zipkin pb2 .
Create a zipkin annotation .
Create a binary annotation string .
Create a zipkin endpoint .
Creates a new endpoint with new name and new name .
Create a list of annotations .
Build a list of binary annotations .
Create a new span for the given span id .
Convert a Thrift span to bytes .
Convert binary objects to bytes .
Detect encoding of message .
Convert a list of spans to a string encoding .
Push the given zipkin attr to the stack .
Encodes a v2 span into a protobuf span .
create json endpoint
Encode a span into a protobuf span .
Decodes a list of spans .
Convert a Thrift endpoint to a Thrift endpoint .
Decode a list of Thrift annotations into a dictionary .
Convert a list of binary annotations into tuples .
Convert a Thrift span into a string .
Convert trace id to string .
Convert an unsigned long integer to lower hex .
Write a long integer to the buffer .
Fixes the number of months after the month .
set the transaction code for a bank
match the iphid to the tags dict
Sets the TNR for the given tag dict .
Join a string into a single line .
Extracts the content of a response .
Log a warning about how long until the duration is reached .
Get bot info .
Get bots .
Read a single term from the packet .
Write a message to the packet .
Decode a string
Encode a term into a string .
Add a source to the multicast socket .
Send number of messages to the queue .
Set the hello callback .
Stop the server .
Clear all local services .
Search remote services .
Create soap message
Discover the given loglevel .
Get the object manager for this field .
Returns a list of all child relations of a model .
Get all child m2m relations for a given model .
Save the model instance to the database .
validate all unique fields
Returns a boolean indicating if data has changed .
Return an address with a valid checksum .
Calculate the checksum of this address .
Prompt user for a random seed .
Get a key from the cache
Get the key for an address .
Create key iterator .
Creates a Kerl sponge for the given index .
Bulk absorb the given bytes .
Simplify a given number of bytes .
Transform the state to a new state .
Add two syllables .
Convert an integer to a list of integers .
Add two syllables .
Perform a full complement of the union of two words .
Print the contents of a seed
Find transactions .
Promote a transaction command .
Resolve a URI to a base adapter class .
Send a request .
Log a message to the logger .
Send an HTTP request and return the response .
Interpret the given HTTP response .
Add digest to memory .
Get the address of a multisig address .
Generate random address generator .
Convert a bytes - like object to an address .
Generate the address for the key iterator .
Find transaction objects .
Iterate over all used addresses in a seed generator
Get a list of bundles from the given transaction hashes .
Check if the given encoding is valid .
Get codec info .
Return a binary representation of the input .
Return a string representation of the input .
Find a list of addresses .
Add a command to the blueprint .
Create a Transaction instance from a string .
Return a dict representation of the object .
Return a string representation of the signature validation .
Set the isconfirmed flag .
Get all the messages in this group .
Returns a list of all transactions in the transaction .
Recursively find commands in a given package .
Execute a request .
Apply filter to value .
Returns the URL of the job with the given job id .
List of validation errors .
Returns a string containing the validator .
Generates validator for the transaction .
Get the signature errors from the given groups .
Validate a group signature error .
Traverse a bundle and return a list of transactions .
Start ipython console .
Generate random string .
Get a digest of the key .
Return the signature of the given transaction .
Pretty print the object .
Bulk absorb num bytes .
Add a context to an exception .
Get security level .
Increment the legacy tag number .
Get the tag of all transactions .
Add a transaction to the list of transactions .
Finalize the transaction .
Sign the inputs with the given key generator .
Create a list of input transactions .
Convert value to standard unit
Decompress a G1 compressed g1 .
Return the prime number of a prime .
Create a new instance from a json file .
Split a description into individual parts .
Returns a list of all categories .
Generate a random colour .
Instantiate a TimeScale instance from a name .
Create a ColorImage from an image file .
Returns a CSV representation of the Assembly .
Return the maximum width of all rows .
Get the string representation of a component .
Returns a string representation of the plot
Return a string version of the Rock Ridge component .
Processes a single row of text .
Parse a string into a dictionary .
Returns a list of unique IV components .
Return a list of intervals from top to top .
Clean data from longitudinal data .
Create a TermList from a PETREL file .
Read intervals from a file .
Return a string representation of the list .
Write the list to a CSV file .
Return a LaTeX representation of the section .
Find overlaps in the triangulation .
Find all gaps in the triangulation .
Prune a string removing excess characters .
Annealter for annealing
Return a copy of this Variant with the given component .
Return the union of two sets .
Return the intersection of two intervals .
Merge overlapping segments .
Invert the list into a string .
Crop the list to the specified extent .
Evaluate the quality of the dataset .
Return a string representation of a field .
Returns a list of job IDs .
Parse a HCL header .
Update a token .
Returns a list of valid allocations .
Fail a deployment .
Pause a deployment .
Enables a drain node .
Set the drain of a node .
Get information about a node .
Get a list of files in the server .
Stream a file as a string .
Stat a file .
Join a list of addresses .
Update a list of servers .
Force leave a node
Returns a list of all nodes in the cluster .
Get all evaluations .
Returns a list of namespace namespaces .
Register a job .
Get information about a job .
Dispatch a job .
Revert a job to a different version .
Change the status of a running job .
Deletes a job .
Get the current configuration settings .
Delete a peer .
Returns a list of deployments in the cluster .
Get a random string from obj .
Generate random mutator .
Get a random polyglot attack .
safe version of unicode
Render a custom html file
Start fuzzing .
Spawn a subprocess .
Get output .
Finish the process .
Terminate the process .
Start the worker .
Execute the given object and return the string .
Build random string .
Build a string representation of the current state .
Build the query string .
Build random variates .
Builds an option graph .
Build the definition .
Build a string of star .
Shutdown the process .
Run and monitor the process .
Start the monitor .
Generate random float .
Return fuzzed fuzzed string .
Return fuzzed version of json .
Handle SIGterm signal .
Kill the process .
Pause the process .
Resume the pause command .
Stop the process .
restart cli command
Returns a list of all available events .
Set user mood .
Set the avatar for the user .
Get metadata about a url
get contact by id
Get user by id
Get a list of bots .
Get a bot by id
Search for users in skype
Returns a list of requests
Create a string from raw data .
Merge another dict into this one .
Merge another object into the cache
Read token from file .
write token to token file
Verify token is valid
Refresh OAuth token .
get user id
get a valid registration token
Update the list of endpoints
Check if a user is allowed
Authenticate using OAuth .
configure the service
Ping the device .
Get recent chats .
Get chat info
create a member
Tries to convert a user to an id
Extract chat id from URL .
Convert unicode to unicode .
Try to detect handler format .
Parses the given text and returns its metadata .
Return a dict representation of the metadata .
Load a YAML file .
Export metadata to YAML
Export metadata to json string .
Expand self . match to self . match .
Return a list of items .
Return a list of sublists .
Change the start and end of the match .
Return a list of strings representing the expression .
Return a list of all wiki entries matching the given pattern .
Turn a list of strings into a trie .
Return a pattern from a dictionary .
Return the index of the given key .
Insert string at index .
Partition a character at a certain character .
Return the subspans of the given type .
Re - shrink the range of spans by rmstart and rmstop .
Insert a new element at the specified index .
Return the nesting level of the sequence .
Return the shadow of the string
Return a copy of the extended string with all non - empty strings .
Return a mapping of type to spans .
Return a pretty formatted version of this object .
Returns a list of all subspans of this parameter .
Return a list of parser functions .
Return a list of all subspans for this node .
Return a list of all wikilinks in the document .
Return a list of comments for this node .
Returns a list of external links
Return a list of table names .
Yield subspans of the given type .
Return a list of ancestors .
Return the parent of the given type .
Find the mode of a list .
Return the first argument that matches the given name .
Remove the first argument from the definition .
Get a command - line argument .
Returns True if the command has the given name and value .
Deletes the argument with the given name .
Convert CRSC code to string .
Find an object by name .
Create a CRS object from a URL .
Parse a geojson file .
Construct a CRS object from an EPSG code
Construct CRS object from ESRI code
Construct a CRS object from a string
Parse input text and return a CRS object .
Write the record to a file .
Read data from a stream .
Parse a list of geolocation keys from a vlrs list .
Parse geotiff tags .
Get signedness for a type .
Convert extra dimension type to string .
Create a new record from another point record .
Copies fields from another record to self .
Append zeros to the array if necessary .
All dimensions in this array .
Construct a zeros array
Create a Point object from a stream .
Create a Point object from a compressed buffer .
The x - axis scaling dimension .
String representing the y - axis .
The z - axis of the data .
Add extra dims to the vlrs .
Writes the points to a stream .
Write the metadata to a file .
Build dtypes dtypes for point format
Build a numpy dtypes dtype for the given fields .
Convert np dtype to point format
Returns the point version for point format .
Check if point format is compatible with point format .
Extracts a list of vlrs that match the given type .
Read values from a stream .
check if files have point format id
Check if all files have the same dtype .
Check if the file signature matches the file signature .
Read header from buffer
Read vlrs from the stream
Read string data from vlrs .
Read compressed points data .
Read a waveform packet from the stream .
Read evlrs from file .
Log a warning if the stream is not at expected position .
Create a las header from a header .
Merge multiple las files into one .
Write las .
Return date as a string .
Set the date of the object .
The min and max values of the mesh .
Set min and max values .
A list of tuples representing the maximum and maximum values .
Set max values .
A list of tuples representing the scale scales .
A list of tuples representing the coordinates of this region .
Peeks the file version from the stream .
str > = > = > = 2
Unpack a byte array into a numpy array .
get missing dimensions from point format
recursively return a dict of subfields
The total number of extra dimensions .
Return True if all dimensions have a waveform packet .
Main entry point for demo .
Calculate the checksum of a given command .
Print hexadecimal hexadecimal .
Verify and clean checksum
Return a list of bit numbers in r .
Generate a query string
Example demo .
Connect to the server .
Start monitoring .
Disarm the given code with the given partition .
Clear alarm code .
Set the output of the device .
Keep connection alive .
Monitor the status of the device .
Closes the connection .
Purge the current database .
Guess the type of the given path .
Get the file id for a given file .
Get a notebook from the database .
Create a notebook model from a database record .
Get a directory .
Convert a list of file records into a string .
Create a directory model from a database record .
Create a file model from a record .
Save a notebook to disk
Save a file to disk
Rename a file .
Delete a file or directory
Ensure user with given id .
Deletes a user from the database
Create a new directory in a user database .
Returns True if the table is in the specified directory .
Delete a directory .
Check if a directory exists .
Return a list of files in a given directory .
Return a list of directories in the database .
returns True if fileid is a valid file
Select file with given fields .
Return a list of file fields .
Get a file
Get file contents
Get file id
Check if a file exists
Rename a directory .
Save a file in the database .
Remove all remote checkpoints from the database .
Reencrypt row content with decrypt function .
Reencrypt a user .
Derives a single fernet key from a password and user id .
Get the name of a column like
Convert a list of fields to a dict .
Convert row to dict with decrypt func .
Write notebook to disk
Create a remote file checkpoint .
Delete a checkpoint .
Get the content of a checkpoint .
Lists remote checkpoints .
Rename remote checkpoints .
Delete all checkpoints from the database .
Remove all checkpoints from the database .
Resolve a given api path and return it .
Apply the given prefix to all strings .
Called when a manager has changed .
Get a file or directory .
Normalizes an API path .
Split an api file path into a tuple of path name and name .
Convert a Python object to a base64 - encoded base64 string .
Read a base64 - encoded file .
Decode a file from a base64 - encoded path .
Decode a base64 encoded file .
Return a list of all subdirectories in path .
Create a user .
Separate files and files into separate directories
Recursively walk through all subdirectories .
Recursively walk all files in a directory .
Walk through all files in a directory and yield their content .
Reencrypt a single user .
Unencrypt all specified users
Unencrypt a single user .
Context manager for creating a temporary file .
Upgrade the database to a revision
Sanitizes the given dict to be used for serialization .
Queues an instance of the given embed type .
Load the instances for the given embed type .
Insert an instance into the dict
Load all the instances of the embed type .
Validate the input data .
admin view of Django s admin
Convert the response to a JSON string .
Hide fields that are authenticated .
Remove fields from the request .
Get a version of the request .
Return a queryset of published articles .
Return a queryset of the publishable queryset .
Return the value of the field .
Validate a Widget .
Validate a zone .
Check if an id is a valid UUID
Returns user permissions as a string
Modify group permissions .
Ensure that author is a list of strings .
Validate and save the zone .
Get data as a dictionary .
Prepare data for serialization .
Render the template .
Get the settings for this model .
This callback is called when the callback is called .
Get the settings for the integration .
Update the integration settings .
Create signup form .
Maptag function .
Render a zone .
Save the featured image .
Save the subsection of the article
Return the extension of the image .
Get the URL for the media .
Save image .
Save a thumbnail .
Return the connection to use for this application .
Get bandwidth limited stream
Read amount of bytes .
Consume the requested amount .
Process scheduled consumption .
Calculates the projected amount of time at the given time at the given time .
Record the current amount of time at the given time .
Wait for a result .
Get a list of callbacks for a given transfer .
Return a dict with keys removed from the original dict .
Decrement the number of requests .
Finalize the queue .
Check if a file is a special file .
Acquire a resource .
Release a semaphore .
Adjust the current chunk size for this file .
Queue a task to write data to the file .
Return a download manager for the given fileobj .
Write data to file .
Request a list of writes to the heap .
Check if a file object is seekable .
Shutdown the server .
Cancels the given message .
Wait for all tracked transfers .
Read data into a file - like object .
Return upload manager for given transfer .
Set the exception of the transfer .
Set the result of the future .
Set exception .
Return the result of the job .
Cancels this task .
Submit a task to this transfer .
Add a done callback .
Add a failure cleanup function .
Mark the announce as done .
Upload a file to S3 .
Download a file from a bucket .
Parse arguments from a decorator .
Return a list of code lines that match old text .
Extract the step argument from a decorator call .
Return a list of steps that match old text .
Update the group membership .
Delete a membership
Get the catfact facts .
Create a new webhook message
Delete a membership
Validate base url .
Return True if the string is a valid URL .
Open a local file on local filesystem .
Check if o is of acceptable types .
Create a dict from a list of dictionaries .
Check response code against expected response code .
Convert json data to dict .
Convert date string to datetime .
Create a new team .
Update room .
Delete a room
Get a list of groups .
Return the created date .
Get access token .
Update a webhook .
Delete a webhook
set wait on rate limit
Update headers in request session .
Return the absolute URL of the given URL .
Make a GET request and parse response .
Get pages from a url .
Perform a PUT request .
Make a DELETE request .
Create a JWT
Delete a message
Get person by id
Delete a person
Get a user object
Get a list of items .
Creates an instance of the specified resource .
Update a team .
Delete team .
Return a tuple representation of the data .
Returns the last activity of the team .
Post a webhook .
Get the ngrok public url
Delete all webhooks with the given name
Create a new webhook
Delete all the webhooks
Generator that iterates through all telegram buffers .
Read all telegram messages from the given queue .
Create dsmr protocol
Creates a connection to a DSM reader .
Creates a TCP connection to UDP server .
Handle data received from Telegram .
Called when the connection is lost .
Parse a telegram .
Parse telegram data .
Get a version from a file .
Ensure that the given specs are valid Python versions .
Walk the directory tree and return a list of relative paths .
run a command on the system
Get a list of file paths from data specs .
Get package data .
convert a glob to a string
Iterate through a path .
Translate a glob to a regular expression .
Join a list of strings .
Translate a glob in a string
Truncate SQLAlchemy SQL table .
Write a table to the database
Write indexes to a table
Write triggers to a table
Write constraints to a table
Write the contents of a table to the file reader .
Write the indexes to the file .
Write the constraints to the file .
Write the triggers to the database .
Return the number of items in the queue .
Enqueue data into queue
Dequeues the task queue .
Build the predicate to be used for query .
Serializer for datetime fields .
Reconnect to the database .
Executes a query and returns the result .
Get a connection to the database
Run the workload .
Connect to the pool
Look up an error code by number .
The number of items in the queue .
Handle a MySQL connection failure .
Build a simple expression from fields .
Generate UPDATE statement .
Connect to the database
Destroy all tables in the database
Start a step .
Stop a step .
Loads a dictionary of steps from raw data
Disconnect from the server
Reconnect to the device .
Connect to the server
Called when a websocket is received .
Stop timers .
Send ping .
check pong
Send request to WebSocket
Unpause the queue .
Handle a system event .
Handler for errors .
Data handler for data
Resubscribe from bitfinex
Handle authentication events .
Handle configuration errors .
Updates the timestamp for the given channel .
Reset the connection
Get a list of candles .
Set bitfinex configuration .
Subscribe to a ticker .
Unsubscribe from ticker .
Subscribe to an order book .
Unsubscribe from an order book .
Subscribe to a raw order book .
Unsubscribe from an order book .
Subscribe to the given pair .
Unsubscribe from a symbol pair .
Subscribe to candles .
Unsubscribe from a pair of candles .
Authenticate the channel .
Cancel an order .
Called when a paho command is received .
Handle a device command .
Handle a Paho message notification .
Create a device type
Update a device .
Returns a list of clients .
Return a list of all services .
create a user
update schema definition
Disconnects from the server
Called when a connection is received .
Handle unsupported messages .
Handle a Paho event .
Handle device status .
Called when a client status message is received .
Get last event .
Get all events .
Make an API call to the server .
Initiate a request
Get the status of a request .
Close the underlying file .
Get the bounding box of the instrument .
Load byte array from page .
Raise an exception if the return value of the function is not return .
Load application .
Run the gunicorn server .
Convert value to native value .
Processes an image and returns it as a string .
Processes a PIL image .
process an image
Convert a string representation of the field to python file .
Return the placeholder image if it exists .
Override django s save method .
Update ppoi field .
Override django s default form field .
Return a string representation of the field .
Auto - discover django . utils
Unregisters a sizer .
Unregisters a filter .
Return the URL for the field .
Build filters and sizes for this field .
Returns the filtered root folder
Returns the root folder of the image
Return the filtered root folder
Deletes matching files from the filesystem .
Preprocess a gif .
Preprocess JPEG image .
Retrieve an image from the server .
Save an image to memory .
Return a string representation of the PPOI .
Create resized image .
Render a template .
Return the context for rendering the field .
Build a dictionary of attributes .
Join a path to an image .
Get the path to the image file
Validates that the given sizes are valid .
Get the url from an image instance
Get the rendition key set for a given rendition key
Format an instruction .
Format a function body into a string .
Decodes a bytecode into bytecode .
Decodes a module into a fragment .
Connect to the server .
Read command line and return it .
Parse an agi result line .
Parse an AGI code response .
Reset all instances of the instance .
Returns a list of the instances of this instance .
Get installed metadata .
Get the primary keys for a model .
Deserialize a value into a string .
Get an existing instance from a query .
Get declared fields .
Load data from data .
Split model kwargs into kwargs .
Lists all snapshots .
Restore an application
Move the indexes to the end of the epoch .
Clean textacy .
Apply a function to each data in a list .
Processes the given text .
Apply processor to text .
Compute statistics about the document length .
Returns a pandas dataframe of word counts
Map param type to string type
Parse interface definitions into a dictionary .
The inverse of the object .
Recursively call rollback on duplicates .
Returns a copy of the matrix .
Return a copy of the node .
Return True if all items are equal .
Return an iterable over the iterable .
Clears the list .
Move to the given key .
Write text to a temporary file .
Merge args into config .
Load address books
Create a new contact .
Generate the birthdays subcommand .
a helper method for finding all phone numbers
Print a list of vcard addresses .
Execute a modify command .
Executor for globus remove subcommand
Executes a source command on the selected vCard .
Executor for globus merge command
Returns the action associated with the given alias .
Creates a contact object .
Creates a string from a file .
Create a string from a user input .
Create a new contact object from an existing contact .
Return a list of names part of a variable .
Add a list of strings to the vCard .
Parse custom types value .
Convert a list to a string .
Convert a string to a datetime object .
Calculate the similarity of two UIDs .
Search for all contacts with a given query .
Search for contacts with a given query
returns a list of uid
a method to search for a given query
Get a string representation of the contacts .
Get the short uid for the given uid
Find all vCard files that match a given search string .
Load all vCard files from a file .
Get the name of a given name .
Return a list of available architectures .
List of available architectures .
Attempt to guess the type of a dictionary .
Return a new query with the given parameters replaced .
get the first item
Delete all results from the query .
Perform a redisix prefix .
Calculate the value of lua for a given lua
Count the number of items in the list
Return a connection to an object
Convert a value to a list of strings .
Add an object to the session .
Get the value of a keypair .
Write data to lua
Save the changes made to the database .
Deletes the object .
Retrieve a model by its identifier .
Open a file handle .
Send back a result back to the result queue .
Add a pending call item to the queue .
Ensure that the executor is running .
Start the server process .
Duplicate a file descriptor .
Wait for the job to complete .
Prepare process data .
Close file descriptors .
Recursively terminate a process .
Terminate a child process .
Wait for the exit codes to terminate .
Format a list of exit codes .
Ensure the process is running .
Print an event processor .
Split a string into a list of arguments .
Generate a stack of frames from f and t .
Runs all the hooks in an object .
Call forget to forget memory .
Convert argument to int .
Process commands .
Add a file to the queue .
get next token from start position
Print error message .
Read a command line .
convenience method to close the device
Disassemble the given code into a disassembly string .
Return a string representation of a frame .
Get the name of a call function
Prints a string representation of the stack trace .
Look up a subcommand by its prefix .
Print short help .
Add a subcommand callback .
Run a subcommand .
Show the given category for the given category .
Print line info .
Find a debugged frame .
Get an integer as an integer .
set a setting on the debugger
Set the value of an integer .
Run show boolean on obj .
Show the value of an integer .
Show the value of a setting .
Return True if line is a def statement .
Return True if line is a class def .
quit threading
Set default background color .
returns True if color is dark
Returns a tuple with the signature of a frame .
Return a string representation of the display .
Return a string representation of a given frame
Read a message from the stream .
Print debug information
Run a single thread .
Pretty print a list of values .
Look up sign name for a number .
Look up a signal by name .
Convert a number to a sign name .
Set a signal handler for a signal .
Check and adjust the sighand for all signatures .
print info about signal
Handle action .
Set print method .
Dispatch the given frame to the appropriate handler .
convert filename to module name
Search for a file in a list of directories .
Attempt to locate a file in a directory .
Return a list of python files in a callername .
Write a message to the output .
run the main thread
Format a list of commands .
Closes the connection .
Write a message to the server .
Complete an identifier .
run a command on the process
Add one or more frames to the ignore filter .
Checks if filename is valid for mclifns .
Returns the filename or None if filename is not None .
Returns True if the tracer is started .
Check if a given frame is stopped .
Set next frame .
Return a string representation of the stack trace .
Remove a breakpoint
Delete a breakpoint by number .
Enables all breakpoints
Enables the breakpoint by setting the given breakpoint number .
Delete breakpoints by filename and line number .
Open an input string .
Read a line from the user .
Prompt the user for confirmation .
Return a string representation of the query as a string .
Restore the user s login .
Load a user from a path .
Get a list of documents .
Transcode data to a temporary file .
Normalize data in a stream .
convert date string to float
Detect encoding of a file .
Yield lines from a JSON file .
Transcode a file to a temporary file .
Open CSV file and return it as a string .
Iterate over a csv file .
Entry point for the script .
Save a token to a JSON file .
Make a request to the Chromais server .
HTTP DELETE request .
Return the root url of a URL .
Download and save a token
Make a request and return the JSON response
Perform a POST request .
Get the documentation of the server .
Get the raw text of the specified path .
Print the result as CSV .
Read parameters from json file .
Simplify a doc string
Create a new project on the client .
Upload a project from a JSON file .
Upload a stream of documents to the server .
Upload a file to S3 .
Parse arguments and upload file .
Create a luminosity token from a user credentials .
Login to the user .
Login the login page .
Fetch data per period
Load the view if it exists .
Initialize view handler .
Render the view .
Called when a change is received .
Updates the list of menus for the current page .
Return a list of urls to serve .
Called when a new node changes
called when dom has changed
Create the widget for this element .
Initialize the widget
Remove the widget from the cache
Add a child to the component
Remove the child from the component
Return a list of all child widgets .
Set attribute .
Update proxy .
Called when a resource has been modified
Returns a list of string declarations that match the given query .
Set the source of the widget .
set html source
Change the state of the Block .
Observe the block .
Change the children of the block .
Read the contents of a file .
Write an error message to stderr .
Print an error message .
get a product by name
Request a new session .
Reset the current session .
Get a list of stores .
Set the delivery system for the given store .
Get a menu .
add item to basket
Add a pizza to the basket
Add a side to the basket
Remove item from basket
Set payment method .
Process a payment request .
Make a GET request .
Make a POST request .
Make a call to the API and return the response .
Append an item to the menu .
Add an exit item .
Draw the menu .
Handle user input .
Select the currently selected item .
parse old menu data
Convert string to datetime .
strftime is strftime
Apply a mathematical operation to a new column .
cumulative sum of a column
Removes old entries from cachedir
Add a timedelta to a date .
Returns optimization updates .
Returns training parameters .
Perform optimization updates to free parameters .
This function is used to get the first value of the tensor .
Prepare the layer .
Compute the cost of the cross entropy .
Apply a function to each dataset .
Vectorize the target .
Print statistics about the validation set .
Train the model on the network .
Sample from input .
Compute the alignments .
Compute the context vector .
Concatenate numpy arrays along given axis .
Pad the dataset with the given length .
A generator that gives the parameters of the parameters .
Print the progress report .
Evaluate the model .
run the pipeline
Build loop variables .
Perform a scan step .
Generate a non - free momentum .
Returns a string that can be used for training or training .
Sets the number of batches to skip .
Load parameters from path .
Train the model .
Train a single epoch .
Runs validation steps .
Prints the given score map to stdout .
Get data .
Apply a function to the network .
Prints a formatted string to stdout .
Return a string representing the tensor .
Creates a list of dictionaries representing the training data .
Return a string representation of the given value .
Stack encoders .
Stack the decoders of the given layers .
Encodes the given input into the network .
Compute the decoding network .
Create a 2D Gaussian
Register a layer .
Record the sum of layer outputs .
Returns a list of all available parameters .
Set up variables for the model .
Compute the Compound .
Save network parameters to disk .
Load model parameters from file .
Logs the output of the model .
Register new updates .
Register training updates .
Register monitors .
Return the l2 norm of a tensor .
Dump elt to file object
Load a list of strings from a file - like object .
Load parameters from a file .
Decode a state string .
Parser for X credentials .
Filter request elements based on access type .
Login to provider .
Return a normalized version of dict .
Convert a list of dicts to a dict .
Parse the body of a json query
Resolves a provider class or a module name .
Serialize the cookie .
Save session data
Get cookie data .
Return a string representation of the resource .
Return the signature of the request .
Serialize the value to a string .
Returns True if the token is valid False otherwise .
Return True if the cache expires False otherwise .
Return a string representation of the configuration .
Return True if content is a binary string
The content of the response .
Access user info .
Log in to the user
Generate a session key .
Set the value of a session .
Generate a CSRF string .
Log a message to the logger .
Return True if status is in category
Split a URL into a base and query string .
Set cors headers to response .
Returns a dictionary of kwargs for a Flask app instance .
Return a string representation of an object .
Ensure input is an iterable .
Return True if two numbers are equal .
Deserialize a string representation of an audio segment .
Create an audio segment from a file .
Create an audio segment from numpy array .
Return a new audio segment joined with the given others .
Return a pickled string representation of the state .
Choose an offset front from candidate offset front .
Get the closest offset front of onset sample idx .
Return the offset after onset and onset after onset
Match offset front to onset front .
get consecutive and overlapping frontends
Get a front id from a list
Yields front ids from onset front .
Get offsets for given onset and onset .
Remove overlaps between two segments .
Remove front that is larger than size .
Merge adjacent segments into a single segment .
Split a mask into multiple masks .
Downsample mask and stft of two arrays .
Perform an ISTFT task on the given masks .
Bandpass filter .
Lowpass filter .
Convert list of responses to tf . Tensor .
Expand and standardize the response data .
Return True if two elements are equal ignoring order .
Load audit matrix from audit file .
Convert a list of rows to tf input matrix .
Update the index url from the command line .
try to autodetect files
Convert an error to an appropriate string .
Get stream info .
Open a file - like object .
Get a child node .
Get the next sibling of the node .
Get the previous sibling of the node .
Set the name of the variable .
Set the value of the parameter .
Append a child to the end of the element .
Return a string representation of a child element .
Return a copy of the element .
Return a copy of the element .
Remove a child node from an element .
Retrieve the results of a LSL resolver .
Print all words in a word .
Run autocomplete on a string .
Compute the n - gram of a token .
Iterate through a list of processors .
Perform a function on an iterable .
Return a fuzzy fuzzy representation of a word .
Do fuzzy fuzzy .
Run fuzzy index on a word .
extract manytomany relations
Print a help message .
print redis info
Execute a dbkey command
Do a geohash .
print index details
\ x1b [ 1mNAME \ x1b [ 1mNAME \ x1b
Send a request .
Map a list of requests .
Get bits from an array .
Convenience function to reinterptet to reinterval .
Convert a slice to a string representation .
Recursively find all files in a directory .
Return True if the given iterable is in the given iterable .
Iterate through each item in the given unit .
convert x to integer
Return True if the given number is a power2 .
Add a case to the graph .
Add a statement to the definition .
Register a vcd variable .
Format the simulation .
Log a change change .
Format a method as a single HTML fragment .
Add agents to a unit .
Get the clk associated with this unit .
Yields distinct items from iterable .
Yield grouped items from a collection .
Flatten an iterable .
Merge nested if statement into self .
Removes any signals that are connected to the given netlist .
Check if a proc is too simple .
try to merge two processes
Reduce a list of processes into a single process .
Add a write request .
Return the name of process and mark outputs .
Cut all drivers of a signal .
Synthesize this entity .
Get the maximum number of stm for a given stmt .
Get the maximum number of statements in a ProcessorProcessor .
Write data to the simulation .
Set the direction of the master .
Load declarations from interface .
Returns a list of signals for this interface .
Returns the physical name of the entity
Return the bit length of the DataFrame .
Get sensitivity by operator .
convert bits to a type
Reformat bits to h struct .
Return the number of words in the given range .
Group items by word index .
Pack the data into a binary string .
Clean the metadata of all INDRA Statements .
Discover enclosure for statements .
Walk the list of signals and find the corresponding context .
Get the RTL context for this token .
Recursively reduce the result of reduce .
Merge two statements into this statement .
Return True if two statements are mergable .
Merge a list of statements into a single rank .
Merge two statements into a single list .
Try reduce a list of statements .
Called when the list of statements are completable .
Set the parent stm for this statement .
Register a list of statements to the target .
Destroys this node .
Clean up all sub - unit interfaces .
Recursively flatten fields in a sig or scalar .
Return a signed version of this DataFrame with the signed value .
Add a processor for sensitive to sensitivity functions .
Evaluates a condition and returns the result .
Connect a port on a sub sim unit .
Return a vector representation of a vector .
Write INDRA statements to the given processors .
Evaluate a parameter .
Set the field s value .
Returns a string representation of the given map .
Removes all of the memories from the memory
return the index cascade
Convert a Python value into a string .
Try to cast a value to a type .
Return a string representation of a sig or type .
Recursively walk through all interfaces in an interface .
Connect a packed packed interface to a packed packed interface .
Return a string representation of an interface .
Convert this object to an rtl .
Register an interface in an impl
Try to reduce and reduce a sig .
Attempt to reduce a sig to a sig .
Get a base name scope .
Serialize the unit for the given unit .
Get a cond expression .
Return a string representation of the given size .
Return the const name for the value
Cut all drivers of a signal .
Load an array from an array .
Load the bitmap from a hdl file .
Load from hdl .
Get the width of the item .
Recursively flatten the contents of this object .
Add a signed integer to the given width .
Get indent number .
Raise an error if the name is not None
Register a parameter as a parameter .
Update the parameters of this object from another object .
Register a unit
Register an interface .
Add an array to the container .
Return a single driver instance .
Run static eval on all operands .
Evaluate operator with operands .
Return a new string with new indent .
Try to connect to an interface .
Propagate clk to all units
propagate clk to clk
propagate clk and rst to clk
propagate rst n units
propagate rst to rst
Iterate bits in a signal .
Serialize exclude eval as a string .
Serialize a single unit .
Serialize params to a single unit .
Get the full name of the object .
Make a string representation of the objects in this collection .
Convert the given unit to a string .
Reconnect signal signals to model class
simulated unit tests
Initialize the simulation .
Connect this receiver to a signal .
Register a new intern signal .
Attach this driver to this driver .
Get intern sigsignature .
Returns true if the given process is ev dependent on the given process .
Add a process to the event queue .
Add a processing proc to the scheduler .
Schedules the combinator to be queued .
Schedule apply values to the pool .
Returns a function that will be called when a new value is resolved .
Run all comb processes in the output containers .
Run seq processes .
Apply the values to all processes
Return a string representation of a sig .
Write a value to the signal .
Add a process to the event queue .
Simulate a synthesised unit signal .
converts a list of statements into a ternary operator
Calculate the hash distance between two hashes .
Generate the average hash of an image
Calculate the distance between two images .
Setup the device .
Update the state of the device .
 mute the device .
Increase the volume up .
Decrease the volume down .
Set volume level .
Reset the game .
Returns the piece at the given square .
Removes a piece from the board .
Add a piece to the board .
Checks if a move is suicide or not
Whether the player is a suicide .
Return whether the game is a game over .
Checks if the current position is a checkmate .
Returns True if the trajectory is 4fold repetition False otherwise .
Pop a move from the stack .
Return the sfen representation of the game .
Push a move to a move .
Return the hash of the board .
Get the symbol of the piece .
Creates a piece from a string .
Return a string representing the USI .
Construct a Piece instance from a string representation .
Parse a list of commits .
Parse a commit string into a Python dict .
Load configuration from command line .
Generate a yaml . yaml file
Cast string to appropriate type .
Returns a list of dates between two dates .
Parse a date string into a datetime object .
Loads data from a currency file
Set the missing values for a currency
Get the rate for a currency
Progress animation .
Read a string from the file .
Write a record to the file .
Return a string representation of the given words .
Return a string containing the comments of the file .
Close the DAF
Generate a sequence of positions from a given table .
Close the DAF
Load the initial coefficients from the DAF file .
Visit a call node .
Check if a binary operator is a string .
Check for dict keys and values .
Check if a string is valid .
Check for keyword arguments .
Handle exception handler .
Detect the logging level of a node .
Get exception handler name .
Get the id attribute of a value
Return True if node is a bare exception .
check for exc info
delete a file from the database
Renders the PDF content .
Override this method to customize the response .
Encode a string using unidecode .
Configures the given module with the given prefix .
Convert a string to an underscore .
Ensure all indexes exist in mcs .
Parse a file and return a list of prices
Load the contents of a file as a list of lines .
Parse a price line
Gets the symbol for a given symbol .
Load symbol maps .
Get a session string
Imports prices from a CSV file
Print latest price .
Download price data .
Delete all security symbols associated with a symbol
Get the default session
Add a new map entry to the database .
Lists all symbol maps .
Get a symbol by its identifier .
Read lines from a CSV file .
Map a price entity to a price model .
Convert a price model to a price string .
read config from file
Returns the path to the config file .
Create user config file
get config path
Get the contents of the config file .
Set an option to a value .
Get the value of an option .
Save config to file .
Parse a symbol and return its name and mnemonic .
Add a price to the table .
Download price for symbol
Get a string representing the session .
Get prices for given date and currency
Get prices on a given date .
Delete all price items in the database .
Delete prices for a security symbol
download price for symbol
Get security securities .
Return a partial .
Update child calls .
Recursively descend the tree rooted at this node .
Fail if the student has chosen .
Return a string containing all defined items .
Return a parser for the given parser tree .
Test if a message has a context loop .
Check if the solution has a correct context .
Check if a student has a part .
Check if a student has a student part .
get the anomaly of the sky
Initialize a Flask application .
Add an LDAP server to the pool .
Remove a connection from the stack .
Destroys the ldap3 connection
Authenticate against the server .
Attempt to authenticate using LDAP
Get user groups
Get user info .
get user info
get a single object
Returns an ldap3 connection
Create a connection to the database .
Create a ldap3 connection
Destroy a connection .
Search for the container .
Returns a list of all users
Search all jobs in a collection
speak the client
An announce method .
Update secrets
update headers
Check that the client has secret information .
download a file
download a file to a stream
update auth token
Get or create a folder .
Reads a JSON response from the server .
get a bucket
Update client secrets .
Initialize client .
load secrets
Return log content from the server
List all logs in the bucket
Create a folder in an endpoint
Init transfer client
list all containers
Print the status of the backend secrets .
Add a variable to the backend
remove a variable
Activate client secrets .
Delete backend secrets
Update base with the base value
Construct basic auth header .
Generate a HMAC signature .
Generate a header signature .
Call a DELETE request .
Make a HEAD request
Perform a GET request .
verify SSL checks
remove an image
Get the lookup from the version file
Get a list of dependencies for a particular lookup
get singularity version
check installed software
Get the path to the installdir .
Return the default thumbnail of the registry .
Runs a shell command .
Get metadata for an image file
Update the secrets
print a response to a file
Kill all commands .
List logs for a container .
Returns a list of the names of the collections in the server
Update secrets
launch an ipython notebook
get a list of manifests
Get the manifest for a repository
Get download cache .
extract environment variables
update base settings
Update the secret and headers
Get metadata as a dict .
Get client secret settings .
get and update a setting
Update a setting .
Generate authorization string .
Lists all builders in a project .
return a list of templates
get ipaddress
Execute the build
List all containers in the current bucket
Search all the containers in the current bucket .
Command line entry point .
Entry point for the Sregistry command .
Initialize a database
get build template
list all endpoints
List files in a given endpoint
returns share url
Read the client secrets file .
Get all the available services .
Delete an object from a bucket .
delete a file
delete instance by name
Get subparsers for a given parser .
Generate string with given delimiter .
Get a temporary directory for temporary files .
extract a tar archive
Extract a tar archive .
Get the SHA256 hash of a file .
Read content of a file .
Read JSON from file .
delete a file
Push an image to S3
Get or create a collection .
get collection by name
get a container
List docker images
Inspect a container
Rename an image
move image to path
remove an image
parse a header from a recipe
Find a single recipe for a given file .
create a tarball from a list of package files
Update the metadata of a blob .
Format a container name .
Whether or not the error stream should be displayed .
Emit an error message .
Write a message to a stream .
Display a table on a table
Push an image to the server
get a template by name
Get the manifest for a given tag
get a build template
Update client secrets
Context manager for raising errors .
Create a new file - like object .
Get the URL of a gravatar .
Generate a URL for a Gravatar .
Checks if the given email has a gravatar .
Generate a URL for a gravatar profile .
Generate a sequence of chimera blocks .
Calculate the chimera block quotient .
Enumerate a list of mesomers .
Enumerate a molecule .
Apply transform to molecule .
Return the canonicalized Tautomers for a given mol molecule .
Validate a smiles string .
Convert a string to a standard format .
Enumerate all tautomers in a given smiles .
Convert tautomer to canonical form .
Return the tautomer parent of a mol .
Get the fragment parent of a molecule .
remove stereo parent from molecule
Return the isotope parent as a string
return the charge of a molecule
Entry point for the molvs command .
remove substructs from mol
Choose the largest compound .
Integrate an IVP using the given parameters .
get mems of org
get teams from org
get all repos in the repo
Get the number of contributors for a repo .
Get number of pull requests .
Get all issues in a repository
Get readme readme .
get the license number
get all commits in a repository
Writes org json to file .
Write the summary to a file .
Write languages to a file .
Ensure directory exists .
remove date from file
Get a list of all orgs in the current user .
Create an enterprise session
Check API limits .
Connect to a GitHub session .
Query repositories .
Get an organization .
Write the distribution to a file .
Construct a project project from a gitlab repository .
Convert a license into a string .
Get information about the repository .
Get releases from a URL .
Get the referrers from a URL .
get data from url
Write repo to json file
write data to file
check the number of times in a file
Write the data to a file .
Write the referrers to a file .
Convert a JSON file into a list of strings .
Get records from an HTTP URL .
Return a string representation of a JSON file .
Login to GitHub .
Get mems of org .
Write logins to file .
Connect to a stashy .
Connect to a Gitlab session .
Query repos .
Compute the labor hours for a given sloc .
Remove all empty strings from a dictionary .
read a gql query from a file
wait for current process to complete
Print the number of retry times .
load data from json file
Save data to a JSON file .
create a tss connection
create a tfs project
create a tfs client
create a tfs client
create a tfs client
Get git repos for a given project .
Get a list of branches from TFVC
Get the number of commits in a year .
calculate the total commit for the given weeks
Write the report to a file .
Log a timing information .
Log a statogram .
Rollup the current leaderup stats .
Convert value to string .
Convert value to python type .
Prepare value for field .
Recursively resolve the given path .
Convert a list of dictionaries into a dictionary of singular sequences .
Return the value of the histogram .
Mark the record as recorded .
Return the mean rate of the pump .
Mark the value as number .
Send a metric to the client .
Serialize a metric into a list of strings .
Return a metric string for the metric .
Write a metric to the buffer .
Get a value from an online configuration file .
Ensure data is unicode .
Get or set the default value for a given option .
Map ledger IDs to guid .
Get the divisions and divisions .
Map exact invoice numbers to their corresponding foreign invoice numbers .
Create a view from a string .
Create a form view .
A decorator that converts a method view into a view .
Create an API view .
Create a generic API view
Create model view set handler
Create a stream from a file descriptor .
Read data from the socket .
Close connection .
Add a watch to a file .
Remove a previously created watcher .
Setup a watch for a file descriptor .
Setup the watch loop .
Parse an event string .
Trigger touch .
Mark the interval as success .
Update the timer .
Close all connections .
Connect to a nsqd server .
Make a request to the DNS server
Set max in flight number .
Log a warning when a client has failed .
Add a callback to a listener .
Remove a listener from the listener .
Triggers a named event .
Publish a message to a topic
set feature transform
Perform prediction on data .
Remove duplicates from paired fastq pairs .
parse a depth file
Set the template to use .
Set the name of the main channel .
Render a Jinja template .
Render the template in a string
Update main forks .
Update the attributes of this instance .
Set the secondary inputs for a channel .
Parse assembly assembly file .
Get the gc content of a sequence .
Returns the assembly assembly length .
Write the assembly assembly to a file .
Write report to a file
Remove inner forks from text .
a helper method for injecting arguments in a pipeline .
find the source lane in a pipeline
Parse a lane string into a list
Build a linear connection between plist
Add unique identifiers to a pipeline string .
remove identifiers from pipeline links
Check required files exist .
Return a dictionary mapping items to their position in the header .
Convert a string representation of a value into a float .
Convert a size parameter to a float value .
Get the list of processes from the log file .
Clear the inspect info of all processes .
update barrier status
Retrieve contents of a log file .
assage cpu usage and memory usage
Update the log inspection .
Display the overview .
Update the position of the screen .
Change the padding of the right left to the right left
Get last n lines .
Prepare the pipeline info for the pipeline .
Returns a json file as a dictionary
Return a hash of the current run .
Get the path to the next flow file .
strain the alignment of the assembly
Run brew innuendo pipeline .
List all available recipes .
Validate a pipeline string .
build a task pipeline
Build a task pipeline .
Run the pipeline in a pipeline .
Build a component string .
Write a report to a JSON file .
Parse log files .
Fix all contigs in assegments in assegments
delete all files in fastq
Parse a list of files .
Parse a file
Get a contig id from a contig string
Writes the report data to a JSON file
Parse assembly assembly assembly file .
get summary stats
Get labels for each contig .
Returns the number of characters in a string
get the number of contigs in a sliding window
main entry point for running skesa
writes report stats to report
parse the bowtie log
Parse process name and directives .
Add a dependency process to the process .
Search for a given template in the process tree .
Add header to template
Add footer to the template .
set init process
This method sets the secondary channels in the configuration .
Set the status of all processes .
Get the manifest as a string .
get the configuration for all processes
Write viz to file
Write configs to a file .
Export parameters as JSON .
Export the directives to a JSON file .
Build the nf file .
set kmers option
get the report id
Read the trace file and update the report queue .
Update the log watch .
Send a live report .
Init live reports for a given report id .
Close connection to the report .
convert adapter fasta file
run mash output to assembly file
Return a string representation of a message .
takes a pipeline map and parses it into a dictionary
Get the range of a qual string .
Filter assembly file based on minimum coverage info .
get assembly size
This function takes a set of contigs and calls filter on each assembly
convert camel case to camel case
Return a dictionary mapping process names to classes .
Generate a file with the givenick
Map the data to the vector w
 median filter
Compute the KrNN residuals
Compute ssm of x .
Compute the non - zero - covariance matrix between x and g .
Gaussian filter .
Compute the distance between two points .
Circular shift x
Convert a list of integers into an embedded array .
Format plot formatting .
Plots the boundaries of the array .
Plot the labels of the given set of labels and intervals .
Get a list of feature segments .
Convert a sequence of feature segments to a 2D feature matrix .
Fit the model to data .
Read reference annotations .
Searches for an estimation .
Get all boundary algorithms .
Generate configuration dictionary .
Get list of audio files .
Read a list of annotations from a file .
Returns duration in seconds .
Write a series of times and labels to a MIDI file .
return the filename of the audio file
align beat times together
estimate beats from librosa
Read annotations from file .
Compute beat sync features .
Returns a list of all parameter names .
Compute framesync timesync .
The frame times of each frame .
return a list of features
Preprocess feature string .
Synchronize the parameters and remove empty segments .
Entry point for the script .
Print the mean of the results .
Compute information gain for an annotation .
Processes a track file .
Generate results file .
Compute all features in a file .
Compute all the features in a dataset .
Gaussian cost function .
Lognormalize f .
Normalize the values of f .
Get a numpy array of time frames from a given duration .
Remove empty intervals from times and labels
Convert audio events to audio file .
Synchronize two labels .
Processes a segmentation level .
align the end hierarchies
Compute the distance of the data .
estimate knee k - knee
Get cluster data
Run k - means k - means .
Compute the Bic Information Criterion
Returns the magnitude of x .
Convert a json file to a numpy array .
Convert a bounding box to a numpy array .
convert json to numpy array
Convert beats json to numpy array
Compute the 2 - D Fourier transform .
Compute the label indices for a given cross - correlation matrix .
Apply a filter to the activation matrix .
Get the boundaries module for a given boundary type .
Get a label module given a label id .
Run a hierarchical segmentation on the audio file .
Run a single flat file .
Parse the command line .
Run a task in a separate thread .
Spool the given iterable .
source to the target stream
Returns a dictionary mapping the language code to a dictionary .
Prints a dictionary of information about the translation table .
Remove nodes from a network .
Write a network to an HDF5 file .
Load a Network from a HDF5 file .
Convert a dictionary of strings into a dictionary of strings .
Makes an osm query and returns the JSON response
Builds a node query string from latitude and longitude .
Return True if value is a regular expression .
Return a string representation of the given value .
Compare a value against a string expression
Trigger all registered methods in an instance .
get a matcher by name
Initialize a matcher .
Request body .
Sets the body of the response
Set a value in the container
Append functions to target .
Trigger a request .
Add headers to the request .
Add a header to the request .
Add headers to the request .
Add parameters to the request .
Set request body .
Attaches JSON to the request .
Set the XML of the request .
Read a text file .
Set the persist flag .
Set the error .
Send a reply to the mock .
Match a request .
Set the mock engine .
Add a mock to this engine .
Remove a mock .
Activate the mock engine .
Disable the mock engine .
Returns True if the network should use network filters .
Match a request .
Return a copy of this request .
Context manager that temporarily yields a context manager instance .
Add interceptors to the engine .
Remove an interceptor by name
Get the value of a setting .
Return the SQL for this column .
Override django s save method .
Get a placeholder value .
Get a string representation of the column .
Generate the SQL placeholder for the given value .
Base regression .
The covariance matrix .
Recursively recursively recursively traverses the tree rooted at the root of the tree
Calculates the average value of all leaves in the tree
The explained variance of the tree
Returns a regression model
set the correlation rate
count the number of branches in the tree
Calculate the cost of a branch node .
Attach the branch length to the tree .
Normalize a profile .
The gtr modifier .
Set the gtr .
set seqlen
Attach sequences to nodes
Prepare the tree .
Calculate internal nodes and internal nodes .
Calculate the distance between all leaves in the tree .
Get the branch mutation matrix of a branch
Return the expanded sequence of this node .
Returns the fitch state of the node at pos .
Return the length of the sequence at pos .
Calculate the ancestral likelihood of the tree .
Convert the branch length to GTR
Calculate optimal branch length
Reconstruct a single alignment
Evaluate the QR code of the QR code .
Create a custom GTR object with custom parameters .
r Check if the QR decomposition is correct .
Compute the optimal optimal position of a sequence .
Returns the probability of a given profile pair .
Evaluates the evolution of the model at time t .
Returns the log - likelihood of a sequence .
Set branch length .
Plot the root to the tip
Returns a string representation of the lh of the tree .
add coalescent model
Find the best root of the tree
Assert that the tree is inferred .
Create a GTR object
Read a VCF file .
Calculate FWHM .
Create a delta distribution function
Assign dates to the tree
Setup the tree regression
make time tree
Log likelihood of the tree .
Convert dates in the tree to their corresponding dates .
Returns the date uncertainty due to the given number of dates .
Return the minimum interp of an object .
Return the median interpian of an object .
Returns a string representation of date .
Create a DCData object from a regression model .
Close websocket connection
Receive a single line from the server .
Send data to the client .
Send an instruction .
Convert unicode to unicode if necessary .
Load an instruction from a string .
Encode an argument as a string .
Return a string representation of this instruction .
Returns the URL for the given class .
The url of the instance
Returns the URL for the given class .
Download a file .
Return the parent object
Ask user for credentials .
Prompts the user to interact with the user .
Print user information
Print user details .
Return a new RangeSet with only the specified coordinates .
Return a copy of this query with only the specified chromosome .
Execute a set of facets on the query
Convert a list of filters into a JSON string .
Return the next line in the buffer .
Execute the query and return the response
Migrate a dataset
Parse the arguments passed to the solver .
Construct a new model instance from the given values .
Logout the user
The child object of this task .
Parse snpeff output
Get authentication credentials .
Save the configuration to a file .
Format a value into a string .
Build a row from a list of cells .
Build a row of columns .
Get row attributes from row and column alignment .
Migrate this source to another dataset
Upload files to a folder
Validate a full path .
Validate an API host url .
Annotate a list of records .
Evaluate the expression
Set format name .
Register a format handler .
Return a string representation of a table .
The user config file .
Return a list of configuration files .
Returns a list of file paths to include .
Write the default config to a file .
Read a list of configuration files .
Truncate string to max width .
Replace all occurrences of a string .
Calls multiple commands in a sequence .
Apply an option to a command .
Initialize options .
Run the command .
Run all clean docs
Return a tuple of strings truncated to a max field width .
Formats a row into a string
Create a vertical table from data .
Generate a string representation of a table .
return True if type is a valid certificate type
Return True if type is a valid value .
Return True if this is a binary type .
Generate a key from a template .
Generate a public key pair .
Find a list of CDK objects .
Inserts an image into qr
Export a panel .
Returns the first weekday in d
Repeat a day .
Repeatedly repeat a day .
Periodically fill the last occurrence of the week .
Handle a single chunk of a single event .
Export variants asciatives .
export mt variants to a mappings file
Update a user .
List str variants .
Get information about a particular variant .
Get string variant information .
Verify a variant
View a clinvar .
Retrieve cancer variants for a case .
Page for a variant .
Display a single evaluation .
Get a classification by name .
Upload a panel to an institute .
Download verified excel file .
get gene IDs by alias
Add incomplete penetrance genes to gene
Make a request to a URL and return a JSON response .
Get a list of nodes from mme base url
Get the cytoband coordinates for a chrom and position .
Determine the subcategory of a given reference length .
Get the length of a string based on the length of a reference .
Get the end of a character
Parse the coordinates of a variant
Update a panel .
Export a panel .
Edit a panel .
Load a delivery report
Return a list of phenotypes from the database .
Print whitelist .
Build phenotype object
Get information about an HGNC gene
transforms a query into a list of strings
List institute .
List available transcripts .
Display a string for a day .
Fetch variants from the database .
Get a list of variants
Instantiate a str variant
Return the header of a variant
Get predictions for a set of genes .
Find a bai file in bai file .
Get the case counts for the case .
parses gene object
Convert a transcript object into a string .
Get the end position of a variant in a variant object
Return the frequency of the most common frequency
Convert clinsig obj to human readable string
Return a formatted URL for a Dataset .
Get a cosmic link for a variant
Build a beacon link for a variant
Returns the URL for the UCSC link of a variant object .
Return the string representation of spidex .
Return a list of expected inheritance of variants in a variant object .
Returns a list of callers for a given category
Retrieve cancer variants for a case .
Export CLARV to a dictionary .
Return a dict of CLVarsing submission information .
Return information about a variant .
Accumulate a variant
a helper method to convert an evaluation to a string
Upload hgnc files to the database .
Write verified excel file
Export all genes in a given adapter
Parse a clnsig session data into a dict .
Parse compound information .
List all genes in a container
Show case information .
List available MongoDB collections .
Instantiate an institute .
Get a file handle .
Get net number from req
get the next and previous and prev value
Check if the year is in the current time range .
Calculate the weekday of a date .
Parse individual individuals .
Parse a family from a ped stream .
Build an evaluation .
Get the acmg term from acmg term .
Lists variants in a case .
Get all variants in the database .
Returns a variant object
return a list of gene variants
Returns a list of verified events
Returns a list of causatives for a case id or case id .
returns a list of causative variants that are causative variant ids
Yields the causative id s causative id
Delete variants from a case .
Find variants that overlap the given variant object .
Returns a list of evaluated variants
fetch a list of variants
Get a mongodb connection
Get a list of objects submitted to a variant
Generate header for each submission object .
Return a list of submission lines from a submission object .
Load a panel .
Build a string representing the exon
Delete a gene panel
Drop all indexes
Delete a user
Drop genes associated with a build .
Drop exons from a build
Delete a case .
Print individual individuals .
List cases .
Load a user by email address .
Login to Google .
Build an institute object .
delete event by id
Returns a list of events in the database .
Get user events .
remove a phenotype from the case
Parse individual genotypes from individual positions .
Check the coordinates of a chromosome in the specified coordinates .
Return a list of hpo terms .
Print transcripts .
Manage exons
Load a region for a cluster .
Get all events for a particular month and month .
Get the live time for the current user .
parse requirements from requirements file
Get existing gene for existing gene
update a panel
Create a new panel
Export a panel object
Get archive information .
Migrate a case to an archive
List hpo terms .
Configure extensions .
Register blueprints in app .
Print aliases of gene .
Build a panel object
Report verified variants .
Print variants .
Return a VCF entry string from a variant object .
Run the server on the server .
Generate a md5 hash of the given arguments .
Initialize the connection object
Setup the database .
Index database
Setup a database .
Setup demo .
Setup mongodb database .
List institute information .
Parse a list of genetic models info .
List gene panels .
Add an institute to the database .
Get institute object by institute id
Return True if the date matches a regular expression .
Parse a date string into a datetime object .
Print HPO gene IDs .
Parse a rank score entry .
Add a user .
check connection
Load a delivery report
Add user object to database .
Parse pileup request .
load exons from database
Update compound compounds .
Add gene links
List HGNC genes .
Parse HGNC genes .
Get the open clinvar submission for a given user .
Update a clinvar id .
Get the clinvar id associated with a submission id
Add a submission to a submission .
Update the status of a clinvar submission .
a method to get a list of dictionaries for a particular user
Delete acls object from the database
Returns a dict mapping case id to clinv variables
Parse the obo file into a list
List all genes .
Get a list of HGNC genes .
API endpoint to query genes
Intelligently look for an institute .
Get the institute of the given login user .
get gene id from gene info dict
Updates a gene panel .
Lists diseases in a database
Load disease terms from phenotype file
Parse the frequency of a variant .
Parse sv frequencies into a dictionary
Lists users .
Compare existing panels to new panel
update gene version
Add a gene panel .
Get a panel name
delete a panel
Get a gene panel from the database
Get gene panels .
convert a list of hgnc gene ids to a dictionary
Update a panel .
Add a pending panel to the database .
Returns clinical symbols of clinical symbols .
List cases .
Emits a record .
Load indexes from the database
update indexes
Drop indexes .
Build mongodb variant query
convert query to string
convert query to chromosome
a filter for gene
Remove all databases from the server .
Parse a panel from a csv file .
Load one or more gene objects
insert transcript into database
Load transcript objects
Get a Transcript object for a given HGNC identifier
Returns the HGNC ID associated with the given symbol .
return a list of HGNC genes
return all genes in the database
number of genes in the build
Drop genes .
Drop transcript .
Drop exons .
get a dictionary of transcript ids
Convert HGNC symbol to gene dictionary .
get gene by symbol
get gene IDs by alias
Returns a dictionary of Ensembl gene IDs
Return a string representing the HGNC gene associated with an alias .
Add hgnc id to genes
get coding intervals
Load an OMIM panel
List all cases .
Get a case for a case .
Check to see if the institute matches .
Match MME match .
Delete a match .
Render a pdf report
Detailed diagnosis of an institute .
View the status of an institute .
Assign an institute to the institute .
Get all the hpotent terms .
Validate and save a valid variant .
Marks the case as causative as causative .
send a delivery report
Shows a share of an institute .
Rerun an institute .
Open a research link to an institute .
Uploads a VCF2Cosure to a file .
Send a multiqc command .
Convert case data to a list of strings .
Get a list of clinvar submissions for a given user .
Export all of the samples in the case to a temp excel file .
Returns a list of diseases in the given HPO database .
Convert a VCF to acyt closure .
Return a multiqc for the case .
Get all unevaluated items in the store
a method to delete mme delete
a helper method to get the match data for a case
mme match method
Fetch hgn files
Parse the callers for a variant .
Build a transcript
Load an institute into the adapter
Parse the cadd value .
Create a case file
Update a variant
Update the rank of a case .
Update compound compounds .
Update compounds in variants .
Update variants in bulk .
Load a variant from the database
Upsert a variant in the database
Load variants into the database .
Assign a link to an institute .
Share a collaborator .
Update the diagnosis number of a case .
Update the case checked event .
Update order verification .
Returns a sorted list of sanger items .
Validate a variant .
Mark a case as causative .
Update a dismiss variant .
Update a variant in the database .
parse ids
Parse simple id and alt positions
Generate a md5 hash for a document .
Convert a GNCAP panel to HTML
Return a variantid from a variant object
Returns the number of cases in the database .
update a case list
Get a case identifier
Delete a case .
Add a case to the case collection .
replace a case in case
update a case id and its variants
Adds an evaluation of a variant to the database
Get all evaluations of a variant
parse transcript lines
Parse the ensembl gene request .
parse ensembl transcript request into dict
parse ensembl genes
parse ensembl exons into a dict
Parse ensembl exon request .
Initialize a logger .
get phenotype information from genemap file
Scrape genes .
Convert string to int if possible .
Return a string representation of the month and the current date .
format day and day
Returns a string representation of the month .
Helper for popover
Parse panel info .
parse a gene panel
Print diseases associated with a user .
Drop the hpo database
Returns a dictionary with all users and events .
Parse the conservations of a variant
Parse a variant s conservation score .
Get general information for the case .
Get the number of cases grouped by case
Returns a json response
Get year and month from request .
Check for cancelled events .
Get the hpo term
Search hpo terms .
Get disease term by disease identifier .
Get disease terms .
load disease term
Generate a list of gene IDs .
read an HDF5 file
Set up timestamps for the time axis .
Calculate the lst of the source .
Create a blank dc channel with n coarse chan .
Calculate the plot extent .
Plot a waterfall plot .
Plot time series data .
Write the filterbank to a file .
Calibrate bandpass pass pass through each bandpass .
Convert a numpy array to a fixed number of channels .
Returns the fractionalp symbols of a string .
write polfilpole to f
Returns the index of the closest value in xarr
Rebin a numpy array .
Unpack an unsigned integer into a string .
Calculate the differences between two time series .
Plot a calibrated diode cross - section of a digital angle .
Calculate the size of the selection
Calculate the shape of the channel
Set the frequency intervals for the FASTA file .
Populate the timestamps of the file .
Calculate the coarse - gridded channel number .
Calculate the number of blobs for a given blob dimension .
Returns True if the chunk is heavy .
Read all data from the file .
read a row from the file
Read data from the container .
Update the header of the histogram .
pretty print information about the file
Write the container to a file .
Write the container to an HDF5 file .
Write the image to a hdf5 file .
Return a tuple describing the blob dimensions .
Get the chunk dimensions of the file .
Grab the time series data and timestamps .
Command line tool for gppi plot
Read the first header
find the number of data blocks
Prints the statistics block .
Plots a histogram of the data block .
Generate header of filterbank file
Find the header size of a file .
Integrate the data using a given channel .
Calculate the center frequency of a given frequency .
Calculate the f ratios for a given channel .
Get the value of the spectrum for a given spectrum .
Extract the header of a file
parse a file into a filterbank
Generates a signature string from a file object .
calculate the number of bytes in a file
Return a dict representation of the traceback .
Create a subparser for the given rec type and arguments .
make a parser for zonefile
Remove comments from a string .
Add a default name to the text .
parse lines from a text file
Parse zone file
quote each element in a list
Parse a schema string
Convert a list of classes into a python package .
Return a string representation of a record .
Load a JSON dict from a JSON dict .
Deserialize a JSON string into a dict .
Add a schema to the schema map .
Get the schema name associated with a record .
Return a string representation of the object .
Returns a dict with the schema for the given record .
Get the root schema dict for a record .
Read mr file .
Write the output to a stream .
Push a value to a ordered dict .
Returns a string representation of the resource .
Get raw search results .
Return a list of entities including the given attributes .
Get Entity from href
Give another quote
convert a string to a string
Return an elementary rotation matrix .
Calculate the sky irradiance of a vrad .
calculate the parallax error
Calculate the magnitude of magnitude g .
Returns the magnitude error eo error eoment error eo .
Calculate the average transits .
Returns the angular distance between two vectors .
Transform cartesian coordinates to cartesian coordinates .
Transform the sky coordinates to the sky coordinates .
Compute the Jacobian of the covariance matrix .
Returns the error scaling factor for an observable .
convert a value to a string
Apply a function to each item in the collection .
Return a new QuerySet with only the elements that match the given function .
Return a subset of the collection .
Return a sequence of items from the collection .
Return a copy of the items in the collection .
Zip two strings together .
Find a node matching the given arguments .
Returns a list of the system path to the operating system .
Build a list of minimal runs from a list of events .
Print the performance of the benchmark .
Produce a string representation of the model .
Clean the given code string .
Round to nearest integer .
Return a list of blocks with blocking boundary .
Calculate access to results .
Perform the analysis .
Strip and uncomment the number of lines .
Remove unreferenced labels from a list of strings .
Select the most common string in blocks .
Prompt the user to select the increment value .
Inserts the parts of the specified start line into a string .
Generate a string representation of a space .
get the last modified datetime in a directory
Check if arguments are correct .
Entry point for the script .
Load data from command line .
Creates a symbolic symbol .
Transform a multidim to 1d .
Transform a multidim to an array ref .
Finds node type of given type .
Check the number of variables in the model .
Set a constant .
Return a string representation of the given expr .
get array sizes
Calculate the relative offset of a variable .
Removes duplicate accesses from the destination
The iteration length of the loop .
Return a string representation of the loop stack .
Returns a list of free symbols in this Compound .
Return a dictionary mapping source variables to their source code .
Returns a string representation of the symbolic distances .
Convert a global iterator to a dictionary .
Returns a string representing the global iterator .
Convert a list of indices to a global iterator
Get the maximum global iteration number .
Print the kernel information .
Prints information about the current model .
Prints the constants in a pretty format .
Print the kernel code .
Convert a math expression to a symbol representation .
Get the offset of an array .
Get the basename of an object
Get the type of the variable in the CF
Build a list of const declarations .
Get array declarations .
Returns a string containing the kernel nest of the kernel .
Build array declarations .
Find innermost for loop nest in loop nest
Build kernel initializations for array dimensions .
Build a dummy statement for the kernel block .
parse kernel function declaration
Build a list of scalar declarations .
Get the kernel code of the kernel .
build a kernel call to the kernel
get the main code of the template
Run iCa analysis on the kernel .
Returns a unique identifier .
Get last modified datetime .
Return the compiler and flags .
Parse a perfctr event into a tuple .
Ensure that there are no overlap in the given range .
Get the path to the header file .
Align an iteration to a given iteration .
Returns a list of strings representing the load of each load .
Returns a list of string indices for each string in the dataset .
Returns a list of strings for each item in the cache .
Returns a list of all stores in the machine .
Returns a list of evicts per row .
Get infos as dict .
Replace an environment variable with a value .
Configure arggroup .
Parse description as a string .
Builds a VAT item for the given course .
record a purchase request
get course content
get course content
update unenrolled list
Send an email refund to a course
Send an offer assignment notification email .
Retry order number .
Fulfill an order .
Return Sailthru client
Get the value of a key from the cache
Add a value to the cache .
Get a configuration variable .
Get the filename overrides for a given variable .
Get the first version of oplus .
Eplus version number .
Populates the dev from a json dictionary .
Returns a list of external files
Set defaults for all tables .
prepare extensible info
strainly short references
Returns the value of a particular column in the table .
Update the value of the field .
Update the device .
Add multiple fields to the record .
Pop the value at the given index .
Insert a value into the list
Deletes the record
Register a record hook .
Register a link
Create regex for given line .
Return the remaining duration in seconds .
Return a serialized version of the Entry .
Make a HTTP request to the given url .
Get a list of all the endpoints for a given service .
Try to create a directory .
Configures a service .
http request wrapper
Get the current status of a recording .
Update the status of an event .
update agent state
Return the configuration file as a string .
update a configuration object
Check if config file exists .
Initialize a logger .
Show the homepage .
Serve an image
Run multiple modules .
Parse an ical calendar string
Get upcoming schedules
The main loop for the scheduler .
The main loop for the control loop .
Make an error response
Make a JSON response .
Get internal state .
List upcoming events .
Show an event .
Delete a recorded event .
Modify an event by id
start a capture
Render HTML to a fragment
Returns a list of all registered resources .
Return a dict representation of the object .
Create a fragment from a dictionary of strings .
Add content to the message .
Set the jsons init function
Returns a string representation of the resource with the given placement .
Convert a resource to an HTML string .
Handle GET requests .
Render a standalone HTML fragment .
Render the fragment to a standalone HTML .
calculates the sensitivity score for a set of pvalues
Convert a list of values to one - dim array .
Given a score and a score of the error data and an error report on the closest match .
Perform a truncated error table .
make a summary table for a DataFrame
Compute error statistics from target scores .
Find the cutoff for the given scores .
Use peptideforms to infer peptideforms .
stride peptide in a file
strile proteins in a protein file
Perform subsample on input file .
Recursively reduce infile and write to outfile .
Backpropagate infile to infile .
Get group by id
Create a group
Delete a group
Returns a list of groups
Update the members of a group
get effective member count
Returns true if the given group is effective member
Decrypt encrypted data .
Get the stdin from the command line
Get stdout .
Get the path to stderr
Get debug output .
Yield stdin and wait for it to finish .
Yield stdout and wait for it to finish .
A context manager that writes stderr to a file .
A context manager that provides debug information .
Log an error message .
Print the help for this parser .
str - > option usage
str - > version
Resolve an option in the environment .
Return a copy of this context .
Write headers to a file - like object .
Generate a temp url .
return a string representation of a given value
Get a client .
Decrypt a string read from stdin .
Put an account .
Put a container .
Get the body of the manifest .
create a container
Displays a translation .
Return True if the stream is empty .
Encrypt a key .
Get the status of a repository .
Get information about a pull request
Get pull requests .
Set the publishable publish to True .
Return a queryset of all the items in the string .
Render a hero slider .
Acquire reader lock .
Release all readers .
Acquire writer lock .
Remove task from the queue .
Get task by task id .
Returns a list of tasks sorted by task id .
Return a dict representation of the configuration .
Construct a Config object from a dictionary .
Initialize the perceval archive manager .
create an index
JSON encoder .
Write items to writer .
Add a task to the scheduler .
Cancel a task from the scheduler .
Iterate over all the items in the queue .
Validate the arguments passed to the function .
Parse arguments for archiving .
Publish a job .
Schedule a job in the queue .
Cancel a scheduled job .
Run the server .
Listen for new jobs
Schedule the event loop .
Schedule a task .
Cancel a task from the scheduler .
Build job arguments for a task .
Register a view .
Override Django s reverse method .
Get view name .
Convert version number into a string .
Resolve a key to a string
Resolve a schema from a scheme .
Parses a database path .
Parse a database url
Create a new user .
List all users .
Create a password .
Add the url name to the view .
Parse a boolean .
Parse string into an integer .
Get a parser for the given type
Convert a model into a dict .
Encode a base64 - encoded string .
Create a field from a dictionary .
Create a validator from a dictionary
Find unique points in a list .
Change logging settings .
Make a directory recursively .
Get a list of strings .
Set the logger .
Extract replacements from a trajectory
Check and replace parsed arguments in a parser .
Write a parser to a string .
Find multi - interpolation options in a parser .
Find all of the strings in a dictionary that contain strings in a dictionary .
Parse a log configuration file .
Transform a log configuration dict into a new dict .
Create logging handlers and tools .
finalize all the tools
Starts the stream .
Write buffer to stdout .
compares two dictionaries
Compares two dictionaries .
Add getattr to class .
Add parameters to trapezoid .
Run the net and state monitor .
Euler scheme for euler scheme .
add parameters to trapezoid
difference between two values
Create a storage service .
Create a storage service .
Add number of parameters to the traj .
Calculates the Rolesky r .
Determine whether the given group is a member of the group .
Build a dict of model eqs .
Perform pre build of the model .
Build model .
Build the neural network .
If prebuild is not a network build it .
Build network connections .
Add brian2 parameters to a trapezoid .
Compute fano factor .
Compute the fano factor .
Compute the mean fano factor .
Add monitor to the network dict
Make the print folder .
Plots the result of a result .
Print the graphs in a separate file .
Run analysis on the current network .
Get batch option .
Explore a given number of strings in a trajectory .
Returns a string representation of the variable .
Get the function s name .
rename name
Set the attributes of this object .
Convert a node to a message .
Delete a node from the graph .
Remove a node from the tree
Translate a shortcut to a shortcut name .
Determine the type of a node .
create a link
Check the names of the names passed in to the node .
Set details on a specific node
Recursively iterate over a node .
Create an iterator for the child nodes .
A recursive traversal of a node .
Search for a key in the tree .
Return a list of names starting from start node .
A string representation of the node s children .
Add a group to the storage .
Add a leaf from the given arguments .
Return a list of file names for this node .
Return a string representation of the debug tree .
Get the parent path of this cell .
remove a link
Removes the object from the filesystem .
Get the default value for a file .
Return a string representation of the node .
Get the group names .
Get the leaves of the tree .
Return a string representation of the link .
Store the trajectory in the group storage .
Add a result group .
Add a derived parameter group .
Add a derived parameter to the interface .
Add a config group .
Add a config group .
Add commit variables to trapezoid .
Make git commit
Flatten a nested dictionary into a single level dictionary .
Takes a nested dictionary and returns a nested dictionary with the given separator .
Get the argumentspec of a function .
Get kwargs from kwargs
Formats the given timestamp as a string .
Convert a port to a tcp port .
Recursively create a directory .
Reset the parameters to the initial state .
Get the remaining number of seconds .
Return a string representation of the file .
Remove a key from the dictionary
Convert fann to string
Make a dictionary from a result .
Make a shared result of a function
Store access data for this segment .
Get a string representation of the data node .
Return whether the given item supports the given item .
Creates shared data for this item .
Manage multiprocessing .
wait for a lock
Send the done command
Finalize the context
Start the socket .
Send a request to the socket retry .
Acquire connection .
Listen for incoming requests .
Put data into queue .
Detect the current process pid .
Handle data .
Run the loop .
Receive data from the queue .
Receive data from the socket .
Stores the given object in the storage backend .
Store a message to the store
Store a list of trajectory references .
Collects a section from the parser .
Return a dictionary with the values from the config file .
Interpret self . kwargs and return a string .
Add parameters to the file .
Plot a pattern .
Generate a cellular automaton pattern .
Return a string representing the number of updates .
The overview group of the user .
load multiple items from an iterable
Recursively check the properties of an hdf file
Store multiple items at once .
This function is called when the object is closed .
extract file information
Backup a trajectory to a file .
Read a row into a dictionary .
Prepare the given trajectory into the database .
Check if the version matches the given Python version .
Load all the parameters from a trajectory into a dictionary
Store the explorations for a given Trajector .
Stores a trajectory into the HDF5 file .
Create a leaf from a trajectory .
Recursively store data in the tree store .
Store or modify param or result table .
Get a table from the HDFS
Get a node by name
Recursively insert dict into row
Concatenate string to max length
Creates or returns a new group with the given name .
Create or get a group from a key .
Store annotations in an HDF5 file .
Load annotations from node
Stores the specified group into the project .
Load a group of nodes into the group
Load all skeleton annotations .
Extract missing flags from a dictionary .
print summary info about instance
Add metadata for an instance .
Write data into a shared array .
Write a table to the HDF5 file
Write data to HDF5 file
Write data to HDF5 file .
Write data into an array .
Write data into the HDF5 file .
Delete a link from the trajectory
get a table column from a table
Return the length of each string in a list .
read a table from a table
Get the string representation of a shared node
Read an SVRC file .
Load a trajectory from a file .
Make a set name .
Set attributes on the object .
add to dynamic imports
Set the default parameter .
Returns whether or not the given name is completed .
Remove all exploration parameters .
Update run information .
add a run info to the list
Lock all open parameters .
Lock all derived parameters .
finalize the object
Loads the skeleton of the simulation
Make wildcard wildcards .
Merge multiple trajectories into one
Merge two run info into one .
Rename the name of the given trajectory into a new name .
Merge configuration parameters from one trajectory into another .
Merge two trajectory into one
Merge the results from another trajectory into this one .
Recursively restore default values .
Set an exploration parameters to the given index .
Make a single run .
Returns a list of run names .
start a new run
Set the start time of the run .
Set the finish time of the experiment .
Create an instance of the given constructor .
Return a string representation of the item dictionary
finalize run information
Delete links from the trajectory
Recursively remove child nodes .
Handle pooling .
Set a single file for a single run .
Configure pool based on kwargs .
Configures frozen pool .
Process a single run .
Execute a single scoop .
Configure logging .
Configures the current niceness .
Runs a single sigint handler .
Wrap handling for logging .
Load a class from a full path string
create a class by name
get length of range
Return a string representation of the field .
Get the range of the object .
Store the contents of the object in a dictionary .
Load parameter values from a dictionary
Load array parameter data
Compare two values .
Returns True if the matrix is a supported matrix .
Build the names of the sparse parameter variable .
Reconstruct a sparse matrix from a data list
Reconstruct a sparse parameter matrix
Get a pickled representation of the parameter .
Load a parameter from a dictionary .
Translate a key to a string
convert fval to string
Convert to dict .
Set a single item .
Return True if item supports sparse matrix .
Return a string representation of the model .
load data from a sparse parameter dictionary
Set a single item .
Returns a string representation of the current state .
Load parameters from a dictionary .
Entry point for merging all files in the current directory .
Create a session .
Run a SageMaker job .
Start all the jobs .
Multiply a vector and a vector .
run a neuron
Add firing rates to a file
Add parameters to a trapezoid .
add an exploration to a trapezoid
Extract subruns from the pre - run .
Execute a network run
Add parameters to a traj .
Build the network .
Generate a filename for a given trapezoid .
Get the next item from the chain .
Handle keyboard interrupt signal .
Read configuration from a file .
Get PIN code
Request the access token and save it to disk
Refresh access token .
Get all the thermostats .
Write the tokens to a file .
Set HVAC mode .
Set the fan min on a given index
Set climate hold for a given index
Delete a specific vacation
Resume a program .
Send a message to the thermostat .
Generate a delay depending on the number of seconds selected .
Generate a timeout for the given lease .
Generate a renewing time .
Returns a string representation of the FSM attributes .
Set DHCPcap attributes .
get the timeout for a state
set a timeout for a particular state
select an offer
Send a request .
Set timer time .
Check if a packet is valid .
init init method
Called when a request is selected .
Called when a request is reached .
Timeout the current request .
Timeout the request
Called when a request is received .
Handle ack request .
Handle incoming NAK request .
Receive ack from the server .
Receive a packet renew the process .
Called when ack is received .
This function is called when a packet is received .
Callback called when the client is renewed .
Set the value of the query .
Return a new QuerySet with the given name and value .
Return a new QuerySet with the given name and value removed .
Get status of a running server .
read a tdms file
convert a tdms file to fcs
Compare two files .
Create a new patch
Delete the next series from the database .
Delete a single patch .
Check if a file exists in the given patch .
Backup a file
Add a file to the database
Run the command .
Create the directory if it doesn t exist .
Copies the current directory to the given dest .
create a link to a file
Copy file to dest .
Get the directory of the file .
Backup a file
Unapply a patch .
Apply a patch to the series
Apply the next patch to the series .
Apply all the patches to the data
Read the series file .
Save the series to a file .
Add a patch to the patch .
insert patches into the patch object
Add patches to the patch .
Remove a patch from the dict
Returns a list of all the patches after the given patch .
Returns a list of all the patches before the given patch .
Returns a list of all the strings that match the given patch .
Replace an existing patch .
Create the repository .
Check version of version file .
Add the arguments to the parser .
Add this keyword arguments to a parser .
Add this command to a subparser .
Set the arguments passed to the parser .
Add the given parser to the given parser .
Check if a file exists in the given patch
Check if a file is in the next patches .
Revert a file .
Import a patch .
Import patches .
Add a way to a way
Returns a list of node ids that are present in the node
Add a node to the graph .
Build a route definition .
Create a route long name from a relation .
Get agency id from relation .
Run the analysis loop
Add a relation .
Patch all agencies in a list .
Generate stoptimes for a trip .
Write the buffer contents to a zip file .
Write the contents of the file to a destination .
Build agency object from relation tags
Extract stops from a relation node .
Build a shape from a relation
Returns a list of supported versions .
Send an APdu .
Authenticate using OpenAPI .
Register device .
Authenticate against device .
Register multiple devices .
convert unicode to str
Wrap a class to a class .
Returns True if the filepath matches the given filepath .
Return the email address for the given email address .
Return the first entry in entry tree .
Convert markdown to re .
Starts a Thrift HTTP server .
Convert a url to an image object
Convert a string to an image object .
Raise an error if the image is not too large .
Raise an error if the given width is not too large .
Raise an error if the given height is not too large .
Parse a category into a Category object .
Parse the value of a field as a string .
Return a list of parsed items .
Save error info .
parses the parsed data
Parse an item .
Get model instance from data .
Save an item to database .
Download a file .
Load configuration file .
Get the items from the CSV file .
Validate network access .
Add one or more files to the container .
Add a new file to the sandbox .
Get all enrollments for a course
Get enrollments for a given course
Get all enrollments for a section
get enrollments for a SAS section
get enrollments for the given regid
Enroll a user
Get all roles in an account
Get roles by account
Returns a list of roles for the given account
Get a role by id
Get role by account
Get a specific course
Get course by id
Get a list of courses in the account .
Get courses in a sis account
Get a list of courses in an account
Get the published courses in a given account
get a list of courses for the given regid
Create a course
Update a course id
Get activity by account .
Get grade grade by account
Get statistics by account .
Get activity by sis course id
Get assignments by sis course id
Get student summaries by course id
Returns a student activity for the given student id and course id
Get student messages for a course
Get all external tools in an account
Get external tools in a course
Create external tool .
Update an external tool .
Delete an external tool .
Check that an object is required for the given object .
Get user by id
Get users for course
get users for a course
Create user .
Get a user s logins
update user login
Return the next page in the response header .
get data from url
Get a URL for a resource .
Get the full url of a resource
PUT an HTTP resource
POST data to a url
delete a resource
Get a list of admin admins .
Create an admin user
Create an admin object
Delete an admin user
Delete an admin by role
Create a grading standard for a course .
Get section by section id
get section by id
Get a list of sections
get sections in a course
Get all sections in a course
get all sections with the given course
Create a section
Update a section
Returns a list of quizzes
Get account by id
Get sub accounts
Update an account
Update sis account id
Get auth settings for an account
Update auth settings for an account
Get a term by its sis term id
Import a CSV string from a CSV file
Import a directory
Get the status of a SIS Import
build a zip archive
Returns a list of assignments
Update an assignment
Get report types
Get report by type
Create a report
Create a course provisioning report
Create a report on a course .
Create a report for unused courses .
Get report data .
Get report status
Delete a report
Move detections in a given label .
Flip detections of a given label .
Returns a dict with the keys of the given object .
Get configuration overrides .
Return empty value .
Create metrics for the given metric .
Setup logging for this instance .
Configure the registry with the given process stats .
Create metrics for one or more metrics .
Get a metric by name or labels .
Handle the homepage .
Retrieve metrics from the registry .
Queries a wavenumber channel .
Fix the http server to use the http client .
Send a query to the server
A string describing the pod information .
Iterate over the results of the query .
Encodes the given data with the given data .
Make a GET call to the API .
Make a DELETE request .
Make a PUT request .
Make a POST request to an URL .
groups the number of sentences into a list
Disambiguate a PDF file .
Disambiguate a query .
Segment a text by its text .
Get information about a language .
get concept by id
Fit the model to a set of features .
Compute the accuracy score of a set of features .
Fit the model on the given features .
Return the accuracy score of the given features .
Transform a list of features to a new label
Returns the score of the given features and targets .
Convert a list of members into a vector .
Return a vector representation of the given members .
Evaluate a file .
Compile a form into a compiled form .
Evaluate a given string .
Bootstrap a Python module .
Compile a string or file .
Add a method to a map .
Add a method to the list .
Remove a method from a map .
Remove a method from the definition .
Whether v is a macro
Returns the location of the line in the form
Raise an exception if the node is not recur .
Assert that the recur is tail of a node .
Resolve a bare symbol .
Resolve a dotted symbol .
Parse an ast .
Whether or not the variable is shadowed .
Return a string representation of a map entry .
Return a string representation of an iterable .
Attempt to fall back to a human readable repr .
Return a copy of this node with the given locations replaced by the given location .
Compile a form and execute it .
Compile a module into a compiled module .
Compile a module into a module .
Compile the given bytecode into a module .
Create a sequence from a string .
Unpack a string .
Return a fraction as a fraction .
Get logging handler .
Return a mapping of key - value pairs .
Partition a collection of strings into a list of strings .
Reads namespaced namespaces from a file .
Reads a collection from the reader .
Read a list from the reader .
Read a vector .
Read a map from a string .
Read a string from a text file .
Read a symbol from a context .
Read a keyword .
Read the meta .
Read a quoted comment .
Expand syntax in a syntax quote .
Read a syntax quoted comment .
Read deref form .
Read a character from the reader .
Read a regular expression from a string .
Read a reader macro .
Read next comment from context .
Read the next token from the parser .
Read text from a string .
Read a file - like object .
Move cursor to col .
Push back onto the stack .
Returns the next token .
Returns a bytes - like object with the given parameters .
Get the bytecode from the cache data .
Compute a cache from a cache file .
Add a filer import to sys . path
Find the module spec .
Execute a cached module .
Execute the given module .
Execute a module .
Get symbol .
Complete a string with a prefix .
Get or create a variable if it exists .
Get a keyword for the given name .
Return a tuple containing the node and its dependencies .
Generate an AST from a collection of forms .
Set the location of the ast .
Wrap a function with ast .
Wraps function with ast .
Determine whether v is dynamic .
Return a boolean indicating whether v is redefable .
Turn an expression into an ast . Expression .
Turn a function into an expression .
Convert a do node to a py AST .
Generate a filename from a string .
Convert function arguments into a py AST .
Convert a single arity function into an astroid .
Convert a function node to an astroid .
Convert if body node to pytorch .
Convert a call node into an astroid .
Convert a Python expression to a Python AST node .
Convert a recur into a py AST .
Convert a recur point into a py AST .
Convert a setbang to a Python ast .
Convert a throw node into an ast node .
Convert a Try node into a Python AST .
Convert a local variable into an ast representation .
Convert a variable name to an ast .
Convert a variable into an ast representation .
Convert an interop property into an ast node .
Convert a maybe class to an ast node .
Convert a maybe host form to a python astroid .
Convert a Python const value to Python AST .
Convert a collection literal to a Python AST .
Generate Python code from lisp tree .
Yields all the imports from a module .
Return an ast . ast . ast . module .
Generate an ast variable for the given python ns and lisp ns .
Create a set from an iterable of members .
Return a string representation of the given type .
Visitor for except handler .
Return node s representation .
Visitor for function def .
Visitor for While node .
Visit a try .
Create a new module .
Return the first element of an iterable .
Return the rest of an object .
Return the nth rest of a collection .
Find the next nth next sequence in a collection .
Return the cons of a sequence .
Convert o to sequence .
Concatenate multiple sequences into a single string .
Return a string representation of a mapping .
Return the conjugate of the given elements .
Return a string representation of an object .
Compare two boolean values .
Divide two numbers .
Sort a collection by key .
Returns True if k is contained in collection .
Get a value from a dictionary .
Convert an object to a lisp string .
Convert an object to a string .
Return a string representation of an object .
Collects a list of arguments into a single string .
Decorator to turn a function into a hydra - splitter function .
Resolves an alias for a symbol .
Resolve an alias to a string .
Add a python variable to the current namespace .
Internally build a variable .
Internally intern a variable .
Find a symbol in a namespace .
Find the first occurrence of a symbol in a namespace .
Find a safe string in the variable named symbol .
Add a default import .
Add an alias to the symbol .
Internly intern a variable
Internally intern a new variable .
Find a variable for the given symbol
Add an alias to a module .
Get the name of a symbol .
Add a reference to a variable
Get the reference to a symbol
Return a mapping between all symbols in the same namespace .
Refreshes all references to another namespace .
Get or create a lmap . map .
Get a symbolic name or create it if it exists .
Get a qualified name for a symbol
Remove a variable from the registry .
Return complete alias names .
Complete all aliases and aliases in a module .
Return a list of assignments for the given value .
Return a list of completion strings for the given value .
Complete all aliases in a module .
Return a tuple containing the positional argument .
Convert a list of members into a list of strings .
Convert a list of members into a list .
Decrypt a JWE token .
Encrypt a JWT using the key store .
Delete a value from the cache .
Return a string representation of the selector .
Parse a FQL string into an expression .
Dump a NDB model to a file - like object .
Convert an object into a string .
Decode a string to a datetime .
Decode string to JSON .
Convert object to JSON .
validate version string
Compute the topological sort of a graph .
Set parent expression
get parent expression
Add an element to the working fragment .
Creates a new Expression with the given strings .
Create a new expression from the expression .
Parse incoming messages into a list .
Convert a list of tuples into a dict .
Return the first message in a list of messages .
Prepare send message .
Flush the current buffer .
Enable a slide .
Save the template to a file .
Get information about the device .
Locate the package s package json file .
Parse the package json file
Raise an API error .
Validate and return an HTTP response .
Convenience function for homogenization of two wavelength arrays .
Interpolate the data in the dependent vector .
Get the indices of the indices of the two wavelengths .
Check compatibility of two waveforms .
Load the systemjs manifest files
Parses a variable and returns a namedtuple .
expand shorturl
Stats the shorturl stats .
Get a list of links and links .
Get database stats .
Split an iterable into chunks .
Flatten an iterable .
Print a table to stdout .
Create a dummy dummy dummy string .
Construct a new instance from a string representation .
Trace a module .
return a list of links
Add common prefix to plist
Make a multi - entry entry in a list of dictionaries .
Convert words to words .
Chunk noise into chunks
Split a frequency vector into chunks .
Bound a waveform to a waveform
Build the string for the given depUnit .
Build a wave operation .
Calculate the running area of a trajectory .
validate that min and indep values are equal .
Return the cosine of the wave as a string .
Calculate the cosine of a wave .
Return the arcsine of wave .
Calculate the tangent of a wave .
Return a copy of the wave unit vector .
Calculate the phase delay of a wave .
Log logarithm of wave .
Square root of wave .
Convert wave to complex representation .
Convert wave to float .
Convert wave array to int .
Find files matching the given path .
Return a short description .
Build a string representation of a list of tokens .
Returns the next r delimiter at pos .
Get a list of functions from an expression .
Parse an expression into a string .
Remove consecutive separators from expr .
Convert number to scientific notation .
Return a string with no exp negation .
Convert string to peng float .
Return the Peng frac number
Convert string to Peng mantissa .
Check if the app needs to be installed .
Runs the command in a subprocess .
Return a json string of the app .
Returns True if all of the hashes in the dependency tree match the hashes in this module .
Return a string representation of the given argument .
Parse a docstring from a docstring .
Return a list of valid identifiers .
Add a deferred action to the context .
Split a line into individual parts .
Check init commands .
Return help text for builtin functions .
Find a function in context .
Lists all functions in a given context .
Check if arg is a string .
Extract the argument value from the command line .
Invoke a function on a line .
Classify section name .
Convert a line of text into a dictionary .
Join paragraphs into a single list .
Convert value to string type .
Convert binary string to binary .
Returns the size of the specified type .
Returns True if the given type is known to the given type .
Split a type name into its parts .
Instantiates a type based on the given base types .
Returns True if the given type is known to the given format .
Loads all the types of a module into this container .
Add a parameter .
Return a string describing a type .
Add a custom return value to the request .
Match a short name .
Get the type of a parameter .
Format a return value .
Convert a positional argument to a string .
Convert an argument to a string .
Format the error message .
Return a dict representation of the exception .
Execute a function and execute it .
Parse validators .
Find all keys in a container .
Find all documentation from a module
Get the help text for a given function .
Annotate a function with a decorator .
Decorator to annotate a function .
Return a short description of a function .
Load Django modules .
install crontab
Print all crontab tasks
Uninstall the crontab
Create a new resource from a URI .
Load project configuration from config file .
Save project configuration to YAML file .
Get project dependencies .
Initialize a project
Execute a function on the underlying type .
Apply a function f to a pure function .
Return a string representation of this string .
Return a string representation of this expression .
Apply a function over the current state .
Set the value to a string .
Apply the transformation to a string .
Return the kind of an object .
Main game loop .
Step forward on self .
Handles player input .
Advance the robots .
End game .
Player move .
Play the game .
Make a move .
Gets the winner of the game .
Returns a tuple of the winners of the game .
Add a chunk to the queue .
Set the timestamp of the spider .
Upload a file to S3 .
Create a file - like object to be written to a file object .
Get the state of an account .
Get asset state .
Get the block hash .
Get the block system fee .
Get the contract state .
Get the raw transaction
Get the stored value for a key .
Get the transaction output .
Invoke an invoke transaction .
Invoke a Lambda function .
Invoke a script .
send a raw transaction
Validate an address .
Make a call to the server .
Return True if s is a hash256 hash256 hash256 hash
Return True if s is a hash160 hash160 .
Encode a list of parameters into a string .
Decodes a string representation of an invocation result .
Apply this unit to a datetime .
Render the template to a file .
Render barcode as a string .
Renders the given code .
Command - line entry point .
Download a file from S3 to local path
Upload a file to the local path .
Downsync the config file
Prints the diff of the given section .
Parse an environment variable .
Set basic authentication .
set api key prefix
Get all JSON content from a folder .
Get all schemas in json path
Returns the schema as a dictionary
Returns a RefResolver for this resource .
Validate an object against this schema .
Get valid examples .
Get invalid examples .
Build auth url .
Extract auth code
get auth token
Get user id .
Lists the contents of a folder .
Creates a folder in the container .
Adds a comment to an object
Decode an object to unicode .
Set drop target for container .
Start drag operation .
Set default tlw .
Inspect an object
Migrate font to str
Load a page .
Sends an alert message
Display a tool tip
handle mouse down event
Moves the mouse cursor to the mouse position
handle key press events
Deletes all objects in the selection
Duplicate the selection .
Refresh the image
calculate the best position of the widget
Get the python data for a given item .
Set the python data for an item .
find the index of a python data
Delete an item .
delete all items
Remove all data from the table .
set selection
get string selection
set client data
append a string
get window by name
Add a child object .
Set parent as parent
Draw the background onto the canvas .
Event handler for erase background
Draw the text on the canvas
Returns a list of column headers
Reset the view to the given grid .
Update values from grid
Update the column attributes .
Sort a column by its value .
Clears the current view
create combo box
Start the selection
edit end edit
check if key is accepted
handle starting key selection
Enable the given value .
Returns True if menu is enabled .
Enable the given value .
Returns True if menu is enabled
Remove a menu item from the menu .
set object tag
Convert autosummary table to strings
Get a string representation of the object .
Mangle a signature into a string
Import a module by its name .
Create a role for a role
Display an alert dialog .
Prompt the user for a text entry .
Opens a font dialog .
Prompts the user for a color dialog .
Display a directory dialog .
Locate a text dialog
Returns True if the set has children .
set wx icon
Parses the given filename and returns the result
Save rsrc to file .
Build a new window .
Build a custom component .
Convert the given name to a python object .
set data to clipboard
Try to find autosummary in a module .
load an object
Inspect an object
Updates the selected item
Update the value of an object .
show a context menu
Return the thumbnail representation of the image .
Test whether the path has the given path .
Raises AssertionError if path has no current path .
Select an option .
get a browser
Return an xpath representation of the expression .
Switch to specified frame .
Context manager to accept an alert text .
Context manager to accept a confirmation text .
Temporarily dismiss a confirm dialog .
A context manager that opens a prompt .
Temporarily dismiss a prompt .
Save the document to disk .
Save a screenshot .
Raise server error if server error was raised .
Check that a field has has a field with the given locator .
Returns True if the field has no selector .
Whether the element has an unchecked field .
Returns True if the element has no field with the given locator .
Test if title has a title .
Raises an AssertionError if there is no title .
Return the inner content of a node .
Return inner text as string .
Normalize a URL .
Return True if error should be caught .
return the number of items in the cache
Caches the result of a given size .
Returns True if all options are not None .
Build a failure message .
Returns True if count matches the given count .
Normalizes a value to be used as a string .
Normalize whitespace .
Convert text to regular expression .
Returns True if the session matches the expected URL .
Resize the window to the specified width and height .
Start the server .
Decorator to register a function .
Setter for instance method .
Set class method .
Get the traceback of the exception .
Get the source of an object .
Get the logger for this instance .
Set the logger .
Make a call to the API
Get a list of channel names .
list of users
Make a slack message
Translate a message from Slack .
Send Slack message .
Receive a channel .
Run the server
Run the client .
Return the difference between two dictionaries .
Colorize a message .
Called when a v2 playbook started .
Print stats to stdout .
Prints a message to stdout when the task is skipped .
Convert a prefix to a netmask .
Add a model .
load all jinja filters
Find a yang file in a given path
Perform an HTTP POST request .
Build authorization code .
Get OAuth token .
Return query params as a dict .
Remove the query fragment from a URL .
Build a URL from a base URL .
Handle exception raised by this class .
Makes a response object .
Make a redirect response .
Make a json response
Generate an authorization code .
refresh refresh token
get access token
get authorization code from uri
Get a token from POST data .
Returns an authorization object
Open a device .
Read a byte from a device .
Read a number of bytes from the device .
Read a byte from the device .
Write bytes to the device .
Write byte data to the device .
Write i2c block data .
Create a copy of this object .
Create a local copy of this CDN
Construct a File object from a string representation .
Upload a file to store
A list of all file cdn URLs in the archive .
Construct a Group object from a string representation .
Create a new group .
Make a request to the server
Yields all UUIDs in the file .
Print a list of api items .
Prints progress bar for iter content .
Get home mode status .
List available cameras .
Get information about the camera .
Get a snapshot of a camera .
Get motion setting .
Save camera event
Update the list of cameras .
Check if li is last li
Get a list of text nodes .
get the value of w namespace from xml
Get the XML merges representation of the tree
Get the number of grid spans
Get the td element at index
Return True if style is False otherwise .
Return True if r is bold .
Return true if r is italic
Return True if r is underlined style .
Return True if the element is a title .
Yields text content of a given run .
Convert a relationship tree into a dictionary .
Returns ordered list type
Build a table element .
Get the content of a t tag .
Remove all tags from a tree
Find a dataset in a URL .
Load a pickled mnist file .
Plot a list of images .
Plots layers of the given weights .
Plots the given filters .
Return a list of fwd indexes from txt .
Add conv weights to the model .
Return the decoded layer .
Returns the score of the autoencoder .
Predict the output of x .
Predict probability of x .
Return the logit for x .
Returns a list of variable names .
Calculate accuracy .
Build activation layer .
Randomly generate a n - dimensional n - dimensional n - dimensional array
Add a loss to the list
Iterate over the iterator and call train method .
Build the network graph .
List of input layers .
Returns a list of all variables in the model .
Save the current state to a file .
Load a pickled model .
Calculate the loss
Build a graph from the regular expressions .
Returns the size of the output .
Resolve input shapes .
Resolve output shapes .
Log the current state of the model .
Log the number of parameters in the model .
Format a string according to the format .
Resolve a shape to a tuple .
Find a parameter by its name .
Add a bias to the parameters .
Return the spec as a string .
Returns the loggabor representation of a given set of band positions .
Calculate loggabor image at given position .
Add a tier to the tier
Remove a tier from this tier .
Get the tier tier number .
Convert the list of tiers into an EAF string .
Add a point to this tier .
Add an interval to the list .
Remove the interval from the tier .
Remove a point from this tier
Get a list of all intervals .
Return a sorted list of all intervals in this tier .
Indent an element to the given level .
Add an annotation for a tier .
Add description .
Add an external ref to the document
Add a new lexicon reference to the parser .
Add linguistic types .
Add a locale code and variant code .
Remove all time slots from the time slots .
Extract an Eaf object from the EAF
Generate an id that can be used to generate an annotation .
Generate a unique timestamp .
Returns a list of child tiers for the given id tier .
Returns a tuple with the full number of timeslots .
Get ref annotation data after time .
Get ref annotation data before tier .
Returns a list of tier ids for a given linguistic type .
Remove all annotations from the given tier .
Remove the description of a controlled vocab .
Remove a license .
Remove linked files .
Remove a property from the definition
Remove a reference annotation by id .
Remove secondary linked files .
Remove a tier by id
Remove tiers from the cache
Rename a tier .
Shift the annotations by time .
Prints a debugging message to stderr .
Get embedding levels .
Extract explicit embedding levels from a dictionary .
Resolve neutral types in a dictionary .
Reverse a sequence in a contiguous sequence .
Reorder the strings in the given string .
Processes a file .
Add an attribute to an object .
Parse command line arguments .
Keep only the versions of the binding .
Show the GUI for this widget .
Discover PyBlish GUI
Add script to filemenu .
Context manager that ensures the current selection is preserved .
Context manager that ensures the current time is maintained .
Show a message box with no GUI .
Get cumulative data .
Returns a list of values for the specified axis .
r Draw a constant line .
Load transform parameters .
Reverse the reverse of a mapping .
Generate a range of floats .
Add a conf to the list
Draw the text .
Calculate the left margin for this label
Calculate the right margin
Calculate top margin
add a popup element
Calculate bottom margin
Draw the graph .
Make datapoint text .
Draw x labels .
Draw y labels .
Draw x guidelines in x guidelines .
Draw y guidelines .
Draw all the graphs
Render inline styles .
Start opening svg
get a list of all the stylesheet resources
Run IRC bot .
Send data to the socket .
Connect to the server .
Respond to the client .
Returns a tuple of pattern names to match .
Generate a new nick .
Handle ping message .
Handle registration .
Read lines from the socket .
Register the bot .
Run the task runner .
Returns a list of command patterns that should be used in the registry .
Register a success message
run a command on the server
Add a worker .
Send email notification to user
Send password reset notification .
Verify token
Delete a user .
Allow the given method to be used as a string .
The docker client for this class .
Get the TLS client certificate .
The service name .
Execute a docker method on the Docker client .
Execute a docker docker method and return a string .
Return the number of running tasks .
Stop the container
Filter unique email addresses .
Update password .
update password
Validate email
Create a new token for the user .
Delete a user .
Validate initial email .
Handle POST requests .
Update the expiration date of the object .
Generate a context for password reset .
Send email notification .
Password reset email handler
Set the email address for the notification .
Authenticate the request .
Authenticate user credentials .
Display Bokeh notebook content .
Process HTML plots .
get a custom callback
Return a widget with the given name .
Render an object as a string
Simple text input widget .
Turn a list of objects into a list of namedtuples .
Returns the owner of a given method .
Assign auth values
Send a ping request .
Get information about the device .
Returns the health check status .
Convert a number of bytes to a readable string .
Return the total number of cpu load and other users .
Return the memory size in bytes .
Get the network number .
List of volumes .
Get a volume by its id
Returns the size of the volume
Returns the percentage used for the volume
Returns the disk temp average .
Returns the maximum disk temp .
Get a disk by id
Login to the API .
Send a GET request to the server
Execute a GET request
Call this method to update the resource s data .
returns a string representation of the api
Absolute path to storage .
Generate a context for a given request .
Get tenant token .
Build the attributes of this widget .
Override django settings .
Override settings without any of the installed apps .
Get a dictionary of all the global settings .
Do a GET request
Change the value of a section .
Migrate config file to newname
Start a webserver .
Wait for the server to complete .
Get access information .
Check if token is present in config
Set access credentials .
Create a manifest table in dynamodb
Split a full path into a bucket and a prefix .
Determine if a bucket is a url .
Remove None values from dict .
Add a runid to the manifest
Returns True if the manifest is in manifest .
Extract schema from a URI .
Replace snake case with snake case
Parse an unstructured json string .
Transform JSON string into JSON .
Convert event into JSON .
Get the used template name for a response .
Format a context block into a string
Returns a string representation of the current context .
Convert SQL to HTML
Format a Django context object to a string .
Format a dictionary as HTML .
Clean text .
Format the given object as a string .
Format the object to a pretty printer .
Get a single token from a string .
Get LaTeX nodes from a string .
convert LaTeX LaTeX to text
Convert a latex string to text .
Convert unicode to ASCII .
Returns information about the organisation
Returns a list of boards
Method to get the members of the organization
Update organisation
remove member by id
Add a member by id
Add a member to the organization
Get the list information from the server .
Add a card
Get information about the label .
Get a list of items .
Change the label of this campaign
Update a label
Build the authorisation url .
Get card information .
Get board .
get list
Method to get checklists
Add a comment to the comment
Add an attachment to the attachment .
Add a checklist
Add a label from a dict
Add a new label to the container
Add a member to the group
Returns information about the current user s member .
Get a list of cards
Get organisations
Create a new board .
Get board information .
Get list
Method to get labels from the server
Get a card by id
Returns a list of checklists
Get organisation information
Update a board .
Add a list to the list
Adds a label to the container
Get checklist information .
Get a card s card information
Returns a list of items
update a checklist
Add a new item to the list
remove item by id
update the name of the card
Update the state of the card
Add authorisation parameters to query params .
Raise an exception if the response has not been received .
Build a URI from a path and query parameters .
Fetch a JSON object
Create a new organisation .
Create a board .
Create a label .
Create a new list .
Create a stripe card .
Create a trolly checklist .
Create a new member .
Get a specific organisation
Get a board .
Get a list .
Get a card .
Get a checklist .
Get a member .
Extract a domain from a URL .
Convert text to raw text .
Set the password for a service .
Split text with given locations .
Mark regex in text that match regex .
Mark the beginning of the text that matches the given regex .
Run the command line tool .
Create AES cipher cipher
Get cipher mode .
Get the priority of the instance .
Check if the scheme is correct .
Publish message
Generate a unique id
Attempt to connect to the server .
Handle connack .
Convert string to bytes .
Decodes a string into a two - dimensional tuple .
Encode a 16 - bit integer .
Encodes a length value into a string .
Decodes a length string into a string .
Encode the packet header .
Encode this message as a string .
decode a packet
Encode the message .
Decode packet .
Decode a packet .
Encode this Access Token .
Encode the message .
Decode a packet .
Encode the message .
Encode message as a string .
decode a packet
decode a packet
Build the URL for the request .
Make a request to the API .
Refresh the comm .
Format the data into a numpy array .
fitting data
Compute k - means clustering
Predict classifier .
Map clusters to cluster indices .
Sort the data according to the clustering method .
Convert datetime to string .
get total number of points in a dictionary
Get the total time span of time in a dictionary .
Return a string suitable for unit testing .
Return a pretty element of a string .
analyse a string
Analyse a string of massname
collate all files in a directory
Enumerate a boolean array .
Convert a list of tuples into a boolean array .
Smoothly smooth the input .
Compute the gradient of an array using a rolling gradient .
Find indices of elements in x between y and y .
Perform clustering on data .
Cluster data with k - means clustering
Reads the defined srm file
read latoolscfg config
read latoolscfg config file and return a dict
copy a resource file
Exclude a set of boolean values from a filter .
Plot the autorange plot .
Create numpy arrays of time - series arrays .
r Returns the ratio of the analyzer .
Calculate calibration parameters .
The abbreviated translation times .
Calculate the correlation coefficient for a particular pair of samples .
Add a new filter .
Get a dictionary of parameters .
Plots histograms of the given data .
Load reference data
Calculate the molecular m
Generate keywords .
Return a tuple of elements that are not in the stack .
Reduce a tuple from a stack .
Uses Gaussian stats to compute the standard deviation at each point .
Gaussian function
Return the standard deviation of an array .
Get a string representation of the samples .
returns the ratio of the stages
make a subset
Apply classifier .
recursively print the number of removed items in the dataset
Filter the data in the report using the given filters .
Export traces to a CSV file .
Save log to file .
Applies a function f to a string f .
Scale a value to a bayes scale .
Calculate the median scaler for a given array .
Raise noise despike .
This function is used to reduce the expdecay of a signal .
Add a filter to the model
remove a component from the model
Remove all of the components from the cache
Remove all components that are not empty .
return a string that matches fuzzkey
Grab a boolean value for a specific filter
Return a string representation of the component .
Write log data to a file .
read a log file and return a dictionary of arguments
Print modem information .
Send ETERNAL message .
Parse a SQL file or file object .
Convert a URL into a nbviewer link .
The thumbnail for the thumbnail .
The code div .
Get a string representation of the code .
URL of the nbview .
Get the final output filename .
Create a python file in the python file .
Format the given files to be downloaded
Create a thumbnail for this image .
Scale an image .
Save the thumbnail on disk
copy the thumbnail figure
Return the URL of the given nbfile .
Yield languages in db table .
Processes a thumbnail file .
Save the image to disk .
List of thumbnails .
Create a new thumbnail image .
Delete the given size .
Create a thumbnail .
Get a thumbnail .
Delete a thumbnail .
Handle incoming messages .
Subscribe to a given number .
Get the state of the client .
Send a message .
Return a mapping of blueprints to blueprints .
Receive a message .
Receive a status message .
Forward the given object to the broker .
Sign a web3 transaction .
Estimate gas based on the eth3 address .
Estimate the gas gas gas using a safe method .
Write data to file .
Read a line from the serial port .
Return True if message has bad headers .
Attach an attachment .
Register new services .
Load configuration from a module .
Register new resources .
Require a value for a key .
Raise a runtime error .
Setup the object for the service
Calculate the wavelength of the given wavelength .
Calculate the Cauchy equation for a given wavelength .
HTTP DELETE method .
Return True if path1 is the same file as path2 .
Create a directory on the filesystem .
Initialize the logger .
Raise an error .
Claim a list of file readers .
Get the column header from a vcf reader
Attempt to claim a set of file readers .
Initialize population stats .
Claim the given vcf readers .
Split a string by line terminator .
Returns the prefix of a line terminator .
Return the suffix of a line terminator .
Attempt to seek next line .
Attempt to seek the previous line .
Get the last num lines of the file .
Get the head of the file .
Follow the next line .
Attempt to claim strelka files for the given file readers .
Parse a VCF record into a VCF record .
Return sample tag values for sample names .
Format the tags in a vcf record .
Join info fields into a string
get format field
Get the string representation of a sample .
Return a string representation of the data .
Add a sample tag to the tag .
Add or replace a filter .
Return a list of available categories .
Returns a form for the products form
Generate staff products form .
Add an error to the product .
Create a model fields form .
Get pending items .
Send an email .
Parse an Osm file .
Iterate over the OSM notes .
Returns True if the condition passes the given user .
Returns True if the user is met .
Return the remaining quantity for a given user .
Pre - filter cart items
Remove all items in the queryset .
Filter the queryset according to the number of items .
Pre - filter the queryset .
Perform a pre filter on a user .
Creates a new custom cart for the given user .
Add the reservation to the cart .
Apply a voucher to the inventory
Fix invalid errors .
Recalculate discounts for the current user .
Iterate over all rows in the table .
Returns a valid form form .
Render the data .
List all available reports .
Displays all items sold on invoice .
Displays information about all payments .
Displays the credit notes of the credit note
Report product status .
Display status of discounts .
View product line items .
View paid invoices by date .
Displays credit notes .
Displays all invoices .
Display a list of attendee s attendees .
Display a list of speaker registrations .
Returns a set of all available categories for the current user .
Get available credit notes for the current user .
Return True if ticket product is sold out .
Edit a profile .
Handle profile form .
Handle list of products .
Handle a voucher form .
View for manual payment .
Refund the current invoice .
Extend a reservation for a user .
Send an invoice email .
Render invoices .
Render a user badge .
Return a list of discounts that are available for the current user .
Annotate queryset with past - use items .
Returns a list of all available products .
Apply the credit to an invoice
Apply the cancellation fee to the invoice .
Generate access code .
get object from module name
Creates an invoice for the given cart
Generate a manual invoice invoice
Apply credit notes to invoice
Return True if the user can view a given user .
Refresh the invoice .
Validates that all allowed to pay to the invoice
Update the status of the invoice
Mark the invoice as paid .
Returns True if invoice matches the current cart .
Validate the invoice validity .
Mark the invoice as void .
Refund the payment .
Send an email to an invoice .
Update the field from a dictionary
Flatten a field into a nested dict
Print out a string of the downloads .
Download the specified field .
Get a specific processor name .
Print all processors for a given processor name .
loads data from the server
Upload fields to a project
Upload a file
Download a list of data objects
Get all subclasses of a given class .
Get repo and project name
Get variants with suggested changes .
Get variant phenotypes merged with suggested changes .
Updates the object with the specified fields
Remove duplicates from a sequence .
Authenticate with Asana .
Prompt the user for a list .
Get issue data .
Move data from one issue to another .
Get task data .
Get Asana task by id .
Apply a key to the data
Flush all items in the queue .
Create a task in asana workspace .
List of available data types .
format a string to ekmmmeters
wait for the serial port
Set polling values .
Render the read since the last time stamp
set the current context string
Calculate the power of a PF
set the max demand period
set meter password
return a buffer of months
assign a schedule
assign a season schedule
Assign holiday date to holiday .
read schedules from the serial port
read months data
Read holiday dates .
Reads the settings .
write a log message
send password auth to device
Update all observers
Perform a synchronous request .
Request the meter data .
Send a request to the device .
Replace all fields in mbl .
set the lcd command
Set relay status
End the serial port .
writes pulse ratio
set zero resettable key
set the lcd command
Iterate over fields in a dictionary
Iterate over fields in a schema .
Generate a random text string .
Returns a string representing the timing statistics .
Return a string representation of text .
Print text to stdout .
Return a string summary of the result .
Parse arguments .
Setup the result .
Run the test suite .
Return a string that can be used to transform a file .
Transform an ast . node .
Transform the body of the body into a list of strings .
Transform an ast . node .
Transform example body into string .
Return a string representation of this expression .
Register a file finder .
Compile the given source to a Python code .
Apply argument parser .
Load a Python module by name .
Load a module from a given path .
Scan a directory and yield all subdirectories .
Remove a configuration file .
Restart a message
Wrapper around places .
make a service object
Refresh session .
Remove expired nodes .
Remove a node
Get the last updated timestamp of a node .
Get all node IDs .
Refresh session .
Increment the times modified .
Return a list of tokens delimited by delimiter .
Check if the path is bad
Merge a new status .
Query the existence of a given value .
Get a value matching the given value .
make a service
Complete the parser and parse the input .
Apply optional syntax to parser .
Repeatedly repeat a parser .
Return a repeated parser .
Repeatedly repeat a parser .
Repse a parser with separator .
Close the stream .
Check if the URL is valid .
Add a master to the master
Wrap a single service in a multi - service
Freeze a checkpoint from a checkpoint .
Freeze from checkpoint .
Save a checkpoint from checkpoint .
Save weights from checkpoint .
Restore from checkpoint .
Parse a token from a parser .
Renders a HTML tag .
Validate the arguments passed to the constructor .
Get a string representation of the given context .
Parse a token .
Get the context data .
Loads a tensorflow session from a caffe file .
Freeze caffe to tensorflow .
Wrapper for tf . freeze . save_graph .
Make rows from a sequence .
Yields every item in iterable .
Remove duplicates from an iterable .
Peek an iterable .
Silently suppress callable exceptions .
Fail if an iterable is not ordered .
Swap the two items after the item .
Get the first n queues from the queue .
Reset iterator .
Parse a string as a variable .
Return the descendant key path of the given path .
Iterate through an object iterable .
Return True if the selector matches the given selector .
Parse a string .
Return the parents of lhs in lhs
Return the siblings of lhs in lhs
Return a list of strings matching the given validators .
Get the request body .
Expire all items in the cache
Set the value of a key in the cache .
Return a string representation of the key .
Returns True if k contains k .
Return True if the beacon has been processed .
Deserialize a JSON object from a JSON string .
Parse an XML string from an XML string .
Returns the rendered version of the rendered template .
Apply fn to the logfile .
Returns a list of strings .
Validate and validate a token
The cryptography engine used for encryption .
Validate token against supported digest algorithms .
Create a new token
Returns a 32 - bit counter32 string .
Generate a counter64 string from a b .
Calculate the duration of a given total duration .
Create a list of sources and setup them .
Send an event to the scheduler .
Determine if the source is running .
Parse format string
Parses the line into a dictionary
Validates that the field is valid .
Ensure token is valid
Name of the browser .
Raise warning if msg is not a string .
Connect to receivers .
Create a secret link .
Send an accept notification .
Send confirmed notifications .
Send email validation .
Send a rejected notification .
Send a notification message
Create a new user .
Validate a token
Revoke this link .
Create a new message record .
Get user by receiver
Confirms the request .
Create a secret link
Create a SHA - 512 hash string .
Verify a signature .
Check if a record has been embargoed
Handle access request .
Send confirmation request .
Get a connection to the SSH server .
Reverse a particular column
Get a string representation of the selected options .
Get the list of selected items .
Get the version string .
Set the version of the MAR file
Start timer .
Return a string representing the ticker .
List secret links .
Stop the websocket connection
Empty events from the queue
Add events to the buffer .
Create an elasticsearch client
Encode an event into a protobuf .
Convert a list of events into a string .
Decodes a protobuf message
Send events .
Generate a file preview .
Retrieve a file preview .
a message loop
Returns a string representing the log time delta .
Abort the session .
Perform mapping of SASL to SASL
Render admin footer .
Build payment parameters .
Build payment parameters for register card .
create a pay with amount
Return the version number .
Setup post construction variables .
Configure shortcuts .
Activate the accept button .
Select item .
Navigate to the specified index .
finalize the options
Fetch the current page s children .
Returns the icon for the given index
Run a command on a subprocess .
Get file descriptor .
Close a file descriptor .
Close all open file descriptors .
Redirect a stream to a local file .
Set the attributes of a form .
Import a module and return its submodule .
Import all project modules in the installed apps .
Include an include node .
Check if a path is a valid file system .
Check if an s3 URL is valid .
Get the absolute path to a template file .
List objects in S3 .
build a json file with the task template
Execute the Wbdx server .
Archives a project in a project folder .
Recursively create a directory .
List all files matching pattern .
Restore a file from a project folder
Creates a new Session .
List files in a folder .
download a file from the server
Returns True if the entity exists in the storage
Get parent entity by path .
Create a folder at the given path .
Upload a local file to the server .
delete a folder
Validate storage path .
Creates a new StorageClient .
Create a new Session .
Get entity metadata .
Delete project .
Delete a folder
Copies the content of a file to a destination file .
Get the signed URL for a file .
Emit a record .
Sets the URL to a given service and version .
Return a string with the given headers .
Returns a new string with the given parameters .
Throw an exception for the given exception class .
Return a list of strings to display .
Add a map job to a job .
Run oncotator on a VCF
Sort the list by function f .
Returns a list of timestamps .
Load data from a json file
Shift the sequence by t - shift .
Returns a string representation of the sum
Collect rfxcom .
Create a new user .
parse vn results
Parse release results .
Parse prod staff results
Parse character results .
Parse tag results .
Parse user results .
Write a list of files to a tarball .
Perform operation on multiple files .
Copy a file from a job store
Return a list of docker images for this container .
Refresh the metadata from the server .
List of streams in the database .
Export the model to a JSON file .
Parse search results .
Reset an apikey .
Returns a list of users .
Run a bwa index command
Connect to the database
Add a stream to the database .
Add a stream to the database .
Insert a value into the stream .
Starts the sync .
Stop recording .
Download the given url to the file store
Upload a file to S3
Print the labels of the ontology .
Print the hierarchy of the ontology .
Get the mean insert size of a bam .
Create a new blob in the database
Export the data to a json file
The device s device .
Get labels for an ontology
Get the ontology hierarchy .
get empty config file
Get the docker mount path
Add an option to an arg parser .
Create argument parser .
Create the command to create a new pipeline .
Set authentication parameters .
Raise exception if the result is too long .
Ping the server .
Create a crud .
Update a crud .
Deletes a path .
Subscribe to a stream .
List of devices belonging to this device .
Runs cutadapt on a file or directory .
run samtools faidx
Run samtools index on a bam file .
run markdup on a bam file
run samblaster command
Mark duplicates in the input BAM file with validation string .
run Picard sort command
run kallisto
get user affinity data
Send a command to the websocket .
Subscribe to a stream .
Connect to the server
Try to reconnect to the server .
Resubscribe from all subscribed subscriptions .
Called when a connection is established .
Handle disconnections .
Called when an error occurs .
Called when a message is received .
Ensures that the connection is ping .
run a gatk select variants
quick check for bam
Write the configuration to a file .
Get the configuration as a dictionary .
Fetch a term from an ontology
Search ontology by name .
Suggest a suggestion .
Iterate over all descendants of an ontology .
Iterate over the labels of an ontology .
Iterate over the labels of a given ontology .
Iterate the terms of a given ontology .
run fastqc command
add a stream to the query
Start the container
Start a job on the server
Start the datanode in the datanode
stops the container
Check the status of the container
Look up a zone by name .
function to fetch r53 configuration from r53
Merge R53 configs into a single XML file
validate a changeset
Reduce members to fitness score .
Returns the fitness of the group .
Return the average cost function value .
Return the median cost function .
Returns the parameters of the group .
Returns a list of member names .
Add a parameter to the list .
Return a normalized version of a dictionary .
Return a string with all environment variables .
Calls the given callable with the given exceptions .
Transform a list of hits into a package list .
Transform result to unicode .
convert html to xhtml
convert xhtml to html
Open a string in a browser .
Drop the tree from the tree .
Drop this tag from the previous tag .
Apply cssselect .
Yield the member names of the logger .
Get a dictionary of counts .
Returns True if the class is a single class .
return true if the module is a single class
validate that params are strings
Ensure that the request id is valid .
Decode a file system encoding .
Escape arguments in an iterable .
Get codec name for encoding .
Detect encoding .
Returns a string representation of a forwarded address .
Convert an object to a number .
Parse string data .
Parse an XML file .
convert a BeautifulSoup tree to HTML
Get current traceback .
Returns a string representation of the exception .
Render a summary as HTML .
Generate a plaintext traceback from the traceback .
Render the source as HTML .
Returns a string matching the search name
Sort a list of links into eggs .
Get the content type of a URL .
Yields all links in the resource .
Return True if the message is verifiable False otherwise .
Find package data files in src dir
Exclude files in src dir
Parse a requirements file .
Join a list of strings .
Remove comments from an iterable .
Return node as string .
Return node s attribute name .
Convert string to string .
Push the stack onto the stack .
Pop the current stack .
Return a copy of the app .
match the request to the url adapter
Push the current context to the stack .
Returns True if dist is editable
Add a function to the URL value .
Add url defaults to the app .
Get the root path of an import .
Jinja loader for jinja templates
Execute shell commands .
Return the domain of the cookie .
Checks if a path is a pure library
Yield paths to uninstallation paths .
Raise an exception if the version is not greater than the given name .
Build a wheel .
Iterate over the names of a code object .
Write a pip delete marker file .
Return True if the current environment is running under virtualenv .
Get the user s username .
Return a distutils scheme
Parse cache control headers .
Cache the response in the cache .
Load a template from a dev path .
Save changes to file
Convert value to string .
Add a list of filters to the filter .
Add handlers to a logger .
Set logger configuration .
Execute a Python file .
Temporarily override temporary directory .
Return the version of the url and its rev
Get a value from an object .
Generate a string representation of the given source .
Get the default cache name .
Find eggs in a zip archive .
Yield distributions from a given path .
Declare a namespace .
Get mro name from cls
Find the adapter for the given ob .
Ensure directory exists .
Iterate over all entry points in a group .
Return True if dist can be added to this distribution .
Evaluate a marker expression .
Evaluate marker in the environment .
Format a log record .
Return a decimal quantum from precision .
Get the decimal precision of a number .
Return scientific notation .
Unpatches the given class .
Parse requirements . txt
Fetches an egg from the requirements .
Do a dice roll .
Convert obj to str
Validate a price converter .
Validate request .
Retrieve a Flask application method .
Apply the given method to the args .
Get the module module that this module is used in .
Get the blueprint endpoint for this rule
Make an abstract dist from a requirement .
Walk through all requirements to install .
Get all namespace packages
Encode a model as JSON .
Tokenize a doc string into a list of tokens .
Add merge annotations to annotations .
Copy annotations from src to dest .
Compress a list of tokens .
Serialize a sequence of tokens into HTML .
Turn a list of tokens into HTML .
Find the unbalanced string in unbalanced order .
Convert a list of chunks into HTML .
Flatten an element into a list of strings .
Split text into a list of words .
Generate start tag .
Return the end tag of an element .
Serialize an HTML fragment .
Move insert tags inside a block .
Generate a cache URL for the cache .
Recursively add a link to an element .
Kill conditional comments .
Create a HTML document from a string .
Export the repository to a given location .
Get the revision number .
The name of the module .
Returns a string representing the configuration of the exception .
Automatically find the instance path to the package .
Update the given context with the given template .
Handle HTTP exception .
Handle an exception .
Raise the routing exception for the given request .
Perform a full dispatch request .
Make a default response response .
Create url adapter .
Inject url defaults to the given endpoint .
Return the unique value of iterable .
Handle any types required for a package .
Convert a requirement into a requirements string .
convert pkginfo info to metadata
Yield all loaded modules .
Return a list of all classes in this module .
Yields all method names in the class .
Return True if path is a module path .
Walks a base directory and returns root dirs
Dump args to kwargs
Load a str argument defaults to json .
Set multiple keys in a mapping .
Increment the value of key .
Dump an object to a string .
Build editable options
Populate the link for this upgrade .
Ensure that the source directory has a source directory .
Remove temporary source and temporary build directory .
Get distribution information .
Return a list of config dirs .
Iterate over all loaded module files .
Restart the process with a reloader .
Convert a string to plain text type .
Try to find a ca bundle
Parse a string representation of a document .
Parse an HTML stream into a DOM .
Parse a fragment from a stream .
Return a string representation of a word .
convert the arguments to a list
Bind to the server .
Print the report .
Load the bytecode from a file .
Add stylesheet parameters to a dictionary
Run a command on this container .
Get version info from sysconfig var .
Return a list of distros for a given location .
Find external links in a page .
open a local file or directory
Return a list of ui paths removed .
returns a set of paths to directories
add package to sitedir
Add a directory to the sys . path .
Check whether the enableusersite is enabled .
Add encoding to codecs .
Set default encoding .
Force global eggs after local site packages .
Fixes sys . path . path . path
Run a subprocess .
Return True if pyrex is available .
convert pyx sources to a list
Run the application .
Get a file from the server .
Return True if name is a valid URL scheme .
Unpack a link to a location .
Download a file from http .
Check if a link exists .
Format a currency code .
Registers a component in the context .
Decode data .
Return a template context processor .
Render a Jinja2 template .
Render a jinja template .
Renders the given source string using the given context .
Attempt to parse version string .
Returns True if the given name is declared in the local variable
Visit a variable .
String representation of a import node .
HTTP server .
Return a unicode version of the given string .
Return a list of wheels that match the requirement
Populate a set of requirement objects .
Export the state machine to a temporary location .
Look up an item .
Iterate over pages .
Get the ancestor of this browse node .
return a list of string children of this element
Safely get an element by path .
Get the text of an element .
Safely get the value of the element at path
Price and Currency
Get price price .
Send a cached response .
Build a cache response .
Takes a string and returns a title
Compare two strings .
Return the signature of the given key .
Derives the key derivation .
Return the signature for the given value .
Sign a value
Verify the signature of a value .
Validate signed value .
Sign a value
Validate signed value .
Return a string representation of the object .
Handle a server error .
Require parents of a package .
Return a list of all subdirectories in the given base path .
Prepare a HTTP response .
Unsign a zipfile
Unpack a wheel file .
Install scripts from distributions .
Order all nodes in the graph
Redraw the canvas
Get the node with the given id
Called when the graph has changed .
Add new edges on the object .
Called when a component has changed .
handle left click event
When a new diagram has changed this method will be called .
Clear the diagram
Called when a diagram is changed .
Removes all nodes from the map
Called when an element is changed .
Parse xdot data .
Process font .
Process ellipse .
Process a polygon .
Process a polyline .
Process text .
Print image .
Render a grid file
Save an object to disk .
Load the DOT file .
Returns True if the given point x y is in the region
Draw the bounding box .
Open dot graph .
Starts a new connection .
parse dot code and parse it
Create a new graph .
Opens a file dialog .
Save model to file .
Prompt the user to save the model .
Configure the graph
Configure nodes if not initialized .
Configure edge properties
Print the traits of the control .
Add a node to the editor .
Add an edge to the graph .
Add a subgraph to the container .
Create a cluster .
Request a graph .
Handles the DAG options .
Configure dot code
Prompt user to prompt on exit .
Move components to origin .
Save object to file .
Load data from a file like object .
Save the image to a file .
Load from file .
Returns an alias for an object .
Parse a text file .
List of start words .
Add a new chain to the graph .
Remove a chain .
Build the chain .
Creates a temporary file and saves it to disk .
Delete a node or a node .
Get node with given id
Delete an edge from the graph .
Add a subgraph to this instance
Called when the program is changed .
Set the node list to new nodes .
Parse a DOT file and return a graph
Parse a dot file .
Build a top graph .
Get time units and multiplier from seconds .
Format duration in seconds .
Change the name of a file .
Create a ui
Generate a list of chunks from an iterable .
Get a list of children of an object .
Append a child to an object .
Insert a child into the object .
Remove a child from an object .
Called when a listener is replaced by listener .
Called when the listener has changed .
Get the label for an object .
Set the label of an object .
Called when the label has changed .
Initialize the widget
Update editor widget .
Add listeners to the object
Called when a node is removed .
Called when a node is changed .
Add nodes to the graph .
Called when a new edge has been replaced .
Called when edges changed .
Add the specified edges to the graph .
parse xdot directive
Called when a component has changed .
create a node factory
Create an edge factory
Setup mongodb connection .
parse xdot content
parse xdot label
Called when a component has changed .
Change the position of the component
Called when the component is changed .
handle normal right down event
Print style information .
Draw the main layer .
returns true if the polygon is in the given point
Draw the main layer .
Run an event .
Run the loop .
Get full page URL .
Render the previous links to the page .
Generate HTML for the current page .
Create URL identifier .
Return a list of modules in the given directory .
Return a list of modules in a directory .
r Searches for a module and returns a list of modules .
Ensure a directory exists .
Put text into blob .
Check if the given card number is a Luhn number .
Load a Python module into sys . modules .
Add a path to the request .
Find and load a module .
Split a line into a list of strings .
Remove all namespaces from the given root element .
Return a consistent version string .
Create a string from a YAML dictionary .
Merge two dictionaries .
Execute all actions in a given directory .
Add details to the request .
Send a record to the datastore .
Return the rendition string .
Record the number of attempts to be logged in .
Add url to queue .
Start the workers per task
Set the value of a kv .
Get a value from the cache
Recursive function to get all entries in the tree
Get a value from the cache
Delete an object from the cache
Plots a heatmap for each feature .
Add months months to the given timestamp .
Add months to a date .
Return true if the current month is a christmas period
Use music service .
use storage service
Load data from CSV file .
Read data from json file .
Write x and y to a JSON file
filter x y by label
mean by label
Restore data from a previously saved state .
Merge two dicts .
Try to find all strings in installed apps .
Verify that the given block is valid .
Register a block in the registry .
Unregisters a block type
convert a file to mp3
Return a string describing the desired version .
Handle ssl redirect .
Parse a content type string into a datastructures . content .
Parse a list of strings into a list .
Resize the given image to the given width .
download a file from url
Establish a new connection to the server .
Upload a file to the server
Connect to the music server .
update filenames
read iop from a file
scale the angle of the phi
Read the pure water absorption from a file .
read the pure water scattering from a file
Read the spectrum from a file .
write iop to file
build the b . b
build the A matrix
build the c
Build all IOp objects .
Set parameters of the parameters .
read a parameter file to a dictionary
Convert string to float list .
Registers a signal handler .
Handles a pseudo handler .
The default handler for signal .
Pause a given signal .
Handle the abort command .
Invoke the current status call
Remove event from event list
Returns a sorted list of metric values sorted by number .
Set the signature of a function .
Extracts a partial signature from a partial instance .
Create a new argv with new arguments .
Return True if filename matches any of the given files .
Format a file name into a key .
Convert vlq to int
parse header of archive
Returns the duration in seconds .
Print details about the game .
Read the data from the UI .
Open search file dialog
Write the report to a file .
reads the data file
str representation of the connection
Display error message .
Hide error message .
Run the batch .
cancel planarradadad
quit the user
Save figure to file .
Open log file .
Open documentation in a local file .
Setup required actions
Handle click .
Moves the mouse position .
Set the target to the specified location .
Return a signed lock set .
Sign this message .
Return a hash of this message .
Check the validity of the set .
Issue funds to the given sender .
Get the last lock .
The last block proposal for the current block .
Last valid lockset .
Get the timeout for the transaction .
Called when a protocol is received .
Generate a list of hexkeys .
Calculate the delay between two packets .
Deliver a packet .
Convert an address to a native contract class .
Update the list with the given data
Convert vgg data into a vgg image .
Convert an image to a vgg format .
get f layer
Get layer output .
Get features from input x .
Create a base64 - encoded key file .
Finish the acquisition .
Release the mload buffer .
List of table names .
Fixes the compile flag to be used for compile .
Find the latest teradata version .
Get a configuration value .
Set a configuration value
Write a table to the log
Write the default configuration to a file .
Set the column names .
str - > str
Convert a string to a float .
Parse a string of specific gain attributes .
Parse the device settings .
Wrap given text into a string .
Detect the device and return a tuple containing the device information .
Set the center frequency of the PSD .
Compute the frequency spectrum and pwr for the given PSD state .
Wait for result from psd state .
Update psd state with PSD .
Read header data from file .
Write a PWR array to file .
Submit a function to the work queue .
Convert the time to a repeats number .
Create a str buffer .
Setup the instance of the class .
Stop playback .
Run cmake .
Return a set of dates that start with the given datetimes .
Mask the number of times in a datetime .
Return a fixed - day datetime .
Convert datetimes to a subset of datetimes .
Given a list of dates return a set of dates
Return a list of dates to delete .
Get SPI control byte .
Reads a bit value from the specified address .
Write a bit to the memory at the specified location .
Get bit number from bit pattern .
Turns the GPIO interrupt pin into the user s settings .
write an interrupt edge to the device
Wait until file exists .
Register a pin function .
De - register a pin number .
Enable GPIO interrupts .
Send data to the device .
Render the form to a string .
Return True if any of the form has any errors .
Render a link to the form .
extract the version of a package
Returns the kwargs to be used in the form .
Check the status of the HTTP server .
send a GET request
Calculate humidity .
Calculate dewpoint from temperature and hum .
Send the request to the server .
Calculate CRC for given data .
Verify integrity of data
Convert a 32 bit date to a string .
Determine whether or not to use rev b
wake up the device
Send a command to the device .
get archive fields
parse the archive
Update weather station .
Initialize the logging module .
Get a list of available site services .
Calculate the value for a given station and interval .
Set the properties of the object .
Set the command line arguments .
publish the configuration as a string
Returns True if any of the requirements satisfy the current requirements .
Push a new context to the stack .
Remove a context from the stack .
Override the current context .
Push a context onto the stack .
Removes the current context from the stack .
Add an additional string to the current context .
Convert a list of field names into a unique identifier .
Interpret results from a stats dictionary .
extract params from query
Return a string representation of the table .
Get a networkx graph representation of the query
Returns a matplotlib plot .
Returns a CSV representation of the table .
Return the context data for this widget .
Returns a list of widgets sorted by position .
Returns a list of widgets that need to be updated
Register a widget class .
Unregister a widget .
Get the last update of the dashboard .
Save a setting to the dashboard .
Returns True if the metric should be updated False otherwise .
Concatenate multiple arrays .
Check if arguments are in spark .
Format axes and shape of shape .
Wrap a function over Spark .
Align this array to the given axes .
Convert to Spark .
Return the tangent of the tensor .
Get the number of chunks in a plan .
Create a boolean mask from indices .
Repartition this RDD .
Stacks the RDD of this RDD .
Align self to the given axis .
Return the first item in this RDD .
Statistical mean .
Get the variance of the values along an axis .
Statistical standard deviation .
Sum the sum over each axis .
Get the maximum value of the series .
Returns the minimum value of the series along an axis .
Transpose the object to a new set of axes .
Swap two axes .
Reshapes the array to new shape .
Reshape the array to a new shape .
Cast this RDD to a specified dtype .
Clip each element in this RDD to a new range .
Convert the RDD to a numpy array .
Convert argument to a tuple .
Pack an argument into a tuple .
Ensure shape is correct .
Return True if two arrays are equal .
Convert a list into a list of integers .
Convert a slice into a slice .
str - > str
Raise ValueError if new is not a tuple .
Concatenate multiple values into a single string .
Iterate over a sequence of dimensions .
Look up a function by name .
Construct a string representation of a given shape .
Construct a new numpy array with zeros .
Concatenate multiple arrays .
Compute discrete likelihood .
Calculates the most likely alpha value of the input data .
Calculate the discrete alpha value of a discrete array .
Calculate the best alpha probability of a dataset .
Plot a p - f function .
Print the log likelihood .
Sanitizes the given HTML .
Add analytics to yandex .
Return a list of tags and a list of strings .
Return md5 hash of the key .
Return a SHA256 hash of the encoded key .
Return a SHA - 512 hash of the data .
Parse a long integer .
Decode a public key content .
Process raw SSH rsa data
Process a raw SSH message .
Process ECDSa SHA - 512 bytes
process ed25516 bytes
Parse the given key data .
List of mechs .
Run the main function .
Initialize setuptools .
Context manager for creating a file .
Generate HTML for the Django frontend page .
Formats djfrontend and returns it as a string .
Format the djfrontend font for djfrontend
Format the Django frontend for dj frontend .
Format djfrontend jquery .
Format djangouiui .
Format djfront - frontend datatables .
Format djfront s datatables .
Format Django frontend datatables .
Format django formset formset .
Generate HTML for django scrollto .
Generate HTML for django scrollbar scrollbar
Generate HTML for djfrontend .
Return the settings for the Django frontend account .
Generate auth hashes for a user .
Calculate expiry time .
Get user token and expiration time .
Serialize user data .
Update a user .
Called when user login failed .
Validate and validate a user token
Check if request is secure .
Get username from user
Create a new user .
Login a user
logout from user
Authenticate with the server .
Authenticate with the server .
Login to the server .
Handle a password reset .
Set the password for a user .
Merge two dictionaries recursively .
Get the id of an object
Get the meteor ids for the given object ids .
Get the object id for a particular meteor id
Get the object ids of the meteor ids
Get an object from the meteor id
Set the default forward forwards for the given operation .
Set the default meteor id for the operation
Truncate SQL forward and truncate the database .
Truncate the database backwards .
Initialize options for the build .
Finalize the options for the command .
Convert a list of paths to a directory .
Randomly seed the sequence .
Get the current state of the cursor .
Generate random string .
Yield endpoints for the given object .
Clear the api path cache .
Pretty print function .
Initialize the websocket connection
Called when the connection is closed .
Called when a DDP message is received .
Yields frames from a message .
Dispatch a ddp message .
Dispatch a message .
Receive a connection .
Receive a ping .
Receive a sub subscription .
Receive a message .
Send a method to the server .
Yield info about the websocket .
Entry point for the Django server .
Print msg if verbosity is greater than num .
Stop all threads
Run the worker .
Run the main loop .
Patch all strings in strings to be printed .
Generate a random meteor id .
Auto - discover API methods .
Return a dict with error information .
get an object by name
Emit a record .
Add a resource to the route
Send a message .
Send a bulk alert to apns .
Get inactive ids .
Send a message to a CCM server .
Sends a message to a group of registration ids .
Send data to the device .
Send data to the API .
Load model from module location .
Search for giphy search .
Translate giphy giphy giphy giphy .
Get the latest trending HTML .
Get the raw GIF of a GIF .
Get a screensaver .
Upload a file to a giphy . json file
Convert a dictionary to integers .
Fetch data from API .
Get a list of giphy images .
Fetch a giphy image
Uploads tags to giphy upload .
Create a media extension .
Authenticate the user .
Upload a new video .
Check the status of a video .
Update a video entry .
Delete a video .
Check if video is available
Check the status of a video .
Lists all videos in a user .
Upload a video via HTTP POST .
Upload a video upload .
Handle a video upload .
Remove a video .
Get video .
Update the video .
Delete a video .
Updates the properties of this container .
Update a metadata field
Update an item .
Parse a string and return a list of Node objects
Return a string representation of a tree .
Load data from a file - like object .
Read a text file .
Parse a node into a Node object .
Create a new Node .
Return a string containing the newick .
Return node with given label
Prune a list of leaves .
Removes internal names .
Removes leaf names .
Disposes a JSON string into a list of strings .
Raise an exception if the specified setting is not in the configuration .
Get a list of arguments from the request .
Turn a callback into an async callback .
Get cookie value .
Clear cookie .
redirect to the client .
get authenticated user
Construct OAuth request parameters .
redirect to the OpenID endpoint
Concatenate a list of strings together .
parse a header line into a dictionary
Add a new value to the dictionary .
Get a list as a list .
Parse a line of text .
Parse HTTP headers .
Normalize header name .
Ensure that value is a unicode string .
Convert value to unicode .
Convert a value to a string .
Recursively convert an object to unicode .
Check if this plugin is already registered .
select policy based on request and request method
Calculate the occupancy of a grid .
Write a molecule to a file .
Write a PDB file to a PDB file .
Determine molecule numbers .
Resize the contents of a lipids .
Generator for iterating over lines in a file .
Log a message for a user .
Send a message to multiple users .
Get user messages .
Add a message to the response .
Update config file contents .
Verify a profile name .
Retrieve data from a config object .
Retrieve pwd from a message .
Update config data from a msg .
Update the password for a given message .
Create a config profile
Print the required items of a message type .
Get data from a given type .
get auth from user
configure a profile
Write a message to the specified profile .
Write authentication information to a config file .
str - > send method
Instantiate a message factory .
Validate input .
Check that the value is a valid str attribute .
Validate slack post input .
a helper method to validate an attr value
Coroutine to send messages .
Add a message to the coroutine .
Read content from file .
Remove all keys from a dictionary .
Send a message .
Get chat id
Send the HTTP request to the server .
str - > send message
Get SMTP server information .
generate email
Add headers to the message .
Add a mime body to the message .
Add attachments to the message .
Get a session
Get ssl ssl
Get a TLS session
Send the email .
Save the tag to a file .
Unload an image
Get a region of the current image .
Validate this instance .
Remove all elements from the cache .
Read data from the file .
Deletes the chunk .
Resize the file .
Insert a chunk into the file .
Save id3 data to file .
Deletes the specified file .
Parse a file .
Process a single line .
Add new lines to the file .
Draw a string on a given font .
Parse ISO 8601 formatted time string .
Turn a list of words into a string .
Make an HTML word from a word .
Make html para .
Turn a list of lines into HTML
Converts a list of items to HTML
Save the atom to a file .
Update parents atomically .
Run the game .
Register a mapping .
Get the vendor ID for a controller .
Generate a HMAC - SHA - 256 hash of a string
Get request headers .
Send a GET request .
Sends a POST request .
Send a DELETE request .
Convert a value to an appropriate type .
Change the change set of a change set .
Total packet size .
Find the last page in a file object .
Set a section .
Add markup to doc markup .
Processes the HTML content .
Get markup by tag name .
create a hosted zone writer
Lock a file .
Insert a given number of bytes into a file - like object .
Delete one or more bytes from a file .
convert unicode to utf8
Add a change .
parse e change info into a dictionary
Measure the width of a string
Returns a boolean indicating whether the parameter has changed .
Delete this record .
Save this resource to the hosted zone .
Read a number of bytes from the file .
Deletes all keys matching the given key .
Add a frame to the frame .
Update all medics in the API .
Unload sound .
Set loop points .
Get glyph values .
Filter glyph names based on a filter .
Write encoding list to file .
Write the array to a file .
Check if a file exists .
Make a list of filenames .
Parse a hosted zone string
parse a delegation set
Convert a list of blocks into a string .
Group padding blocks .
Deletes the VcFlacflac metadata blocks .
Save audio data to file .
Parse an rrset alias .
Parse rrset record values
Parse a Route53 Route53 record .
Add a record set to this zone .
Create a record with metadata .
Create a new record record .
Create a ptr record .
Create a SPF record .
Create a new DNS record .
Returns a dictionary of values for a change .
write an XML change element
Write a change record set to XML .
initialize log file
Return alias for given alias .
Freeze a dictionary into a tuple .
Join HTML attributes into a string .
Initialize the app .
Initialize the bars .
Bind bar .
Return the args as a dict .
Returns True if the current view is currently active .
Validate a metric class .
get a statistic by name
Calculate statistics .
Auto - discover installed apps .
Returns a CSV dump of the metric
Handle maintenance events .
Get a variable from the request .
Get a GET request variable .
get next colour
Get parameters from gecko request .
Displays the number of days from the given number of days .
Grab metrics from gecko .
Return a list of line charts for the given number of days .
Return the latest geckoboard gauge .
Return a list of metrics for the current user .
Returns a list of gadgets that are not in gadgets .
Register gadgets .
Returns a dictionary with the context data .
Print error message .
Read a long string and print it .
Print a list of strings .
Prompt user for a file - like object .
Returns a DataFrame containing the schedule for the given year .
Returns the winner of the game .
Returns the season s season .
The surface area of the image .
Get coin toss information
return weather data as dict
Retrieve the information about the player .
Returns a pandas DataFrame of the results .
Returns a DataFrame containing the standings of the football team .
Returns a table of team stats .
Returns a DataFrame containing the voting votes .
Returns a dataframe containing the linescore .
Returns the season s season number .
Returns a pandas DataFrame of player stats .
Return a unique key for a class instance and its arguments .
Returns the age of a given year .
Return a string representation of a table .
Get stats table .
Get stats table .
Get a string representing the stats table .
Get stats table .
Get the advanced stats table .
Get stats table .
Get stats table .
Returns a DataFrame of the basic stats for a particular year .
Get a value from the session
Expand details into a dataframe
Add team columns .
Add team features .
Calculates the initial win for a given line .
Return a DataFrame with the given kind .
A simple year award id .
Returns the team name .
Returns a list of box scores for the given year .
Get pq value for a particular year .
Returns a list of the head coaches for the given year .
Returns a DataFrame containing the schedule for the given year .
Get the coordinator for the given year .
Get the coordinator for a year .
Returns the URL of the football team for the given year .
Return the scheme for the given year
Return the alignment alignment for the given year .
Returns a DataFrame of splits for a particular year .
get html from url
Directly put a single queue .
Return a direct copy of the queue .
Close the socket .
Get a batch of data .
Get remainder of path
Get a string from the queue at path .
parse a file - like object or file - like object
Write a list of objects to a file - like object .
Read a varint from the file .
Read Python objects from the stream .
Close the file .
write pb2obj to buffer
Flush the write buffer .
Get the path to the game directory .
Input text with keyboard emulation .
Evaluate the traits in the model .
Loops until condition is met
Wait until the element with the specified traits are present .
Add ignored exceptions to this request .
Execute a single volume command .
Execute the given operator and return the result .
Send a message to the socket .
Get the status of the device .
Power off device .
Power on device .
Set the volume
Select a source
Decrypt a request string .
Calculate the CRC32 of given plaintext .
Obfuscate an obfuscated value
Print missing schema names from song name .
return a list of all href and name
Checks if song name is a valid song name .
Parse song name and return href
Generate a URL for a song .
Parse a download url .
Download song name and return website url
get html response
download a file to a file
download a file using wget
Search station codes by city name .
get a location observation
Parse the response from a JSON response
List of compiled compiler extensions .
The mimetype of the file extension .
Return the mimetype of the compiler .
Return the format extension for this environment .
Register a processor for a given mimetype .
Remove a processor from the registry .
Return a list of paths for this search .
Register default values for file types .
Try to import qt core .
Get netnode metadata
Add plugin name to netnode
Remove plugin name from netnode list
Import settings from a configuration file .
Export settings to a file .
The config directory for this plugin .
Iterate over the keys of the object .
Handle exception .
Get information about a DynamoDB table
Return a list of DynamoDB tables .
Fetch data for a given category
Returns the metadata id of a metadata item .
Get the timestamp of the metadata item updated
Get the crate owner team for a crate id
Get the owner of a crate .
Fetch the crate s versions .
Get crate version .
Get a list of crates
Get a crate by id
Fetch raw JSON content
Fetch items from the database .
Get a list of questions .
Fetch events from the database .
Get the timestamp of the last modification date updated
Get the category of item .
Fetch raw items from the server .
list of buffer list
The io priority of the device .
Release the current connection .
Submit a list of blocks to the IOCB .
Cancel the given block .
Cancel all submitted blocks .
Fetch a list of items .
Get the raw cells from the server
parse the feed
Get the format for a given pid type .
Get permission factory .
Default view method for a record .
Export a record .
Call a callable with the given name .
Close the websocket connection .
Remove a client .
Increment metric by name .
Send timing information .
Log timing information .
Send a gauge to the client .
Send gauge delta to gauge .
Set metric value .
Send data to server .
Create a batch client .
Get a unit client .
Send batches to the remote server .
Create a TCP batch client .
Flush all batches .
Returns a tcp unit client
Creates a user and returns it .
Interpret an object as a string .
Convert a term into an open math expression .
Convert an omobj to a python object .
Convert an object to an openmath representation .
Initialize the Flask app .
Yield valid choices from a list .
Return a string representation of the field .
Apply default form to all fields .
Return string representation of decimal field .
Return email field data .
Generate a string representing a date .
Generate a datetime field .
Returns a string representation of the field s data .
Returns a string representation of the field s values .
Returns a string representation of time .
Chooses a random string of field .
Generate a string representation of a field .
Returns a random string of the given queryset .
Encode an object as XML .
Publish the build and tag it .
Tag the build
Load a python variable
Decode a string to bytes .
Convert a number to a fixed number .
Format a number using the given kwargs .
Convert a string to a numpy array .
Pack an array of blosc .
Add a value to the configuration file .
Remove a configuration value
return a list of the WsList
Get a ws list
Checks if a repository exists in the workspace .
Sync the configuration of the wsname
Clone a URL .
check version
Convert a numpy ndarray to a list of voxels .
Convert a list of voxels into a numpy array .
Execute the print command .
Update a repository .
Add console handler .
Execute a command in a subprocess .
Load a PNG file .
Save numpy arrays to file .
Print status of a workspace .
Print the status of a repository .
Get the block size .
POST a cutout without chunking .
Load image from file .
Save numpy array to file .
Load image data from a tiff file .
Write configuration to file .
Clone this repository .
Returns the version of the installed package .
Wrap a greeting with a given greeting .
Wrap an option with a help message .
Reserve the ids for a given channel .
Merge multiple ids
Get the propagation status of the given channel .
Returns a list of all projects in the dataset .
Get dataset by name
Returns a list of all available datasets .
Parse command line arguments .
Execute the show command .
Show information about a workspace .
Show all workspace information .
Construct and return the URL for the connection .
Guess file format from extension .
Open an image file .
Convert input file to HDF5 .
convert a list of dictionaries to a string
Return the RAML representation of a type
Deletes a channel .
Convert a dataset into a JSON string .
Create a dictionary for the given dataset .
create a channel dict
Return project dict .
Return the size of an image .
POST data to OO
Find a path in a workspace .
Returns a list of public tokens .
Get project information
Set metadata for a given token .
Get a HTTP request .
Send an HTTP POST request to a URL .
HTTP DELETE request .
Load data layers from an hdf5 file .
Save array to HDF5 file .
infer gaps in a tree
Recursively recover the contents of an IO object .
Install jinja translations .
A decorator that acquires a contract in an exclusive manner .
Returns the percentage of a piece of data .
Get cache stats .
Get server s information .
Return a dict with the context data .
Show server status .
Render a dashboard .
Get cache stats .
Show a list of slabs .
Convert a value into a human readable string .
Tries to find a config from a list or dict
Add a new child environment .
Apply config to an applicator
Absolute path to the file .
Read the config file .
Write data to file .
Configure the logger .
Creates the file if it doesn t exist .
Applies the given applicator to this node .
Absolute path of the node .
Remove the directory .
Prepare the container for processing .
Cleans up the tree .
Return a path to a file .
Returns a list of all subdirectories in this directory .
Write data to filename
Read the contents of a file .
Add a file to the tree .
Save configuration to YAML file .
Load YAML data from disk
Clean up temporary directory .
Loads plugins from a given directory .
Get a child node .
Return the value as a string .
Return a string representation of the given object .
Build URL from request .
Read input and process input .
Send output to socket .
Send a request to the broker .
Read input from socket .
Write output to socket .
Get the settle modes for a connection .
Configure the MQP channel .
The address of the receiver .
The target address of the target .
Callback called when the connection is closed .
Create a sender
Request sender .
Create a new receiver
Request receiver link .
Called when a link is destroyed .
Close the ephemeral session .
Process an incoming event .
Add a markdown tag to the markdown .
Called when the receiver is closed .
Called when the receiver fails .
Return host and port from server .
Connect to a socket .
Create a server socket
Return a list of connections that need to be processed .
Read data from the socket .
Creates a new sender session .
Reject sender .
Creates a receiver for a target address .
Called when the connection failed .
This method is called when the connection is established .
Called when the connection is closed
Called when the connection failed .
Get color string .
Get a dictionary of font files .
Set compression .
Add a pdf object
Write a string to the page .
Put the given stream into the output buffer .
Add text to the document
Set style scheme .
Set default font
Add a pdf to the page .
Set the font size .
Add text to the document .
Add a newline to the page .
Add pie chart to the page .
pretty print the pages
Return list of orientation changes .
Output fonts to database .
Output images to disk .
Output image data .
writes a matrix to the screen
Return the absolute position of a given pixel .
Set style .
Rotate a point x and y
Set the information on the object .
set display mode
output file content
Put the header of the PDF .
write the current page to the database
Put the number of bytes to the database .
Put information about the object .
Put the metadata to the buffer .
Yields a frequency series of pairs from sequences .
Iterate over sequences yielding each step .
Generator for GOSper s Gosper function .
Return a generator yielding each value in sequence .
Test if the given length exceeds the given length .
Test if the y - axis contains the given length .
Returns True if this coordinate is greater than the given coordinate .
Returns True if the coordinate is greater than the test coordinate .
Return a copy of this cursor .
The x + x + x + x + x + x + x + + x + x +
get the y - value of this rectangle
Draw the current layout .
List tags .
Get a specific label by name .
Delete a tag
Create a label
Get a list of strings .
Returns a list of strings matching the given labelsn .
List hooks .
setup extension
Returns the path to the theme
HTTP POST request .
List all hosts
Get a log set .
Return duration in seconds .
Update the limits and settings .
Perform the compute on the transit plane
Calculate the binary data .
Free memory usage of the model .
Receive data from the socket .
Yield lines from the stream .
Return the status code and message .
Generate the info file
Return info as a string .
Get capabilities .
enter reader mode
Quit the NTP server .
Return a datetime object .
Print help message
Generate new newsgroups .
Return a list of newnews .
List active news groups .
Generate active times .
List news groups .
Generate list overview .
Generate a list of extensions .
generate a list
Return a list of strings .
Send an XZDR header .
Generate text lines using a pattern .
XFeature compress command .
Convert string to str .
Perform a POST request .
Perform a DELETE request .
Make a GET request to the server .
Returns a list of all scheduled queries .
Get a list of tags associated with this account .
Get a tag by name or id
Delete a tag
Create a scheduled query .
delete an alert by id
Parse a news group line .
Parse header line .
Return a string representation of the headers .
Do a POST request .
Run multiple tests .
Return the default docstring for the class .
setter for _value
Check the type of the value .
Return the value of the field .
Raise TypeError if value is not valid .
Symmetric error representation of self . errors .
Setter for errors .
Set the parameter values .
Import metrics .
Extracts a dict from a metric
This method matches the filter expression
make call to api
Convert text into an Expression .
Return an operator s operator .
Implement op add .
Initialize all required properties
Get a list of parameters .
Return a list of parameter values .
Returns a list of parameter errors in the model
Clear all derived parameters
Setter for HTTP method .
Get environment variables .
Calls the method and returns the result
Validate scene info .
Verify that the type product is valid
get the size of a remote file
Validate bands .
open a connection to the Earthex hexplayer
Normalize a datetime .
Concatenate strings with delimiter .
Return list of newline positions
Write a point to a source .
Dump the results to a string
Return a filtered version of the report .
Create a fortune from a list of files .
Set a number of files that match a given number of files .
Run the main script .
Concatenate a rule .
Add special handling for special handling .
The grammar for the input source .
The grammar rules .
A list of comments .
Return a list of directive directives .
The output source of this Compiler .
Return a string representation of the token .
Returns a string with the import directives .
Returns a string representing the token type .
Return class definition as string .
return the name of the entry point
Get the source of the source .
Return the transform for the given rule .
Convert an expression to an ASN representation .
Converts the given node into a string representation .
Return a new list of operands matching predicate .
remove grouping groups
Returns code for the given AST node .
Converts an astree node into a Python code object .
Return a string representation of the given AST terminal .
Return a list of code for the given AST option group .
Convert an expression into a list of code blocks .
Converts a special code to a code string .
Convert an AST node into a python code block .
Convert an AST node into a python code string .
Convert an op to a python code block .
Convert an expression into a code block .
Convert an expression into a list of code lines .
Find directives that match pred .
Tries to flatten a child node .
Print the result of the API call .
Returns wx . id
remove a hotkey
Add command line arguments to the parser .
Configure logging level .
Validate the arguments passed to the constructor .
Convert a list of infix nodes to postfix .
Convert a list of nodes into an optree .
Reduce a list of nodes into a single node .
Load manifest from file
Returns the column lengths
Returns the column lengths
Escape underscores with underscores .
Print field -down fields .
Print metrics to stdout
Generate markdown
Parse the given text and return a tree .
Attempt to count the consumed text .
Add arguments to the parser .
Parse string into datetime .
Print csv to stdout
Outputs a JSON formatted string
Print raw JSON .
Convert raw XML to XML
Return the default value for a parse node .
Pretty print a node tree .
Returns a function to extract a repetition .
parse and parse a terminal
Execute an expression against a given extractor .
Count leading whitespace .
Calls extractor on text .
Get the node s position .
Return True if this node is empty .
Add an ignored string to the parser .
Checks if the given value is a type .
Return a flattened version of this node .
Return a string representation of this node with the given pred .
Merge this node with another node .
Return a string representation of a new type .
Return a string representation of the node .
Get the position of the source line .
The position of the readed read position .
Go to next char .
Go to next line .
Go to the next line .
Get the last readed line .
Go to the specified number of characters .
Save current context .
Restore current context .
Return a string representation of the notification .
Set the internal name of the class
The number of variables in this module .
Return number of functions in this module .
Update current scope with new values .
Return a new scope with the given signature .
Update this scope with the given oset .
Return a new scope with the given signature .
Update this scope with the given oset .
Return a new scope with the given signature removed .
Update symmetric difference with symmetric difference .
Return a new scope with symmetric values .
Add a signature to the tree .
Remove a signature .
Remove a signature from the scope .
The signature of the header .
The signature of the header .
Get a scope by its name .
Get a signature by its symbol name .
Returns a new scope that can be used to render all polymorphic objects .
Call the injector with the given translation .
Normalize an ast .
Set the attributes of the node to the node .
Check that the hit is in the correct charge .
Get the compute signature for this Compound .
Resolve the Compound to its resolution .
Returns a list of resolved names for the given type name .
Set the resolved name for a type .
Delete a local file
Delete a file from S3
Delete a file from S3
Save the object to a local file .
Save a file to S3
Save object to file .
Find a bucket by path
Create an enum type .
Set a callobject for the given thing .
Read the end of the stream .
Push the rule nodes into the tree .
Removes the last rule node from the tree .
Get the value of a node .
Add a parsed stream to the parser .
Begins a tag .
End a tag .
Set the rules for this class .
Set the hooks for this class .
Set the directives .
Evaluate a rule .
Evaluate a hook .
Echo the given text at the current position .
Read one character .
Read a character from the stream .
Read until EOF is read .
Ignore whitespace characters .
Check that the struct is compatible with the struct .
Add a rule to the namespace .
Add rules to bnf .
Add a rule .
Add sequences to the parser .
Add an alternative to the parser .
Add a range to the sequence .
Add rpt to the parser .
Add a capture to the parser .
Add a binding to the parser .
Add a parse hook to the sequence .
parse param as a string
parse a string parameter
parse char as a string
parse param as string
Set the name of a hook .
Add a parameter to a hook .
Get parsed rules .
Ignore cxx character .
Add a state .
Returns a string representation of the state .
Write the graph to a dot file .
Write PNG to png file
Returns a string representation of the state .
Add a new state to the state .
reset the living state
Infer inferred type of block
Infer subexpr of expr
Infer literal from a literal .
Dump the tree to a string .
Return the exit scope .
Return a statement that can be used to parse a statement .
Return an astroid . Call node as string .
Return an astroid . Call node .
Return an astroid . hook .
Return an astroid . Rule node as string .
Visit a capture node and return a statement .
Return node s name or expression .
Visit an alt statement .
Visitor for parsing a sequence node .
Visitor for an optional node .
Return statement node as statement .
Return statement node as statement .
Concatenate a string to a new one .
Set indentation of a list .
Convert a list to a string .
Echo the given list of nodes .
Populates an edge from a sequence .
Populate an edge from all seqs .
Build a state tree from the given tree .
Return True if the predicate evaluates to true otherwise False .
Build a grammar from a grammar .
Create a grammar from a file .
Parse the given source .
Parse a YAML file .
Set node src to dst .
Set the value of dst to dst .
get a subnode as a string
Dump a dataframe to a string
Get a list of recids from a given date .
Get a list of ids from a given date
Return a list of checks .
Serialize the object as JSON .
Get a list of accounts .
Dump the object as a JSON string .
Get a set of modified recids .
Get a list of ids modified since date
Get collection restrictions for a collection .
Get the revision revisions of a record .
Get list of restricted collections .
Serialize a record as JSON .
get recids from date
Dump a record to a string
Dump a ra to a JSON string .
Load a file into the database .
Returns a dictionary mapping entry points to strings
Initialize the application context .
Get the run sql statement
Execute a query against the database .
Dump a JSON - ready representation of the object .
Load token from data .
Import record data into database .
Return a string representing a config imp or a default .
Serialize object as JSON .
Get list of users .
Get a list of users .
Return a dict representation of a user .
Load deposit data into database
Create record and pidstore .
Load a record dump file
Load JSON records from one or more sources .
Get the profiler statistics .
Run the application .
dump profiler
Deletes the profiler .
Deletes the process .
get current status
Calculate the translation for each image in parallel .
Merge multiple images into a single numpy array .
Add one or more ones to an array .
Create a record from a dump dump .
Create a record
Update a record
Create pids for a record uuid .
Deletes a record from the bucket .
Create a file in a bucket .
Delete all buckets from a record .
Return a list of pids that are missing .
Prepare the list of files
Prepare pids .
Return True if the record is deleted .
Load a community .
Load a featured community .
Dump a thing to a file .
Check a thing .
Deletes all events from the pengager .
Returns the magnitude of a vector .
Normalize a vector .
Transform the texcoords of the texcoords .
Ensures that the bones are present in the data dictionary .
Set length of a bone
Set the parent of the bone
Get the pivot point of a sphere
starts animation
Set the camera state .
Unset the camera state .
Set the texture state .
Unset the state .
Ensure model data is in database .
Redraw the rendering of the scene .
Draw the model on the object .
Set the model for the model .
Writes test reports to a file .
Add a menu
Redraw the label .
Redraw the label
Draw the current scene .
Deletes given widget .
Redraw the label .
Register event handlers .
Register event handlers .
add label main window
Prompts the user to exit dialog .
update progressbar
Render a 3D representation of the actor .
Render the current scene and draw it .
Check if a resource exists .
add a category
get missing texture
Get a model by name
Load a model
Get model data .
Add a widget to the container .
Draw the widget .
Redraw the canvas on the screen
Update the scrollbar .
Checks if mouse Aabbix is a valid mouse area
Percentage of values .
Add a layer to the network .
Add an action to the bot .
Run an action .
Register a new string with the given name .
Add a layer to the layer .
Draw all layers .
Delete all layers .
The border of the widget .
The raw offset of this widget .
Returns the size of the widget
Read a mesh from a HDF5 file .
Make a convolutional network conforming to a given shape .
Set the fields of the message
Add one or more fields to the request .
Check the types of elements in the type .
A list of tuples representing the space in the array .
Returns a pandas DataFrame with the indices of the edges .
Returns statistics about the current mesh .
Convert an element to a boolean set .
Convert node set to surfaces .
Convert a surface to element sets .
DataFrame metadata .
Return metadata as a pandas series .
Make all possible directories .
run the gmsh file
Read a history report
parse a field report
Convert a list of strings to a string .
Return a string representation of the equation .
Convert a DataFrame to an unsorted string .
Parse an HTTP response .
HTTP GET method .
Write xy report to file .
Return an error message
Return True if current traceback is thrown by the given descriptor .
Set data for this object
Get the mode of an axis
Set options for the plot
Create a new class for a class method .
Cycle through all incoming messages and draw them .
Try to convert value to float if possible .
Convert string to float
Parse a graph and render it .
convert raw string to unicode
Return True if mime type matches mime type .
Clean up a domain name .
Return the left cuts of a domain name .
Make a hash key for a given tok .
Collect the words that have been sent to the server .
Index the document .
Invert the given hash to the given value .
Get document frequencies for given hashes .
Look up a hash for a given hash .
Iterate through all strings in a file - like object .
Read a varint from the stream .
Read a string from the stream .
Serialize an si key to a string .
Serialize a streamitem to a key .
Context manager to temporarily change the current working directory .
Strip a prefix from a string .
Remove the suffix from a string .
Return True if the given value is a subsequence .
Run the WSGI server .
Terminate the server .
Returns a callback for the error page .
Add a callback to route .
Resolves a route with a given method and path .
Resolve a non - literal route to a route .
Normalize a pattern to a list of strings .
Return a string representation of the response .
Add an HTTP header .
Set cookie .
Return the status line
The content type of the content type .
Recursively delete a directory .
Get open file descriptors .
Attempt to fetch data from a work unit .
Returns a list of lines from a file .
Generate random adjspecies pair .
Generate random adjspecies pair .
morph a sentence
Display the similarity of a request .
Executes the hiragana command .
Print a sentence .
Get shortsum .
Print a list of keywords .
Display a chrono file .
Initialize all stages .
Run writers .
Run incremental transforms .
replace the given configuration with the given name with the given name in the config .
returns true if all target mentions are in target mentions
Return true if any of the target mentions are in the chain .
Match a stream item .
make a ner xml file
Terminate the child process .
Multiply a sequence of integers .
Split the text into sentences .
Set the label index for the given stream item .
Convert a stream item into a list of sentences .
makes a cleaned file in a temporary file
make a file for a tagger
Remove whitespace from a string .
instantiates the pipeline configuration
Generate a johnny smith chunk .
Make a clean file from i chunk i . e . content
Remove whitespace from a string .
Load HTML from command line .
Try to load a stage from a module .
Loads external stages from an external source file .
Initialize a stage by name .
Read data from start bytes .
Return True if the href is in the configuration
Creates labels for the label
Generate all paths in input directory .
Yield all the tasks in the queue .
Get a random number from the pool .
Get a list of sentences for a given nerp dom .
Verify md5 checksum against expected errors .
Get an S3 bucket .
Decode the given data into a stream processor .
Get a chunk from a file .
Convert a stream id to a kvlayer key tuple .
Convert a kvlayer key to a stream id .
Generate a hash for stream item .
Run a simple simple server .
Build argument parser .
Convert a sentence to char tokens .
Converts a list of character tokens into a sequence of character tokens .
Add an element to the list .
Return the xpath piece as a string .
The index of the last text element in the text element .
Recursively iterate over all descendants of elem .
Selects all elements of the given source .
Select all XML elements matching the given name .
Select XML names matching a pattern .
Return the following siblings of elem .
Call inkscape .
run inkscape export command
Export svg to a PDF file .
Export SVG to PNG file .
Get a jinja environment for a given file .
Setup the Jinja2 template
Fill the template with the given doc contents .
Save the configuration as a string .
Get a doctype from a template file .
Fill the given document contents with the given content .
Render the image to a temporary file .
Render the template to a temp file .
Parse an XML source .
Return HTML fragment from source string .
Insert text into xml .
Insert a new node before the reference node .
Clone this node .
Return a string representation of a XML node .
Insert a child .
Parse the config file .
Get Google credentials .
Create event datetimes .
Create an event .
Parse command line options .
Get the file extension .
Add an extension to a file if it doesn t already exist .
Get a temporary file .
Remove all files in the workdir
write a CSV file to a json file
Replace old content with old .
Parses the HTML and returns the parsed HTML .
check next sibling
wrap an italic tag
wrap a strong tag
Wrap a string underline .
Parse the attributes of a tag
Clean line breaks .
Parse a href as a string .
Parse an attribute value .
Translate a dictionary into a single key .
Convert the object to a JSON string .
Find all files in folder path
Concatenate strings .
Yields True if the string starts with the given part .
Yields a string containing only the parts in the full path .
Generate a boolean expression .
Iterate through a sequence of expressions in a context .
Yield tuples of values from a table .
Replace all characters in svg code for svg code
Validate svg file .
Merge multiple PDFs into a single file .
Embeds a font to an svg file
Embeds a font to svg
Check input .
Check if function is callable .
Recursively recursively recursively recursively calls the function on each input element
Create a Jinja2 input string from a template
Recursively recursively recursively recursively iterate through the input tree .
Convert an object into a string .
Convert an object to a number .
Convert an object into a boolean .
Return a string representation of an expression .
Change XML encoding .
Save text into qrcode .
Launches a music service .
Calls a shell command .
Convert a tex file to PDF .
Return a list of all of the hooks for this psycopg .
Transform a geometry to a new location
Creates a geometry object from a string or string
Expand the given string with the given length .
Intersect two arrays .
Returns a string indicating whether this rectangle intersects the given region .
Return a polygon representing the WKT .
Creates a FrequencySeries from the z - nm data
Write the dataframe to a CSV file .
Select rows from the DataFrame .
Return a table with the given nuclei .
Return a new table with the intersection of the table .
str - > table
Returns an odd number .
Rough odd odd .
Shortcut to make sure every row is even even .
Format the error as a string
The binding energy as a string .
String representation of the number
1 - n
Convert to p - value
1 - p1 - p - p - p
Compute a table derived from the data .
Decorator used to execute a function in a sqlalchemy session
Derives a key from the master password
Initialize a database
Search for domains in the database .
Modify a DNS domain
Create a new DNS domain .
Extract HBS messages from the given fileobj .
Return the virtualenv prefix for a given path .
Return the SID of the authority .
Entry point for the script .
Update a file from a URL .
Return a dictionary of available drivers .
Return an image driver for a path .
Convert geom to numpy array
Rasterize a raster
Opens a raster from a file .
Create raster from bytes .
Copies the raster to the destination
Return a string representing the options .
Create a raster file from this image .
Set geodetic transformation .
Read data as an array .
The envelope of the image .
The driver for the driver
Create a new raster .
Return a masked array with the given geometry .
String representation of the data element .
Read raster data
Resample this image to another .
Save the image to disk .
Set the projection of a spatial reference
Warp the current image .
Calculate the chunklen and an enclosing chunk length .
Looks up the alphabet for the given charset .
Return a string representation of the chunk at the specified index .
Convert a chunk to a long integer .
Get a chunk from data .
Returns a regexp for the given filename .
Normalize a date to a datetime object .
Detect timezone for current locale .
Convert the swagger object to a dictionary .
Run the given job handler .
The main loop for the job handler .
Run a multiprocessing worker pool .
Validate classification .
send a message to the queue
Turn on a device .
Turn on switch .
Turn on a bulb .
Turn off a device .
Send all messages from the queue .
Send a reliable message to the LDR .
The nature of the entity .
Set configuration files .
Iterate over all available options .
Write the config to a file .
Update the configuration dictionary .
Read configuration from a file .
Read config files and return a list of dicts
Return a list of names for the given option .
Return a list of section names .
Build and return an argument parser .
Parse command line arguments .
Return a list of command names for a bash command .
Build a bash completion .
Start a multiprocessing server .
Called when a connection is established .
Called when a line is received .
Called when the connection is lost .
Register a job
Called when a response is received .
Close this client .
Add a list of jobs to this queue .
Close the connection to the server .
Remove all waiters .
Add a new result .
Wait for the task to complete .
Load next job .
Mark this job as done .
Add a result to the queue .
Cancel all active jobs .
Mark all active jobs as completed .
Distribute the available jobs to the dispatcher .
Add a list of jobs to the server .
Wait for a job to complete .
Return a job .
Add a result to a job .
Called when a job set is done .
Close the canvas .
Uniqify a list .
Match a regex against a string or list of strings .
Get the boto region .
Filter entries according to the given filters .
Get the host of an EC2 instance .
Create instance from dictionary .
get an attribute
Convert a boto instance to a CloudFormation instance .
Check if the value matches the given filter .
Return a string representation of the name .
Add a timestamp to the event dictionary .
Create a logger .
Setup celery app .
Delete a worker .
Return a config section of the config file .
handle config commands
Convert a list of rows to strings .
Get a hash of a string .
Generate a random color .
Checks username and password .
Check if token is valid .
returns True if process is running
Dynamically import a module from mod path .
Get the current IP address of the current host .
Make a request
Prepare HTTP POST parameters .
Serve a web server .
Render a template .
Convert a dictionary of dictionaries into a stream .
Returns a list of network days between two dates .
Get the path to a command .
Build a ssh command .
Construct a profile from command line args .
Add a relationship to this part .
Returns a list of the parts of a specific type .
Load relationships from a source file
Add a part .
Load a part into this object .
Find an extension for a given name .
Create a content type from an XML element .
Parses input string and returns a unicode string .
Build the Authorization header for this AccessKey .
Assign force field to an AMPAL object .
find the maximum rad and npnp
Make force field data dict .
Return the object as a stream .
Get all matching segments from a ZIP file .
Returns a list of filenames in the given directory .
Returns a list of directory names in the bucket .
Create a prefix for the given dirname .
Delete a file from the bucket
Ensure that the user is logged in .
Return the loud version of lang .
Return the URL for the current user .
List of hotspotices in the live data .
Get a keeper token
Upload a product .
Determine if travis event should be skipped .
Confirm a build
Recursively update a dictionary .
Entrypoint .
Edit a part edit command .
Pack a directory .
Split a path into a list of directories .
Get editor from filepath .
Processes the given file .
Generate a chart object .
Render a chart object as an HTML string .
Serialize a chart into a string .
patch json data to json
Convert a JSON object to an html string .
Convert a dict to a pandas dataframe
Write html to a folder
Make a chart class
Encode two fields .
Try to infer the tarball URL from a tarball file
Create an app .
Delete an application .
Generate random binary string .
Generate random IP address .
Generate random date .
Get a session object
Make a request to the API .
Create a build
Get the status of a build
Returns a string representation of the given prefix .
Register sub commands .
get root arg parser
Get the description of the object .
Get the help string
Run the command with the given args .
encode a dataset into a string
Perform a GET request to the server
Returns the last activity of the experiment .
Get the activity list for the given athlete .
Get the activity data for the given athlete .
Returns the URL for the given athlete .
Construct the URL for an activity file .
Make a GET request and return the response .
Create a build
Generate a url with the given regex .
Generate a random title .
Generate a person .
Get a random name .
Render the data as a string .
A string representation of the dataset .
Render the plot as a string .
Check if the type is in the dictionary .
Generate the URL for the current object .
Wrapper around pyopen .
Save the URL to a file .
open urlopen
Return image as string .
Write the file - like object to fp .
Return the SHA - 256 hash of the image .
Return a number of decimal places .
Return protected and protected claims as a dict .
Return a list of signing keys .
Unpack a metadata statement .
Pack a metadata statement .
Evaluate a metadata statement .
Check the validity of the message according to the federation usage .
extend SMS message with sms dict
parse command line arguments
Add command line arguments .
Apply logging options .
Log message at verbose level .
Return a dictionary mapping each letter to a key .
strain words in word
Return the class as a string .
Transform a timeseries into a string
Get the last value from a timeseries .
Validate a page number .
Get a page from an iterator .
Change the mode of a file .
Make an internal signing service .
Make a signed signing service .
Return a string that can be used to sign a request .
Create a new resource
Update a metadata statement
Get the signature from the API .
Create a bundle from a dictionary .
Create a bundle from a dictionary .
Returns all urls for the given asset type .
Return HTML tags for a given asset type .
Returns a string containing the HTML tags .
Ensure url is valid .
Find URLs in a URL .
Connect to a client
Get a list of modules .
Import all available modules
Selects a document with only the specified fields .
Returns a string representation of a datemapoint list .
Print the cursor to stdout .
Helper to output the cursor .
Get a list of tasks from do tasks .
Add default departments to project
Add user - shot dependencies to the project .
Handle shot save .
Create all tasks for the given element .
Get a value from a config section .
Add a factory factory .
Remove a factory factory .
Connect to a protocol .
Receive data from a connection .
Disconnect from the given connection .
Call a remote command .
Called when a connection is made .
Called when a connection is received .
Handle data received from the socket .
Send data to device .
Called when the connection is lost .
Get the protocol for a given connection identifier .
Called when a remote connection is received .
Disconnects from the specified connection
Return a string centered on the given string
Print a string on the right side of the right .
Return a version number .
Identify a target unit framework .
Check that the given value is convertable .
Pad data to block size .
Unpads a given block size .
Sign a request .
Gather the metadata statements for a given context .
pretty print a word
parse command line arguments
Entry point for the wordlist parser .
Process received packets .
Handle unregistered type messages .
Create a function stub .
Ping a peer and callid
Return a string representation of the command .
Convert a string representation of an array into a string .
Return a string representation of an object .
Verify the integrity of the metadata
Parse a JWT
Return a list of databases .
Synchronize all local files in a folder
Build Slackware modules .
A convenience wrapper for readonly .
Load configuration from file
Produces a signed JWT using the given keyjar .
Return a string signed by the given keyjar .
Recursively dump all files in the testdir .
Run the librarian test .
Return the score of a letter .
Returns the score of a word .
Lists all words in the given list .
Returns True if word is valid False otherwise .
Called when a string is received .
Get the command and its responder function .
Parse request values from a request object .
Writes a response to the transport .
Called when a connection is lost .
Build a protocol string from a given address .
Create a keyjar from a JWKKS dict
Load a JWT from a JSON string .
Process the message body .
Processes a cinder customer message .
Process an incoming message .
Process a message from glance customer process .
Process a swift event .
Processes a message .
Process a heat customer process event .
Serve the server .
Print msg to stdout .
Print msg to stderr .
Register a command sub class .
Register a command sub class .
Convert a value into a string .
Parse the argument from a string .
Update the completer dictionary from a dictionary .
Initialize the connection .
Initialize a connection to the broker .
Initialize the modules
create a consumer for nova queue
create cinder consumer
Initialize neutron consumer .
create glance consumer
create heat consumer
Map the notification of a component in OpenStack .
Get song info
download a song
Execute the code in a string .
Load a variable by name
Call function i . e .
Dump a database to a temporary file .
Calls the exit function .
Run the command .
Change current working directory .
Recursively copy a directory .
Print the traceback to the debugger .
Get the modification time of a file .
Check if file has changed since last time .
Syncs the changes stored in the database .
Remove all data from the cache
Scrape a feed
Download and save an image
Returns True if the image has changed .
Find the caller s filename and line number .
Get the defining component of an element
Entry point for ooofooa .
Find a symbol in the stack .
Returns True if the given pee is contained in the given pe .
returns True if type is global False otherwise
get the name of a data type
get two related attributes
Create a namedtuple from an edt .
Create a bridge function
Create external entity from an entity
Create a function that will run the given sync object
get constant for cnst
Creates a function that will be used to create an operation .
make a function derived from an object
r Generate a simple relationship between two statements .
Creates an association for a given object .
Recursively create component classes .
Perform a RPC call .
Accept a reply .
Reject a call .
Raise an exception .
Issue a call to the server .
Establish a connection to the pool .
Dispatch a reply .
Guess the type name of a given value .
Deserialize a Python value into a Python object .
Get a feature by content id .
Put features to Elasticsearch .
Deletes document from Elasticsearch
Deletes all mapping from the index
Delete the index .
Scan a prefix and return a tuple of results .
Returns a generator that iterates over the ids of the specified prefix .
Return a list of ids matching a value .
Convert list of feature names into a string .
Return a list of strings representing the given key ranges .
Returns a dictionary mapping names to their indexes .
Get the types of the field
convert fc to disjunction
Returns the number of bytes in fc .
Count the number of bytes that match the predicate pred .
Return a string representation of the feature collection .
Entry point for docopt .
Default formatter for formatting .
Return a pretty representation of a link .
Returns a unique identifier for the given inst .
Return a string describing the uniqueness constraint .
check integrity of a link
check integrity of subtype
Convert an integer to bytes .
Delete all records from the database
Apply a prefix to each value in the index .
Add an index to the index table .
Put a raw value into the index .
Yield the index keys for an item .
Return an index by name
Adds the language to the given value .
get type name
get the value of an attribute
build a core type element
Build enum type .
build struct type
build user type element
try to build a type
build a class element
parse oofooa element into xml
Build Oofoo schema .
Return a prettified version of a XML string
Fetch and return a list of tubes .
Set positional information .
create a queue
Delete a queue from the queue
Get a list of queues and properties .
list all exchanges
Get the contents of a purge queue .
Create a MIME message .
Read image content
Return visible text .
CLI entry point .
Serialize a value to a string
Serialize association to string .
Serialize a Metaclass to a string .
Parse command line arguments .
Partition a collection into a list of lists .
Adds the bidi context to the current language .
Find a relationship between two instances .
Compute lookup key for given instance .
Compute the index key for the given instance .
Returns the type of an attribute
Creates a new clazz .
Iterate over all metaclasses .
Define a meta class .
Send a message to socket .
Receive a message from a socket .
Run a dead code .
Parse email addresses .
Decorator to turn a function into an rpc function .
Build a dictionary of RPC specs from an application .
Normalize postcode middleware .
Get the next value .
recursively accept a python instance
Recursively accept all children of a node .
recursively accept all subpackages of a package
Get the brightness of the image
Match the pattern .
Find a match at position .
Return a string representation of a character
Handles cursor position changes .
Get exception info .
Get instance by name .
Execute the command .
Reimplemented by Shift modifier .
Returns True if down pressed .
Get the previous edit string before substring .
Get the next edit string .
Handle an execute reply message .
Returns True if the lock is locked .
get edited history item
Set history .
Store the current edits .
Close the console .
Convert a collection to a Pandas DataFrame .
Set multiple attributes .
Subscribe to the stream .
Log a message .
Execute a function on a view .
convert a nbformat to another notebook
Get a module importer .
Wrapper around c string .
Override override to override setuptools .
Parse a requirement string .
Return parsed metadata as a string .
Collapse leading whitespace .
Override hide event filter .
Overrides show event filter .
Get current text cursor
Update the currently selected item .
Register models in the admin site .
Return a list of disk partitions .
Get system cpu times .
get system cpu times
Read raw lines from stdin .
Read raw data from stdin .
Updates the visibility of the tab bar .
create a new tab with the current kernel
Add a frontend to the kernel .
Populate the menu with the magic menu .
Handle close event .
Check if the passphrase matches the passphrase .
Return an indented version of an item .
Check if user has change permission .
Check if the user has delete permission .
Add n children to g .
Create a basic bintree from levels of levels .
Submit a set of jobs in a graph g .
Validate a tree .
Creates a string for each color template .
Return a copy of this color scheme .
Add a scheme to the graph .
Set the active scheme .
Return the library path .
Handle the IRC sub messages .
Wait for kernel .
Set style .
Get a format from a token .
get format from token
Get a Qt format from a given token .
Try to find a command in PATH .
Normalizes a path to a real file or folder .
Raise error if nsp is not in distutils .
Ensure entry points are valid .
Return True if src is blank .
Return the last two blanks .
Transform a string to an assignment system .
Transform an assignment magic string into a single string .
Transforms a classic prompt into a regular prompt .
Replace ipy prompt with whitespace
Find indent spaces and full dedent spaces .
Stores the given lines into the buffer .
Reset the source and raw data .
Process cell magic parts .
append lines to buffer
Transform a single cell into the stack .
Post a notification of the specified type .
Return set of registered observers .
Add a callback to receive notifications .
Update the status of running jobs .
Report the number of jobs in the group .
Flush the current group .
Return a string representing the new status of the group
str - > status
Initialize the thread .
Insert a string at the specified index .
Return a copy of the object .
Declare a special class .
Declare a list variable .
Declare a set variable .
Set the cwd .
Moves the range to the given state .
Get the energy of a node .
Return a dict with default values .
Check the existence of the table
Return a string representation of the check .
Returns a string representation of a list of rows .
Build a link .
Convert a javascript file into a string .
Generate a css file from a url .
Generate an HTML tag .
Subtract a value from value
Multiply a value
Return the division of value .
Return the modulo of value
Get verbose name of an object .
Split a string into a user input .
Add options to parser .
Remove the builtin builtins .
Find the url name in the index .
Yields urls that are included in the URL .
Convert a string to a list .
Run coverage script .
Add an action .
Append action code to parser .
Print help message .
Handles the help command
check args against args and actions
Execute the analysis .
Prints debug information .
Unserialize the object and return it .
Set the hook to display .
Execute a function and log it .
Return True if url is a valid URL .
Validate a URL .
Validate a URL container .
Pull a value from the global namespace .
Return a list of n random ports .
Execute the function .
Get the last n lines of readline .
Set the autoindent of the file .
Initialize logging .
Save sys module state .
Restore sys module state .
Register a function to be called when a function is executed .
create a new python module
Initialize user namespace .
Returns a list of all user - defined references .
Reset the history .
Deletes a variable from the database
Remove all entries that match regex .
Get property from target .
Find an object by name .
Inspect a method on an object
Initialize the history manager .
Show a traceback of an exception .
Print a traceback to stdout .
Show a syntax error .
Pre - read line .
Set custom completer .
Set the current completions frame .
Execute a line magic magic .
Find the magic for the given name .
Define a macro .
Run a command on the system .
Rewrite the user input to stdout .
Return a string representation of the user variables .
Return a string representation of user expressions .
Evaluate an expression
Execute ipy shell script fname .
Execute the cached cell magic .
Expand variables in a command .
Create a temporary file .
Stop all temporary processes and clean up the session .
Broadcast a message to a destination .
List all profiles in a directory .
Returns a list of ipython profiles .
Find a version matching req .
Return the full path to the given filename .
Get the next line from the stream .
Send a string to the child process .
Sends an integer to the terminal .
Convert a regex pattern to a regular expression .
Convert a regex pattern to a regular expression .
Search the buffer for the given buffer .
Search the given buffer .
Unpack a directory into a directory .
The last error in the log file .
Execute a command and return its output .
Find a source file in the coverage data .
The list of arcs executed .
The list of arcs missing from this node .
Returns a list of all arcs that are not already empty .
Get branch lines .
Returns the total number of branches
Returns a dictionary mapping branch arcs to missing branch lines .
Returns a dictionary with the number of branches and the number of branches that are missing .
Set the precision of the metric .
Returns the number of executed statements covered by this expression .
Returns a string containing the precision covered by this interval .
Return a string with the given characters .
Highlight the given keywords .
Highlight given keywords .
Run a function on the object .
Unquote quotes from is_quote .
Convert a string to a marquee .
convert a string to a regular expression
Return a dedent of text .
wrap paragraphs to ncols
Find the optimal number of rows in a list .
Returns the value at the given i .
Build the arguments for the kernel .
Initialize the SSH tunnel .
Pretty print the object .
Pretty print the object .
Get the mro of an object .
Default pretty print function .
Pretty print the object .
Print regex pattern .
Print the type of obj .
Pretty print function .
Print exception details .
Registers a function for a given type
Register a deferred type for a type by name .
Add the given object to the output buffer .
Put a breakable breakable .
End a group .
Flush the buffer .
Pretty print object .
Write a row into an ods file
Get the contents of the Windows clipboard .
Get string from OSX clipboard .
Get tkinter clipboard content .
Get the build prefix .
Receives a value in a dictionary and converts it to a string .
Recursively extract dates from a datetime object
Convert datetime objects to strings .
Return a string representation of an object .
Check to see if the installation directory is in the target directory .
Write a script to the install directory .
sleep time t
Create a parser for the given prog name and subcommand .
Open a connection to a zmq connection
Build a package finder .
Log level changed
Return a default logger .
Report whether the flags have changed .
Prints a help string for all aliases .
Returns a string describing the flags .
Print subcommands as a string .
Print help for this command .
Print examples to stdout .
Update the configuration with the given dictionary .
Initialize a subcommand .
Flatten flags into a nested structure .
Parse command line arguments .
Load configuration from a file .
Generate config file .
Downsample an array according to the k - th element of the array .
Format a list of dicts .
Write a message to stdout .
Called when the config has changed .
Get help string for cls .
Get the help string for a trait .
Clear an instance of the class .
Format the failure of a test .
print a crash handler for lite
Flush all pending events .
Start the channel manager .
Read from file - like object .
Read data from a file .
Split a string into a list of tokens .
Return a compressed version of a string
Add a function to the dictionary .
Return a list of all the documentation for this module .
Replace latex with LaTeX .
Set a default option
return html page
Create a task with the given callable .
Get task info by label
Get the function from the info dict
calculate the next run
Submit the task to run .
run the task
Run the simulation .
strain the given callable to run a task .
Run a callable once .
Find the URL for the security group .
bind kernel to ip
Create an interrupt event .
Wait for the process to finish .
Return a dict with keys matching name pattern and type pattern .
List all objects in a namespace matching pattern .
Check that the mutex option is in dict .
Render a figure if it is interactive .
Flushes all the currently active figures .
Send a figure to the backend .
Load an ipython extension
Unload an IPython extension
Generate n random ports .
Initialize the notebook .
Signal handler for SIGINT .
Wait for the user to exit .
Shut down all kernel instances .
Generate price options .
Replace all occurrences of a dictionary with the given dictionary .
Render a shell template .
Create a new zipfile in the current directory .
Fix prerequisites in context .
Return True if obj is mappable .
get a partition from seq
Run a file and return its output .
Run source code .
Download a file from FTP .
Helper function to reduce frequencies of frequencies to frequencies
Compute n - digit frequency freq from text file .
Read digits from a txt file .
Return frequency of given digits .
Return a string representation of two - digit frequencies .
Return frequency of given digits .
Plot two digit frequency series
Plot one digit frequency freq .
Same as debugx except for debugging .
Reverse the url .
Return True if prefix is private False otherwise .
Generate a script from a Python source .
Run a script .
Debug a python script
Return a dict of hashes from the hashroot
Compress the hashroot with the given hashroot .
Return a list of all keys matching glob .
Return True if the given record is allowed to deny .
Format an error into an error message .
Start an interactive shell
Returns a tuple of new CSV writers .
Prepare translations for the given languages .
Write po entries to po files .
Write a header to a file
Subscribe a user .
Initialize parser .
Run python module .
Run Python code from a Python file .
make a python code from a python file
Make a Python code from a Python file .
Converts an item matrix into an HTML table .
Set current value .
cancel completion
Select a row and column .
Update the list of items .
Get frequency of words in text .
Print the word frequency of each word .
Returns a string representation of the document .
Write the text to a file .
Validate that a pin is valid .
Send a shared PIN to a topics list .
Delete shared pin .
Send a user s pin to the device
Delete a user pin
Subscribe to a topic .
Returns a list of the current user s subscriptions .
Set the total count .
Context manager for executing a task .
Context manager for submonitor .
Update the progress of the current work .
Add a new submonitor for the given number of units .
Update the progress .
Make sure that the build location is correct .
Load configuration from a list of configuration files .
load config file
Load a flag from a configuration file .
Decode a list of strings to unicode .
Load configuration from argv .
Convert to a config string
Try to find a module .
Call a function on stop data
This method is called when the timer starts .
Notify stop callbacks
Interrupt the event loop .
Construct command line arguments .
Set self . start to start self .
Transfer file to remote
fetch a file
The number of configured engines .
start n threads
Run the actual job .
Return a default context dict .
Parse the job id and return the job id .
write the script to disk
Run the number of jobs in the batch .
Return the context menu for the given position .
Append a JPEG to the file .
append png to png
append svg
Add an image to the document .
Copy an image to the clipboard
Returns the image url
Insert an image into the buffer .
Insert SVG into buffer .
Prompts the user to save an image .
Called when the container has changed .
Initialize the environment .
Rewrite the input to the prompt .
Ask the user to exit .
Sets the next input .
Read config file .
Get a list of strings from a section .
Get a list of option values .
Check if environment variable is in environment variable .
Set attributes from keyword arguments .
Read configuration from a file .
set attribute from config file
Set the delimiter to match the delimiter
Split a line into a single string .
Return a list of words that match the given text .
Return a list of strings matching the attribute .
Called when the parser is called .
Returns a list of aliases that match the given text .
Return a list of strings matching the given text .
Handles completion of text .
Match one record .
Returns a list of strings matching the given dictionary .
Extract a subdict from a dict .
Return whether or not the current prompt is quiet .
Write the prompt to the terminal .
Write a format dict to stdout .
Log output to the console .
Raise an invalid operation exception if the operation is not freezed .
Convert a string to a mysql timestamp .
Called when an eventloop has changed .
Do one iteration .
Publish python code to pyin
Send an abort request .
Send clear request .
Convert topic to string
Send a shutdown message .
Run before the current context .
Remove the modules from the stack .
Return the absolute path to the given path .
Return a boolean indicating whether a file exists or not .
Return True if obj is a subclass of class type .
Return True if path is a package in the system .
Return the length of a string .
Transform a class to a given module .
Get system cpu times .
Returns the command line of the process .
Return a list of open files .
Get a list of process connections .
Check if a user has a given group
Resolve a module class .
Return the percentage of used used in usage .
Login to the user
return gdocs key
Ensure temp path exists .
Remove temporary files
Upload a file to gdoc .
Sync the local file
Download csv from gdocs
Upload the po file to gdoc .
Clear the contents of the temporary file .
Create a new qtconsole console
Check URL accessibility .
Check if a URL has the given content .
Use urllib2 to get response code .
Compare the content type of a URL .
Compare the response code of a URL .
Check if data is valid .
Clear the output .
Create a list of code unit definitions from a morf file .
Return the rootname of the file .
Open a source file and return its contents .
Return True if the file should be a Python file .
Returns the total number of seconds in seconds .
Get the result of the operation .
Wait for all messages to finish .
Get metadata from the server
Abort the transaction .
Returns the elapsed time of the client .
Wait for the process to complete .
Publish a notebook to ipython
Wait for output to be written .
Wait for all messages in the queue to complete .
Return the absolute path to a file .
Convert a list of strings to absolute paths .
Return the separator of a string .
Find python files in a directory .
Return the relative filename of filename .
Return canonical filename .
Get zip data from a zip file
Return True if fpath matches the given path .
Return True if fpath matches pattern .
Map aliases to their canonical filename .
start a kernel loop
Run the gtk kernel loop .
Enable the given gui interface .
Return the GoE angle as a string .
Center eigenvalue difference
get ensemble diffs
Initialize this step .
Try to load config file .
Write to file .
Erase the contents of the file .
Return a dictionary with the line names and their values .
Returns a dictionary with the name of the arc .
Write data to a pickle file .
Read a text file .
Get pickled data .
Read a file and return its lines and arcs .
Combine parallel data into a single line .
Add line data .
Add arc data .
Add a hash to the file .
Summarize the contents of the report .
Read a line of text and print it .
The mainloop .
Replace the history of a single cell with a single cell .
Read raw input .
Edit syntax error .
Prompt the user to exit .
Return the URL revision and revision .
Create a new frontend master widget
Initialize the colors for a widget .
Return information about the identity .
Convert a DataFrame to a numpy array .
Set the colors of the terminal .
Toggle the color scheme
Return a string representation of an error .
Return a formatted traceback of an exception .
Format a list of strings into a single string .
Get a string representation of an exception .
Set mode .
Convert fromlist to str if possible .
Add a line to the code .
Create a new section
get function name
Return a string representation of the expression
Render the template as a string .
Get a value from a value .
Render a template .
Return a dictionary of formatters default to the config .
Register a function for a given type .
Handle floating point precision .
Return a list of user config files .
Configure logging .
Configure the working directory .
Pretty - print a string using num - characters .
page a file
Get pager command .
Get start string
print a string to the terminal
Simple string formatting .
convert latex to png
convert o to png
Return True if any of the given objects can be printed .
str - > str
Add options to parser .
Validate a list of strings .
Validate a dictionary dict .
Run the ioloop loop .
Handle incoming identities .
Complete the server .
get object info
Shutdown the server .
Flush all queued messages .
Ask user for input
Start the sub - channels .
Stop all running processes .
Returns True if the command is running .
Load connection information from the connection file
Start the kernel on the local machine .
Shut down the kernel .
Kill the current kernel .
Interrupt the current process .
Send a signal to the kernel .
Return a bool indicating whether the connection is alive .
Get a shell channel .
Get a sub channel .
Hb channel .
bind kernel to ip engine
Write debug message to stderr .
Get list of extension classes .
Perform pre step .
Recursively walk the contents of an egg .
Scan a module and check if it exists .
Launch a new IP .
Save connection dict to file .
Load configuration from json file
Load secondary configuration
Enable autopx printing .
Disable autopx .
Execute a raw cell
Check if the current message is still running .
Run a task .
Removes a task from the server .
Patch an object if it doesn t exist .
Connect to the server .
Reject a connection .
Return a string representing the proxy .
Validate the object and post it .
delete the object
Ensure user is logged in .
Check the status of the module .
Returns a string representation of an editor .
Get the contents of the current clipboard .
Add a function to the chain .
Get a module s metadata
Configure this instance .
Import an object by name .
Try passwordless SSH .
Try a passwordless passwordless server .
Try passwordless paramiko .
Open a connection to a given socket
open a tunnel
Stop scheduling tasks .
Unwraps the engine instance and returns it .
Register engine .
Unregister an engine .
Handle an execute reply message .
Flush notifications from the socket .
Flush the messages from the socket .
Flush control replies to the socket .
Flush the ignored control replies to the server .
Flush all messages from the socket .
Run the loop every interval .
Stop the spin thread .
Flush the internal queue .
Send an apply request to a socket .
Return the history of the hub .
Send a query to the server .
Return opcode set for given names .
Return a byte parser for the text .
Return a set of lines that match a given regex .
Returns the first line of text
Returns the first line of the given list of lines .
Parse the source and return lines and excluded lines .
Returns a list of all arcs in the byte parser .
Return a list of parsed byte parsers .
Returns an iterator over the byte lines of the code .
Find the lines in the parser .
Return a string representation of the block stack .
Checks that the given chunk is valid .
Iterate over arcs in this instruction .
Return a list of all chunks in this parser .
Return a set of all arcs in this parser .
Start the cover instance
report coverage report
Determine if a file should be included in the cover .
Interpret a distribution name .
Open a file - like object with authentication .
Get the parent of an object .
The root topic .
Renders the given template using the given context .
Configure the plugin .
Format an error .
Split a string by num .
Convert nbformat to version .
Convert hex color to RGB
Get the background color for the given style .
Get a Qt font .
Handle the execute reply message .
Handle a history reply
Handle PyOut prompt .
Handle display data .
get started channels
Execute a file on the server .
Handle an error message .
Process the payload .
Set default style .
Runs the editor .
Make text in prompt .
Makes a continuation prompt from a prompt .
called when the style sheet has changed
Update syntax style .
Transform a dictionary into a string .
get virtual memory info
Get system cpu times .
get uids of current process
Get the gids of the process .
Get a list of process threads .
Return a list of open files for this process .
Return the SHA - 1 hash of a package .
Return information about the given package .
Returns the number of cpus allocated to darwin
Return the number of cpus for this platform .
Get next set of messages .
fetch one row
fetch many rows
return all rows
Connect to a peer
Convert JSON string to a notebook object .
Reads a string and converts it to a notebook object .
Reads a string or json file and converts it to JSON
Write the given format to the given format .
Write a buffer to a file - like object .
Convert globals to new metadata
Load the configuration from a dictionary .
Returns True if the given name matches the filter .
Determine whether the given class should be wanted .
Determine whether the given directory should be matched .
Determine if a file should be watched .
Returns a boolean indicating whether the given function matches the given function .
Return whether the given method matches the given method .
Determine whether the given module is wanted .
Return a list of lines from a file .
Run a list command .
Print a list of lines to stdout .
Execute a pdef command .
convert from from to currency
Convert currency to another currency
Calculate the return value for a given period .
Get the encoding of a stream .
Get the default encoding from stdin .
Write the full connection file
start heartbeat
Initialize a session .
Initialize stdout and stderr .
initialize the kernel
convert html to text
Convert Markdown to text .
Convert domain name to FQDN .
Add options to a parser .
Configure exclude dirs
Returns True if dirname is in exclude dirs
Return True if the given extension is linked to the given extension .
Calls the given functions and returns the result .
Calls the given functions in reverse order .
Add a function to the end of the list .
Wrapper around insert function .
Format usage as a string .
Write the pid file to the pid file .
Remove pid file
Get pid from file .
Construct a parser for a given magic function .
Get the real name of a function .
Highlight the current block .
Rehighlight the block .
Set the format for the current offset .
Copy text to clipboard
Execute a shell command
Callback called when prompt finishes .
Return True if tab pressed .
Return a context menu for paste .
Override Qt to allow keyboard keypress events .
Insert a continuation prompt into the cursor .
Handle complete reply
Handle execute reply messages .
Handle kernel death .
Handle object info reply
Handle a plain text message .
Handle stream messages .
Handle a shutdown reply .
Execute the script in the given path .
Interrupt the kernel .
Reset the context .
restart the kernel
Ask the current call tip
Mark the completion as complete
Handle an error message .
Check if the process is valid .
Called when the document is changed .
Add plugin .
Run the plugins and return the result .
Generate all registered plugins .
Execute the simple method and return the result .
Configure the plugin .
Load all registered plugins .
Load all plugins .
Convert latex to png
Convert latex to html
Check if this package exists .
Return a dict representation of the object .
The name of the process .
Get the percent of the CPU .
Returns the memory percentage .
Get a list of memory maps .
Return whether the container is running .
Suspend process .
Resume current process .
Kill the process .
Wait for the current process to complete .
Wire kernel kernel .
Returns True if identifier is shadowed in ip
Register a transformer .
Unregisters a transformer .
Register a checker .
Unregisters a checker .
Register a handler for a given name .
Unregisters a handler for the given name .
prefilter method for line info
Find handler by line info .
Apply the transformers to a line .
Prepend a line to the terminal .
Prefilter for prefilter lines .
Check if line is a valid IP address .
Check if the line is valid .
Check if the line is valid .
Check if the given line is valid .
Handle line info .
Replace aliases with whitespace .
Handle a single line of text .
Return formatted command .
Handle a single line .
Handle the given line .
Override Qt method to hide the widget .
Reimplement the hide timer .
Overrides paint method to paint a button on the event .
Return a string describing the call info .
Handle the cursor position changed .
Return a canonicalized version of path .
Return a string representation of the object
Return True if there is no global file in virtualenv
Calculate the frequency of each word in a scatter plot .
Get a list of available aliases .
Set an alias for a command .
Define an alias .
Validate an alias .
Call an alias on the given alias .
Transform an alias into a string .
Expand aliases .
Parse a help directive .
Reset all settings to default values .
Get a color from the GUI .
Get a QText format
Generate a JWT token .
Removes all expired JWT entries
Test to see if a token is already used .
Check token validity .
Find the common prefix of a list of paths .
Get hint size .
Check if the text can cut .
Return whether or not the text can paste .
Clear the control buffer .
Cuts the current selection .
Get input buffer
Update the input buffer .
Set text font .
Print this control .
Prompt to the top cursor .
Reset the font .
Insert text before cursor .
Append html to text .
Add HTML content to the editor .
Add plain text to the buffer .
Clear the temporary buffer .
Completes the given items .
Fills the content of the control buffer .
Check if a control key is pressed .
Create qt controls .
Creates a qt control for this widget .
Filter the page keypress .
Convert a block to plain text
Get end cursor position
Get column number .
Get line cursor
Get prompt cursor .
Get selection cursor
Insert a continuation prompt into the command line .
Insert HTML into cursor .
insert html into cursor
Insert plain text into the cursor .
Keep cursor in buffer .
Close keyboard quit .
Updates the display with the given text .
called when the prompt started
Read a line from the console .
Set the continuation prompt
Set horizontal cursor .
Adjust scrollbars .
Extract metadata from command line .
Copies a config file to the ipython notebook location .
Create a profile directory by name .
Find profile directory by name .
Read the contents of a file .
Create a temporary file and write it to a temp file .
Close the file .
Write data to the file .
Add a new heartbeat handler .
Add a failure handler .
Handle pong data .
Split a sequence into a list of integers .
Split a path into a filename and filename .
Prints the progress of all events .
Generate time unit string .
Extract config from distinst config file
Uncaches a zip directory .
Turn a string into a single string .
Check if any of the dependencies in the distribution are in the same directory .
Set fetcher options
create home directory if not exists
Return True if name is an archive file extension .
Create a new heading cell
Create a new notebook node
Create a new notebook node .
Return True if path is a writable directory .
Unquote a filename .
Convert a filename to a python filename .
Get the xdg directory .
Get IPython directory .
Get IPython package directory .
Get the path to an ipython module
Return the number of outdated dependencies
Return md5 hash of a file
check for old config files
Update suggestions dictionary for a given object .
get suggestions for given object
Get suggestions for given object .
Returns the relative path to this file .
Return a list of paths matching the given pattern .
Calculate the md5 hash of the file .
Start profiling .
Write profiler stats to given stream .
Finalize the profiler .
Disable the window wx .
Disable Qt4 in event loop
Enable gtk .
Enable or disable a tkinter .
Enable pyglet integration .
wave saver .
Initialize the database
execute sql query
Get session info .
Get the last n rows .
Get a range from a string
Get the name of the hist file
Name session .
Reset the state of the session .
Get a list of strings representing a range of values .
Store the output of the given line number .
Write the cache to a file .
stop the queue
Get the number of cpus .
get system per cpu times
Get disk partitions .
Get a list of PIDs .
Return a nice string representation of a pair .
format a list of statements into a string
Return a short representation of the stack .
Join a list of regexes
Mark file as gone .
Update the MD5 hash of an object .
Update the current profiles
stop the cluster
Search for a command .
Read the system body .
Find code units that match the given files .
Run report fn on each file .
Set the traceback to stdout .
Initialize the extensions
Initialize the module .
run exec lines
Run startup files
Execute the specified exec files .
Run a command line .
Runs the module to run .
Get the filename of a static file .
Returns the contents of a file .
Escape all strings in t .
Report the coverage report .
Make static report files
Write html to file .
Calculate the hash of a file .
index html file
Read coverage information from a directory .
Write the coverage report to a directory .
Compare two lists of strings .
Get a string representation of a sequence .
Chops a sequence into chunks of size .
Read and parse the manifest file .
Convert a glob to a regular expression .
Return True if filename matches any of the given patterns .
Get versioned files .
Start a kernel .
Shutdown a kernel .
Kill a kernel .
Get kernel by kernel id
Get the kernel ports for a kernel .
Returns the notebook id associated with the given kernel id .
Start a kernel for the given notebook .
Shut down a kernel .
Interrupt kernel .
restart a kernel
create iopub stream
create a shell stream
create a hb stream
Remove all properties from the instance
Export an XHTML string to a file .
Convert html to str
Get a unique or None .
Build a query from a list of tokens .
get a query string from a query string
Get a date greater than the given date field .
Get a date less than the given date field .
Get a query string for a given field .
Change fields in a dictionary
Add options to parser .
Validate the attribs of this class .
Return True if the given method should be considered to be wanted .
Rotate the ring .
Get the websocket URL .
Reserialize a reply message .
Add a cookie to the request .
Starts the hb stream if not already closed .
Stop the heartbeat .
open the file - like object
Get the index of a block .
Seek to a specific block .
Edit the editor .
Print the block to stdout .
Print the contents of the image .
Run a function on a sequence .
Get a string representation of a traceback .
Return a list of lines that are inspectable .
Format a countdown .
Kill all engines and kill them .
Wrapper for save_ids .
Synchronously update the client s status .
Runs the function after the given function .
Return a list of messages .
Get a message from the queue .
Parse a URL into a dictionary .
get list of python modules
Get a list of modules from a line of text .
Return a list of strings representing directories in the shell .
Return a string representation of an attribute .
Configure the plugin .
Writes the stats to the given stream .
Add an error to the list .
Add a failure to the log .
Record a test result .
Return the number of bytes in a sequence .
Generate a random number from a string .
Register an engine with the given uid .
Unregister an engine .
Handle all pending tasks
Audits the timeouts of the task .
Fail an unreachable dependency .
Save a job as unmet .
Submit a job .
Dispatch a raw message .
Handle a result .
Handle an unmet dependency .
Updates the graph for the given depid .
Get the current state of the log .
log a line to stdout
Write a string to the log file .
Stop logging .
Create a new notebook node .
Add a string to the command chain .
Add a regular expression to the list of regexs .
Return a generator that matches a key .
Yield matches for a key .
Called when a notebook directory has changed .
Returns a list of notebook IDs .
Return a new notebook id .
Delete a notebook id
Returns True if notebook exists False otherwise .
Find path by notebook id
Get path by name
Get metadata about a notebook .
Get the metadata for a notebook
Save a new notebook
Save notebook to server
Save notebook object to file .
Delete notebook id
Create a new notebook .
Create a notebook object and save it to disk
Split a list of tokens into tokens .
Load the default configuration file .
Return a list of default classes for the class .
Parse command line arguments .
Initialize the plugin .
Init the shell
Initialize the banner .
Return a human readable string representation of an object .
Parse a notification name .
Returns a dict of traits that are traits of the given class .
Get the metadata for a trait
Validate value .
Return the default value for this field .
Return True if completed successfully .
Returns whether this list is unreachable .
Return the dependency as a dict .
Find the number of nodes in a tree .
Pretty print a tree .
Disambiguate a URL .
Apply function f to each element and return the result .
Validate targets .
Dispatch incoming IRC monitor traffic .
Dispatch a query .
Handle a new heart .
Handle a heartbeat failure
Save a task request .
Save an IOPub message .
Send a connection request
Unregister an engine .
Finish the registration process
Send a shutdown request .
Purge the pending results of a client .
extract data from a record
Get the history of a client .
Send a query to the server
Context manager for cd .
Decode a completed command .
Run command on r root .
Dispatch a message .
Check if a message is from the current session .
Write a list of morfs to file .
Get the installed version of the system .
Convert unicode objects to unicode .
Extract a header from a message .
Check formaters and unpack them .
Generate a message for a given type .
Create a signature for a message .
Send a message to a stream .
Receives a message from a socket .
Prompts the user to save an SVG file .
Writes an SVG to the clipboard
Convert a SVG string to an image .
Return dict of object info .
Get the docstring of an object .
Get the source code of an object .
Get the argument specification of an object .
Find the absolute file of an object .
Find the source line number of an object .
Return the argument definition of an object .
Get the head of the table
Prints a message to stdout .
Print the definition of a function .
Print source of an object .
print a file
Format a list of fields .
search for namespaces in namespace table
Wrap a reactor in a thread .
Return a string representation of the metadata .
Convert document to XML .
load all modules in a package
invert a dictionary into a dictionary
Convert an object to a primitive .
Return a list of figs .
Return a string representation of a matplotlib figure .
Select figure format .
Find and return gui and backend
Activate matplotlib .
configure an inline backend
Starts the trace .
Stops the current thread .
Start a tracer .
Start the installation trace function .
Start the collector .
Stop all collectors .
Pause all of the tracers and stop profiling .
Resume all tracers .
get the line data
Collect remote errors from a list of remote errors .
Renders the traceback of an exception .
start up coverage
Returns the canonical dir of a morf file .
Generate the filename for a file .
Determine if the given filename should be traced .
Determines if the given filename should be traced .
Write a warning message .
Check for Slackware packages .
Start the collector process .
Exit the script .
Returns the regex to use for the exclude
Saves the current session data
Combine data in parallel .
Collect python data from the collector .
Return the morf - formatted representation of a morf .
Perform analysis on the given iterator .
Produce a summary of the data .
Use this method to annotate the data .
Generate an XML report
Reload the file from disk
find a command
Run a command on the device .
Forward read events to a given fd .
Read lines from the socket .
find launcher class
Start the process .
Build a launcher instance .
Start the engine .
Start the controller .
Get an application object .
returns True if the app is in an event loop
start wx event loop
Get QT4 app .
Return True if the current app is in an event loop .
start an event loop
Return a blank canvas .
Draw a cross between the given position .
Draw a line between pos1 and pos2 .
Create an image from a grayscale image .
Generate a UUID .
get a cache key from get dict
Get the domain name from a URL .
get url arguments from url