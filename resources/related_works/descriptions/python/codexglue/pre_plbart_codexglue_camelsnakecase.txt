Convert an sina xml string to a url list
Download a dailymotion URL.
Download a video from a URL.
Pretty - print text with specified colors.
Print a log message to stderr.
Prints a message and exits with an optional exit code.
Print a message with red color indicating the exit code.
Detects the system os
Gets the ckplayer information by parsing the xml into a dictionary.
Load the m3u url and parse it into segments list
legitimize the text.
Download the content of a URL to the platform.
Match all instances of pattern in text
Attempt to parse a query parameter from a URL.
parse host and return hostname and port
Returns the title of the topic part of the json content
Download topic part by course.
Downloads the bokecc id by course topic part.
Returns True if task instance exists in queued tasks or if task instance is not in running.
Return the event buffer for the specified dag ids.
Returns a connection to the database.
Get AWS credentials
Returns the value of a field if it exists otherwise default.
Copy the sql to the given file.
Copies the contents of a table into a tmp file.
Upload this object to Google Cloud Storage.
Print the current state of a task in the dag.
Gets the connection to the API server.
Get instance object by instance name and project.
Create a new instance.
Delete instance and wait for operation to complete.
Create a new database for an instance.
Delete a database for an instance in a project.
Download sql proxy if needed.
Stop sql proxy
download sql proxy if needed return version of sql proxy command to run
Create a new connection to the database.
Retrieves a connection from the db
Delete a connection from the database
Return a cloud sql proxy runner for this project
Get the database hook
Cleans up the database hook log.
Reserve a free TCP port.
Normalizes a job id so that it matches the string s start and end of the job
Get the error code for the specified error.
Delete the runs in the database
Delete all the dag task instances
Set the paused state of a dag model in the database.
Prints the statistics of the task instance
Check the status of the scheduler to determine the number of task instances.
Create the path in the specified mode if it doesn t already exist.
Convert a string to float if possible.
Make a string aware of a given value.
Create a naive datetime from a datetime. datetime object.
Returns a datetime. datetime instance.
Get druid broker conn by id
Returns a requests. session. session object for the given connection id.
Calls the requests module and checks the status of the request.
Checks the response of the request and raises an exception.
Send a prepped request and check the response.
Create a session with the current settings.
Drop all data in the database.
Returns the pretty message of an exception.
Parse the SQL query and return the records as a list of strings.
Returns a pandas dataframe with the data from the database.
Runs the query and returns the result.
Insert rows into a table.
Return the cosmos client.
Determine if a collection already exists in the database
Create a collection in the database
Checks if a database exists
Create database if it doesn t already exist
Delete a database
Delete a collection
Insert one or more documents.
Delete a document by document id
Get document by document id
Returns a list of documents in the given database and collection.
Returns the function with the given name
Create a new function in the project at the specified location.
Update function in KE - chain.
Uploads the function zip file at the given location
Deletes the function with the given name
Get the statuses of the dependencies of this task
Returns True if this node is in the context of this dep and False otherwise.
Yields the reason for the failure of the dep in the specified session.
Parses an s3 config file.
Gets the credentials of the given region and returns frozen credentials.
Creates a new connection to the database and returns it.
Flush the buffer to the logger.
If archive is a zipfile or if it s a zipfile replace it with the filename
Constructs a task instance for this task instance.
Launches a new process and logs it to the log.
Terminate the child process.
Terminate the process if it is running.
Starts the dag for this process.
Starts the dag parsing loop.
Starts the dag parsing process in sync mode.
Function to refresh the dag directory
If the time since the last file was processed and the time since the last file was processed
Removes the import errors from the database.
Log file processing statistics.
Set the list of file paths to new file paths
Waits until all processors are done.
Terminate one or more child processes.
Connects to the remote host via SSH and sets up the keepalive policy.
Creates a new transfer job
Returns the status of a transfer job in this project.
Returns a list of transfer jobs that match the filter
Update an existing transfer job in the project.
Cancel a transfer operation.
Pauses a transfer operation.
Resumes a transfer operation.
Wait until a GCP transfer job is completed.
Finds a task instance in the database.
Returns the number of open slots in the pool
Runs a command and returns its output.
Allocate a set of ids for a given set of keys
Begin a transaction on the project. Returns the transaction ID.
Commits the commit request. Returns the response of the commit request.
Returns the value for the given keys in the project.
Rollback the transaction.
Run a query on the project and return the query string.
Get an operation by name
Delete an operation
poll operation until done
Returns the hostname of the given callable.
Returns the connection string to the API server.
Get a list of template fields.
Link to a template field.
Remove the database connection and set the engine to none.
Prepares the dags folder in the system path if it doesn t already exist.
Pull the celery result from the target task.
Returns the contents of the configuration. conf file.
Convert an object to a dict.
Yield successive n - sized chunks from a sequence of items.
Reduces the elements of an iterable in chunks.
chain up and down tasks.
Render the log filename
Build the connection string for this request.
Run a data operation in a thread and wait for it to finish.
Coerce string values to strings.
Handles the operator execution by logging the run page to the xcom log.
Runs a command with the given properties
Fetch the state of a celery task.
Returns the number of tasks per send process.
Returns the maximum number of tasks in the fetch process.
Return the connection string to the server.
Get a specific job by its ID
Wait until a job is done.
Create a version of a model
Set the default version of a model.
list versions of a project model
Delete a version of a model
create model in project
Get model by its name
Write the given items to the table
Integrates the given executors module with the given executors module.
Get the default executor.
Gets an executor by its name.
Log an error and raise an exception.
Return a connection to the database.
Trigger a dag by its id
Delete a dag by its id
Get information about a task.
Get one or more pools.
Create a pool.
Create or update a container in a container group.
Get the current state of a resource group and its exit code and its detail status
Get a list of messages associated with a named instance view.
Get the logs of a named resource in a container.
Delete a container group.
Check if a container exists in the specified resource group.
Constructs the query dict for the given static path and columns.
Push a new message to the Xcom service.
Returns a list of task instances in this dag.
Gets the task instance for this task instance.
Get the previous dagrun of this run.
Get the previous scheduled dag run.
Verifies the integrity of this task instance.
Make a request with the given request and return the response body and headers as a dict.
Converts a dictionary of environment variables to a mapping of name format to task instance id.
Trigger a dag run and print its payload.
Query the metric for a given query
Get the dag by its id
Kill a list of zombies
Given a dag and a parent dag bag it and all sub - dags.
Collects the status of the dags in the given folder.
Returns a dagbag report in a human - readable format.
Add a number of days to a string
Return a boolean indicating if this file is in the hdfs.
Return True if the file is in the directory and False if it is not in the directory
Clears all of the task instances in the given list of tis.
try number
Returns the current state of the task instance.
Overrides the default error method to merge the current state of the object with the one passed
Refresh the task instance from the database.
Clears the data for this task in the X com database.
Return the key associated with this exception.
Returns True if the task is dependents done.
Returns the next retry datetime for this task.
Return ready for retry.
Return the number of tasks in the pool associated with this task.
Gets the dag run for this node.
Set the execution date of this task to the specified value.
Initializes the context of this object.
Closes the upload if it exists. Returns the location of the upload if it exists.
Build the connection string and return it.
Start instance for specified instance in specified zone resource and zone.
Get instance template by id
Wait for an operation to complete.
Returns True if the bucket exists otherwise False.
Create a bucket or create a new one if it doesn t already exist
Check if a prefix is in a bucket.
Get a list of prefixes for a bucket.
List keys in a bucket.
Check if the given key is in the specified bucket or not.
Get a string value from an S3 object.
Read the contents of a string in a bucket.
Check if the specified wildcard key is valid for the specified bucket name and delimiter.
Get a bucket key by a wildcard key.
Query the registered hook for the latest query.
Convert a user - defined type to a user - defined type.
Get speech client
Execute the query in the specified Spark context.
Loads entry point plugins
Returns True if plugin obj is a valid plugin object and it is not in existing plugins.
Marks one or more tasks in the execution date for a run in the specified dag.
Get a file system client
Check if a file is in the cache or not.
Returns a list of files or directories in the specified path.
Execute the query
Uncompress a file. Returns the filename of the uncompressed file.
return the sql query
Builds the log for the given function name and namespace.
Creates a cgroup for the specified path.
Delete a cgroup from the tree at the specified path.
Calls the given API endpoint and returns the response.
Returns a connection to the instance
Query the database and return the query results.
Describe an object
Returns a list of the available fields for the given object.
Returns an object from the given fields using the given query. If the number of the query
Convert a column to a timestamp.
Get a mongo collection
Checks if a mail has an attachment with the given name. Returns the number of mail
Returns a list of attachments by a given name.
Return the filename and payload of the part as a string.
Send a batch of records to this Firehose instance
Gets the status of the dep in this task instance.
Send email.
Send an email using SMTP
Convert UTC to UTC.
Check if a blob exists in a container.
Check if a container has a matching prefix.
Create blob from string data.
Read the content of a file - like object.
Delete a file from a container.
Get the ftp connection.
Return the list of files in the directory given by path.
Store a file in the remote repository.
Returns the time of the file
Execute the bot instance.
Get a connection to the file service
Check if a file or directory exists in the share.
Check if a file exists in a share
Returns a list of directories and files from the specified share.
Create a new directory in the specified share.
Creates a file from the specified path in the specified share.
Create a file from a string.
Get the storage connection to the server.
Download an object from S3
Upload an object to S3
Check if a blob exists
Check if the object is updated after ts
Delete an object in the bucket
Get the size of a blob
Get the crc32c of a blob
Get the md5 hash of a blob
Determine if the current secondary training status has changed between num and previous job secondary training status
Print the secondary training status message.
Upload a file to S3 tar and upload it to bucket.
Configure s3 resources.
Check if a URL is in the S3 bucket.
Get client type with retries and number of times.
Execute the data flow
Run migrations offline
Run migrations online.
Delete instance by instance id and project id.
Delete a table.
Update a cluster.
Prepares the command to be run in the hive.
Prepares a hiveconf dictionary into a list of strings.
Check if a table exists in the database
Return a connection to the Hiveserver2 database.
Get the results of this query.
Returns the records in the table.
get results as pandas. dataframe
Returns a product search client
Get the endpoint of the http conn
Bind parameters to an operation.
Escape a string.
Cast string field to type str int float or other string field.
Validate that the value is of the expected type.
Returns a connection object for the given service and project.
Build the service for this request and return the response.
Check if a table exists in a dataset.
Cancel the running job if it is currently running. If the job is currently running and the
Delete a table from a dataset.
Insert or update a table in a dataset.
Get a dataset by its ID or project.
Executes the given operation with the given parameters.
Executes the given operation with the given seq of parameters.
Return the next page in the buffer or none if there are no pages in the buffer.
Returns the raw query from the postgres instance.
Make the remote directory and its intermediate directories.
Executes the given command with the given arguments.
If the configuration file is present then remove it from the user s configuration file.
Entry point for the command line interface.
Updates the htmlheader string to include all CSS and JS attributes.
Builds the javascript for the series
Create a new x axis
Create a new y axis
Returns a connection to the sqlite database.
Get the last dag run in the database.
Execute the message and log the result.
Generate a JSON response.
Open a file from a file - like object if it s a zipfile.
Return the cache key for a given request.
Returns the connection to the videoelligence service.
Returns the API key for the http conn id
Get a connection to the HTTP server.
Executes the request and returns the response.
Builds the opsgenie payload
Executes the transaction
Returns the client type if one exists else returns the client type if it doesn t.
Runs the given query in this instance and returns the query execution id.
Check the status of a query execution.
Check the query status of a query execution.
Get a connection to the SSH server.
Handle a rate limit exception.
Returns the value of a table in a database. Returns None if the table does not exist
Returns the location of a table in a database.
Get the current status of a cluster
Delete a cluster
Get cluster snapshots
Restore from cluster snapshot
Create cluster snapshot
Execute slack API call
Create a new job flow
Filter a list of strings of a certain size.
Return a list of extensions in result that match the ignored extensions
Execute the query in MongoDB
Get a pool by name
Create a pool or return an existing pool.
Delete a pool by name
Convert a Python dictionary to a proto object.
Waits for an operation to complete.
Get an operation for a project.
Appends a new label to the resource proto.
Return the webhook endpoint for the http conn id or the webhook endpoint for the http conn id
Builds the payload of the bot.
Run the webhook.
Encrypts the provided plaintext using the specified key.
Returns a text to speech client
Closes the upload if it exists. Returns the location of the upload if it doesn t
Returns the environment variables of the Docker configuration.
Return a list of worker secrets.
Get the security context.
Get the link to the hook for the given operator. dttm is a datetime. datetime
Launch the process.
Check if the process is done.
Exits the process if it is running.
Updates the import errors in the database.
Processes a list of task instances in the dag and adds them to the queue.
Get the concurrency maps for a given set of states.
Updates the state of one or more task instances in the database.
Enqueues the simple task instances in the workflow using the queued state.
Changes the state of the tasks that failed to execute.
Process the executor events for a simple dag bag
Updates the counters in the database
Manage the executor state.
Get a dag run by the given run date.
Get all the task instances in a DAG run.
Set the state of the dag runs that are not finished.
Synchronously refresh the database of the task instance.
Returns the client associated with the given project id.
Get instance by instance id
Delete an instance in a project.
Delete a database instance
Check if the given attachment exists in the mail folder.
Prepare the additional parameters for the detection.
Get the connection to the database.
Determine if a table exists in the cluster.
Determine if a record with the given keys exists in the given table.
Builds the driver status command
Submit a Spark application.
Process a spark submit log line
Process spark status log
Returns the cgroup task runner associated with the local task job.
Waits until the job is finished.
query mysql and return cursor
Configures the CSV file with the given schema.
Writes the given schema to the local schema file.
Returns col type dict
Return the string representation of the given mysql type for the given field type.
Returns the extra data as a JSON object.
Scale time seconds arr with the given unit
Return the number of days since the current time.
Initialize a role by adding it to the database if it doesn t already exist
Delete a role from the database
Get user roles.
Get all user s permissions views.
Does this user have a role?
Checks if the given permission exists in the cache. Returns True if the permission is found
Deletes all permissions from the view
Merge permission name and view menu name
Update the admin s permissions view
Merge permission vm for all dag vm
Get the fernet from the config or from the global fernet
Return the partition check for this partition.
poke the messages from the queue
Get a hdfs connection by it s id.
Get a client by its id
Checks the status of the hdfs for the given path.
Get pinot broker conn
Returns the uri of the connection
Convert a date object to a dictionary.
Convert time to dict.
Get a redis connection
Executes SQL SQL and returns a pandas dataframe
Execute the given SQL string or SQL query and optionally optionally optionally optionally optionally optionally commit the query
Set the connection s description and set the debug level.
Returns the string representation of the cell.
Check the latest scheduler health.
Get a connection from self. cloudant
Execute the hook
Returns a Google credentials object.
Returns an authorized http object for the request.
Returns the list of unfinished tasks.
Prepare command to execute
Normalize a tensor by mean and std.
Crop an image
Flip the left and right of an image.
Transform an image s origin to the origin at startpoints and endpoints.
Flip the top bottom of an image.
adjusts the brightness of an image by a factor
adjusts the contrast of an image by a factor
adjusts the saturation of an image
Converts an image to lowercase if num output channels == num. Converts a numpy image
Save an image to a pil file.
Find all classes in a directory.
Reads info file and returns a torch. long tensor.
Reads matches files in the data dir and returns the long tensor of the matches in the
Computes accuracy.
Download a given URL to a specified file.
Return a list of all the directories in the directory root.
Return a list of all files in the directory root with the specified suffix.
Download a file from google drive
Get random parameters.
Get a random set of startpoints endpoints and endpoints for the given distortion.
Get params of an image according to a ratio.
Get a transform to apply to the given parameters.
Get parameters for random angle translations and shears.
Download the tar. tar. gz or tar. tar. gz file.
Downloads and saves the model.
Returns the current theme name.
Returns the list of themes in the given path.
Returns the response as a list of strings
Convenience function to re interpret the normal normal function.
return the log probability of the mean and standard deviation of the joint log probability.
Builds a random variable.
Max mask non finite.
The size of an event.
Evaluate the function for all one - hot features in the given distribution.
Convert identifier to tensor function.
The size of the parameters of num components.
Builds an input pipeline.
Check that the map values are valid.
Call the function with the given arguments.
Call the given function with the given arguments and return the result.
broadcast from one structure to another.
Build a LefROg step from the given potential function.
metropolis hastings step.
Instantiate a layer from a tfp layers config dictionary.
Converts x into a tensor with the given name and type.
Expand to the event rank.
Computes the cat probs of the network.
Ensures that tensorflow is installed.
Computes the logistic regression of features.
Covertype of features and labels.
Make a positive axis.
Return squeeze along specified axis.
Returns z - component of x.
Inverse of z.
Create a transition matrix for sempkal linear trend.
Adds a transition noise to a multivariate normal with a scale of 1. 0.
Return True if num is less than n.
machine eps for a given dtype.
Bisection between value and function.
Converts a list of values to a string and prints it through tf. compat. v
Check if the given parameter is a quadrature parameter.
Interpolate at specified location.
Interpolate between num times.
Concat vectors.
Computes the log vector matrix.
Computes the log matrix vector.
Computes the vector matrix.
Extract log probabilities from a distribution.
Chooses a random direction from the current state part to the specified batch rank.
Call a function with list of arguments and return the result of the function if result is None
Builds the posterior of the given parameter.
Computes the moments of the given masked time series tensor.
Calculate the initial value of a masked time series tensor.
mixture of the posterior Draws of the given means with the given variances.
Returns the range of the range corresponding to the given name.
Resolve distribution names.
Build a new distribution function from a given model.
Return the entropy of the distribution.
Create an image summary for a set of sequences.
Visualize the reconstructed image.
Visualize qualitative analysis.
Summarize the distribution params.
Summarize the mean value of the input tensor.
Remove the log - normal matrix from the given inputs.
Returns the zero state.
Reshapes inputs to the specified image shape.
Sample from the prior distribution.
The shape of the batch of the parameters.
The shape of the batch of the parameters.
Calculate vector size to square matrix size.
Return the indices of the values along the given axis.
Sort an array along a given axis.
Calculate the n - th entry of x.
Log ndtr asymptotic series.
Inverse of the inverse of x.
Log - probability joint for text messages.
Checks if the marginal is univariate.
get index points if index points is not none else self. index points if index points is
Computes the outer squared difference between x and y.
Calls f and returns the value and the batch jacobian of the function at x.
Split the covariance into marginals based on the block sizes.
Returns a textual representation of a tensor s numpy.
Returns the shape of the sample.
Returns the shape of the sample.
Returns the value of the distribution.
Returns the value as a numpy array.
uniform unit norm.
Computes the log normalization.
Computes the common dtype for all args list.
broadcasts a tensor to the target tensors.
PDF of the peak at the given peak.
Calculate the effective sample size for a single state.
Compute the potential scale reduction for a single state.
Returns the size of x along the given axis.
broadcast maybelist arg.
Return a new mapping where x and y values are removed.
Merge old into new.
Return a deep tuple of x.
Get the inputs of a function given a dictionary of src kwargs.
vggconv block.
Returns the sum of the dot product of two states that have no u turn.
Calculates and returns the next state and target log prob given a value and gradients function
Log - Jacobian of the current target.
Creates a random tensor with the given probs.
Convert a nested structure to tensor.
Get tensor like attributes.
Make mixture prior distribution.
Pack images into a single image.
Downloads the given file to the specified directory if it doesn t already exist.
Call a volatility function and broadcast the results if needed.
maybe broadcast the volatility parts to the state parts.
Reshapes the output of the function with the same shape as x.
Call the function and reshape the output.
Computes the kth marginal value.
Sample the distributions of the root distribution and return a new dataset and a new array of values
Get the topics strings.
Add control dependencies.
Save a 2D array of arbitrary size to a figure.
Convert a tf. dtype object into a numpy dtype.
Convert a tf. dtype. base dtype to a string if the dtype is a string.
Test if a dtype is a string.
Return True if dtype is complex False otherwise.
Returns the maximum value of a given dtype.
Returns the string name of the given dtype.
Returns the size in bytes of a given dtype.
assert that all items have the same base type.
Return a string function that replaces the given objective function with the given one.
Expands the expansion of an objective function.
Shrink an objective function to the best vertex
Replace the value at the specified index with replacement.
Prepare the arguments to pass to the objective function with initial simplex.
Prepare the arguments for the objective function with initial vertex.
Build fake data for MNIST dataset.
Get the configuration of the module.
Instantiate from config.
Computes the matrix dot product of two matrices.
Compute the standard deviation of a statistic.
pick scalar condition.
Log probability for one fiber.
Calculate the finish prob for one fiber.
rotation of x if self. needs rotation is not none and needs rotation const is not none
Validate a normalization layer.
Create a dictionary mapping from parameter names to slices.
Apply a single step of dist.
Apply a single step function to a sequence of slices.
Returns the number of columns in x.
Get static predicate.
Function to compute the rank of a tensor given a shape.
Return True if scale is diagonal scale
Pad mixture dimensions.
embed check that the value is non negative integer.
Try to get static value of x except type error. If x is none or dtype is
Returns true if dt is known unsigned by dtype.
Returns the bool value of the given dtype if it is known signed by the given dtype.
Returns the largest integer by dtype.
Returns the smallest integer of a given dtype.
Test if dt is an integer like by dtype.
Generate a new seed
Returns the dimension size of the input along the given axis.
Check that the rightmost transposed ndims is valid.
Check that the given perm is valid.
Concatenate static perm to shape.
Returns a list of dims of x.
Build a backward pass step for a state given a transition matrix.
The Kalman transition model
Propagate mean to dist.
Propagate a linop onto a collection of distributions.
Calculate the joint mean.
Computes the joint covariances of the latent space.
Convert latent means and latent covariance to observations.
Log normalization term for the log nsphere surface area.
The mode of the tensor.
Rotate a tensor by the given number of samples.
Sample n samples from a 3d distribution.
Creates a copy of a function.
Remove all keys in a dict that have a value.
Recursively replace dict for pretty dict.
Get n random samples from a distribution.
Check if a string is a namedtuple like object.
Choose base case.
Call a function and check the return value of the function with the result of the function.
Raise an error if the shape is not valid.
Determine whether at least one converged or failed.
Update the position of an object.
Check if an objective converged between current position and next position.
broadcasts value to target.
Computes the harmonic number of x.
Get a field from the kernel results.
Computes the variance scale term.
Like tf. where with cond. tval as tval and fval as fval
Checks that val 1 is finite and that val 2 is finite.
Return the kernel kernel results for the given init state.
Resnet block.
deep exponential family.
Init parameters.
Determine the distance between two types of objects a and b in a hierarchy.
Reads an image from a file and returns it as a float32.
Download and extract the images from the data and put them into the data directory.
Create a character from two tensors.
Create a sequence of frames for the given action.
Create a random sequence.
Flatten a list of kernels.
Flatten a list of kernels.
Build fake data.
Insert a new axis into x and keep the new axis.
Make static axis of a distribution.
Sort a tensor by its top k value.
Raises value error if the number of dimensions is less than or equal to x.
Batch gather with broadcasting.
broadcast event and samples.
Return the control inputs for the given Hessian.
Transpose the elements of a matrix while preserving the order of the elements.
Computes the sum of the right most ndims preserving the shape of x.
Return common dtype for all values in arg list.
Compute the initial state of a function given a value and gradients function and an initial position.
PSD masking with eigenvalues < num.
Get the initial args of an objective function.
Find the best value in a population of values.
Check whether the value range is converged or not.
Ensures a tensor is a list of lists and a tuple of lists.
Returns a tensor with the given tol.
Builds an input pipeline for training.
Plot the generated images.
Convert a list of productions to a string.
Call the function.
Call the encoder function on inputs.
Integrate along the hat integral of x.
Computes the hat integral inverse of x.
LU - Solve linear equation.
Concatenates the matrix of sp a into a sparse block matrix.
Check if matrix a is a matrix.
Generate n blocks of slices.
Create a mask from blocks.
Create a random order of the input.
Create masks from list of degrees.
dummy mvndiag with a covariance matrix.
Convert scale variance and local scales to weights.
Build a new dist function for the given model.
Builds a seasonal transition matrix.
Build a seasonal transition noise matrix.
Build a seasonal transition noise for a single time series.
Validate the observation data.
Add this object to the scheduler
Set the checkpoint to the specified path. If the checkpoint does not exist it will be created
call big dl func to set clip const
Call the optimize function on the model.
Call big dl func to set train summary
Call big dl function and set value summary.
call bigdl func to set traindata
download and return the texts of the news20 file in the specified directory
download and load a glove w2v file
Calls the function that is passed to optimizer. loss can be either a single string or
Evaluate the model.
Predict the class label for x.
get mnist dataset
Preprocess mnist dataset.
Get the end trigger of the options. end trigger num.
Validate an optimizer on the test data.
Returns the value of the field as a string.
Call a big dl function
Convert a Spark RDD into an RDD of Python objects.
Convert Python object to Spark object.
Get activation by its name and id.
Get the label of this parameter.
Read a distributed image frame
Writes a string to a file.
Get an image from the image frame.
call big dl func to get image
Get label of a tensor
call big dl func return predict return ndarray
Predict the class of x.
Transforms this parameter to another data set.
Save a keras model to a json file.
build keras model
Predict class distributed by data.
Call big dl func and return list of ndarrays if tensor weights is not None else return
Calls the training function.
Loads a model from a file.
Loads a keras model from a json file or hdf5 file.
Class method to return a new criterion with a given value and a bigdl type.
Load weights from a json file.
Loads and pads the data into train test and test sequences.
build keras model
Call big dl func to get shape of input
Call big dl func to get the shape of this parameter.
Reads data sets at the specified location and returns the specified x y and the number of
Reads the data sets in the data dir and writes it to the file named by data
Returns the full path of the bigdl jar file.
Checks if the current Spark version is below 2. 2. 0
Export a checkpoint to a file.
Calls the big dl func to convert the input tensors to a numpy array and save it
Returns an array with the same shape as the input array but with the specified number of times
Simple attention layer.
Apply attention to the inputs.
Get the log file from the agent s log dir.
Log a new utterance to the log file.
Computes the gradient updates of the variables and updates norm of the variables.
Read data by config.
Interact with a session.
Convert labels to one - hot format.
Convert labels to one - hot labels.
Return a string representing the tf. session configuration.
Loads the network from the given load file.
Returns the momentum variable of the optimizer
Updates the learning rate and momentum of the graph variables.
Calculate the round f1 macro.
Process a word.
Dropout with a variational layer.
Builds the network.
Builds a basic network from the word outputs.
Train the model on a batch of data and labels.
Predict on a batch of data.
Converts a list of words into a vector of words.
Convert tags to a vector
BLEU advanced features of a sentence.
Check if the given URL is a valid URL.
Extract X509 certificates from text.
Verifies a signature.
Verifies the certificate chain URL.
Return the json representation of the controls.
Computes the bot framework of the controls.
Return a list of Telegram controls.
Return the alexa of all the controls.
Computes accuracy.
Round accuracy.
Reads the given data path and returns it as a dictionary.
Creates a default bot agent.
Convert one - hot encoded array x to one - hot encoded one - hot encoded array k
Takes a list of tuples and returns a dict of the values of each tuple in the
Loads the model from the checkpoint if it exists.
Saves the model to the specified path.
Compute a single train op based on loss and learning rate.
Returns a list of strings that match the given word in the dictionary d.
Start timer for this instance.
Handle a request and return the response.
Runs the agent in the given utterance and returns the response.
Generate a response from the response template.
Handles the given intent request and generate the response.
Launch request and generate response.
Handle unsupported request.
Pretty - print the object as a string.
Convert an elmo loss toppl.
Build a model from a configuration.
Build a model and interact with it.
Predict on a stream.
Reads a file and returns a list of tuples where each tuple is a list of the
Import function from string.
Get a metric function by its name.
Convert a label to an int.
Get the value of the best value in a list of values.
Encode a list of tokens into a word vector.
Read a requirements file.
Log - loss function.
Returns a string representation of the item data.
Build an agent from a configuration file.
Run the ms bot framework server.
Download a file from one URL to another.
Extracts a tar file at the specified path.
Recursively updates a dictionary.
Set the md5 hash of a URL path.
Set a query parameter in a URL.
Returns the alexa response
Return the JSON representation of this object.
Ms bot framework card action
Return the JSON representation of the control.
ms bot framework.
Computes the Squad v2 f1.
Computes the recall at k.
Check if the gpu is available.
Recursively parse a config property.
Parses the config from the environment variables found in the config file.
Expand the expanduser and expand the given path.
Run the request and put the response in the output queue.
Delete a conversation.
Refresh the existing certificates.
Verifies the request signature.
Handle a request and return the response.
Import class from its string name.
Returns the model class corresponding to the given name from the registry. Raises an error if
Get the glm for a given H2o model
Make a model object from a dictionary of coefficients.
Converts a list of key - value pairs into an instance of a Cloud v3 object
Sends a shutdown request to the H2O server and closes the connection.
Returns True if the server is running False otherwise.
Returns a list of the jobs in the table.
Return the list of timezones.
Fill this instance with the properties of another instance of this H2ocluster.
Runs the given test func in a loop retrying up to a certain number of times
Get the summary of a table.
Delete one or more frames.
Make a JSON request to the H2o API and return the result.
Validate the model parameters.
Compute model metrics
Delete a model by its key
Run the specified number of EC2 instances in the specified region.
Terminate the given instances
Stop the given instances
Start the given instances
Reboot one or more instances
Wait until we have ssh live
Get the full name of a function.
Get a string representation of a function s arguments.
Wrap text at num words in wrap at indent space
Wait for the job to finish and resolve the model.
Trains the model using the specified parameters.
Return a dict of the parameters of this object.
print a signal handler and terminate the running program
Delete the g output dir
Remove a sandbox from a directory
Scrap the port from stdout.
Scrap the cloud size from stdout.
Terminate the process if its pid is greater than num.
Stop one or more nodes.
Get the node s ip.
Returns the port of the node.
Determine the size of the pre - trained vector.
Calculate the mean absolute error.
Calculate the mean squared error.
Calculate the median absolute error.
Computes the mean and variance of the actual and predicted values.
Raise an AssertionError if var is of the expected type.
Raise an AssertionError if v matches the regex.
Raise an AssertionError if v satisfies cond.
Check if the var is of the given type.
Get a string representation of a type.
Check if the variable is a member of this collection.
Check if var is a string type.
Reads the configuration from the config file and returns the configuration as a string.
Read config from candidate log files.
Yields the candidate log files.
Store the current progress in the model.
recalculate model parameters
Estimate progress completion time.
guess next poll interval
compute progress at time t
return the time at progress of x target
Draws text to stdout.
Computes the total and total widget sizes.
get terminal size
Sets self. bar symbols and self. bar symbols
Fit the query to the specified DataFrame.
Force a refresh of the cache.
Return the type of the specified column.
Print a summary of the table. If the table is empty then print the content of the
Show the summary of the current frame.
Return the head of the DataFrame.
Return a new expression that is the mult product of the given matrix.
Return a list of all levels of the node.
Return the number of levels of the node.
Return a new expression node with the specified level.
Set the levels of the expression.
Return a new table with new column names.
Set the column names
Set a new name for the specified column.
Check if an item is in the list or tuple.
Return a new string node that represents the mean of the specified number of folds.
Return stratified kfold column.
Print the structure of the h2o.
Removes and returns the column at index i.
Concat the given frames into one or more frames.
Return a new expression that will bind to the given data.
Bind data to a new expression.
group by a certain value
Return a new o. expr with fillna.
Return a copy of the expression with the new string at the specified y position.
Inserts fraction of the missing values in the current frame.
Return a factor representation of the expression.
Split the string into rows based on the pattern.
Return a new expression node with the lstrip of the strings in the row or column.
Return the entropy of this string.
Return the number of words in the given path to the given words.
Create an astroid. Table node.
Return a new string node with the sub - expression replaced with the given pattern.
Return a new expr node that means the lower and upper case of the expression.
Return a new expr node with the missing rows removed.
Return the difference between the columns and the first column in the table.
Return a new expression node that means the expression itself and its type.
Return the minute of the expression.
Return a new expr node with the current value of this node if the value of the node
Apply a function to this node.
Parse a string of text into a code object.
Tokenize a file into a code.
Move the range from drow to dcol.
Unparse the token at the end of the token stream.
The list of cell values of the centers of the object.
Computes the standard deviations of the centers of the object.
Send a request to the h2oconn API
Check the version of the package
Import paths in a sub - package if pattern is not given.
Parse a setup as a string in raw format.
Make a deep copy of data and o.
Get a model by its id
Resolve a grid by its id
get frame by frame ID
Download a model to a file.
Downloads the given frame to a CSV file.
Prints a demos de novo demos.
Load a h2o dataset.
Compute the metrics from the predicted and actual frame.
Stores a file at the specified path. If the file already exists it will be overwritten
check frame id
Returns a human readable string of the given size.
Normalize a slice to a specified number of parts.
Return True if the slice is normalized.
Wait for the job to finish.
Return the deep features of each model in the collection of models.
Print model summary
Print the metric table.
Return the hyper parameter of the given id. If display is True print the list of hyper
Return a dictionary of the hyper parameters associated with the given id.
Returns the archetypes of the given test data.
Convenience function to plot the variances of a given type.
Translate a string into a lower case string.
Dedent the indenting of text.
main entry point.
Close the session.
Return the session id
Start logging to the specified destination.
Prepare data payload
Prepares a file payload.
Log start transaction.
Log the end of the transaction.
Write a message to the logging dest file.
Print the message if self. verbose else print the message if self. verbose == True.
Get an automl from a project.
Download a file from the H2O store.
Downloads the specified genmodel into the specified path.
Fit the model to the given x and y values.
Apply the transform to the given x and y.
Inverse of the transform.
Extract true string.
find a node name in the function list
find build timeout in each line
find a build failure
Finds a build id in the temp func list. Removes it from the list and
Extracts the string representation of a job build url
Grab the message from the text file and associate it with the current test.
save test information to pickle file
update summary file with passed tests and failed tests
write the content of a file
Writes a message to a text file.
Loads the list of error messages to ignore.
Normalizes an enum constant.
Finds synonyms of a word
Checks the status of the job and returns the result.
Write the object to a file.
Fit a frame to a H2O object.
Returns the default values for the parameters.
Returns a dict of the actual values of the parameters to be passed to the function.
Get deep features.
Returns a data frame of scoring history
Show the model in the future.
Calculate the variance of the cell
Returns a list of degrees of freedom.
Returns a dictionary with the coefficients of the model.
Downloads the given file into the given path.
Downloads the specified genmodel to the specified path.
Save model details
Checks the length of y actual and y predicted strings.
Return the cross validation models for the group of h2o models
Waits for the user to write a character to the terminal and returns the result.
Return the cell as a data frame.
Print the table to the screen.
Returns the path of the jar that is being used in this context. If path0 is
Yields the paths of the jar
Wrapper around csv. Dict writer.
Convert a path to a URI relative to this package.
Discovers and returns a list of module URIs in self. package.
Write the documentation of the module to a file.
Return the value of the cell as a list of integers.
Loads the given message file into the given dictionary. If the file already exists it is
Exclude global g new messages to exclude global g dict changed new message dict
Save the current state of the object to a pickle file.
Print a dictionary of messages to the console.
parse arguments
print usage of a g script
Locate all files in a directory
Find the cell magic in a file.
Locate the files in the specified directory and print the result.
Return a new expr node that represents the transform of the given data.
Summarize failed runs in the global g summary dict.
Extracts the intermittens from the summary dict and prints them to the console.
Uses matplotlib to plot the metric.
Returns whether or not the H2o dataset is available.
Trim the data back to the given month to keep.
Returns a dictionary mapping each endpoint to a list of endpoint.
Update site forward.
Returns the data in JSON format.
Return the comment of a user.
Gets the credentials from the secret file.
Like a user.
Like the given value if the value is not None return the given value otherwise return the value
Check if the user is not a bot
Read a list of strings from a file.
Add a schedule time to the message.
Determine whether or not this node is live.
Guess the service info from a given path.
Returns the URI for the given request.
Creates a new connection with the specified protocol and sets the proxy host and port.
Performs the given request.
Get authorization server.
Check if the URI is a valid request URI.
Get the cli profile
Calls the specified URL with the specified method and URL.
Set the timeout in seconds for this request.
Set request header.
Get all response headers.
Send the request to the window.
Returns the HTTP status of the request.
Get the status text of the http request.
Returns the response body as a string
Set client certificate
Perform an HTTP PUT request to the specified URL with the specified method and URI.
Sets the value of the request header named name to the given value.
Sends the given request body.
Returns the HTTPResponse object of the request.
Return the name of the id with the given prefix and skip.
Get the serialization name for the given element name.
Gets properties of an entry.
Get the children of a node from a path
Finds namespaces from child nodes.
Parse xml to namespace
Convert an xml string to a region object.
Return the namespace availability of the xml string.
Returns an object of the specified type from the xml string.
Update an existing kb. Update a kb.
Build a package from a pull request.
Replace word alterations.
Returns the storage account properties for a storage service.
Returns a list of storage account keys associated with a storage service.
regenerate the keys for a storage account
Delete a storage account.
Checks the availability of a storage account.
Get properties of a hosted service.
Delete a hosted service.
Delete a deployment for a given service and deployment name.
swap an deployment from one hosted service to another.
Update the current status of a deployment for a given service and deployment name
Walks an upgrade domain in the deployment using the given service name and deployment name.
Reboot a role instance.
Delete the specified role instances in the specified deployment.
Checks the availability of a hosted service.
Get a list of certificates for a service.
Retrieve a certificate from a service.
Add a certificate to a service.
Delete a service certificate.
Get the management certificate for this subscription.
Adds a management certificate to this subscription.
Delete management certificate.
Gets the properties of aff group.
Create aff group in this subscription.
Deletes aff group.
Get a list of subscription operations in this collection.
Delete a reserved ip address.
Associate a reserved ip address to a service and deployment.
disassociates a reserved ip address
Returns the reserved ip address for the named reserved ip address.
Get a role by its service name deployment name and role name.
Delete a role from a service and deployment.
Start a role for a service and deployment.
Starts the specified roles for the given service and deployment.
Restart a role in a service.
Adds a DNS server to the specified service and deployment with the specified name and address.
Update a DNS server in the specified service deployment with the specified name and address.
Delete a DNS server.
Returns a list of the versions of a resource extension.
Removes an existing replication from a vm image.
Shares a vm image with a given vm
Delete a VM image.
Returns the list of the virtual machine images
Delete an image.
Get the data disk of a service and deployment with the specified name and role with the specified
Delete a data disk
Update disk on the server.
Delete a disk. Returns the path of the deleted disk.
Build the receiver.
Create a shared access key from a connection string.
Returns a list of the subscriptions for the specified topic.
Parse the response of an asynchronous operation.
Perform HTTP GET request.
Perform an HTTP PUT request and return the response.
Get the current status of a request.
Update the management header of a request.
Builds a new package from the current environment.
Performs a get request to get the regions of the resource. Returns an empty string if
Returns a list of all available namespaces.
Gets a namespace by its name.
Creates a new namespace.
Delete a namespace.
Returns the namespace availability of the named namespace.
Returns a list of all the topics with the given name.
Returns a list of all notification hubs with the specified name.
Returns a list of all the relays of the specified name.
Gets the metrics rollup for a queue.
Get metrics rollups for a given topic
Get metrics rollups notification hub.
Get metrics rollup relay.
Create a new environment in the specified directory.
Create a virtualenv with a package inside.
Creates a SQL server with the specified admin login and admin password.
Set the admin password for a SQL server.
Returns a list of all quota resources associated with a server.
Delete a firewall rule.
Returns a list of firewall rules associated with a given server.
Returns a list of service level objectives associated with a given server.
Delete a database from a server.
Returns a list of databases with the specified name.
Get session state.
Set session state.
Validate and return the challenge from the input string.
Generic error handler function.
Creates a queue and returns a boolean value indicating whether the queue should be created or not.
Deletes a queue. Returns True if the queue exists False if it doesn t exist
Gets a queue by name and converts it to a queue object.
Creates a topic and returns a boolean value indicating whether the topic is created or not.
Gets the specified topic and converts it to a topic object.
Create a new rule for a topic and subscription
Gets the specified rule for the specified topic and subscription.
Returns a list of all feed rules for a given topic and subscription.
Creates a subscription
Gets a specific subscription by its topic and subscription name.
Fetches a list of all subscriptions for a given topic.
Sends a message to a topic.
Unlock the message associated with a subscription.
Sends a batch of messages to a queue.
Unlock a message in a queue.
Receive a message from a queue.
Receive a subscription message for the given topic and return it.
Creates an event hub
Updates the specified event hub.
Gets an event hub by its name and converts it to an event hub object.
Sends the specified event to the specified hub.
Update service bus header.
Returns authorization string for given request. host and request. path
Returns True if token is expired False otherwise.
Get a token for the given host and path.
Updates the URI of the given request.
Delete the message from the queue or subscription.
Unlock the message queue or subscription.
lock the queue or subscription
Adds properties and broker properties to the request headers.
Return the batch body of the batched message.
A general error handler.
Handle a redirect event.
Change the profile of this object.
Delete a queue in the service.
Deletes the specified topic.
Construct a shared access key from a connection string.
Returns the properties of the entity if it exists otherwise returns the properties of the object.
Return a boolean indicating if this lock has expired.
Process the results of a queue of results.
Task collection thread handler.
Build a config dictionary.
Create a custom message for the given response and service instance.
Convert an etree element to the corresponding PyBEL rule.
Convert an etree element to a queue element.
Convert an etree element to a topic
Convert an etree element to a subscription
parse enum results list
Get the properties of an element.
Returns a list of the queues in the service.
Returns a list of the topics in the service.
Get the site details for a webspace and website.
Delete a site from a webspace.
Update a website in a webspace.
Restart a webspace from a website.
Get historical usage metrics for a webspace and website.
Get metric definitions for a webspace and website.
Get the publish profile xml for a webspace and website name.
Get publish profile for a webspace and website name.
Create a new cloud service.
Check the name of a job collection
Get a single job collection by id
Cancel scheduled messages.
Re - send the reconnect message if there are unsent events
Get certificate from publish settings file.
Loads the client cookies from the cache.
Get terminal width
Get the prefix of a string of a given maximum length.
print to terminal inplace
Format a string of the given size with the given suffix.
Return elapsed time in string format.
Returns the status line of the terminal.
Print a status line to stderr if the terminal width of the iterator is greater than num.
Returns a generator of segment numbers.
Returns a generator of segment objects for this segment.
Block until a specified time is available.
Puts the current fetch into the specified segment.
Put the given value in the queue until the queue is full or the queue is full.
Returns a list of request parameters for a PV.
Extract the nonce from the http result.
Find the vpid of a URL.
Tries to parse and validate json data.
Parses an XML string
Parses data into a value according to the provided name and exception. Returns the value if
Search a dictionary by a given key.
Yields HTML tags and attributes that match the given tag.
Determine the json encoding of a given sample.
Parse the content of the response as JSON.
Parses the XML response.
Parses a list of key - value pairs into this request cookies.
Parse the response headers.
Parses the query params from the given cookies.
Format the message if necessary and encode it.
Make a new log record.
login email and password
Loads a support plugin for the specified module.
Update an existing query string from a URL.
Iterate chunks of the file - like object.
Yields requirements of the named argument.
Check file output.
Create player output.
bind an http server
Yields HTTP requests.
Makes an output of a plugin in a given stream. Returns a boolean indicating whether the
Open a stream and read the number of bytes.
Open the output stream for the given plugin and stream.
Reads data from the given stream and writes it to the given output stream.
Handle a single stream.
Fetch streams for a plugin.
Fetch one or more streams at a given interval retry count times and return one or more streams
Resolve a stream name to a stream name.
Prints the list of available plugins to the console.
Authenticate twitch oauth
Loads the specified plugins from the specified directories.
Setup http session
Loads all plugins in the specified plugins dir if extra plugin dir is specified.
Log the current versions of the socket.
Get the stream id from the input text.
Gets a string of text from the input if any. Otherwise returns a string of text
Returns the value of an option for the given key
Set plugin option.
Returns the value of the plugin option with the given key.
Resolve a URL using the registered plugins.
Loads all plugins in the specified package.
try to convert value into hours minutes seconds
find the player url in the response
Parse the given data using the specified parser.
Returns the name of the command that is supported by the current platform.
Extracts the stream id from the html string.
Extracts the stream info from the given HTML document.
Log into the login url with the given username and password. Returns True if successful False if
Applies a function to each element in the map.
Makes an API call to the API.
Starts a new session. Returns the session id.
Gets information about a media.
Create an API instance.
Format a single character as a string.
Read n bytes.
Get the value of the bitstring.
Get the explanation of this error.
Set the decode table.
Set the length of this switch to the given length table.
Reads a tuple of specified length from the specified stream.
Return the explanation of the value at the given index.
Returns the value of the interval.
Return the span of the bitstring corresponding to the given index.
Returns the value at the specified index with the specified extra.
Returns the mnemonic for the symbol at the given index.
Returns the mnemonic at the specified index.
Compiles the actions from the action table.
eval action function
Return the hex data at the given position in the stream.
Determine the length of the metablock.
Read gzip compressed string and print it to the output stream.
Count the number of block types and codes of a given kind.
Pop and insert a value into the mtf.
Read the prefix array.
Patch a hidden function.
Add a virtual columns proper motion2vperpendicular.
This is the main application for the application.
Opens many files.
Create a ~astropy. table. Table object from an astropy. table. Table
Create an astropy. table. Table object from an astropy. table. Table object
Convenience function to create an array from a sequence of scalar values.
Read a CSV file into a Series.
Return the server rest of a given URL.
Returns a string from the zeldovichiometric distribution.
Concatenates two sets of strings
Create a column virtual range
Opens the given file or creates a new one if it doesn t already exist.
Evaluate the given expression in this dataset.
Returns a set of all the depending columns in the given dataset
Sort the indices according to the given columns.
Block until the plot event is set
Open a document of os. system.
Write to a file or file - like object.
Split and combine mask arrays.
Calculate the median value approx to an expression.
Plot a widget for this dataset.
Plot a 3d volume
Evaluate an expression and return the result s dtype.
Returns the path to the private directory of the server.
Removes the virtual meta file for this object from the private directory.
Write the virtual metadata to a yaml file.
Write the metadata to a file.
Set the value of a variable in the configuration.
Evaluate a variable in the given namespace or return a string if the variable is not a string
Evaluate the selection mask of this block scope.
Return a dictionary representation of the table.
Return a copy of the current DataFrame with the specified column names and selection values.
Return an arrow table from this DataFrame.
Create an astropy. table. Table instance from this instance
Add a new column
Rename a column in the table.
Add virtual columns cartesian to polar coordinates.
Add virtual columns cartesian velocities to polar coordinates.
Adds the virtual columns polar velocities to the cartesian system.
Add virtual columns rotation
Add virtual columns from spherical to cartesian
Adds virtual columns cartesian to spherical coordinates.
Add a new virtual column
Delete the virtual column with the given name. emit the signal column changed.
Add a new variable to the model
Delete a variable from the model. emit the variable changed signal.
Returns the last n characters.
Displays the first n rows and the last n rows.
Cats self as table i1 i2 and prints it as table i1 i2
Set the current row to the specified value.
Trim values from the column names in the dataframe. If inplace is True then this is
Take a subset of the DataFrame with the given indices
Extract the first occurrence of a string in a list of strings.
Raise the signal selection changed in the current context.
Redo the current selection of the given name.
Returns True if the current selection can be executed.
Select a rectangle.
Return a new expression where x y and x and y are in the circle defined by x
Return a new selection of the given name.
Find a valid name for the table.
Return the graphviz representation of the graph.
Add a new column to the plot.
Encode one or more strings into one or more strings.
get the data as a string
Return the number of elements in the sequence.
Add column values from other to self.
Concatenates two data frames.
Add a column to the data frame.
Patch a data frame with a new function.
fillna on an array ar if ar is a string column or ar. to numpy if
get autotype of an array
Return a numpy. recarray of the number of records in the dictionary.
Write a set of properties to a file - like object.
Write a comment to a file handle.
Writes a property to a file handle.
Yield line - oriented universal newlines.
Shows the current version of the specified core dependencies and extra dependencies.
Rename a keyword argument.
Set the fftlib global variable if lib is none.
Reads in the provided file and prints the track to the console.
Adjust the tuning value of a given audio file.
Mel - Mel - Z toMel - Z toMel - Z to
Convert Mels to Hz
Compute the Fourier frequencies.
Calculate the Fourier transform basis and length of a basis.
Trim stack a cqt response array into a single array with the maximum number of bins
Computes the response of a complex Fourier transform.
Downsample the given number of octaves with a given filter.
downsample the given audio
Make a transition uniform
Set the current image
Checks if the axes argument is a string and raises an error if it is not.
Scale axes.
Compute the Fourier transform of a Fourier domain.
Adds a frequency domain element - wise to the basis functions.
Computes the frequency distribution of the cqt of a given number.
Create an array of n - length bins of chroma.
Generate a time from a sequence of frames.
Stretch time.
Reads in a file and prints the information about the beats
filter helper function
Get window bandwidth
fill the time series x with the window of length n frames and the time window of length
Compute the Jaccard distance between two integers.
Given a query and a list of intervals to match return the index of the query that overlaps
Match two time intervals.
Load an audio file.
Convert audio to mono.
Return a set of all files in the given directory with the given extensions
Stretch a DICOM from a DICOM file and write a wav file.
Process the command line arguments.
Dumps the specified harmonic and pertextive to the specified output file.
Computes the local score of all beats in an onset envelope.
Convenience function to convolve a signal with an event s envelope.
Computes the duration of thedtype of thedtype of thedtype of the track dp
Returns the maximum value of the cumulative score that is greater than the median of the cumulative score
Uses librosa to detect onset times
Return int if x is valid int otherwise raise parameter error.
Reads the current image from the vcap.
get frame by frame id
Write one or more frames to file.
track the progress of a function and print it to stdout.
Flip the image in the specified direction.
Rotate image by angle.
Clips a set of bboxes into a set of bounding boxes of a given shape.
Scale a list of bboxes to a specified number of dimensions.
impad a given image to a specific shape.
impad to multiple values.
Scale the size of a string.
Resize image by specified size.
Resize an image to a new dimension.
Register a new file handler.
Returns the value of the priority field
Helper function to dequantize an array.
Calls cv2. imshow with the given name and image input img. wait time is
dequantize the flow of an array
Load checkpoint from file.
weights to cpu
Save model checkpoint to file.
Initializes an optimizer object.
Initializes the logger and adds a file handler to the specified logger.
Returns the current optimizer parameter group of the optimizer.
Registers a new hook with the specified priority.
Run a workflow in a specified number of epochs.
Register hooks for training.
Cut video from in file to out file.
Concat video list into one video file.
Read a list of strings from a file.
Read a mapping from a file.
2x3 convolution.
read image from file if flag is str or np. ndarray then read image from file if
Decode image from byte string or numpy array.
Write image to file
Converts a color image to a color image with the background color of the background color.
Convert aray image to a color gra using the color gra bgr.
Cast inputs to type.
Check if a sequence is of a certain type.
Slice a list into parts of a given length.
Calculate the average of the values in the history.
Scat function.
Returns the value of color.
Check the time of a specific timer. Returns the number of seconds since the last check.
Start the timer.
Return the time since the start of the timer.
Return the elapsed time since the last check.
Show the flow in a window.
Make a color wheel.
Computes the accuracy of a model.
Create a scatter plot of the inputs and the kwargs.
Fetch the response from the API.
Return a JSON representation of the object.
Text representation of the message.
Handle aws callback.
Make multiple request to one or more urls.
Create a new HTTP request object.
Start all the workers in the request queue.
Normalize the result of an ansible task.
Returns the distribution name and version of the wheel.
Return the basename of the archive.
Add one or more requirements to the package metadata.
Create a new activity with text.
Create a suggested actions activity.
Create attachment activity.
Create an attachment layout.
Create attachment activity for content url.
Set the telemetry client for this bot.
Read a set of keys from the container.
Write the given changes dict to the given store item.
Delete a document by its list of keys.
Create an item from a result dict.
Create a dictionary from the given store item.
Sanitize the given key.
create db and container
Get or create a database.
Get or create a container.
fill qna event from query results
Returns a new conversation reference for the given activity.
Get the name of the step at the given index.
Returns True if the given channel id supports potential actions.
Check if a channel supports card actions.
Gets the channel id of the activity.
Returns a boolean if the auth header is a JSON - encoded JWT.
Create an attachment of a card.
Set the value of the control attribute of the classical register.
Make a copy of this object.
Returns string in QASF format.
Returns QASM code for the specified parameter.
Runs the circuit in the working list.
pass pass - pass pass the passed pass and return the new dag
Returns a list of passes in the working list.
Dump all passes of this object to a string.
Return the flow controller.
Add a base element to the end of the sequence.
Returns the parameters of a single - gate function.
Computes a single - gate matrix.
Converts a circuit to a dag representation.
Function to fit an exponential function to an array.
Computes the Osc fit function.
function to plot data with fit function
Calculate the shape of rb data.
function to plot data and survival probabilities
Compose u3 - u1 u2 u3 u1 u2 u2 u
Computes the out angles of a Z z z z z z z z z z
Validate input quantum state
Cleans the background of an image by removing the specified number of pixels from the image.
Return the span of the instruction in the form of a list of Gate objects.
Run the program for a given number of dag qubits.
Add one or more qubits to this circuit.
Determine the id of a node.
Process the gates for the given node.
Check if the children of node are not empty
Calculates the measure of the element in the file.
Process if node is empty.
Creates a new gate class based on the given name and parameters.
Return the duration of the given channel in seconds.
Return the start time of the given channel.
Return the stop time of the given channel.
Returns the instructions of this node and its children.
Dump additional data.
Load additional data.
Wrapper around schema. validate to raise model validation error.
Dumps the data into a dictionary. Raises model validation error.
Parses the given dictionary into a model instance.
Compute the Fourier transform of a 2D array.
Chop the real or imaginary part of an array.
Computes the outer dot product of two vectors.
Computes the concurrence of a given state.
Computes the Shannon entropy of a state
Calculate the mutual information of a state.
Return the entanglement of formation d0 and d1.
Convenience function for shannon entropy.
Flatten a schedule into a single schedule.
Shift a schedule by a given time.
Inserts a component into a schedule at a specific time.
Append a child component to the parent component.
u3 gate
Return the current status of the backend.
Starts the simulation for a given number of iterations.
Returns the time remaining in seconds between the current and completed iter.
Disassemble a Qobj into a list of circuits.
Return the hamming distance between two strings.
Create a quaternion from a rotation matrix.
Create a quaternion from an euler angles array.
Normalize the data in the quaternion.
Converts the vector to a 3x3 matrix.
Computes the angles between the z axis and the z axis.
Takes a data dictionary and returns a dict of the most common number to keep and the
Checks the type of the value and returns the root value if it is a collection.
Check if j is a valid range.
Check if a matrix is square.
Determines if a matrix is a diagonal matrix.
Determines if a matrix is a symmetric matrix.
Determines if a matrix is a iss iss iss iss iss iss iss iss iss iss iss
Determines if a matrix is positive semidefinite.
Determines if a matrix is identity matrix.
Determines if a matrix is unitary.
Computes the Choi index for the given dimension.
superop between the kraus operator and the Choi operator.
Computes the Kraus operator.
Computes the chi of a node.
Function to convert from str to int dim using from operator if rep == str.
Convert a string representation of a Kraus operator into a string representation of a Kra
Convert a string representation of a Kraus operator to a string representation of an operator.
Reimplemented from operator to chi.
Converts input dimension to output dimension.
Computes the superop of an array along the specified dimension.
Computes the super operator from input dim to output dim.
Converts kraus l and r into an image.
Computes the kraus of a matrix.
Computes the kraus of the stinesheader to the kraus of
Reshapes data from one set of vectors to one set of vectors.
Computes the stine pair of the kraus of the data.
Computes the superop of the kraus.
Transform from pauli to chi.
Convert an array of arbitrary number of qubits to a pauli transform.
Computes the Kron of mat1 and mat2 with shape1 and shape2
Return a transform from pauli - basis matrix.
Raise qiskit error if the input dimension does not match the output dimension.
hide tick lines and labels
Set the label convention for the plot.
Clear point representation.
Appends vectors to self. vectors if vectors is a list or np. ndarray.
Render the plot.
Plot the front of the sphere.
Renders the figure and shows it.
Return the top layer s top padding string.
Return the mid - formatted string of the layer.
bot of the layer as a string
Returns the length of the message.
Returns a list of string representations of the parameters of the instruction.
Return the label of the given instruction.
Return a LaTeX representation of the current node.
Add a deprecation filter to the given warnings. warnings. warnings. filter.
Return current hardware information.
Returns True if the host has a connection to the given port otherwise False.
Simple html checker.
Return the constant of the given times array.
Computes the square of the given times.
Computes the triangle of a complex number.
Computes the cos of the given number of times.
Computes the derivative of a gaussian
Generate a piecewise representation of the square of the given times matrix.
Default pass manager.
Default pass manager.
Determine if a register is present in the register list.
Return a copy of this instance with mirror data.
Return a copy of this instance with the same data.
Append an instruction to the parameter table.
Check input qubits. Raises qiskit error if the input qubits are different
Check if all arguments are valid
Check if all arguments in cargs are valid.
Check that all cregs in list1 match those of cregs in list2.
Returns theASM string for this instruction.
Returns the number of gates in the data.
Returns the total width of all cregs.
Counts the operations in the instruction.
Return a new circuit with parameters binded to the given value dict.
Bind the given parameter to the given value.
Map a set of gates to a set of free gates.
Calculate the distance between two sets of gates in a layout.
Return the score of the step.
Copies the circuit metadata from the source dag to the target dag.
Return a transform node for a given gate in a given layout.
Returns the swap ops for the given edge in the given layout.
Runs the graph in - place and returns the mapped dag.
Add a physical qubit node.
Add an edge between source and destination.
Return the subgraph of the given list of nodes.
Returns the list of physical qubits.
Return True if the graph is connected False otherwise.
Computes the distance matrix for each node in the network.
Compute distance between two physical qubit values.
Convenience function to add a pair of components at the end of the time series.
Returns the inverse instruction of the instruction at the given index.
Return the next qubital route if any of the instructions contain the same qubital
Return the string corresponding to the classical if any of the gates are True.
Subscribes a callback to an event.
Dispatch an event to all subscribers.
Remove a callback from the list of subscribers.
Publish an event to the broker.
Initializes a set of params and qubits.
Defines the circuit for the disental gates.
Computes the gates to uncompute the circuit.
Returns the Euch angles of a complex pair of complex objects.
Generate a multiplex circuit given a target gate and a list of angles.
Check if the value is virtual.
Make a copy of this layout
Combine this layout with another layout.
Add a gate to the gate.
Inserts a schedule at start time and returns the string representation of the schedule.
Raise an access error if fenced.
Given a list of gates and a list of qregs compute the indices of g
Run the mapper on the given dag.
Group elements according to a certain number of qubits.
Construct a label matrix from a label matrix.
Initialize from a boolean array z and x.
Compute the product of p1 and p2 in terms of the product of p1 and
Return the operator representation of the matrix.
Convert this circuit to an instruction.
Update self. z with new values.
Update self. x with x.
Append paulis and paulis to this element.
Delete qubits from a qubital
Generate a random qubit tensor.
Construct a pauli operator that is a single - qubit pauli operator.
Return the current measure outcome of a qubit
Add a sample measure to the classical memory.
Add a unitary measure of a qubit.
Add a unitary single qubit to the current qubit.
Check that the initial statevector has the required number of qubits.
Initializes the state vector.
Returns the state vector and its imaginary parts.
Checks if the experiment is allowed to measure the given number of times.
Run a single job.
Check if the configuration of this QObject is valid. Raises basic aer error if
Validate that the initial unitary is an array of qubits.
Initializes the unitary matrix.
Returns the unitary of the unitary i. e. the unitary of the unit
Run a job and return the result as a dict.
Validate the configuration of this QObject.
Return True if obj is a string and its length is a list.
Generate a graph layout based on the number of dag qubits.
Does this interval overlap the given interval?
Shift the interval by time.
Shift the timessubset at a given time.
Return the start time of the given channels.
Return the stop time of the given channels.
Return True if timeslots can be merged with other timeslots.
Return a collection of timeslots with the same interval and channel.
Shift the timeslots by the given time.
Report the issue to the given branch and commit.
Plot the state paulive c of a given state
Add azz between two qubit values.
Swap the c swap between two target strings
Create the program graph.
Returns the next edge in the pending program.
Select the best remaining cx in the list of candidates.
select the best remaining qubit from prog qubit
Return the instruction list.
Return the inverse state of the graph.
Return a copy of the str with only the q if any of the arguments are given.
Return the c if the value is classical.
Return True if the matrix is unitary.
element - wise conjugate operation.
Return the transpose of the matrix.
Return n times the power of the matrix.
Returns a tuple of the output and input dimensions of this node.
Convert a quantum circuit to an operator
Swap mapper layer update
Separate a bitstring into a list of creg sizes.
Format memory as a level 0 array.
Format memory as a level 1 memory array.
Format a level 2 memory list.
Format a counts dictionary into a human - readable string.
Format a vector of complex values with a specified number of basis.
Format a matrix of state vectors into a unitary matrix.
Submit the job to the executor.
Get the current status of the future.
Return whether this interval includes the given frequency.
Plot a multivector iplot
Substitute node with dag.
N choose k
Return the lex index of n in the list lst.
Get a list of unique hardware backends.
Returns the op value for the given string if it exists otherwise raises qiskit error.
sampled constant pulse.
Create a sampled zero pulse.
Generate a sampled square pulse.
Returns a sample pulse with the given duration amp and phase in the given phase.
Generate a triangle pulse.
Generate a cos pulse of the given duration with the given amplitude and phase.
Sample pulse with the sin function.
Generate a Gaussian sample pulse.
Calculate the derivative of a gaussian function.
Return a string representation of the node.
Return an instance of backend class.
Removes all ops named with the given name.
Adds a quantum register to the graph.
Adds creg to the graph.
Add a wire to the graph.
Check if the condition is met.
Returns all bits in the condition condition.
Add an operation node to the graph.
Applies the given operation to the subgraph.
Check that a wiremap is in the correct format.
Return a new condition based on the map of the values in the condition.
Compose this DAG back to the given edge map.
Check the size of the wires
Make the pred map and succ map for a node.
full pred map full pred map and succ map
Return topological nodes in graph.
Returns the edges of the multi - graph.
Get all nodes in multi graph that have a given op.
Return the list of nodes of the gate this node is associated with.
Returns the named nodes in the multi - graph with the given name.
return the two q gates of the gate nodes that have the same number of arguments.
Returns the predecessors of a node.
Returns the quantum predecessors of a node.
Returns list of ancestors of node.
Returns a list of the quantum successors of the given node.
Removes a node from the graph.
Remove ancestors of node
Remove descendants of node
Remove the ancestors of a node.
Remove all descendant nodes of this node.
Yields a new layer for each node in the graph in which each node is a
Yield the layers of the multigraph in which each node is a node in the
Yield nodes on a wire.
Counts the number of operations in the graph.
Returns a string summary of the properties of the tensor.
Convenience function to create a tomography basis.
P pauli meas gates
Computes the data associated with a given tomography.
projector op list into basis. Return the number of elements in op list.
Inverse of DKo linear function.
Computes the matrix of the element - wise eigenvalue decomposition of a rho matrix
Calculate the Wigner data.
Add a meas gate to the circuit.
A text checker that prints a message every interval seconds.
Checks the status of the given job. If interval is none monitor the output. Otherwise
Simplify a single u gate.
Run the circuit in the given dag.
Build a history of the build job history.
Concatenates a 3 - D gate into the current element.
Build a bell circuit.
Runs the given circuit in the given configuration tuple.
Returns the current drive.
Get the next control. If there is no next control in the list raise an error.
Returns the current measure of the node.
Get the next available acquire.
Return the input state of a qubit state.
Remove a logger from the global logger.
Plot the state hint on the given state
Parse the input string and store the result in self. data.
Pop the next line from the stack.
Push a new lexer into the stack.
Gets the bound method of the given instruction.
Convert a acquire instruction into a QObject.
Convert a frame change instruction to a QObject.
Convert a persistent value.
Convert a drive instruction to a QObject.
Convert a snapshot to a QObject.
Update the annotations of a discretized pulse function.
Convert a DAG to a circuit string.
Make a dictionary observable from a matrix observable.
Update the current symtab.
Verify the declared bit.
Recursively verify the list of children of an object.
Raises qAS error if obj is not a gate.
Make sure the object is valid for the given type.
Recursively verify a list of children of an object of a certain type.
Find the column number of the input string that contains the token
Parse the debug value.
Parses the given string data and returns a QASM instance.
Parses the given data and returns a string representation of it.
Parses the input file.
Adds a crZ gate to the end of the sequence.
basis state of a complex number.
Return the density matrix of the element of the element of the element of the element if flatten
Calculates the plastic plastic plastic plastic plast
Run the dependency graph through the dependency graph.
Collects the runs in the given dag and returns the DAG.
Returns the Qiskit backend by name or raises an error if no backend is found.
The shape of the bipartite.
Yield the bit labels of a register.
Truncate a float in a string
Returns a LaTeX representation of the contents of the image.
Computes the depth of the image.
Get the beamer page of the image.
Load a JSON schema from a file.
Load all schemas and validators from a file.
Return a random unitary matrix.
Generate a Ginibre matrix.
Return random density from the Ginibre matrix.
Generates a random density matrix from the Ginibre - Ginibre -
Return the list of calls of this node.
Calculate the power of the matrix n with respect to the output dimension.
Compose this subsystem onto another subsystem.
Convert a quantum circuit to a superoperator
Applies the operation to all nodes in the given dag.
Substitute a node with another node in the graph.
Defines the definition of the gate at num qubits.
Checks the type of the value and raises validation errors if the value is not a collection
Checks the type of the value and raises validation errors if validation fails.
Set the atol of the class.
Set the class accuracy.
Reshapes the input and output dimensions.
Returns the input dimensions.
Returns the output dimensions.
Return a copy of the matrix.
Compose n times the power of the tensor.
Return the automatic dimensions for an array of qubits.
Deserializes the given value into a string.
Returns the string representation of the value of the specified key.
Check if the value is a expected type for the field in choices.
Computes the eigenvalue decomposition of a by applying a function to a matrix.
Return the inverse of the command.
Set the label of the node
Determines if the expression is unitary.
Convert this matrix to an operator.
Convert this Kraus operator to an instruction.
Init transformer method.
Patch strptime to use different methods for different languages.
Determine if a list of tokens are valid.
Split a string into a list of tokens.
Parses the time from the specified date string using the specified settings.
Checks if the given string is applicable for the given date.
Translate the date string according to the settings.
Parse the given date string with the given list of formats.
Returns the number of times an exception was raised
Converts an exception string to an http int.
Compose the config from the given streams.
Get information about the given stream.
Log the stdout and stderr to the log file.
expands the time in the time string
Reads the config options and returns them.
Reads the cached options from the si file and returns them as a stepper.
Write cached options to file.
Creates the stpd file.
Creates a new schedule from the given rps schedule.
Returns the duration in seconds between the min and max rps.
Executes the given command and returns the exit code.
Decode the monitoring data into a list of points
Create points for labeling the data.
Publish a key - value pair.
Counts the total number of matched codes
Stops the thread and waits for it to finish.
feed the plan to the pool
Add user options to self. options.
Configures the plugin with the given options.
Collect the data from the data cache.
Notifies listeners that data has been received.
Discover the UDP port number of the process.
Terminate the subprocess.
Read the data from the log file.
Returns a criterion instance based on the specified string.
Get the configuration of the specified file.
Create the startup config file.
Check the disk usage of the build.
Raise runtime error if memory is less than self. mem limit.
Get the right line.
Add a info widget to the plot.
Fills the rectangle of the prepared text. Returns a tuple of width and a list of
Return the number of markups in a line.
Add a new info widget to the screen.
Sends a request to the writer writer URL.
Loads plugins from the config. plugins attribute.
Returns the plugin of the given class. Raises key error if the plugin is not of
Returns a list of plugins of a given type.
Collects a file into the build directory.
Add an artifact file to this repository.
Create a temporary file and return its path.
Loads the specified configuration files.
Flush the config to the specified file.
Returns a list of options in a section.
Returns a list of sections that start with prefix.
Decode a stat data chunk into a list of statistics.
Prepares the environment for execution.
Check for collect data and send them to the agent if needed.
Send the collected data to all listeners.
Detect configuration options.
Handle data items.
Subscribe to a list of channels.
Create the event loop and run forever until the event loop is closed.
Close the websocket and polygon.
Make one request.
Submit an order
Gets the current position of the item specified by symbol. Returns the position of the item
Returns a list of assets.
Check if an object is a dict parameter.
Returns an opt dict parameter if obj is a dict it will raise an error if obj is
Construct a logger handler for an event record callback.
Create a json event logger handler.
Read config from a file.
Gets a pipeline by its name.
Returns a list of all of the pipelines in the pipeline dict.
Get the next event in a queue.
Execute a pipeline through a queue.
Wait for the process to finish.
Create a field implementation for a given config type.
Build the execution plan for the given pipeline.
Retrieve the solid by its name.
Construct the publish comands string.
Create a new version and commit it to the git tag.
Wrap a block of text with the current indent.
Download the contents of a file from S3.
Upload a file to S3
Yields an error from a user code execution error.
Create a new directory if it doesn t exist.
A context manager for a user code execution error.
Create a context free log for a pipeline.
Determine if the step is success.
True if all steps have been skipped.
Returns a mapping of step output names to their values.
Returns the step failure data.
Returns True if config value is a valid dataset string
Returns True if config value is a valid table string
Coalesce the execution steps of a execution plan.
Gets the connection params from the settings dict
Creates a new connection and returns it
Create a new cursor.
Close the connection to the database.
Makes a model from a model dictionary.
Convert a value to a list.
Overrides django. contrib. admin. models. Field. get_default_for_
Convert a value to an instance of the model container.
Add the core filters to the queryset.
Computes the probability density function uniformly from the distribution of counts at the given sizes
Computes the N real - valued function for the given counts and sizes.
Return the set of the optimal partitions for a given counts and num part.
Calculates the inner product of two vectors.
Initializes the slots.
Return the bytes of the array as a string.
Merges another string
Create a new instance with the union of two or more mhs.
Query the index for the optimal parameters for a given hash and size.
Computes the minimum hash value for a set of samples.
Removes a key from the cache. Raises a value error if the key is not
Count the number of non - zero elements.
Merges this instance with another.
Clear the register.
Computes the fraction of the number of instances of k in actual and predicted.
Computes the mean of the predicted values based on the mean of the predicted values.
Sort by the index of the element.
Returns a list of keys from the set that have a value less than k.
Close the cache.
Get user by user id
Overrides the get social login method to add the auth process. connect to the state.
Selects a single string of text.
Parse a scoped selector into a scope and a scoped selector list.
Parse a statement.
Parse the value of the field.
Advance to one line.
Try to parse a reference.
after create session.
Ensures that the function s name doc doc doc module and wrapped attributes are the same.
Format a value as a string if it is a valid Python value return the literal if it
Clears the config.
Check if a function might have a parameter with the given name.
Return the arg spec from the cache for the given function. If the arg spec is none
Given a function and a list of arguments return the names of the positional parameters that will be
Parse a config file.
Parse a config value.
Recursively iterate over values.
Recursively iterate all references in a configuration.
Create a constant from an enum.
Returns a list of matches for the given partial selector.
Given a complete selector return the minimal node in the tree that matches the given selector.
Perform sp search query.
Returns the number of seconds after the response s response headers.
Validate value with metadata. Raise property error if validation error is raised.
Return the property description of the resource.
Validate and set the value.
Return the value of the thing at the given index.
Initializes the things and hosts
Set the default header.
Prepare the request.
Get a single thing and write it to the server.
Performs the action associated with the given thing id.
Delete a thing.
Start the service.
Return the action as a string.
start the thing and perform the action and finish the thing.
Mark the task as finished.
Returns a string representation of this event as an event description.
Get the IP address of the current node.
Returns a list of all addresses.
Set the value of the field and notify of external update
notify of external update of new value
Return a string representation of the resource as a thing description.
Set the href prefix for all actions in this group.
Returns a dictionary of property names - > property description
Returns a list of descriptions of the actions associated with the given action.
Returns a list of event descriptions for the specified event.
Adds the specified property to this query.
Remove property from this node.
Returns the value of the named property. If the property does not exist or if the property
Returns a dictionary of properties.
Set the value of a property.
Returns the action with the given name and action id.
Adds an event to this group.
Add an event to the list of available events.
Performs the given action.
Remove an action from the group.
Add an available action to the list of available actions.
Remove a subscriber from the list of available events.
Add an event subscriber to the list of available events.
Remove an event subscriber from the list of available events.
Send a message to all subscribers of this property.
Send a message to all subscribers that have closed the websocket.
Sends a message to all registered events.
Annotate model fields with new annotations.
Perform an update on the model with the specified fields. Returns the number of rows updated.
Insert one or more fields.
Create a new record and get a new record.
Builds the insert compiler for the given list of rows.
Check if a field is magical
Send signals on model save.
Sends a signal when a model instance is deleted.
Resolve the expression of this object s value to its string representation.
Return SQL for this query.
Return a clone of the object with the same alias as the output field.
Add a join conditions to the query.
Check if a field is a store field.
Create constraint that checks a field of a hash table with a given key.
Rename a column in an existing hstore required by a new table.
Drops a field from an existing hstore required by a constraint with a given key.
Returns the string representation of the constraint name for the given field and key.
Creates the sql create index sql template for the given model and schema.
Returns the backend class for a given backend name.
Prepares the database.
Prepare value to be used by field. get prep value.
Returns the returning part of the query string.
rewrite the sql for the query and return the id
rewrite for insert or update
rewrite the insert and update sql according to the query s update fields
A helper function to rewrite the insert nothing statement.
Get a field from the query model.
Format field name.
Format a value for a given field.
Creates a new unique constraint for the given field in the meta. db table with the given
Create a new unique constraint with the same name but different fields.
Drops the unique constraint for the given field with the given set of keys.
Returns a unique constraint name for a given set of keys.
Yield the unique keys of a given field.
Adds a new condition to the list of conditions.
Return the SQL for this query.
Returns the number of tdist95 conf levels for a given level.
Calculates the mean variance of two samples.
Calculate the tscore between two samples.
Determine if two samples are significant.
Given a list of roots and a list of parents return the order of the nodes in the
Yields the n queens of the given columns.
Selects a random part of the unexplored list of unexplored parts
Make a random playout.
Given a list of benchmarks remove the benchmarks that are not in the benchmarks list
Expand a benchmark name in the given benchmark groups.
Initialize benchmarks.
Returns the domain of the domain.
Fetch a category of posts
Parse raw posts and return a list of parsed posts.
Returns the user object for the specified user
Fetch all items for a given category
Fetch the feed for a given category
Sets up the command argument parser.
Fetch bug from category
Get a list of bugs for a given date.
Make a call to the comments API endpoint for the given bug ids.
Get the most recent history for one or more bug ids
To get the attachments for a set of bug ids
Fetch merge requests from the git lab client.
Fetch the merges for this project.
Merge a merge into this repository
Fetch merge versions
Merge a version of a merge into another version.
Fetch notes for an item.
Fetch a list of items of a certain type.
Fetch the items of the given type from the given note.
Calculate time to reset.
Fetch a list of items from a repository.
Update the rate limit of the request.
Configure the command parser.
Fetch the latest items for a given category.
Return the metadata id of an item.
Get the number of members of a conversation
Fetch channel info
Fetch user info by user id
Sets up a command argument parser.
Return the timestamp of the metadata that was updated on the given item.
Parse a buglist from a raw CSV file.
parse bug details into a dict
Log out the user.
Calls the API and returns the metadata as a string.
Call the buglist API
Calls the API for the given bug ids
Gets the activity of a bug.
Returns a list of the items in the given category.
Yields nevents per category
Fetch events for a given group
Fetch comments for an event
Fetches all revents in a group for an event and returns them in a generator
Fetch the question and parse the number of pages.
Fetch the comments for a question.
Given an html question and a list of comments build a question object from the html question and
Gets the list of all the questions for the given API path.
Returns the html code for the question with the given id.
Get the comments for a given post id
Parses the question container and returns it as a string.
parse the number of html pages
Parse user info from update info table.
Fetch all the review items of a given category.
Parses a string representation of the Yelp user s profile and returns a list of
Fetch a gerrit28 review generator.
Returns the gerrit version
Returns the gerrit cmd for the last item in the collection
Get the next retrieve group item.
Executes the specified command from the specified archive.
Executes the given command from the remote host.
Configure the command parser.
Fetch issue data
Fetch attachments for an issue.
Fetch messages for an issue.
Fetch activities for an issue.
Fetch user data
Get a specific user by user name. If the user does not exist raise a requests.
Get an issue by it s id.
Retrieve a single issue s collection.
Fetch data from a given URL.
Get all the subscriptions for a single page
Find group id
Fetches the given URL with the given payload. Returns the status code of the request.
Sets up the command argument parser.
Finds all backends in a given package.
Fetches metadata for all items in the archive
Remove the item from the classified fields.
Parses the given arguments and sets them as attributes of the parsed args object.
Adds basic auth and token auth arguments to the parser.
Add command line arguments for the archive command.
Adds the output arguments to the argument group.
Fetch the items from the given archive or from the specified backend.
Initialize archive manager
Return the timestamp timestamp of the metadata field for the given item.
parse a file into a message dict
Fetch and parse the messages from the specified list of mboxes.
Copies the content of a file into a temporary file.
Validate the message.
Casedict to dict
Returns the message corresponding to the given key.
Fetch items for a given category from the git repository.
Parse git log from a file.
pre init git path
Setup the command parser.
Parse the log stream.
Creates a new instance of this class with the specified command and arguments.
Counts the number of objects in the repository.
Determine if the command is detached or not.
Update the repository.
Fetch and update references from pack.
Read commits from a pack file.
Update references in the git repository.
Discovers the refs of the repository.
Update a ref in the repository.
Executes a command and returns the output as a list of lines.
Read the stderr of the subprocess.
Wrapper for subprocess. Popen.
Fetch tweets by category.
Setup command argument parser
Fetch one or more hits
Fetch hits for a given category and parse them.
Parses HIT and returns HIT s results as a dict
Returns the hits of the given list of keywords.
Returns the timestamp timestamp of the metadata that was updated on the given item.
metadata category of an item
Fetch the latest pull requests for the target date.
Fetch repo info
Get a single issue comment reactions.
Pull the requested reviewers from a pull request.
Return a list of all the pull commits in a group.
Get pull review comment reactions.
Get a user by login.
Fetch reactions for a given issue.
Fetch issues for a given page from the API.
Fetch the list of pull requests for this repository.
Fetch a list of the requested reviewers for a particular pull request.
Fetch pull commits by page number.
Pull review comment reactions.
Get a user by login.
Gets the user s orgs by login. Returns the user s orgs if login
Get rate limit for a given token
Get tokens rate limits
Choose the best api token
Determine if the number of tokens need to be checked.
Update the current rate limit for the given URL.
Initialize the metadata for this archive.
Stores the given payload and headers in the archive table.
Retrieves the payload and headers from the database.
Create the archive at the given path
Verify that the archive file exists and has the correct number of entries and metadata.
Loads the metadata from the database
Returns the number of rows in the given table.
Create an archive for this task. Returns the path to the archive.
Remove the archive at the given path.
Search archive files for archive matching origin backend name category archived after
Yields the location of a set of files in self. dirpath.
Generate a range of months between two date objects.
Remove illegal xml chars.
Parse the given raw JSON into a generator of issues.
Get a list of issues for this project.
Get a single issue by id
Returns the user object with the specified user id
Make a call to the API and return the response text.
Fetch category dockerhub data
Fetch items for a given category
Fetches the repository for the given user and repository name.
Filter a list of custom fields based on a boolean value.
Parse a page into a generator of issues.
Get the set of issues for a given URL.
Return a list of issues for this project.
Return the comments for the given issue id.
Fetch the query string and return the fields as a string.
Fetch all items for a specific category
Fetches a list of builds for a given job.
Parses the question page and returns a list of question objects.
Get all the questions for a given page from a given date
Sets up the command argument parser.
Fetch the mediawiki items for a given category.
Returns the date of the maximum value of the given review.
Fetch one 27 of the namespaces from the given date.
Calls the API for the page list. Returns the list of pages in the specified namespace
Get the most recent pages.
Parse a message list from a JSON string.
filter message by chats
Calls the updates method with the specified parameters and returns the response.
Fetch the items of a given category
Return metadata for item.
Tries to convert a string representation of an email. message. Message object to a dict
Fetch the data from the remote server or from an archive.
Fetch a single article by its id
Fetch the given article from the given remote method.
Fetch the given data from the nntplib archive.
Creates a requests. Session object for use with requests.
Sets up the rate limit handler.
sleep for rate limit
Updates self. rate limit and self. rate limit reset ts
Parse a supybot log file and yield parse error messages.
Returns a list of the archive of the supybot archives starting from the given date.
Walks the supybot archive directory and returns a list of the archive location.
Parse a line into a supybot item.
Fetch topics by category
Parse topics page and return topics ids
Get the details of a specific topic
Makes a call to the API for the post with the given ID. Returns the response
Fetch tasks for a given category.
Parse a JSON string containing a list of tasks.
Parse users from a JSON string.
Return a generator of all tasks in the project. The generator will yield a list of tasks
Returns a list of transactions associated with the specified PIDs.
Call the phab users API
Make a call to one or more phids and return the response.
Make a call to the API and return the response text.
Return the metadata id for the given item.
Parse the summary from a JSON string.
Get the contents of the dataset.
Get historical content of a document.
Parses the result of the measurement.
Returns the capabilities URL for the given service url.
Read the contents of a URL.
read string as etree. fromstring
Parses the result string and returns a measurement timeseries object.
Builds the url from the url query string and path.
Construct a gml schema from a set of elements and a namespace mapping
Given a URL and version and type return a new URL with the type of that type.
monitor and print complex input with reference
Returns a list of movie attributes.
Returns a list of the attributes of the object at the specified path.
Returns the values of the attributes of the object at the specified path.
Gets all the alternative titles for the object.
Returns a list of attributes for the object at the specified path.
Returns a list of all of the external ids of the object specified by the specified path and
Returns a list of all the attributes of the object at the specified path.
Returns a list of values for the object at the specified path.
Returns a list of all of the release dates for this object.
Gets the releases of the object and sets its attributes to values.
Returns a dictionary of translations for the object at the specified path.
Returns a list of attributes that have been set to the values of the attributes specified in the
Returns the values of the attributes of the object at the specified path.
Returns a list of the upcoming attributes of the object.
Returns the values of the attributes of the object at the specified path with the specified keyword arguments
Returns a list of values for the given data path.
Returns a list of the top rated attributes of the object.
Returns a list of all of the account states that have been applied to the object.
Set the values of the attributes of this object.
Get movie attributes.
Returns a list of attrs for the object at the specified path.
Returns the values of the attributes of the object at the specified path.
Returns a list of the attributes associated with the object at the specified path.
Gets information about a specific session.
watchlist the session attributes for this object. kwargs are passed to the watchlist function.
Create a new token
Validates that the response from the API has a valid token for the specified path with the
Creates a new session.
Creates a new guest session
Returns a list of the attributes of the guest session that match the specified path.
Returns the status of the specified item.
Creates a list of attributes for a given session.
Removes an item from the collection.
Clear all the attributes of the current session.
Returns a list of content rating for the object at the specified path.
Returns a list of attributes that have the same value as the object at the specified path.
Returns a list of the attributes of the object that match the specified path and keyword arguments.
Gets the information of a particular season.
Get a specific season number of a series
Returns a list of series id season number and values
Gets information about a particular season number episode number
Get season number episode number of a series
Returns a list of external ids for the given series id season number episode number
Set the attributes of the response object to values.
Returns a collection of records matching the specified path with the specified kwargs.
Returns a dictionary of values corresponding to the values in the company object at the specified path.
Returns the values of the specified keyword in the response object for the specified path.
Returns a list of values for the specified path.
Normalize a string.
Counts the max count of each reference with its n - gram count in refs.
Count ngrams in a reference string.
Return the erfcc of x.
Return a list of aligned texts between the source and target blocks.
Get descriptors in a module.
Registers an object as JSON - encoded string.
Register a desc with the specified version. If version is none the specified version will be used
Prints the given string to the given file or prints to stdout.
Return True if desc is a descriptor class.
Returns a JSON representation of the object.
Return the coordinate of the node.
compute the atomic index i for a sphere
Returns the surface area of the surface.
Create a molecule from a molecule object.
Build a new descriptor from a JSON object.
Returns a new str instance with the missing values.
Drop missing values from the molecule.
Return a tuple of key - value pairs.
Return a dict representation of this object.
The name of the value of this parameter.
Print a progress message.
Prints a message to stdout with the given text + args.
Log an error message and clean up temp files.
Gets a random file and adds it to a list of temporary files. Returns the filename
Set a temporary file.
Remove temp files
Return the fixed path of the file.
Returns a list of legal params for a given method.
merge opt params
Add command - line options.
Terminate the current task.
Add a task to the queue.
Joins all the tasks and workers.
progress bar for processed tasks
Get s3 keys from environment
Get the s3 keys from the cmdline
Get the s3 keys from the s3cfg file
Initialize the s3 keys
Connect to S3
Walks the file system and returns a list of all the files in the file system
Expand a list of S3 source files into a list of strings.
Upload a single file from the source path to the target path.
Put a set of files from a source file to a target file.
Create a new bucket in S3
Update a file or directory with a specific permissions.
Print the contents of a list of files.
Download a single file from S3 using the given pool.
Get files from a source file to a target file.
Copies a single file from source to target.
Copies a set of files from source to target in a thread - safe manner.
Delete a set of files from an S3 file.
Recursively walk the given directory and return all relative paths.
Sync a set of files from one directory to another.
Compute the MD5 hash of a file.
Return the MD5 hash of the file.
Make the target directory.
Check if the remote md5 is the same as the local md5 of the remote key
Match a path with a partial match.
Walks a given S3 URL and returns a list of objects.
If the opt. last modified before or after is specified then append the object to the result
Get the file privilege of a given file.
Lookup head object by S3 URL.
Read a chunk of data from a file.
Verify the size of the downloaded file.
Write a chunk of data to a file.
Run the command with the given arguments.
Check if format is valid.
List buckets andwalk in S3 bucket.
Create a new bucket
Handles the s3 put command.
Handle s3 GET files
Validate and print S3 files.
Execute the dsync on a set of S3 files.
Calls the s3 cp files function
Copies a file or directory from source to target using the s3 mv command.
Delete files from S3
S3 handler. size is the size in bytes of the input file.
total size is the total size in bytes.
Match the given string s date to the given value.
match time in string
Match delta.
Check if the value is a dict
Gets a message from a hub.
Push data to proto.
Encrypts and returns the private key.
Renders an exception handler to the rollbar.
Adds a new log handler if it doesn t already exist.
get request string
Report a message to the log.
Creates a new log file with the same format as the log file. Returns the log object
build person data
Add a function to the current context.
Add request data.
Returns True if the frame num is equal to total frames.
Build request data.
Builds the server data.
Build payload from dict.
Run the server.
Compose a character.
Decomposes the given letter into its component components.
Return the index of the first jong with the given letter.
Attach the last letter of the last letter of the last letter of the last letter of the
Check if the current node is inside the except handler.
Check if the node is inside a lambda function.
Get all elements of a node.
Return a tuple of the name and value of an except node.
Check if the current node is the name of the builtins node.
Check if the given node is an error node.
Check if node is a function decorator.
Return true if the node is the ancestor name.
Return the parent node of an assignment node.
Apply string. formatter to each field of a string.
Get the value of the argument at the given position in the call node.
Return true if the node is a class that is not an instance of the exceptions module.
Check if a function is decorated with a property.
Check if the given function is decorated with the given qnames.
Find a try except wrapper node.
Check if the given node is from the fallback block.
Get the exception handlers for the given node.
Return true if the given node handles the given exception.
Check if a class is abstract.
Return the current value of the infer function or None if the current value is not what it
Return the type of the given node.
Check if postponed evaluation is enabled.
Returns a list of qualified names for the given module name.
Get the absolute name of the given import node.
Return a string representation of a tree - like structure.
Make a dependency graph.
Check whether or not the given node is an imported module.
Check if the given node is an imported module.
Add a message at the position of the first non import node.
Add an import node to the stack.
Check if the given node is relative to the given module node.
Add an imported module.
Check if the module is in use as a deprecated module.
Check the preferred module.
Adds the external dependencies of this command to the list of external dependencies of this command.
Filter the dependencies of the given module.
Get the default options from the rcfile.
Insert default options into sys. argv.
Show the value of a node s attribute if it is visible.
Get the callbacks for a specific node.
Visit the given node and call the corresponding methods on each local node.
Check the consistency of this checker.
Check function call.
Check if a datetime is a string and add a message if it s a string.
Check if the given node is an open mode.
Adds a message to the list of messages to be processed.
Returns the title for the given node.
Set the default configuration options.
Determine if the given node is a builtin or not.
Add object to classdiagram.
Get all the ancestors of a node at the specified level.
Return the number of nodes that are associated with the given class at the given level.
Extract the classes associated with the given node.
Return a tuple containing the packages and class diagram of the specified node.
visit a from node by adding a depend node to the packagediagram
Return a class diagram of the specified class.
Returns a list of diagrams of the project s diadef classes.
Return true if owner is an element that matches the specified name and classes that should be ignored
Return a list of names that are similar to the given attribute.
Emit no member node.
Return True if node has parent of node type and statement has parent of node type.
Determine whether the given name is used as a child of the given one.
Determine whether the node is in the context of a given type and a given name and
Check if the given node is an assignment.
Infer the uninferable call of the function.
Adds new unaryop node for each type error.
Yield the names of the interfaces of the given node.
Converts a list of files into a new project.
Replace all sub - packages with their IDs.
Set the type of the function node.
node. handled is true if node. name is a string
Handle an assignattr node in the type hierarchy.
visit a Import node by adding the module name to the list of names
visit from node by import basename
Compute a module in the project. path if it is a standard module.
imported module
Register the reporter to the linter.
Handle a message.
Handle a message.
Write a graph as a string.
Write edge between two nodes.
Process a non raw string token.
Increment the number of children of a section.
In - place evaluation section.
Compute the default table based on the content of the table and the content of the table.
Register a renamed message.
Register messages from a checker.
Registers a message in the database.
Check if a message with the specified symbol is in the specified message. If a message with
Raise an invalid symbol.
Raises an invalid message id error.
builder inited function.
Return the number of cpu cores.
Adds stats information to a list of children nodes.
Fix sys. path in - place and restore the original sys. path in - place.
Load plugins from a list of modules.
Loads plugin configuration from specified plugins.
Set the value of an option.
Register a checker.
Disable or enable 3 porting mode.
Returns a list of checkers that are not self.
Returns the names of the current checkers.
Prepare list of checkers to run.
Expand files in a list of modules.
Sets the current name of the specified module.
Check the astroid of the given node using the given rawcheckers and tokencheckers
Evaluate the given evaluation and display it.
Prints the help message and exits.
Print the full documentation and exit.
Return a list of messages.
Print the names of the checker and exit.
Normalizes the given text.
Get the module and frameid of the given node.
Decode a line to the given encoding or raise an exception if the line can t be decoded
Determine if a file matches a pattern in the blacklist.
Register all plugins in a directory.
Returns a string with the comment at the beginning and the end of the string.
Format option value.
Format a section from a configuration file.
Format an ini into a string.
Inserts a new child at the specified index.
Append a child to this node.
Returns the list of parents of this node.
Format the text using the given layout with the given stream.
Compute the content of a table.
Compute the content of the given layout and store it in the out attribute.
Collect the block lines from the given module.
Handle a message that was ignored.
Register a report with the given checker.
Add stats to self. stats.
Get the name of the property of the given node.
Get the value of the property of the given node.
Check if the function returns something.
Return a list of possible types for the given node.
Process a module s message.
Process a module into a string.
Process the tokens of the token stream.
Check if the given name is from a future import.
Return True if the else branch is in the parent of the statement.
Return the overridden method of the given method name.
Return a string describing the extra information of the given node in the given infered module.
Check if the node is assigned to a local variable.
Mark a node as consumed.
Check if a function has an homonym in the function scope.
Check if the given node is an iterable.
Check if the node is a class decorator.
Returns all packages in a directory with the given prefix.
Copies the package into the install dir.
Creates a table of similarities between old stats and new stats.
Runs the command line interface and exits with an error code.
Appends a stream to the end of the input file.
Computes the set of sims.
Displays the given sims.
Find the common lines between two lines.
Yields all simulated lines in the file.
Enumerate lines starting at index starting at num.
Create a dict of the index of the line with the index of the index of the line
Check if the equality of node a and node b has the given attribute name.
Determine if the original parameters match the overridden parameters.
Safely return the value of the call result of a function call.
Return a new instance of this scope that is accessed by the given node.
Check class definition.
Check the consistent mro of the given node.
Check the bases of the given node.
leave functiondef node
Check if the given node has the same layout slots as the given one.
Check if the first attribute of the node is the same as the last attribute of the node
Check if node is mandatory method parameter.
Check if the function body is an raise node.
Check if the given node has a bad context.
Display the report in the given layout.
Checks if the given node is a typing namedtuple.
Check if the node is an enum class.
Check if the given node is a dataclass.
Add the number of parents and attributes of class definition node.
leave class definition
Adds if statements to the current if node.
Check if the number of boolean expressions is greater than the maximum value of the boolean op.
Check the docstring of the given node.
Format the template with the fields of this instance.
Return True if the node is a actual elif.
Check if the given node is actual or not.
Check if the stop iteration is inside the generator.
Return True if any of the class in exc is a stopiteration class.
Check nested blocks.
Return a set of the duplicate types of the given node.
Check if node is a string type.
Return True if node is and or conditions.
Check the consistent returns of a function.
Check if graphviz is available.
Write the project name to the output file.
Write packages to diagram.
Write the class diagrams.
Sets the printer name and the name of the file to print.
Open and set the printer in a file.
Return whether or not this package may be emitted.
Format the help for this object.
Gets the current environment as a string.
Get the cycles in the graph.
Generates a dot graph from the current renderer.
Formats a section and prints it as a reST string.
Disables or disables a message.
Enable or disable a message.
Return the message symbol corresponding to the specified message id.
Check if a message is enabled.
Add a message to the model
Get the indent length of a line.
get indent hint for bad position
indent the token at index idx and return the new line indent
Handle line start.
Get the valid indentations for the token at the given index.
Return a tuple of indents before and after a bracket.
Return a continued indent of the bracket inside the bracket at the given position.
Push token at position inside bracket.
Add a new line.
Check if the token at index i has a valid type annotation.
Check the equals spacing between tokens.
Check if the next token is separated by a space.
Check if the given node is a statement and return its default value.
Check multi statement line.
Check if the level of the string matches the expected indent level.
Determine if the given node is in a iterate context.
Check if node is a conditional import
node. name is the name of the builtin function.
Check if the inferred value is an instance of a subclass of std. ex.
visit an attribute node by returning a warning if the node is an instance attribute
Check if an exception is raised.
Try to find the path of the file.
Validate a value in optdict. name should be the name of the option. Returns the
Register a new options provider.
Set the provider option.
Set the global value of an option.
Generate the configuration options.
Load the config file.
Load the command line configuration.
Add a section of the option group to the command line parser.
Returns the help for this command.
Load the default values of all the options.
Get the value of an option in the option dictionary
Returns the value of the option. Raises an option error if it doesn t exist.
Returns an iterator over all the options in the configuration by section.
Return True if func is a method call
Return a boolean if the value is a string representation of a complex type.
Splits the module name into its parts.
visit a from node by adding its module name to the logging names
Add module name to the logging names.
Check format string.
Determine if a node is in a loop.
Return the parent node of the break loop node.
Return true if the loop exits early.
Return a list of property classes and property names for a given configuration.
Determine the function name of a function node.
Creates a sub - sub - sub - sub - sub - table of the given stats.
Return True if the call is a pos call.
Check starred statement.
Check if the call of the function is abstract.
Checks the return value of a loop function.
Check if the given node is in a loop.
Creates a new connection with the linter.
visit an expr node by returning a string
Add a message if node. fail is not None and its length is not equal to the
visit a dict node by returning a list of keys
Check if the node is in the final body of the try block.
Recursively walk the call stack and call the reversed protocol method.
Check the docstring of a function.
Check if the given literal is a string comparison.
Create a subgraph of the current node.
Parse a subgraph of the given node.
visit the module of the given node
Walk the AST for the current state of the parser.
Add a relationship to this object.
Get the relationship for a given object and relation type
Get the names of the attributes of the given node.
Add a new object to this node.
Return the names of the given nodes of the class.
Return the classes of the given object.
Returns the class instance corresponding to the node with the given name. Raises key error if
Returns a list of the modules in this node.
Returns the module corresponding to the given name. Raises key error if the module is not
Returns the module corresponding to the given module name and node.
Add a dependency from module to node. depends.
Delete the object from the cache. Returns none if the object does not exist or if the
Returns the query string of the model
Get a user by username and password.
Get a specific token by either an access token or a refresh token.
Set a token for a client.
Set a grant for a client.
Get client by its id and code.
Prepares a request to be sent to the client.
Initializes the extension for the given app.
Create a remote app and register it in self. remote apps.
Redirect to authorize URL.
Handle the response of an OAuth1 access token.
Handle the response of an OAuth2 access token request.
Return the authorized response for this request.
Hash a token.
Make a client with the specified token.
Creates a client for the given token.
Yields the insecure transport of the current app.
Confirm authorization request.
Get client secret.
Get the secret for a request token.
Get access token secret.
Returns a list of realms for the given request token and request request token.
Returns the redirect URI for the given request token and request.
Returns the RSA key associated with the client key for the request.
Validate client key.
Validate the request token for a given client key and token.
Validate the access token for a given request.
Validate the given client key and nonce. Returns True if the nonce exists.
Validate the redirect URI.
Validate the realms of a request.
Validate the verifier for a given client and request.
Verifies that the given request token is valid for this request.
Determine if the token is valid for this request.
Confirm authorization request.
Returns a client if the client id and secret match the client secret from the request.
Authenticate a client id.
Get the original scopes used by the refresh token.
Returns True if the scopes specified for the given request and refresh token match the specified scopes.
Return the default redirect URI for a client.
Gets the default scopes for the given client.
Invalidates an authorization code for a client.
Save an authorization code for a client.
Saves a token and returns the redirect uri.
Validate an access token with the given scopes and request.
Validate a client id.
Validate the code for the given client.
Validate the grant type.
Validate a refresh token.
validate the response type
Validate the scopes for a given client.
Validate the username and password for this client. Returns True if the username is valid and False
Returns a token that was generated by this client.
update qq api request data
Convert keys to string
Change the auth header for the request if needed.
Register a user to this registry.
Create a new remote application.
Extract params from request.
Encode text to bytes.
Decode a base64 string.
Creates a response object with the given body headers body and status code.
Return the cached clients of the given extension. Raises runtime error if the extension is not
Add a remote app to self. remote apps.
Add a remote app.
Check the public key to find out if an exception is raised.
Check if all the small keys are valid.
Check if the load privatekey callback should be invoked.
Check if the private key is correct.
Check if the load privatekey callback wrong type
Check that the certificate is revoked.
Check revoked dups.
Create a certificate request
Create a certificate.
Use the specified certificate chain file.
Use a certificate file.
Use an SSL certificate
Add extra certificate chain to this X. 509 context.
Use a private key file.
Use an existing private key. If the private key doesn t exist raise an exception.
Load the client ca list from a file.
Set the verify depth value for this SSL context.
Load a temporary SSL context from a file.
Set the list of cipher lists for this connection.
Set the client ca list for this SSL context.
Add a certificate authority to the client
Set the use of this TLS context to use the given number of profiles.
Set the npn select callback.
Set the list of protos to use for this SSL context.
Set the alpn select callback.
Set the ocsp callback.
Set ssl context
Get the server name.
Set a host name.
Recieve data from the socket.
Reads data from the socket and returns it as a string.
Returns True if the renegotiate operation was successful. Returns False if the reneg
Shuts down the SSL connection. Returns a boolean indicating whether the connection was closed or not
Return a list of all of the cipher names in this SSL connection.
Return a list of client ca names.
Set the shutdown flag of the SSL connection.
Return a random server.
Return a random client.
Return the master key for this SSL session.
Export the keying material associated with this keying material.
Get the SSL session.
Get the name of the current SSL cipher.
Get the bits of the current SSL cipher.
Return the version of the current SSL cipher.
Returns the protocol version name of the SSL connection.
Get the next proto negotiated data.
Set the list of protos to use for this server.
Return the negotiated version of the SSL certificate.
Convert a bio to a string.
Set the asn1 time in seconds since the epoch.
Convert a timestamp to a string of the same length as lib. v as generalizedtime
Get elliptic curve by name
Dump public key in PEM format.
Load public key
Sign data with the specified private key.
Verifies the signature of the data.
Dumps a certificate into a string
Convert this key to a cryptography key.
Check if the key is public and only public. Raise an error if the key is
Load the list of elliptic curves from the lib.
Load the elliptic curves from the lib.
Convert this curve to an EC key.
Return the certificate representation of the certificate.
Return a list of components in this certificate.
Get the short name of this extension.
Return the extension data.
Convert this certificate to a cryptography. hazmat. backends. cryptography. x
Set the pubkey
Get the public key for this certificate.
Get the subject name of this certificate.
Add one or more extensions to the request.
Return a list of extensions to use for this certificate.
Verifies a certificate with a given private key. Raises an error if the private key
Returns a cryptography. hazmat. backends.509. x509. certificate object
Set the version of this x509 to version.
Return the public key of the x509 object.
Set the public key on this x509 object.
Sign a digest with a private key.
Return the digest of the named digest in this x509 object.
Set the serial number of the x509.
Return the serial number of the x509 object.
adjust number of samples not after this certificate. If number is not an int raise type error
Adjust time before this certificate. If amount is an int raise type error.
Returns True if the current time has expired False otherwise.
Return the issuer name.
Set the issuer for this certificate.
Return the subject name of the certificate.
Set a subject for this certificate.
Add one or more extensions to the x509 object
Return the extension at the given index. Raises index error if the extension is not found
Add a certificate to the x509 store.
Add a revocation list to the store.
Set the time of this certificate.
Initialize this certificate. Return the number of bytes needed to initialize this certificate.
Return an x509 store context error.
Verifies the certificate in the certificate store.
Set the serial number of this certificate.
Return the serial number of the certificate.
Set the reason for this certificate.
Get the reason of the extension
Set the revocation date for this certificate.
Returns the certificate revocation list for this certificate in cryptography. hazmat. backends
Return the revoked state of this certificate.
Return the name of the issuer associated with this certificate.
Sign a certificate with a public key.
Export a certificate to an X509 object.
Get the type name.
Set the list of CA certificates
Sign a digest with a private key.
Check if the given key is valid
Returns a string encoded as a base64 encoded string.
Get the pubkey for this layer.
Use this method to set the public key.
Create an exception from the error queue.
Get the metadata for a service.
Returns a generator of issues for each card in the board.
Build annotations for a card.
Returns a generator of all boards.
Returns a list of lists for a given board.
Returns a generator of cards in the given list.
Fetches comments for a card.
Returns the full url to the specified path with the specified context.
Gets the JSON representation of a link and converts it to a dict.
Convert a string field to a dictionary.
Query the repository for a given issue query. Returns a list of issues matching the query.
Retrieve the requirements of a given tag.
Aggregate issues for all the targets in the configuration.
Returns the config value or default if it doesn t exist.
Return a boolean indicating whether or not this issue should be included.
Make a reST table from a list of lists of lists
Runs a command and returns its stdout and stderr as a string.
Returns the int value of the option in the specified section. If the option is not a
Pulls the latest issue from the given configuration.
Send HTTP GET request to url and return JSON response.
Get a collection of values for a given URL.
Parse a sprint string into a dictionary.
Get the credentials for this application.
P - values correction with ecdffactor factor alpha.
Calculate the mean and standard deviation of a 2d array along an axis.
Adjusts the spines of the axis to the specified location.
Prepare argument parser.
Add an enrichr argument parser.
Compute the value of the Gsea p - value.
Get the available martnames and mart descriptions in a pandas Series.
Returns a list of the available data sets in the specified Mart.
Returns a pandas. dataframe of the attributes of the dataset.
Returns a dataframe of filters for the given dataset.
Set the number of cores.
Load genesets from a GMT string or a list of genes.
Get libraries for the specified database
Downloads the libraries from the enrichr server. Returns a dictionary of genesets
Compute the heat matrix of the data.
Load the data from the data frame.
Run samples permu and save results to file.
Save the results to a CSV file.
Returns a list of genesets in the enrichr library.
Send a list of genes to a specific URL and return the job id.
Return the number of genes in a user s list of user s gene names.
Transform a cube script.
Filter a script to a specified radius and subdivisions.
Create a cube open hires layer.
Returns a tuple of the red green and blue values for a given color.
Check that var is a list of num terms.
Make a list of terms into a list of terms.
Appends a filter xml to the script
Merges a script into a new one. Returns the new one if the new one is
Split avert face into a nonman dbus face.
Translates a value in a script.
Rotate a script by angle.
Scale a script to a specified value.
Computes the cyl co of a script
Wraps the given script with the given functions to create a cylinder with the
Convert a deform curve to a curve.
Writes a script to a. tex file.
Writes a mesh to an XML file.
Voronoi layer.
Writes a script to a file in the current working directory.
Computes thevert quality of a script.
vertices of a cylindrical mesh.
Generate a spherical vert function from a spherical object.
Renames a script.
Change the current layer in the script. If layer num is none change the current layer.
Creates a copy of the current script or the specified layer. If no layer num is specified
Delete the first non - zero layer from the script.
Begins a script file.
Add a new layer to the stack.
Save the script to a file.
Write a triangle script.
Measure the topology of a script.
Parse the hausdorff distance
Calculates the square root of x and y given the math. pi and math.
Computes the cross product of two vectors.
Computes the dot product of two vectors.
Writes a filter script in depth mode.
Sort polylines by element
measure all the models in a given file.
Lower case of extension.
Get the configuration of this upload.
Returns a URL for the given file.
Returns the full path to the given file.
Returns True if the specified extension is allowed.
Resolves a conflict of the given file name and extension in the given folder.
Returns the version number of the vprof file.
Remove duplicates from a list of objects preserving the seen set.
Get the count of objects in objs1 and objs2 that are not in objs1 or
Format a count of objects into a human - readable string.
Returns the memory usage of the given trace frame.
Return the number of code events that have been added to self. resulting events.
get object count by type
Compute the number of bytes needed to store the memory info of the process.
Get the full path to the profile file for the given run object.
Compiles and executes the code of the given module. Returns the profile and none if system
Return the profile function of the given code object.
Run the profile.
Returns a set of module names in a package.
Run a function in a separate process.
Return the type of a run object.
Initializes the profile module for this run object.
Initializes the package name for this run object.
Initializes the profile function self. run object with self. run args kwargs and self.
Replace self. run args with sys. argv.
Sample a given signal in a given frame.
Insert a number of samples into the stack.
Calculates the sample count for a node and returns it.
Recursively format the tree.
Format the call tree.
Profile the function call tree.
Profile the given module.
profile the call tree
Given a profiling object return a sorted list of records.
Returns the full profile package for this profile.
profile a module
Return the profile function for this profile.
Show the guestbook.
Adds a new entry to the database.
Starts the statistics server.
Handle the file at the root of the profile.
Returns the content and the extension of the other file.
Send a GET request to the server.
Perform an HTTP POST request and return the response.
Send an HTTP response.
Check if a module path is in the standard library directory.
record the line number for the given event and arg.
The lines without stdlib in the current module.
Calculates the heatmap.
skip lines in source code
Returns the location of the code heatmap in the profile.
Format a heatmap.
Profile a module and return its result.
profile a single profile function
Run a list of profilers according to the given configuration.
Run a function and return the result.
Predict class label for input x.
Log of the predictive value of x.
Fits the model to the given spmatrix.
Count the number of documents with the given vocabulary.
Sorts the features according to the vocabulary.
Count the number of terms that are removed from a sequence of features in a vocabulary.
Transform a string representation of a feature vector z using self. build analyze and persist it.
Transform a sequence of strings.
Return a string representation of the distribution.
Fit a Spark model to the data.
Predicts the class of x using the spark predict function.
Fits a linear regression to the given z - value.
Fit a single instance of this TimeSeries using a pre - transform and a fit function.
Performs a pre - fit transform and returns the transform if the fit was successful.
Calculate the score of the current layer.
Compute the score of an estimator and z test.
Fit the model to the given data.
Predict the class label of x.
Predicts class label for input x.
Check that the given RDD has the expected dtype.
Performs the fit of the SVD model.
Apply the SVD transform to the given RDD.
Return a block collection of elements from an iterator of a given dtype.
Yield a tuple of values according to the given dtypes.
Return a block from the first RDD.
Return a new DStream by applying a function on each RDD.
Return the shape of the RDD.
Converts the RDD into a numpy array.
Return the bitperm of perm & pos
only write to the root
Reads the config file and prints it.
Reads the config from the config file.
Prepares the command to be executed by the user.
Execute a command in a subprocess.
Execute a command over SSH.
Check if the config data is of the correct content type and if so load it.
Returns the headers of the response as a dict.
Get the URL for this assistant.
Returns the URL to the configuration.
Returns a textual description of the packet.
Prints the discovery information to the console.
List devices in a network interface.
Executes this command. Returns the result of the command. If the command instance is not
Send a confirmation.
Function called when a new device is inserted. Returns the time at which the new device was
Executes the specified device.
This method is called when a new device is added to the list of devices.
Returns the absolute path to the ledger file.
Run tests in the given session with the given install string.
Create a text measurement from a JSON file.
Generate an iterable of the supported characters for a given path.
Return an iterable of characters that try to encode with the given encoding.
Calculate the length of a given character to its length mapping.
Writes a JSON file.
Convolve a 2d image with a gaussian kernel.
get a gaussian kernel
Converts an image to an RGB color image.
main entry point.
Computes the value of the ssim of the target image.
compute the ssim of two images
Tear down the service and destroy all associated resources.
Set the new code version.
Get the status of the node and its other nodes.
Log the current status to the console.
Returns the node associated with the given connection.
Try to bind the node if it is ready or if it is not ready.
When a new incoming connection is received the sync object encryptor if needed.
Generic utility callback.
Determine if the given node should be connected to this node.
Connect to a node if necessary single attempt.
Called when the client is connected to the given node.
This callback is called when a new incoming message is received from a node.
Called when a connection is disconnected.
Add a node to the network.
Remove a node from the network.
Sends a message to a specific node. Returns True if send was successful False otherwise.
Add an item to the queue if necessary.
Put an item into the heap.
Get the next item in the queue or return the default if no such item is found.
Try to acquire the given lock.
Returns True if the given lock is acquired False otherwise.
Release a previously acquired lock.
Create a new connection to the specified hosts.
Create the named index if it doesn t already exist.
Migrates the list of aggregate indexes to new ones.
Strip the metadata from a report.
Save one or more aggregate reports to kafka
Extract XML from a file.
Parse an aggregate report from a file.
Returns the results of parsing the forensic reports to a CSV file.
Try to parse a report from a file or a file - like object.
Returns a list of strings representing the map capabilities of the given server to a list of strings
Save forensic reports to splunk
Decode a base64 string.
Query the DNS server for the specified IP address and return the hostname.
Converts a human - readable timestamp to a datetime.
Get the reverse dns info for the given ip address.
Converts a message from an outlook message to an email message.
Split a string into a list of strings.
Parses a report file
Drain the connection and wait for it to finish.
Publish a message to the subject.
Publish a request.
Publish a reply to a subject.
Subscribe to a subject.
Unsubscribe the specified number of messages from the configuration
Send a ping to the server and wait for the specified number of times.
Select the next available server.
Process an error message.
Process the error of the reconnection attempt.
Returns the command to connect to the server.
Process pongs.
Process a message
Process the given info dict.
Flush the queue of pending data until the pending data size is reached.
Read loop.
Load features from a numpy array.
Load features from images.
Calculate the correlation between the feature images and the feature images.
Computes the dot product of the images to decode.
selection of features based on a regular expression
Return the feature order of the features in the dataset.
Classifies a classifier using a specified method.
Fit a classifier to the data.
Set class weight to one or more values.
Fits a cross validation of the feature selection feature set with a feature selection function.
Fits the classifier on the given dataset.
Get random voxels from a dataset.
Get n top words for each topic in a model.
Compute the Pearson correlation coefficient
Calculate the Fourier transform of a 2D array.
Loads activations from a file.
create image table
Returns the names of features in the feature table.
Returns a dict of feature names and their counts.
Loads a previously saved dataset.
Save the feature table to a file.
Returns the ordered names of the features
Returns a list of features that match the search string
Get ids by expression
Convert to sparse matrix.
Transform a 2D Foci matrix to a 2D Foci matrix.
Convert foci and xyz coordinates to a numpy array.
Applies the given function to the given foci.
Get a mask of the image.
Load image masker.
Save image data to file.
Set the logging level.
Parse an address into an address object.
Convert a dict to an object.
Get the price of a ticker
Gets a file or a list of files in the collection.
Performs a request to the given URL with the given method and arguments. Returns the response
Gets the user info from the spotify account.
Makes a request to the given route. If the route is a tuple the route is
Get album tracks.
Get information about an artist.
Fetches a single artist of the given spotify.
Get the top tracks of an artist.
Get information about the artist related to the given spotify.
Send a request to the API for the given spotify ids.
Returns a representation of the category in the given category id.
Returns a list of user s playlists in a category.
Returns a list of the categories the user is subscribed to.
Sends a request to update the featured playlists.
Send a request to create new releases.
Returns a string of the followingists or users with the specified ids.
Get the album of this artist.
Get all album of the artist.
Returns the total number of artists in this artist.
Get the currently playing context and track.
Get the current player.
Get available devices.
Fetch the recently played information from the server.
Replace one or more tracks with a playlist.
Create a playlist.
Get a list of playlists belonging to this playlist.
Get a list of tracks associated with this album.
Get all tracks of the album.
Generate an OAuth2 url.
Get album by its identifier and market.
Fetch artist by its identifier.
Get a single track by id.
Get a user by its identifier.
Get album by their ids and market.
Get artist by their IDs.
Extracts the id from the string
Instantiate an instance of this class from a client.
Builds a URL from the given client id redirect uri and optional scope and state attributes.
Returns a string with the attributes of the request.
Returns a string representation of the parameters of the model.
Build a playlist.
Get all tracks of this playlist.
transfer a device to the user.
A helper method for making HTTP requests to the resource s URL with the resource s href.
Get the current whois record
Convert or shorten month.
Updates the documentation and docs for the given file names.
Check if the version number is greater than the current one
Returns a bool indicating whether or not this is the dev version of the git repository.
Checks if a version number is greater than the current version
backup the log file
Restore the backup content
Returns True if the line is to be ignored.
Handle given options.
Extract the base from an element.
Format the data in to format and extract the base if needed.
Access this URL
Check if the http code is in the list of valid http codes. If the http code
Checks the syntax of a domain
Checks if the given domain is a subdomain
Check if an ip is valid
Check if ip is a valid IPv4 range
Check if a URL syntax is valid.
Loads the configuration from the current directory if under test or custom is specified.
Prints a random number if it doesn t exist and if the number is equal to num then
download entry management url
Download and parse entry management URL.
Print the header of the configuration
Process a file decision
Calls the file decision function for the specified domain and status.
Check if the URL is valid and decision the file.
colorify logo
Format domain from extracted domain string.
Extract domain from file.
Return file list to test filtering
Return a list of urls to be passed to the file list to test.
Get the next available task for the given expiration date. If the expiration date is not implemented
Return the status file of the catched exception.
Get or update structure from config
Create a directory
Delete the un needed files in the structure
Set the path to the config
install production config
Download and install the iana configuration
Download and install the psl configuration
Download and install a directory structure file
Merge this configuration with another.
Loads the configuration from the config file
Split version into digits and non digits.
Check if the local version is a member of the upstream.
Check if the file or directory is cloned
handle the non existant index
Function to get the dir of the filename of the function output
Print out the unified file.
Generate and print the status file.
Determine if the file should not be produced
Update public suffix db by the extension of the line.
Load the configuration from a JSON file.
Returns the standard regex for the given element.
Load the iana database
Determine if the iana record has the given extension. Returns a boolean indicating if the
Yields the extension of the upstream lines.
Update the configuration of the iana
Mine the configuration
Retrieve the configuration from the file
backup the configuration
Add one or more elements to the list
Remove this instance from the system
Return a list of the mined configuration
Process the py funceble configuration
Get the content of a file
Write the content of the configuration to a JSON file.
Write the whois to the log file
Writes the expiration date to the file
Function called by funceble when the extension is not found
Writes the link to the output file before the header of the currently used template.
Constructs the header constructor for the given data to print.
Return a dictionary of the data to print with the specified size.
Extract the size in bytes from a header.
Takes the data and returns the data if the data is between black and red and the
Print the data to the output in JSON format.
Print the data to the console
Calculate the time difference between start and end
Format the execution time of the query.
Delete the files in the output directory
Delete all the databases in the specified directory
Deletes the whole contents of the configuration file.
Compute the hash of the contents of the file.
Generate a hash of the data using the specified algorithm.
Returns the hash result.
Executes the command and returns its output.
Remove a key from the main dictionnary.
Renames a key in the main dictionnary dictionary.
Recursively merge two dictionaries.
Writes the main dictionnary to a JSON file.
Save the binary data to a YAML file.
Fix the given path by adding the directory separator to the splited path.
Writes the given data to the file.
Reads the contents of the file
Returns a sorted list of the main list.
Recursively merge the elements of a list into another list.
Return list of elements not matching the regular expression.
Match the input string. Returns a list of strings if the input string matches the regular expression
Returns the string to replace with.
Counts the number of instances of this object
Calculates the percentages of the given string.
Check if the URL is valid.
Check if the domain is valid
Check if the current element is a subdomain of another domain.
Get the status of a URL or domain.
Check for the formating error in the system.
Retrieve the configuration from the database.
backup the configuration of the funceble
Return the timestamp of the database
Return the content of the configuration
Check if the function is present in the py funceble configuration
Retrieve the information from the database
Backup this user s account to a JSON file.
Checks if the user is in the database
Check if the time is older than the time in the database
Get the expiration date
Reads the travis permissions for the build directory.
Calls the py funceble command and prints it to the console
lookup function for ns lookup
Return the whois data for the given domain or None if the domain is none
Get a URL from the funceble
Check if the domain extension is in the configuration and return the extension if not in the configuration
Returns the current object s attribute if it exists otherwise raises a runtime error.
Yields the paths of the standard library files.
Yield standard package names.
Yield the line numbers of the unused import.
Yield the line number and the name of the unused import.
Yield the line numbers of the import that is used in the given messages.
Yields the line number and the module name of an undefined name.
Yield the line numbers of the unused variable names in the messages.
Yield the first line number of each message s key in the source.
Check if source is a string and return a list of error messages if the string is not
Extracts the package name from the line
Return True if the line starts a multiline statement.
Return True if the symbol is a multi - line statement.
Filter out unused imports.
Splits the line up by the line ending and returns the new line with the new line
Convert a list of messages into a list of messages by line.
filter star imports
Filter out duplicate line numbers and marked line numbers.
Check if dict entry has key.
Returns True if the value is a string or a regular expression
Yields the line numbers of the source.
Filter lines in source that are not in marked lines.
Returns the indentation of the line.
Returns the end of the line after the last non whitespace character.
Removes unused variables from source if they are used in code.
Return a set of strings split by comma separated values.
Check if a file is a file.
Determine if a file should be considered an exclude file.
Reads a obtain lease response payload from the input stream.
Write a obtain lease response payload to the specified stream.
Write this request payload to the given stream.
Reads the response payload from the input stream.
Create a new name for the given value and type.
Read the key format value from the specified file - like object stream.
Overrides the standard library write method to force the write operation to the underlying file - like
Read application specific information from a stream.
Write the application specific information to the stream.
Create application specific information.
Reads the KMIP value from the specified input stream.
Write the derivation data to the specified stream.
Reads the KMIP message from the input stream.
Write this request payload to the specified output stream.
Reads the response payload from the specified stream.
Writes the message payload to the specified stream.
Write this message to a file - like object stream.
Reads the signature verify response payload from the input stream.
Build an error response.
Process a template attribute value.
Get attribute values from a managed object.
Set attributes on a managed object.
Set attribute on a managed object.
Returns True if the given policy is allowed for the given operation.
Write the message to the specified stream.
Create an object of the specified type.
Set the setting to the given value.
Loads the settings from the specified configuration file.
Converts a string parameter into a bitstring based on the specified dialect.
Convert the result value to a cryptographic usage mask.
Read the value from the stream.
Writes this integer to the underlying file - like object.
Check that the value is an integer and is not less than or equal to long integer.
Reads the value of the integer from the given stream.
Writes the integer to an hexadecimal file.
Validates that the value is an integer and that the value is a string.
Checks that the value is an instance of enumeration. enum and that the value is a
Read the value from the input stream.
\ Writes the value of this node.
Write boolean value.
Validates that the value is a boolean.
Read the interval from the specified stream.
Validates the value of the interval and raises an error if it is not an integer.
Validate the cryptographic field value.
Check if the field value is valid.
Checks that the value is a valid type.
Convert an attribute name to a tag.
Convert an attribute tag to a name.
Returns a bit mask from the given sepations.
Get enumeration from bit mask.
Determine if potential mask is a bit mask of an enumeration.
Writes the attributes to a file - like object.
Read a key pair response from the input buffer.
Write the response payload to the specified output buffer.
Read the attribute list request from the input buffer.
Writes the list of attributes to the output buffer.
Write the attribute list response to the specified output buffer.
Returns a list of all json files in the directory p
Initializes tracking structures.
Get the certificate from the connection.
Get the extended key usage from a certificate.
Get the common names from a certificate.
Get the client identity from a certificate.
Reads the specified message from the specified file - like object.
Write the message payload to the specified output buffer.
Reads a response payload from the given file - like object.
Write the response payload to the specified output buffer.
Returns the string representation of an object.
Reads the response payload from the input stream.
Writes the specified message to the specified output buffer.
Returns True if attribute is supported by this rule set.
Returns True if the given attribute is deprecated in this rule set.
Returns true if the given attribute is applicable to the given object type.
Returns True if the given attribute is multiple instances permitted.
Reads a KMIP response from the input stream.
Write this check response to the specified stream.
Reads the attribute reference from the input buffer.
Writes this attribute to the specified output buffer.
Reads an attribute from the model.
Writes the attributes to the stream.
Read the message from the input stream.
Writes this instance s nonce to the specified stream.
Reads the username and password from the input stream.
Writes the username and password to the specified stream.
Write this device to a file - like object stream.
Reads the credential from the input stream.
Write the credential to the specified stream.
Read a message from the input stream.
Write the message to the specified stream.
Write this key wrapping data to the specified stream.
Reads the key wrapping specification from the input stream.
Write this key wrapping specification to the specified stream.
Read the extension information from the specified stream.
Write this extension information to the specified file - like object.
Read the revocation reason from a stream.
Writes the revocation message to the stream.
Check that the revocation code is a string and that the revocation message is a string
Reads the object type and attributes from the input buffer.
Writes the object to the specified output buffer.
Writes the given message to the specified output buffer.
Reads a component component component component component component from the input buffer.
Writes this component s profile information to the given output buffer.
Writes the given buffer to the output buffer.
Shuts down the socket and the policy.
Writes this field to the specified output buffer.
Read the response payload from the input buffer.
Write the results of this response to the specified output buffer.
Create RSA private key
Reads a response payload from the specified stream.
Write the response payload to the specified stream.
Reads the usage allocation request from the input stream.
Converts a protocol version number to amip version number.
Reads the component tag from the input stream.
Writes this component to the specified stream.
Read the authentication from the input stream.
Write this authentication to the specified stream.
Read the component of the poll request from the input stream.
Read certificate from the specified file - like object stream.
Write the certificate type and value to the stream.
Read a response payload from the input stream.
Write this KMIP message to the specified stream.
Perform the handshake and then close the connection.
Read a KMIP response from the input stream.
Check if the user s profile is supported by the given authentication suite.
Get one or more attributes by uuid and attribute names
Returns the attribute list of the item with the given uid.
Send a query to the server and process the results.
Opens the connection.
Close the proxy connection.
Registers the given object as a managed object.
Get one or more attributes
Activates the service and sets its status to success or failure.
Build cryptographic parameters.
Builds the encryption key information from the given value.
Builds the mac signature key information
Builds a cobjects. key wrapping specification from a value dictionary.
Build the common attributes of the type for a given operation policy.
Builds the attribute name for this type.
Read the query request payload from the input buffer.
Write the message to the output buffer.
Reads the attributes response payload from the input buffer.
Writes this response payload to the specified output buffer.
Get a single entry point by name
get group by name
Return a list of all distribution points in a specific group.
Load the object from the specified module.
Create an entry point from an entry point string.
Generate a controller file.
rewrite a file and copy it to a new location.
Check if the URL is the same as the input field.
Encode something with the secret key.
Decode something to a string.
Returns an absolute URL for the given endpoint and values.
Signin a user to the session.
Returns the current user if it exists in the session else returns none
Create a new Flask application.
Write a dataframe to a CSV file.
Reads a CSV file and returns a Pandas dataframe.
Serialize dataframe according to data type id.
Deserialize a string into a dataframe.
Returns the contents of the URL at the specified location.
Return the contents of the intermediate dataset.
Read the intermediate data in the workspace as a binary string.
Read the intermediate dataset contents as text.
Deserializes the object to a dataframe.
Get intermediate dataset.
Get an experiment in a workspace.
Get a workspace s datasets
Get a single dataset in a workspace
Find the names of the global variables in the code
Make a copy of this element
Look up color in a color string.
Draw the image using the specified cr.
cubic bernstein extrema
cubic bernstein equation
Build the choices of the tree.
Initializes the cache for the given string.
empty the cache
Returns the value of the cache entry with the specified name and key.
Updates the value of an entry in the cache.
Set the value of a cache entry.
Initialize the page context
Resolve the given tree alias.
current app is admin
Recursively calculate item depth.
Get the current item in the tree by its alias
Resolve the URL for the given item in the site etree.
Initialize the tree with the given context.
Get the value of the current page attr in the tree.
Returns the level of the ancestor of current item.
Checks if the current request user has all the required permissions
Update a tree with the contents of alias and the contents of sitetree.
Render the children of a given navigation type
Get the list of children of the given item.
update has children
Filter items by navigation type
Get the ancestor item of the given tree alias and base item.
climber the given tree alias with the given base item.
Resolve a variable in the current page context.
Parse the contents of a statement tree.
Parse the children of a statement tree.
Parse the contents of a template tree and return the root node of the tree.
Render a given context with a given tree of items using a given template.
Create a new template instance for the given tag token.
Return the model url name for a given nfo and page.
Registers the given tree admin as a registered admin. site. register.
Redirect handler function that returns a response with a redirect after the specified path.
Returns an HTTP response redirect to the URL specified in the request.
Overrides the default add function to redirect to the add view when the object is added.
Redirect to the change view for the given object.
Overrides get form to add a choice field.
get tree by tree id
Moves an item in a tree
If the parent is not None then set the parent as the previous parent.
Return the urls for the admin site.
Dump a tree to a text file.
Import app s module and try to import it return none if module is not found
Get a model class from a settings. py file.
Create a new configuration from a given mapping.
Create an instance from a Python file.
Create a mapping from a TOML file.
Construct an instance from its name and instance name.
Create an http headers for a new span.
Returns the current context of the span.
Start the service.
Stop the trace and update the binary logging context.
Update the annotations of the logging context.
Add an sa binary annotation.
Override span name.
Make a copy of the endpoint with a new service name.
Build a span for this endpoint.
Encode a list of spans into a string
Create a protobuf span
Converts a hex string to a binary string.
Get the protobuf span of a given kind.
Convert endpoint to zipkin. pb2. endpoint.
Convert annotations to protobuf annotations.
Create an annotation.
Create a binary annotation.
Create the endpoint with the given port and service name.
Create a copy of the endpoint with a new service name.
Build a list of annotations.
Build a list of binary annotations.
Create a span
Convert a span to a bytes object.
Encodes a list of args into a byte string.
Detect the span version and the encoding of the message.
Convert a list of spans from one encoding to another.
push zipkin attr to thread local stack
Encode a span to bytes.
create json endpoint based on endpoint type
Encode a list of spans into a protobuf span.
Decode a list of spans into a list of string.
Returns the endpoint object corresponding to the givenport endpoint object.
Decode org. jsonschema annotations to python annotations
Converts the endpoint from protein binary annotations. Returns a tuple of tags local endpoint and remote
Decodes a Thrift span into a span object.
Convert trace id to string.
Convert unsigned long to lower hex string.
Write a hex long value.
date fixup pre processor.
Sets the value of a tag in a m bank set transaction.
match the iph id to the tag s slug if it exists
Given a set of transactions and a tag dict return the tag dict with the transactions matching the
Join a string with a single strip.
If the response contains a text return it. If the response contains a text return it.
Prints a warning after the specified time until the specified time.
Get bot info
Get bots.
Reads the next term from the packet buffer. Returns the term and the decoded term.
Encode message and write it to the file.
Decodes a string into a term and its unused data.
Encodes a string according to the specified compressed flag.
Add a source address to the socket.
Sends the specified number of pending messages and refresh the queue if the message is finished.
Set a callback function for the remote service.
Clear the local and remote services and stop the server thread.
Clear all local services
Search for services in the remote service cache.
Create soap message
Discover the loglevel of a given scope.
Returns the item manager that this instance is tagged with.
Get all child relations of a given model.
Get all child m2m relations
Saves the object to the clusterable database.
Returns a list of all unique checks and their associated error messages.
Returns True if all forms in the formset have changed.
Create a new address with a valid checksum.
Generate the checksum of this transaction.
Prompts the user to input a random string.
Returns the string representation of the index in the dictionary.
Get the key for an address.
Create an iterator for the key.
Create a new Sponge instance with the given index
In - place absorption of a sequence of trits.
Add one or more trits to the end of the state.
Transform the state to the truth table.
Adds two words of the same length to the left and right of a single word.
Return a list of the trits given an int.
Adds the left and right string up to res if res < num or res > num
Return the full add of the two strings
Prints the input of the given seed and prints it to standard output.
Finds the transactions for the provided bundles and addresses.
Convert this adapter into a transaction.
Resolve a URI to a base adapter.
Send a request to this node.
Log a message to self. logger if self. logger is set.
Send an http request.
Interpret the response.
Add digest to this node.
Get the address of the digest if it exists otherwise raise a value error.
Create an iterator that yields each address in the network.
Create an address from a digest.
Generate an address based on the hash of the value of the key iterator.
Returns a list of transaction objects.
Yields the addresses used by the given adapter.
Get bundles from a list of transaction hashes.
Check if the given encoding is a supported codec.
Return the codec info.
Encodes the given input.
Decode a string to a sequence of bytes.
Finds addresses in the network.
Add a route to a specific command.
Create an instance from the trytes of a given tryte string.
Returns a json compatible version of this instance.
Get the trytes of the signature validation.
Sets the new is confirmed flag for all transactions in this transaction.
Returns a list of all the messages in this transaction.
Returns the list of transaction groups the last transaction is in.
Discovers all commands in the given package.
Execute a request.
Applies a filter to a value.
Returns the URL for the specified job.
Add validator to self. errors and stop iteration.
Check if the next validation step is valid.
Create the validator for the bundle.
Get the signature errors for the bundle at the current position.
Get the error message for a group signature.
Traverses the transaction bundle of the given transaction.
Starts an interactive python script.
Generate a random string of the specified length.
Return the digest of the hash of the fragment.
Sign input transactions.
Pretty - print the string representation of this object.
In - place absorption of a trit hash.
Update the exception context with the given string.
security level.
Increments the legacy tag of this object.
Return the tag of the transaction.
Add a transaction to the list of transactions.
Finalize the transaction.
Sign the inputs of the transaction.
Creates the input transactions for the given addy.
Convert value to standard unit.
Decompress G1 compressed value.
Return the inverse of a prime field.
Load a configuration from a JSON file.
Splits the description into a list of strings
Return the list of keys of the categories in the dict.
Returns a random string from the given component.
Load the timescale for the given name from the builtin timescale table.
Create a new decor from an image.
Returns a string representation of the table in CSV format.
Returns the maximum number of rows in the list that are not empty
Returns a textual representation of the specified decor.
Plot the plot of the elements in the list.
Convenience wrapper around the Scratch component.
Process a row of text according to the given columns.
Parse text into a list of items according to canstrat rules.
Return the unique entries in the table.
Computes intervals from a list of values and basis components.
Clean longitudinal data.
Read a PDBrel file and return an interval object.
Read an interval from a canstrat file.
Return a copy of the log.
Export the dataset to a CSV file.
Returns a string representation of the section in LAS3 format.
Finds all incongruities that overlap the given index.
Find gaps in the corpus.
Prune the strip to get at most n entries where n is the number of entries
Calculate the anneal of this str strip.
Fills this component with any existing gaps.
Return the union of self and other.
Intersect with another interval.
Merge overlapping segments into a new segment.
Invert the elements of this list. Invert the elements of the list.
Crop the list to the given extent.
Run a list of tests and return a list of results.
Tries to get a field from the field name using the same args and kwargs as the
Performs a request to the API to get a list of jobs.
Parses a HCL string and returns it as a string.
Update a token
Performs a request to the API and returns the JSON response.
Send a request to fail a deployment.
Pause a deployment.
Drain a node.
Drain node with the specified spec.
Get the details of a node identified by id
Returns a list of files.
Return the stream of the document at the specified offset.
Gets the stat for a file or directory.
Returns the agent s JSON for the given address.
Updates the server status code for one or more addresses.
Force leave a node
Returns a list of nodes with the given prefix or all nodes with the given prefix.
Gets the json of the user s logged in users.
Returns a list of all namespaces that match the specified prefix or all namespaces that match the specified
Register a new job.
Create a new plan for a job.
Send a request to the API to dispatch a job.
Revert a job.
Revert a stable job.
Deregister a job.
Performs a get configuration request and returns the configuration as a JSON object.
Delete a peer.
Returns a list of deployments that match the given prefix.
Get a random object of a given type.
Returns a random object of the specified type.
Get a random string polyg slot attack.
Safely join the characters in buf into a single string.
static file with custom html content
Start the fuzzed request and send the response.
Spawn a subprocess and finish it with keyboard interrupt
Get the output of the command.
Start a new thread and wait until the process finish.
Terminate the child process and return its exit code.
Start a new PJF worker
Executes the command and returns the result.
Returns a random string of the given length.
Build the string representation of the current values.
Returns the string representation of the query.
Generates a random value based on the values specified in the constructor.
Return a string representation of the optimizer.
build the string to be used as a reference
Build the star.
Shuts down the subprocess.
Spawn a new process and monitor it.
Start the monitor.
Generate a random float between a and b.
Returns the fuzzed value
get fuzzed string
Handler for SIGTERM.
Quits the application.
Pause a running command.
Resumes the paused state.
Stop a running command.
Restart a running command.
Returns a list of skype events for this endpoint.
Set the user s m Access token.
Set a user s avatar
Returns meta data for url
Add a contact to this skype
Fetch skype user by id
Return a list of bots of this skype.
Get a user from skype by id
Returns a list of skype user objects matching the given query.
Returns a list of skype requests.
Instantiate an object from raw data.
Merge this configuration with another.
Merge an object into the cache. If the object already exists in the cache the object is
Reads the token from the token file
Writes the token to a file.
Verifies that the given auth string is valid.
Refresh skype token
Get user id
Verifies and writes a token to file.
sync self. endpoints and self. endpoints
Check if a user is logged in
Returns a token or None if the token doesn t exist.
return a string representation of the configuration for this instance
Ping this node
Use this method to fetch the most recent chats.
Use this method to merge a single chat.
Create a chat
Extract the user id from a URL.
Extract chat id from url
Decode a string if it is a byte string and replace it with a str.
Detect format of text with given handlers.
Parse the given text using the specified format handler.
Return a dictionary representation of the resource.
Load yaml file from given file - like object.
Export the metadata to a file.
Export the metadata to a file.
Match the pattern to the cache string.
Return a list of all items in the string regular expression.
Return a list of sublists i. e. all elements that match the given pattern.
Convert the given string to a newstart.
Return the list of arguments of the function.
Returns a list of lists of arguments that match the pattern.
Takes a list of strings and plant them into a trie.
Takes a trie dictionary of strings and returns a new string if the string is not in
Raise index error if key is not a member of self. span.
Insert string at index.
Splits a character into two parts. The first part is the character and the second is
Returns the list of subspans of the given type.
Shrink the type by rmstart and rmstop.
Insert a new index into the end of the list of spans.
Returns the current slice level of the type.
Get the shadow of the token.
Make a copy of the string with the same number of subspans as self. sub
Convert type to spans.
Pretty - print the object as a string.
Returns a list of parameter tuples corresponding to the type and subspans of the string.
Returns a list of parser functions that parse the input string.
Returns a list of template strings corresponding to the subspans of the string.
Returns a list of wiki links corresponding to the str type and all of its subspans
Returns a list of comment objects corresponding to the element s type and its subspans.
Return the list of external links.
Return the list of tables in this table.
Subspans of the given type.
Returns the list of ancestors of the specified type.
Returns the parent of type if it exists otherwise none.
Returns the mode of the given list.
Returns the argument with the given name from the given iterable.
Remove the first occurrence of dup args.
Get the optional argument by its name.
Check if the function has an argument with the given name and value.
Remove the argument with the given name.
Returns the string representation of a CRS code
Find and return the first matching ellipsname in the globals dictionary of the specified crst
Reads a string from a URL and returns it as a CRS object.
Read text from a file.
Converts an epsg code into a CRS
Returns a CRS object from an ESRI code
Converts a CRS code into a GeoVector
Convert a text string into a CCS or ESRI code string.
Write the record to the given file - like object out.
Read a Vlr from a data stream.
Returns a list of geo tiff keys from the vlrlist.
Returns a list of geotiff keys.
Get signedness for extra dim style 2. 0
Try to convert type str to extra dim id style 1 [ type str ] except key error
Create a new point record from another point record.
Copy fields from another record.
Appends all zeros if the array is too small.
All dimensions names.
Instantiate a new instance of this class with zero data and point format.
Read a point from a file - like object stream.
Create a point from an compressed buffer.
Returns a string representing the x - axis of the image.
Returns the scale and offset of the y - axis of the image.
Return scale and offset of dimension.
Add an extra dim to the data.
Writes point data to a file - like object.
Writes the sequence to a file.
Given a point format definition and a dictionary of format names and a dictionary of data types convert
Builds the point formats dtypes for the given point formats dimensions.
Returns the string representation of a numpy dtype to a point format.
Returns the minimum file version of a point format.
Checks if the given point format id in the given file version is compatible with the given
Extracts the specified vlr type from this instance.
Reads a vlrlist from the given data stream.
Determine if a list of las files have the same point format id.
Determine if a list of las files have the same dtype.
Raise a pylas error if the file signature is different from the signature of the file
Read a header from the header stream.
Reads the value of the Vlr at the start position and returns it.
Read a point record from the points file.
Reads the point data from the compressed file.
Reads the internal waveform packet.
Reads the first evlr value from the event stream.
Print a warning if the stream is not at the expected position.
Create a las data object from a las header.
Merge a list of las into a single file.
Write the las to a file and return the file s contents.
Return a string representation of the date.
Set the creation year and the creation day of the given date.
Returns an array of min values for each point in the mesh.
Set the min and max values of the time series.
Returns an array of the max x y z values.
Set the maximum value of the vector.
Returns a numpy array of scale values for this scale.
Return a numpy array of the x y and z offsets of the mesh.
Return the major and minor version from the specified file - like object stream.
Convert the old header to a new header class.
Unpack an array into a specified bitstring using the least significant bit of the bitstring
Fills out the dimensions that have been completely lost from the given point fmt in.
dict of sub fields for this query.
Returns the size of extra bytes of the array.
Return True if this dimension has a waveform packet.
main entry point for the demo script.
Calculate the checksum of a command.
Format and print hexdump of the given list of hex strings.
Verify the checksum of the output string.
Return a list of bit numbers in r where the bit numbers in r are expected length +
Generates the query string from the given command.
Connect and disarm the given satel to the given host and port.
Connect to the remote server.
Start monitoring the device.
Disarm the given partition list.
Clear alarm.
Set the output of a command.
Send a query to keep the connection alive.
monitor the status of the device
Close the writer.
Remove this user from the database.
Try to guess the type of the given path.
get file id by path
Get notebook model from file.
Given a record and a content string compute the notebook model from the database.
Gets a directory for the given path and content. If the directory does not exist it
Given a list of file records convert them to one or more notebooks.
Return the model directory corresponding to the given record and content.
Return the file model for the given record and the content of the given file.
Save notebook to file.
Saves a file to the database. Returns a none if the file does not exist.
Renames a file or directory.
Delete file or directory.
Create a new user in the database.
Purge a user from the database.
Create a directory in the database.
Check if a user is in a directory.
Delete a directory.
Check if a directory exists in the database.
Return the list of files in a directory.
Return a list of dict no content for each directory in the database.
Find files by user id and parent name.
Select file by user id and api path
Returns the default fields of the file.
Fetch a file and return its content as a dict.
Get a file.
Get a file by its id
Check if a file exists in the database
Rename a directory.
Save a file to the database.
Purges all checkpoints for a given user.
Encrypt the content of a row of a table.
re encrypt user content
Derive a single fernet key.
Get the name of a column like clause.
Return a dictionary with the content of fields in row.
Return a dictionary with the content of fields in row.
Create notebook checkpoint.
Create a checkpoint of a file.
Delete a checkpoint.
Get the content of a checkpoint.
Returns a list of checkpoints for the specified path.
Rename all checkpoints in the database.
Delete all checkpoints.
Purge all checkpoints from the database.
Resolve a path to a manager.
Applies a prefix to the model.
Sets the manager names to the new values
Get the model at the specified path.
Normalizes an api path.
Splits a file path into its api directory and its name.
Return a base64 - encoded base64 - encoded string from a byte string.
Read a base64 string from a file - like object.
Decode a string from a base64 - encoded string.
Decode base64 content.
Returns a list of all the directories in the given path that have the same path as the
create user on startup = bool
Splits a list of model names into a list of model names and a list of files
Recursively walk a directory tree.
Walks a directory tree yielding file names.
Walks a directory tree yielding the content of each file.
Re - encrypt a single user
Remove encrypts for all users in the database.
Use this function to re encrypt a single user
Yields alembic ini file in a temporary directory.
Upgrade alembic ini file to a new version.
Sanitize a block by converting it to internal value.
Queue an instance of a certain type.
Loads instances of a certain type.
Insert instance into embed type.
Loads data from the database.
Validates the given data using the given theme manager.
Returns a response with the admin page.
Returns a JSON representation of the object.
hide authenticated fields
Returns a list of excluded fields from the context.
Update version and preview id if version is not none and preview id is not none.
Returns the publishable queryset.
Returns a publishable list filtered by the request query params.
Returns the attribute of the boolean field if attr else bool.
Check that the widget has a valid ID and it has a valid name and a valid template
Validate that a zone has a valid ID or name.
Check if an id is a valid uuid
Returns a string of the permissions for this group if it exists or if the user is a
Add or remove permissions for a group.
validator function for author data.
Save the zone to the database.
Returns a copy of the object s data.
Prepares the data for this object and returns it.
Render the data using the template.
Get the integration settings.
Retrieve list of pages for a given user and query.
Get integration settings
Updates the current settings of the integration.
Signup form.
Create an HTML tag from a list of elements.
Render zone widget
Saves the image of the featured
Update the query queryset of article objects with the parent s id.
Get the extension of the image.
Returns the media url for this image.
Saves the thumbnail if new data is available.
Saves a thumbnail of the given image.
Connect to MySQL database.
Get the bandwith limited stream.
Read a given number of bytes.
Consume a given amount of time for the given request token. If the request token is not
Process the current scheduled consumption of the given token.
Calculate the projected rate.
Calculates the moving average rate for the given time at consumption.
Wait until the transfer is done and raise an exception if it doesn t
Get callbacks for a transfer future.
Get a copy of a dict with whitelisted keys
Remove num from the queue. Raises runtime error if the queue is full.
Finalize the operation.
Check if a file is a special file.
Acquires the resource associated with the given tag. Raises an exception if the tag
Release the acquire token for the specified tag and acquire token.
adjusts the file size for a given number of parts
Queue a file - like object as a transfer task.
Return the download manager class that is compatible with the given transfer future.
Appends the specified data to the specified offset in the specified file object.
Request the next writes to the heap. Returns a list of writes at the given offset.
Returns True if fileobj is seekable and False otherwise.
Send a shutdown request to the device.
Cancels the current transfer request.
Waits until all tracked transferators have completed.
Wrap the given data into a file - like object.
Return the upload manager that is compatible with the given transfer future.
Set the exception of the transfer.
Set the result of the operation.
Set the exception of the future.
Waits until the task is done. Returns the result of the task.
Cancels the announce and sets the exception and status.
Submit the given task to the given executor.
Add a done callback.
Add a failure cleanup function to the cleanups list.
This method is called when the announce is done.
Upload a file to a bucket.
Download a file from S3
Evaluate a step decorator.
Refactor step function.
Decorates a step decorator with the given function as the first argument of the decorator.
Return the diff between old text and new text by moving a parameter from idx to new text
Update an existing membership
Delete a membership from the server
Gets the cat fact from the url and returns it as a string
Posts a new message to the room.
Delete a membership
Check if the given URL is a valid URL.
Checks if the given string is a web URL.
Opens a local file. Returns a file - like object.
Check if o is one of the acceptable types.
Create a dictionary from a list of dictionaries with values.
Checks the response code to see if it matches the expected response code.
Convert a JSON string into a dict.
Parse a datetime. datetime object from a string.
Create a new team.
Update an existing room.
Delete a room
Get a list of items.
Returns the created date of the object or none if the object was not created.
Get access token using environment variables.
Update a webhook.
Delete a webhook
Set the wait on rate limit
Update the headers of the request
Returns the absolute url of the given URL.
Performs a GET request and parses the JSON response.
Get all pages of a given URL.
Performs an HTTP PUT request.
Performs a HTTP DELETE request to the specified URL.
Create a new JWT token.
Delete a message
Get a person by id
Delete a person
Returns an object of the specified type with the given data.
Fetches a list of items from the API endpoint.
Create an object of the specified type.
Update a team.
Delete a team
Converts a dictionary to a list of tuples.
Returns the last activity of the webex teams.
Posts a new message to the events service.
Gets a tunnel from Nyll public api.
Delete webhooks with specified name.
Create a ng." webhooks. api. webhooks. create
Delete webhooks with the given name
Reads telegram from the given serial handle.
Reads the telegram from the given serial connection in the given queue.
Create a dsmr protocol.
Create a dsmr reader
create tcp dsmr reader
Handle data received from Telegram API.
Log the connection lost exception.
Handle the given telegram.
Parses the given telegram data.
Retrieve the version of a given file.
Given a list of spec strings ensure that the first element in the list matches the second element
Find packages in a directory.
Runs the given command and returns its output.
Returns a list of files for the given data specs and existing files.
Return the package data for the specified root.
Given a glob pattern return a regular expression that matches the pattern.
Splits a path into two parts. The first is the head and the second is the
Translate a glob pattern into a regular expression.
Joins a list of translated strings into a single string
Given a glob pattern return the glob part of the string that matches the regular expression pat.
truncate the given table and execute sql if serial key is set.
Convenience method to write a table to the database.
Add indexes to a table.
Write triggers to a table.
Write constraints to a table.
Writes the contents of a table to a file.
Writes the indexes for the given table to the file.
Writes the constraints to the file.
Writes the triggers from the specified table to the output file.
Returns the number of items in the queue.
Enqueues the given jsonified data to the database.
Starts a new task in the queue.
Builds the extra predicate for the query.
Serialize an object to an ISO - 8601 string if it has a string representation of the
Connect to MySQL and close the connection.
Executes a query and returns the result or none if the number of rows is greater than
Creates a connection to the specified database.
Run the benchmark.
Connects to the given task pool. Returns the connection to the task pool.
Looks up the value of the specified errno and prints it. If the errno is not found
Return the total number of connections and fairies.
Handle a potential connection failure.
Join a simple expression.
Given a table name and an optional set of parameters update the table name with the given fields
Connect to the specified database and return the query result.
Remove this table from the database.
Start a step by name.
Stop a step by name.
Parse the steps in raw steps.
Close the socket and wait for it to finish.
Close the socket if required.
Connect to the websocket.
This method is called when a message is received from the websocket.
Stop the timer for the connection and pong logs the debug log.
Send a ping to the Pong server.
Check if pong has been received.
Sends a request to the websocket.
Unpause the paused task.
Handles system events.
Handle log errors.
This method is called when a data message is received from the client.
Resub up to a certain number of qubits in the channel configuration.
Handles authentication of a new channel
Handle configuration changes.
Update the last update timestamp of a channel.
Reset the connection and send the new data to the server.
Return the candles for the specified pair.
Configures bitfinex.
Subscribes to a ticker pair.
Unsubscribe from a ticker pair.
Subscribes to an order book by pair.
Unsubscribe from an order book.
Subscribes to a raw order book
Unsubscribe from a raw order book
Subscribes to a specific trades pair.
Unsubscribe from a trades pair.
Subscribes to the specified pair of candles.
Unsubscribe from a set of candles
Authenticate the API key and secret.
Cancel an order.
Called when a command is received.
Function called when a device command is received.
Called when a message is received from the client.
Create a new device type
Update a device
Finds the client status of the client.
Gets a list of the user s data.
Creates a dme and returns its JSON response.
Update a schema definition
Disconnects the client and logs it out.
Called when the client connects to the broker.
Log unsupported message
Called when a device event is received.
Called when a status message is received on the device.
Called when a status message is received from the client.
Get the last event of a specific device.
Returns a list of the most recent events for the specified device uid
Makes an API call to the API and returns the response.
Initiate a request and return the JSON response.
Get the status of a device.
Close the stream.
Get the bounds of the instance at the specified coordinate.
Load a byte array.
Check if the result of the given function is equal to the number of times the function was
If application is a string load it and return the application object else return the application object.
Serve the app
Convert value to native representation.
Process an image.
Process an image.
Process an image and save it to a file.
Converts the input to a string.
Process the image of the placeholder.
Save the model instance before saving.
Updates the value of the p_" field of an instance. If the field is not
Remove the sized image centerpoint click django admin field if kwargs are given.
Returns the value of the field as a string.
Auto - discover INSTALLED_APPS. py modules and fail silently when not present.
Remove an attribute from the sized image registry.
Unregisters the filter registry for the given attribute name.
Get the URL of the image.
Build the filters and sizers for this image
Returns the full root folder of the image
Returns the path of the image sized root folder.
get sized root folder
Delete matching files from storage.
Preprocess an image.
Preprocess an image string.
Retrieve an image from the storage.
Save the image to disk.
Returns a string representation of the Palois Palois Palois
Creates acopy of the given image and saves it on the given storage.
Render the image to a string.
Returns the context to pass to the template widget rendering.
Build a set of attrs from the given base attrs.
Returns the path to the resized file.
Get the full path to an image
Validate that a list of sizes is a set of strings.
Get URL from image key
Returns the size of the image set with the specified key
Format the instruction.
Format a function body as a string.
Decode the bytecode to a byte string.
Decode a module fragment into a module fragment.
Connects to the server and returns a task that will run when the connection is made.
Read the response and return the parse agi result.
Parses the line and returns the agi result.
Check agi code response.
Resets the uid and generator attributes of all instances.
Returns the class name prefix and uid of all instances of the class.
Get the metadata for the specified path in the system.
Get primary keys of a model.
Deserializes the value into related model.
Get the existing instance of the model instance.
Get declared fields
Load the given data into the model.
Split model kwargs and association attrs
List available snapshots.
Restore an application to its latest state.
Create a new epoch end index.
Preprocess the given text according to the rules of the text.
Apply a function to data in parallel.
Process the text.
Process text in parallel.
Calculate document length stats.
Returns a pandas. dataframe of word counts sorted by frequency.
Map a type name to a new type name.
Parse the interfaces into a dictionary of type information.
The inverse of this node. Returns the inverse inverse inverse of the node.
Update an existing write with a rollback.
Make a copy of this instance.
Make a copy of this node. Returns a new copy of this node.
Return True if self and other have the same order.
Invert an object.
Clears the matrix and invm.
Moves a node to the end of a given key. If last = True then the
Write text to a named temporary file.
Merge args into config.
Load address book objects.
Create a new contact for the selected address book.
Displays the names of the vcard and returns a list of the names of the v
subcommand for phone numbers
CLI action of vcard list.
Modify a contact with a new user input.
Remove subcommand for selected vcard.
Runs the editor for the selected vcard and returns the path to the source file.
Handles the merge subcommand of the vcard list.
Get action by its alias.
Creates a new contact.
Instantiate an address from a file.
Construct a contact from a user input.
Create a new contact from an existing contact with a new user input.
Returns the names of the part of the list
Adds one or more categories to the vcard.
Parse a type value.
Joins a list of items to a string using the specified delimiter.
Try to convert string to datetime. strptime except value error.
Compare two uids.
Returns a generator of contact objects that match a regular expression
Searches through all contacts that match a regular expression
Searches the list of contacts that match the given query.
Searches the database using the specified search method.
Returns a dict of uid - > short uid
Returns the short label of the given uid.
Returns a generator of files in the vcard directory.
Find vcard files and load them.
Returns the name of the abook with the given name.
Return the available archs.
Return the available architectures.
Try to guess the type of the given kwargs.
Replace model filters order by limit and select with kwargs.
Returns the first entry in the result set or None if no such entry is found.
Delete one or more referenced records.
Returns a prefix lua for the given index.
Estimate a work lua based on the given index and prefix.
get the number of elements in the zcard
return the connection string for an object
Returns the full text representation of the given value.
Add an object to the database.
Returns the value of the field with the given pk.
Emulate lua.
Saves the object to the database.
Delete the object
Get a set of instances by their IDs
Opens a new sem open file. Returns the handle to the new sem open handle.
Send work back the result of work.
Add work items from pending work items to queue.
Ensure the executor is running.
Start the server process.
Try to duplicate a file descriptor. If the fd is greater than the current version of the
wait until all pending work items have completed
Prepares data for processing.
Close all the given fds in the given string.
Recursively terminate a process without psutil.
Recursively terminate a process.
Return the exit codes of all processes that have an exit code.
Format a list of exit codes.
Ensure the process is running.
Return a string representation of the event processor.
split a string into a list of arguments
Get the stack of a function f t and the line number of the function s stack.
Runs a list of hooks.
Forget the previous stack frame
Evaluate the given argument and return the error value or None if it s not a valid int
Runs all the commands in the current debugger while the core is running.
Add the start of the given command file to the queue.
Return the next token in the string at the given position.
Prints a message to the console if abort on error.
Reads the next line of the input and returns the line number.
Close the input and output files.
Disassemble a message into a function call.
Count frames in a given frame.
Return the name of the function that is called by frame. f back.
Print the stack trace of the given object. If count is none or count is none print
Return the value of a sub - command by its prefix.
Returns a short help string for the specified subcmd.
Add a subcmd callback.
Run a sub - command with an optional argument.
Show the list of commands for a given category.
Returns True if answer was found. Otherwise returns False.
Finds the frame where the function is debugged.
Try to eval arg and return its integer value. If cmdname is not specified then its
Set the boolean value of an object.
Convenience function to set the value of an int.
Show the value of obj. debugger. settings.
Show the value of obj. name in the debugger. settings.
Show the value of the variable with the given name.
Return true if line is a statement statement.
Return True if line is a class
Raise mexcept. debugger quit when the thread is not running
Return the default background color of the term if it is a string.
Return True if the color matches the midpoint of the rgb value otherwise return False.
Return the name filename and line number of the function call signature.
Return all display strings in self. list.
return a string representation of the display.
Read a message from the socket.
Prints a debug message to the console.
self. one arg run if self. find and set debugged frame else self. one
Pretty - print an array.
lookup the name of a signal by its number
Looks up the signal object associated with the specified signal name.
Return the name of a canonic signal.
Set a replacement for the specified signal.
Check if all sigs are valid and adjust them if not.
Returns information about the specified signal.
Handles the action of the specified signal.
Set print method.
handle the signal signum and frame
Convert a file name to a module name.
Search for a file in a list of directories.
Attempt to find the specified Python script in the current Python interpreter.
Returns a list of caller. py file names for a given caller.
write a message to the output
self. core. print self. core. log self. core. log self. core
Takes a list of strings and returns a new list of strings
Close the connection.
Send the given message to the TCP socket.
complete the identifier of the given command
Adds a string to the queue of commands to be run and returns the new string.
Add frames to the ignore filter.
Return filename canonic file name for given filename.
Returns the filename.
Returns True if the tracer is started and not self. trace hook startswith self. trace hook
Return True if the step is stop here.
Set the next frame in the stack.
Print the stack trace of the given function f.
Deletes a breakpoint from the list
Delete a breakpoint by number.
Disables or disables all breakpoints.
Enables or disables a breakpoint by number.
Delete a breakpoint by line number
Opens the input.
Read a line from the input.
Prompt the user for confirmation and return the default.
Submit the given query as a future and return the new future.
Restore the original login.
Loads a module given a path relative to the module at the specified location and returns the
Yields the specified number of docs from a given client.
Writes a JSON or CSV file to a temporary file and then seeks the number of
Apply a date filter to the data in a stream.
Converts a date string to a float.
Detect the encoding of a file.
Yields lines of JSON from a file.
Converts a string from a file to utf8
Opens a CSV file in Python 2 or 3
Yields rows of a CSV file.
Applies the command line interface to the application.
Save a token for a specific domain.
Wrapper around requests. session. request. request.
Makes a HTTP DELETE request. Returns the response object.
Get the root url of a URL.
Save a token to a file.
Perform a request and return the response as a JSON string.
Perform an HTTP POST request of the specified path with the given data and content type.
Get documentation for the current client.
Perform a GET request and return the raw text of the response.
Prints result to stdout in CSV format.
Read params from input file.
Simplify a document.
Create a project with the given docs and language.
Create project with docs.
Upload project to Luminoso stream
Upload a file to an account
The main function of the script.
Make a session with a username and password.
Updates the session with the random user agent.
Perform a POST login page. Returns True if successful False if not successful.
Fetch the data for a given time period.
Prepares the page s view to be used by the view class.
Initializes the view.
Handle GET request.
return the node if the ref is set or if the node is none return the new node
Updates the list of menu links and links for this page.
Returns a list of the default handlers for this site.
return the node if a change is made
Function called when the dom has been modified.
Create a sub element of the parent widget and store it in the declaration. tag.
Initializes the widget.
Delete this web component and remove it from the cache.
Add a child to this web component. If child. widget is not none and child.
Remove a child from this web component.
Returns a generator of all widgets associated with this node and its children.
Set attribute of widget.
Updates the proxy object with the given change dict
Notifies about the change being made.
Finds nodes matching the given xpath query. Returns a list of nodes.
Create the widget if it doesn t already exist.
Clear the widget and extend the html source.
Observe the mode of all children of this block.
Observe the block and refresh its children.
Update the list of children of the current block and insert them into the new children of the
Reads the contents of the specified file with the specified path components.
Print an error message to stderr and exit with the given exit code.
Prints error message to stderr and exits with an error code.
Return the product with the given name.
Creates a new session and returns the response.
Resets the session store for the request.
Returns a stores object
Sets a new delivery system for the given store. postcode is the post code of the
Gets the menu for the given store
Adds the given item to the given variant and the given quantity.
Adds the specified number of times the given item is added to the given variant.
Adds a side to the given item
Removes an item from the specified index.
Sets the payment method for this account
Process payment request.
Make a GET request
Generic TeleSign REST API POST request
Calls the given URL with the given method and returns the response.
Append an item to the menu.
Add the exit item to the end of the list.
Draw the border of the menu.
Go to max and select.
Select the currently selected option.
Takes the old menu data from the menu data and returns a new menu object with the
Converts a string to a datetime.
Converts a datetime to a string in a column.
Apply a basic math operation to a column in a dataframe.
pd. DataFrame. groupby Cumulative sum and reset index.
Remove old cache entries.
Add an offset to the given dateobj with the given sign and unit.
Get gradients of parameters and update them with their updated values.
Returns list of training parameters.
Computes the optimization updates for a given set of parameters.
Compute the value of the first glimpse sensor.
Prepare the internal layer structure.
Computes the auto encoder and decoder by cross entropy and cross entropy.
Apply a function to each element in the dataset.
vectorize target string to given size
Log training validation and test sets.
Trains the network.
Sample from input.
Computes the alignments given the previous state and the precomputed values.
Computes the context vector of the state given the previous state and the given inputs.
Concatenates variables along an axis.
Pad dataset to given side and length.
Calculate the RMSprop metric.
Prints the elapsed time to the console.
Computes the function associated with the given data x. Returns the output of the function
invoke function to calculate new counter and save checkpoint.
Builds the variables used in the neural network loop.
Create a new neural variable node for each output step.
Compute the momentum of the given parameters using the given gradients and learning rate.
If the training flag is True then branch else branch.
Set the number of batches to skip
Load parameters from file.
Trains the network.
Runs one epoch of the network.
Runs a valid step in the given epoch.
report the given score map in the given epoch.
Returns the current train set or the current valid set depending on the data split.
Apply func to self. tensor and return the output dim.
Print the report to the logger.
Convenience method to create a new var layer.
Create variables from data.
shared the value
stack a sequence of layers and append them to the end of the sequence
stack decoders and extend them
Encodes x into the network.
Computes the value of x from the network.
Create a 2d gaussian kernel.
Registers a layer into the optimizer.
Adds new layer outputs to the training monitors.
Returns a list of all parameters.
Sets up the input and test variables.
Computes the output of the function with the given arguments and returns a list of the
Save the parameters of the network
Loads parameters from a pickle file.
Log report of the current state of the simulation.
Add new updates to the registered updates list.
Adds new training updates to the list of registered updates.
Adds one or more monitors to the registry.
Computes the norm of a list of tensors.
Dumps one element to pickle file object.
Load a string from a file - like object. cur elt is a list of strings.
Load a set of parameters from the specified file.
Decode the user state.
parser function for x credentials.
Remove params from request elements if request type is cls. access token request type.
Logs the user into the specified provider with the specified name.
Normalizes a dict so that the keys and values are of the same type.
Convert a list of items to a dict.
json qs parser
Resolve a class to a provider class.
Creates a cookie based on self. data and self. domain.
Saves the current session data to the adapter
Return the cookie value.
Returns the raw data of the object. If the object has no data None is returned.
Generate the signature for the given parts of the request.
Serializes the given value and returns the serialized string.
Returns True if the expiration time is greater than or equal to the time at which the job
Returns True if expiration time is less than seconds.
Return the string representation of the provider.
Return True if content is a binary string.
Returns the content of the response if it is a string else returns the content of the response
Retrieve bitbucket access user info.
Perform the user login
Returns the session key for the given key.
Sets the session value for the specified key.
Generate a pseudo - random md5 hash of the given secret string.
Log a message to the authomatic. core. logger.
Determine if the given status is in the given category.
Split a URL into a base and query string.
Set CORS headers on the given request.
Get app config options as a dict.
Return a readable string representation of an object.
Ensure inst is an iterable.
Returns True if a and b are close and False otherwise.
Deserializes a binary string into an audio segment.
Create an audio segment from a file.
Create an audio segment from a numpy array.
reduce self and others to string
Return the string representation of the state of the parser.
Choose front id from the list of candidate offset front ids and offset fronts corresponding to on
Get offset front id after onset sample idx
get offset front id after onset front
Match offset front id to onset front id.
Get consecutive and overlapping fronts
Return the front id from a given index.
Get ids one at a time in the list of onset fronts.
Get the corresponding offsets for each row in the table.
Remove overlaps in a given segmentation mask from a list of fidxs and sidxs
Remove fronts that are too small.
Merge adjacent segments
Count the number of masks that have a certain number of different values.
Downsample one or the other.
Calculate the asa task.
Apply a butterworth bandpass filter to the data.
Apply a butterworth lowpass filter to the data.
Convert a list of outcomes into a tf input matrix.
Expand and standardize the dataset.
ignore order of elements in a and b
Load the audit confusion matrices from a file.
Convert a list of vectors to a tf input string.
Update the index url from the pip config files.
Autodetect files.
Handle an error.
Return information about the stream.
Opens a stream of the object.
Return the XML representation of a child of this element.
Return the next sibling of this element.
Return the previous sibling of this element.
Set the name of the vector. Returns True if the name was set False otherwise.
Return True if value is set to False otherwise.
Append a child node to this node.
Prepend a child to the end of this element.
Append a new element to the end of this list.
Make a copy of this element with the same contents as elem. e.
Remove a child from the node.
Return the number of found LSL resolver results.
Takes a word and returns a list of tokens in the form of a list of tokens
Perform autocomplete on an edge ngram.
Compute the edge ngrams of a given token.
Iterate through the processors in the pipe.
Imap a function onto an iterable while preserving the order of the results.
Make fuzzys
Perform the fuzzy on the given word.
Perform fuzzy index on a word.
extend results extrapoling relations.
Prints the help for the specified command.
Prints the information of the database.
Display the value of a key in the database.
Hash the given latitude and longitude
Index document by id.
Get the best score of a word
Convenience function to send a message to a specific stream.
Apply a function to a list of requests.
Get bits from an array.
Interpret a harray to its bits.
Convert a slice to a slice.
Yields all files that match the pattern in the given directory.
Returns the string representation of the elements in an iterable.
static for each item in items.
Returns the logarithm of x.
Returns True if num is a power of 2.
Add a case to the parser.
Set the default value for this node.
Registers the interfaces on the object.
Register the required interfaces and remaining signals before the simulated unit.
log a change to the log
Render the HDL for the given method.
Add agents to a unit.
Return the clk associated with this unit.
Yields the distinct elements in an iterable by applying a function to each element in the
Apply a function to each item in collection grouped by key.
Flatten an iterable into a specified level.
Merge nested if from else.
Removes all unconnected signals from a netlist.
check if statement is too simple
Try to merge proc a and proc b.
Reduces a list of processes into a list of processes.
Add a write request.
Given a list of HDL statements mark their outputs.
Cut off drivers of a signal.
Synthesize an entity.
Return the max id for a given class or assignment.
Returns the max id of the statement in proc. statements.
Write the data to the interface.
Returns self. m. m - self. m. m - self. m. self
Loads the declarations from the interface.
Returns a list of signals for this interface
Returns the physical name of the port.
Return the bit length of the data.
Returns a sensitivity of the given operation.
Convert a value from one bit to another.
Interpret bits in a hstruct.
Return the number of words within the word width of the given range.
Group words by a word index.
Pack data into a dictionary.
Clean the meta data of the signal.
Discovers enclosure for a list of statements and outputs.
Find the sensitivity of a sequence of signals.
Returns the context to use for this node.
Reduces the node by removing all of its inputs and outputs.
Merge the information from another node into this one.
Determine if a statement is a mer__ statement list.
Merges a list of statements into a new list of statements in a given order.
Merge two lists of statement lists.
Reduces a list of statements into a new list of statements.
On parent event dependent
Set the parentstate of this node.
Registers the given list of INDRA Statements into the given list of IN
Remove this driver from the context.
Clean the data for this unit and all of its private interfaces.
Recursively walk over the fields of a numpy array.
Sign the value with a given signed value.
Adds a class of sensitivity to the given model.
Evaluate a condition.
Connect a port from one unit to another.
Convert a string to a number of bits.
Converts a HW into a HW.
Evaluate a parameter.
Set a new value for the field.
Convert a given map into a string in a given format.
In - place finalize the object.
Get the cascade of the current operator
Convert a value to a Python value.
if sig or val. dtype == to type then return sig or val if sig or val
Interpret the value and return a reinterpret cast if sig or val is not
Walks the params of the specified interface and adds them to the supplied discovered list.
Connect an interface from src packed to dst packed.
pack an interface into a string
Build the RTL configuration for the target platform.
Register an interface with this class
Try to reduce the array val to the same dtype as sig if the array is full.
reduce the array val to the same dtype as sig if the value is not in the array
Return a new name scope with the same level and keywords as the current name scope.
Return a serialized decision for the specified object.
Get the base cond of a node.
Simulate the number of bits in a time series.
Returns a string representation of the const name for the given value.
cut off the driver of this signal
Load the value of this node from an array of data of the specified type.
Load this node from the given HDL type.
Load the object from the memory with the specified type.
Get the width of the array item.
Walk the tree yielding each node and its children at the specified offset.
Sign a value with a fixed width.
Get an indent number.
Check if a name availability is available
Register a parameter with this scope.
Update params from another object.
Register a unit as a parent of this unit.
Register an interface with this class.
Register an array of items. name is the name of the item. items is an array
Returns the name of a single driver
Evaluate the static expression of the node.
Create a binary operator with the specified res.
Add an indent to the context.
Connect to an interface if it doesn t exist.
Connect the clk of an object to each of its units
Propagate clk rst n to each of the units
Propagate the clk rst connection to the str str
Propagate the number of RSTs in an object
propagate an RST object to a RST string
Yield the bits of a given signal or value.
Exclude obj if is declaration. prepare entity and if priv is none then prepare entity.
Evaluates the serialize once in the context of the given unit.
serialize params uniq and prepare entity if needed
Get the full name of this interface
Wrapper around self. make association that calls self. make association.
Return the simulation model for the given unit.
Connect a set of unit signals to a model class.
Computes the VCD of the given simulated model and stimul functions.
Initialize callback for when time t changes.
Connect this signal to another signal.
Register a signal for this direction
Connects this direction to another.
Get the signature for this direction.
Check if a signature is ev dependent on a process.
Adds a new process to the queue.
Adds a new HDL proc to the run list.
schedule comb update done ev
schedule the apply values
Resolves the conflict resolve strategy for the given new value.
Run all of the comb processes in the container.
Run sequence processes.
Runs the sequence s values to apply self. values to apply self. values to apply
Return value of sig. sig inside. val.
Update a value in the schedule.
Adds a new process to the queue.
Simulate a unit until the given time.
Converts a list of if statements into a list of if statements.
Return the distance between two hash strings.
Calculate the average hash of an image
Return the distance between the image path and the other image path.
Setup vizio device platform.
Update the state of the model.
Mutes the volume of the device.
Adjust the volume of the device up by the current volume step.
volume down.
Set the volume level.
Reset the state of the game.
Returns the piece at the given square.
Remove piece at the given square.
Sets a piece at the given square.
Check if a given move is suicide or check by Drop pawn.
Returns if the king squares have been suicide.
Return True if the game is over the next random move.
Returns True if the next move is check and False otherwise.
Return True if the position is a four - fold repetition
Remove and remove the given move from the top of the stack.
Return the sfen of the color.
Push a move into the move stack.
Return the zobvs hash of the piece s piece in hand.
Returns the symbol of the piece.
Create a piece from a symbol.
Returns the identifier of the piece.
Create a piece from an usi.
Given a string of commits return a list of parsed commits.
Parses the commit into a dictionary.
Load config from command line and execute from command line.
Generate a new yaml string.
Cast a string value to an attribute of this object.
Returns a list of dates between first date and last date.
Attempt to parse a string into a datetime. date object.
Load currency from file. If file is a zip file then load lines from it. Otherwise
Set the missing value to none for the given currency
Get the exchange rate for a currency at a particular date
Given a list of frames and a name print the output to stdout and clear the line.
Read a record of n bytes from the file.
Write a record to the file.
Map words from start to end.
Returns a string of the comments
Close the DAF file.
Generate a sequence of positions from this position generator.
Close the file.
Load the coefficients from the DAF file.
Check if a call is within the logging statement.
Add the operation of the given node if within logging statement and within logging argument.
Applies the current logging call to each key in the dictionary.
Check if within logging statement and append it if within logging argument.
Add the current call to the whitelist.
visit the except handler by returning the name of the except handler
Detect the logging level of the given function
Return the name of the except handler.
Returns the id attribute of the given value.
Check if the given node is a bare exception.
Check the current logging level for an error.
Delete a file if needed.
Render the content of the PDF.
Render the PDF to a response using the given context.
URL - encode or decode a string using unidecode.
Configures options in specified module.
Converts a string to an underscored lowercase string.
Create a new index for a collection.
Load and parse the price model from a file.
Read the content of a file.
Parse a line into a price model
Translate a symbol in the symbol maps.
Load the symbol map repository from the database.
Get the default session
Import currency from CSV file
Get the latest price of a security symbol
Download price database.
Prune the price database.
Get default session
Add a new map
List all price maps
Get a symbol map by its id.
Reads the content of a CSV file.
Maps entity to price model.
Map model to entity.
Reads the configuration from the specified file.
Return the absolute path to a config file.
Create user config file
Get config file path.
Get the content of the config.
Set an option in the config.
Get an option from the config.
Save the configuration to a file.
Parses a symbol into its parts.
Add price to model
Downloads the price model and saves it
Return the default session
Get prices by date and currency.
Get the prices on a certain date and namespace.
Return the number of items that have been deleted.
Prune a security symbol
Download the price of the agent in the specified currency.
Returns securities in the repository.
Return a partial state.
Update the list of child calls.
Yields self and all child objects of this object.
Check whether the student has chosen the correct option.
Return a copy of the items that are not empty.
Returns an instance of the specified parser with the specified attribute associated with the specified tree.
Test if the message is in the correct loop.
Check if the given string has the context with the specified names.
Check if a student part is a child of another student part.
Check the student part of a particular part by its index.
Return the full f - value of self. f in the same thread as self. f
Initialize app with self. app
Add an LDAP server to the pool.
Remove the specified LDAP connection.
Tear down an LDAP connection by destroying it and removing it from the LDAP manager if
Authenticate direct username and password
direct bind a user to the LDAP database
Get a list of user groups in an LDAP group search
Get user info
Get user info for username
Get an object by name and attributes
Return the connection to the LDAP server.
Make a connection to the database.
Creates an ldap3 connection
Destroy a connection by removing it from the database.
Searches the collection and returns matching results.
Query the database for all records matching the query.
search all the jobs in a collection
This method is called when the database is updated. It is called when the database is updated
Convenience method to announce the user interface of this class.
update self. secrets and self. base
update the headers of this message
Check if the client has any of the specified secrets
Download a file from a URL and move it to a temporary file.
return stream from url with given headers
update token with new one
Get or create folder.
Reads a response from the server.
get bucket by name or create it if it doesn t exist
Update the client secrets.
Initializes the client with the app auth client.
load secrets into self. auth self. transfer self. auth and self. transfer
Print the logs of the results. If name is not none print the logs of the results
List the logs of the current bucket.
create endpoint folder
Init transfer client.
return a list of all the log entries
Shows the current state of the backend.
add a new value for a backend variable
Remove a variable from the settings
Activate a backend.
Delete a backend from the console
Updates the base value with the given image. Returns the base value.
Create a basic auth header.
Generate the signature of the payload and secret.
Generate a signature for a request header.
Calls a HTTP DELETE request and returns the response.
wrapper for requests. head
Gets a list of results from a URL until a page is found or a page is
Check if the SSL check is enabled and if not disable ssl check.
remove an image
Get the version string from a version file.
Returns a list of requirements for the specified module.
get singularity version
Check if a particular version of the software is installed.
Get the absolute path of the installdir of a file.
Gets the thumbnail path
Runs a command and returns the output as a string.
Get image metadata
update secrets
print the response to a file
Terminate the given command.
List logs of a container.
Returns a list of the names of the collections in the account.
Call this to update the secrets.
Get the client and announce the command.
get manifests in a repo
Get a manifest from a repository
Get the download cache for the specified package.
Extract environment variables from config.
update api base and artifacts
Update secrets and add new token to headers.
Get the metadata for this build.
Get the client s settings.
get and update the default if the setting is not set
Update client secrets setting.
Generate a signature for a request.
list all the strings in the project and zone of the instances in this zone
load templates by name
get ipaddress by name
build a new instance
list containers in bucket
return a list of all the instances in the bucket.
List the entries in the registry.
Shares the client with one or more images.
Initialize the database
return the build template if it exists
list all the endpoints
list endpoint.
share an image
Reads and writes the client secrets from the secrets file
Get the services for this application.
Delete an object in a bucket.
delete object by name
Delete one instance by name
Returns a dictionary of subparsers for the given argument parser.
Generate a string of the form descriptor noun and numbers.
Returns the path of the specified tmpdir.
Extract a tar archive into a specific folder.
Extract a tar archive into a folder.
Returns the hash of the contents of a file.
Read the content of a file.
Read a JSON - formatted string from a file.
Remove files from the filesystem.
Push an image to S3.
Get a collection or create one if it doesn t exist
Get a collection by name
Get a container by name and collection id.
Get all images in a container optionally filtered by query
Inspects a container and returns its fields
rename an image
mv an image from a container
delete a container if it exists
Parse the header of a recipe.
Find a single recipe by filename.
create a build package from a list of files
Update the metadata of a given blob.
Format a container name.
Return a boolean indicating whether the terminal should use color.
Emit an error.
Writes the given message to the given stream.
Create a table of rows.
push an image
Get a template by name.
Get the manifest for a repository with a specific tag
return the build template for the specified package name if name is none return the build template of
Update the secrets file if the credential cache is none or if the credential cache is not none
A context manager to catch and report errors in S3.
Returns a new proxy that creates a new temporary file.
Returns the gravunicode url of the given user or email. If the user or email
Returns the url of a grav entry given an email address.
Returns True if the user has a grav entry with the given email address. Returns False
Returns the url of the grav entry with the given email address.
Yields num blocks of chimera blocks.
Return a new graph according to the blocks of a Chimera graph.
Resonance smiles.
Enumerates the molecule with the given flags and returns a list of the results.
Apply a rule to a molecule.
Cannonicalize the molecule to its canonical form.
Validate a list of smiles
standardize a list of smiles
Enumerate tautomers in a list of smiles.
canonicalize a list of smiles
Return the parent of the tautomer of the molecule.
Return the parent fragment of the molecule.
Remove stereo chemical parents from a molecule.
Set the isotope parent of the molecule.
Returns the charge of the parent fragment of the molecule.
The main function of the script.
Remove one or more fragments from the molecule.
Chemical choice of the fragments in the given mol.
Integrates the integrals of the term term term u0 v0 using the integrate
Returns the number of members of the organization.
Returns the total number of teams in the organization.
Gets repos and prints them to the console
Get the total markdown of a repository.
Get the list of open and closed pull request in a repo.
Returns the number of closed issues for the given repo.
Returns the readme of the repo.
Get license from repo.
Returns the number of commits in the repo
Writes a json file with the structure of the object.
Writes the sum of values to a file.
Writes the list of languages to a file.
Check if a directory exists. If not create it.
Removes the specified date from the specified file.
Returns a list of the names of the user s orgs.
Create a new GitHub session.
Check the rate limit to see if a given number of APIs is within the required API
Connect to GitHub.
Query repository information.
Gets the user s organization.
Writes the stargazers to a file.
Create a new project from a gitlab repository
Returns obj if license is not found.
Get all the traffic for each repo in the organization.
Get releases for a repository.
Get the referrers of a URL.
Gets the data from a given URL and stores it in the dictionary to store.
Writes the JSON representation of the data to the specified path.
Writes the views data to a file.
Returns the number of entries in the CSV file and the number of times it was check.
Writes the data to a file.
Writes the referrers to a file.
Process a JSON file.
Process a given URL and return a list of records.
Process a JSON or JSON file.
Login to github.
Get all members of an organization.
Writes the logins to a file.
Connects to a stashy instance and returns the bb session object.
Connect to gitlab and return a gitlab session.
Yields a list of projects with the specified repos.
Compute labor hours for a person s month.
Remove all non - string values from a dictionary.
Read a GQL file.
await until the specified time stamp is reached.
Prints the specified number of times in the specified number of times.
Load data from the specified file.
Saves the data to the specified file.
Creates a tfs connection with the given url and token.
Create project analysis client
Create a tfs core client
Create and return the git client for a given URL.
create a tfvc client
Get the repositories for a project.
Get a list of tfvc repos for a project
Get year commits of a GitHub repository.
Calculates the total commits of the given starting commits.
Writes the commits to a file.
Log stat and value.
Log a stat and value.
Roll up the leader. Returns the time it takes to do the rollup.
Returns the value of the field if it exists otherwise the value of the field.
Returns the string representation of the value if it is an enum.
Get prep value for value.
Recursively resolve a given path.
Return a dictionary of lists of tables to usls.
Returns the mean value of the counter. value if it is greater than num. Otherwise returns
Add a new value to the mark.
Returns the mean rate of the elapsed time since the start time.
Mark the value of the last column. If the last column is less than or equal to
Send a metric to the buffered.
Convert a metric to a list of metric strings.
Format metric string.
Send a metric string to the client.
Returns the value of the specified option in the specified section. If the option doesn t exist
Decode str to str if str is unicode. If str is str raise error.
Get an option if it doesn t exist or set the default value
Map ledger codes to guid map
Returns choices and current division.
Map exact invoice numbers to foreign invoice numbers
Create a view from a request handler and apply http methods.
Create a new form view.
Return the method view of a request handler.
Create a new API view.
Create a generic API view.
Create a model view set from a model view set.
Create an asyncio. stream reader from a file descriptor.
Read until the connection is ready.
Close this connection.
Add a watch to the watch list.
Remove an alias from the watchlist.
Setup a new watch in the file descriptor.
Setup the connection and setup the transport.
Gets the next event in the stream.
touch event.
Update the interval and update the time interval.
Update interval in case of failure
Close all open connections.
Connect to nsqd.
Query look - up for new entries in the topic and update the look - up query index
Set the max in flight number of connecteds.
Log a warning.
Add a listener callback.
Remove a callback for a named listener.
Trigger a named listener.
Publish a message to a topic.
Set the feature transform of the dataset.
Returns a prediction of the given input data.
Clean up unpaired fastq files.
Reads depth file and returns depth dic coverage
Set the template for the given file.
Sets self. input and self. output channel names based on self. template and self.
Render a template with a given context.
Render the template and return the result as a string.
Update the main forks.
Updates the attributes of this object.
Set the secondary inputs of the given channel dict.
Parses assembly file and populate contigs
Get the gc content of a sequence of given length.
Returns the length of the assembly.
Writes the contigs that are not in the filtered set of contigs.
Writes the report to a file.
Remove inner forks.
Checks a pipeline string for insanity checks.
Determine the lane of a pipeline in a fork process.
Returns a list of lanes
Creates a linear connection between plist and lane
Add unique identifiers to a pipeline.
Removes unique identifiers from a pipeline links
Checks that the file exists and if not raises an error.
Convert a header string to a mapping of column names to column names.
Returns the HMS of the string s if s is a float. If s is a
Return size coverter of a string.
Gets the list of pipeline processes from the log file.
Clears the inspect of the process and all its children.
Update the status of the log file.
Reads the log file at the specified path if it exists.
Assess resource warnings.
Updates the retry configuration by adding the retry trace to the log parser.
Display the overview screen.
Update top line by number in specified direction.
Move the screen right left in the given direction.
Returns the last n lines of the log file.
Reads the static info of the pipeline.
Reads the dag file and returns it as a dict
Compute the md5 hash of a pipeline run.
Gets the nextflow filepath from a log file.
main function to create a new file based on a sample id and a minimum size.
Returns the pipeline string for the input of the automatic pipeline.
Prints out all the recipe classes in the current module.
Check if a string is a valid pipeline string.
Build the upstream for a specific task.
Build the downstream task pipeline.
Build the pipeline string for the given tasks.
Returns the string representation of the component
Write a report from a dictionary of samples to a file.
Create a log file from a list of log files.
fix contig names
Clean up a fastq file.
Parse one or more files.
Parses the log file.
get contig id
Writes the plot and table data to a JSON file.
Parses the assembly file into a dictionary.
Calculate summary statistics for each contig.
Return a list of contig labels for the window.
Calculate the gc - count property of a sequence of strings of length length length.
Calculate gc type properties for a window of num contigs.
Runs fastq pair clean up if clear is specified.
Write json report from one sample id to another sample id
Parse a bowtie log
Parses a process name into its component name and directives.
Add a dependency process to the workflow.
Search tree backwards for a template in a list of parent lanes.
Adds the HTTP header to the template.
Add the footer to the template.
Sets the initial state of the init process.
Set the secondary channels of the lanes.
Sets the current status of the processes and its sub - processes.
Returns the manifest string for this config
Sets the configuration values for this pipeline.
Writes a viz to a file.
Writes the configuration to a JSON file.
Export the params to a JSON file.
Export the directives to a JSON file.
Builds the project for the specified list of processes.
if kmer opt == str or kmer opt == str then split by max read length
Get the id of the report.
Update the trace watch.
Update the log file and retry number.
Send live report
Initiate live reports
Close connection to broadcast address
Convert adapter fasta to adapter fasta
Computes Mash output for specified sample id and assembly file.
Print a message to stdout with a specified color. Optionally a label can be specified.
Processes the process map with the specified arguments.
Get the range of values in the qual str.
Filter an assembly file based on a specified minimum coverage.
Get the number of contigs in an assembly file.
Filter an assembly file to get coverage from the coverage bp file.
Convert camel case to lowercase.
Return a list of classes that map camel case classes to strings.
main entry point for dendropy. tree. get
map w to data
Apply a median filter to a matrix.
Computes the Krnl divergence of a signal.
Computes the SSM between x and x.
Computes nc.
Apply a gaussian filter to the array along the specified axis.
Computes the number of samples in x.
Shift array x such that all values in the array are of the same length.
Concatenates the embedded space of a matrix.
Plot the formatting of the given est file.
Plot the boundaries of the given est file.
Plot the labels of the instances associated with the specified method.
Given a function f and a list of indices for features return a list of segments of features
Computes the maximum value of a list of features segments to a 2dfmc array
Fits self. scatter within self. scatter within self. scatter.
Reads and returns the times and labels for an audio file.
Finds the estimation of the given id and labels id and returns the estimation value
Get all boundary algorithms
Get the configuration of a given feature and labels.
Returns a list of file structs of all the audio files in the specified directory
Reads the hier references and returns the bounds and hier labels and the hier
Returns the duration in seconds of the features file.
Write a mirex file.
Get the path of the audio file in the dataset.
align segmentation to times and labels
Estimate the beats
Read the beats and frames from the reference file.
Computes the beatsync features of the given frame and times.
Returns a list of names for all parameters.
Compute framesync times
Compute framesync times for all features.
features is a list of features in the struct. audio file.
Preprocess the features.
Pre - process and post - process est values.
The main function of the command line parser.
Print the mean of the results.
Compute the information gain.
Compute gt results.
Get the name of the results file.
Compute all features of a given struct.
Processes the given file in the given path with the given number of jobs and framesync
Function to calculate the cost of a gaussian.
Normalized log10.
Return a string with the min and max of a number.
Create an array of time frames from the duration duration durations and anal.
Remove empty segments from times and labels
Take audio and save it to out file with the number of times the audio is Clicked
Synchronize labels between new bound idxs and old bound idxs.
Process segmentation level.
Align the end of hieries hier1 and hier2.
Calculate the distance to the given index.
Estimate k knee.
get clustered data
Computes the k - means
Compute the Bayesian Information Correlation Coefficient.
Return the magnitude of a number
Return the bounds of a segment in a json file.
Converts a json file to a numpy array of string bounds
Converts a list of segment labels in a JSON file to a numpy array of labels
Reads a json file and returns a numpy array of beats
Compute the 2D Fourier transform of an array.
Computes the labels of x according to the given rank and bound idxs.
Filter activation matrix g according to r.
Returns the module associated with the given boundaries id.
Get the module associated with the given labels id.
Run an audio file in the specified module and segment the times and labels according to the specified
Runs the given audio file struct in flat segments.
The main entry point for the command line tool.
Sets a new task to be run by the given translator.
Spool out the given number of words in the given iterable.
Read lines from inputstream and send them to target.
Returns the translation table for the specified language in the specified file.
Print the translation table for a given language.
Remove nodes and edges from a network.
Write a network to a pandas. hdf5 file.
Create a network from an hdf5 file.
Process a node in the form of a list of strings
Make an osm query and return the response
Builds a query string for a node.
Returns true if the value is a regex
Return the string representation of the compare of the given value with the given expectation.
Compare the strings in the expression to a given value.
Trigger a function or method from an instance of a class.
Get a matcher by name or if none is given return the default matcher.
Initializes a new value matching the given name with the given arguments. Raises an error
If body is a string decode it and set the message body.
Sets the response body and headers to the given data.
Set the value of a key to a new value.
Append functions and methods to target.
Trigger a request for an instance.
Adds the specified headers to this request.
Adds a new matcher for the present of the specified HTTP headers.
Adds a matcher for the present of the given HTTP headers.
Adds a set of params to the request URL.
Adds the given string to the request body.
Set self. request. json
Adds the XML content to the request. xml attribute.
Reads the file at the specified path.
Saves the current state of the object to the database.
Parse the error and store it in this object s error attribute.
Return a new response or a new response with the specified status.
Match the request to the filter set.
Activate a mock engine.
Create a new mock instance and add it to this mock instance
Remove a mock from this object.
Activate the mock
Disable the mock
Returns True if all network filters should be applied for the given request.
Takes a request and returns a boolean indicating if the request should be matched.
Return a copy of this request.
Activate and disable the network mode of the specified engine.
Adds a new interceptors to this engine.
Removes a interceptors by name
Returns the value of the setting for the given key if it exists else returns the value of
Decrypt the sql with the target sql and return the result as a SQL string.
Override the pre save method to replace the original value with the value of the model instance.
Get the SQL placeholder for the given value. If value is none or value is a string
Get a column by its alias.
Returns the SQL placeholder string for the given value.
Calculate the base regression of the str str if slope is none return the linear regression of the
Inverse of the matrix.
Recursively recurse into the leaves of the tree.
Calculates the averages of all nodes in the tree.
Calculates the variance of the current tip value in the tree.
Calculate the regression of the tree.
interp1d and calc integral merger rate
Calculate branch count
Calculate the cost of a node in a given branch length.
Attach this node to the tree.
Normalize a profile by the sum of its components along the given axis.
Set the Gtr site specific string value
Sets self. gtr to self. gtr if self. gtr is a G
if l is an int then log the length of that int else log the length of the
Attach sequences to nodes.
Prepare the whole tree.
Calculates the number of nodes in the tree.
Calculates the dist2root of all clades in the tree.
Get the branch mutation matrix of the given node.
Returns the string representation of the current sequence in the specified node. If include additional constant sites
Return the fitch state of the node at pos
Infer ancestral sequences i. e. infer ancestral sequences with
The ancestral likelihood of the node in the tree
Return the maximum branch length to use for this node.
Return the optimal branch length for a node.
Create a multiple alignment for each clades in the tree.
Computes the sum of the diagonal elements of the matrix.
Convenience method for creating a Gtr. assign rates object.
Raise an parse error in the case that the sum of the values is less than the
Return the optimal value of a sequence pair.
Computes the probability t profiles
Computes the log - likelihood of a given time series.
Computes the log - likelihood of each state in a sequence.
Set the branch length mode
Plot the time series of the root node.
Print the marginal value of the current node.
Adds a coalescent model to the merger model.
Returns the root of the tree regression of the number of clades that are the best root
assure tree in params. tree
Creates a GTR model from a given set of parameters.
Read a VCF file if the file is VCF - formatted.
Calculate the value of a 1D function.
Returns the delta function of a distribution.
Assigns the correct branch counter to each node in the tree.
Create a tree regression of the current tree.
Convenience method for creating the time tree.
Return the likelihood of all clades in the tree.
Convert dates in the tree to human readable strings.
Return the uncertainty due to the given node at the given interval.
return the minimum value of an interp object
Calculate the median value of an interpolation function.
Returns the numeric value of the given datetime or none if the given datetime is none.
Creates a class object from the given regression - class model
Closes the connection to the server.
Receive a line of text
Sends the given data to the client.
Sends a single instruction.
unicode str. encode returns unicode str.
Decodes an instruction and returns an instruction.
Encode the argument as a string.
Encodes the arguments of the program into a string.
Returns the url of the class.
Returns the url of an instance of this model.
Returns the url for the class.
Download the given URL and return the path to the downloaded file.
Retrieve the parent object of the job.
Prompts the user for credentials.
Perform an interactive login with the given domain and password.
Prints the user name of the user or if user is not specified it prints the user name
Prints a user to the console.
Return a range of genomic strings matching the specified chromosome.
Return a new str with only the genomic position for the specified chromosome and position.
Returns a dictionary of facets for the query
Recursively process a list of filters
Returns the next item in the buffer.
Execute the query and return the response.
Create a migration for this instance.
Run the command line interface.
Construct an instance from a dict of values.
Logs out the user s OAuth token.
Retrieve the child object of the task.
Parse snpeff information into a dictionary.
Gets the credentials for the given netrc path. Raises an error if the path
Save the configuration to a file.
Returns the string representation of a value of type valtype using float or str. format.
Given a list of string cells and a padding and the end of the row build the row
Builds a line from the given columnwidths.
Add alignment to mediawiki cell attrs.
Create a migration for this dataset.
Uploads a file to a vault
Validates a full path for Vault
Check if the given URL is a valid host URL.
Annotating a list of records.
Evaluate the expression
Set the name of the format to use or raise an error if format is not supported.
Register a new formatter.
Return an iterator of rows from a tabulate table.
Returns the full user config file path.
Return a list of system config files.
Returns the full path of the additional files contained in the configuration.
Write the user config file.
Read config files and update config values if valid or not.
Truncate a string to a maximum width.
Replace all occurrences of replace in string s with string replace.
Calls a list of commands and exits.
Applies an option to the command.
Initializes the options.
Calls the specified command and exits.
Run a sequence of commands.
Truncate a list of strings.
Format a row with headers and row headers.
Convenience function to build a vertical table from data headers and kwargs.
Generate a table with the given data and headers.
Return True if type is a number type.
Return the string representation of the specified type.
Returns True if type is a string and False otherwise.
Generate a new key using the specified template.
Generate a new public and private key pair.
Find all the instances of the given template. Returns a list of all instances of the given
Insert an image into the specified icon.
Export the genes in a panel.
Returns the first weekday after the given weekday.
Return the number of times the given day is the same as the current day.
Re - repeat the date in the specified time range.
A helper function that does the work of repeat biweekly.
Handle a single chunk event.
Return a list of variants in a case.
Export a set of variants in a GWK document.
Create or update a user.
Return the str variants of a case.
Create a variant in the variant store.
Return a variant as a string.
Verify a variant
Export a single variant into a single submission.
Return whether a case cancer variants.
Moves a variant from an institute in a case.
redirect the user to the evaluation view
Gets the acmg of a user s criteria and returns it as a JSON object.
Upload a panel into the database.
Download the verified excel file.
Return a dict of genes by HGNC symbol.
Add incomplete penetrance to a set of hpo lines.
Makes a request and returns the json response
request a mme base url and token return a list of nodes
Get the coordinate of a cytoband.
Get the sub - category of alt if variant is a string and ref is a string.
Calculate the length of the alt string.
Get the end of the alt string in the specified region.
Parse variant coordinates.
Update a panel.
Export a panel to a PDF file.
Update an existing gene in the group panel.
Load a case s delivery report.
Return a list of hpo terms
List all adapter whitelist.
Builds a new phenotype object from an existing Hpo term object.
Add gene links and phenotypes to the hgnc id.
Convert a HGNC query into a JSON query.
Displays the list of institutes for the current user.
List all transcripts in the HGNC database.
Display the day of the year month and day of the year month and day of the year
Returns a generator of variants in a case.
Retrieve a list of strings associated with a case object or a variants query.
Make a variant a string variant.
Returns the header of a case object.
Get predictions for a list of genes.
Find the BAI file.
Given a variant and a case and a variant return the observations data.
parse a gene into a set of gene links
Returns the string representation of a transcript object.
Return the end position of a variant object.
Returns the most common frequency
Given a variant object return the clinsig obj with the human - readable representation of the
Returns a link to the given variant object.
Return the cosmic link for the variant object.
Return a beacon link for the given variant object.
Returns a link to the URL for the given variant object.
Returns the human readable string of a variant
Return a list of expected inheritance for a variant object.
Returns a list of all the calls for a particular category in a variant object.
Return a dict of the variants in a case and its associated case.
Export a variant into a specific case or variant.
Get a submission for a specific variant and submission.
Return the acmg criteria for a variant in a variant.
Post a variant for the given variant case and user.
Computes the evaluation of an object.
Upload a panel to HGNC.
Export the verified variants of an excel file.
Export all the genes in the database.
Parse the clnsig in an acc acc - string revstat - string and transcripts
Parse the compounds of a variant in a case.
Return a list of all genes in the database.
Return the JSON representation of a case.
List the available collections.
Loads the specified adapter and institute it with the specified display name.
Returns a file handle for the specified file.
get the network number
get next and prev of net
Check if the year is in the range of now. year and month.
Returns the weekday number of the given date.
Returns a list of individuals
Parse an individuals stream into a list of individual ids and a list of samples.
Builds a evaluation object for a variant.
Calculate the pathogenic non - pathogenic non - pathogenic
Returns a list of the variants in a case
Find the variants in the variant collection.
Find a variant by document id or a case id
return a list of gene variants
Returns a case verified by the given institute id.
Returns the causative values of a case.
Check the causative variants in the variant collection.
Yields the causative names of the other causative names of a variant
Delete one or many variants in a case.
Find overlapping variants in the variant collection.
Return a list of all evaluated variants in a case.
Given a set of variants and a sample name find the variants that have allele in the
Get a MongoDB connection
Return a list of submission objects corresponding to the given variant ids and form fields and object type
Return the header of a submission object.
Return submission lines in csv format.
Load a panel.
Build exon object from exon info and return it.
Delete gene panel.
Drop indexes for all collections
Delete the user with the specified mail.
drop genes.
Drop exons of a build
Delete a case and its variants.
Get individuals.
Return a list of cases in the context.
Load a user from the store.
Perform the user login.
Builds an institute object
Delete event by event id
Find the events of a variant or a case.
Find user events by user id or object.
Remove a phenotype from a case.
Parse the individuals and individual positions of a variant into a list of genotypes.
Check if the specified coordinates are in the same region as the specified chromosome.
Returns the hpo terms in the form of a search term.
Display the transcripts of the adapter
drop and update the exons in the build database
Load a region of a case into the context object.
Return queryset of all month events in a certain month.
Returns a QuerySet of all QuerySet instances live at the given time.
Parses requirements. txt file and returns list of install requires.
Get the existing gene for a HGNC.
Update a gene panel in the given CSV file.
Make a new panel and add it to the store.
Export a panel object.
Return information about the archive in the database.
Migrate a case from one database to another
HPO terms.
Configure application extensions.
Register blueprints in the application.
Get the aliases for a specific symbol.
Build a panel object from the given panel info and adapter.
Write verification variants to text file.
Export variants in a VCF file.
Returns the string representation of a variant in a VCF file.
Serve a MongoDB instance.
Generate an md5 key for a list of arguments.
Initializes the database connection with the app.
Sets up the internal data structures for the given database.
Create or update the indexes
Create a new database entry in the database.
Print a demo message.
Setup a new instance of this class
Get institutes by ID or list of institute objects if institute id
Parse the genetic models of a case.
Show gene panel information.
Adds an institute to the collection
Find institute by id
Match the given string with the given regular expression if the string matches the given regular expression.
Gets a datetime object from the database.
List all genes in a hpo term.
Parse the rank score of a case.
Add a user to an institute.
Check connection to MongoDB
Load a delivery report
Add a user object to the collection.
Render a pileup template.
Load a set of exons from an HGNC dataset.
Update a case s compounds.
Add a link to a gene object.
Show HGNC gene information.
parse hgnc genes
Get a submission by institute id
Update a submission s id with a new one.
Get a submission id
Add one or more of the given submission objects to the submission collection.
Update a submission status for a given user.
Find all the submissions belonging to a specific user and institute.
Delete a single object from the database and update a single submission in the database
Returns a dict of the submitted vars for a case.
Parse hpo obo output
Redirect to a page of genes.
redirect to the HGNC gene page with the specified HGNC symbol or to the
Return a JSON object of the genes that match the given query.
flash an institute and a case.
Return the institutes of a login user.
Get the HGNC ID for a gene in the HGNC database.
Update a gene panel.
Drop disease terms
Load disease terms from hpo phenotype to a set of disease
Parse the frequency of a variant.
Parse the sv frequencies for a given variant
List all users in the database.
Compare existing panel with new panel.
Update gene version in new panel
Add a gene panel to the collection.
get panel by panel id
Delete panel object
Get gene panel by panel id.
Find gene panel by panel ID and institute ID or version.
Return gene dict from HGNCs object.
Update a panel in the collection.
Add or update the pending action in a panel.
Returns a set of all symbols in the panel collection.
Return a list of cases.
Sends a record to the SMTP server.
Populates the indexes for the given collection.
Update the indexes in the database.
Drop all indexes for the given collection.
Builds a variant query
Given a mongo query string return the clnsig query
Filter coordinate query by chromosome and coordinate
Filter gene query
Remove a database.
Parse the panel output file into a dict of genes.
Add many gene objects to the HGNC database.
Adds many transcripts to the transcript collection.
Loads a collection of transcripts into the database.
Get the gene object associated with a given HGNC identifier.
Find the id of a symbol in the HGNC database
Find the hgnc genes matching the specified symbol
Returns a list of all genes in the HGNC database.
Returns the number of genes in the HGNC database
Drop all genes in the HGNC database.
Drop transcripts from the database.
Drop exons from the database.
Get the ensembl transcripts for a given build
Return the HGNC representation of a gene.
Find gene by its symbol and build
Get genes by their alias.
Get all the gene objects in the HGNC database
Return the HGNC symbol corresponding to the given HGNC symbol or none if the
Add hgnc id to gene dict
Get interval intervals for all the genes in the interval tree.
Loads anomim panel into the context object.
Get all the cases in an institute.
Return a case.
Check if a case matches the given institute id and case name.
Handle the match and redirect the user to the appropriate URL.
Delete a case from the database.
Render the report of a case and return the PDF.
Given a case and a case name redirect to the appropriate URL.
Update the status of a case.
Assign a case to a user.
Returns a list of hpoterms.
Mark validation in a variant and redirect the user to the validation URL.
Mark a variant as causative.
Return the delivery report of a case.
Share a case.
Rerun a case and redirect the user to the URL associated with it.
Open the given case with the given institute id and case name.
Return the path to the vcf2cytosure attachment.
Get the filename of a case.
Return a list of cases from a case query.
Return a list of the variable submissions associated with a given institute.
Return a list of files to write to excel.
Return a list of hpo diseases matching the given threshold.
Convert a vcf - style individual to a ctosure - style individual.
Return a multiqc case.
Return the unevaluated variants of a variant in the store.
delete a case object mme base url and mme token
returns the matches for a particular case
match in a case
Return a list of genes for the given build and api key.
Parse a variant s callers into a dictionary.
Build a new transcript object from an existing transcript object.
build institute object and add it to adapter
parse cadd string to float
Parse a VCF string and return a case object.
Update a variant in the variant collection
Update the rank of a variant in the variant collection.
Update the variant compounds in a variant.
Update a variant s compounds
Update one or more MongoDB compound variants
Loads a variant into the variant collection.
Insert or update a variant in the variant collection
Insert many variants into the variant collection.
Create a new case and update it in the case collection.
Share a case with another one.
Create or update a case with the given information. If remove = True the case is removed
Mark a case as checked.
Create an order verification event for a variant
Return the sanger ordered by institute id and user id.
Validate a variant
Mark a variant as causative.
Update a variant in the database
Update a variant in the variant collection.
Parse variant and display names from a variant in a case.
Parse a simple id.
Generate md5 key for document id.
Convert to HGNC format.
Return a new id for a variant
Returns the number of cases in the database
Update a case s dynamic gene list.
Get a case by it s id or the display name
Delete a case from the database.
Add a case object to the collection.
Given a case object replace it with a new one and return the updated case object.
Update a case by its family id.
Update the evaluation for a variant in a specific case.
Returns a list of all the strings in the acmg collection of all the strings in the
Parse transcripts from a list of ensembl transcripts
Yields ensembl information from the request.
Parse an ensembl transcript request response into a list of dictionaries.
Parse ensembl genes.
Parse ensembl exons
Parse ensembl exon request result.
Initializes the console log.
Get all the phenotypes found in a given file.
Show phenotypes in a set of genes.
Convert string into number or float.
Format the month theyear themonth and return the formatted string.
Format the day for the given weekday.
Format the month name.
A helper method that updates self. where and self. desc based on self. mo.
Get information about a panel.
Parse a gene panel into a gene panel object.
Display the number of diseases.
Drop terms from the HPO term collection
Returns a dict with the number of users and their events.
Parse a variant into a dictionary of conservations
Parses a conservation variant into a list of strings.
Get information about the general case.
Gets the total number of cases for each group.
Render the template using the given context as JSON and return the JSON response.
get year and month
Check if there are any cancellations associated with a given day.
Fetch a term by its hpo id
Search HPO terms
Find a disease term by identifier
Return a list of disease terms
Add a disease object to the disease collection
Return a list of genes associated with a HPO gene.
Read an hdf5 file
Setup time axis.
Compute the linear index of the list.
Return the data array with the zeros at the beginning and the median of the data.
Calculate the extent of this plot.
Plot the water scene.
Plot a time series
Write the filterbank to a file.
Calibration for each band pass.
Return the mean of the data in the coarse channel.
Return the fracpolecule of a str.
Writes a polfil to a file.
Returns the index of the closest value in xarr to val
bin a array with n x and n y
Unpack a single bit.
Get the difference between two waters
Plots the calibrated diode.
Calculates the selection size based on the number of bytes in the file.
Calculates the shape of the selection
Sets the start stop and step times for the channel.
Populates the timestamps from the file.
Determine the number of channels in the file based on the number of channels in the file
Determine the number of blobs in the dataset.
Determine if the selection size is greater than the max data array size.
Read all data from the file.
Read a row of data from the file.
Read the data from the container and load it into this object.
Update the header of the time series.
Print information about the file.
Write the file to the given filename.
Write the light to an hdf5 file.
Write the light to an hdf5 light file.
Determine the number of blob dimensions along a given chunk.
Gets the number of dimensions of a chunk.
Grab the data and plot it.
Convenience function for the command line tool.
Read the first header of the file - like object.
Returns the number of data blocks in the file
Prints the mean and std of the next data block and prints the min and max statistics.
Plot the histogram of the next data block.
Generate the filterbank header.
Finds and returns the size of the header in a file.
Integrate a water calibration.
Calculate the center of a frequency array.
Integrate the f ratios from one channel to another.
str - > diode spec
Read the length of the header of a given file.
Check if a file is a header file.
Generates a header string += to sigproc angle and numpy. float64 header string +=
Calculates the number of ints in a file.
Return a dict representation of the current value of the traceback instance.
Make a subparser of the specified type for a given set of args and types.
Make a parser for this module.
Remove comments from a string
Adds a default name to the list of supported records.
Parse a zone file from a string of JSON zone data.
Parse a zone file.
Replace a field of a string with its value.
Parse a JSON schema string.
Create a new package from the given classes.
Convert a record to a JSON compatible string.
Load a JSON - compatible data structure.
Load a record from a string.
Add a new record to the given schema.
Returns the value associated with the given record name if it exists else returns the value of the
Represent the vars of this object as a string.
Get a schema dict from a record.
Get the root schema of a record.
Yields lines of text from the input stream.
Wraps the outputs of a job into a stream.
Push a value onto the end of a dict. Returns a new dict.
Search the API for the resource and return the response as a string.
Returns a search result with the specified filters.
Return a list of entities that include the specified attributes.
Create a new collection instance from href.
give another quote
Escape a string if o is an int or string.
Return elementary rotation matrix
Calculate the Vrad error sky average for a given time frame.
Calculates the value of the parameter error sky avg in the specified range and prints it
G magnitude error
Return the G magnitude error of a given magnitude.
Return the average number of transit numbers.
Calculate the angular distance between two points on the sphere.
Transform cartesian coordinates to cartesian coordinates.
Transform sky coordinates from spherical coordinates to cartesian coordinates.
jacobian for transform covariance matrix
Compute the error scaling factor for a given observable in the given beta.
Convert a string to a Unicode string.
Returns a collection of functions for each item in the collection.
Exclude elements from this collection according to func.
Return a collection of items filtered by a user - defined function.
Return a collection of items after applying a function to each item in the collection.
Return a collection of items drop while applying a function to each item in the collection.
Return a collection of elements from each of the elements in self and each of the others.
Add a find operator to this node.
Return the absolute path of the operating system of the given file.
Build the schedule of the runs of the given events.
Writes the results to the specified output file.
Prints the results to the specified file.
Removes macros and comments from the code. Returns the index of the comment in the code
Round x to the next number in base.
Returns a list of blocks of the specified block size.
Calculates the cache access of the results.
Calculate the cache access and build the results.
Strip and trailing whitespace from the instruction lines.
Stripreferenced labels from the instruction lines.
Select the best block in blocks.
userselects the number of times a given value is selected
Insert markers at the end of a line.
Generate a sequence of integers in space between start and stop.
Get the last modified datetime of a file.
Check arguments.
The main entry point for the script.
pickle the result of a mapping.
symbol pos int
Transform the dimension count of an array decl to 1d decl.
Transform a multi - dimensional reference into a single - dimensional reference.
Find the nodes of a given type in an AST.
Check that the number of variables in the model is less than the number of strings in the
Set a symbol s constant value
Substitute constant values with their value.
Calculate the sizes of the variables and their element sizes in bytes or subs consts.
Calculates the relative offset of a variable given its name and access dimensions.
Removes duplicates from the log file.
Get the total number of items in the iteration.
Get the loop stack
Return the index order of the sequence of free symbols.
Compile the expression of the symbolic.
Compile the distances between the variables of a symbolic symbolic symbolic symbolic symbolic symbolic symbolic symbolic symbolic symbolic
Converts the global iterator to indices.
The iterator for the global variable.
Converts the indices to the global iterator.
Get the maximum global iteration of the loop stack.
Prints the kernel information.
Prints a table of the variables names and their values.
Prints the constants info to the specified file.
Prints the kernel code.
Convert an AST to a sym.
Get the offsets of an expression.
Get the basename of an aref.
Get the index type of the node.
Builds the const declartions for the type.
get array declarations
Get the kernel loop nest.
Return a tuple of array declarations and a dictionary of array declarations.
Find the inner most loop.
build the kernel block for an array of specified dimensions
Build an ast. Call node for dummy calls.
Build kernel function declaration.
build a list of scalar declarations
Get the kernel code for the function.
Build kernel function.
Returns the C source code for the specified function.
Perform an iaca analysis on an instrumented binary.
Returns the unique identifier for this object.
Returns the last modified datetime of the file.
Returns the compiler and its flags.
Parse an event string in the form of an event in the form of an event string.
enforce that there are no overlap between start at and num
Return the absolute path of the header file.
aligns the iteration with the cl boundary
Returns the load factor for the specified cache level.
Returns the number of hits for the given string.
Returns a list of values for each cache level.
Returns a list of values for each cache level in the machine.
Returns a list of column values for each cache level in the machine.
Returns a list of strings describing each of the different dim factor of the cache.
Replace an environment variable with the given value.
Add an argument group to the argument parser.
Parse the description of a file.
Builds an item in the course data dictionary
record an item in a sailthru client
Gets the content of a course from the sailthru client
Returns the content of a course.
Update sailthru list
Send an email to the sailthru client about the refund.
Send an offer assignment notification email.
Retry the current request after a specified number of times.
Fulfill an order.
Get a sailthru client
Returns the value associated with the given key. If the key does not exist or if the
Set the value of the cache at the specified key. If the key already exists it is
Get the configuration value for a given variable in the specified configuration module.
Gets the environment variable filename overrides the environment variable filename.
Returns the value of a dictionary whose version is greater than or equal to the version of the
Returns the current eplus version if available otherwise raises runtime error.
Populate the dev external data from a JSON data dictionary.
Returns a list of external files for each table in the database.
Set the default values for all tables in this database.
Prepares the text representation of the tag - value of the field.
Return a mapping of naive short references to their string representation.
Get the value of the specified column in the data.
Update the value of the field at the specified index.
Update the device and activate hooks links and external files.
Add one or more fields to the end of the sequence
Removes and returns the value at the specified index.
Insert new value at index.
Remove this record from the database.
Registers a new record hook. Raises field validation error if hook already exists.
Registers a link.
Create a regular expression for the given intent name.
Returns the number of seconds remaining in the time range after the specified time.
Returns a string representation of the object.
Make an http request to the given url and return the response.
Get a list of endpoint for a given service type.
Try to mkdir the directory. If it doesn t exist raise an exception.
Configure a service
Register a new URL with the CIDR server.
Get recording state by recording id and status.
Update the status of an event
Update the agent state.
Returns a string representation of the configuration file.
Update a configuration file with a new string.
Check if the configuration file exists and if not print a warning.
Initializes the logger.
Render the home page.
Serve an image
Runs all modules in a list of processes.
Parses the vcal string and returns a list of events and attachment dict
Get the schedule for the given uri.
control loop for the service status
A control loop to update the service status.
Makes an error response.
Makes a JSON response with the specified content and status.
Return the internal state of the service.
Return the list of upcoming events.
Return an event if it exists otherwise return an error.
Delete an event.
Modify an event
Start capture of an upcoming event.
Render the given fragment to the given request.
Returns a list of resources in the model.
Returns a dictionary representation of the script.
Create a fragment from a dictionary of pods.
Adds the given content to the current content.
Initializes the js function with the given arguments.
Returns a string with the html representation of the resources in this collection.
Convert a resource to an html string.
Returns a JSON response for the given request.
Render the response of this view and return the final standalone html.
Render the given fragment using the standalone html template.
Calculates p - values and q - values from a list of values.
Convert values to one dim array.
Compute pvalue svalue and qvalue values from the error table.
In - place error table.
Compute a summary error table for a given dataframe.
Computes the error statistics of the target scores and deccollection scores.
Finds a cutoff value for a given error stat based on the tt scores and td scores
Infer the peptical forms of an IPF file. If outfile is none or
Infer peptide information from a file.
Infer proteins for a protein file.
Subsample an input file to a new file.
Reduces a file into a new file.
Backpropagate a file to a new file.
Get a group by its id
Create a group.
Delete a group by its id
Get group members
Update a group s members
Get group effective member count
Check if a network is an effective member of a group
Decrypts the given key in the given context.
Return the stdin and stdout of this command.
Return the stdout of this command.
Return the stderr string for this command.
Get the debug output.
A with - context that Close the stdin and wait for it to finish.
Yields lines from self. get out and closes the file system.
Yields lines from stderr and closes the file.
Run the given debug command with the given os. path.
Prints the error message to the specified file.
Prints the help for this option.
Prints the usage of this option.
Prints the version of this option to the specified file.
Resolve an option to a configuration option.
Return a copy of the context
Write headers to the given file - like object.
Generate a temp URL.
Returns a quoted version of the value.
Return the client to use or create a new one if the client doesn t already exist.
Decrypts data from stdin with AES - CBC key.
Update an account.
cli put container
Builds the manifest body.
Create a container at a specific location
Print the message to the console.
return True if num is empty
Encrypts the contents of a file with the given key.
Get a repository s current status.
Get a pull request.
Get pull requests.
Saves the published title
Returns the published items in the order of the given number
Render the published published published items.
Acquire the reader lock.
Release the reader number.
Acquire the ordering of the writer.
Remove the task with the given id.
Returns the task with the given id
Returns a list of all the tasks in the group.
Return a dictionary representation of the configuration.
Create an instance from a dict.
Initialize the archive manager.
create the index if it doesn t exist
Encodes a JSON object into a string using the JSON encoder function.
Write items to writer until the generator returns True.
Add a task to the scheduler
Remove a task from the scheduler
Returns a list of the items in the queue
Validate task id backend category and backend args
Parse archive args and return a archiving task config.
Performs a job and publishes the result.
Adds a task to a queue. Returns the job id.
Cancels the given task.
Runs the server in a new thread.
Listen for events and execute them
schedule the listener if the async mode is set to async mode otherwise schedule the listener
Schedule a task in the scheduler.
Cancel a running task
Builds the arguments for the job.
Register a view to the admin with the given meta name.
Wrapper around the default reverse function.
Get the view name.
Get a version string.
Resolve a key to an alias.
Resolve and return an engine based on a scheme.
Parse a database and schema from a string path.
parse url and return database info
Create a new user and return the user object.
Returns a list of objects associated with the given user.
Creates a password change form.
Add the url name to the context.
Parses a boolean value and returns a string representation of it.
Parse an int from a string.
Get a parser for a given type.
Construct a new instance from a model and a set of named fields.
Encode string s as y64 using urlsafe b64encode.
Create a field of a given type.
Create a validator from a dictionary.
Find unique points in a group of parameters.
Change logging kwargs.
Try to create the directories of a given file.
Recursively walk the AST and return a list of all strings in the argument list.
Set the logger for this class.
Extract replacements from the given trajectory.
Check if an option is a string and replace it with a new string.
Writes the given parser to the given memory file and flushes the file. Returns the
Find a set of options for a given parser.
Find a dictionary of strings that start with str in the dictionary
Read the config file and replace all options with str.
Handle a log configuration dictionary.
Create the logging handlers and the tools.
Finalize the configuration.
Start a new stream.
Writes the given buf to stderr.
Returns True if two objects have the same v and v values.
Return True if two values of same type are equal.
Make sure class has a prefix naming convention.
Adds a standard parameter to the trajectory. v fast access = bool traj.
Run a neuron and save the results to a net. f file.
Apply diff func to the differential scheme of the given Euler scheme.
Add parameters to a function.
Computes the difference between a value array and a value array.
Create a storage service.
Creates a storage service.
Adds a new parameter to an existing trajectory.
Computes the difference between two values
Determine if a node has any of its parameters in a group.
Builds the model equation dictionary.
Calls build method for pre build of the parameter group in the specified trajectory.
Builds the network model for the given trajectory
Build the neuron group and network dict.
Set self. pre build = True if self. pre build = False otherwise
Build a network from a given trajectory.
Adds a parameter to the parameter trajectory.
Compute the farguments factor of a spike array in a neuron
Computes the mean fano factor of a neuron
Computes the mean frecursive factor of the neuron in the subrun.
Adds the monitor to the network
Make the folder where the print data is stored.
function to plot the result of a neuron
This function prints the graphs of a trajectory.
Add the results of the subrun to the plot.
Get the batch number of strings in optlist.
Given an N - dimensional trajectory with a batch of num trajectories generate an array
get the value of the vars
Function name of the expression.
Renames the string to the specified full name.
Sets the node s details.
Convert a node into a message string.
Delete a node and all its children.
Removes a node or leaf from the tree.
Translate a shortcut name into a boolean.
Determine the type of the value of a node.
Create a link instance
Check the names of the split names.
Set the run information of a tree node.
Returns an iterator over the nodes in the graph.
Create an iterator over the children of a node.
Recursively traversal a breadth - first traversal starting from the given node.
Recursively search the children of a node and return a child that matches the given key.
Perform a backwards search on the given node. Returns a list of names that match the given
get the value of the node. If the node has a value of none then the value
Adds a new group from a storage object.
Add a leaf from a storage group.
Return the data stored in self. v. root if self. v. root is root
The debug representation of the tree.
Returns the parent of the node.
Remove link with given name. Raise error if link already exists.
Remove a child of this object.
Get the default value of a function.
Returns the list of children of this node.
Returns the groups of the file. If copy is True then the groups will be copied and
Returns the leaves of the tree.
Returns the links of the node.
store the data into the group instance storage service.
Adds a result group to the network.
Add a derived parameter group
Add a derived parameter to the network
add a new config group
add a new config to the network
Add commit variables.
Create a git commit and return the commit and the hexsha of the new commit.
Recursively flattens a dictionary.
nested dict with values separated by separator at the end of each key.
Get the argspec of a function.
Given a function func and a set of args return a dict of the matching kwargs.
Formats the given timestamp as a string and returns the formatted string.
Returns a random port for a tcp domain.
racedirs in a given path.
Resets the values of the progress bar to the given value.
Returns the remaining seconds of the given index in seconds.
Return a copy of the dictionary.
Removes the given key from the dictionary. Raise an attribute error if the key is
return the string representation of the f ann
Make the string shared in result.
Make a shared result.
Store the request data.
Get the data node of the node.
Check if the item is a supported item.
Create a shared data item.
Store the number of processes in the process name traj. results. f store the number
Lock a given request for a given client.
Send a done message
Finalize the connection to the server.
Start the socket.
Send a request retry the request if the response is pollin and return the response if the
Try to acquire the lock.
Listen for incoming requests.
put data to the queue
Detect the current process to fork.
Handles data stored in the service.
Runs the trajectory thread.
Receive the data from the queue and return it.
Receive data from the connection.
Stores the object in the storage service.
Stores a message and stuff to store.
Store references to references.
Collect values from a section.
Collects the configuration from the given configuration sections. Returns a dict with the configuration values.
Interpret self. kwargs and self. kwargs
Add parameters to configuration.
Plot the pattern.
cellular automaton 1 d.
Update the time since the last update.
Returns the overview group.
Loads a series of items from an iterable.
Check hdf properties.
Stores several items in the given iterable.
Check if the underlying hdf5 file is closed.
Extracts the information from the srvc file.
Create a backup of the trajectory
Read out colnames from row in a table.
Prepare a new run table for the given traj.
Check if the version of the PEX is the same as the one passed in.
Load parameters from an overview table.
Stores the details of the overview in the given traj as a table.
Save a trajectory object to an hdf5 file.
Create a new leaf of the tree.
Store nodes dfs in a tree
All store parameter or result table entry.
Get or create a table.
Returns a node in the hdf5 file with the given name.
Performs all insert into row in insert dict.
Cut all strings that are longer than max length
Create a new hdf5 group or get a new group from a parent hdf5 group.
All create or get groups.
Store the annotations of the given item with the annotations of the given node.
Load annotations from the given item.
Store a group in the hdf5 file.
Load a group into a trajectory group.
Load the v - comment from the v - comment of a node in the hdf5 file
Extract missing flags from data dict.
Return True if the instance is in the prm meta table otherwise False.
Add information about an instance to the prm.
Write data into shared array.
Write a shared table to the hdf5 file.
Write a dictionary as a table
Write pandas data
Write data into other array.
Write data into an array in the hdf5 file.
Delete a link in the hdf5 file
Returns a column in the table if the value is an integer or ndarray. If the value
Get the length of the longest string in a list.
get a dictionary from the table
read shared data
Read the value of the array and return it as a native string.
Loads a trajectory from data.
Make a string name for a given set index.
Set property of object.
Appends dynamic imports to dynamic imports
Set the default value of a function.
Returns whether the task is completed.
Removes all stored parameters
Update the run information with a new run information dict.
Add information about a run.
lock the parameters
Return the lock for all the derived parameters.
Finalize the function to store the results.
Load the skeleton from the file - like object.
Adds a wildcard function to the list of wildcard functions that have the same name as the
merge many trajectories
Merge information from another trajectory into this one.
Renames the full name of this trajectory with the name of another trajectory.
Merge config from another trajectory into this one.
Merge another trajectory into this one.
Merge results of other trajectory into one.
Restore the default value.
Set all the parameters to the given index.
Make the node and links in a single run.
Returns a list of run names
Start a new run.
Set the start time of the run.
Sets the information about the run.
Create an instance of this class.
return a dictionary of values
Cleans up the run information.
Delete links in iterator of links.
Remove all children of this node.
Return a sigint handling a single run.
Returns a sigint handling pool around a single run.
Convenience function to configure a storage pool.
Configures logging and traj logging on a frozen pool.
Configure niceness of a single run.
Convenience function for single run.
Configures the logging manager.
Configures the niceness of the current process.
Run a single sigint handling function.
Wrap logging with sigint handling.
Load a class from a full class string.
Creates a new class based on the given class name and dynamic imports.
Returns the length of the function.
Returns a string representation of the function s value.
Returns the range of values in the function.
store self. data in self. table
Load data from a dictionary.
Load a dictionary into this parameter
Returns True if the values of val1 and val2 are the same.
Check if data is a supported matrix.
Build a tuple of names for a particular sparse parameter.
Reconstruct a list of lists of strings into a spsp. matrix.
Reconstruct the matrix from a dictionary.
Return a store dict for the object.
Load values from a dictionary.
Translates a key.
Returns a string representation of the value of the function.
Return a dictionary representation of the data.
set single item if supports otherwise raise type error
Check if the given item is a supported matrix.
Stores the results of this instance as a dictionary.
Load a dictionary into the matrix.
set single item
store the values in a dictionary
Load values from a dictionary.
Merge all files in folder
Creates a new session with the specified user and password.
Merge the trajectories of a given service.
Starts all the jobs in a given session.
Multiply x and y by z.
Run a neuron.
Process the result of a neuron postproc.
Add a parameter to a trajectory.
Adds a new trajectory to the current trajectory.
Extracts all subruns of the durations in the given traj.
Execute subruns of the network.
Add new parameters to components and network runner.
build and execute network
Return the filename of the trajectory as a string.
Return the next string in the chain.
Handles keyboard interrupts.
Tries to load a configuration from a file.
Method to retrieve the pin code and the pin code from the API.
Request the access and refresh tokens and write them to a file.
Refresh the access token and write tokens to file.
Gets the thpullats for the given access token.
Writes the current user s access token and refresh token to a file.
Set VVAC mode
Set the fan min on time.
Set the climate hold for the given index in the log file.
Delete a entry from the log
Resumes the program at the specified index.
Sends a message to the log at the specified index.
Generate a random delay.
Return the time left of the request.
generate the renewing time
return a dict with the keys and values in fsm attrs
Reset the state of the client.
Get the timeout for the specified function in the specified state.
Set the timeout for a specific function in a specified state.
Selects the next available offer.
Send a request to the current state.
Set the timer to the current state.
Log a nak packet.
Set the current state to the initial state.
Check if the current state is within the current state. If it is within the current state
Raise self. request if self. request > = max attempts request.
Raise an exception if the number of attempts request is less than the max attempts request.
Rebinding the current state if the number of request attempts is less than or equal to max
The client is waiting to receive an available offer.
Handle a received ack requesting packet.
Receive a Nak requesting.
Called when a ack is received. Raises an exception if the connection is closed.
Receive the nak and raise an error if the packet doesn t exist.
Receive an ack re binding.
receive nak rebinding
Invoked by the timer when the timer has changed the lease of the client.
Set the value of a field in this QuerySet.
Add a new name and value to this node.
Returns a copy of this query set without the specified name and value removed.
Gets the status of an XML - RPC or XML - RPC request.
Reads a tdms file and returns a list of ch names and data
Convert tdms and chn names to fcs file.
return True if the two commands have the same name
create a new patch
Delete the series after the current series.
Deletes a patch from the database.
Check if a file exists in a patch.
backup a file
Add a file to the database.
Run the command.
Create the directory if it doesn t exist.
Copies this directory to dest.
Link to a file or a link.
Copies the file to dest.
Get the directory of the file.
Creates a backup file in the specified directory
Unapply a given patch.
Applies a patch.
Applies the next patch to the series.
Applies all the patches in the series.
Reads the series file and adds the patch to each line.
Save the patchline to a file.
Adds a patch to the patchline.
Insert a list of patches into the patch2line dict.
Insert or update a list of patches.
Remove a patch from the patchline.
Returns a list of the patches after the given patch.
Returns a list of the patches before the given patch.
Return a list of all patches until the given patch.
Replace old patch with new patch
Create the version file if it doesn t exist.
Check the version of the database.
Add the arguments to the given parser.
Add this argument to the given parser.
Adds this subparser to another subparsers.
Sets the subparsers arguments.
Adds subparsers to the given parser.
Check if a file exists in a given patch
Return the next patches after a given patch.
Revert a file.
Import a patch from a file or a new patch name.
Import a list of patches into a file.
return way object for way w
Return the set of node ids that are not in the present node ids.
Adds a node to the graph if it doesn t already exist
Build a route from a relation
Create route long name from relation and short name.
Get the agency id of a relation.
Process the file.
Add a relation to self. relations.
Patch agencies.
Yield tuples of time and time values for a trip.
Writes the contents of the archive to a file.
Writes the contents of this project to the given destination.
Build an agency for a given relation and set of nodes.
Extract stops from a relation between two nodes and a relation between them.
Build a shape from a relation of nodes and a number of ways.
Returns a list of supported Apdu versions
Send an ADU to the device.
Authenticate to a set of devices.
Registers a new app with the specified facet.
Authenticate the app with the specified facet.
Registers the given facet on the specified devices.
Convert unicode to str
Wrap a class with an error decorator.
Returns True if the filepath matches one of the patterns.
Returns the email address associated with the given email.
Returns the string associated with the given entry in the tree.
Convert markdown to re.
Serve the given configuration.
Gets an image from a URL and converts it to a file - like object.
Convert a string to an image file.
Check if an image is big enough.
Check if the image has a big enough width. Raises an error if the image is
Check if image height is big enough. Raise image size error.
Returns the category object if it exists or None if it doesn t.
Returns the total number of the value of the field named name in the source. If the
Yields all the items in the source.
Saves the error to self. errors.
Parses the XML data and loads it into memory.
Parses the given item and returns the parsed data.
Returns the instance associated with the given data.
Saves the data to the specified instance. If commit is True the object will be saved
Downloads a file from a URL to a destination.
Loads the specified source file into this object.
Returns a generator yielding all headers and values in the source file.
Set whether to allow network access.
Adds a set of files to a tar file.
Add a new file to the working directory and rename it.
Returns a list of canvas enrollment objects for the given course id.
Returns a generator of courses associated with the passed sis id
Returns a list of canvas enrollment objects for the given section.
Gets a list of section objects from a SIS section by ID.
Returns a list of enrollment objects for the given regid
Returns a canvas enrollment for a user in a course
Get a list of user s roles in an account.
Get all the roles in a sis in an account
Returns a list of the effective course roles in an account
Get a role by id
Get a role by account sis id
Get a course by it s id
get course by sis id
Get the list of courses in an account
Get a list of courses in a sis account
Returns True if the user has published courses in an account. Returns False otherwise.
Fetches published courses in a sis account by sis id
Returns a list of courses for the given regid.
Create a course
Update a sis id
Get activity by account and term id
Get a single term by account id and term id
Get statistics by account and term id
Get activity by sis id
Get assignments by sis id
Get student summaries by sis id
Get student activity for sis id and sis user id
Get a particular student for a sis id and sis user id
Get a list of external tools in an account
Get external tools in a course
Creates an external tool in the specified context
Update an external tool
Delete an external tool from a context
Check if an object has all of the required parameters.
Get a user by user id
Returns a list of users associated with a course.
Get all users for a sis in a course
Create a user and return a canvas user object
Get a user s logins
Update a user login
Returns the next page in the response header.
Retrieve a resource from the API.
Get resource url with auto page parameter set and per page = default pagination
Get a resource by URL.
Sends a PUT request to the specified URL with the given body. Returns the response object
POSTs the given resource to the specified URL and returns the response as a JSON object.
Deletes the specified resource from the specified URL. Returns the response object.
Get a list of accounts associated with a given account.
Create a user in an account.
Create an admin by sis id
Delete a user from an account
Delete admin by sis id
Create grading standard for a course
Get a section by id
Get a section by sis id
Get all the sections in a course
Returns all sections in a course by sis id
Returns a list of uw_sws. models. Section objects for the given course
Returns a list of uw_sws. models. Section objects for the passed s
Create a section
Update a section
Returns a list of the qu depending on the provided course id.
Fetch account by id
Get a list of sub accounts of an account.
Update an account
Update a sis account
Get the auth settings for a given account
Update auth settings for a given account.
Get a term by sis id
Imports a CSV file into a canvas account
Imports a CSV file into a canvas account
Get the current status of an import
Builds an archive from a list of files.
Get all assignments
Updates an assignment
Get the available report types for the given account.
Get a list of reports of a given type in a given account.
Create a report
Create a course provisioning report
Create a course sis export report
Create a unused courses report
Get report data
Get the status of a report
Delete a report
Moves detections from a label to a new location.
Flip detections from label to w.
get dict from object without many - to - many fields
Returns a config dictionary for the given request.
Return the value of the string edit if it exists or the value of the string edit if
Create a new metric for a given configuration.
Configures the logging for this class.
Configure the registry of collector functions.
Create new metrics for the metric configuration.
Get metric by name and labels.
Return the home page.
Gets the metrics from the registry and handles them.
Return the content of the response.
fix http values
Make a web request to the app specified by input with the specified parameters and return the response
Return a string representation of the error message.
Return all pods that are primary or the title as a string.
Encode the given data as JSON.
Calls the API at the specified URL with the specified parameters. Returns the response object.
Calls the API at the specified URL with the specified parameters. Returns the response object.
Sends a PUT request to the specified URL. Returns the response object.
Sends a POST request to the specified URL. Returns the response object.
Group sentences according to total nb sentences and group length.
Disambiguate a PDF from a file.
Disambiguate a query.
segment text by segmentation service.
Get the language of the user.
Retrieve a concept by its id
Fits the ensemble with the given features and classes.
Predict the accuracy of the given features using the ensemble if scoring function is none then return
Convenience function that calls fit and then calls predict.
Return accuracy score for given features and class labels.
Transform a list of features into a string.
Compute the Pearson score of the features and targets.
Create a vector from an iterable of strings.
Convert a sequence of members into a vector.
Evaluate a file and return the last form.
Evaluate the given string stream and return the last form.
Evaluate a string s and return its value.
Creates a new module and adds an alias to it s namespace.
Runs the given code in the given namespace.
Add a method to a mapping.
Adds the specified method to the specified key.
Removes a method from a map.
Remove a method from the method cache.
Check if a variable is a macro.
Returns the location of the line and column specified in the form.
Raise a parser exception if the op is not recur.
Assert that the node is a tail node.
Resolve a bare symbol.
Resolve a symbol.
Parse an AST form and return the root node.
Returns a warning on shadowed variable.
Return a string representation of the entries of a function.
Return a string representation of an iterable.
Returns a string representation of the given object if an object is not representable.
Recursively fix missing locations in this node and its children.
Compile form of form and exec it.
Compile the given module by the optimizer and fix missing locations.
Compile a list of forms into a module.
Evaluate the given code with the given optimizer.
Create a sequence from a string and its next element except stop iteration.
Munge the string s into a new string.
Returns a fraction.
Gets a new logging handler for the specified level and formatter.
Map a list of strings into a new list of strings.
Partition a collection into n sub - lists.
Reads and returns the namespace and name of the given context.
Reads a collection of elements.
Reads a list.
Reads a string or collection of strings into a vector.
Reads a list of strings into a list of strings.
Reads a string from the specified reader context.
Reads a symbol by its name.
Read a keyword.
Read the meta text.
Reads a quoted list.
Expand syntax quoted form into an expanded form.
Reads the next consume of the comment in the syntax quoted form.
Read the next component of the comment.
Reads a character from the reader.
Reads a regular expression from the given text.
Read a reader macro.
Read the next consume comment.
Read the next token and return it.
Read a string from an input file.
Read a file into an iterable.
Update the line loc.
Push back the current index. Raise index error if the index is > self. idx
Return the next token after the current token.
Replaces the magic number and source size with a string of byte code.
Returns a list of strings that represents the contents of the cache data.
Returns the cache file name from the given source file.
If any of the modules in the sys. meta path are imported before the module is imported
Find the spec for the specified module.
Execute the cached code of the specified module.
Execute a module in the interpreter.
Execute a module in the current namespace.
Create a new symbol by name and optional namespace and meta attributes.
Returns a list of strings in text that start with the given prefix and end with the given
Create a new keyword if it doesn t already exist and return it.
Returns the value of a keyword in the namespace of the given name.
Return the chain of nodes from the given node genned into the given node genned.
Convert a given iterable into a collection of ASTs.
Change the line and column offset of an AST node.
Wrap a function to return an AST with lineno and col arguments.
Wrap a function to return an AST with the loc of the first line and column of the
Check if a variable is dynamic.
Returns a boolean if the variable is redefable.
Convert an expression into an AST expression.
Convert an expression into an ast. function.
Converts the given context to a Python AST.
Generates a new name for a given string.
Convert function arguments to py ast.
Convert the given function into an AST that has the same interface as the given method.
Convert the given function to a Python AST.
Convert if body to py ast.
Convert a Call node to a py ast node.
Converts the context to a Python AST with the op as the quote in the expression.
Convert a generator expression to a Python AST.
Convert the given context to a Python AST.
Convert a set bang variable into a py ast node.
Converts the given exception into a py ast node.
Converts the given context into an AST for the given try node.
Convert a sym node to an ast. ast object.
Find a variable in the given namespace with the given name and context.
Convert a variable sym node to an ast. sym node.
Convert an operator property to a py ast node.
Convert maybe class to py ast node.
Convert an maybe host form to a py ast.
Converts a value to an AST string.
Convert a collection literal to a Python AST.
Convert the given context into a function node.
Imports the module in the given context.
Creates an ast. from statement from the given module.
Create an ast. assign node for the given namespace variable.
Convert a list of strings to a set of strings.
Returns the string representation of a set of members.
visit the except handler node and return the new node.
Return node s value if node is a constant and its name and its num is a string
visit the function node and return an ast. Function node.
visit the while node and return an ast. while node.
visit a try node and return an ast. try node.
Creates a new module type.
Return the first character of an object i. e. the character at the end of the
Return the rest of an object.
Remove the ith rest of a collection.
Get the nth element of a collection.
cons cons function.
Convert an object to a sequence.
Concatenate a sequence of sequences into a single sequence.
Associate a string - like object with another string - like object.
Return coll. cons with xs. Raise type error if coll. cons is not a
if o is an element of i return it otherwise raise type error
Return True if v1 == v2 False otherwise.
Return x / y.
Sort elements in a collection.
Return True if coll contains k.
Returns the value of the field named by k if it exists else default.
Converts a string to a list or set of strings if o is a dict or frozenset
Converts o to py list or py backup if o is not a list or py backup
Return a human readable string representation of an object.
collect args and raise type error
Decorator that adds a function to a function that returns True or False.
Resolve an alias of a symbol.
Resolve an alias to a variable in a namespace.
Add a generated variable to the current namespace.
Install a new variable namespace and return its root value.
Get the basename of a variable in a namespace or create a new one with the same name
Find the namespace associated with a name sym.
Find a variable in a namespace qualified sym.
Find a safe value in a namespace symbol.
Adds a default import to the gated imports.
Add an alias to the symbol.
Replace var with sym. symbol. symbol. var.
Associate new var with sym. symbol.
Returns the current value of the symbol corresponding to the given sym. symbol.
Adds a new symbol and its aliases to the current module.
Returns the module referenced by sym or None if it doesn t exist.
Associate a var with sym. symbol.
Get a refer to the given sym. symbol.
Return a copy of the current state of the refered state of the current state of the
swap the refer all and all refer to another namespace.
Get or create a new namespace.
Get or create a symbol by its name.
Get symbol by its name.
Remove the given symbol from the namespace map.
Completes the given prefix with the given name in the given namespace.
Returns a list of strings that match the given prefix and all of the aliases in the module
Returns a list of strings corresponding to the completion of the given value.
Returns the string of all the refers elements of the given value.
Completes the given text.
A tuple of the arguments of the function.
Create a list of properties from an iterable of properties.
Returns a list with the specified members of the list.
Decrypt a JWT
Encrypt the JWT payload using the given key purpose.
Delete the cache key associated with this instance. If the key does not exist in the cache
Return the string representation of this comparison.
Parse the given fiql string to an expression
Dump a protobuf model to a file - like object.
Object hook handler.
Decode a string representation of a date into a datetime.
Decodes a string representation of a JSON object.
Returns the default value for the given object.
Returns the leicacam. version version version number
Topological sort the graph. Returns the topological order of the components in the graph.
Set the parent of the query object
Returns the parent expression
Add an element to the working fragment.
Apply logical operator to each element in the expression.
Applies the given operator to each of the elements of the expression.
Parse the receive message.
Convert a list of tuples into a dict.
Returns the message if the cmd is equal to the value or if the cmd is not equal
Prepares the message to be sent.
Waits until self. buffer size flushes the log.
Enable one or more slide and wellx and fieldy.
Save a template to a file.
Get information about the server.
Locate the systemjs package json file.
Parses the package. json file and returns it as a string.
Handles an error with json in the response.
Validate the response of yourls API.
homogenize two waves
Evaluate the dep vector for a given indep in the wave.
Compute the indep vector between two waves.
Determine whether the two wavelengths are compatible.
Load the systemjs manifest
Create a namedtuple of the trace parameters for a given module.
Expand a URL or action.
Get statistics for a given URL.
Returns a list of links and statistics.
Returns the database statistics.
Splits an iterable into chunks of size chunksize.
Flatten an iterable.
Print a table of records as a tab - separated string.
Create a dummy type for the given name with the given attributes.
Converts a human readable string to a number.
Trace a module s callable names into a string.
Returns a list of links from a json file
Appends a common version string to the plist.
Appends version information to plist.
Converts a string with supp ops to words.
Yields a chunk of noise
Generates chunks of data according to a given frequency vector and the matrix of the data.
bound the waveform in the given wave to the given indep range.
Build indep units from dep units and op units
Calculate the operation of an object
Calculate the running area of the dependency dependency dependency vector.
Validate that the indep range is within the wave s indep vector.
Add anex error to the given wave.
Add anex to a str pexdoc. exh. addex.
A helper function for an asin operation.
A helper function for the arctanh angle.
Add an exception to the given wave.
Return a string with the group delay of the given wave.
Add an exception to the log of a wave.
Calculate the square root of the dep units of the wave.
Convert a complex wave into a string
Add a new exon to wave. dep vector and change it to a float.
Add an intex to a Wint - like object.
Find the files to serve.
Get the short description of a given string.
Build an expression from a list of tokens.
Remove the next occurrence of item at pos.
Returns a list of the functions in the expression.
Parse the expression of the given text.
Remove consecutive delims from a sequence of strings.
Return a string representation of a number in a tuple.
Convert number to string with exp < = number.
Convert a string to a float.
Peng frac of snum. Returns int or int if snum is not a
Converts a string to a float.
Determine whether the js extension needs to be used.
Executes the bundle command and writes the output to a file.
Returns the trace of the specified app in the package. json file.
Returns True if the hashes of the dep tree match the md5 of the hashes of the
Format the hexdump of the argument.
Parse a docstring into a section and a list of parameters and a list of returns.
Returns a list of valid functions for the current context.
Annotate the context of the given add action and raise an argument error if the add action
Split a line into a list of strings.
Check if any of the commands in the context need to be invoke.
Returns the list of the names of the functions associated with the given list of arguments.
Find a function in a context
Return a string listing of all functions in the specified context.
Returns True if arg is a flag.
Extract the value of an argument.
Invoke the function on the specified line.
Returns the section name if it is a string and if it s a main section return the
Classify a line of text.
Join a list of lines.
Convert the value to the specified type.
Convert a binary value to the specified type.
Returns the number of bytes of a given type.
Returns True if the given type name is in the known types list.
Split a type name into a base and sub - type name.
Instantiates the specified type in the specified base type with the specified subtypes.
Returns True if format is known and False otherwise.
Injects the type object from the specified module.
Add a new parameter to the annotated parameter list.
Returns a string representation of the value of the specified type.
Format the return value of the metric as a boolean.
Returns the first possible argument name that starts with the given name.
Returns the type of the parameter with the specified name.
Format the return value of the function.
Convert a positional argument.
Convert an argument to a value.
Returns a string representation of the message.
Return a dictionary representation of the class.
Check if a function is valid and execute it.
Parse a list of valid values.
Find all strings in a container
Find all the strings in a module and replace them with their documentation
Returns a help string for the given function.
Annotate a function with its metadata.
Annotates a function by its name.
Get the short description of a function.
Loads the command classes from the project module.
Installs the kronos schedule in the registry.
Prints the contents of the crontab
Removes the kronos from the crontab.
Creates a new handler for the given URI if it doesn t already exist.
Loads all the projects from the config file.
Save one or more projects to the config file.
Returns the projects that this project depends on.
Initialize the project at the specified path with the specified status.
Returns the value of the function f in the specified state.
Applies the function f to the state.
Return the current value of the fold in the given state.
Applies the function to the list of elements in the given state.
Applies a function to each element in the sequence. Raises a type error if the
Applies the function with the given state to the given value.
Apply the function to the given state and return the result.
Return the optic name of the object.
Main function that checks the game state and prints it to the terminal.
Return the step of self and other where the step is greater than or equal to other.
Handle input from the player.
Advance the robots by this player.
Ends the game. Returns True if the game was started False otherwise.
Moves a player to the given position.
Prints a random move to stdout.
Make a move to the player.
Returns a string for the username of the team.
Returns a string of all the potential clients in the board.
Add a new item to the queue.
Sets the timestamp of the spider to an ISO8601 formatted string.
Upload a single chunk to S3
Export the tree as a text file.
Calls the jsonrpc. get account state API for the specified address.
Get asset state by asset id
Returns the hash of the block at the specified index.
Get the value of a particular block sys fee.
Get the state of a contract by script hash.
Get the value of a transaction by its hash.
Get a value from the storage.
Get the value of a particular transaction by its hash and index.
Invoke a JSON - RPC script.
Invoke a JSON - RPC function.
Call a JSON RPC script and return the result.
Send a raw transaction.
Calls jsonrpc. validate address. value and returns the result.
Makes a call to the API and returns the response.
Returns True if s is a hash256 string
Return True if s is a hashable string and its length is not equal to num.
Encodes a list of contract parameters into a string.
Decode the result of an invocation.
Applies the filter to a datetime object with the given timezone.
Render and save the template to a file.
Render the image using the provided writer.
Renders the specified code to the specified quiet zone.
Edit config file if it exists otherwise raise usage error.
Download a file from a remote path to local path.
Uploads a local file to a remote location.
Downsyncs the config to the local config folder.
Show the difference between the local config and the global config.
Parses an environment variable into its string representation.
Set config. username and password to the given values.
Add the API key to the config.
Yields the content of the JSON file in the given folder.
Returns a list of schema objects from a JSON file.
Returns the schema in JSON format.
Return a jsonschema. ref resolver for this schema.
Check if the given object is valid according to the JSON schema.
Returns a list of valid examples
Returns a list of valid examples for the given schema.
Constructs the auth URL for the specified user.
Process the given URL and return the auth code.
Returns an auth token for the current user.
Get user id.
Returns a list of files and directories in the specified folder.
Create a new folder or return a new folder.
Add a comment to an object.
Decode an object if it is a byte string. If the object is a byte string it
drop target from obj. drop target = obj. drop target = obj. drop target =
start drag opperation event
Sets the value of this cell as the default value for this cell.
Inspect an object
Remove str from font and replace it with str if str is in font.
Loads the page at the specified location
Send an alert message to the user.
wellcome tip for an object
handle mouse down event
handle mouse move
Handles key press events
Delete all objects in the selection and load them into the inspector.
Creates a copy of the current selection
Refresh the snapshot of the object.
Calculate best position of widget
Get py data for given item
set item data and return wx data
Find the data that corresponds to the given python data.
Delete an item in the list
Delete all items
Clear all of the columns.
set selection of given index in wx object
Returns string selection
set client data
Appends a string to the items dict.
Find window by its name and return its parent
Adds a child to the widget.
set parent to new parent
Draw the tile background
Erases the background of the tile
draw text to dc
Return column headings.
Update values and adjust scrollbars
Update values in grid
Updates the column attributes of a grid.
Sorts the data by a column in the table.
Clears the grid
Creates a new combo box
Begins the edit
Set the value of the edit cell to the value of the cell
Checks if a key is accepted
Set the string selection for the given key.
Enables the specified value in the menu.
Return a boolean indicating whether or not the menu item is enabled.
Enables the specified value in the menu.
Return a boolean indicating whether or not this menu is enabled.
Removes the specified item from this list.
Set object tag.
Convert text in table to plain plain text.
Return the documenter for the given object and parent.
Mangle a signature into a string with at most max chars chars chars chars chars characters.
Attempt to import an object by its name.
Sphinx role for autolink
Displays an alert message
Prompts user to input a string
Selects the font of the specified message and title. If font is not set the default
Show a color dialog and return the result s color
Show a dialog to choose a directory. Returns the path of the selected directory.
Find dialog dialog to get search text and whole words.
set has children
Sets the icon
Parses a string from a file and returns it as a Python object.
Writes the given string to the given file.
build a window
Builds a component from a dictionary of strings.
Convert a card property name to a new name.
Sets the data in the clipboard
Tries to find the name of an object in the docstring of the specified object.
Load an object into the tree
Inspect an object in the tree
Activates the child item
Update the specified child in the tree.
show context menu
Returns the absolute URI representation of the image.
Checks if the current element of the path matches the given kwargs. Returns True if the
Returns True if path is not current.
Select option.
Returns a webdriver instance for the given browser name.
Evaluate the xpath expression of this node
switch to frame
Accept an alert and wait for it to finish.
Accepts a confirm message and returns the response.
Presents the specified string to the user with the specified confirm flag.
Prompts the user for a prompt.
Prompts the user for input.
Save the body of the page to the specified path.
Save a screenshot.
Raise the server error.
Check if the input element has a checked field.
Check if a field has no checked field.
Returns True if the document has the specified field.
Returns True if the document has no field matching the specified locator. kwargs can be used to
Returns True if the expectation has the specified title False otherwise.
Returns True if the expectation has no title.
Get the string representation of the inner content of a node.
Get the inner text of an etree node.
Normalizes the given URL.
Returns True if the specified element should catch the specified error and False otherwise.
Compare the number of objects in the result cache with the number of objects in the result cache
Return True if there is at least size elements in the result cache else False.
Returns True if options has at least one option. Otherwise returns False.
Returns a failure message based on the specified options.
Returns True if count matches options.
Normalizes text.
Strip whitespace from the given string.
Convert text to a regular expression.
Determine if the URL is resolve to the expected path.
Resize the window to the specified size.
boots the capybara server
Set the context s fcget attribute.
Set the instance method.
Sets the class method of this class.
A string representation of the current stack trace of the exception.
Returns the source string of the specified instance.
Get the logger for the given instance.
Set the logger to use.
Makes a request to the API and returns the response.
Returns a list of channel names associated with this user.
Returns a list of user resources associated with this account.
Create a message with the specified text and channel.
Translate slack message to new format
Send a Slack message
read channel from Slack
Run the task.
Imports and runs the client.
Return the difference between two dictionaries.
Colorize a string using the specified color.
v2 playbook on task start
v2 playbook on stats
v2 runner on skipped
Format a prefix to a string of addresses.
Add a model to the collection.
load all jinja filters
Returns the full path of a file in a module.
Perform an HTTP POST request for a given URL.
Returns a URL for the authorization endpoint.
Retrieves a token by the given code and params.
Parse a URL query string and return a dictionary of query parameters.
Turn a URL into a query string.
Build a URL from the given base URL.
Handle the given exception.
Returns a response object with the specified body headers and status code.
Make a redirect error response.
Make a JSON response with the given data and headers.
Get the authorization code for a client.
Update an access token with a new refresh token.
Get the access token.
Get authorization code from a URI.
Get a new token from post data.
Returns the authorization header if the authorization header is present and if the access token is valid the
Open the device with the specified bus.
Read a single byte from the device.
Read the specified number of bytes from the specified device.
Reads a single byte from the device.
Write bytes to the device.
Write a single byte to the device.
Write a block of bytes to the device.
Create a new copy of this object.
Creates a new local copy of this URI.
Construct a File instance from an existing File instance.
Uploads the given file to the given object.
Returns a list of file CDN urls.
Construct a new |Group| object from an existing |Group| object.
Create a group from a list of files.
Perform the given operation on the given request and return the response.
Returns a generator of uuid strings for each of the file - like objects.
Creates a list of items in the given namespace.
Prints a bar plot of iter content.
Get the home mode status.
Returns a list of camera objects for this scene.
Retrieves camera information for a list of camera ids.
snapshot a camera
camera event motion enum.
Save camera event to md param.
Update the list of cameras and their motion settings
Determine if the current num id is the last of the li that has the meta data
get single list nodes data
Returns the int of the value in the namespace of the input li if it exists in the
Get the merge of a tc.
Get the number of grid span of a cell
Get the td element at the given index
Return True if style is not a string.
Returns True if r is in the specified namespace and False if it is not in the specified
Determine if the given string is an italics string in the given namespace.
Returns true if the given string is underlines in the given namespace.
Returns True if the element is the title of the element.
Yield text run content data.
Get relationship info.
Return the list numbering style if num id is not in numbering dict return default list
Given a table and meta data build an element and append it to the corresponding table.
Get text content of a tag.
Remove all elements with the specified tag from the tree.
Find and create a file for a given dataset.
Load data from pickle file.
Plot images at loc.
Plot a set of layers.
Plot the image filters.
Encodes a string into a list of strings.
Add a weight conv weights to the model.
Decode z into a function.
Calculate the score of x.
Predict the class label of the input x.
Predict the class label for the input x.
Predict the logit of x.
Returns the list of variables of the network.
Computes the accuracy of the outputs.
Build a new activation from a given name and layer.
Rservoir function
Adds a loss to the layer.
Calls itertrain and passes the arguments to itertrain.
Build the graphs for the given regularizers.
Returns a list of input strings for each layer s input.
Returns the set of variables in the network.
Save the object to the given filename or handle.
Loads a model from the given filename or handle.
Computes the loss of the network.
Build a graph of updates for the given regularizers.
The size of the output image.
Resolves the input shapes for the given layers.
Resolves the outputs shape for this node.
Log the activate and params to the log file.
Computes the logarithm of each parameter.
Returns the formatted string for this node.
Resolve a shape from a set of layers.
Find a parameter by its name. Raise key error if no such parameter is found.
Add a bias to the model.
Returns a dict representation of the model spec.
Computes the loggabor of the environment.
Loggabor image
Adds a tier to the container. If number is none or number is less than the
Removes a tier from the stream.
Returns the tier with the given name.
Convert this tier to an eaf string.
Adds a point to the interval. If check is True an exception is raised if the
Add an interval to the list of intervals.
Remove interval from self. intervals if the time is greater than or equal to time.
Remove a point from the time interval.
Get intervals of the time series.
Returns a list of all intervals in the interval list.
indent el into level + num if el. text or el. tail or el. tail
Add a new annotation to the plot identified by the id tier.
Adds a description for a particular cv.
Adds an external reference to an entry in the set of external references for a given type
Add a lexicon reference.
Adds the given lingtype to the container.
Add a locale.
Remove the timeslots that have been added to the time slots.
Extract the eaf out the given time slots from this instance
Generate a new annotation id based on the number of timeslots and the number of annotation
Generate a new timeslots id.
Returns all child tiers of a given tier.
Get the time interval of the simulation.
Get the ref annotation data after time.
Get the ref annotation data between times a particular id tier and time.
Returns the list of tier ids for a given ling type and parent.
Remove all annotations from a tier.
Remove a description from the controlled vocabularies.
Removes a license from the license list.
Remove the files linked to the given file.
Remove a property from the entity.
Remove the reference annotation for the given tier at the given time.
Remove the secondary linked files.
Remove a tier from the time slots.
Remove tiers from the time slots.
Renames the tier id from id to id
Shift the annotations at a given time.
Writes a list of strings to stderr.
Gets the embedding levels of the text.
In - place embedding and overrides.
Resolves neutral types.
Reverse contiguous sequence of characters.
Re - order the levels of the input strings according to the specified level limit.
Set data in context to normalised
Add an object to the collection.
Command line interface.
Ensure backwards compatibility.
Find and show the gui for the given object name.
Discovers and returns the gui in the registry.
eval script to add to filemenu
List the previous selection in the context of this context manager.
Return the current time of the command.
Show the window title text and standard buttons in no gui.
Returns the cumulative data of the data.
Get the single axis values for a dataset.
Draw a constant line.
Load the transform parameters from the parameters dictionary.
Reverse a mapping.
Yields a range of numbers between start and stop where each number is a float.
Validate and append new data to the list.
Renders the graph
Calculates the left margin of the plot.
Calculates the right margin of the text.
Calculates the top margin of the graph.
Adds a popup with the specified label.
Calculates the bottom margin of the plot.
Draw the graph.
Make text within a datapoint.
Draw the x - axis labels
Draw the y labels of the field.
Draw x guidelines.
Draw the y guidelines.
Draw the graph titles
Render inline styles in the document.
Start svg element.
Return a list of all the stylesheet resources contained in this document.
Runs the given bot instance.
Sends the given data to the socket.
Connects the socket to the server. Returns True if the socket was created False otherwise.
Respond to a message.
Return a tuple of the patterns to be dispatched to.
Make a new nick and handle it.
Ping the server and send the specified payload.
This method is called when the server has been registered.
Reads the socket and calls the registered patterns.
Register a new nick with this node.
Runs a task in the task queue.
Return the command patterns.
Register a success command.
Send a command to all the workers.
Add a new nick to the queue.
Sends a validation email to the current user.
Send a password reset notification for the current user.
Returns a user if the user has been verified or if the user has not been verified.
Update the user s avatar and return the response.
Overrides the default allow request method to allow the request to the specified view.
A class attribute for the client class.
Return the TLS client associated with this connection.
Returns the name of the service.
Executes a docker call.
Executes a docker command.
Return the number of tasks in the service.
Stop the Docker container.
Filter the queryset with a lowercase value.
Updates the password of an instance.
Updates the password field of the given instance. Returns the updated instance.
Given an email address validate that the user exists and that the email has not been verified.
Creates a new token for the user specified by the request data.
Deletes a specific token
Check if the user is authenticated and the email address is the same as the email address.
Sends a validation email.
Update the expiry of the object and save it if commit is True.
Returns the password reset email context for a given notification.
Handler for email notification.
Send a password reset email notification
Calls the registered validation email handler for the given notification. The notification s email context is
Returns a tuple containing the user and token associated with the request data.
Authenticate the user with the given key.
Show a notebook.
Converts a list of Bokeh plots into a series of Bokeh plots.
get custom js callback
Returns a widget for the specified parameter.
Render function.
Create a text input widget.
Converts a list of string - like objects into a list of string - like objects.
Get the owner of a method.
assign auth values to self. auth
Performs a PING request and returns a boolean value.
Calls transport. perform request with self. transport. perform request with self. transport.
Returns the health status and data of the node.
Convert a number of bytes to a readable string.
Return the total load of the cpu
Returns the memory size in bytes
Returns the network up by human readable string
Returns the list of volumes in this container.
Returns the volume with the specified id.
volume size in bytes
Returns the volume percentage used
Returns the temperature of the given volume.
Get the maximum disk temperature of a volume
Returns the disk with the specified id.
Login to the API. Returns True if successful False otherwise.
Make a GET request to the given url and retry on error.
Executes an HTTP GET request for the given request url.
Update the current api url and storage url
Get syno utilisation
Get the storage for this instance
Create a context for a request.
Get the tenant token.
Build the widget s attrs.
Return a new settings object with the specified apps.
Remove one or more apps from settings. installed apps.
Returns a dict of global settings.
Perform the HTTP GET request.
Change the value of a config option.
Migrate a configuration file to a new one.
Start an authorize thread.
Waits until the server has returned a response.
Get a new OAuth access information.
Check if a new token is present in the configuration.
Set access credentials on the remote Praw instance.
Create a table with the given name as the manifest for the given dynamodb instance.
Split a full path into bucket and prefix.
Check if a bucket is a GLACier.
Returns a dict with non - none values removed.
Add a run id to the manifest
Check if an item is in the manifest
Extracts the schema from a URI.
Fix the schema in a string by stripping it out of the given schema dict.
Parse unstruct string
Transform a line of text into a JSON good event object.
Converts an event to a string and validates it.
Get the template name used in the response.
Print the given context block.
Returns a string representation of the variables in the given context.
pformat sql html
Pretty - format a given object in HTML.
Format dict summary html
Escape text for use in Markdown text - > mark safe text - > mark safe text
Returns the formatted string representation of the given object.
Format the given object to the given stream.
Parse a string and return the token at the current position.
get latex nodes from string s starting at position pos.
Get LaTeX nodes and return their text.
Return the text of the node in the latex tree.
Convert an ASCII - encoded string to an ASCII - encoded string.
Returns information about the recordings associated with the current user.
Retrieves a list of boards.
Retrieve a list of members
Fetch a new record from the API and create a new record from the API.
remove member by id
Adds a member to a group by ID
Adds a member to a group.
Returns information about the resource.
Creates a new card object with the given query and params.
Returns the label information for the specified label.
Returns a list of items in the collection that match the specified query.
Update label name
Update label dict
Get an authorisation URL.
Returns information about the card.
Returns a board object.
API endpoint to get a list of resources
Get checklists.
Add a comment to the current user.
Add an attachment to an existing file.
Creates a new checklist based on the specified query and params.
Fetch a new label from the server
This method adds a label from a label class. The label can be either a label object
Add a member to a group
Gets the information of the current user s group.
Returns a list of cards.
Retrieve a list of organisations.
Creates a new board and returns it.
Retrieves board information
Returns a list of lists from the API endpoint.
Returns a list of labels.
Retrieve a card by its id.
Retrieve checklists from checklist. json and convert to checklist object.
Retrieve a single record of the currently logged in user s organisation.
Fetch a board object and create it.
Fetches a list of resources matching the specified query and returns them as a list of resources
Returns a new label object with the label added.
Returns the checklist information for the current checklist.
Get card by its id.
get all item objects in checklist
Update a checklist by name
Adds a new item to the collection
remove item by id
Update checklistitem name
Update state of checklistitem
Add an authorisation to the API.
Check that the response was successful.
Builds the URI from the path and query.
Fetch the response as JSON.
Create an instance of the userid and name in this trolly instance.
Creates a board and returns a board object.
Create a label
Create a list of trolly. list.
Create a card.
Create a checklist.
Create a member
Gets the organisation specified by id and returns a new record.
Creates a board with the given id and returns a board object.
Fetches a list of all images by id and name.
Creates a card with the given id and name.
Get a checklist by ID or name.
Gets a single member by ID or name.
Extracts the domain from a URL
Convert text markupless to raw text.
Set the password for a user.
Split with locations.
Mark a regex as split locations.
Mark a regex at the beginning and end of a string.
Shortcut for the command line tool.
Create an AES cipher.
Get AES mode.
Returns the priority of this object.
Check if the scheme is valid.
Publish a message.
Make a string representation of self. id + num.
Returns a Deferred that will fire when the connection to the server is lost.
Handle an incoming connection packet.
Encodes a string to the specified number.
Decodes a string.
Encodes an int to a string.
Encode the length of a number.
Decode the length of an encoded string.
Encodes the message header.
Encode the message header.
Decodes a packet and returns a string representation of the packet.
Encode the variable header.
Decode a packet into the current session.
Decodes a packet into the internal structure.
Encodes the message.
Encode the message header.
Decodes the packet and adds them to the message.
Encodes the message header.
Encodes this message into a string.
Decode the given packet into this instance.
Decodes a packet and sets the dup flag.
Format the request URL.
Make a request to the API and return the JSON response.
refresh self. blocks from self. comm. rank if self. comm. rank == num
Format the data.
Performs a standard fit of the given data set.
K - Means the k - means algorithm
Predicts the class for the given data.
Map a set of random ids to a set of cluster ids.
Sort clusters by their mean.
Returns a string representation of the given datetime.
Get the total number of points in a dictionary
Get the total time span of the time span of the time domain d.
Return a string representation of an array of values within a given time interval.
return the pretty version of an element
Analyte 2 namemass
Find the 2 mass names in a string
Writes data from files in the specified directory to the specified output directory.
For an array of bools find the indices of the first num elements of each boolean array
Check if a list of tuples contains a 2D array of length num where each element is
smooth the array a by convolving it with a kernel.
Computes the gradient of a rolling window.
Finds the minimum value in x and y.
Compute the mean hift of a cluster.
K - means clustering.
Reads the table of srms in the input file and returns a list of the unique
Read the latoolscfg file
Read the latoolscfg file
Copies the srm file to the destination
Exclude num elements from a filter that are above threshold.
Plot the plot of the time series with the given analyte.
Determine the number of grid points in the time domain.
Calculate the ratio of the text to the given standard.
Calculate the calibration of the str str str str
Compute the relative ablation times of the time series.
Calculate the correlation correlation between two time series
Create a new filter
Get the parameters of the filter
Plot a histogram of the given data.
Load reference data.
Calculates the sum of all elements in a molecule.
generate keywords from args and kwargs
Annihilate a tuple of tuples.
Dedup the stack into a tuple of strings.
Gauss - weighted statistics.
Gaussian function.
Compute the stderr of a vector.
Returns the list of samples in the specified subset.
Calculate the progress ratio of the current stage.
Make a new subset of the set of samples.
Applies a new classifier to the data.
Filter the minfo based on the number of files that have been removed in the minfo
Apply a filter to a set of analysis reports.
Export the analysis data to a CSV file.
Saves a new log file in the specified directory.
Applies a function to each element of a tree.
Compute the bayes scale of a string.
Calculates the median value of a string.
Computes noise despike.
Perform an exponential decay despike filter on the given signal.
Add a filter to the index.
Remove a parameter set.
Clear the components of the graph.
Remove components that are not used in the analysis.
Determine the similarity of this object to the value of the fuzzkey. If multi =
Grab the index of the component associated with the given analyte
Returns a string representation of the information for this component.
Writes a log file to the specified file name.
Read a log file.
Get information about the modem
Send message to modem.
Parse the given file or string using mysqlparse. grammar. sql file syntax.
Link a URL to a notebook page.
Returns the div tag for the thumbnail.
code example if code example is none return none
Returns a string containing the code example of the notebook.
URL to the notebook metadata.
Returns the file name of the output file.
Create the notebook. py file.
Downloads the given files.
Creates a thumbnail of the image.
Scale an image to a new file.
Saves the thumbnail image to file.
Copies the thumbnail figure from the notebook to the file.
Get a URL from a notebook file
Yield the languages that have been changed in the database.
Process a thumbnail file.
Save the image to disk.
Gets a list of all thumbnails.
Create a thumbnail of the image.
Delete an image.
Create a new thumbnail.
Get a thumbnail by name and size.
Delete a thumbnail
Receive a message from the socket.
Subscribes to a specific number.
Returns the list of states this service is in.
Send a message to a specific provider.
Get the receiver blueprints.
Receive a message from the gateway.
Receive a status from the gateway.
Perform a forward operation on the given object.
Sign a web3 transaction.
Estimate the gas for a given address using the ethereum client.
Estimate the amount of gas used by a safe address.
Write the given bytes to the file.
Read a line from the serial instance.
Check if this message has bad headers.
Add an attachment to this request.
Registers the given services.
Load a configuration from a module.
Registers new resources.
Returns the value of the named key if it exists. If it doesn t raise an error
Exits the given object and re - raises the runtime error with the given value and traceback
Sets the data manager for this object to the data manager passed in.
Calculate the ng of a given wavelength.
Computes the Cauchy equation given a wavelength and a list of coefficients
Returns HTTP response for DELETE request.
Returns True if the two paths are the same file.
Create a file and link
Initializes the global logging dictionary.
Raise an error with the given message.
Return a tuple of the unclaimed readers and the unclaimed readers in the v
Return a new column header for this sample.
Return a set of unclaimed set of VCF files.
Calculate the mean and standard deviation of a population in a VCF file.
Calls each of the callers in the list of claimed callers in the list
Splits the input string into lines of text.
Returns the first line that starts with data or none if the data starts with data.
Return the suffix of the line endswith if it exists else none.
seek to the next line in the file. Returns the position of the line after the current
seek to the previous line in the file. Returns the number of lines where the previous line
Returns the last num lines of the file.
Returns the first num lines of the file.
Traverse the file until the next line is reached.
Return a tuple of unclaimed readers and the vcf readers in the file readers.
Parse a VCF record into a VCF record.
Extract tag values from a VCF record.
Return the set of tags in the VCF record.
Join the fields of the info dict into a string.
Returns a string representation of the format field for this sample.
Returns the string representation of the sample field.
Return the string representation of the VCF.
Add a new sample tag value.
Add or replace filter.
Return a list of the available categories for a user.
Returns a products form for the given category.
Constructs a staff products form for the given user.
Add a product error
Returns a model fields form factory.
Return a list of items in the cart that are in the pending status of the commerce
Shortcut for send email.
Parse an osm file into a list of model. node and a list of model.
Yields a generator of osm notes from a feed.
Returns True if the condition passes for the given user.
Returns True if the user passes the filter and False otherwise.
Return the remaining quantity of a user in the queryset.
Filter product items in user cart
Filter the queryset for a given user
pre - filter the queryset by using the quantities provided by the user. Returns the queryset
Filter the queryset before the user is logged in.
Returns a pre filter for the given conditions and user.
Create a commerce cart for a specific user.
Extend the reservation time of the cart with the maximum value of the product.
Adds a voucher with the specified code to the cart.
Fix the simple errors in the cart by removing the items that are not available in the cart
recalculate the discounts for all items in the cart
Returns an iterator over the rows of the table.
Returns the form for the given request. If the form type is valid then the form is
Render the given data.
Returns a list of reports sorted by name and doc.
Return a list of the items sold.
Return a queryset of all payments in the invoice.
Return a queryset of all refunds for a credit note.
Return a report of the status of products and categories in the form.
Returns a list of the items that have a discounted status.
Return a report of the product line items in the cart.
Returns a list of payments ordered by time.
Returns a report of all credit notes associated with a given credit note.
Returns a queryset of invoice objects in the order they appear in the commerce. invoice.
Return a list of people and their profiles.
Show the list of speaker registrations for a given speaker.
Returns the set of available categories for the given user.
Returns the available credit in the given context
Determine if a specific user is sold out and unregistered.
Handle an edit profile request.
Handle profile form.
Handle the products form.
Handles the request. Returns a boolean of whether the current cart should be processed.
View for manual payment.
Refund an invoice.
Extend the reservation of a user in the specified number of days.
Sends an invoice email.
Handle badges.
Render a badge for a user.
Compute the available discounts for a given user for a given set of categories and products.
Annotate the queryset with the number of items in the given cart that are in the given
Return a list of the available products for a user in a specific category.
Applies this credit note to an invoice.
Applies the specified cancellation fee to the invoice.
Generate a random access code.
Get an object from a module by its dot - separated name.
Return the invoice for the given cart.
Generate a manual invoice.
Applies the given credit notes to the invoice if the invoice has not yet been claimed
Returns whether the user can view the invoice
Refresh the invoice and cart from the database.
Validate if the invoice is allowed to pay
Update the status of the invoice.
Save the state of the invoice in the cart.
Returns True if the invoice is in the cart otherwise False.
Update the state of the invoice if it is valid and its total payments is greater than
The total payments of the invoice is the total payments of the invoice.
Refund the credit note.
Sends an email to the user associated with the given invoice.
Update the annotation with the given data.
Flatten a field into a single field.
Print a list of the downloads for this path and their annotations.
Download the latest data for the specified field.
Returns the processor with the specified name or None if the processor with the specified name is not
Print processor inputs.
Replaces the raw string representation of the data argument in the request and returns the response.
Upload a file to a project.
Upload a file to the session.
Download data and save it to the cache.
Recursively get all subclasses of a class.
Get repo and project
Get a variant phenotypes with suggested changes
Get variant phenotypes with suggested changes merged.
Update a field in this type
Remove duplicates from a sequence while preserving the order.
Authenticate using GitHub API.
Selects an item from a list.
Get saved issue data
Moves the saved issue data from this issue to another one.
Get the saved task data
Get an asana task by ID
Applies the given key to the given value.
Flush the queue. If callback is specified the callback function will be called when the queue is
Create a missing task in the given workspace.
Return a list of all data types for this project.
Log a log string to the EKM database with the specified priority.
Init the serial port
Set the number of polling values.
Render the number of reads since the given timestamp and meter address.
Set the context of the log.
Calculates the number of components in a given pf.
Set the max demand period.
Set meter password
Returns the buffer of the months in the given direction.
Assign a new schedule or assign a new schedule for a given time period hour minute and tar
assign season schedule
Assign the given holiday to the given date.
Returns the list of parsed read schedules
Read one or more month tariffs.
Read the holiday dates from the device.
Read the settings.
Writes the specified command message to the m command.
Authenticate to the M serial port using the password provided.
Update the observer s properties with the given request.
request a and b and update the observer
Send a request to the meter and return the response.
Send a request to the M meter and compute the CRC of the response.
Make an ab - file for the current state of the model.
Set the list of items to display.
Set relay status.
Ends the serial port.
Set pulse input ratio.
Set the zero resettable kwh
Set or update the LCD table.
Iterate over the given fields of a given schema.
Iterate over the given fields of a given schema.
Generate random text.
Returns a string representation of the statistics.
Returns the specified text with the specified color.
Prints text to the terminal and flushes the stream.
Returns a summary string for the given test result.
Parses the given argument string.
Setup ivoire. result and ivoire. manager. result
Runs the test cases.
Return the path to the transform script.
Create a function node for a describe node.
Evaluate the body of the describe node.
Transform the example body of an AST node.
Transform the body of an expression into a string.
Return an ast. arguments object representing the function argument of this function.
Registers the given finder in the sys. path hooks.
Compile the given source bytes to the code at the specified path.
Applies the given argument parser to the given arguments parser.
Load a Python module by its name.
Load a Python script from a file or directory.
Discovers all spec files in a path.
Remove a file from a places. config
Restart a message with a specific name.
Calls the function with the given results.
Make a service based on the options passed in.
Update the session id for the specified node.
Remove all expired nodes from the hash.
Remove a node from the hash.
Get the last updated version of a node
Returns a list of all nodes in the cluster.
Remove expired nodes from the session and refresh the session.
Increments the number of times modified.
Deletes a list of values with a delimiter. Returns a list of values separated by the
Return the basename of the children of the given path that are in the given time range.
Merge another status into this one.
Check if the given value exists in the given token.
return a query that match the given value
Make a new service instance for the given options.
Parses the specified input from the specified parser and returns the result.
Create an optional parser.
Create a parser that Parses the input and returns the parser itself.
Create a repeated parser.
Create a repeated once separated parser.
Create a repeated separated parser.
Close the connection.
Check if the URL is closed.
Add a master service to the system if it doesn t already exist.
Wrap the given service into a master service. If the service already has a master service the
Freeze a model from a checkpoint.
Freeze a checkpoint.
Save a graph only from a checkpoint.
Save weights from checkpoint.
Restore from checkpoint.
Parses the given token into a template tag with the given arguments and keyword arguments.
Render the tag using the class.
Validate the arguments of a tag.
Get context data.
Parse the given token as a template tag.
Get context data.
Convert a caffemodel to a tensorflow session.
Freeze a model from a checkpoint.
Save a caffemodel to a file.
Make a sequence of num rows with the given number of columns and a new sequence of num
every item in an iterable except stop iteration.
Removes duplicates from an iterable.
Return the next item from the given iterable.
Takes a list of callables and suppresses any exceptions raised by those callables.
Assert that an iterable is ordered.
Swap the item from before to after.
Get the first n queues
Reset the iterator and save the saved values.
Parse the given token as a string and return it as a var.
Get a descendant of this keychain.
Yields an iterator over an object.
Selects an object using the given selector. Returns a boolean indicating whether the object was selected
Parse a selector and return the result.
Returns the list of parents of the node from lhs to rhs.
Returns the siblings of the tree rooted at the given node.
Returns a list of nodes that match the given object validators.
Performs a GET request with the given url and returns the response body.
Expire the cache if age is greater than the current time.
Set the value of a key to a new value in the store.
Returns the value of a key in the store or none if the key does not exist.
Returns True if k is in the store.
Check the beacon record chain.
Create a new instance from a json string.
Create a new instance from an XML string.
Resolves the template s content based on its version. If the template s version is
Get a file - like object with the given filename.
Returns a list of rows.
Validate a token and return the expected data if the token matches.
Return the fernet engine for the given configuration.
Validate a token using the digest algorithms supported by digest algorithms.
Create a token.
Computes the counter32 of a - b. delta is a number between 0 and
Computes a counter64 number between a and b. delta is a number between 0
Takes a duration value and returns the average of the duration in seconds.
Create sources and setup triggers for them.
Sends the specified events to the specified source.
watchdog for a source in the list of sources
Parse the given format string and append it to the list of types and types.
Parses the line and returns a data dictionary.
Validates that the field s expiration date is greater than or equal to the value of the
Validate the token and create a new one if it doesn t exist
Return the device name.
Convenience function to replace the old warn node with a new warning message.
Connects to the incoming and outgoing receivers.
Creates a new secret link.
Send a accept notification.
Send a notification for the given request.
Send email validation notification.
Send a reject notification.
Send a notification.
Create a new link.
Validates a given token and returns a boolean indicating whether the token is valid or not.
Revoke this link.
Create a new record.
Get a receiver by request id and user.
Send email confirmation.
Create a new secret link.
Generate a new hash.
Verifies the signature of a message.
Returns True if the record is a string and is older than the current date.
Handle a new access request for a given record.
Marks the specified record as confirm with the specified template.
Creates a new connection to the remote host.
Returns the string representation of the specified column.
Returns the selected value or none if no selected value is given.
Return the list of items in the query.
Returns the version of the file.
Set the version of the file to new version
Start the timer.
Return the value of self. sync if self. sync else return the value of none.
Show the list of links.
Stops the connection and disconnects it from the broker.
Empty the queue of events.
Adds new events to the list of received events.
Creates a elasticsearch client
Encodes an event into a protobuf. event object.
Encodes a list of events into a string.
Decode a protobuf message from a string.
Sends a list of events to the server.
Generate a previews file.
Retrieve a file from a previews.
message loop
Return True if the time delta is less than the log interval.
Raise an error in the context of the current operation.
Convert a string to a sequence of characters using the stringprep class.
Add a footer to the template.
Build payment parameters.
Build register credit card parameters.
Create a pay with an alias registration.
Returns a string representation of the version number.
Sets the window title and sort by column number
Configure the shortcuts
Set location of selected item.
Set accept button to True for given item selection.
Sets the location of the item at the specified index to the current location.
Finalize options.
Fetch the children of this node.
Return the icon of the element at the specified index.
Calls the given function with the given arguments in a child process.
Get the maximum file descriptor that will be used to process the file.
Close the specified file descriptor.
Close all open file descriptors.
Redirect the specified stream to the specified target.
Set the attrs of the widgets of a form widget.
Import a module from an application.
Imports a module from django. conf. installed apps.
include template tag with dynamic context.
Check if the given path is a valid file system.
Check if a URL is a valid S3 URL.
Returns the absolute path to a template file.
List all objects in a bucket.
Builds worklfow json
Executes the workflow specified by override wf json if override json is none then override wf json
Create a bail archive of the project in the specified folder.
Create a directory at the end of the path.
List the files matching the glob pattern.
Restore the project to the specified folder.
Create a new API client.
Returns a list of files in the browsable storage.
Downloads the file at the specified path to the specified target path.
Checks if a storage exists.
Gets the parent entity of a storage path.
Creates a new folder in the storage.
Uploads a local file to the specified path.
Delete a file or folder.
Validate storage path.
Create a new instance of this class.
Create a new instance of this class with an access token.
Get entity metadata
Delete project from storage
Delete folder.
Copies the content of a file.
Get a signed URL for a file.
Emit a log record.
Return a copy of this object with the specified service and version.
Return a new request with the specified HTTP headers.
Return a copy of this query with the given params.
Returns a copy of this object with the specified exception class and should throw.
Returns a list of fields to be displayed
Map a function over a list of input partitions.
Run an oncotator on the given vcf.
Sorts the list by a given function.
Return a list of tuples where each element is a datetime object.
Loads the configuration from a JSON file and returns the configuration as a string.
Shift the string t by t and return the new string.
Return the sum of the values in the sequence.
collect the rfxcom devices
Create a new user
Returns a list of vns with the values found in soup
Parses the release results from a soup and returns a list of string representations of the releases
parse prod staff results
parse character results from soup
parse tag results
Parse user results from soup.
Create a tar file from a list of files.
Apply op to all files in file paths in output dir.
Copy a file from the work directory to the output directory.
Returns a list of docker parameters for this node.
Refresh the metadata from the database.
Returns a list of string representations of the streams in this collection.
Export the data to a directory.
parse search results
Resets the auth token and returns the new apikey.
Returns a list of users in the database.
Create a new index file in the work directory for the given ref id
Connect to the server and return the connection object.
Add a stream to the graph if it doesn t already exist.
Add a stream to the database.
Inserts a new value into a stream.
Start the syncthread. Returns the syncthread.
Stop the syncthread thread.
Download the given URL and save it to the job. file store.
Upload a file to s3am
Prints the labels of an ontology.
Print the tree of ontology in a human - readable format.
Get the mean insert size of a bam in work dir.
Create a new document in the draft4 validator database.
Export the data to a JSON file.
Creates a device object for the given path.
Get labels for an ontology
Get the hierarchy of an ontology
Reads the config file and returns its contents.
Get the mount path of the current docker container.
Add an option to the argument parser.
Create an argument parser for this command.
Create a new pipeline command.
Set the user and password for this websocket.
Raises an exception if the status code is greater than num. Raises an exception if
Ping the URL and return the response text.
Creates a resource at the specified path.
Updates the object at the specified path with the specified data.
Performs a DELETE request for the specified path. Returns the response object.
Subscribe to a stream.
Returns a list of devices in the database.
Runs a cutadapt between r1 and r2 and returns the cut ID
Run samtools faidx on a given ref id
Run samtools index on a bam.
Run an Sambambambamba markdup job.
Run a specific Samblaster and log its output to the file store.
Marks a bam and bai file for duplicates.
Run picard Sort a bam file and return the path to the sorted file.
Downloads a kallisto from the kallisto index url and writes it
Returns the user associated with the given test.
Sends a command to the websocket.
Subscribes to a stream.
Connects to the websocket and returns True if the connection was successful or False if the connection
Determine the status of the reconnect.
Resub your stream.
Invoked when the websocket connection is opened.
Called when the websocket connection is closed.
Update the status of the websocket if there is an error.
This method is called when a message is received from the websocket.
Performs a ensure ping to the websocket and close the websocket if needed.
Select variants in a VCF file.
Run a bam quickcheck on the specified directory.
Writes a configuration to a JSON file.
Get the configuration from the config file.
Gets a single ontology term and returns it as a JSON object
Searches the ontology for a given name and returns the response.
Gives information about a given ontology.
Get all descendants of a ontology.
Return an iterator over the descendants labels of a given ontology.
Get all labels of a ontology.
Returns an iterator over the terms of a ontology in a hierarchy of ontology.
Runs fastqc on r1 and r2 and returns the absolute path to the
Add a stream to the query
Starts a spark container.
Starts a spark job
Start a hdfs container.
Stop a Spark job in the specified file store.
Return the check container status.
Looks up a zone name from the given zone string and returns it. Raises error if
Fetch one or more configuration from the specified zone using the specified connection.
Merge a list of configuration chunks into a single XML document.
Validate the given changeset and return a list of errors.
Given a list of members with fitness score 0 return the member with the lowest fitness score.
Returns the fitness of the member.
Returns the value of the cost function associated with the current number of processes.
Returns the cost function associated with the current number of processes or none if the number of processes
Returns a dictionary with the sum of all of the members of the model.
Returns the list of processes. If the number of processes is greater than num return the list
Adds a parameter to the configuration.
Normalizes a list of key - value pairs.
Yields the environment variables for the current process.
Returns a boolean indicating whether the given callable has any of the given exceptions raised by the given
Transform a list of hits into a list of packages.
Transform a result to a string if the result is of the given type.
Converts an HTML document to an XML document with the same tag as the document s element
Converts an XML document to an HTML document.
Open a document in a browser.
Remove this node from the tree.
Remove the tag of this element from its parent.
cssselect wrapper for lxml. cssselect
loghandler members
Get the number of times each environment variable is set.
Check if a string is a single class.
Return True if num is a single module.
Checks that the request has the correct format and raises an error if it doesn t.
Check that the id is a string and that the value is int.
Decode a file system path to a unicode string.
Escape an argument if it s a string or a list of strings.
Returns the codec name for the given encoding.
Detect the encoding of the string.
Get the remote address for a given object.
Returns obj if obj is a string int float or decimal.
Parses a string.
Parses a file and returns an element tree.
Convert an HTML tree to a string.
Get the current traceback of an exception.
Returns a string representation of the exception.
Render the summary html.
Generate the plaintext representation of the current exception.
Render the source table.
Determine if an egg info string matches a regular expression.
Sort a list of links by egg fragment.
Retrieve the content type of a URL.
Returns a generator of links in the document.
Determine the version of the API
Find data files in a specified package from a specified source directory.
Return files in package that should be exclude from src.
Parse a requirements file.
Join lines from an iterator.
Removes comments from the given iterator and strips them.
Calls the transformer on the given node. Raises syntax error if the node is not
visit an attribute node and return a new location for it
Coerce a string into a number.
Push the app onto the stack.
Removes and asserts that the specified refcnt is less than or equal to the specified
Return a copy of this instance.
Match the request.
Push this context to the top of the request stack.
Returns True if dist is an editable version of dist.
Decorator for url value preprocessor.
Add a function to URL default functions.
Get the root path of an import.
Loads the template file system from the root of the template folder.
Print the completion script for the specified shell.
Get the domain of the cookie.
Determine if a distribution is a purelib.
Yields a list of paths to install from pip.
Check if version is compatible with name.
build one wheel and move it to the output dir
Yields the names of all symbols in the code.
Delete a marker file.
Returns True if sys. prefix is set under sys. prefix.
Get the username of the current user
Get a scheme for an distutils distribution
Parse the cache control header.
Cache the response in the cache for the given request.
Load a template from a device.
Save the file to the filesystem.
Recursively convert a value.
Add a list of filters to the given filterer.
Adds the given handlers to the given logger.
common logger configuration
Compiles a Python script into a string.
Override tempfile. tempdir with replacement.
Get the URL of the git repository.
Given an object and an argument try to get the argument and return the object s value.
Generate a file from a source file.
Get the default cache location.
Finds distribution objects in a zip file.
Find distributions on a given path.
Declare a new namespace for the given package.
Return the mro of the given class.
Find an adapter for the given object
Ensure directory exists.
Yield the entry points of a given distribution.
Return whether or not dist can be added.
Evaluate the marker.
Evaluate a string using markerlib.
Format the log record.
Returns a decimal. decimal. decimal instance with the given precision.
Return the precision of a number if it is a decimal. decimal.
Returns the value and the exp and sign of the number elements of the value.
Returns the module of this class until it is patched.
Raises distutils setup error if attr is not a string
Fetch the build egg for this requirement
Prints the rolls
Converts a price string to a price object.
Create a price object
Validate a request object.
Returns a method from the app if it exists else returns an error
Applies the given method to the given arguments. Returns the result if an exception is raised
The module name of the blueprint.
Returns the blueprint name of the URL rule if any.
Make dist object from req to install
Walk through the requirements of this requirement and apply the given handler to install them.
Return a list of all the namespace packages in the distribution.
Encode obj if it is a dict or query set.
Tokenize a document into an annotation string.
Annotate two HTML annotations.
Copy annotations from src to dest.
Compress a list of tokens into a single token.
Serialize a list of tokens using markup func.
Expand a list of tokens.
Locate the un balanced part of the end of the string.
Fix up the chunks in a list of chunks.
Recursively flatten el and optionally include hrefs.
Split a string into a list of words.
Return HTML tag and attributes of el tag.
Return the tag of the end of the element.
Returns the HTML fragment of the specified element. If skip outer is set to True then the
Remove tags from XML document.
Returns the cache url for this service.
Create an autolink of el with the given link regex.
Kill conditional comments.
Parse an HTML document and return the root element of the document.
Export a URL to a location
Get the most recent revision for the given location.
Returns the name of the module.
Propagate exceptions according to the current configuration.
Returns the full path to the instance file with the given name.
Update the given template context using the current request context.
Handle an exception by its blueprint.
Handle an exception and log it.
Raise request. routing exception from form data routing redirect.
Try trigger before first request functions
Return the default options response.
Create a URL adapter for the given request.
Inject url defaults into the given endpoint.
Yields unique values in the given iterable preserving the order.
Handle a package s requires value.
Returns the string corresponding to the requires version of a package.
Convert a pkginfo. txt file to metadata. txt.
Import and insert the module into the sys. path.
Yields all classes in the module.
Method names in self. classes.
Determine if a file is a module path.
Walks a directory tree starting from the system s root.
Add default values to kwargs.
Add default values to kwargs.
Set many keys and values from a mapping. Returns True if all keys have been set.
Increments the value of a key by a certain number. If the key does not
Dumps an object into a string
Build an editable options dictionary from a regular expression string
Populates the link string for this requirement.
Make the build location and return the directory where the source file is located.
Removes the source and build files from the temporary build directory.
Returns a pkg. distribution object for the given egg info.
Returns a list of site config paths for the specified application.
Yields all files in sys. modules.
Restarts the process with a reloader.
Convert string s to text type.
Returns the path to the ca bundle
Parse a HTML tree into a tree.
Parse an HTML or Markdown document and return the document.
Parse a fragment from a string or file - like object stream.
Translates a word.
Convert a list of strings to a list of tokens
Binds the HTTP server to the given host and port.
Print the report to stdout.
Load the code from a pickle file.
Takes a dictionary of parameters and a dictionary of keyword arguments and returns a new dictionary of
Runs a command in this container.
Get the current version of the Python implementation.
Return distros for the specified distribution basename.
Find external links in a page.
Wrapper around urllib2. urlopen and urllib2. urlopen to handle local files.
Return a list of paths that have been removed from sys. path.
Return a list of all the directories in sys. path.
Add a package to the system.
Add a package to the system path of the givenedir.
Check if the current user site is the same as the current user site.
Adds the current locale to the aliases cache if the locale is a string.
Set the default encoding to str if num is not set.
force global egg insert after local site packages
Fix the location of sys. path by adding it to sys. path.
Run a command in a separate thread.
return a boolean indicating whether the module has the pytext implementation
Converts the pyx sources to the target language.
Run the application with the start response and log the tracebacks.
Return the file contents of the resource specified by filename.
Check if a scheme is a URL
Unpack a file from link. url without fragment.
Download a file from an http link.
Check if a file is present in the download dir.
Format currency value
This is a helper function that will be called by the component backend when the component is called
Decodes the given data using the specified decoder.
Default template ctx processor.
Render the given template with the given context and return the result.
Render a template with a given context.
Render a template from the source string using the given context.
Parse a version string into the global version.
Checks if the given name is in the declared namespace.
Add the name of the function call to the identifiers.
Replace the template of this node with a new node.
Runs the server in a loop to build and serve forever.
URL quote a string if it s not already unicode.
Returns a list of strings that match the given requirement.
Populates an existing requirement set.
Exports the given location to a temporary directory.
Lookup and associate a product from a response group.
iterate pages until there are no more pages
Get the node corresponding to the element s ancestor.
return a list of children of this node
Safely get an element by a path.
Safely get element text
safe get element date
Determine the price and the currency of the currency
Get the price of the list.
Override send method to update the cached response.
Build the response for the request.
Converts a string to a title.
compare two strings in constant time
Compare the signature of a key and a value.
Derives the secret key.
Return the signature of the given value.
Sign the given value.
Verifies the signature of a given value. Returns True if the signature was correct and False
Unsign a signed value.
Return the signature of the given value.
Returns True if the given signed value is valid. Returns False otherwise.
Dumps the given object into a string.
Raise a server error.
Yields the required parents of a given package.
Yields all the relative paths of all the directories in a given path.
Prepare the response for the given request.
Unsign the given wheelfile. Raises an error if the file already exists.
Unpack a wheel file into the specified destination.
Install the scripts for the given distributions.
Builds a dot graph of all the tokens in the graph and redraws the canvas.
Redraw the component canvas.
Returns the node with the specified ID or none if the node with the specified ID does not
Change the directed connections of the graph.
Sets the edges of an object based on the old and new values.
If old and new are not none remove them from the component canvas if new is not none
Handles the normal left dclick event.
When the diagram canvas has changed.
Clear the canvas and request a redraw
When the domain model is changed this function is called to map the new domain model to the
Removes the model from the node mapping.
Map an element to a new element.
Parse xdot data.
Process font.
Process an ellipse
Process a list of tokens into a polygon.
Process a list of tokens into a Poly object.
Process the text of the component.
Process image tokens.
Renders a grid file.
Save an object to the dot file.
Load the dot file and return the object.
Check if a point is in this region
Draw the bounds of the stroke
Creates a new graph wizard and sets its finished flag to True.
Create and configure the database.
Parses the dot code and sets self. model
Create a new model.
Opens a file dialog and sets the model
Save the model to a file.
Saves the model to a file.
Configures the component graph.
Configures the nodes in the model.
Configures the edges in the model.
Displays the about tab.
Add a node to the graph.
Add an edge to the control graph.
Add a subgraph to the graph.
Add a cluster to the UI.
Request a new graph.
Get the options for a godot info.
Configures the dot code
Shortcut for self. prompt on exit.
Moves the component s origin to the origin.
Save the object to a file like object.
Load a string from a file like object.
Save the collection to a file.
Load an object from a file.
Returns a property function that creates an alias of the given property with the given name and metadata
Parse a text file into a list of words.
The list of start words.
Adds a chain to the markov chains attribute.
Remove the chain with the given name.
Recursively walk the source tree and update the chain with the number of nodes in the source
Create a new dot program and save it in a temporary file.
Delete node by its identifier or id
Returns the node with the given id or none if no node with the given id exists.
Delete an edge between tail node and head node.
Adds a subgraph to the current graph.
Check if the program exists or not and create a new one if the program does not exist
Set the list of nodes in the graph to a new list of nodes.
Parse a graph from a dot file.
Parse a dot file.
Build a top graph from a list of tokens.
Get time units and multiplier for seconds.
Format a duration in seconds using the specified time units.
Set the name of the graph to the new file path.
Create a new UI for the graph.
Splits an iterable into windows of the specified length.
Returns the children of an object.
Append a node or edge to a child node.
Inserts a child node into the subgraph.
Delete a node or edge from a subgraph.
when children replace listener. remove and remove will be removed when children are removed.
When the children of an object has changed.
Returns the string label for the given object.
Set the label of an object.
Called when the label of an object changes.
Init the sub - graph of this object.
Update the editor widget.
Add listeners to the canvas.
Replaces the old and new nodes of a node.
nodes changed
Adds all nodes of the given features to the graph.
Replace an edge between old and new.
edges has changed
Add a new edge for the given features to the graph if it is not already present.
Parse xdot directive.
Called when a drawing event is generated.
Return a godot. node. node instance from a row factory kw.
Create an edge in the godot graph.
Prepares the connection to the mongo database.
Parse xdot drawing directive.
Parse xdot label directive.
Called when drawing has changed.
Update the position of the component.
Update the position of the component.
Redraw the component normal right down event.
Prints the highlight info.
Draw the main layer of the stroke.
Check if a point is inside a polygon.
Draws the main layer to gc.
Handle an event.
Runs the function in a new thread.
Get the full URL for a given page number.
Render the prev and next links.
Renders the seo links if the total number of pages is equal to the number of
Create a URL identifier.
Discovers the init file for all modules in a directory.
Discovers all the modules in the given directory.
Returns a list of modules that match mname in the specified module or raise import error if
Creates a directory if it doesn t exist.
Stores the contents of the blob named by key.
Check if the number is a number with the same number as the given card number.
Load a module by name. If module is not found in sys. modules then a loader
Adds the given path to the list of paths.
Find a module in the list of paths that match the specified module name.
Split a line into two lines.
Remove namespaces from XML tree.
Check that the version of the package is the desired version.
Create a new object from a YAML string.
Merges a new dict with the current dict.
Executes all registered actions
Add details to the error message.
Sends the given record to the given address.
Get the context for this struct block and store it in the context dict.
Adds a new attempt to the log.
Add a URL to the queue.
Start the list of workers
Set a key - value pair.
Get a key from the API.
Returns a list of the entries in the dictionary that match the given key. If the key
Get the index of a URL.
Delete an object from the API.
Plot a heatmap of data.
Add months to the given timestamp.
Add months to date
Check if the current day is a christmas period
Use a specific music service. If the service does not exist create it. If the service
Use the specified storage service.
Reads the CSV file and returns a list of values corresponding to the specified label column.
Loads data from a JSON file.
Saves the input data to a JSON file.
filter by label
average by label
Restore the data dict from the session
Recursively merge dictionary b into dictionary a.
Finds all blocks in settings. installed apps.
Raise an exception if the block is already registered.
Register a new block of the specified type.
Unregisters the given block type.
Convert a file from mp3 format to mp3 format.
Return the reasonable version of the desired version.
Handle SSL redirect.
Parse a content type into a datastructures. content type.
Parse a string into a list.
Resizes an image to fit a specified width.
Downloads the given URL and returns the filename of the downloaded file.
Connect to GCS.
Uploads the given file to the given folder. Returns the name of the uploaded file.
Connect to the API server.
Update the filenames.
Reads the current value of self. a phi from the given file.
Set self. a phi by scale parameter.
Reads the pure water absorption from a file.
Reads the pure water scattering from a file.
Interpret the iop from a CSV file.
Writes the given iop to a file.
build b = b + b water = b + b water = b + b water =
build the a element
build self. c = self. a + self. b
build all iop
for a given set of parameter values for a given set of parameters
Read a parameter file to a dictionary
Convert string to float list
Set a handler for a list of signals.
Log a warning when the process exits.
default handler for all signals
Pause the process for a certain number of seconds.
Log and exit the process with the given signum.
Resumes the execution of the program with the specified signal.
Removes an event from the event list.
Fetch the metric and return the sorted list of the results.
Return a function s signature based on the function s signature.
Create a new signature object from a partial instance.
Return a new argv with new arguments.
Return a boolean indicating whether a list of files in the ignore list should be ignored.
Returns a tuple of the file name and the file path as a string.
Convert a VL Q string to an int.
Parse the header of the user data table.
Gets the duration of the time in seconds.
Prints the details of the player to standard output.
Returns the data stored in the ui. batch.
Opens the file dialog and display the result file.
Write the data to a file.
Read the data wavelengths from a file.
Display the colormap connection.
Displays the error message.
Shows the error message.
Runs the simulation.
Cancel planarrad.
Quits the GUI.
Saves the figure to the console
Opens the log file
Open documentation in a browser window.
hide the error message and reset the progress bar
When the user clicks on the text context menu it adds the circle context menu to the Q
Moves the cursor to the normal position in the specified tab widget in the specified mode.
Display the circle at the specified x y position.
Returns a lock set which is a quorum of the given genesis.
Sign this message with a private key.
Return the hash of the object.
Check if the configuration is valid.
Update the issue funds for a given transaction.
Returns the lock for the last time step in the loop.
Returns the last voted blockpro if the lock is in the blockhash.
Returns the last valid lockset
Get the timeout time for this consensus instance
Called when the lockset is active for the given proto.
Make a list of num private keys.
Add a delay to a packet.
Adds a delay to a packet to the consensus transport.
Convert an address to a native contract class.
Update the filter with the given data.
Transpose x so that num is the length of x.
Transpose x to vgg format
Returns the function associated with a layer.
Returns the output of a layer.
Returns a dictionary of features.
Create a new key file.
Returns the cell s exit code.
Releases the table in memory.
Returns a list of the tables in the database.
Call the fix compile function for each object in the list of remove flags.
Find the latest teradata version.
Get a configuration value by its key.
Set a configuration value.
Implements the table magic used to print out a table.
Write the default configuration to a file.
Set the names of the columns to the given list of names.
Returns a list of strings in the string representation of the table.
Convert string to float with multiplier.
Returns a dictionary of all the gains in the string
Returns a dict of device settings from a string.
Wraps the given text with an optional indent argument.
Call simplesoapy. detect devices and return a tuple of devices and a string of
Set the center frequency of the PSD
Calculates the result of the spectral response function with the given PSD state.
Wait for the result of the given PSD state.
Update the psd state with the new samples array.
Read a pwr array from a file - like object
Writes the pwr array to the file - like object f.
Submit a function to the work queue.
Return the number of bins at a given time relative to the device s sample rate.
Create a buffer of given size.
Create a buffer of the device.
Stop the device.
try to find an executable in the build directory
Return a list of datetime objects that match the given number.
Return a string with the specified values replaced with the specified value.
Return a new datetime with the same weekday as the given datetime.
Convert a datetimes to a string in the form of a datetime. datetime object.
Return a list of dates to keep.
Convert a list of dates to a list of dates.
Gets the control byte of the device.
Read the bit value at the specified address.
Writes a bit to the specified address in the specified bit mask.
Get the number of bits that match a given bit pattern.
Write the gpio interrupt device to the userspace.
Sets a gpio interrupt edge.
Waits until a file exists
Register a callback to run when a PIN is received.
Deregister one or more PINs.
Enable gpio interrupts on the userspace.
Returns a string message of the given amount of bytes to send.
Render a form to a string.
Does this form contain any errors?
Render a link form to a string.
Extract the version number of a package from the project s distribution directory.
Returns the keyword arguments for the form.
Check the status of the response.
Send a GET request to the API and return the response.
Calculate humidity.
Calculate the dewpoint from temp and hum.
Publish this command to the server.
Calculate the CRC for the given data.
Check the CRC of the given string.
Unpacks a tuple of integers into a string containing the year month and day of the
Use the rev b archive for the given records at the given offset.
Wake up the device.
Send a command to the device.
get new archive fields
Parse the log file and update the fields.
Update the weather for a list of pub sites.
Initialize the logging system.
Returns a list of pub services.
Get the value of a station based on its interval.
Update the kwargs with the string representation of the wind configuration.
Set the function arguments.
Publish the configuration to a file.
Fulfill a set of requirements.
Push a override onto the stack.
Pops the topmost value and raises a runtime error.
Overrides the current string.
Push an additional element onto the stack.
Pops the top of the stack and raises a runtime error.
Push an additional element into the stack and remove it from the stack.
Removes duplicate field names from a list of field names
Interpret the stats.
Extract a dictionary of user namespace parameters from a query.
Returns the data frame of the table.
Get a graph representation of the graph in pygraphviz.
Plot the data
Returns a CSV result descriptor for the table.
Update the context data with the widget context data.
Returns a list of widgets sorted by their name and position.
Returns a list of widgets that need update
Register a widget of a given type.
Unregisters the widget of the given class.
Get the last update for this dashboard instance.
Save a setting for this dashboard.
Determine whether or not the last update should be made
Concatenates a list of arrays along an axis.
Returns True if any of the given arguments are true.
Format axes to a string.
Wraps a function into an array spark RDD.
align self to axes
Convert this array to a Spark array.
Compute the tordd of this array
Split the plan into n chunks of the given shape.
Return boolean array mask.
Repartitions the RDD using the specified npartitions.
Stack the elements of the RDD.
align the array to the specified axis
Return the first element in the RDD.
Reduction along axes with their mean.
Reduction along along axes with their var values.
Compute standard deviation along specified axes.
Reduction along axes with sum operation.
Return the maximum value along an axis.
Return the minimum value along an axis.
Transpose the array along the specified axes.
Swap the axes of two axes
Reshapes the array to the specified shape.
Reshapes the array to the given shape.
Return a new DStream in which each RDD contains the astype of the elements in each RDD
Return a new DStream by clip min and max values.
Return the elements of the RDD as a numpy array.
Converts arg to a tuple.
Packs a list of strings into a tuple.
Validate that the axis is within the specified number of axes.
Determine if two arrays are equal.
Convert a list into a specified dimension.
Convert a slice or an integer into a slice of one or more dimensions.
Make sure that new and old are string - like strings.
Check if new is shapeable by old.
Concatenate allstacked elements.
Expand an array to a specified number of dimensions.
Returns the most appropriate constructor for the specified mode.
Create a new array of given shape and type filled with ones.
Constructs a new array of given shape and type filled with zeros.
Concatenates a list of arrays along an axis.
Computes the discrete likelihood of the data at a given location.
Returns the most likely alpha
Computes the discrete alpha of the data.
Computes the value of the best alpha in a discrete object.
Plot the power spectrum of the data.
In - place log normal variances
Sanitize a Turbo HTML string.
Configures the Yandex configuration.
Returns a list of tags.
Compute the md5 hash of the file.
Compute the SHA256 hash of the file.
Compute the sha512 hash of the file.
Parses a string of bits and returns a long integer.
Decode a public key from a base64 encoded string.
Process ssh RSA data.
Process ssh dss data
Process ecdsa sha curve data.
Process ed25516.
Parses the specified keydata and returns it as a string. If the keydata is
Returns the name of the name of the file.
Create and configure a new config from a command line interface.
Initializes the package distribution.
Create a file with the given name.
format html with djfrontend bp css
Format HTML with djfrontend normalize.
Format HTML with djfrontend font.
Render HTML with django - djfrontend. html extension.
Render HTML with django - djfrontend. html.
Format djfrontend ui HTML with settings. py and settings. static url.
Render the HTML with the django - djfrontend s version number.
Format the HTML or CSS for the djfrontend. html tag with the given version.
Format the HTML for the dj frontend.
Render the template with the django - djfrontend formset.
Render HTML with djfrontend scrollto.
Render HTML with djfrontend smoothscroll.
Format HTML with djfrontend twbs css.
Returns the backend backend backend backend backend backend backend backend backend backend backend backend backend backend backend backend
Generate the hashes of the given user and purpose for a given number of minutes.
Calculates the expiry time for a given number of minutes.
Returns a user token for a given user and purpose.
Returns the serialized data for the given user.
Update a user by a selector.
Raise an authentication error.
Returns a validated user instance.
Check if the request is secure and if not raise an error.
Get the username of a user.
Send a create user request and return a token.
Perform the actual login of a user.
Remove a user from the group.
login with password or resume token
Authenticate the user with the password and return a token if the user is not active.
login with resume token
Send a password reset request to the user model.
Resets the password of a user.
Recursively merge a dictionary into a new dictionary.
Get a random id for an object or model. If obj or model is none then return
Get the unique ids for a set of objects.
get object id
Get object ids by content type.
get object by alea id field and alea unique fields
Add the default IDs for all objects in the given operation.
Set the default value for a given operation in a apps and schema editor.
Truncate the database.
truncate the database backwards.
Initializes the options for this build.
finalize the options
Converts a path to a directory.
Seed a set of random values.
Return the state of the parser as a string.
Generate a random string of given length using the given alphabet.
Generate the API endpoints for an object.
Clear the api path map cache.
Pretty - print a string.
This method is called when the connection is opened. This method is called when the connection is
Delete the connection from the pgworker and send the request finished signal.
Attempt to send a message to the websocket if the connection is closed.
frames from message
Calls the appropriate ddp method and prints the error message.
Dispatch a message to the appropriate handler.
Receive a connection to the server.
Send ping ping message or reply message.
Recieve a sub message.
Send a unsub command or reply to the specified id.
Call a remote API method.
Yields a random server response to the client.
The main function of the daemon.
Convenience function for printing if self. verbosity > num.
Stop the application and wait for it to finish.
Start the thread and wait for it to finish.
Run the main event loop for the psycopg2 library.
Turn the psycopg2 green flag into a green flag.
Return a random string
Autodiscover a dddp. api. api. api. api. api
Return the result as a dict.
Get an instance of a class using a factory function.
Emit a log record.
Add a resource object to this request.
Send a message to this registration
Send an alert message to multiple registration objects.
Fetch the inactive ids from the apns socket.
Send a message to a gcm.
Sends a message to a group of registration ids
Sends the JSON response of the device.
Sends a request to the API and returns the response.
Get model by module location
Search the Giphy API using the Giphy API.
Translate a term and phrase using the Giphy API.
Convenience function to call the giphy API s trending API.
Return a Giphy object corresponding to the given gzip id.
Return a new Giphy instance with the specified tag and api key.
Upload a file to a Giphy instance.
Converts the keys of the data dict to integers.
Fetch data from the API endpoint.
Fetch trending giphy images.
Fetch and return a giphy image from the API.
Upload a file to the Giphy API.
Access control helper.
Authenticates the user using the provided email and password.
Upload a new video.
Check the upload status of a video.
Update a video.
Delete a video by its id
Check the video availability
Check the status of a video
Returns a list of videos.
Uploads a video using a direct upload
Handle upload request.
Sends a signal for the video to upload.
Redirects to the end of the video if the video is not deleted.
Fetch video entry
Saves the video to the database.
Delete this video and all its children.
Update the metadata for this collection.
Update the metadata of a field in this collection.
Update this object s data.
Return a list of nodes from a string.
String representation of a list of trees.
Load a file - like object from the file - like object fp.
Read a file and return its contents as a string.
Parse a string into a node.
Create a new str node.
Generate a newick string for this object.
Returns the node with the given label.
Prune leaves that are not in this tree.
Removes internal names from the node.
Removes leaf names from the node.
Return a list of bools.
Raises an exception if the specified setting does not exist.
Returns a list of all the values of the argument with the given name.
Add an async callback to the request.
Returns the value of the cookie named name or the default if the cookie does not exist.
Clear a cookie.
Redirect the user to the OpenID user with a callback.
Get the authenticated user by callback
Make a request with parameters for an OAuth request.
Redirect the user to the authorization endpoint with the given OAuth scope.
Concatenates a URL and a list of arguments.
parse a header line into a dictionary
Add a new value to the list.
Get a list of values with a given norm name.
Parse a line of input into a dict.
Parses the HTTP response headers.
Normalizes a HTTP header name.
Encode a string as utf8.
Convert a string to unicode.
Convert a value to a string if it s not already a string.
Recursively convert all strings in an object to unicode.
Sets up the auth plugin for the given app.
Select a policy based on the specified request and method.
Calculate the occupancy of a grid of points.
Writes the atoms to a gro file with the specified title and box.
Write a PDB file with the given title and atoms.
Determine the molecules numbers based on the relative and absolute weights.
Resizes pbc for lipids.
Yields all lines of a package resource from a given file.
Add a message to the cache for a user.
Send a message to each of the specified users.
Returns the message associated with a given user. Returns none if the user doesn t have a
Adds a message to the user s response if the request is authenticated.
Check the config file.
Verifies that the name of the message is in cfg. data. Raises an error
Retrieve data from a message from the config.
Retrieve the password from the config.
Update config data.
Update config pwd with the given message.
Create a new config profile
Display the required items for a given type.
get data from user
get auth value from user config
Configures the specified profile with the specified data and auth.
Write a message of a given type to the given configuration.
Write a message of a given type to the configuration.
Send the message to the API endpoint.
factory function for message types
Returns the value of the input argument if the value is a string. Otherwise returns num or
Check that the attr is a valid twilio string.
validate slack post attr in value
Check that value is a valid application string.
Sends a coroutine to the given executor.
Adds a message to the queue.
Read the body of a file.
Removes arguments that are not in the specified list of strings.
Send a message of the specified type.
Get chat id by username
Sends the content of the response to the specified method.
Sends the message to the server.
Get a server by its domain and number.
Generate the email message.
Add the header to the message
Add the message body.
Add attachments to the message. Returns the number of attached attachments.
Returns a session object if the port is in use or if the port is in use it
Returns an ssl object for the server and port.
Return a TLS session object for the server and port.
Generate the email and send it.
Save the metric to a file.
Unloads the image.
Get image region.
Returns True if the value is a string and False otherwise.
Remove all elements from the internal list.
Reads the contents of the file.
Delete this chunk from the parent chunk.
Resize the file to the specified size.
Insert a new chunk in the current file.
Save ID3 data to file.
Delete the file specified by filename or if filename is none delete the file specified by filename.
Parse a file.
Process a normal line.
Add a block of code to the parser.
Draw a string at the specified location.
Parse an ISO 8601 time string.
Converts a list of words into an html line.
Make an html word from a cross - reference word.
Make html paragraph.
Return the html code for the given list of lines.
Make html from a list of items
Saves the render text to a file.
Update the parents of the specified atom in the specified file.
Run the tick callback if the current game is the same as the current game.
Register a mapping for a product.
Get a controller by its vendor and product ID.
Returns the HMAC - SHA256 digest of the string to sign.
Returns the request headers.
Sends a GET request. Returns the response text.
Sends a POST request. Returns the response text.
Sends a HTTP DELETE request. Returns the response text.
Convert value to str if kind is text or external.
Creates a new change set on the hosted zone by the given change set.
Returns the total size of all the packets.
Try to find the last page of the specified serial in the specified file.
Set a section in the configuration.
Add self. markup to self. markups.
Process the content of the text.
Return the markup associated with the specified tag name or none if no markup with the specified tag
Create a hosted zone writer.
Try to lock the given file.
Insert a number of bytes into a file - like object.
Delete a number of bytes from a file - like object.
If data is bytes encode it otherwise raise type error.
Add a change tuple for the given action and record set.
Parses a change info element
Measure the length of the given string.
Returns True if all the attributes of this object have been modified.
Delete this record and all associated resources.
Save this instance to a hosted zone.
Reads the specified number of bytes from the file.
Delete all keys from the cache.
Change the frame associated with this tag.
update common pics
Unload the sound and reset the handle.
Set the loop points of this audio file.
Returns a list of glyphs and a list of values.
Return the glyph names in a glyph list that match the given filter.
Dump a list of strings to a file in the specified encoding.
Dump an array to a text file.
Returns the number of the file with the specified pathname. If the file doesn t exist returns
Make a list of files in the system.
Parses a hosted zone element and returns a hosted zone object
Parses the nameserver set into a zone object.
Writes blocks of data.
Add padding to each of the blocks.
Deletes the VCFlac metadata from the specified file.
Save audio to file.
Parse an alias element into its string representation.
parse rrset record values
Parses a RRset subclass into a RRset instance.
Add a record to this zone.
Creates a new record in the model. Returns the record that was deleted.
Creates a new namespace record
Create a new record.
Create a new SPF record.
Create a new record.
Get a change value for a given action.
Write a change document.
Write a change set to the XML.
Configures the logging module.
Return the item associated with the given alias.
Freeze a dictionary.
Join a dictionary of attributes into an HTML string.
Connect the initialize bars command to app. add template global.
Initializes all the bars.
Bind a bar to this application.
Returns the function arguments as a dictionary.
Check if the current request has the same endpoint and args.
Validate that the metric class is configured.
Get statistic models by name.
Calculate statistics for a list of frequencies.
Auto - discover INSTALLED_APPS. py modules and fail silently when not present.
Returns a CSV of the statistics of the given metric.
Handles the statistics.
Extract a value from a request array.
Gets a value from request. get and returns a boolean if the value is a string
Gets the next colour in the geckoboard.
Returns a string representation of the parameters for a given chart.
widget to get the geckoboard number
Geckoboard rag widget.
Returns a line chart for the geckoboard metric.
Returns a tuple of the latest count for a given geckoboard request.
Returns a list of the most recent values for a given Geckoboard statistic frequency
Returns a list of the active stats.
Registers a g reflector.
Returns a copy of the context dictionary with the given arguments.
Print an error message and exit with the given code.
Reads a long input string and returns it as a string.
Prompts user for a list of lines of input. Returns a list of lines of input
Prompt the user to input a file with the given extension.
Return the schedule for a given year.
Returns either the home or the away team depending on their score.
Returns the season of the year.
Returns the surface of the object.
Returns the coin toss table if it exists otherwise none
Returns the weather information in a table.
Returns the sports reference info table.
Compute the number of reg games for each month.
Returns a pandas. DataFrame containing all the standings in the specified section of the sports
Returns a table of team stats matching the selector string.
Returns the Ry voting for a given URL.
Returns a pandas. data frame of the lines in the main document.
Returns the season of the year.
Returns a pandas DataFrame of player stats.
get class instance key
Calculates the age of a given date in a given year month day.
Get the stats for a given table.
Returns the stats table for a single game.
Returns a string representation of the stats table.
Returns the stats table for the specified kind and summary option.
Get statistics table.
Returns the string representation of the statistics table.
Returns the string representation of the stats table.
Returns the statistics table in the pbp format.
Extract gamelog basic information from a sportsref table.
Gets the current value of the record. If it doesn t exist in the session then
Expand details column into a new dataframe.
Add team and team columns.
Add team features.
Returns the initial win prob of a given line.
Parse a table into a sportsref.
Get a list of simple yeararguments associated with a year.
Returns the name of the header
Return a list of box scores associated with year.
Return the information for a particular keyword in the year document.
Return the head coaches in a year by game.
Compute the schedule for a given year
Return the string attribute of the yearinfo element of the yearinfo element of the yearinfo
Return the currentposition of the year.
Return an anchor URL for a given year.
Return the off scheme of the given year.
Return the alignment of year in the yearinfo table.
Splits a year into multiple splits of a year.
Gets the html of the given URL.
Return a guard which is put directly into the current read queue.
Return the direct index of the element.
Close the stream and put it in the queue.
Get a batch of given length from the file.
Returns the remainder of the array at the given path.
Returns a generator for the given path.
Parse an input file into a protobuf object.
Write one or more objects to a file.
Reads a varint from the file and decodes it as a string.
Reads and returns a stream of objects.
Close the file.
Write one or more objects to the file.
Flush the write buffer and return the new string.
Returns the game dir.
Performs the specified text with keyboard emulation.
Evaluates the table s fields and returns them in the form of an array.
until a condition is met
Return a boolean indicating whether or not the element with the given fields are present.
Adds one or more exceptions to the set of ignored exceptions.
Returns the value of the main volume for the specified operator or none if the operator is not
Execute the specified operator on the specified value and return the result as an integer.
Send a message to the remote host and read reply if read reply is True.
Returns the current status of the poll.
Power off the device.
Power on.
Set the volume of a volume.
Change the status of the specified source.
Decrypts and decrypts the given request using the given key.
Calculate the CRC32 of the provided plaintext.
Encrypt value with un friendly iv and checksum if juice is specified.
missing schema for song in html
Returns a list of all hrefs
Check if song name is found in html
parse the html response of a song and check if the song name is not found in the
Construct a Google URL for a song.
Parses the google and returns the download url
parse a song s url and return the url
Get html response from url print html response
download a file using requests
Download a file using the given URL.
Search for station codes by city
Get an observation of a location
Parse the observation response into a dict.
Returns the list of compiler extensions
Returns the mimetype of the file.
Returns the compiler s mimetype or none if the compiler s result mimetype is none.
Returns the compiler extension.
Register a new processor for a given mimetype.
Remove a processor for a given mimetype.
A list of all paths in this collection of finders.
Registers the default values of the processor and postprocessors.
Imports the Qt core.
get meta netnode
Add a new netnode plugin name to the current metanode
remove netnode plugin name
Import settings from config file.
Exports the given settings to the given config path.
Return the directory of the plugin.
Iterate all the keys in the environment.
simple error handler
Get a table from DynamoDB
Return a list of all the tables in the DynamoDB database.
Fetch summary or crates for a particular category.
Return the metadata id of the given item.
Return the timestamp of the metadata of the given item.
Fetches owner team for a specified crate.
Fetches the owner user for a specified crate.
Fetches the latest version of a crate.
Fetches the latest version downloads for a particular crate.
Fetch crates from the category crates API.
Fetch a single crate by it s id
Fetch page = num items of path
Fetch the items for the given category.
Fetch and return a generator of all the questions in this Kitsune server.
Fetch the events for the specified category and offset.
Return the timestamp of the metadata updated on the given item.
Determine the category of an item based on its type.
Yields the items in the specified category
Return a list of buffer names.
The priority of this IOB.
Close the context and remove it from the io queue.
Submit a list of blocks to the iocb. Returns the number of blocks submitted.
Cancel the given block.
Cancel all submitted blocks.
Fetch events for a given category
Fetch and return raw cells text
Parses the input feed and returns self. ncell self. ncell self. n
Export the formats for a given type.
Returns the permission factory.
The default view method.
Export a record.
Calculate the time since the given target is callable.
Close the socket.
Remove a client from the client list.
Increments a metric by name.
Send a metric to the metric server.
Add a timing since the given start time.
Send a gauge metric
The gauge delta can be specified as a number between 0 and 1
Set a metric name to a new value.
Request data and append it to the end of the batched data.
Creates a batch client
Return a new unit client
Send the next batch of messages to the remote address. Returns the address of the next batch
Construct a batch client
Send the next batch of messages to the socket. Returns the new message.
Construct and configure a TCP client for the given unit.
Determine if a user has any of the specified permissions.
Interpret x as an open math object.
Converts term to open math with the given converter
Convert this instance to another instance of this class.
Convert obj to openmath.
Initializes the application with the app passed in.
Yields a valid string for a list of choices.
Create value by field type.
Returns a form data and form files if any of the specified fields is present in the form
Returns the data in a decimal field.
Returns a string representation of the email field data.
Returns a random date field data.
Returns a random datetime field.
Parses field data as a float.
Returns a string representation of the number in field. validators.
Generate a random time value for a given field.
Returns a random choice of the field s choices.
Returns a random choices for a given field.
Returns a random choice from the field s queryset.
Encode a Python object into a byte string.
Publish a message.
Tag the build with the specified version.
Load a module and return its value.
Decode a string of bytes to a byte string.
Returns a fixed representation of the given value with the given precision.
Format number.
Unpacks a string to a numpy array.
Pack an array into a string.
Add a new configuration entry to the config.
Remove a configuration option.
return a list of all values in the config
Returns the value of the named attribute if it exists else none.
Check if a repository exists in the workspace.
Syncs the configuration of the given websocket to the given path.
Clone the given URL to the specified path.
Checks if the current version of the server is the same as the one passed in.
Returns the voxels of an array.
Create a numpy array from a list of voxels.
Print the workspace or all of the workspace depending on the specified arguments.
Print the update of a repository.
Set console handler.
Executes the given command in the current working directory and returns its output.
Load png file into numpy array
Save a collection of numpy data
Print out a workspace.
Print repo status
Get the block size for a token. If resolution is none the minimum block size is returned
Post a cutout without chunking the data
Load image from tiff file and return as numpy array.
Save numpy data to png file
Load an image from a. tiff file.
Write configuration to file.
Clone this URL and return the new URL.
Returns the version of the installed provider.
mix and match the name
Decorates an option decorator.
Reserve a specified number of ids for a given token and channel
merge a list of ids into a channel
Get the propagate status of a channel
Returns a list of the projects in a dataset.
Get a specific dataset from the remote data store
Returns a list of the remote data.
Parse the command line arguments.
Show a workspace or all workspace.
Show the contents of a workspace
Shows all the workspace and prints it.
Returns the full URL to the specified endpoint.
Try to guess the format of a file extension.
Open an image in a given file.
Convert a file from one format to another.
Convert a list of RAMons to a dictionary.
Returns the RAMon value for the given type
Delete a channel by name and project name and dataset name.
Return a JSON string for a dataset and metadata.
Returns a dictionary of the data in the dataset.
Create a new channel dictionary.
Create a new project dict.
Identify the dimensions of an image.
Posts data to a given URL.
Find a path in a workspace.
Returns public tokens
Returns information about the specified token
Set the metadata for the given token with the given data
Wrapper around requests. get to catch connection error
A wrapper for requests. post
Sends a HTTP DELETE request to the specified URL with the specified token
Load data layers from. hdf5 file.
Save an array to an hdf5 file.
Infer gaps in a tree given a protein sequence and a dendropy. tree.
Reduces the given io in the Vim model.
install gettext translations for jinja2
Execute the given thunk in the given guard while in the given state.
Calculates the percent of the total by part and total.
Get statistics for a specific server in a client.
Get cache slabs.
Takes a dictionary of context data and returns a dictionary of context data.
Returns the server status.
Returns a dashboard response.
Returns statistics for a given server.
Returns a response containing the slabs for the specified server.
Convert a float to a human - readable string.
Finds a config from the children of a node.
Add a new configuration to this node.
Applies the configuration from the specified applicator to the specified configuration file.
Returns the full path to this file.
Reads the contents of the file and returns it as a string.
Write the given data to the file in the given mode.
Configures the file handler.
Creates the file at the specified path if it doesn t already exist.
Applies the given applicator to the configuration of this node.
Returns the full path to the file.
Removes the directory from the filesystem. If recursive or cleanup is specified the directory will be
Calls the prepare method of each node in the tree.
Recursively clean up the tree.
Joins the current path and the given path.
Returns a list of files in the directory.
Writes the given data to the given file.
Read the contents of the specified file.
Add one or more files to the tree.
Save the configuration to a file.
Load the configuration from the given file if it exists.
Remove the file from disk.
Loads all plugins in the specified directory
Returns a config node corresponding to a child of this config node.
Returns the value at the specified path if it exists otherwise returns the value.
Apply the config to a string.
Build callback URL.
Read input and process it.
Sends the output of the network to the network.
Send a request message.
Reads a number of bytes from the socket obj. Returns the number of bytes read.
Write data to a socket and return the number of data.
Get the settle mode of a proton link
Configures the properties of the link
The remote address of the source of the link
Returns the remote target address
Check if the session is closed.
Create a new sender with the given name
Request a new sender link.
Create a receiver with the given name
Request a receiver link.
Remove link from self. links
Returns a copy of the ep need to be closed.
Process endpoint event
Extend markdown with a new markdown instance.
Close the receiver link after the link is closed.
Close the receiver link.
Get the host and port of a server address.
Connects a socket to a host and port.
create a server socket
Returns a tuple of the number of connections that need processing.
Return the output data.
Create a new sender
reject the link associated with the given handle
Create a receiver
If the connection failed log the error and set the error attribute.
active ep for this connection
Check if the ep need to be closed.
Handle an error during connection failure.
Returns a string representation of the color.
Get font dict from search path
Set the compression flag.
Add an object to the PDF.
Appends the content of the output stream to the output stream. If page is not specified
Appends the given string to the output stream.
Add a new page to the document.
Set the color scheme of the text.
Set the default font for this document.
Add a page to the PDF.
Set the font size.
Add text to PDF.
Add a newline.
Add a new chart to the current page.
Write the pages to the output file.
Gets the list of page. orientation changes
Add or update the output font files for each font in self. fonts.
Output all the images to the session.
Write the image data to the GDSII file.
Transform a point on the screen.
Return the absolute position of the cursor relative to the given point.
Sets the style of this cell.
Rotate a point
Set the information of the object.
Set the display mode.
Closes the current document and returns the file - like object of the output.
Add the PDF header to the session.
Write the document s pages to the output file.
Create a new resource dictionary in the document and write it to the database.
Writes the information to the output file
Create a new cross reference file from the current object
floyd function
Convert a sequence of sequences into a sequence of strings.
Gosper function.
Return a brent version of seqs.
Determine if x + test length is less than self. xmax or if self. x
Determine if the y value of the plot is less than or equal to the test length
Return True if x is greater than test ordinate. x.
Return True if y is greater than the given test ordinate. y.
Make a copy of this cursor.
Add dx to self. x before self. dx or self. x += self. dx
Adds self. y to self. y + dy
Draw the text for the first row of the table.
Returns list of tags for a resource.
Returns a list of labels with the given name.
Delete a tag.
Creates a label
Returns a list of actions.
Returns a list of tags associated with label sn.
Returns list of actions.
Sets the default configuration for the Sphinx extension.
Returns the absolute path of the themes file.
A generic method to make POST requests
Get a list of log entries.
Get a log set.
Computes the duration in seconds.
Update the parameters of this instance.
Computes the error and returns the error.
bin the data into a string and raise an error if it doesn t exist.
Frees memory
recvs up to size bytes from the socket and writes them to the buffer.
Generator that reads a line from the input and yields each line.
Return the error code and message from the status line.
Return info info info.
Returns a string with the info information for the given error code and message.
Return a list of capabilities.
Return True if code == num otherwise False.
Quits the socket
Return a datetime object with the given code and message.
Shortcut for info.
Yields newsgroups.
Generate a list of all new images that match the given pattern at the given timestamp.
List active groups.
Yields a list of the active times of a given code.
Yields newsgroups.
List overview fmt gen.
Return a generator of all extensions for the given code and message.
Return a string representation of the list.
Return a list of elements.
Return information about a given XZ header.
Return a generator that yields lines from a text file.
Compress an Xfeature message with gzip compression.
Return the offset of the given value.
Executes an HTTP POST request to the given URL.
Makes a DELETE request to the given URL and raises an exception if it fails.
Wrapper around requests. get which raises server exception.
Returns a list of the scheduled queries for the given account.
Returns a list of the tags associated with this account.
Returns the tag with the given name or id.
Delete a tag
Creates a scheduled query
Delete tag by tag id
Parse a newsgroup line.
Parse a header line and return the header name and value.
Returns the unparseable string representation of the given HTTP headers.
Send an HTTP POST request to the server.
Runs the passed list of tests.
Returns the defaults docstring for this class.
Set the value of the field.
Check type of value.
Return the value of the field.
Check the value s type.
Returns the symmetric error of the time series.
Set the errors of the time series.
Set the values of the specified fields.
Update or create metric definition based on values in self. metrics
Extract a dictionary of metrics
Apply the filter expression to the metrics
Calls the RPC api
Return an expression terminal.
Return the operator of the token in text.
Adds the given text to the current terminal token. Returns a new terminal token of type
Init properties for this class.
Returns a list of parameter names
Returns a numpy array of the parameter values.
Returns the parameter errors.
Clear the values of the derived parameters.
Set the value of the method attribute.
Get environment variables
Calls the api and sets self. result
Check if scene info is in satellites map. Raise wrong scene name error.
verify the type of a product
Get the size of a remote file
Validates a list of bands and raises an error if they are not in the list.
Connect earthex chdir to the server and install the user if it doesn t already exist.
Return a copy of dt with the same tzinfo as this one.
Join each element of an iterable with the given delimiter.
Return the position of the newline in the text after the current line.
Given a line number and a position in a source string return a string with the specified lines
Dump the output of the graph to a text string.
Remove metrics and plugins from relays
Load a list of files from a list of files.
Return a new str with self. keys and self. count.
Run the command line interface.
Return the rule of the token in text.
Handle special handling.
Returns the grammar of the input source.
Returns the string representation of the grammar rules.
Returns the list of comments of the token.
The list of directives in this object.
Returns the source code for the output of the function.
Returns the string representation of the class definition.
Returns a string with the import directives.
Returns the string representation of the token type enum.
Returns the string representation of the class definition.
Returns the entry point of the function.
Return the source of the given rule.
Get the transform name for the given rule.
Convert a binary expression into a binary expression.
Convert a binary node to an AS node.
Hoist the operands of the expression pred.
Remove grouping groups from an optree node.
Recursively convert an AST node to its code representation.
Return an AST code for the given node.
Converts an ast terminal to code
Convert the given option group into code.
Convert an AST repetition group to a code string.
Convert an ast special handling to a code string.
Return the code for an operator alternate node.
Return a list of lines of code for an operator.
Add an exclude statement to the code of the given operator.
Return the code for an op multiply operation.
Convert an AST operator to code.
Find all directives that have a name equal to pred.
Check if child is a child of parent.
Handle the results of the API call.
Gets an id
remove a hotkey
Adds a new argument to the parser.
Configures the logging.
Returns True if all the arguments passed to the function are valid. Returns False otherwise.
Recursively convert a list of nodes into a function that calls the infix function of the
Convert an iterable of nodes to an optree node.
Reduces the given list of operator nodes to reduce the given number of nodes.
Loads the manifest from the specified file.
Returns the length of the column names and their respective lengths.
Get the column lengths of the metrics.
Replace underscores with their string representation.
Returns the markdown representation of the output column.
Prints the metrics in markdown format.
Returns a markdown representation of the metric definitions and the dashboard definitions.
Parse the given string of text and return the root node of the tree.
Determine how many times the original text has been consumed and how many times it has been
Add command arguments.
Attempt to parse a time string into a datetime object
Prints the text to the console in CSV format.
Outputs a text representation of the metric to the console.
Returns a raw representation of the JSON object.
Returns the XML representation of the text passed in.
Default parsing pred. Returns True if the node is empty or the type of terminal is terminal
Pretty - print the root.
Gets a representation of a repetition.
Parse a terminal node.
Extracts an exclusion from the text.
Count leading whitespace.
Calls the target extractor on the given string.
Return the current position of the parse node.
Return True if any of the children is empty.
Adds a string to the ignored string
Check if the node is the type of the given value.
Recursively flattened the children of this node.
Returns a new string representation of this node with the specified pred.
Return a parse node that is a merged of this and other.
Return a parse node of new type.
Returns a parse node with the specified compressed value.
Return the current position of the line and column.
Return a position corresponding to the maximum number of lines and columns in the file.
Move to the next character.
Move to the next line.
Move to the previous line.
Returns the last readed line.
Increments the current position by the given number of characters.
Save the current context.
Restore the current context to its original state.
Return the formatted representation of the object in a human - readable format.
Set the name of the signature.
Count the number of global variables in the signature.
Count the number of functions in the signature.
Update the signature of the current scope.
Return a scope corresponding to the union of the signature of this scope.
Update the scope with the intersection of the oset and the keys in oset.
Return a new scope with the intersection of the existing scope with the new scope.
Update the scope with the elements in oset that are not in oset.
Return a scope where the scope is the difference of the signature from the current scope.
Update the symmetric difference dictionary.
Return a new scope with the symmetric difference.
Add a signature to a state.
Remove a signature from the scope.
Remove the signature from the scope.
Return the first signature.
Return the last signature.
Get a scope by its symbol name.
Get the signature of a subscope by symbol name.
Return a new scope that represents the current scope with the same value as this one.
Call the translator function from this node.
Recursively normalize strings in the given AST node.
Set this node s attributes from another node.
Returns True if the hit charge is within the specified range.
Computes the signature of the function
Resolves the resolution of the signal.
Return a list of resolved names for the given type name.
Set the resolved name for a given type.
Delete a file from the local filesystem.
Delete a file from S3
Delete a file from S3
Save a file in the temp temp file.
Save a file to s3
S3 save the object to a temp file
Find all files in a bucket by a given path in s3
Create a new enum for the given type.
Set a callobject by one of the names in the chainmap.
Reads the next line and checks if the token is in the context of the current line
Push the node into the list of rule nodes.
Remove the node from the list of rule nodes.
Return the value of a node.
Parse given content as a stream.
Create a new tag for the node with the given name. Return True if the tag was
Return the end tag of the node with the given name.
Set the rules of the model.
Sets the hooks for this class.
Set directives in the meta file.
Evaluate the rule with the given name.
Evaluate the hook with the given name. Raise an error if the hook is not registered
Return True if the next character is the given string.
Read one character.
Read a character and validate it.
Read until EOF.
Return a boolean indicating whether the stream can ignore blanks.
Check the struct compatibility of hits
Add a rule clause name.
Adds a rules to the parser tree.
Add a new rule.
Add a sequence to the parser tree.
Add an alternative node to the parser tree.
Add a range of strings to the parser tree.
Add a node to the parser tree.
Adds a capture to the specified sequence.
Binds the given cpt value to the given sequence.
Adds a new hook to the parser tree.
Returns a string parameter pair corresponding to the value of the parameter n.
Convert a string parameter to a string parameter pair.
Change a parameter s value to a string.
Get the parameter id of the parameter at index i.
Set the name of a hook. Returns True if the name was changed False otherwise.
Appends a parameter to a hook. listparam
Evaluate the next parsing node and return the result.
Return a boolean indicating whether the string should be ignored.
Add a state to the container.
Export the state as a string in dot language.
Writes the graph to a dot file.
Writes the graph to a png file.
Return a formatted string representation of the | infos| object.
Returns the next state of the given state.
Reset the living state.
Infer a block of code.
infer a subexpr node
Infer a literal in the scope.
Dumps the node information to stdout. Returns bool - True if successful False otherwise.
Return the scope of the function.
Return the clause of the expression.
Return an ast. Call node as string.
visit a call node by returning an ast. expr node
Return the expression of the hook at the given node.
Return the value of the named attribute of the given node.
visit the capture nodes by returning a list of nodes.
Return the scope name of the given node.
Return node s result as function call or alt function.
Return node s state as seq expression.
Replace optional expression with a boolean expression.
Return node s representation as number.
Return node s representation as new expression.
Concatenate strings that are at the end of the source string.
Set the indent for a list of items.
convert a list to str
Print the rest of the nodes
Populates from the given sequence.
Populates a state register from a list of sequences.
Build the state tree from the given state register.
pred eq - Returns True if val == val
Build a grammar from a tuple of strings.
Build a grammar from a file.
Parse the class using the specified source and optionally the specified entry.
Parse a file and return a parse node.
Sets the value of a node from one node to another.
Set the value of a node as an int.
Get the subnode of the node that is the result of the function call.
Dump a deposition to a json string.
Return the recids of invenio12.
get recids invenio2 at a particular date
Retrieve the check information from the database.
Dump a token object to a JSON - formatted string.
Return the number of records for this account.
Dump a User to a JSON - formatted string.
get modified recids in invenio12
get modified recids in invenio2
Get the list of limits of a given collection
Retrieve the record revisions for a given record.
Get the collections of a record.
Return a JSON representation of the record.
Get the full list of recids that have been modified since the given date.
Dump a record in bibdoc format.
Dump a client to a JSON - formatted string.
Loads the common model from the given data
Collect things from entry points
Create the app and push it to the app context.
Gets the run sql command.
Retrieve data from the database.
Dump a token to a JSON - formatted string.
Load an oauth2server. models. token
Import record to database.
Import config variable if imp else default.
Return a dict representation of an object.
Return the number of users in invenio12
Return the number of users in invenio.
Returns a string representation of the user.
Load a protein from the given data.
Create a new record with the given data.
Load a record from the given data source.
Load a set of records from a JSON source file.
Get profiler statistics.
Run the server.
Dump the profile to a file.
Delete the profiling statistics.
Delete the profiling progress.
Gets the current status of the stream and finish the stream.
Calculate the translation of images in parallel.
Calculates the median translation of a set of images.
Helper function to add ones to the end of an array.
Create a new record for the given dump.
Create a new record for the given dump.
Update a record in the database.
Create one or more PIDs.
Delete a record from the database.
Create a file instance and version.
Delete the buckets associated with the record.
Returns a list of persistent identifier values that are missing from the list of persistent identifier values.
Prepares the list of files to be processed.
Prepare the list of processes to process.
Returns True if the revision is deleted.
Load a community from the database.
Load a featured community.
Dump a thing to a file.
Check a thing.
Delete the widget and pos and actions
Computes the magnitude of a vector.
Normalize a vector.
Transform x and y coordinates of the image to match the new coordinates of the image.
Ensure that the bones are present in the dictionary.
Set the length of the field.
Set the parent of this node.
Get the pivot point of a sphere.
Start an animation
Change the state of the scene.
Removes the state of the group.
Set the state of the texture.
Disable the region state.
Create the object if it doesn t already exist.
Redraw the data.
Renders the batch of 3d model data.
Set the model to use.
Writes the specified report to the specified file.
Adds a menu to this str
Redraw the label.
Redraw the label.
Draws the widget to the window.
Delete a widget from this widget list.
Redraw the label.
Register the event handlers.
Register event handlers.
Add a label main for the window.
Go to the end of the exit dialog.
Updates the progress bar to reflect the new value of the label. nmin nmax
Render all the actor render to the given view in 3d.
Render the given view in 3d.
Return True if the resource exists in the filesystem False otherwise.
Adds a category to the game.
Returns the missing texture
Returns the model object with the given name if it exists else loads the model from the cache
Load a model by its name
Returns the model data for the given model name if it exists in the cache else returns the
Add a widget to the container.
Draw the sub menu
Redraw the selected vertices
Redraw the widget.
return true if the mouse aabb is within the given size
Return the p - value of the interval.
Add a layer to the current layer.
Add an action to the actions list.
Call the function with the given action.
Register a name to the registry.
Add a layer to the list of layers at the specified z index.
Draw the layers.
Delete the layered widget and store it in self. layers.
The border of the widget.
Returns a list of strings describing the offset of the widget.
Returns the size of the widget.
Read a mesh from a HDF5 file.
Make a connectivity matrix of the given shape.
Set the fields of this object.
Add one or more fields to this query.
Checks the types of the elements in the collection. Raises a value error if the
The space of the elements of the type argiope.
Returns a str of edges with missing values.
Returns a pandas DataFrame of centroids and volumes.
Convert an element set to a node set with the specified tag.
Convert a node set to a surface with the specified tag.
Converts the surface of the element to the element sets of elements with the given tag.
Returns the metadata for each column of the table.
Returns the metadata as a pandas series.
Make all the directories in the working directory.
Run a GMsh file and return the mesh.
Read a history report from a CSV file.
Read a mesh field report from text file
Convert a list to a string.
Generate a string representation of a equation.
Convert list of labels to string.
Parses the response and returns the payload.
Make a GET request to the API and return the response.
Write a xy report to a file.
Returns a string representation of the error message for the given instance and value.
Returns true if an exception is thrown by a descriptor in the traceback.
Set the data of the Point instance.
Return the axis mode of the time series.
Update options with current values.
Make a class with the name of the function and the attributes of the class.
Calls process and draw the notifications.
Try to convert value to float if it is not convertible.
Convert a string value to an int or float.
Plot a graph from the tokens.
force the raw string to unicode
Return True if the mime type is matching the given mime type.
Clean domain name.
Splits the domain name into individual domain names.
Create a hash kw for the given token.
Counts the words in the si s body sentences.
Return the index of the given stream.
Invert hash of a string.
Get document frequencies for a set of hashes.
Return a stream of key - value pairs corresponding to the hash of the two keys in the
Make an iterator of items from a file - like object.
Read a variable - length int.
Read the next line and parse it as a string.
Serializes a si key into a string
Convert a streamitem into a key and a data dictionary.
Change the current working directory to path and restore the previous working directory.
Strip a prefix from a string.
Strip the suffix from a string.
Determine if a string is a subsequence of another string.
Starts the server.
Shuts down and closes the HTTP server.
Returns a function that returns the line number of the error.
Add a callback to the route.
Resolve a literal route to a non - literal route.
Resolve a non literal route.
Normalize a pattern to be used as a type and a wildcard.
Return the response body if the response body is a string. Otherwise return the original response body
Add a response header.
Set a cookie value.
Returns a string representation of the response s status line.
Return the content type of the media type.
Remove a file or directory.
Returns a list of all open file names in the current process.
Attempts to fetch a file from the specified work unit and save it to fpath.
Returns a list of lines from a file.
Return a random adjspecies pair.
Return a random adjspecies pair.
Morph a sentence to a specific request.
Get the similarity of an app.
Show the hiragana of an app.
Create a new entity.
Show the review shortsum of an app.
Show the score of a specific keyword for an app.
Print the contents of an app s sentence file.
Returns a tuple of init stage and a tuple of transform functions for all the components in the
Run all writers and return the o paths that would be written to the log file.
Run the given transforms on the given stream.
Replace config with a new pipeline.
Return a list of all the Ments in the given list of Ments.
Returns True if at least one of the specified chain evidence is in the given list of chain
Return a list of tokens that match the given stream item and aligner data.
Make a file from a given ner xml file.
Terminate the child process.
multimodal version of p where p is the length of p while n is the
Yields sentences from the sentence tokenizer.
Return the label index of the given stream item.
Make the sentences for the given stream item.
Make a file with the cleansed content.
Make the ner file for the given tagger id.
Converts a string to lower case strip punctuation and lowercased. Returns the new string
Instantiate a pipeline config.
Generate a stream smith chunk.
Make a clean visible file.
Clean up the span and strip punctuation.
Reads html and writes it to stdout.
Try to load a function from a module.
Update the values of the external stages in the specified module.
Create a new stage by name.
Reads the next sequence of bytes and returns the index and the next sequence of bytes.
Returns a boolean if href is in the config or if href is a part of the config
\ Creates the labels.
Yields the absolute path of each file in the input directory.
Yields all the tasks that start with the given key prefix.
Get random available data.
Returns a list of sentences and relations and attributes for a given ner dom
Verify the md5 hash of the provided data.
Get a bucket from S3
Decodes the data in the specified format into a stream or raise a configuration error.
Extracts a single chunk from a bucket.
Convert a stream id to a key - value pair.
Convert a key to a stream id.
Compute the md5 hash of a stream item.
Entry point for iotile - cli.
Build an argument parser.
Convert sentences to char tokens
Convert a sequence of tokens to a sequence of char offsets for a given sequence of tokens.
Add an element with the specified tag.
XPath - return the last piece of the document.
Return the index of the current text element.
Yields all descendants of this element.
Selects elements from source.
Select elements from source that match the given name.
Return elements in source that match the name of pat.
Returns the string of the following siblings of elem.
Calls the command with the given strings in the given binpath.
Export a given file to a given output file.
Export an svg file to a pdf file.
Export an svg file to a png file.
Gets the jinja environment for the given file path.
Sets the template file and environment variables for the given template file.
Fill self. file content using self. template. render with self. doc contents.
Save the content of the file to the given path.
Reads a document from a template file.
Replace svg codes with their character codes.
Render the svg to a PDF or PDF.
Renders the specified file to the specified path.
parse a string source into an expat. parser.
parse and return the fragment fragment of an HTML document.
Insert text data at the end of the XML document.
Insert node before reference node
Create a new element with the same name and attributes but different attributes.
Return the string value of the given node and its children.
Insert a new child at index.
Parses the config and returns the configdata if it exists or if it doesn t return
Get Google credentials.
Create event datetimes.
Create an event.
Parse options and create a new event if it doesn t already exist.
Get the extension of a file
Add a file extension if needed.
Returns a named temporary file.
Remove files with extension from workdir.
Converts a CSV file to a JSON file.
Replace a string old with new in a file at filepath. max is the maximum number of
Parses the HTML and removes blacklisted tags.
Check next sibling tag.
Parses the new paragraph tag and wraps it in the new tag.
This method takes a tag and creates a plain text tag with the given str in style.
Parses the new style tag and wraps it in the new tag.
Recursively parse the attributes of a tag.
Cleans line breaks from a string.
Parse an href into a query string.
Parse the value of an attribute. If the value is a string and the attribute value is
Translate a dictionary of keys to values.
Return a string representation of the class.
Find all files in folder path that match regex
Concatenates a list of strings.
Yields strings that start with the given part.
Yields strings that contain part in full.
Returns the next value of obj in ctx as a boolean.
Yields each element of seq in the sequence as a string.
Looks up values in a table based on a key in a sequence of values.
Replace chars in svg code
Check if svg file is valid and raise an error if not.
Merges a list of pdf filepaths into a new filepath.
embed font to svg
embed a set of font files into an svg file
Checks all the inputs of the module. Raises runtime error if any of the inputs
Check if the function is callable and if not print an error.
Recursively recurse the given list of inputs and output the given output.
Create a template from an option and render it using the template defined by template name.
Recursively recurse through the inputs and output until a certain depth is reached.
Convert an object to a string.
Convert an object to a number.
Converts any string value to a boolean value.
Yields token strings for the given AST node.
Change the xml encoding of a file.
Save a string of text into a file.
Launch an option and return the result.
Calls the given command with the given arguments and returns the return value.
Converts a. tex file to a PDF file.
Recursively recurse through the options of the current state of the loop and call the appropriate method
Transform a geometry from one spatial reference to another.
Create a geometry from a JSON - encoded string or a string - like object.
Expand the given string to its length.
Return the intersection of two strings.
Returns True if this rectangle intersects the other rectangle and False otherwise.
return a polygon
Construct a Series from a zn m z string.
Write the main dataframe to a file.
Return a new table with rows selected according to condition.
Returns a table containing the values of the column at the given nuclei.
Returns a table containing the intersection of self and table.
Returns a table where rows are not in the main dataframe.
Select even evenly selected elements.
Selects even odd elements in the sequence.
Select even evenly evenly evenly evenly evenly evenly evenly evenly
Return the error in the main dataframe relative to the specified target.
Computes the binding energy of the table.
s2n = num f = str - f
Computes the first child s1n - child s1n - child s1
s2p - > p f - > p
Computes the first child s1p - child s1p - child s1
Returns a new table containing values derived from self. df.
Calls the given function in the context of the current db session and closes the session.
Derive a master password from this key.
bootstrap the database
Search the domain with a given query.
Modify a domain
Create a new domain.
Extracts HBs from a file - like object.
Returns a VSI file name for the given path.
Returns the epsg id
Log the return code and exit.
Update a file from a URL.
return a dictionary of the available raster driver names and metadata
Returns the image driver for the specified path.
Convert a GeoJSON to a numpy array.
rasterize a layer
Open a raster from a file.
Create a raster from a byte string
Copies the raster from one raster to another.
Returns the option options for the given option name. If self. options is none then the
Create a raster from a raster file.
Set the geo transform of the affine sequence to the given affine.
Return the contents of the array as an array.
Computes the envelope of the image.
Get image driver
Create a new raster
Return a masked array of the given geometry.
Returns the node s nodata value.
Wrapper around ds. read raster
Resample the raster to a different size.
Save the image to the specified path
Set the projection of the dataset
warps the raster to a new reference
Calculate the length of a chunk of alph of a given length.
Returns the alphabet used in charset if charset is in presets. If charset is not in
Encode a single chunk.
Convert a string representation of a chunk to a long representation.
Get a chunk of data at the specified index.
Returns a regular expression for the given file.
Normalizes the string representation of a date.
Detects the timezone from the locale code. Returns the default timezone if the locale code is
Return a dictionary representation of the resource.
Handle one or more asynchronous jobs.
Runs the job handler in a worker thread.
Runs a job in a pool of max workers. If max workers is none the number
Set the classification for this data point
Send a message to the queue.
Turn on light.
Turn on switch.
Turn on with brightness.
Turn off a device.
Send a message to the queue.
Send a message to the device and wait for a response.
Set the qualified name of the object.
Set configuration files.
Yields the options and values for each option in the configuration.
Create a new configuration file at the specified index.
Update a configuration dictionary.
Reads the config from the given file. If the config file does not exist returns none
Reads the config files and returns the content empty files and faulty files.
Returns the option names for the given section.
Returns a list of sections to be read from the configuration.
Build the argument parser.
Parse the args of the CLI.
Bash comp command.
complete a bash shell command
Start a new IRC master.
This method is called when the connection is made.
Process a line received from the worker.
Close the connection to the worker and remove it from the list of workers.
Called when the job has been loaded.
Handle a response from the client.
Close this job. Returns True if it was closed False if it was already closed.
Adds the given list of jobs to the manager.
Close the connection to the server and all of its workers.
Change the list of waiters.
Adds the given result to the list of results.
Block until the task has changed.
load next job from self. jobs
Mark the job as done.
Add result to self. results.
Cancel the current job and return it.
Block until all active jobs are done.
Distribute a set of jobs.
Adds the given list of jobs to the job set.
Add a callback to the currently active js job.
Returns a job for the given job.
Add the result of a function to the job.
distribution all the jobs that have been done.
Close the js queue.
Remove duplicates from a list while preserving the order.
Match a regular expression to a string.
Get the global region name.
Filter a list of entries based on a set of filters and an exclude list.
Get the public dns name of the specified host
Instantiate a Message from a dictionary.
Get an attribute of this object.
Create an EC2 instance from a boto instance object.
Returns True if the value matches the filter
Returns the display name if name is a string else returns the public ip
Add a timestamp to an event dictionary.
A wrapper for structlog s logger function.
Sets up the celery configuration.
Delete a job.
Returns a config dict from the configuration options in the config file.
Handler for config files.
Prepares the given table of rows.
Get the color hash of a string between min and max.
Return a random color between the min and max of a string.
Checks a username and password against the database and returns the user if it exists or none
Check if a user with a given token exists and return the user or none if the token
Determine if a process is running.
Imports a module and returns the module object or None if the module can t be imported
return the ip address of the node
Make a request to the API
Prepare post parameters.
Serve the application.
Render the template with the given name and value.
Stream a list of commands in a list of threads.
Returns the number of days between the given dates in the given locale.
Get the full path of a command.
Builds an ssh command string.
Create a new profile from command line arguments.
Creates a relationship between this part and another part.
Get the related parts of the relationship of a certain type.
Load relationships from a file - like object.
Add a part to this content type.
Load a part of a certain type.
Find an extension for a given name.
Create a new instance of this class from an element.
Parses input string and returns a chatl tree
Builds the JWT using the given key.
Assign force field to an AMPAL object.
Find the maximum rad and npnp in the force field.
make ff params dict
Return a stream containing the contents of the file - like object.
Yield the segments that contain the given name in the archive.
Returns a list of all filenames in a given directory.
Returns a list of the names of the subdirectories of the given directory.
Create a new prefix for the given directory.
Delete a file from S3
Ensures that the login is successful.
Get the loud of a lang
Returns the URL of the home namespace if it exists otherwise none.
Return the hotspots of the given rooted leaf samples.
Get a keeper token
Upload a build resource.
Determine if an event should be skipped
Confirm a build.
Recursively update a dictionary.
main command line interface.
Edit a part.
packs a file into a directory
Splits all files in a given path.
Returns the default editor for the specified file.
Process a module node.
Generate html string.
Returns the html for a chart.
Serialize a single data object to a chart cell.
Takes a JSON object and patchs it in the format expected by the API.
Converts the given json data to html
Convert a dict of datapoints to a pandas data frame.
Writes the given html to the specified file in the specified folder.
Class method for creating chart objects
Encode one or more data fields.
Infer the tarball from a file.
Create an app in the specified tarball.
Delete the specified app.
Generate random binary string.
class a = not valid or list a = range of num class a = range of num
Generate a random date between start and end
Return a session object with the specified auth token.
Makes a request to the API endpoint using the provided data
Create a new tarball and return a Resource for it.
Checks the status of a build.
Yields a sequence of strings starting from prefix.
Registers the sub commands of a parser.
Returns the argument parser for the root argument of the command.
Returns the description of the document.
Returns the help string of the command.
Run the action with the specified arguments.
Encodes the data according to self. series and self. codeset.
Get the athletes from the server
Returns the last n most recent activitys
Request activity list.
Request activity data.
Format and format the athlete endpoint.
Format and return the activity endpoint.
Try to get a request and raise an exception if it doesn t exist
Creates a new app from the given tarball URL.
Creates a URL with auth
Return a random title for the given languages.
Return a random person name
Return a random name for the given list of languages.
Renders the value of the option in the form of a string.
Set the dataset and series for this object
Renders the dataset into a new string.
Check if the type is one of the given types.
Returns the full url of the resource.
Show the contents of this element in a web browser.
Saves the URL to the specified file. If fname is specified the name of the file
A helper function to open a request and print the response.
return an image of the object
Write the given file - like object to the given file - like object.
Returns the checksum of the signature.
Return a random amount between min and max with decimal places.
Returns the unprotected and protected claims.
Return a list of the signing keys in this key jar.
Unpacks the given metadata statement into a dictionary of values.
Packs a metadata statement into a signed metadata string.
Evaluate the given metadata statement.
Calculates the correct usage for a given federation usage
Extends the given SMS dict with another SMS dict.
Parses the command line arguments.
Add command line arguments to an argparse. ArgumentParser.
Applies the specified logging opts to the given log files.
Logs msg % args with severity verbose.
Map a string to a sequence of letter numbers.
Calculate the anagrams of a word.
group by upper case
Apply a timeseries filter to a series of points
Get the last value in a timeseries.
Validate page number.
Get a page of items from an iterator. Returns no page if no pages are found.
Change the mode of a file or directory.
Create an internal signing service for an entity.
Make a web signing service.
Sign a request using this key jar.
Creates a new instance of this class
Updates the metadata statement for the specified location using the specified request. Returns the updated statement
Update the signature for a given location
Yields the contents of a bundle.
Create a bundle from the given data.
Returns the urls for the given asset type
Render HTML tags for a given asset type.
Returns the HTML tags for the asset types of this asset type.
Tries to protocolise the given URL.
Finds the links in a given URL. Returns a list of hrefs
Return a listening endpoint for a client connected to the given client.
Returns the list of modules in the project.
Import all the modules in the configuration.
Select one or more fields from a nested document.
Map a list of datetime objects to one or more datetime objects.
Returns the number of rows of the cursor in the table.
Prints the number of records in the database.
Given a list of do tasks and a dependency graph return a list of graphs corresponding to the
Add default dependencies
Adds default dependencies and sequences when a project is saved.
seq post save handler
Create and save all tasks of an element
Get a config value
Adds a new factory for the given identifier.
Removes the specified factory from the list of registered factories.
Connect to the given protocol using the given factory.
Receive data from the protocol.
Remove a connection from the protocol.
Shortcut to call remote.
Make the connection to the multiplexed remote factory.
Make a multiplexed connection
Log the received data.
Sends the given data to the remote end.
Called when the connection is lost.
Returns the local protocol for the given connection identifier.
Called when data is received from the remote connection.
Disconnects the given connection.
Returns a string centered on the current terminal.
Prints a string of the terminal on the right of the current terminal window.
Returns a string representation of the version number.
Identify the unit framework of the target unit.
Assert that value is unit convertability between target unit and unit framework.
Pad a block of data to the given block size.
Pad the padded data to the specified block size. Raises value error if the padded
Sign a message.
Gather metadata statements from the metadata
Pretty print the input word.
Create an argument parser for the given command - line arguments.
Prints out words in a wordlist with their anagrams.
received a packet of data
Callback function called when a type is unregistered.
Create a function stub for a given URL.
Ping a peer from the local node to the remote node.
Returns a tuple of strings representing the regex for the given command.
Reads the list of values from in string according to proto.
Return the string representation of the object in the given proto.
Check if the key jar in this statement is in the correct key jar. If not raise
Parse the response from the remote client.
Returns a list of database names
Sync the contents of a folder at the given path with the contents of the given bucket.
Builds the specified package from the specified path.
Decorator to make an instance read - only.
Load configuration from JSON file.
Signs the JWT with the given key jar.
Returns a JWT request signed by signing keys.
A helper function to descovery a module.
Parse the command line arguments and print the results.
Compute the score of a letter in a string.
Calculate the score of a word in a list of strings.
Yields a list of words in a word file.
Return True if the word is a valid string in the bag of letters in the word.
Called when a string is received.
Return the specified command and responder.
Parse the values of the request.
Writes the response to the transport.
Called by the netstring receiver when the connection is lost.
Build the protocol for a given address.
Convert a JWK JSON object to a key jar.
Convert a string representation of a JWK document into a bundle.
Process event with process wildcard.
Process event in customer process wildcard.
Process neutron customer process message.
Process the message with the specified event type and process wildcard.
Process the message with the appropriate process wildcard.
Process event with process wildcard.
Process a message with process wildcard.
Serve this object to the given Wsgiref. simple server.
Prints msg to sys. stdout with log func if log else none.
Prints a message to sys. stderr and then prints it to sys. stderr.
Decorator to register a command sub class.
Registers a command sub class.
Checks the value and converts it to a string.
Returns the argument from the given string.
Update the completer dictionary.
Connects to the tern s tern s tern s tern s tern
Creates a new connection and returns the connection to the consumer.
init the modules module
Create the consumer with the specified configuration.
Create and configure aix consumer.
Initialize neutron consumer.
Create and configure theix consumer.
Initialize the heat consumer.
Enable the specified component notification.
Get information about a song
Download a song in a thread.
Executes the given instructions.
Load an attribute from the globals dictionary.
Calls the specified function and prints its arguments.
Dump a database to a file.
Function to be called when the application exits.
Runs the application and handles keyboard interrupts and system exit.
Change the current working directory to the given path.
Copies the contents of src to dst.
post mortem into debugger
Get the last modification time of a file.
Check if the item has changed since the last check.
sync the cache to the local file system
Delete all the files in the fdir.
Scrap the data from a feed.
Download the image from the given url and save it in the cache directory.
Check if the image has changed
Find the stack trace of the current caller. Returns the filename line number and the name of
Returns the defining component of the specified pe.
Main function for the command line interface.
Find the handle for a symbol in the stack.
Determine if a pe is contained in the corresponding entry point.
Determine if the current process is global.
get data type name from s dt
Returns a list of related attributes of the given rgo and rto
Create a new enum for the given enum name.
Returns a function that creates a new bridge in the given metamodel with the given action.
Generates an external entity of the given metamodel with the given bridges and names
Create a function from a sync object.
Return the constant value of the label given by the label given by the cnst syc
Create a function that runs the given operation.
Create a derived attribute property.
Create a simple association
Recursively create a simple association and its sub - linked or derived association.
Make component from model.
Perform a single task.
Accept a reply socket and send it to the specified channel.
reject a reply socket
Send a reply to the given socket when an exception is raised.
Block until a RPC call is received.
Establish the result of a call.
Dispatch a reply to a particular task in the result queue.
Try to guess the type name for the given value.
Deserialize string value according to uty
Retrieve a feature by its content id.
Put a set of items into the database.
Delete document by content id
Delete all documents in the index.
Delete the index.
Return a generator of feature values with prefix matching the given feature names.
Scan a list of prefix ids yielding their ids.
Scan the index for a particular field with a given value.
Return a list of feature names with the specified feature names.
Returns a list of filters to apply to a set of key ranges.
Get the mapping between all indexed features and the fulltext indexed features.
Returns the types of the field
Return a list of index names disjunction from a query function.
Returns the number of bytes required to encode the given features dict.
Counts the number of bytes that match the given filter predictions. Returns the number of bytes
return a pretty string of a feature dictionary
Parse command - line arguments.
Returns the default formatter for the given error.
Return a pretty string representation of a link
Returns a pretty unique identifier for an instance.
Check the uniqueness constraint of a model.
check link integrity
Return the number of instances of a certain type that are not a subclass of this type.
transform a string to a lower - case string.
Delete all records in the table.
Scan the index table for keys matching a prefix of a given value. Return a list of
Create new index.
put raw value into index by name and content id
Yields the unique index value for a given index name and content id.
Get index by its name.
Adds a direction to a string.
get the name of a type
Get the refered attribute of an object
Build a new type name from a type name.
Build enum type.
Build a struct type.
Build a user - defined type.
Builds a type from s dt
Build a new class for the given object.
Builds a new component.
Build the schema for the given model and component.
Returns a pretty - printed version of the XML string.
Fetch a list of bikes.
Set position label and character position.
Create a queue
Delete a queue.
List the queues in the queue store.
Get content and properties of exchanges.
Purges the content of a queue.
Creates an email message
Reads the image from the connection and stores it in the text cache.
Return True if text is visible.
The main entry point for the bridgepoint CLI.
Takes a value and serializes it into a string.
Serialize the association between ass and s1 and s2
Return a string representation of a class.
The main function of the command line parser.
Partitions a collection according to a given condition.
Gets the bidi for the current request.
Find link between inst1 and inst2 based on link relation id and phrase
Compute the lookup key for the given instance.
Compute the index key of the given instance.
Returns the type of the specified attribute.
Creates a new instance of this model and adds it to the list of referential attributes.
Yields all instances of the metaclasses in the registry.
Define a new class for the given kind with the given attributes.
Send a multipart message over the specified socket.
recv a multipart message over the specified socket
Runs a command in the current virtualenv with the given project name. Returns the number of
Parse a string of email addresses into a list of email addresses.
Calls the function f or function f in the context of f. kwargs can be passed
Get the table of all attributes of an app in an RPC spec.
Normalizes postcode middleware.
Returns the next value to read.
Accepts an entry point for the specified sys instance.
accept a child of an instance of this class
accept an ep pkg in the current context
Get the current brightness of the image
Match self. value with args. Raise syntax error if self. value doesn t match
Finds a match in the document at the given position.
Returns the selection for the next character at the given position.
If the cursor position has changed in the text edit it is changed to match the new position
return info about the exception
Get instance by name
Execute the console widget with history. If source is none the console input buffer is used.
Return True if key is pressed and False otherwise.
Return whether the cursor is pressed by the given shift modifier.
Return the previous string in the input buffer.
Go to the next word in the history.
Remove the info from the request info dict and update the max session history.
Return True if the history is locked False otherwise.
Returns the edit history at the given index
Set the history of the record.
Stores the user input in the history if it doesn t already exist
Clean up and exit the application.
Concat the series of a collection of records into a dataframe.
Set attributes of the object.
Subscribes the socket to one of the topics or all topics
Log a message to the specified topic.
Returns an iterator that returns a value from view. apply sync on each item in view.
Convert a notebook to this nbformat
Get importer for a given path item
try to import io except import error
Override an existing setup. py with a new setup. py.
Parse src into a requirement.
Returns the package info as a string.
Remove leading whitespace from each line in txt. If header is a string return the new string
Override hide event to disconnect the update from the completion widget.
Connects the cursor position changed signal to the current edit s install event filter.
Return the current text cursor.
Update the current item with the prefix.
Register a model in the admin site.
Return a list of disk partitions.
Get the CPU times of the given user and system
Return a list of CPU times for the specified user and system.
raw nonblock mode for stdin
Reads input from stdin and returns it as a string.
update tab bar visibility
Create a new tab with the current kernel.
Add a frontend as a tab widget
Populate all magic menu
Close tab widget event.
Returns True if the hashed passphrase is the same as the hashed passphrase.
Returns a string with indented title
Returns True if the user has permission to change the object otherwise False.
Returns True if the user has permission for the object otherwise False.
Add a new node and its children to the graph g.
Make a bintree in a graph.
Submit a set of jobs to the graph g.
Validates that all nodes have finished in the given tree.
Make a color table from a set of color templates.
Make a copy of this color scheme.
Add a new scheme.
Set active scheme.
Returns the path to the lib directory of the current Python interpreter.
Handle iopub events.
Wait for the kernel to finish.
Set style.
Returns the specified format for the specified token.
Returns format from document
Get format from a token and a new style
Find a command in the system
Returns a normalized path from the user s home directory.
Make sure that the value is in the namespace of the distribution. Raises distutils setup error
Check if a value is a valid entry point.
Return True if the last blank character in src is a whitespace or a whitespace.
Returns True if src is a string with the last two blanks.
Transform an assign system into a new line
Transform an assign magic string into a new line.
Transform the line to a regular expression that matches the prompt.
Transform a line from ipy prompt into a regular expression.
Return the indent spaces and the full dedent indent spaces.
Stores the given lines in the given buffer.
Resets the raw data of the source file. Returns the raw data of the source file
Handle cell magic.
Appends the given lines to the current line mode.
Transform a single cell and push it to the stack.
Post a notification to all registered senders.
Return the set of all observer keys for a notification.
Add an observer callback for a specific type and sender.
Update the status of the jobs in the scheduler.
Print the name of a job in a group.
flush the group if there are njobs
Update the status of the comp report
Update the status of the component
Initializes the thread s status code and result attributes.
Insert a string value at index idx and rebuild the record.
Make a copy of this object.
Declare a special variable.
Like declare special but sets a list variable.
Like declare special but sets a variable.
Set the cwd of the path.
Move to a different state in the route.
Calculates the energy of the node.
Returns a copy of this object with the specified keys.
Returns True if the table has changed and False otherwise.
Render an expression.
Format a list of rows into a table
Shortcut for the HTML link tag.
Returns the js file for the specified URL.
Returns the CSS file for the given URL.
Add an img tag to an URL.
Subtract value from arg.
Multiply value by arg
try to return value / arg except if value is not valid and arg is not a number
try to return value % arg except value error and type error
Returns the verbose name of an object or model.
Split user input line.
Adds an option for the given parser and environment.
Deactivate the builtins
Find the URL name for a given URL.
Yields the explicit links of the URL with the given set of rels.
Split a string into a list of strings.
Shortcut for running a test script.
Add an action with dash dash dash and dash dash dash dash dash dash and action code.
Appends the action code of the given option to the parser s actions.
Prints the help for the command.
Show the help of the command.
Returns True if the given argument list is ok and False otherwise.
Executes the given command with the given options.
Print coverage information.
Unserialize an object from a sequence or dict.
Set the current sys. displayhook
Log the error of the given function.
Returns True if the given string represents a URL and False otherwise.
Check if url is a valid URL.
Validates a URL from a container.
Pull one or more keys from the namespace.
select n random ports
Calls the function with the specified sequences and closes them. Returns the result of the function
Get the last n lines
Set self. autoindent.
If self. logappend and self. logstart are defined in self. logappend self
Save the orig sys module state
restore restore the original sys module state
Register a function to be run after the function is executed.
Create a new main module.
Initializes the user namespace.
Return a list of references to all main namespace references.
Reset the execution count and update the main mod cache if new session is specified.
Delete a variable from the hook.
Reset the selective namespace to the given regular expression.
Get the value of a property on a struct. info is an instance of struct. struct
Find a struct object that matches oname.
Inspect oname using the current inspector.
Initialize the history of the shell.
Show the traceback of the given exc tuple.
Show the traceback traceback of the given type and value.
Shows the last stack trace error in the current stack trace.
Insert the indent at the beginning of the line before the next line.
Add a new completer at the specified position.
Sets the namespace of the completer to use.
Runs the given magic name in the given line. Returns the result of the given function
Find a magics object for a given magic name.
Define a user - defined macro.
Perform a system command and store it in the user namespace.
Interact with self. prompt. render and catch unicode encode error.
Return a string representation of the user - defined variables in the specified names.
Return a string representation of the expressions in the user namespace.
Evaluate an expression in the context of the current user namespace.
Safely open a file and return its path.
Runs the cached cell magic.
Expand a variable in the current namespace.
Creates a temporary file with the specified data.
Exits all the operations that have been done.
broadcasts a message from one client to another.
List all profiles in a directory.
Returns a list of all the profiles in the given directory.
Find dist in req by key.
Returns the full path to the specified file or none if the file is not found.
Returns the next line after the current line. Raises stop iteration if the line is empty
Send a string to the child.
Send the current terminal character to the child.
Prepare a regular expression pattern.
Prepare a regular expression pattern.
Search the buffer for a string of freshlen and return the index of the best match.
Search the buffer for a string of freshlen using self. searches and return the index of
Unpack a file into a directory.
Returns the last error in the log or raises runtime error.
Execute a command and return the output.
Try to find the source of filename in the coverage report.
Return the name of the executed arc of the line.
Returns the arc missing values
Returns the arcactions unpredicted by the user.
Return a list of branch lines.
Returns the total number of branches in the program.
Return the missing branch arc information.
Return the branch stats.
Set the precision of the number.
Calculate the pc covered from the number of statements.
Get the string representation of the current pc covered number.
Highlights the text in needles using the given class name.
Highlight a string using the specified list of keywords.
Highlight a string using the specified list of keywords.
Runs the given function in the context and returns the result.
Remove whitespace from the end of a string.
Returns a string of the given string with the specified number of characters and the specified mark.
Format a screen string.
Strip the dedent from text if it is a str.
Wrap paragraph at the end of text.
Find optimal rows in a list.
Returns the value at index i or default if it does not exist.
Build the kernel s command line arguments.
Initialize ssh connection to kernel
Pretty print an object.
Pretty print an object.
Get the mro of an object class
Default pretty pretty print for an object.
pretty print a group for the given object and cycle.
Pretty - print the pattern of an object.
Returns the pretty - printed name of an object.
Returns a human - readable representation of the function object.
Pretty print an exception class.
Change func for a given type.
oldfunc = deferred type callback function for a type by its name
Write a text object to the output.
Make a line breakable.
Remove the last line of a group.
Flush the buffer to the output and clear the buffer.
Return the pretty representation of an object.
Write a row into an ods file.
Gets the clipboard data and closes the clipboard
Runs the osx clipboard and replaces the string with the given string.
Gets the current content of the clipboard
Get the build prefix for the current user.
Return a copy of the dictionary dikt with its keys removed
Recursively extract dates from a string.
Recursivelyash dates in a given object.
default if object is datetime else raise type error
Check whether or not the site dir is installed.
Write a script to the install directory.
sleep here count times
Create an argument parser.
main function that reads a json file and performs the disambiguation.
Build a package finder.
Set the log level of this class.
Set the default log level.
Called when flags has changed.
Print the help for the registered aliases.
Prints the help for this flag.
Returns the list of subcommands of this command.
Prints the help for this command.
Prints the specified examples to the console.
Update config with new config.
Initializes the subcommand.
Flatten the flags in the MRO tree.
Parse the command line and return a subcommand.
Load the configuration from a file.
Generates a config file for this class.
Downsample k samples from the array.
Format a list of info tuples into a human - readable string.
Writes the given message to the output.
Update the configuration of the current configuration with a new one.
Returns a help string for this class.
Returns the help string for a trait class.
Clears all instances of this class.
Format the failure of a test.
A helper function that prints a crash message when an exception is raised.
Flush the socket and process events.
Emit the signal when the channel was started.
Read data from a file - like object.
Read the next character if the interrupt is present.
Split a string into a list of tokens.
Compress a list of strings into a new list of strings.
Record a function to a specific magic.
Return the documentation for all of the registered magics.
Format the latex string for the command.
Set the default value of an option.
Returns a string from the i. core. page. page
Creates a task with the name of the callable.
Returns the task info with the given label.
get the function from the info dict
Calculates the next run in the schedule
Submits the task to the queue.
Runs the task with the given message.
Asap the next run of the simulation.
Runs the number of iterations of the callable.
Run iterations of the callable only once.
Find the url file.
Bind the kernel to the application.
Create an interrupt event for the kernel.
Runs the process.
Return a dictionary of all objects in ns that match the pattern.
Filter a namespace by a pattern.
Recursively apply a given operation to a dictionary.
Draw a figure if the interactive figure is not interactive.
Render all the figures in the figure manager.
Send a figure to the inline backend.
Loads the specified module as an extension
Unload the specified module as an extension.
Generate random ports.
Initializes the HTTP server.
Handle signals of the main thread.
Interrupt the execution of the application.
Clean up the kernels of the process.
Calculate price options
Replace multiple occurrences of a dict with text.
Render the prompt.
Copies the zipfile into a new location.
Fix version number in context.
Returns True if obj is a string in the array modules or if the object is a tuple
Get the partition of seq by p and q. If p < num or p < q
A convenience wrapper for run source.
Run a source string.
Fetch a file from an IPI site.
Reduces a list of frequency strings into a single string
Computes the number of digit frequencies in a text file.
Yields the type of each character in a txt file.
Converts a list of digits into one digit freqs
Calculates the number of two digit freqs for a list of digits
Calculates the n digit freqs for a list of digits
Plot two digit freqs
function to plot one digit frequency function
Prints a debug message for the given expression.
Returns a URL to the given view with the given args and kwargs.
Check if a string is private.
Helper function to debug a source code. src can be a string or a file - like
Helper function to debug a Python script.
Log a debug script in the specified module.
Return a dict of all the hdict of the given hashroot.
Compress a set of h files using the given hashroot + str.
Return a list of all the keys in the directory.
Returns True if the specified record is allowed and False otherwise.
Format the error and add capture to the error.
embed config into the global embedded shell
Creates a new csv writer and the meta writer
Prepare the list of languages for the given root directory.
Add a new entry to the polib. po file.
Writes the header of a. po file
Subscribes a user to this collection.
Initialize a new option parser.
Imports a module and calls it in the correct place.
Create a Python script from a Python file.
Compile the given python file and return the code.
Load code from a. pyc file.
Convert a matrix of rows and columns into an HTML table.
Set the current position to the specified value.
Cancel the completion of the current slice.
Select the index of the specified column in the specified row.
Update the list.
Get the frequency of each word in text.
Print n words from a dictionary of frequencies.
return a string representation of this object as an XML element.
Writes a string to a file.
Validate PIN.
Send a pin to the shared topics list.
Delete a shared pin.
Send the specified pin to the specified user.
Delete a pin by its id
Subscribes a user to a topic.
Fetches a list of all subscriptions associated with a user token.
Begins the transaction.
Start a new task and return the result.
A context manager for the given units. Submonitors the given state in - place.
Update the number of units and update the message. If the total is none raise an exception
Create a submonitor and add a listener to the submonitor.
In - place done message
Change the location of the egg info file for this build.
Loads the config from a list of config files.
Reads the config file and returns it as a dict.
Load a configuration from a dictionary.
Decode the argument list.
Loads the configuration from the given arguments.
Converts the configuration to the current configuration.
Attempts to find a module using imp. find module but if the module cannot be found
Decorator to add a stop callback.
Notifies notify of new data.
Calls the stop callbacks.
Interrupt then kill
find the arguments to pass to the program
start a new task. n is the number of jobs to run. n is the number
Copy file from local to remote location.
Fetch a file from remote to local.
Return the number of unique engine instances.
Starts n instances of the specified engine and returns a list of n instances of them.
Write the n lines of the job file to self. job file.
Return the default context for a cluster.
Parses the output of the job and sets self. job id
Write n lines of batch script to file.
Start a new instance of this class and return its job id.
Make the context menu
Append a number to the end of the string.
Appends a png to the end of the image.
Append svg to this element. If before prompt is True append svg before prompt.
Add an image to the document.
Copies the image to the clipboard
Get an image by name
Insert an image to the text cursor
Insert svg to cursor
Save image.
Check if the exit time has changed.
Initializes the environment with the payload page.
Interpret input as str using self. prompt manager. render and then rewrite the input
Ask the user to exit.
Set the next input.
Read a config file.
Returns a list of strings.
Get a list of strings.
Set the timid from an environment variable.
Set the value of this parameter from the given keyword arguments.
Read config from a file.
Set an attribute from a config option.
Change the list of delims to a list of strings.
Split the line by the delim character at the given position.
Return a list of strings that match the global namespace of the input text.
Return a list of words that match the given text.
Change the greedy delims of the completer when the completer is changed.
Return a list of aliases that match the given text.
Return a list of strings that match the text.
tab - complete function if we are in the terminal or if we are in the completion state
Returns True if at least one key in the record is present in the tests dictionary.
Match a check to all records in the collection of records that match the given check.
Extract a subset of keys from a record.
Returns the quiet status of the cell if it ends with a string. Otherwise returns False.
Render the prompt and write it to io. stdout.
Format the output of the command.
Log the output of the shell session to the log file.
Raise an exception if the object is freezed.
Convert string s to MySQL timestamp.
Change the timeout in the event loop.
do one iteration of the loop
Publish a message to the topic
Send a request to abort the request.
Send a request to the remote shell.
Returns a string representation of the topic.
Send the shutdown message to the iopub socket
Add the modules before the current context.
Remove modules from sys. modules that are not in the current context.
Returns the absolute path of the given path.
Return True if the file exists or if it s a directory or if it s a file
Check if an object is a class.
Determine if the given path is a package.
Add a label to the end of a string.
class decorator for transplant class
Get CPU times for a given user nice system and idle
Get the process cmdline.
Return a list of file names associated with this process.
Return a list of process connections.
Check if a user has a group.
Resolves a class in a module and returns it.
Calculate the usage percent.
Login to the GDSI server.
Get the gdocs key from the URL.
Ensure temp path exists.
Delete the temp files
Upload a file to a gdoc
Synchronize gdocs to local and remote fields
Downloads csv from gdocs and po files
Upload the po files to a gdoc file.
Delete the document and upload it to a gdoc file.
create a new Qt console
check url accessibility
Check if a URL has the specified contents.
Get the response code of a URL.
Returns True if the response s content type matches the content type of the URL.
Returns True if the response code is the same as the code of the given URL.
Validate data.
Clears the output of the process.
Return a list of code units.
Returns the name of the module as a string. If self. name is not a string
Return the source file of the coverage report.
Determine if the filename should be considered to be a file with the given extension.
Return the total seconds of a timedelta object.
Wait until the task is ready and return the result or raise an error.
Block until all outputs are ready or until all outputs are ready.
Get a list of engine ids and return a dictionary of results.
Abort the current transaction.
Returns the elapsed time since the task started.
Block until self is ready and then wait for interval seconds.
Publish the content of an entry if the entry has a name error
Block until all outputs are available.
Waits until one or more messages are ready to be processed. Returns the number of
Returns an absolute path for a file.
Prepare patterns for processing.
Determine the sep from a string
Yields all files in a directory.
Returns the relative filename of the given file.
Return the canonical filename for filename.
Extract data from a zip file.
Returns True if the specified file path is a member of this directory.
Returns True if the specified file matches the specified regular expression.
Map the given path to the result of the given regular expression.
loop Qt4 kernel
Runs the gtk kernel in the background in a loop.
Enables the specified gui in the event loop map.
Return the goe of a normal vector n.
Computes the eigenvalue difference between the center and the eigenvalue of a matrix.
Computes the ensemble diffs between num and n.
Creates a new instance of this class and returns it.
Load the configuration file.
Writes the file to the specified filename with the specified suffix.
Erase the current state of the parser.
Return the line data.
Returns the arc data.
Writes data to a pickle file.
Read a file.
Returns the raw data stored in a pickle file.
Read a file and return a list of lines and arc numbers.
Combine the parallel data in the data directory.
Add a line of data to the model.
Add arc data.
Add a new file to the hash hasher.
Return a string summary of the table.
Yields lines from input until the specified sentinel is found
Interact with the user.
Replace multiline history item with new string
Prompts the user for raw input and returns the raw input.
edit syntax error while self. tb. last syntax error
Exit the game.
Retrieve the URL and revision number.
Create a new frontend master widget
Initializes the colors for the widget
Return a string representation of the URL and pub URL.
Convert a string representation of an object to a numpy array.
Set the color scheme to the active color table.
Toggle the color scheme.
Return the textual representation of the traceback object of the specified type and value in the specified
Creates a structured traceback of the specified type and value.
Takes a list of extracted strings and returns a new list of extracted strings.
Show exception of specified type and value.
Set the mode to the specified mode. If mode is not specified the new mode is used
Ensures that the specified module has the attribute of the specified module. Returns the number of
Add a new line to the code.
Adds a new section to the code. Returns the new section.
Returns the function with the given name.
Return the code for the given expr.
Render the template with the specified context.
Like dot except except it will catch the attribute error and return the value
Render a template with a given context.
Return a dict of formatters.
Set a function for a given type and return the old function.
Change of float precision.
Return the list of user configuration files.
Configures the logging configuration.
Configures the test directory based on the given list of paths.
Converts a page number into a string.
Page the file fname at the specified position starting at start. If the file does not exist
Returns the command to use when you are in a pager.
return the start string of the pager
snip print a string if it is longer than width and print header if it is longer
Pretty - print a string if o is a unicode string.
Print a png representation of an object.
Print the png representation of an object.
Returns True if the object can be printed in LaTeX.
Print an object in La format.
Adds this option to the given parser with the given environment.
Validate that each element in lst is a string.
Validate string keys and values in a dict.
Run the loop until the loop exits or an exception is raised.
Handle a message from the client.
Send the completion message to the server.
Return information about an object.
Sends a message to the server and returns the response.
Send all pending messages to ioloop in a specified time.
Send a string input to the server.
Start channels.
Stop the channels.
Return whether or not the channel is running.
Loads the configuration from a file.
Launch the kernel on the remote host.
Shuts down the kernel.
Kills the kernel if it has one.
Interrupt the user s kernel.
Send a signal to the kernel. If the kernel doesn t exist raise a runtime error.
Returns a boolean indicating whether or not the node is alive.
Get the shell channel for this node.
Sub channel of the iopub.
Return a channel object for this server.
Bind a kernel to an ip kernel
Prints a debug message if self. debug > level.
Returns the list of extension classes for the given extension.
Return True if the step is successful and False otherwise.
Walks an egg and yields bdf files
Scan an egg for a module in the specified directory.
Launch a new instance of the application.
Save connection dict to file.
Load the configuration from a json file.
Loads the secondary configuration from JSON.
Change the shell s run cell to use the original run cell and print the new string.
Disable thevertx setting in the shell cell and optionally print it.
Execute the given cell and return its result if it s a string. If it s a
Run the heartbeat task if the current time is newer than the specified time.
Run a task from a message.
Removes a task from the task table.
Patch an object s attribute with a method if it is not present.
Accepts a new connection and returns it.
rejects the connection with the specified reason. If reason is none the default error reason will
Returns a proxy agent that calls self. endpoint with the given reactor and context factory.
save a form and redirect to success url
Delete the object and redirect to the success url.
If the user is authenticated then set the user field to the request user.
Check the cache of the loaded modules. If check all is True then only check if the
Runs a editor for the specified line.
Gets the current text from the clipboard.
Add a new function to the chain.
Try to get module metadata by path or module type. If the path or module is not
Configures the plugin with the given options.
Import an item by it s name.
try passwordless ssh
Try passwordless openssh commands.
Tries to connect to the server and sets the missing host key policy. Returns True if
Create a tunnel connection from a socket.
Open a tunnel to a remote host.
Stops the scheduled tasks.
Unwraps an exception.
Registers a message in the engine.
Unregisters the engine associated with the given message.
Handles an execute reply message.
Send a notification to the notification socket
Send a message to the queue and flush the results.
Send ignored control messages to socket.
Reads up to num ignored control replies and returns them.
Flush the iopub message from the given socket
Spins every interval seconds.
Stop the spin thread.
This method is called by the hub thread when it is ready to send notifications and iop
Send a single request to the specified socket.
Hub history of the query socket
Query the database.
create a set of opcode names except key error
Returns the byte parser.
Find all lines matching a regular expression.
Return the first line.
Return the set of first lines in lines that are not in the ignore set
Parse the source code of the token stream.
Return the arc of the first line and the second line of the second line.
Returns a list of child parsers of this parser.
Yields the number of lines in the code.
Yields all the statements in this document.
Returns a string representation of the given block stack.
Validate that all of the chunks are of the same length.
Yields the arc of the current line.
Splits all child parsers into chunks.
Return a set of all arc numbers of all children of this node.
Starts the cover instance.
Print the coverage report to the given stream.
Return True if file is a file with the given name. If package and self. cover
Interpret a distro name.
Open a URL with an authentication scheme and netloc.
Get the parent of an object.
Returns the root topic of the engine.
Render a template to a string using the given context. Returns the rendered string.
Configures the plugin.
Format an error.
Splits a string into num parts.
Convert a notebook to a specific format.
Converts from hex to rgb.
get a new style by name and return it as a dict
Get the current font
Handle an incoming message and prompt the user for the interpreter prompt.
Handle a history reply from the client.
Handles the output of a command.
Handles display data.
Return the started channels of the shell.
Executes the specified file.
Process an error message.
Processes the payload of an item.
Set the default syntax style.
Calls the editor to edit the given file.
Makes the input prompt into a string.
Makes a continuation prompt.
Set the default style sheet to the color of the window and if the page control is not
If syntax style has changed this method will change the syntax style. Otherwise if syntax style has
Transforms a dictionary into a string representation.
Get the virtual memory information of the current process.
Return the system CPU times of the specified user.
Get the process uids.
Get the gids of the current process.
Return a list of the process threads in this process.
Return a list of open files for the given process.
Determine the hash of a package commit
Return information about a package.
get the number of cpus and return it
Get the number of cpus.
Fetch the next set of results
Fetch the next row and return it.
Fetch up to size rows. If size is not specified fetch one row at a time.
Fetch the next row and update the row number. Returns the number of rows in the result
Connect to the pub url and root id
Read a notebook from a JSON string.
Read a notebook from a string.
Reads a string or JSON or Python object in the specified format.
A wrapper for the native writes function. If format == str or format == str raise a
Write a string to a file - like object.
Converts a string in a file to a metadata object.
Load the value of the config from a dict.
Return True if the name matches the filter.
Check if the given class is want by this plugin. Returns True if wanted False if not
Check if the specified directory is in the config. src dirs or in the config. src
Check if the specified file should be ignored.
Check if the given function is the function of this plugins.
Check if the given method should be called. Returns True if the given method should be called
Check if a module is want by this plugin. Returns True if the module is want by
Reads a file and returns a list of lines
Calls the pydb command with the given arg. If filename is not none print the
Print a list of lines.
Define a parameter in the current frame.
Returns the conversion factor between two currency objects
Convert a value from one currency to another.
Compute the price of a currency between start date and end date.
Returns the value of stream. encoding or the default if stream. encoding is not a string
Get the preferred encoding of stdin or string.
write connection file
Initialize the heartbeat
Create a new session using the given configuration and username.
Initializes the iopub socket
Initializes the kernel
Converts HTML to text.
Converts Markdown to plain text.
Returns the FQN for the specified domain.
Add command - line options.
Configures the options and loads from the specified file if needed.
Determine if a directory is want to be included.
Returns True if this extension links to the dynamic library of the specified extension.
Calls one or more functions and returns the string representation of the return value.
Calls the given list of functions in reverse order. Returns an empty string if the function
Appends a function to the end of the function.
Insert a function into the Series at the given index.
Format the usage message with the parser s description.
Write the pid file in the current profile dir.
Remove pid file
Get the pid from the pid file.
Construct a parser from a magic function.
Get the real name of the given magic function.
Highlight the current line of the prompt.
Rehighlight the block and replace the old one with the new one.
Format the current offset with the given format.
Copy text to the clipboard.
Sends a message to the kernel s shell channel and sets the hidden flag to True.
Resets the input splitter to its initial state.
tab pressed
Return the context menu for the given position
Filter console key event.
Prepend the original prompt to the given cursor.
Handle a completion reply from the request.
Overrides the handle reply method to handle the request reply.
When the kernel died emit a message with the last heartbeat and restart it.
Handle the reply of the request info.
Handles text output from the user.
Handles text in stream mode.
Handle a shutdown reply message.
Executes a file and returns the path to the file.
Interrupt the kernel.
Resets the prompt to its default state. If clear on kernel restart or clear on kernel
Restart the Qt kernel.
Call the tip of the current cursor.
Completes the current command.
Handle an error message and append the traceback to the error message.
Processes the message payload and prints a warning if the message is empty.
Call tip when document contents change
Add a plugin to the list of plugins.
chain the call to the method in all plugins and return the result.
Runs each plugin in the list of registered plugins with the given arguments if any of the
Calls the registered plugins method with the specified arguments and keyword arguments if the result is not
Configures the plugin with the given options and returns a list of all of the registered plugins
Loads all registered plugins.
Add plugins to this manager.
Converts a string s to a PNG image.
Converts the given latex string to an html image with the given alt.
Check if the distribution already exists.
Return a dictionary with the specified attributes and ad value.
Get the process name.
Get the percent of the CPU.
Returns the memory percent of the current process.
Return a list of memory maps.
Check if the current process is running.
Suspends the current process.
Resumes a running process.
Send a signal to the child process.
Wait for the specified number of times.
wire the main window into the gtk main window
Returns True if the given identifier is shadowed in the global namespace of the user namespace or
Register a new transformer.
Unregisters a previously registered transformer.
Register a checker.
Unregisters a checker.
Register a new handler for a given name.
Unregisters a handler.
Prefilter line info.
Find handler by name.
Transform a single line.
Pre - filter a line.
Apply prefilter to the lines of the input string.
Returns the handler associated with the given line info.
Return the handler for the given line info if the line info. continue prompt and self.
Returns the handler by its name or None if it doesn t exist.
Returns the handler that matches the given line info.
Handle a line of input.
Handle the command line.
Handle a line of text that starts with a sh cap.
Processes the given line of input and returns the rest of the command.
Handle a single command line.
Handle a single line of code.
Filter text edit event
Reimplemented to hide the timer.
Draw the tip option and draw the primitive.
Show the info of a function call.
If the cursor is at the end of the text edit position change it. Otherwise hide the
Returns the absolute path of the given path relative to the current working directory.
Return the masked value of self as a dict.
Check if the virtualenv is running under the global directory.
Compute the frequency of each word in each target word.
Return a list of the default aliases for the given os. name.
Same as self. define alias except if alias error is raised.
Add an alias to the table.
Validate an alias command.
Calls an alias except if the alias doesn t exist.
Transform an alias to a new command.
Expand aliases.
Generate the help directive for the program.
Resets the intensity and foreground color.
Get a color by its index.
Returns the current format of the Q widget as a string.
Generate a JWT
Remove jwts that are older than the current age.
Check if a token is already used.
Check if the token is valid.
Computes the common prefix for all paths in the given list of strings.
size hint of the document.
Return whether the text can be cut.
Returns True if this control can paste text to the clipboard.
Clear the input buffer. If keep input is True then clear the prompt. If keep input
Cut text.
Return the input buffer of the command.
Inserts the given string into the input buffer.
Set the font of the completion widget.
Prints the current Q object to the specified printer if printer is specified. If printer is not
Set the prompt cursor to the top of the screen.
Resets the font.
Appends a custom input to the prompt.
Append html to this string. If before prompt is True append html before prompt.
Append html fetch plain text to the end of this string.
Append plain text to the end of this string.
Clear the temporary buffer of the prompt.
completion widget for a list of items
Fills the temporary buffer at the given cursor.
Return the control key.
Create a Qt gui. Q control object
Create custom page control
Filter page key event.
Returns the plain text of the given block
Moves the cursor to the end of the text.
Get the number of characters before the prompt.
Get the line number of the prompt from the control input buffer.
Gets the prompt s current position.
Gets the selection of the text cursor.
Insert the continuation prompt html at the cursor position.
Insert html at cursor position.
Insert html Fetching plain text.
Inserts text at the given cursor using the given format.
Keep the cursor in the buffer.
Quits the keyboard.
Page text.
Called when the prompt started.
Read a line and display the prompt.
Set the state of the continuation prompt.
Set the cursor to the top of the text.
Adjust the scrollbars in the document.
Parse command line options and display metadata.
Copies the specified config file to the specified location.
Create a new profile dir by name.
Find a profile directory by name.
Reads a file and returns its contents.
Create a temporary file and write src to it.
Close the file.
Writes the given data to the file.
Add a new leg handler.
Adds a failure handler.
Handle a pong message.
Returns a batch of random values from a sequence.
Converts a string path to a filename
Displays the elapsed time and the average and est values.
Return the time in seconds between the elapsed avg and est end.
Extract the wininst configuration from the given file.
Remove the cache from the zip directory.
Return the argument with double quote around the string in arg.
Check if dist has conflicts
Set the fetch options in the config file.
Create the user s home directory if it doesn t already exist.
Determine if a file name is an archive file
Create a new heading cell.
Create a new metadata node.
Create a new author node.
Returns True if the given path is a directory and it is writable.
Remove a filename from a string.
Get a filename from a. py file.
Get the user s home directory if possible otherwise return none.
Get the default or user s home directory.
Return the package directory of the input file.
Get the full path of a module.
Returns the number of dependencies of target that are older than target time.
Compute the md5 hash of a file.
Check if a configuration has been changed since the last check.
Update suggestions dictionary.
Get suggestions for an object with a certain size.
Returns the suggestions for the given object.
Return the path relative to the current working directory.
Return a list of objects matching the pattern.
Return the MD5 hash of the file.
Create the pfile and profile it.
report the profile statistics to the given stream
Finalize the operation. Returns the result string if the operation completed successfully or if the operation
Disable the interface for the specified GUI.
Disable Qt4.
Enable the gtk interface
Enables the tk interface for the current gui. If app is none the tk interface is
Enable pyglet.
Calculates the wave since the user doesn t know what to do with the histogram.
Init the sqlite3 database connection.
Executes SQL. Returns a tuple of tuples where the first element is a tuple of the
Get information about a specific session.
Returns the last n rows.
get range by string
Get the name of the hist file in the profile dir.
Returns the session number for a given session name.
Reset the histogram to its initial state.
Get a range of lines from input hist.
Store the output of a particular line.
Write out the cache of the input and output files
Stop the thread and join the history.
get number of cpus
get system per cpu times
Returns a list of disk partitions
get a list of all the process ids
Nice a pair of strings.
Format a list of statements to a list of lines.
Returns a short stack representation of the current stack.
Join a list of regexs into a single string.
Removes the given file if it exists.
Recursively update the md5 hash of a value.
Update the profiles for a given CWL file.
Stop the cluster associated with profile.
try to find cmd in the environment
Print the contents of the system body.
Find code units that match a pattern in the coverage data.
Runs the given function against the given set of source files and report the results to the
Sets the trace to stdout using pdb.
Initialize shell extensions
Run the module s code and update the shell s user ns hidden and shell s user ns
Runs the given list of lines from the shell.
Returns a list of all startup files in the startup dir.
Execute all the files in self. exec files and return the log. debug message.
Runs the given line of the shell.
Run the module in the shell.
Returns the filename of a static file if the static file exists otherwise raises an exception.
Reads data from a file and returns it as a string.
Escape a string.
Generate local static report files.
Copies the static files from the static files list into the report directory.
Writes an HTML document to a file.
Return the hash of a file in the coverage data.
Render and write the index file.
Reads the current coverage status from a pickle file.
Writes the coverage report to a pickle file.
Compare two lists of strings and return True if the elements of the first list are the same
Get a slice of a sequence.
chop a string into chunks of a certain size
Reads the manifest and returns its contents.
Converts a glob pattern to a regular expression.
Does this filename match any of the patterns?
Returns a list of all of the file names in the current platform.
Create a kernel and start channels
Shuts down a kernel by ID
Kills a kernel by ID
Return the kernel with the specified id or raise a key error if the kernel is not found
get the ports of a kernel
Get the notebook associated with a kernel id.
Start a kernel for a notebook. If kernel id is not specified the kernel for the notebook
Shut down a kernel and delete mapping for kernel.
Interrupt a kernel.
Restart a kernel
Create the iopub stream of a kernel.
Create a shell stream for a kernel.
Create a kernel stream for a kernel.
Reset the object to its initial state.
Export a html string to an html file with an image tag. The image tag can be
Fix html by str. find and replace str at offset + num with str + str +
get unique or none
Create a new query includes all term in tokenized terms and search fields.
Perform a text search on the query string.
Builds a greater query for the given date field.
Builds a query with days less than or equal to the specified date field.
Get null or blank query.
Convert fields dict to string case insensitive.
Add an option for the given parser and environment.
Validates that the value of an attribute is of a certain type.
Validates that the given method is a want method of the given class. Returns True if
Rotate the ring around the previous yank.
Returns the websocket url of the request.
Reserialize a reply from a previously serialized message list.
Inject a cookie into the request.
Start the periodic callback if it is not closed.
Stop the background thread and wait for it to finish.
Load the file into self. fobj if self. src is a string. If self.
Returns the index of the current block or the index of the current block.
seek to a given block index.
Edit the src blocks.
Prints the current block at the specified index. If index is none returns print the current block
Prints all src blocks to stdout.
Run a function in a thread.
Return a tuple of lines and index of the line number of the traceback traceback s source code
Return the inspectable lines to inspect at the given position.
Creates an HTML tag with the specified content and progress bar.
Cleans up the controller.
Save a function to the client s history.
Sync the results of a function to the client. Returns the result of the function.
Run the function and spin after the return value of the function.
get the complete list of messages and return them as a string
Get the next message from the queue.
Parse a URL into a dict.
get the root modules of the system
completion for a module
completer for magic run completer
Returns the XML - escaped string representation of the XML attribute.
Configures the plugin.
Writes the error report to the specified stream.
Adds an exception to the errorlist.
Add a failure to the error list.
Add a test s success status and time taken.
Return a random number between num and n - num
Return a random value weighted by the number of elements in the input array.
Register an engine with the graph.
Remove an engine from the queue of stranded tasks.
Handle stranded tasks for a particular engine.
audit the timeout of the depending job
Send a message to the dependents of the specified message and update the dependency graph.
Add a message to the undirected graph.
Submit a task to the scheduler.
Handle the result of a message.
Handle a result message.
Handles a client dependency that was previously added to the dependency graph.
Update the dependency graph.
The state of the log as a string. If self. logfile is none print the string
Write a line to the log file.
Write data to the log file. If kind == str and data is a list of strings
stop logging to the specified logfile. If self. logfile is None then print to stdout.
Create a new worksheet node.
Add an object to the chain.
Add an object to the chain.
Recursively match the given key.
Returns a generator yielding the matches for the given key.
Called when the notebook s directory changes.
Returns a list of notebooks in the notebook directory.
Return a new notebook id.
Delete notebook by notebook id.
Check if notebook with notebook id exists.
Find notebook path by notebook id
Get the absolute path of a file in the notebook by its name.
Get a notebook by its id
Get notebook object by its id.
Save a notebook and return the notebook id
Save notebook with given data.
Save notebook object
Delete notebook by its id
Creates a new notebook and returns its id.
Copies a notebook to a new notebook object with the same metadata as notebook id.
Yield tokens for this token.
Load the default config file.
Return the default interactive shell class.
Parse the command line and warn the user.
Initializes the subapp if it s not already initialized.
Initialize a new interactive shell instance.
Initialize the banner if self. loglevel < = logging. info.
repr the type of an object
Parses a string into a list of strings.
Returns a dict with the name of the trait for the specified class with the specified metadata.
Get the metadata associated with a trait.
Check if value is an instance of self. klass and if it is an instance of self
Return the default value.
Check if this message should be considered to be completed.
Determine whether this object is a task of the given type.
Returns a dict representation of this result.
return the depth of n in the tree
Print a bintree in a human - readable format.
Disambiguates a URL with a domain name.
Return the string representation of the result of the call to reduce.
Validate targets.
Dispatches the message to the monitor handler.
Send a query to the appropriate client.
This method is called when a new information is received. It is called when the new information
Handles the heartbeat failure.
Save a request to the database.
Save a message to the database
Send a request to a specific client.
Unregisters an engine.
Marks the registration of an event in the queue.
Send a request to the server to shutdown the client.
Purges the results of a query.
Extract the content and buffers from a record.
Get the history of a message for a client.
Query the database for a message.
Change the current working directory to newdir.
Decode a completed command to a completed command.
Run a command under the root of the system.
Calls the handler function for the specified message.
Checks if the message is from this session.
Report the contents of the file to the given directory.
Determine the installed version of a package.
Removes all unicode keys from a dict and replaces them with their own unicode values.
Extract the header from a message or header dict.
Check message packers.
Create a message of the specified type.
Signs a message list. Returns the signature of the message list.
send raw message.
recv a multipart message from a socket
Save an svg string to a text file.
Copies the svg string to the clipboard
Render an svg string to an image
Return information about the given fields of an object.
Get the docstring of an object
Recursively gets the source code of an object.
inspect. getargspec returns a tuple of the args varkw func defaults and default values.
Try to find a file path to an object.
Find the source lines of an object s source code.
Return the docstring of an object as a string.
Returns the string representation of the header of the color table.
Print a message and optionally if oname is set print the oname.
Print the definition of an object.
Return a page containing the source code of the given object.
Find the page of a given object and print it.
Format a list of fields into a single string.
do a psearch in a namespace table
Starts a new reactor in a new thread. Returns none if the reactor is not running
Returns a pretty - printed string representation of the document.
Returns the XML representation of the document.
Load all modules in packages.
Invert a dictionary.
Recursively converts Python objects to primitive Python objects.
Returns a list of matplotlib figure objects.
Returns the data of a figure.
Select the figure format.
Find the gui and the backend for the given gui or the given backend if gui is not
Activate the matplotlib backend.
Configure the inline support for the specified backend.
Starts the current thread and returns the trace.
Tells the thread to stop running the application.
Starts a new tracer.
Calls the start tracer function if it is available.
Starts execution of the current thread.
Stop the collectors in the list of collectors.
Pauses execution of the given tracer.
Resumes the execution of the installation trace.
Return the data for the line
Takes a dictionary or list of exceptions and collects them into a list of composite error
Render the traceback of an exception.
Start coverage and warn about unimported source.
Return the canonical file name for this reference.
Returns the source for a given file.
Determine if the given filename should trace with the given frame.
Determine if the log should be logged.
Adds a warning message to self. warnings.
Checks the source of the specified packages. If a match is found then a warning is
Start running the collector if auto data is specified otherwise start running the collector.
Saves the object to disk.
Exclude a regex from the configuration.
Save this harvest data to the data file.
Combine the parallel data with the current data.
Remove the line and arc data from the data list and reset the data list.
Return the analysis of the given Morf.
Create an analysis object and return it.
Create a report of this object s harvest data and write it to a file.
Annotates this object with the values from the specified functions.
Return a string containing the XML report of this object.
Reloads the data from the server.
Finds a command in the process and returns its path.
Runs a command in a child process and returns its exit status code.
Forward read events from a file - like object.
Sends a line to the socket and closes the socket.
Finds a subclass of the specified class and returns it.
Start the process.
Build and return a new instance of the specified listener class.
Start the event loop.
Start the daemonize if pid is not already started. If pid is already started do nothing
Gets wx. py application.
Check if app is in event loop or main loop running.
Start event loop wx
Returns the app Qt4 gui instance if it exists otherwise returns the app
Returns True if app is in event loop otherwise False
Start the Qt4 event loop.
Return a copy of the given canvas view with the given width and height.
Draw a cross on the x axis.
Draw a line between two positions.
Convert an image to an annotated image.
Returns a random uuid. uuid4 or uuid. uuid1 uuid4 uuid. uuid4
Get a unique key from a get function.
Returns the domain name of the given URL.
parse a URL into a dictionary of arguments