convert sina xml to url list
Download a podcast
Download sina files.
Returns the given text formatted with the given colors.
. ENDC )
str Print log message and terminate the program.
str Print log message and terminate program with exit code.
Try to detect operating system.
Return dictionary with player information from ckinfo. xml
get mgtv url and segments list
Return a legitimized version of text.
Download a file from Chromium
Match all patterns in text
Extract query param from url
Parse a host string.
get title from json topic part
Download by course and topic part
Download by course topic part
Check if task is in the queue.
Get the event buffer for a given dag ids
create a connection to the snowflake
Get AWS credentials for connection to snowflake
Get the value of a field in the extra dict if it exists otherwise return default.
Copies the database to a file.
Bulk dump table to a file
Upload the file.
Task state.
Get a new connection to the API.
Get instance details
Create instance on tmaster
Delete instance on compute
Create database on the instance
Delete a database from an instance
Start the sql proxy process.
Stop the sql proxy.
Get the version number from the sql proxy.
Create a new connection and insert it into the session.
Retrieve a connection from the database.
Delete a connection from the database
return sqlproxy runner function
Get the database hook for the connection.
Clean up hook database
Reserve a free TCP port and return it.
Removes the mlengine job id from job id
Get the error code from the error message
Delete all dag runs
Delete all dag task instances
Set all DAGs to paused state
Print queued task stats to console
Check the number of dags in the database match the max runtime
Equivalent of mkdir - p.
Convert a string to a float if possible.
Replace localized value with given timezone.
Make a naive datetime object
A wrapper for dt. datetime that adds the timezone kwarg
get a druid broker connection
Return a requests. Session object for the connection details
Send a HTTP request to a URL and return the result.
check response before raising airflow exception
Send a request and check the response
Context manager to create a SQLAlchemy session and commit and close it.
Drop all tables and drop migrations
Get pretty version of exception message
Parse hql and return records
Return a pandas dataframe from a HQL query
= parameters )
= None )
Get a new cosmos connection
Check if a collection exists in the database
Creates a new collection if it does not exist yet.
does database exists in the databases
Creates a database if it does not exist yet
Delete database.
Delete a collection.
Insert a list of documents
Delete a document.
Get a document by its ID.
Execute an SQL query against a collection and return documents
Get a function from the API.
Create a new function in the given project with the given body
Update a function in the connected region
Upload a zip file to a location.
Delete function in this lab
Yield dep status messages.
( dep ) )
Returns a generator of failure reasons for each failed dependency.
Parse a config file.
Get credentials for the given region.
Get a connection to vertica
Flush buffer and return num bytes
If fileloc points to a zip archive then return the correct path. Otherwise return fileloc unchanged
Construct and return a task instance object from this task.
start the child process
child process
Exit the application gracefully.
start the task
The async part of the dag agent loop.
Start agent in a loop
Check if dag directory has been changed or if dag directory has been changed.
print stats if needed
Remove all nonexistent errors
Report processing stats to statsd.
Set the file paths to be processed.
Wait until all processors are finished
Wait for all processes to end.
Get a connection to the remote host
Creates a transfer job
Get a transfer job from the database.
List transfer jobs
Update a transfer job
Cancel a transfer operation
Pause a transfer operation
Resume a transfer operation
Wait for a job to be completed.
Find tasks that can be rescheduled
Get the number of open slots in the current pool.
Run a shell command and return its output.
Allocate ids to the project
Begin a transaction on the project
Commit a project
Lookup keys in the project
Roll back a transaction
Run query on the project
Get operation by name
Delete an existing operation
Poll the operation until it is done.
Returns the hostname of the airflow node
Get a connection to the API.
Get the template field for a class or function.
Process a role that references a template field.
Dispose sqlalchemy engine
Add paths to sys. path if not present in sys. path
Check if a task id exists in the database.
detect configuration variable
Convert a sqlalchemy object to a dict
Yield successive n - sized chunks from a list
reduce in chunks
Chain tasks up to down num times
Render a log filename.
Get a connection object to the API.
Wait for the operation to complete.
Coerce content into a string.
Get run state and handle airflow execution
Run a pig script and return stdout
Fetches the state of a celery task.
, num = 1
: int num :
Authenticates and builds a connection
Returns the job with the given ID
Wait until a job is done
Creates a new version on the specified model.
Sets the default version for the given model and version name.
Lists versions of a model.
Deletes the specified version of the model.
Creates a model.
get model by name
write items to Amazon DynamoDB in batch format
Import executors modules and register them in sys. modules.
Get the default executor
Get executor instance by its name.
Raise AirflowException on error.
Get a SQLAlchemy connection
Trigger a dag
Delete the dag with the given id.
Get information about a task.
Get all pools
Create a new pool
Create or update container group.
Get state exitcode details.
Get a list of messages for a given instance and name
Get logs for a container.
Delete a container.
Check if a container exists
Construct dict for ingest query
Get the next message from the queue and push it to the context if it exists.
Get task instances in the database.
Get task instance given task id.
Get the previous dagrun of the current job.
Get the previous dagrun for this job.
Verify the integrity of the scheduling object.
jenkins request helper
Convert a Context object to Airflow vars.
Trigger a dag if there is a payload in the context dictionary.
Queries the metric API
Get the dag with the given id.
Kill a list of zombie tasks
Recursively bag dags in the airflow graph.
Processes all the DAG files in the given folder.
Generate a DAGbag report.
Add days to datetime
Filter files in HDFS by regex.
Return True if this is the file we are on.
Clear task instances.
Attempt number.
Get the current state of the task instance
( self, str ) return str
Refreshes the task from the database
Deletes the xcomb data from the database.
Return a unique key for this task.
Returns True if the task has all of its dependents done
Compute the next retry datetime for a task.
True if the job is ready for retry.
Check if the pool is full
Get the dagrun associated with this job.
push a value into the xcom datastore
. raw = raw
Upload the log to the remote and close the object.
Get a connection to the API.
Start an instance.
Get instance template details
Wait for an operation to complete.
Check if a bucket exists
Create bucket on S3.
Check if prefix exists in plist.
List prefixes for a bucket.
List keys within a bucket.
Check if key exists in s3
Get object by key
Reads the given key from the bucket.
Checks if a key exists in a given bucket using a wildcard expression.
Get a key for a wildcard based on the wildcard key.
execute cql in cassandra
Convert type from object to another type
Get a new connection to the API.
Execute spark SQL query
Load plugins from entry points
Check if plugin is valid.
Skip a set of tasks for a given execution date.
Connect to adls file server
Check for the presence of a given file path
Return a list of files and directories in path
Execute the query and return the execution id
Uncompress a compressed file
Executes SQL query against mssql DB.
Build a dictionary of metrics.
Create a cgroup for the given path
Delete the cgroup at the given path.
Make an API call to Databricks.
get salesforce connection
make a query to the db
describe the given object
Get all available fields for an object
Get object from salesforce database
Convert datetime column to timestamp column
Get a mongo collection.
Check if mail has attachments by name.
Get all attachments matching a given name.
Get file and payload from part
put records into queue
Return passing or failing status depending on the schedule.
Sends an email using the backend defined in configuration.
Send email via SMTP.
Convert datetime to utc
Check if a blob exists within a container.
Check if a container has the given prefix
) Upload a string as a blob
Read file from swift container.
Delete a file from a container.
Returns a ftplib. FTP object
Return a list of files in a given directory.
Store file on server
Get the modification time of a file
Executes the webhook command.
get a file service connection
) Check if a directory exists
( kwargs )
= None )
) Creates a directory share.
) Loads a file.
) Upload a file from a string
Get a connection to the API.
Download a blob from S3
Upload a file to a bucket.
Check if an object exists on s3
Check object is updated after ts
Delete a blob from a bucket.
Get object size in bucket
Get a CRC32C of an object in a bucket.
Get MD5 hash of an object.
Determine if the secondary training status changed between the current job description and the prev job description
Get status message for secondary training
tar and s3 upload
Configure s3 resources
Check if s3 url is valid
create a boto3 logging client
Run dataflow hook.
Run migrations in offline mode.
Run migrations in online mode.
Delete instance.
Delete a table from a project.
Update the nodes of a cluster.
Prepare the hive cli command
Turn hiveconf dict into a list of strings.
Does the specified table exists in the currently connected database?
get a hive connection
Execute a HQL query and return the results as a dict
Execute a HQL query and return the result as a dict
Query and return result as pandas dataframe
Return a connection to the API.
Get Airflow API endpoint.
Bind parameters to operation.
Escape a string so that it can be used in a LIKE clause
Cast a field to the given type
Validate a value against an expected type.
Return a connection object to the database
Build the service object.
Check if a table exists in a dataset
Cancel the running job.
Delete a table from GCS
Update or Insert a table.
Get dataset by id.
Execute a SQL operation.
) return ''
Get the next page from the buffer and return it.
Executes the sql on the postgres DB.
Make intermediate directories on the remote machine.
Run a command and read the task logs.
remove the. cfg file
Main entry point for the script.
build html header
build jschart string
Create a x axis and store it in self. axislist
Create a new y - axis
Get a connection to the database.
Get the last dagrun for a given dag.
Send a message to AWS SQS
Send a JSON response.
Open a file or zipfile depending on if it is zipped.
Make a cache key from request args and kwargs
Get a connection to the API.
Get API key from API connection string.
Get HTTP session for current request
Execute a request against the API.
build opsgenie payload
( self )
Returns a connection to the Redis server if not already connected.
Run a query and return the execution id.
Check query status
Poll query status until it is successful or up to max tries
Get a pysftp connection
Handle rate limit exception
Get a table from the database.
Return the location of the table name in the database.
Get cluster status
Delete a cluster.
Get cluster snapshots
Restore from a snapshot of a cluster
Create a snapshot of a cluster
Call Slack Web API method
Creates a job flow
Filter a list of dicts by filesize
Remove files with ignored extensions from a list
Executes the aggregate aggregate and find hook.
Get a pool by name.
Creates a pool with specified name and number of slots.
Delete a pool.
Convert dict to proto dict.
Wait for an operation to complete.
Get operation details.
Append a label to cluster
Get the webhook endpoint for the webhook webhook.
build discord payload
Run the Discord webhook
Encrypt plaintext with the specified key.
Get a connection to the server.
Write the log to S3
Return a dictionary of environment variables for the worker node.
Get the worker secrets from kubeconfig.
Build security context from worker config
Retrieve extra QDS commands from the web
start the execution of the process
Check if the airflow process is finished.
= True )
Update the database with import errors.
Processes the task instances and adds them to the queue
Return a dict of concurrency dags and tasks in the specified states
Change the state of executable task instances.
enqueue task instances with queued state
Change the state of queued tasks if there are any
executor events processing
Update the counters of the status
Manage the current executor state.
Get a dagrun for the given execution date
Get a list of task instances for a dag run.
Set all unfinished dag runs to failed
This function is called when a task is completed successfully.
Returns the client to use for the given project id.
Get instance information by ID.
Delete an instance.
Delete a database from an instance.
Poke the hook and determine if the mail attachment exists.
Prepare additional parameters for a web request.
Get a connection to the Cassandra cluster
Check if a table exists in the current keyspace
Check if a record exists in a keyspace
Build and return a command to track driver status
Submit spark application.
Iterate over spark log and extract application id from line.
Analyse the spark status log.
Get the task runner for the job.
Wait for a task to end.
Execute the query in mysql and return the cursor
Configure csv file.
Upload schema file locally
return schema as a dict
Maps a MySQL type to a field name.
Deserialize extra data into python dictionary
Scale an array of time seconds to the given unit.
Return n days ago
Initialize role if not exists.
Delete role from the database
Get user roles
Get all permissions and views
Check if user has any of the given roles
Check if user has permission
Delete all permissions
Merge a permission with a view menu.
Update admin permissions
create perm vm for all dag
Returns a fernet instance using the configured fernet module.
Poke a hook to check for partition check.
Poke from SQS queue.
get a hdfs connection
Get web hdfs connection
Check if a path exists
get a connection from the pool
Get the uri for the connection.
Convert datetime. date to dict
Convert time to dict.
Returns a redis connection
get a pandas dataframe from a sql query
Execute a SQL query or list of SQL statements.
Set autocommit on a connection.
Serialize a cell into a string.
Check scheduler health
Returns a cloudant session
execute Slack webhook command
Get the credentials of the service account.
Authorize a Google API request.
] [ cls ]
Prepares a list of commands to execute
Normalize a tensor by a mean and standard deviation
Crop the image.
flips the image horizontally
Apply perspective interpolation to the given PIL image.
flips the image vertically
Adjusts the brightness of an image.
Adjust contrast of image using PIL
Adjust saturation of PIL image.
Converts an image to grayscale using PIL
Save tensor to image file.
Find classes in a directory and its subdirectories.
Read a info file and return a torch. long tensor of the labels
Read matches file.
Calculate the accuracy
Download file from url to root.
List all directories under a root.
List files in a directory.
Download file from Google Drive
get random crop parameters
Get random start and end points and endpoints for a waveform.
get random parameters for an image
Generate random transformations
Get the parameters for an angle translation scale shear and img size
Download the file from the URL to the root.
download raw files and save to processed folder
Get current theme from request args or preferences
Get list of available themes
Extract the answer and conversion rate from the response
Deprecated see tfd. normal.
Calculate the joint log probability of the treatment given eight schools.
Creates a custom random variable object
max reduction op.
Compute the size of an event shape.
Eval all one hot function with batch shape.
Deserialize given identifier and return a tensor function
Params size computation op.
Build a pipeline for a single batch of input features and labels.
Check if map values are valid.
Calls a transition function with arguments.
Calls a transition function and accumulates its gradients.
Flatten and broadcast from structure to to structure.
Single step of a leapfrog simulation.
Step function for Metropolis hastings.
Create an instance of TfpLayers from a dict.
Converts a value into a tensor.
expand a tensor to event rank
Concatenate predictions with softmax function.
Ensure tensorflow is installed.
Logistic regression function.
covertype function.
Make tensor with positive axis.
Squeeze x along axis by num
Z op of the norm.
Inverse of scale.
semilocal linear trend transition matrix.
semilocal linear trend transition noise
Find prime numbers less than some number
Machine translation of numpy dtype to eps.
hager zhang line search
Prints the values of a tensor.
Check quadrature of a parameter if it passes validation.
Compute the interpolated location along the grid.
Interpolate across a grid by a scale factor.
Concatenate list of vectors.
Calculate the log of a matrix.
log matrix vector num = 1
matrix product of vector and matrix ms
Extracts the log probability for each state.
Choose a random direction for a batch.
call fn with fn arg list if fn result is none call fn with fn arg list if fn
Builds a training posterior for the given parameter.
Calculates the mean and variance of masked time series.
Returns the initial value of a time series that is masked by the given mask.
Returns a mixture of normal and posterior draws.
Returns the range of the range inclusive.
Replace distribution names with leaf names
Builds the model and returns the model as a tuple
Calculate the entropy of the distribution.
Summarize sequences of images.
Visualize reconstruction.
Generates a summary of a qualitative analysis.
Summarize the distribution params.
Summarize mean across nats and bits.
( inputs ) )
Create a zero state for the current batch.
Call convolution on inputs with num faces.
Sample from the prior distribution.
The batch shape of the priors.
Get the batch shape tensor for all priors.
Calculates the size of a vector or matrix.
Returns the indices that would sort an array.
Sort an array along an axis.
Inverse complementary trigonometric norm function.
Logarithmic asymptotic series helper function
Inverse of regularizer error function.
Compute joint log probability of text messages.
Indicates whether points correspond to a marginal distribution.
Get the index points
Outer squared difference between two elements.
Calculate the value and batch jacobian for the given function and input values.
Split the covariance matrix into marginals based on block sizes.
Returns tensor text in numpy compatible format.
Returns the sample shape as a tensor tensor shape.
The sample shape as a tensor.
Sample value from the distribution
Returns the numpy representation of the underlying tensor.
Uniform norm op.
log normalization op.
Find the common dtype among a list of tensors.
Broadcast a tensor to multiple tensors.
PDF at peak
Calculate the effective sample size for a single state.
Calculate the potential scale reduction potential for a single state.
Calculate the size along an axis.
If secondary arg is a list of states make a list of secondary arg. Otherwise return secondary arg
Remove a field from the vector.
Merge two values.
Convert a tuple into a tuple recursively.
Find the inputs of a function.
VGG convolutional graph with strided convolutional layers.
has u turn?
Solve the optimization problem by leapfrog
Calculates the joint log probability given current target log probability and momentum.
Random bernoulli tensor with given shape and probabilities.
Convert a nested structure to a tensor.
Get tensor like attributes as a dict.
Makes a mixture prior for the given latent size and components.
Pack images into rows and cols.
Download filename from URL to directory.
call volatility fn with gradients
Concatenate volatility tensors if necessary.
Call fn with input x reshaped to match sample shape.
Call a function and reshape it to the given shape.
Derivative of the negative binomial matrix.
Sample from the distributions of the tree.
Get the topics string for each topic.
Add control dependencies to the ema codebook.
Save imgs to a file.
Convert dtype to numpy dtype.
Get the base dtype for a tf dtype.
Return True if dtype is a bool type.
Return True if dtype is a complex NumPy type.
Get the maximum value of a dtype.
Get the name of a dtype object.
Get the size of a dtype in bytes
Assert that all items have the same base type
accept the worst value of a function at reflected index
Returns a function that when called will expand the simplex and objective at face centroid by
Shrink towards best vertex using multiple objective functions
Replace at index.
simplex and objective at initial simplex
Prepare args for simplex_single and simplex_multi.
Builds a mnist data object with the given number of examples
Returns the current Keras configuration as a dict.
Creates a new TensorFlow graph from a given dict.
Matrix multiplication op.
Helper function for standard deviations.
Returns cond if pred is not none else cond.
Compute the log probability of the current state.
Finalize prob for one fiber.
Rotate dimensions if necessary.
Validate a batch normalization layer.
Given a distribution and an iterable of event ndims and a list of slices return a dictionary
Apply a single step to the distribution.
Apply slice sequence to the distribution
Returns the number of columns in a tensor.
Get static predicate value for a TF or tensor.
Compute the rank of a shape tensor fn.
Check if a scale is a diagonal scale.
Pad mixture and categorical dimensions in x.
Assert that x is a nonnegative integer.
Tries to get the tensor statically and if not tries to convert it to numpy.
Is this dtype known unsigned by dtype?
Check if a tensor has a signed dtype.
Returns the largest integer of the given dtype.
Return the smallest integer in the given dtype.
Check whether a dtype is integer like by dtype.
Generate new seed value
Dimensionality reduction op.
Validate rightmost transposed ndims.
Validate the permutation.
Returns the shape of the event tensor.
Returns the dimensions of x.
Build a backward pass step.
Kolmogorov - Smirnoff transition method
Propagate mean along the tensor.
Propagate covariance matrix to the input dist
Joint means of the latent space
Compute joint covariances from the prior and the latent covariances.
Converts latent means and covs to observations.
Log - normalization of the tensor.
). name
Rotate samples by num events.
Generate a sample of num samples from a 3d stream.
Returns a copy of the given function
Remove keys from a dict where the value is val
recursively replace dict for pretty dict
Sample from the distribution with given z.
Check if x is a namedtuple
Recursively choose the top - level object based on the fields in accepted that are not in rejected
Call fn with fn arg list and check its result.
Check if shape is valid.
| tf. reduce any | tf. reduce any
Update the position of an objective with a gradient at a given position.
Check if the objective and gradient have converged
broadcast a value to a tensor
harmonic number of a tensor.
Get field from kernel results
Variance scale term in the computational basis.
Apply a cond cond on a tensor and a function.
Check if a tensor is finite.
Return the results of the initialisation step.
ResNet resnet layer.
Deep exponential family.
Initializes the sampler parameters.
Returns the kl function associated with type a and type b.
Reads and decodes an image file into a TensorFlow image.
Download and unzip sprites.
Create a character from skin top and pants values.
Create a sequence of frames from a character and action metadata.
Create a random sequence.
Flatten a list of summand kernels into a single list.
Flatten a multiplicand list of kernels into a single list.
Build train and test dataset
Insert dimensions back into a tensor.
Make a static axis.
Sort a tensor by top k.
Raise value error if ndims is not the same as expected.
Performs a batch gather with broadcast.
Broadcasts event and samples to num event and samples.
Control inputs for inv hessian.
Transpose matrix in batch tensors.
Sum rightmost dimensions of x preserving shape.
Get common dtype if all elements in list are none.
Returns the initial state of the BFGS algorithm.
PSD Masking op.
Creates the initial args for a function call.
Find the best value in the population given a tensor.
Check convergence of function with position tolerance.
Ensure tensor is a list.
Converts tol to a tensor. If validate is True validates it and returns the tol
Builds a pipeline of images for training.
Plot the generated images.
Builds a string from a list of productions
Call the LSTM with the input latent code.
Multivariate normal diagonal term.
Returns the hat integral of x.
Compute the inverse of the hat integral.
LU solve a set of assertions
Compute the block diagonal of sp a.
Validate a matrix.
Generate a list of slices to be used by combine.
Generate a mask with num blocks.
Create a numpy array of the specified order
( degrees ) for num in degrees
Zero dimensional multivariate normal diagonal matrix
Params to weights function
Flatten a model with this builder
Builds a transition matrix for each seasonal event.
Build the seasonal transition noise.
Builds a constrained seasonal transition noise.
Validate observation data.
Add column to the current row
Set checkpoint and create path if not exists.
set gradclip const on self. value
Optimize the model for later execution
Set train summary
. value set summary
Set train data from a training RDD
Get all the texts from news20.
Get glove w2v data.
Compile the model.
Evaluate the model on a batch of data
Predict the class of x.
Get MNIST dataset as numpy record.
Preprocess mnist dataset
Get the end trigger.
Validate the model using the given optimizer
Returns the current value of the field
Call java functions.
Convert a Spark RDD to a Java object.
Convert Python object to Java object.
Get activation function by name.
Return the label of the array.
Read a parquet file from the given path.
Write Parquet file to HDFS
Get the image from the current frame
Return a list of tensors of the image
Return the label of the tensor.
Get the predict values of the table.
Predict value of x for each example in the batch
transform this column
Save keras definition to json file.
Build keras model with borders and activations.
predict class distributed data
Get the weights for the given value
Toggle training or evaluation of model.
Load a model from a torch file.
Load a keras object from json or hdf5 files.
Create a criterion for the jcriterion
Load a model from a JSON hdf5 file
Load the IMDB dataset.
Build a Keras model with num embeddings.
Get the shape of the input
return the output shape
Read data from mnist.
Download and extract data sets from movielens. csv.
Return the full classpath for bigdl
Spark below 2. 2
Export checkpoint to a dict.
Save a dictionary of tensors to a JSON file.
Expand a tiled set of units along a given axis
Simple attention layer with softmax activations.
Applies an attention layer on the given variables.
Get agent log file.
Write utterance to the log file.
Compute a summary of gradient updates for each variable.
read data by config
Send an agent a message or a list of messages.
Convert labels into one - hot vectors.
converts proba to onehot
Build a config session from the current config.
Loads the specified load path into the network
Get the momentum variable for the current optimizer
Update learning rate and momentum variables
F1 score function that rounds the predicted value
Process a word into a list of words.
Dropout layer with variational dropout.
Builds the KL classifier.
Creates a basic LSTM network from the word outputs
Transforms and trains on a batch of data
Predict on a batch.
Given a list of tokens make a vector of tokens.
Turn a list of tags into a vector
BLEU score of predicted and true labels
Verify whether the given url conforms to the sc configuration file format
Extract certificates from certs txt
Verify the signature for the request.
Verifies the certificate chain and returns the amazon cert.
Returns controls in JSON format
Returns ms bot framework representation of controls
Returns the telegram of all controls.
Return controls as a list of alexa strings.
Calculates the accuracy of a prediction
Calculate accuracy of predicted and true samples.
Read a file into a dictionary.
Create a new bot agent with the given characteristics.
Converts x to one hot encoding.
Convert metrics to a prettified format.
Loads the variables from a previously saved checkpoint.
Saves the current model to disk.
Get the train op given the loss and learning rate.
Search for word in the D trie
Start timer.
Dispatch a request.
Calls the stateful agent with the given utterance.
Generate response from request
Handle an intent request
Launches the app and returns the JSON response
Return a response if the request is unsupported
p. text ( str )
convert losses to ppl in emo format
Builds a chainer model
Interactively interact with a model.
Predict on a file or stream.
Read infile and return answer.
Load a function from a module by name
get metric by name
Get decay type from string label
Get the value of the best match
Encode tokens to embedding vectors.
Read requirements from requirements file.
Calculate the sklearn log loss
show details for item data
Create an ecommerce agent from a trained skill.
Run the server
Download source url to dest file path.
Untar a tar file at the given path.
Update editable dict with values from editing dict recursively
Set MD5 for path in URL.
Add a query parameter to a URL.
Return Alexa quest response.
Serialises the robot control as JSON.
add ms bot framework
Serialises and returns control in JSON format
Return the ms bot framework
Compute the team f1 score.
Calculates the recall at a given k examples.
Check if GPU is available.
Recursively parse a config property.
Parse a config from a JSON or YAML file.
Expand ~ and ~user constructs.
Runs the thread.
delete a conversation if exists
Periodic refresh of expired certificates.
Verify the request.
Handle a request.
load class from str
Get model class by name from registry
get glm from h2o api
make a GLM from a model and coefficients
Populate object from key - value pairs.
Shutdown the h2o API.
Check if the local api server is running
List all available jobs
List all available timezones
Fill this instance with properties from another h2ocluster.
Stabilizes the execution of a function.
Return a summary of a column.
Delete a key from the current frame.
Get list of model builders
validate the parameters of a trained model
compute model metrics from frames
delete a model by key
Run number of EC2 instances
Terminate the given instances
Stop the given instances
Start the given instances
Reboot the given instances
wait for ssh connections to appear
Get the full name of a function by inspecting its module or its method.
Return the signature of the function with its arguments as a string
Wrap text at specified length
Poll the job and resolve the model json.
Train the model with the given data
Get the parameters of the object
Handler for all signals
delete the output dir if exists
remove rsandbox from filesystem
Scrape port from stdout.
Scrape cloud size from stdout.
stop a running process
Stop all nodes and client nodes
Get IP of node.
Get node port
Determine the size of the vector.
h2o mean absolute error
h2o mean squared error equation
h2o - > median absolute error
Calculate the explained variance score
Check that a variable is of a certain type
If v does not match regex raise AssertionError.
Raises an AssertionError if v does not satisfy cond.
Check if a variable matches a type.
Get type name.
Check if a variable is of the correct type
Check if var is in enum
Returns the configuration from the instance
Read configuration from one or more candidate log files
Yield all absolute paths to all candidate log files.
Store model progress
Recalculate model parameters
Estimate the completion time for the next poll.
guess the next poll interval
Compute progress at a given time
Get the time at which x progress is
Write text to stdout.
Compute the width and height of the widgets.
Get current size of terminal
Set the encoding of the text
Create a string from the given frame
Flushes cache and redraws frame
Return the type of column in the current frame
Print the summary
print description of the table
Return the first rows and columns of a DataFrame
Multiply a matrix element - wise
Return a list of lists of levels in the expression
Get the number of levels in the tree
Set the level of the expression.
Set the levels of the expression
Rename one or more columns.
Set the names of the columns in the expression
Change the name of a column in the frame
Check if item is in self.
Compute the modulo of a column expression.
Create stratified column with n folds
Print the structure of the QR Code as a string.
Remove column i and return it as an expression
Concatenates multiple pandas objects along an axis
Create a copy of the frame with the same columns and types as the original expr
Rebind a frame or list of frame
Group elements by a field or by a constant.
Fill missing values with NaNs
( y ) )
Insert missing values in the current frame.
Convert to asfactor expression
Split a string by a pattern
Return a new expr with the set lstriped
Entropy expression of the matrix.
Returns the number of valid substrings of path to words
Generate a table name from the table name.
Substrate string by pattern and replacement
Convert to uppercase
Return a new expression where the na value is omitted
compute difflagate 1 of the column
Create an isna expression
Create minute expression
Return a string of the form x - num if seed is None else x + num if seed
Apply a function along an axis
Parse a text string and return a list of Python code objects.
Parses a file and returns a Python code object.
move cursor by drow and dcol
Get the next token and unparse it.
get the centers of the cluster
get the std of the centers
Send a HTTP request to a Todoist API endpoint.
Check the version of the cluster
Import paths lazily.
Parse a raw frame and create a Frame object.
Create a deep copy of the DataFrame at the given xid
get model by id
Returns a grid class based on the given grid id
) [ 0 ]
Download pojo to path
Download csv file from h2o frame id
Call a demo function
Attempts to load a dataset from disk.
Make metrics API from predicted and actual
Upload a file to the minion
Check if frame id is valid
Get the human readable bytes from the size.
Adjust a slice so that it fits in the total.
and s. step == 1 )
Wait for job to finish.
returns the deep features for all models
Print the model summary
Display the hyperparameters of the metric family
Return hyperparameter values for a given hyperparameter
Get hyperparameters as a dict
Return the projection of archetypes for the given test data
Generate a scree plot from the model json.
Translates a name from camel case to English.
Dedent text by ind number of spaces
extract run into a text file
request a session id and close the session
Get the session id callable.
Start logging to a file or STDOUT.
Prepare data to be sent to the client.
Prepare the file payload
transaction starts logging
end a transaction logs the transaction and the response
write a message to the logging destination
prints a message to stdout if verbose is True
return automl dict
Download a pojo from H2O.
download a mojo from the server
Fit the model with the given data.
Transform input x with means and stds.
Transform data by the means + standard deviation
Extract true string from a string
find node name
find build timeout in each line
function to find build failure for each line
a function to find build id and remove it from list
extract jenkins url and view name
grab java message from a file
save dict to pickle pickle and save dict to file
update the summary text file
write file to a file handle
Write java message to file.
load java messages to ignore
Normalizes an enum constant.
find synonyms for a word
Execute the job and wait for it to finish
Writes the Java representation of the Java entity to the specified path.
Implement the H2O frame fit method
Return a dictionary of default parameters for the given command
get actual parameters
Returns deep features of the given layer
return the history of the model score history
Display the current status of the job
return the variance of the model
Returns the residual degrees of freedom
get coefs of the experiment
Download a pojo from H2O.
Download the mojo of the given model if it exists.
Save model details to disk.
Check that the actual and predicted targets are the same
get cross validation models
Wait for a keypress from the user.
convert to pandas data frame
prints the table
Attempt to find a jar in the current directory.
Yield paths of the jar file and its backend.
CSV writer factory for CADA format
Convert relative file path to absolute URI
Return a list of module uris in self. root path.
Write API documentation to a directory.
str ]
load dictionary with java messages
add a new message
save dict to pickle
print a dictionary of java messages
Parse arguments.
usage ( )
Locate all files in a directory and its subdirectories.
Look for magic spelling in file.
untokenizes a text file and normalizes it
Transform data to str in PyBEL.
add failed runs to summary dict
extract intermittens and save to summary csv
Plot the time series.
Check if H2O API is available.
trim data to a given month
Return a dictionary mapping endpoint names to their respective endpoints.
Update the current site.
Returns json with default data
Comment on a user
Get login and password from the secret file.
like the given user id
like the given hashtag
Check if user is not a bot
read a list from a file
Schedule the message to run at the given time.
defer message to live
Guess the service name and type from a spec path.
Returns the full uri for the given request.
Create a requests. Connection object for the given request
Perform a request and return the response
Get the authorization server from the credentials.
Validate uri and return netloc
Get CLI profile
Open a URL in the browser.
set timeouts for http request
Set a request header.
Get all response headers.
Send a request to the server
get http status code
Get status text.
Get response body
set ssl client certificate
Send a PUT request to the given URI.
Put header to request.
Send http request.
Get response from request
Get the id from the name of the module.
Returns the serialization name for the given element name.
Get the properties of a metadata entry node
Get children of a node given a path
find namespaces from child nodes
Converts a XML document to a namespace.
Returns a region instance from XML string.
Convert a XML string to a availability response.
Convert xml to metrics object
Update the kb with the given id
build a package from a specific pull request
Replaces or inserts a word alteration.
) Get storage account properties.
= service )
Regenerate storage account keys.
Delete a storage account for a service.
Check availability of a storage account.
Get the properties of a specific hosted service.
Delete a service.
Delete a service deployment.
Swaps an existing deployment on the service.
Update the status of a deployment.
Walk upgrade domain
Reboot a role instance.
Delete one or more role instances.
Check availability of a given hosted service.
List the certificates associated with a service.
Get a service certificate.
Add a certificate to a service.
Delete a service certificate.
Get the management certificate of the subscription.
Add a management certificate to the subscription.
Delete a management certificate.
Get the properties of an affinity group.
Create a new affinity group.
Delete an affinity group.
Get a list of all subscriptions operations for the current account.
Delete a reserved ip address.
Associate a reserved ip address with a service.
Disassociate a reserved IP address to a service.
get reserved ip by name
= True ) Get a role.
Delete a role from a service.
Start a role instance in a deployment.
Start one or more roles for a service in a deployment.
Restart a role in a deployment.
Add a DNS server to a service.
Updates a DNS server.
Delete a DNS server.
List resource extension versions for a publisher and extension name.
Unreplicate a vm image.
Share the given VM image name with the given permission.
Delete the image with the given name.
List all images in the inventory.
Delete the image with given name.
Get a data disk.
Delete a data disk from a service.
Updates the disk with the provided attributes.
Delete the specified disk.
Build receiver object from this builder instance.
Create a service from a connection string.
Get a list of subscriptions for a given topic
Parse asynchronous operation result from HTTP response.
Perform a GET request
Perform a PUT request
Get the status of a request.
Add the X - MS version header to the request.
build travis package
get all regions of the account
list all namespaces in the account
Get a namespace by name.
Creates a namespace in the given region.
Delete a namespace by name
Check the availability of a namespace name.
Get a list of all topics in the account.
Get a list of all notification hubs for the specified tenant.
Get a list of all relays for the specified instance.
Get metrics rollups for a queue.
Get metrics rollups for a topic.
Get metrics rollups for a hub.
Get metrics rollups for a relay.
Create a new environment file using the builder.
Create a new virtual environment and install packages.
Create a new SQL Server.
Set the admin password for a server.
list all quotas for server name.
Delete a firewall rule.
Get a list of firewall rules for a server.
Get a list of all objectives for a server.
( name ) ) Delete a database
Get a list of all databases for a service.
Get session state from management interface
Set session state
Validate challenge string.
An error handler function
Create queue on the Azure service bus.
Delete queue by name.
Get a queue by name
Create a topic with given name.
Get topic by topic name
Create a new rule for the given subscription.
Get a rule from the service bus.
list all rules for a given topic and subscription
Creates a subscription with given subscription name associated with the topic.
Get a subscription by topic and subscription name
List all subscriptions for a given topic
Send a message to the service bus.
Unlock a previously locked subscription
Send multiple messages to queue
Unlock a queue message
Receive a message from the queue.
Receive a message from the broker for a specific subscription
Create an event hub.
Updates the event hub with the given name.
get event hub by name
Send an event to the hub
Update service bus header
Get authorization string.
Check if token is expired
Get the authentication token for the specified host and path.
Update request uri and query
Delete the message from Azure Service Bus
Unlock queue or subscription
Renew lock on queue or topic.
Add headers to the request
Return the message body as a dictionary.
general error handler - print response body and raise azure http error
Check for redirect and attempt authentication
Change the current profile to use given profile
Delete a queue
Delete a topic
Create an instance from a database connection string.
Get the properties from the service bus
Check if the lock has expired.
Process the output of a command.
Task collection thread handler
Build config with package name and num.
Create a Message object from a response body
converts an etree element to a rule object
Converts an Azure Service Bus XML element to a queue resource.
Convert an etree element to topic.
Converts an etree element to a subscription object.
Parse an XML response from the Enums API.
Get properties of an entity feed element
Get a list of all queues
List all topics
= website )
Delete a website from the DCNM.
Updates a website.
Restart a website in a webspace
Get historical usage metrics for this webspace and website.
= True ) Get metric definitions.
Return the publish profile as XML.
= True )
Create a cloud service.
Check job collection name.
Get a job collection.
Cancel scheduled messages
Reestablish connection with server.
Get certificate from settings. xml
restore cookies from cache
Calculate the width of a terminal column.
Cut terminal prefix if it is longer than max
print text inplace
format filesize to human readable filesize
Formats a time value in human readable format
Create a status line
Print progress bar.
Yield numbers of segments available for this period
Return a generator for segments based on template or lists.
or self. timeout
Add a segment to the queue.
Queue a value in a queue
Get pv params.
Extract nonce from redirect URL
Find vpid by url
Deserialize JSON data and validate it with schema.
Parse XML string and validate with given schema.
Parse a query string and validate its schema.
Search for a key in a dict recursively
iterate tags in html
Determine the json encoding of the sample
Return a JSON object from the response res.
) from res
Parse cookies from a response.
Parse response headers.
Parse query params from cookies
Get the formatted message.
log record wrapper.
Login to Tahoma API.
Load a plugin from a given directory.
Update querystring of url with qsd
Iterate over audio and video tags in chunks.
Generator for all required arguments of a key.
Check if output file exists
Create output object.
create and return http server
Serve HTTP requests forever.
Outputs a stream to a file or STDOUT.
Open a stream and prebuffer the contents of the stream.
Output data from a stream.
Read chunk size bytes from a stream.
Handle a stream.
Fetch streams from plugin.
Fetch streams from plugin and retry if necessary.
Resolve stream name from name of a stream or synonyms
Print list of available plugins
Authenticate with Twitter via OAuth
Load plugins in a list of directories
Set up the http session
Sets up the plugins
Log the current Python and HTTP versions.
Extract stream id from text
Return iframe if found in text.
Get a value from the options dict
Sets the value of a plugin option.
Get plugin option.
Resolve a URL using the plugins.
import plugins from a given path
Convert a value string to a number of hours and minutes
Find a player s url using regular expressions
Parse M3u8 data and return a DOM tree.
Return player name that is supported by cmd
Extract stream id from HTML
Extract stream info from HTML stream tag.
login with username and password
) return self
Makes an API call to the entrypoint
Start a session.
Get info about a media
Create and return a new plugin instance
formatter for printing chars
Read n bytes from the stream
Get the value of the bit in the code as a string.
Get the explanation of the code.
Set decode table
Set length table and switch to prefix.
Read next symbol from stream.
The explanation of the bit.
Get the value of a given index.
Calculate the span of the bit in a given index
Get the value and number for a given index.
The mnemonic for the given symbol at the given index
Returns the mnemonic for a given index
Compile the actions table into a list of actions.
) ( w )
Make a hex data string from bit position pos.
Read and store metablock length.
Returns True if stream is uncompressed False otherwise.
Set the block type and block count for the current block
Modified text tranform function.
Read prefix array.
Patch a hidden function.
Add virtual columns for velocity between two points.
vaex. py
Open and concatenate many files.
samp with vaex. samp. single table
- > dataset
) from numpy arrays
Load DataFrame from csv file.
Return a server instance for the given URL.
\ zeldovich instance.
Concatenate a series of DFs
Virtual range with default step and dtype
Open a file and add it to the library
Evaluate the expression on the dataset.
Get the set of variables dependent on this selection
Sort the pairs in numerical order.
wait for the plotting thread to finish
Use os module to open file with the same name as the document
Context manager to open and close a file.
Split a list of arrays into masked arrays
Calculate the median of a histogram expression.
Plot the dataset as a jupyter notebook
Plot the DataFrame in 3d.
Get the dtype of the column at num given expression.
Get the path to the private directory of the server. If create is True the private directory will
Remove the virtual metadata file associated with this bundle
write virtual meta information to the private dir if it does not exist
Write meta information to file.
Set the variable expression in the tax and benefit system.
Evaluate a variable in the context of the template
Evaluate a selection mask.
Converts the table to a dict
Create a copy of the table
Return the table as a string of arrow tables.
Export this table to an astropy table.
Add a column to the index
Rename a column
Add virtual columns from cartesian to polar coordinates
Add virtual columns for cartesian velocities to the current matrix.
Add virtual columns for azimuth vr and vazimuth to cartesian space
Add virtual columns to the problem
Adds virtual columns for spherical data
Add virtual columns for cartesian data to the model
Add a virtual column to the database
Delete virtual column by name
Add a new variable to the database
Delete a variable from the model
( num or 0 ) ] tail
Print the table header and tail
i1 i2 Display a table
Set current row to value
Trims the filtered data and replaces the columns with their values
Returns a filtered subset of columns
Extract portion of string
undo a selection
Redo the last selection.
True if the current selection can be Redoed
select a rectangle
Selects circles within a rectangular region
add a new selection
Find a valid name for the given initial name.
Displays the graph in graphviz format.
Add a column to categorize
Encode ordinals for the given column.
Returns a python object with the table data
Length of the selection or mask.
Horizontally stack a table on top of another table.
Concatenate two data frames
Add a column to the dataframe. The number of rows added is determined by the active fraction
Patch a function in the dataframe.
Fill missing values in a NumPy array
Convert an array to a string if the number of elements is a multiple of num
Convert to recarray.
Store properties to a file.
Write comment to file.
Write a property to a file.
universal newlines generator.
Show current python version and dependencies
Deprecated keyword argument rename
Set the lib to use for FFT
extract tempo and beat times from a CDSTAR file
Adjusts the pitch tuning of a WAV file.
Convert Hz to mels
Convert mels to hz
Generate a list of frequencies for a FFT
Fourier Transform for frequency domain waveform filter
Trim stack of cqt resp to n bins
Compute the response of a CQT
count of early downsampling
Downsampling by applying early downsampling.
Generates a random transition matrix
Set the current image
Make sure axes is of type axes
Scale the axes either by a string threshold or y threshold
Calculate the frequency domain of a frequency spectrum using the FFT
Calculate the coordinates of a frequency domain melastic with the Hilbert space
Calculate the frequency domain of a note at a given octave.
Return an array of coordinates for an octave chroma
Generate a time from n frames
Stretch a time series using vocoder of a stft strain
hpss beats using librosa.
nn filter helper
Returns the bandwidth of the given window
Fill a sequence with a window sample waveform.
Calculate the Jaccard distance between two elements.
Find the best interval that overlaps the query
Match two intervals.
Read audio data from a.wav file and return as NumPy array.
Convert audio waveform to mono
Get all files in a directory matching a list of extensions
Stretches a waveform using librosa
Process command line arguments
hpss librosa demo.
A beat tracker for a given period of fft res
Calculate the beat of an onset envelope for a given period
Calculate backlink and cumscore for a given period and tightness.
Returns the index of the last beat
Detect onsets using librosa library
Checks if x is a valid integer ; if not raises an error.
Read image from vcap.
get image with given id
read cvt into a directory and write to frames
Write a progress bar to stdout for a list of tasks
Flip a 1D or 2D image
imrotate image using cv2. warp affine transform
Clip an array of bounding boxes based on the image shape
Scale a set of bboxes
Impadify an image to a specified shape by adding a specified number of zeros to the end
impad to multiples of divisor
Scales size to new dimensions
Resize image with cv2 module
Like imresize but with a different resolution.
Register a handler for a set of file formats.
Get priority of a priority value
Dequantize an array to a specified number of levels.
Display image with transparent color
Dequantize flow.
Loads a checkpoint from a file.
convert weights to cpu
Save a checkpoint to disk.
Initialize the optimizer
create a logger for this rank
Returns the current learning rate for the current optimizer
Register a hook.
Run a workflow.
Register build optimizer and checkpoint hooks.
Cuts video from in file to out file.
Concat video files and convert to audio files
Return a list of items from a file.
Load a dictionary from a file.
3x3 convolution with padding.
Read image data from opencv
Read image from byte string.
Write image to OpenCV file
Convert background color to grayscale
convert gray to bgr
Cast inputs to dst type.
Returns True if seq is of expected type.
Slice a list by the given lengths.
compute average over the last n values
scatters input tensor to multiple devices
Validate and normalize a color specification.
Returns the time since the timer was started
Start timer.
Time since timer started return seconds since timer started
Return the elapsed time since last timer call or raise timer error.
Display flow color as image
Creates a wheel for the color wheel
compute the accuracy of the output and target
Scatter inputs and kwargs
Make the request and return the response.
Get JSON from AWS Document.
Return text sent to AWS.
Handle a callback and return the result.
Perform multiple HTTP requests at once.
Send a HTTP request to the given URL.
start the master process
Return a task dict for v2.
of the wheel
Get the basename of the wheel
Add requirements from setupcfg to metadata path.
Creates a text message activity.
build a message activity with suggested actions
Returns an Activity that creates a single attachment.
Create a list activity.
Create an activity to load a file from a URL.
Set telemetry client.
read data from container
Write changes to the database.
Delete an item from the container.
Create a store item from a search result.
Create a dictionary from a store item.
Sanitize a key for use in redis.
Create database and container.
Get database by id or create it if it does not exist
Get or create a container.
fill qna event data
Create and return a conversation reference from an activity
Get the qualified name of the step at the given index.
Check if a channel supports suggested actions.
Check if the channel supports card actions.
Extract the channel id from the activity.
Check if a JWT is from the emulator
Creates hero card attachment
If classical is val > val modifies the control register.
Returns a copy of the current object.
Return QuaSIF %s + string
Return QASM code for self as a string.
Run all the passes in the circuit.
Perform a transpiler pass.
Dump all passes.
Dumps the passes of the flow controller object
factory to create a transpiler controller
u basis function
Get the parameters of a single gate.
Calculate the matrix of a single gate.
Convert a Quil circuit to a DAG circuit.
Exponential fit
oscillator fit function
plot the coherence graph with matplotlib
shape of a rb data
Plot rb data with matplotlib
Compose 3 qubit rotations.
Transpiler to zyz conversion.
Validate the input quantum state.
Trims the image to the specified number of pixels away from the background
Get the span of the QR Code given a list of qubits
The main transpiler method.
Generate a barrier for the given qubits
Process bit id nodes.
Process a gate definition
Process Not AST node.
Apply measure on the graph
Processes a if node
create a subclass of Quil operator based on the class of the operator
\ Returns the duration of the given channels
Get the start time of one or more channels
\ Stop time in the given channels
Generate instructions for all child schedules.
Add additional data to valid data
Add additional data to valid data
Validates the instance against its schema.
Return a dict representation of the model
Create a model instance from a dictionary.
q = q [ j ] q [ k ] = q
Chops a real or imaginary vector into a real or imaginary part
Calculate the outer product of two vectors
computes the convergence matrix of a state
Calculate the shannon entropy of a state
Calculate the mutual information of a state
Return the entanglement of a formation state
EOS entropy of eof qubit
Flatten a schedule to a single component.
Shift a schedule by a given time
insert schedule component into parent at time
Append a schedule into another one.
Quaternion in the 3 - qubit plane.
return status of the backend
Start the timer with the given number of iterations.
Get the remaining time in the format as a string.
Disassemble qobj into a list of circuits run config user header
Compute the Hamming distance between two strings
Create a quaternion from a rotation angle and axis.
Create quaternion from euler angles
Normalize the quaternion or normalize the quaternion.
Convert this vector to a 3x3 matrix
Convert to zyz
Process data to keep only the number to keep
Check type of value and convert collection to string if possible
Check range.
Check if a matrix is a square matrix
Check if a matrix is a diagonal matrix
Check if op is a symmetric matrix
Check if a matrix is a Hermitian matrix
returns True if matrix is positive semidefinite
Check if matrix is identity matrix
Check whether a matrix is unitary or not
Convert from operator to ChiOi.
Convert from operator to superoperator
Convert data to kraus
Convert data to Chi matrix.
Convert from one operator to another.
Convert data to stinespring.
Operator factory.
operator from operator string
Convert stinespring to operator.
Superop to choi matrix
Rearrange the array with Cholesky decomposition.
Convert kraus to choi
Convert a Jacobian matrix into kraus operators.
Convert stinespring data to kraus
Convert from stinespring to choi
Convert kraus to stinespring.
Convert Kraus to superoperator
Convert from Pauli to Choi.
Apply Chai to chi operator
Reravel two matrices.
Transform data from pauli to waveform
Check the dimensionality of the output and input dimensions.
Hide tick lines and labels from axis
Set the label convention of the plot
delete all points and vectors
Add vectors to the mesh
Render a 3D plot
Plot the front of the sphere and frame
Render and show the plot.
string representation of the top layer
Return the middle of the layer
The tile bot.
( self ) )
Returns the parameters for a label or None if not applicable.
Returns a label for an instruction box.
Returns a LaTeX representation of the node.
Filter deprecation warnings with the default Python warnings.
Get local hardware information
returns True if a connection can be established False otherwise
Check the status of a job
Return a vector of constant times
Calculates the square of a time series
Time series defining triangle of sky
cosine function
Derivative of Gaussian function
Smooth a square of gaussian noise
Create a default pass manager.
Create a default pass simulator.
Check if the backend has the given register
Mirror the circular.
The inverse of the circular matrix.
Append a new qubit instruction to the end of the chip.
Check for duplicate qubits.
Check qubits given their types.
Check the classical registers for the cargs
check compatible qregs and cregs
Returns QASM code as a string.
The number of gates in the DEX file
) + 1
Count the number of ops in the instruction
Bind parameters of the circuit.
Bind a parameter to a value.
Maps gates to layout based on the distance between qubits.
Calculate the distance of a layout to a set of gates.
Calculate the score of a step given the number of qubits
Copy circuit metadata from a source circuit to a target circuit.
Return a copy of the gate with layout applied.
Build a list of swap ops for a single edge in a binary graph
Perform the transpiler on the input circuit.
Add a physical qubit
Add edge between two qubits
Generate a subcoupling map from a set of nodes
Get the list of physical qubits in this circuit
( False )
Compute the distance matrix of the coupling. The adjacency matrix of the coupling is stored
Return the distance between two qubits.
\ Creates a cu1 gate.
Invert the string.
\ If gate. q if ( * qregs )
c if ( val == val ) return self else return self
Subscribe to a callback for a given event.
Dispatch an event to all subscribers
Unsubscribe a callback from a event.
Publish an event to the broker.
Initialize the chip with given parameters and qubits
Defines the Quil program
Returns the uncomputed gates as a circuit expression.
Calculate the angles between two complex numbers using the bloch angle formula
Multiplexes a list of angles
( value )
Create a copy of the layout
Combine this edge with another layout and return a map from virtual to physical edge
Create a ccx instruction.
Insert a schedule into the schedule at the specified time.
Check if transpiler is fenced by name.
Convert a list of gates to index arrays
Mapper transpiler.
Group by pauli num
Create QPlane from label string
Integrates the class from bool arguments.
Product of two complex numbers
) Convert to operator string
Generate the instruction for the gate.
Update z.
Update only the given indices.
= paulis = pauli )
Delete some qubits from the QR Code
Generate a random gate with num qubits
Create a single - qubit gate from its pauli operator
Get a measure outcome from the state vector
Generate a list of samples to be measured from the state.
Adds a qasm measure to the model.
Add a QSM to the circuit
Ensure the initial statevector has the correct length and dimensionality
Initialize the state vector
Get the state vector
Check if the experiment allows measurement sampling.
Run a job and return the result.
Validate the Quil object
Ensure that the initial unitary is correct.
Initialize the unitary matrix.
Return the unitary matrix as a numpy array.
Run a single job.
Validate the Quil object
Returns True if obj is a bit
Transpiles the Quil program into the transpiled state
Does this interval overlap the interval?
Shift this interval by the given time
Shift time by the given amount.
Returns the start time of one or more channels
Returns the channel stop time in seconds for one of the specified channels.
Return True if the given timeslots can be merged with this timeslots
Merge two timeslots into a single collection.
Shift time by time
Report the commit to github.
Iplot a state with Paulivec
Rzz op.
%prog cswap ctl
Create a program graph from a Quil program.
Select the next edge in the pending program.
Select the qubit with the lowest cost
Return the best remaining qubit for prog.
Get the list of instructions in this gate
Inverse the gate permutation
Replace gates by their q values if qregs are given.
If the gate is classical then val else val
Returns whether the matrix is unitary or not
CONJUGATE op.
( ) )
power operation of the QR Code.
( - 1 )
Convert a circuit instruction to an operator.
Swap the layer with another layer
Separate bitstring into a sequence of substrings.
formats memory for qiskit
formats memory for qiskit
formats a memory
Format counts dict
Format a statevector into a complex representation
Formats a unitary basis vector
Submit the function to the executor
Get the status of the job.
True if the interval includes the interval [ lo freq ]
Iplot bloch for a vector rho
Compute the decomposition of the dag.
n choose k
index of k items in lst
return a list of unique backends
return the op of the operator if it exists.
sample a constant pulse
Sample a pulse with zero duration.
Sample a square pulse.
Sample a sawtooth pulse.
Sample a pulse from a triangle.
Sample a cosine pulse
Sample a sine pulse.
Sample a pulse with a gaussian noise.
Sample a pulse with a gaussian noise.
String representation of the tree
get backend instance by backend class
Remove all ops with given name
Add a quantum register to the wire interface.
Adds a classical register to the wire graph.
Add a wire to the graph
Check if condition is valid.
Returns the list of bits that are in condition
add op node to the graph
Apply an operation back onto the main graph and return the operation id.
Confirm that all keys and values in wiremap are valid.
Return the wire map condition for a given block.
extend the backbone with all classical registers
Check the wire list and condition of the node
make pred - > succ maps for a node in the graph
Returns the full predecessor and successor maps for a circuit.
( self ) )
Edges connected to the given nodes.
return a list of nodes of the op op of the graph
List of all gate nodes in the binary tree
Find nodes with given names
A list of two qubits
Returns the list of predecessors of the given node
return all predecessors of the given node that are quantum registers
Returns the list of ancestors of the node
Returns all successors of a quantum register.
removes a node from the graph
Removes all ancestors of a node
remove all descendants of a node
remove op nodes that are not ancestors of node
remove all nondescendants of a node
Generate serial dags from the topological op graph
A generator that yields all the layers in the multigraph.
Returns all nodes on a given wire that are connected to the current node
Count the number of ops in the topology
Get a summary of the properties of this node.
Tomography basis function
Add pauli meas gates to circuit.
Returns tomography data from a tomoset
Projector operator of a basis set.
TOMO linear inversion string
Wizard of the eigen decomposition.
Return the Wigner data as a list of numbers.
meas op
Check the status of a job
Monitor the status of a job
Simplifies an u - gate.
Transpiles the Quil layout into the graph.
Build the job history tab
\ Creates a cu3 gate.
Build a bell circuit
Run a transpiler on a circuit.
get current drive channel
return the control of the pulse
return the measure for the given channel
acquire a pulse channel
Input state for the Dirichlet distribution
Unset the qiskit logger.
Iplot a state with a hinton diagram
Parse the input and return the result.
Restore the lexer and restore the original filename and line number
push current lexer on stack and create a new lexer
= instruction. method
Convert an acquire instruction to a model instruction
Convert a frame change in time to a model command
Convert persistent value to qobject model
Convert drive instruction to model instruction
Convert a snapshot command to a model command
Update the pulse s annotations with the annotations of the original pulse
Convert a DAG to a circuit.
Given an observable matrix returns a dictionary mapping observable states to their corresponding observable states.
Update symtab with a new one
Verifies that the current symbol is a declared bit
recursively verify current symtab
Verify as gate.
Verify that a symbol in the global table matches the specified type.
) return obj
Find the column in the input that the token is in
Debugging print of parsed value.
parse qasmasm string
Run the tool and return the result as a string
parse a QASM assembly and return the assembly
) [ 0 ] Gate creation
Given a state and a number define the basis state
Projector of density matrix
Calculate the purity of a state
Calculates the property set of each gate based on the commute time.
Run dag on the CX network.
Get a backend by name.
). shape
Get register specs by register name and maximum register number
Truncate a float number.
Return LaTeX source code.
Calculates the total number of columns and the total width of the image
get beamer page
Load a schema from a file.
Load all schemas and validators.
Random unitary operator.
Generate a random Ginibre matrix.
Generate a random density matrix
Generate a random density matrix
Returns a list of all the function names in the module
power operation of the QR Code.
compose this subsystem with another
Create a superoperator from a circuit instruction.
Traverse the DAG and remove all topological nodes of the final op type
Build a decomposition of the Quil program
Defines the qubit
Check type of value.
Raise validation error if type is not a list
Set the atol limit.
Set the normalization tolerance.
Input and output dimensions must match.
Returns the input dims for the given query args.
return output dims tuple if qargs is none otherwise return self. output dims tuple
). name
power operation.
Automatically determine qubit dimensions if they are a power of 2
Deserializes string into object.
Override serialize method to catch str validation errors instead of str
Check type of value against choices.
Singular Value Decomposition
( num ) ) Inverse
Set the label of the Dataset.
True if the function is unitary.
convert to operator string
Convert to a circuit instruction.
Transform data into a channel.
Patch strptime to include language information.
Check if all tokens in a list are valid.
Split a string by known words.
Parse the given string as a time object.
Check if this rule is applicable to the given date string
Translate a string.
Parse the date string using the given formats.
convert exception name to net number
Get HTTP error code from exception message.
Compose a configuration file from all streams and write it to a file.
Get info about streams.
Log output from stdout and stderr
expand time string to multiple units
Read configuration and set instance variables.
read cached stepper options
write cached options to a file
Write the stpd file to disk.
Create a linear learning step from a schedule.
Time resolution at a given time
execute a shell command and return exit code
Convert a simple monitoring response to a list of points
Make a list of points for each label
) : return str : publish
Count the number of times a code has been matched in a dict
Stop the worker and wait for it to finish
feed stpd file to workers
Add user options to core
configure core from options
collect data from queue and notify listeners
notify listeners of aggregated data
Attempt to discover the UDP port of the local jmeter server.
Terminate the process.
Read and parse data from a file.
Create a criterion object from a string.
get config from xml file
create startup config file
Checks the number of free disks provided by the core in question.
Check the available memory.
Get right panel line
Add info widget
Fill a rectangle with the longest string in the prepared list.
Return the length of a line of text.
add a widget to the main window
Send a writer request to the writer url
load plugins from plugins. py
Get a plugin of a given type.
Find all plugins of a given type
Copy a file to the artifacts dir
Add a artifact file to the list of artifacts.
Create a temporary file and set its permissions to num.
load config from multiple config files
Flush all changes to the file
Get all options that start with prefix.
Find all sections with a prefix
Decode a chunk of stat data into a series of instances.
install agents and artifacts
Poll agent stream for data ready to send to network.
Send collected data to listeners.
Detect and update the configuration from the core.
Handles processing the data items
Subscribe to some channels on the network.
Starts the event loop and subscribes to the given channels.
Close the websocket
Make a request to the API and return the JSON response or None.
Submit an order to the API.
Returns current position of symbol
Get a list of assets with a given status.
Check obj is dict with key type and value type
Get dict param from object
Creates an event logger with a structured logger message and a callback.
json event logger factory.
create a config from a config file
Returns pipeline instance by its name.
Get all pipelines and their definitions
Get the next event in a queue.
Execute a pipeline through a queue.
Wait for all processes to finish
Create a config field for a given config type.
Build the blueprint and return execution plan
Returns solid in this pipeline by its name
Construct publish comands
tag and commit
Emulates a block of text
Download a solid file from S3
Upload a file to S3
Context manager to handle user code errors.
mkdir - p new directory and check whether it exists
A context manager for executing some user code.
Creates context free logging.
True if any step has a failure
True if the step is skipped.
return a dict with the transformed values
The failure data from the step
is a valid dataset config value
Check if table is valid.
Get the coalesced execution steps for the given execution plan.
get connection params from self. settings
Creates a new connection to the database and returns it
, name )
Close the connection
Convert model to python type
Convert a list of dictionaries to a python list
Returns the default form field name.
Convert value to python instance
Return the queryset with core filters applied.
Compute the number of NFPs for a uniform distribution
Compute the number of real frames for each real chunk
Partition the data into partitions with the best nfps.
Calculate the center and radius of the line
= hashvalues
Return the number of bytes required to store this object
Merge another HyperparameterStatistics object into this one.
Union of multiple Multihash types.
query minhash of all possible hash functions
Hash a set of values using the weighted minimum of them.
Removes the mapping for the specified key from this mapping.
Estimate the count of the number.
Merge another parameter value into this value.
Clears the contents of the region
Calculate Apk score from actual and predicted string
compute average predictive mapk of actual
Sorts the hashtables
query k keys from the minhash
Closes the hashtable and all hashtables.
Get a user from a rest api object
Intercept the get social login and store the social login state.
Select a text from a list.
Parse a scoped selector.
Parse a single statement.
Parse a string and return the result.
Advance to the next line if the current line matches the one given.
Parse a configurable reference.
Write the operative config to disk.
Decorator to ensure a function is wrappable.
Tries to format the given value.
Clears the current global config.
Checks if fn or cls might have a parameter with the given name.
Returns the cached arg spec for the given function
Get supplied positional arguments names from cached arg spec.
Parse a config file.
Parse a config value.
Flatten a value into a list of values.
Iterate over all references.
Load constant values from an enum.
get all matching selectors
Returns the selector with the smallest number of occurences.
Convert a search query into a searchable string.
Parse retry after.
Validate a value.
A property description of the resource
sets the current value
Get thing by index.
return self. things
) Set default headers
Check if host is in whitelist if not raise exception
Get a thing by it s id
Process the POST request for a thing
Delete a thing with an action.
Start the Zeroconf server.
Create a description for an action.
start the thing
Record the finished state of the thing.
Get the event description as a dictionary.
Returns the IP address of the machine
Returns a list of all IP addresses currently known
Set the value of the field
Notify of external update
Convert this thing into something that can be used in a thing description.
Set href prefix for all actions and properties in this resource
returns property descriptions as str
return a list of action descriptions
get event descriptions
add a property to the resource
- > None
Get the value of a property or none
Get the properties as a dict
Set the value of a property.
Get the action object for the given action name and ID
add a new event
Add an event to the set of available events
Perform an action.
Remove an action from the actions list
Add a new action that can be executed later
Remove subscriber.
add a subscriber to an event.
Remove event subscriber by name and ws
Send property change notification to all subscribers
Send an action to all subscribers.
Send the event to all subscribers.
Annotate the model with the given annotations.
Update one or more fields.
Insert a new record in the database.
Insert and get a model instance.
Build insert compiler from rows.
Is the field a magical value?
Called when a model instance is saved
deletes an object from the database
Resolve a string expression in the expression
Represent the mapping as a SQL query suitable for inclusion in a query
= relabels )
Add join conditions to the SQL
Is the field a hstore field.
Create a hstore required constraint
Rename a hstore required constraint.
Drop a hstore required constraint
Returns the constraint name for the given field and key.
Creates the sql statement for the given model and schema editor.
Get the psycopg2 database backend class
Prepare the database for use.
Prepare value before passing it to SQL
( self. query ) )
Rewritten as sql for the insert
Rewrite an insert query based on the query conflict action.
Rewrite an insert sql statement.
rewrite insert nothing into a single insert statement
Get model field instance by name.
Format field name
Format the value of a field.
Creates a new Hstore unique constraint for the given field and set of keys
rename a hstore unique constraint
Drop a unique constraint from the store.
Generate unique constraint name.
Compose keys for uniqueness of field
= value return self
Compile the table into SQL and replace the extra conditions with the actual conditions.
Returns tdist 95 conf level for a dataframe df.
Returns the variance of two pooled samples.
T - score of two poolsed samples
Is the distance between two strains significant?
Topological sort.
N queens generator
return a random position from the unexplored list
( board )
Filter benchmarks based on base version.
Recursively expand a benchmark name.
Generate benchmarks for a given number of values.
num = 1 )
Fetch posts from a category for a given date
Parse posts from posts.
Queries a user object.
Shortcut method for fetching items from the category entry.
Fetch and parse RSS feed
Setup the command line parser
Fetch from a given date.
Retrieves bugs for a period of time.
Get comments for a list of bugs
Get history for a list of bugs
Get all attachments for a given bug.
Fetch merge requests from the API.
Pull merges from the given date.
Merge a merge into a project.
Merge all versions of a merge.
Merge a version into a merge
Retrieve the notes for a specific item.
Get the emojis for a specific item type and id
Get the emojis for a note
Calculate time to reset the rate limit.
Generator for items from the path in the payload.
Fetches the repository and fetches the rate limit.
Setup the command line parser
Fetch from a given date.
Get the id of a metadata element.
Get the members of a conversation.
Get channel info.
Retrieve information about a user
Setup the command line parser
Return the timestamp of when the item was last updated.
Parse raw CSV into buglist dict
Parse xml to get details of bugs.
Logout from the CGI server
Get bug metadata as XML string.
Get bug list for a given date
Get list of bugs by ID
Get bug activity
Fetch items from the server between a certain date
Fetch events from the group
Get events for a repository group.
Retrieve comments for a given event.
Retrieve event rsvps for a given event.
Fetch question from API.
Fetch comments for a question
Build question object from question html
Get questions from API.
Get html responses for a specific question
Get comments for post
Parse question and ask user
Parse number of html pages from question
Parse HTML update doc and extract user info
Fetch all reviews from Gerrit.
Find reviews from raw reviews.
Fetch latest reviews from Gerrit 28
Returns the version of gerrit server as tuple tuple.
Execute gerrit command and return reviews
Returns the next group item based on the gerrit version
Execute a command from the archive
Execute a command remotely
Setup the command line parser
Fetch data for a given issue from the server
Fetch all attachments for a given issue
Fetch all issue messages for a given issue
Fetch all activities for a given issue
Fetches the user data from the server
Get user info by name.
Get a specific issue by its id.
Get a specific issue collection by name.
Fetch the items from the API.
Get list of subscriptions
Get id of group
Perform a GET request with the given parameters.
Create a command line parser.
Find backends for all submodules in a package
fetch all items from archive
Remove classified data from the given item
Parses the arguments passed to the archiver
Set authentication arguments.
Set the arguments for the archive command
Set output arguments for the script.
Fetch backend and write to outfile.
Initialize archive from command line arguments.
Return the timestamp of when the item was last updated.
Parse a mbox file and yield dicts.
Fetch and parse messages from the given mailing list.
Copy the contents of the given mbox into a temp file and return the path.
Validate message against validation rules Returns a boolean value of the validation result
Convert casedict to python dictionary.
Return a Message instance for the given key in the mailbox.
Fetch a set of items from a category
Parse git log from a given filepath.
Add git log or uri to args.
Create a command line parser
Parse the stream and yield Git objects
clone the file at uri to dirpath
Count the number of objects in the repository
Determine whether the repository is detached from the current working directory.
Update the local repo with. gitattributes
Fetch references and commits from remote repository.
Get the list of commits from a git pack file.
Update references on the current branch
Discover all refs in this repository
Updates the given ref in the repository
Run the given command in a background process and return a generator of lines.
Read the stderr of the process.
Execute a command and return stdout
Yield tweets grouped by id.
Setup the command line parser
Override fetch method to allow passing category name as keyword argument
fetch hits for a given category
parse hits from raw results
Get the hits for the given keywords.
Return the timestamp of the last update.
Choose the metadata category based on the item.
Fetch pull requests from github
Fetch repo info from github.
Get all reactions to an issue comment
Get reviewers for a pull request.
Get the commit hashes for a given pull request
Get all reactions to a pull review comment
Get user info by login
Get reactions to a single issue.
Get the issues the current user has access to.
Get pulls from the given date
Pull reviewers for a given pr number.
Pull commits from a pull request
Pull reviews for a comment.
Get user info by login.
Get the list of organizations the user is a member of
Get token rate limit.
Get the rate limits for all the tokens
Choose the best API token for the request.
Check if we need more tokens to sleep
Update current rate limit
create sqlite3 metadata
Store a new record in the database.
Retrieve the object from the database
Create a new database archive
Verifies that the archive is valid
Load metadata from the database
Return the number of rows in a table.
create archive file
remove archive at archive path
Search for archives matching the given criteria
Search for all files in the directory.
Generate a range of months.
Remove invalid XML characters from raw XML string
Returns a generator that yields issues from a raw JSON.
Retrieve issues for a given date.
Retrieves a single issue by its ID.
Retrieve a user by ID.
Make call to the API
Fetch dockerhub services from dockerhub
Fetch a set of items from the repository
Get a repository description.
Filter custom fields
Parse issues from github.
Get a list of issues from the given post
Get all issues for a given date.
Get comments for the given issue.
Get all fields of current object.
Shortcut method for fetching items from redis
Get a list of builds for a job.
Parse raw questions from Quizzes user.
Get questions for a given date.
Setup the argument parser
Get all the reviews for a category
Get the max date from a list of reviews
fetch 1 27 reviews
Call the AP API and return a list of pages.
Get the most recent pages for a list of namespaces
Return a generator yielding messages from a JSON stream
filter message by chats
Get updates of current object.
Fetch all articles of the group.
Overwrite metadata for item.
Turns an article into a dictionary.
Execute a method on the remote and return the result.
Fetch article data and return it as a dict
Fetch data from a remote site.
Fetch a message from the archive.
Create a requests session
Set up the rate limit handler
sleep for rate limit
Update the rate limit
Parse supybot log file
Retrieve archives from supybot
Lists the supybot archives
Parse supybot stream
Fetch and parse topics from given category
Get topics from a raw JSON response
Get a topic by its ID
Get a post by ID.
Fetch all available tasks from a category for a given date.
Return a generator yielding tasks from a JSON output
Return a generator yielding users from JSON.
Get a list of tasks in the project.
Get transactions by phids
Call the PhabUsers API with the given parameter
Call the Phabs API with the given phids
Make call to the conduit
Generate a unique id from a metadata entry.
Parse contents summary from JSON.
Get the contents for a given date.
Get the history of a content id
Parse the result XML and create a measurement object
Build the capabilities URL for a given service.
Read url and return xml.
Read XML from string.
Parse result from input file
Build url.
Construct a schema from the given elements and namespace map.
Get the URL for a describefeaturetype request
Execute a process and print the result.
Get a list of movies from the API
Get a list of tvs.
get info of the object
Get alternative titles
Get all credits for a project.
Get all external ids for the current user
Get all keywords for the current user
Get recommendations for current user
Get release dates for a project.
Get releases of the bundle.
Get all translations for the current user
Get similar movies from the API
Get reviews for the current user
Get all upcoming events for the current user.
Get a list of currently playing posts.
Get a list of popular comics.
Top rated items.
Get the current state of a user.
The rating endpoint provides a simple way to get a rating for a movie.
Get movie credits for a movie.
Get tv credits for the current user
get info from the API
get a list of objects from the API
get info about the object
Get a list of movies from the current user s account.
Create a new token for a user.
Validate token with login
Send a POST request to a new session.
Create a new guest session
Get a list of rated movies
Get the current status of the item
Create a list
Remove an item from the collection.
Remove all items from a list.
Get the content ratings for the current user
Get similar torrents for current user
Get a list of messages from the air
Get information about a series.
Get credits for a series.
Get a list of series external IDs
Get information about a TV series.
Get credits for a TV series.
Get all external ids for a TV series.
Set object attrs to response values
Get a collection of objects from the API.
Get company info from the API.
Send a GET request with keyword params
get a list of objects from the API multiplexer
normalize a string
Count the number of refs in each n - gram
count the number of n - grams in ref
ERFCC Inverse Comprehension
align source blocks with target blocks
Get descriptors in a module
Register multiple descriptors from a JSON object.
Register a new sensor with this sensor.
prints s to the terminal
Return whether desc is a descriptor class.
Convert to a JSON serializable format
require 3 d to set the coord
The atomic similarity of a node with its neighbors.
] surface area of molecule
Create a Structure from a molecule.
Create descriptor from JSON.
Return a copy of the object with missing values filled in
Return a copy with missing values removed.
). items
Convert to dict.
get name of the value
Print a progress message in the terminal
Write a message to stdout.
Raise an error or raise an exception.
Create a temporary file name and store it for future use
Change the name of a temp file.
remove temp files
get fixed path
Get legal params for a given API method
Merge self. opt params to kargs
Add boto client params to command line parser.
Terminates the worker and all its tasks.
, num )
join all workers
count the number of processed tasks
Get S3 access and secret keys from environment if available.
Get access and secret keys from the command line
read s3 keys from config
Get s3 keys from command line env or s3 cfg.
Connect to s3 instance
recursively walk a directory and return paths
Expand a single source or list of sources
Upload a single file or directory to S3.
Put multiple files into a single directory.
Create bucket on S3
Update the privilege level for the target
Get all the files in a source folder
Get a single file from S3
Get multiple files from a single source directory
Copy a single file from source to target
Copies multiple files to a directory.
Delete all the files in a S3 source
Walk a directory and return relative paths to it.
Copies all the files in a source directory to a target directory.
Calculate the md5 hash of a file
Get md5 value of file
Create all the directories in the target directory.
Compare md5 of local key with remote md5
Returns True if path matches filter path.
Walks an S3 bucket returning a list of matching items.
Conditionally filter modified objects based on self. opt. last modified before or after options.
: return str
Returns the object metadata for the given S3 URL.
Read file chunk.
Verify size of downloaded file.
Write a chunk of data to a file.
run a single command
validate args against command handler
List S3 Buckets
Create a new bucket.
Uploads multiple files to Amazon S3
Get handler for source and target
print the contents of a bucket
Sync source to target path in s3
Copy files to S3
Move files from source to target
Delete handler from S3
% ( num )
total size of all objects
Matches a date value
Match time in string.
Match a value and return a tuple with the delta and the original value
opt, value )
get message from hub
Call all callback functions registered for the given data
Get AES key from token
Report exception info to rollbar.
Ensure we have a log handler.
Get the current request from the middleware
wrapper for report
Create a logger for the agent.
Builds a dict with the user data
Add lambda context data to the data dict
Add request data to data dictionary
Check if the frame should be added.
Build request data from request type.
Build server data.
Build a payload for sending to the socket
main ( )
Compose a string.
Return the Hangul letter code and Hangul letter.
Determine if a character is a Hangul character.
Attach a word to a josatable.
Check if the given node is inside the except handler.
Check if a astroid node is inside lambda
Recursively iterate over all the elements of a node.
clobber in except statements
Check if a node is a super builtin
Check if a node is an error
Check if a node is a func decorator
returns whether node is an ancestor of a name node
Get the parent node of a node.
Recursively collect fields from a format string
Get the argument from a call node
Check whether the given node inherits from std ex
Check if the function is decorated with property
Check if a function is decorated with one of the given qnames
Find an astroid. try. handler or astroid. try. handler ancestor node
Check if the given astroid node is from a fallback
Get exception handlers of a node
Check if a node ignores an exception
Check if a class is abstract
Try to infer a node.
Determine the type of a node
Check if a non - delayed evaluation is enabled.
Return list of fully qualified module names from module name.
Get the module name from an import node
Produce a string representation of a dependency tree in a DOT language.
= depinfo
Check names referenced by imports.
Check import from.
Check position of node in file.
Record an import in the import stack.
Check relative imports.
Add an imported module to the stats.
Check if module is deprecated
Check if a module is preferred.
Produce a report of external dependencies.
Returns a graph of all the dependencies in the current module.
Get default options from rcfile
Insert default options into sys. argv
Show the node attr based on the current mode.
Get callbacks for class
Visits the node and all its children and then the node itself.
Check consistency of all messages in the queue.
Check whether the inference of a function is valid.
Check if datetime is the type of the node
Check if mode call is valid.
Add a new message to the list
Returns the title of the given node
Set default options
Check if the node should be displayed
) add a new class to document
Generator yielding all ancestors of node
Get all nodes associated with klass node.
Extract classes from the classdiagram based on the given node.
Called when leaving the project node.
Implement from - import hook.
gets the diagram of the specified class
Get diagrams from classes in the project
Check if an attribute is ignored.
Get similar node names for attrname in owner.
Check if a member node should be emited.
Check if parent of node is of node type
) is name used as a var
Determine if a variadic node has no context
Check if the node is an assignment to a function.
Check if the function call is callable.
. visit ( node ) )
Yield all interfaces of the given node.
Create an astroid project from a list of files.
Visit a package node.
Visit a function node.
Visit the name and infer the type of the node.
Assigning an attribute type to a class attribute.
Visit a import node.
Visit an from - import node.
Compute the number of the module at the given path.
Called when an imported module is found.
linter. register reporter reporter )
handle an incoming message
Colorizes and writes a message.
, * * attrs ) str
, attrs = None ) :
Process a non raw string token.
Recursively visit a section
Recursively visit the children of a section
Write a table in the current layout
Add a renamed message
) from checker
Register a message.
Check symbol against alternative or new names.
Raise duplicate symbol after sorting.
Raise duplicate message id
Builder inited.
Return the number of CPUs on this machine
Print messages stats table.
Temporarily adds python paths to sys. path
Load plugin modules.
Dynamically load plugins
Set the value of an option.
Register a checker.
Python 3 porting mode
] + [ ]
Get checker names.
Find all checkers and their reports and prepare them
Expand a list of modules and add each module to the list of errors
Set the current module name and file path.
Check an astroid module.
Evaluate the current state of the model and report to the user
) : str
Callback for full documentation option.
) List all messages
= 0 )
Normalize text to have line lengths.
Returns the name of the frame in which the node was defined and the name of the frame in
Decode a line into unicode using the codec registered for encoding.
basename in blacklist re
Load all python modules in a directory and register the linter.
Comments a string.
Format the given value for the given optdict.
Format a section with options and write to a stream
Format options and print them to the stream.
Insert a child.
) return child
if self. parent else [ ]
Format the input format with the given Layout and output stream.
Get the table content
Generate the content of the given layout.
Recursively collects all message lines for the current module and its children.
Handles an ignored message.
Register a new report.
Add some stats to the object.
Get the name of a setter property from the decorators on a function node.
Get class property from setter methods
Check if the return node is something
Get all possible exception types for the given node.
Processes a module and adds its messages to the GUI.
Check module for encoding errors.
Processes the comments and looks for notes.
Check whether a local variable is from the future import.
( parent, stmt ) )
Return the overridden method for name if it exists.
Get extra info about the unpacked module.
Check if name node is assigned locally.
mark a node as consumed
Check if the node has homozym in upper function scope
Check the unpacking of astroid.
check metaclasses for astroid. classdef nodes
Get all the packages in a directory and its subdirectories.
Run the install script
Produce a report to the given section
Runs the program
Append a stream to the document.
Compute the similarity between all pairs of ensembles.
Display sims as list of linesets
Find the common lines between two sets.
Generator yielding all sims in the file
Iterate over stripped lines.
Return an index of the lines in the file.
check equality of attr of two arguments
Determines if a method has different parameters than another
infer the result of a node.
Add node to the accessed set
Check name bases and slot names.
Check consistent mro of class definition.
Check the proper bases of the class used in the node.
Check if node is function def and add message if so.
Check whether the node is used in slots.
Check if name is func or not.
and not self. optional )
Is any node in the body raising?
Check if bad exception context is used.
Displays reports in the given layout.
Check if the node is a typing namedtuple
Check if the given node is an enum class
Check whether the given node is a dataclass
Check maximum number of parents and attributes in class definition.
Check if class has at least min public methods.
Implement if - > if - > if - > if - > if - > if -
check for boolean expressions
Check spelling of docstring.
( template ) )
Check if a node is actual else condition.
Check simplifiable if node is simplifiable
Check if exception is in generator
Check if exception inherits from stopiteration
Check nested blocks before if or else.
Detect duplicate isinstance calls for the same object
Check duplicated isinstance operators.
Check if a node is an and or ternary.
Check consistent return statement
Check if graphviz is available.
get project definitions from command line
write graphviz packages
write graphviz classes
Set the dot printer to use for this plot
Open graph file and set printer.
Return whether or not this package may be emitted
Formats the help message as a reST string
Get environment variables.
Traverse a graph and get list of cycles
Generate the graph and save it to a file.
Prints a section and its options to the stream
Disable a message.
Enable a message.
Return the symbol of a message.
Check if message is enabled
Add one message from a message description.
Get the indent length of a line.
Get indent hint line for bar positions.
Get indent for token at given index
Check for line openers.
Get indent and valid indentations for current token and index.
Return a hanging indent after bracket.
Return continuation inside bracket.
Push token onto the token list
Add a new line.
Check if token at i has a valid type annotation
Check if token at index i equals spacing
Check if token is surrounded by space
Visits a default node.
Check if node is a multi statement node.
Check indent level.
Determine if a node is in an iterating context
) and parent is astroid
Check name for builtins.
Check for std ex of subscripted value.
Check for errors in attribute inference.
Check if raise is propagated.
Find pylint configuration file.
Validate a value against the optdict.
Register an options provider.
Set global option
) : str
Generate a config file from the options providers.
Loads the configuration file
Load configuration from command line
Add a help section to the parser
return help string
Load default values for all options.
Get option attrname
Get an option by name.
Yield options sorted by section.
Check if the given func is an instance method call
Check if the node is a complex format string
Visit a module node.
Visit an from - import node.
Set logging names on imported modules.
Check if the format string is valid.
Check if the loop is inside a loop.
Get the parent break loop node.
Check if loop exits early
Get property classes and property names from config
Determine function type for the given node.
Append a table report to the current section.
Check if a call is one arg pos call
Check if starred variable is referenced in other functions.
str ( node )
Check if loop exits early
Check if the node is inside a loop.
Create a stats file and open it
Add an error message for expr node.
Assert is just a simple assert statement.
Check if dict contains any duplicate keys.
Check if node is not in try.
Check if the astroid node is a call with a reversed protocol method
Check the docstring of a given node.
Check if a comparison is valid for the given literal.
Add a subnode to the graph.
Parse bottom control structure and add nodes to graph
Visit a module and check its body complexity.
Visit and leave an astroid.
Add a relationship from one object to another
get relationship by from object and relation type
Get all the attributes of the node.
Add an object to the diagram.
Get the names of the classes in the astroid. instance or astroid. class
: return str ]
returns the class node with the given name
of all imported modules
Return module node with given name.
Get module by name.
Add from module as a dependency of node
Delete the response from the cache
Returns the query for the model
Get user by username and password.
Get user by access token or refresh token.
Stores the token data in the database
Store a new authorization grant in the database.
Get user by client id and code.
Prepare a request.
Initialize application with extension.
Create a remote application object and register it.
Redirect to the authorization page for this client.
Handle OAuth1 response
Handle OAuth2 response
Return an authorized response to the request.
Hash the given token for the given application.
Creates a client with the given token
Creates a client with the specified access token.
Temporarily disable secure transport.
Confirm authorization request
Get client secret from request
Get token secret or none if token is invalid
Get access token secret.
Get realms for token.
Get redirect URI from token and request.
Get rsa key from client
Validate client key before making client request
Validate token and update request token if valid.
Validate the access token for the request.
Validate the timestamp and nonce.
Validate redirect uri
Validate the request against the given realms
Verify the verifier for the request.
Verify token and update request token
Verify that a token is allowed for the given realms
Confirm an authorization request
Authenticate a client
Authenticate a client id with a request.
Get the original scopes from the tokengetter
Confirm that a token has the given set of scopes
Get default redirect uri from client
Get default scopes for client
Invalidate authorization grant for client by code
Save authorization code and redirect to the client.
Save bearer token and return redirect uri.
Validate the bearer token for the request.
Validate client id and update request. client if found.
Validate the code received for the request
Validate grant type and set request. user if found
Validate a refresh token.
Validate response type against client. allowed response types
Validate scopes for client
Validate user and set user in request
Revoke a access or refresh token.
Update request data with default values
Convert dictionary keys to string
Change weibo header.
Register OAuth2 client and return a OAuth2 app.
Create the oauth2 app and return it
Extract params from request
Convert a string to bytes
decode base64 text
Create and return a response.
Get the cached clients for the current state
Add remote app
Add a remote application to the versioned server.
check exception with x509
Generate keys and check for success
Check if a private key can be loaded and load it
Check if load private key callback is correct
check type of private key callback is wrong type
Get a revocation list with all certificates revoked
Check x509 revoked copy
Create a certificate request.
Create a certificate
Use a certificate chain file.
Use a certificate file as the basis for the current context.
Use a certificate on this context
Add a certificate to the context
Use a private key in a file on disk.
Use an SSL private key as a passphrase.
Load a client CA file.
Set the SSL verification depth.
Load the dh file and set the context to the dhfile.
Set the cipher list used by the SSLEngine
Set the client certificate authorities.
Add a certificate authority to the context
Set the TLS extensions to use when connecting to the server.
Setup NPN select callback.
Set the list of protocols to use ALPN.
Set the alpn select callback.
Setup ocsp callback and argument.
Set the context for the current ssl connection.
Return the TLS server name from the certificate.
Set the host name for the SSL connection
Receive a message from the socket
Read data from the BIO.
Attempt to renegotiate the SSL connection.
Shutdown the SSL connection. The application must close the underlying socket.
Returns a cipher list from the ssl module.
Get client certificate authority list.
Enable or disable SSL shutdown.
Return a random string from the server.
Return a random string from the SSL session. The number of bytes produced is equal to the number
The master key for the session.
Exports the keying material associated with a label.
Get a session from the SSL engine.
Get the cipher name from the SSL context.
Get the cipher bits from the SSL context.
Returns the cipher version.
Get the SSL protocol version name.
Get the next protocol negotiated by the peer.
Set the list of protocols to use ALPN.
Get the ALPN protocol negotiated by the SSL context.
Get bio as a string.
Set time as a string.
Get an ASN. 1 time string from a string.
Get elliptic curve description by its name
Serialize public key object to PEM or I2D format
Load a public key from the specified file.
Sign data with a private key.
Verifies signature against data for a certificate
dump PEM or text crl to bio
Convert public key to cryptography key.
Check whether this key is valid.
load elliptic curves from shared library
Returns elliptic curves defined in lib
convert curve to ec public key
Return the DER encoding of this X509 name.
Get components of the X509 name.
Get the short name of the certificate.
Get the data from the extension
Generate OpenSSL certificate signing request string.
Set the public key for this certificate.
Return the public key for this cert.
Get the subject name of the certificate.
Add multiple extensions to a certificate request.
Return a list of x509 extensions in this certificate request.
Verifies the certificate against another key. Returns the result of the verification or raises an error if
. openssl )
Set the version of the certificate.
Get the public key for this cert.
Set the public key for this certificate.
Sign a digest with a private key.
Derive a digest from a name.
Set the serial number of the certificate.
Get the serial number of the certificate.
Change the GMTime of self not after amount.
Change the GMTime of self not before amount.
True if the request s not after value is expired.
Get the issuer of the certificate.
Set the issuer of the certificate.
Get the subject of the certificate.
Set the subject
Add extensions to existing x509 extensions in the file.
Return the x509 extension with the given index.
Add a certificate to the store.
add a CRL to the store
Change the time of the certificate.
Initialize the certificate store.
Create an X509 exception from the current context.
Verify the certificate.
Set the serial number of the revoked certificate.
Return serial number of certificate as string.
Set the reason reason for the certificate.
Get the reason for the certificate
Set the revocation date of the certificate.
Convert certificate to cryptography.
Get a list of revoked extensions.
Get the issuer name of the certificate.
Sign a digest with a certificate.
Export a certificate revocation list.
Return PKCS7 type name.
Set the list of certificates issued to the server.
Sign a digest with a private key.
Verify a private key against a public key.
Return a base64 encoded version of the private key
Returns the public key for the peer.
Add a public key to the keyring
Raise exception type from the error queue.
Get service metadata.
Yield issues from the parser.
Build annotations from a card json.
Returns a generator that yields boards from GitHub.
Get all lists for a given board
Get a list of cards from the server
Get comments for a card.
Returns the URL for the given path within the API
Get a list of objects from a link.
Link fields to dict.
Get a list of issues for a query
tag = tag
Yield aggregate issues from the targets.
Get a value from config or default if not found.
Returns True if the issue should be included in the index
Make a table from a grid of cells.
Execute a command and return result from oracle
Get int value from config
Pull current flavor config and synchronize with GitHub Issues.
url, 200 )
get a collection of data from AP
Parse sprint to fields dict
Get credentials from credentials path
Corrects pvals according to the FDR method.
Z - Score along selected axis
Adjust the color of the spines of a plot.
Prepare argument parser for the command line tools
Add parser for enricher sub - commands.
Calculate the geometric p - value of GSSA
Get marts with names and descriptions
Return a pandas dataframe with the contents of the datasets
Return a pandas dataframe with the selected attributes
Return a pandas dataframe with the filters
Sets the number of cores used by the process.
load gmt file
Get list of libraries for a database
Download libraries from the enricher
Heat matrix with pheno pos and neg classes.
Load data into a Pandas dataframe
Compute GSEA profiles for each sample in the dataframe.
Save the results to csv files.
Check if gene sets exist in the enricher.
Send genes to genelist via http and return job id
Return number of genes in gene list
add cube script to ml script
Adds an icosphere effect to the current filter script.
A cube script where each vertex is assigned a different color.
Return red green and blue for a color name.
make sure a variable is a list
Make a list from a variable if not already a list
Adds a filter xml to a filter script.
Merge two filters together.
Split vert on face with given displacement ratio.
Translate x y and z by given values.
rotate script by given angle
Scale a vert script.
Cross - diagonal coordinate coversion function
Wrap a 2Cycling pattern around a cylinder.
Deforms a curve into a vert function.
Convert Visual C ++ code to TEX
Export mesh filter to FC file.
Voronoi reduction operation.
Export all filter to XML.
Export script in vert format.
Vert script with cylindrical vert script
Spherical Vert script.
Renames a filter script.
Changes the current layer of a filter script.
Duplicates a filter script.
Delete lower layers
add a new script to the current script layer
Add a new layer to the current layer stack
Save the current filters to script file
Export a triangle filter to XML.
Measures the topology of a script.
Parse hausdorff distance file
calculate arctangent of angle str
return the cross product of two vectors
Multiply a vector by a scalar.
Insert a depth filter in the provided XML file.
Sort a polyline file
Run aabb and measure aabb geometry and topology
Lowercase the extension if str is present.
Get upload configuration
Get url for a file.
Get absolute path to filename in destination folder.
ext in self. extensions )
Resolve a conflict between this basename and the target folder.
get vprof version from the source file
Remove duplicates from a list of objects.
get the number of differences between two lists
Returns a list of tuples where key is the type and value is the count of the object
Traces the memory usage of the target.
The code events
Get the object overhead for this process
Computes the memory overhead of the process.
profile the runpy package
profile self. run object
Calls self. run object with profiling enabled
Run the benchmark.
Get the names of modules in the given package
Run a function in separate process and return its output.
Return type of run object
Insert the module path into sys. path after the run object.
self. package = run object
= self. profile. function
Replace sysargs with self. run object and self. run args
Sample every frame from the base frame.
Insert a stack of functions into a call tree.
Add a number to every node in the tree.
Recursively formats a tree node and calculates the hash of the node.
Returns the call tree as a dictionary.
Get a profile of the current object
profile the module
Profile a function call
Transform a profile into a list of tuples.
profile the runpy package
Profile module.
Profile the function
Show the guestbook page.
Add a new entry.
Start the statsd server
get html file from root directory
Read other file and return content and file extension
Handle a GET request
Read and process POST request.
Send a HTTP response.
Check if module path is in standard library path.
Record a line of code at the current line number
Generator that yields lines without the standard lib.
Add execution count and heatmap entries to the heatmap
Skip lines according to the skip map.
Calculate the execution time of the profile
Get filename and heatmap for given execution count
profile the module
Profiling function execution
Run all profilers that are present in prof config.
Run a function with profiler.
predict with proba
predict log probability for each sample.
Calculate mean and variance from spmatrix columns.
Counts the number of documents in analyzed docs
Sort a vocabulary by features.
Limit features based on document frequency.
Embed z as a column of features.
Transform a sparse matrix.
Convert to scikit - compatible object
Compute the mean and average of the models in a collection of sequences
). all ( )
Returns the spark of the fitted spark.
Fit the model to a dataset.
Fit the transformer and return the transformed data
Calculate the score of the last num steps
Compute the score of an estimator against a test score.
Clusters clustering on dataset
predict on a RDD
predict on a test set
Check whether rdd is of the expected dtype.
Perform singular value decomposition on the transformed data.
Transform an RDD or RD column to vector space
Yields items from iterator in blocks of bsize
Yield packed tuples from iterator in blocks of bsize
Block a RDD.
Apply function to each RDD.
Get the shape of each RDD.
convert RDD to numpy array
Get bitperm of stat object.
Check if the path is owned by the root user
Read and check config file
read and validate the config file
Execute as shell command
Execute a command and return stdout and stderr
Execute a command over SSH.
Validate the config.
Get request headers.
Returns the url for the current configuration
get url of event
Return the packet as text.
print packet discovery text
Discover Mac OS X and Linux interfaces.
Execute the directive.
Send confirmation to the client.
Invoked when a device sends a push notification
Execute device.
scan devices in settings
Find ledger file.
. run ( )
Load precalculated text measurer from JSON file
Generate all unicode characters supported by the current font
Generate encodeable characters from a list of characters.
Calculate the character to length mapping.
Generate and write a JSON file.
Convolve 2d image with gaussian kernel
Get a gaussian kernel
Convert an image to grayscale
Entry point for the ssim CLI.
Compute the sum of squared differences between two ssims
Compute the similarity between two images.
Destroy the clock
Change code version.
Get status of Raft configuration.
prints the current status to stdout
Get node name from connection
Try to bind the transport if it is not ready yet.
Called when a new connection is received
Callback function to handle the results of a utility command call.
( self. self
Connect to a node if necessary.
Called when the connection to the node has connected.
Called when a message is received from the other end
Called when a connection is disconnected
Add a node to the cluster.
Drop a node from the cluster
sends a message to a node
Add item to the queue
put item into the queue
Get a value from the heap
Attempt to acquire a lock.
) is acquired lock
Release a previously acquired lock.
Set the hosts to connect to.
Create elasticsearch indexes.
Migrate indexes from aggregate to forensic
Strips the metadata from the report.
Save aggregated reports to kafka.
Extract XML from a file or file - like object
Parse aggregate report XML file and return aggregate report data.
Parse forensic reports to csv
Parse a file or email report.
Returns the capabilities of an imap server.
Save a list of forensic reports to splunk
Decode base64.
Get the hostname associated with an IP address.
convert human readable timestamp to datetime
Get information about an IP address.
Convert outlook email to rfc822
Convert a string to a list.
Parse a SOLR report file.
Causes the connection to be drained if it is not currently draining.
Publish a message to a subject.
Publish a message to a subject.
Publish a message to a subject
Subscribe to a subject.
Remove a subscription from the client by session id.
Send a ping to the server and wait for the ping to be sent.
Select next available server
Handle errors from NATS Streaming server
Process an op error.
Return the client connect command
Process a ping from the connection.
Consume one message from the queue.
Process the info dict received from the server.
Flushes the pending data until the queue is empty.
Read packets from the server.
= features. shape [ 0 ]
Load features from images
Calculate Pearson correlation between the two images
dot product of images
Selects features based on feature selector
get the feature order of features in dataset
Classify with multiple options
Fit the classifier and cv to the data
Set the weight of a class for the classifier.
fit using cross validation
Fit the classifier to a dataset
Get a random set of voxels
Get the top words for each topic in the model
Pearson correlation between two vectors
Find the frequency of the given frequency vector
load activations from specified file
create image table
Get feature names
return a dictionary of feature names and counts above a given threshold
Load a pickled feature table dataset.
Save a feature table to a pickle file
Returns the ordered list of features for the given features
Search for features in the table.
Return a list of ids that match the expression.
Convert sparse SDF to CSR
transform foci by inverting the matrix mat
Convert xyz to mat
Apply transformation with given name.
Get a mask for a given layer or stack
Load images from multiple files with a given masker
Unmask data and save as image
Set the logging level.
Parse an address.
Convert a dict to an object.
Get the price for the given ticker
Get bulk news
Send a request to a given REST API endpoint
get bearer info.
Make an HTTP request and return the response.
Get a list of tracks in a spotify album.
Get artist by Spotify ID.
Get artist albums for a Spotify ID.
Get top artists for a Spotify artist.
Get artist related to a Spotify artist.
Get artists from Spotify.
Get a category by id.
Get a list of playlists for a given category.
Get a list of categories
Get featured playlists.
New releases.
Get the artists or users the logged in user follows.
Get the albums of the artist.
Get all albums from the artist.
Return total albums of the artist.
Return currently playing context and track if any.
Return the current player.
Get a list of available devices.
Get recently played tracks.
Replace a track in a playlist.
Creates a playlist with the given data.
Get all playlists in this playlist.
Get songs from this album.
Get all tracks from the album.
Generate a URL for accessing the application.
Get Spotify album by ID.
Get artist by ID.
Get a Spotify track.
Get a user by its ID.
Get multiple albums by IDs.
Get artists by their ids.
Convert a string to an id.
= client )
Returns a URL for the given client ID and redirect URI.
Get the attributes of the current session.
Returns the parameters string of the binder
Build playlist from JSON data.
Return all tracks in this playlist.
Transfer a device to the web server
Request a resource from a HREF.
Perform whois request.
Try to find the month that contains the data
Walks the current directory and updates urls
Is the current version greater than the one provided
Return True if this is a development version.
Check if this project requires deprecation
Save a backup of the current configuration.
Restores the backup content.
Check if line is to ignore.
Parse the options and return a list of domains
Extract base from url
Attempts to extract the decoded version of to format.
Do HEAD request and return status code.
Return access token if access token is valid
Check syntax of domain input
Check if the given domain is a subdomain
Validates an IPv4 address using syntax
is ipv4 range
Check syntax of a URL
Loads the configuration from the current directory.
Check if a random number is safe.
Download entry management url.
Entry management url. Download if necessary.
prints the header and exits the program
pyfunceble. file. decision calls this function to decide what to do with the current
Choose a domain and decide what to do with it
Use url to decide if url should be displayed or not.
Colorify logo.
Extract the domain from a domain string
Extract the domain name from a file.
Return a list of domains for which self. file has been filtered.
Returns a list of URLs for each file in the archive
Get status and expiration from status name.
handle a catched python file
Get structure from JSON file.
Create a directory and its parents.
Deletes unneeded files.
Set path to configurations.
Installs a production configuration
Install iana.
Install PSL package.
Download and install directory structure file.
Merge upstream config with new config.
Load the config from the user.
Split a version number.
Check if upstream versions match local version
Check if path is a clone of another path.
Interpret non existing interned string.
Get host file directory of the pyfunceble host.
prints a unified version of a file
prints the current status of the machine
Returns True if inactive domain does not produce file.
Add one or more extensions
Load json file into intern namespace.
Return the standard string version of the element
Loads the database from the pyfunceble module.
Return the referer for the given file extension
Yield tuples of extension and referer.
Update ianadb with current content of source file.
Tries to mine the history of url with pyfunceble. configuration.
Retrieve data from JSON file.
Backup the current translation to the JSON file
Add a list of elements to the dictionary.
remove bare from str
Return a list of mined pyfunceble instances.
Mine and add to blacklist.
Return JSON content from file.
Write json content to file.
Write record to whois file.
Set expiration date.
Referer not found.
Write before header.
Print header of table.
Constructor of the size of dictionary.
Get file size from header
Colorize the output based on the template
print json data to output
print data to terminal
Calculate the time difference between start and end in seconds.
Format execution time as a string.
Return list of files to delete.
Return list of databases to delete.
Delete all files and databases in the database.
Return the hash of the file.
Hash data with algo.
Returns a dictionary with the hash of the specified algorithm
Execute shell command and return output
Removes key from dictionnary.
Rename dictionnary key to rename.
Merge two dictionaries.
Write the dictionary to a JSON file.
Write this section to a YAML file.
fix path function
Write data to file.
Returns the contents of the file as a string.
Returns a sorted list of unique strings
Merge two lists into a single list.
Returns a list of items that do not match the regex
Perform a regex match of the string
Perform replacement operation on input string
count the number of occurences of the status
Calculates the percentages of the interned string based on the num.
Check if url is valid.
Check if a domain name is valid.
True if this is a subdomain of the given domain.
Get syntax status.
Reformat historical formating error.
Retrieve data from the inactive database.
Backup inactive db to json file
Get timestamp from database if possible.
Get the content of a string.
Check if a function is present in the configuration.
Retrieve whois data from the database.
Backup your database to a JSON file.
Check if user is in database.
Is time older.
Get expiration date of token
Set travis build permissions.
Executes travis if Travis is enabled.
Return True if namespace is found.
Do whois server on whois server and return response.
Get url from status.
Get the referer for this file.
Get the current object
Return a list of standard library paths.
Returns a generator yielding all standard package names.
Find unused import line numbers.
Find unused import module name.
Yield the line numbers of star imports in messages.
Find undefined name and module name for import star
Returns the line numbers of unused variables.
Find duplicate key line numbers in messages dict and yield each duplicate line number
Check source code.
Extract package name from a line of text.
Multiline import checker
Return whether a line is a multiline statement.
Filter from import statement to remove unused imports.
Break a line up into a list of imports.
converts a list of messages into a dictionary by line number
filter undefined imports
Filter duplicate key function
Returns True if the given line contains the given key.
Return True if the given value is a literal or name.
Generate useless line numbers based on tokenize. generate tokens
Filter useless pass lines.
Get the indentation of the given line.
Get the line ending from the given line.
Filter source code removing useless imports and removing duplicates
Split a comma separated string into a set
Return True if filename points to a Python file
Is exclude file.
Deserialize this payload from the given input stream.
Write a LeaseResponse to the output stream.
Write the cancel request to the output stream.
Deserialize this cancel response from a byte stream.
Creates a name from name value and name type.
Read the digest from the input stream.
Write the KeyInfo to the given ostream.
Read the application specific information from the input stream.
Write the application specific information block to the stream.
Create application namespace with application specific information.
Read derivation parameters from a binary stream.
Write the derivation parameters to a file - like object.
Read a GET request from a file - like stream.
Write object to output stream.
Read method for a get response from the kim.
Write the payload to the output stream.
Write signature verify request to output stream.
Read signature verify response payload from the specified input stream.
Builds an error response.
Process a template attribute and return a dictionary of attributes.
Retrieve attributes from a managed object.
Set the given attributes on the given managed object.
Set attribute on a managed object.
Is the given operation allowed for the given policy?
Write the contents of this KMS request to the output stream.
Create a new key from a secret.
Set the value of the given setting.
Load the configuration from a file.
Combines all the bitmasks in a list.
Get a list of cryptographic usage masks.
Read KMIP long integer field from input stream.
Write this integer to the given output stream.
Check if value is a valid integer
Read the big integer from the input stream.
Write this big integer to the specified ostream.
Validate the field
Validate the field
Read data from input stream.
Write the value to the stream.
Write this boolean to the given ostream.
Checks if the value is of the correct type
Read the interval from an input stream.
Validate the value and type of the interval
Check that the credential is valid.
Check that the secret is valid.
Check that the value and opaque type are valid values.
Convert attribute name to tag.
convert attribute tag to name
Get bit mask from enumerations.
Get enumerations from bit mask
Check if potential mask is a bit mask of enumeration
Write this template to a kmip file.
read from the input buffer
Write the KeyPair to the specified output buffer.
Read method for a get attribute list request.
KMIPv2 get attribute list request.
Write method for the GetAttributeListResponse payload.
get json files in directory p
( ) trigger = Trigger ( )
Get the certificate from a connection
Get the extended key usage from a certificate extension.
Get common names from certificate.
Get the client identity from a certificate
Read data from the given buffer.
Write the create request field to the output buffer.
Read method for creating response payload.
Write the message to the output buffer.
Convert an object to a string representation
Read encrypt response from the stream.
Write the object to a byte stream.
is attribute supported or not
Check if attribute is deprecated.
Returns if the given attribute is applicable to the given object type
is attribute multivalued
Read check response payload from the given input stream.
Write CheckResponsePayload to output stream.
Read the attribute reference from the specified byte stream.
Write the attribute reference to the output buffer.
Reads attributes from a byte stream.
Write the attributes to a byte stream.
Read a nonce from the specified input stream.
Write the nonce to the output stream.
Read data from a binary stream.
Write the username and password to the output stream.
Write the credential to a byte stream.
Read credential from a binary stream.
Write the credential to a byte stream.
Read a MAC from a byte stream.
Write the MAC to a byte stream.
Write the contents of this KMIP packet to the output stream.
Read key wrapping specification from a binary stream.
Write this key to a file - like object.
Read the extension information from the input stream.
Write Extension information to the output stream.
Read Revocation reason from the input stream.
Write a revocation reason to the stream.
Validate revocation info.
Read data from the given buffer.
Write the object to the output buffer.
Write the contents of this KMIP packet to a file.
Read the profile information from the input buffer.
Write the profile information to a buffer.
Write to the output buffer.
Shut down the node.
Write the locate request to a file.
Read method for parsing locate response
Write the message to the output buffer.
Create a rsa private key from the given raw bytes.
Read method for a sign response from a byte stream.
Write a SignResponse to the output stream.
Read a usage allocation request from a binary stream.
Convert a protocol version to a KMIP protocol version.
Read data from a binary stream.
Write this KMIP packet to output stream.
Reads authentication from a byte stream.
Write the authentication credentials to the output stream.
Read data from input stream.
Read details of certificate from the input stream.
Write the certificate field to the stream.
Read the ArchiveResponse payload from the specified input stream.
Write the payload to a byte stream.
start the thread.
Read RekeyResponsePayload from input stream.
: return : bool of whether profile
Get attributes of the item matching the UUID and attribute names
send get attribute list request
Send a query to the API and return the response
Open the connection to the server.
Close the connection to the memcached server.
Register a managed object with the portal.
Get attributes of a user.
Activate a KMIP tunnel.
Build and return a cryptographic parameters.
Build and return an encryption key information object.
Builds the MAC signature key object.
Builds the key wrapping specification.
Build common attributes for all operations in the cluster
Build name attribute.
Read method for query request payload.
Write the query block to the output buffer.
Read method for a get attributes response.
Write the message to the output buffer.
Get a single entry point by group and name
Get all endpoints in a group ordered by their name.
Get all entry points in a group
Load and return object from module
Create an entry point instance from a string.
generate controller and test files
Rewrite src file with project name and copy to dst file.
If the field data contains a valid url convert it to string.
encode an object to json
Decode a JSON string into a dict.
Return an absolute URL for a given endpoint.
Add a user id to the session
get current user from session
Create a new Flask application
Write a dataframe to a CSV file.
Read data from CSV into pandas DataFrame.
Serialize a Pandas dataframe to the writer.
Deserialize Pandas dataframe.
Return the contents as a URL
) Open this dataset for reading.
) Retrieve the intermediate dataset as binary
as plain text
Converts the stream to a pandas dataframe
Returns the intermediate dataset of a port.
Get all experiments in a workspace.
Get all datasources in workspace.
Get data source.
Find all globals names used in code
Creates a copy of the pen
Lookup a color scheme.
Draw this shape to the given cr context.
Calculate the cubic bernstein extrema between two points
Bernstein quadratic model.
Build choices list from sitetree template.
Initialize the cache for the given type and empty the cache if it exists.
Empty the cache and initialize the object.
Get a value from an entry.
Update the value of a key for a given entry.
Set entry key to value in the cache.
Initialize current page with context
resolve tree i18n alias
True if the current app is admin False otherwise
Calculate depth of item in tree
Get tree item by alias.
Get the URL for a tree item.
Resolve sitetree and get sitetree items.
Get attr of current page
Get ancestor level.
Check access of the item.
Generate a sitetree and return it.
Render children of parent item
Get children of current node.
Update tree item. has property
Filter a list of admin items
Get ancestor item by given alias
Recursively climb up the tree to the current branch.
Resolve a variable expression in the current page context
Generates a sitetree template tag with the given content.
Processes child nodes of a sitetree - like structure.
Generates a sitetree breadcrumb navigation structure.
Render a tree items with a given template.
Compile a tree for a specific tag.
Get model url name.
) return tree class
Redirect handling for HTTP redirects
Redirect to the specified URL.
Add a new item to the list and redirect back to the parent.
, obj )
Add the parent field to the form and create a choice field for the parent form.
Get tree instance.
Move an item within a tree.
Saves the tree and saves the model.
Get admin urls.
View to dump the tree.
Import sitetree module for the given app name.
Get model class by name.
Create a configuration string from a mapping.
Loads the template from a Python file.
Reads a TOML file and creates a string from it
Loads a yaml file from a given object or path.
Create HTTP headers for a new span.
Get the current context for this span.
Push zipkin context to tracer and start the span.
Stop the service and add the span to the tracer.
Update binary annotations and tags
add binary annotation to client endpoint
Override the span name.
Make a copy of an endpoint with a new service name.
Create v1 span from current span.
Encode a protobuf list with spans.
Create Zipkin Span from a Trace.
Convert hex to bytes
Converts ZipkinSpanKind to zipkinSpan. Span.
Convert endpoint to zipkin pb2. endpoint
Convert annotations to zipkin pb annotations format.
Create an annotation with the given values.
Create binary annotation.
Create Zipkin endpoint object.
Create a copy of an endpoint with a new service name.
Build an annotation list from a dict.
Builder for binary annotations.
Create a span using the Zipkin library.
Converts the given thrift span to bytes
Encode a thrift object list as a Thrift formatted str.
Detect span version and encoding of a thrift message
Convert spans to the specified output encoding.
Push zipkin attributes to the stack.
Encodes a span to the Thrift binary format.
Create JSON endpoint from Endpoint object
Encode a span to Zipkin HTTP span format.
Decode spans string into spans list
Convert endpoint from thrift format to api format.
Decodes a list of thrift annotations into a dict.
Convert thrift binary annotations to tags local endpoint and remote endpoint.
Decodes a thrift span to a python span.
Convert trace id to string.
Convert an unsigned long to a lower hexadecimal string.
writes a long value to the stream as hex bytes
day of the month if date is too large
Convert a tag to a transaction code.
If the tag has an IPH id remove it from the tag dict
Method to set the number of transactions for a tag.
Join the lines in a string
Parse response body as JSON if the body is in JSON format.
Log limited waiting time
Get info of a bot.
Get list of bots.
Read and return next term from packet.
Write message to the stream.
Decode a string.
Encodes a unicode term to a zlib encoded string.
Add a source address to the multicaster.
Send all pending messages in the queue
Set remote service hello callback filter.
stop the server
remove all local services
Search for services on the connected device.
Create a SOAP message from the given WSGI environment.
Discover and execute a python module.
Get the manager linked to the through model
( model ) ]
get all child m2m relations
Overrides the save method in ClusterableModelBase. Saves all the relations and m2
Unique validation Loops through all forms and validates each one against all unique fields
True if any form has changed
Creates a new address with a valid checksum.
Generate checksum.
Prompt for seed.
num = index + num )
address = address
Create an iterator using the current seed
Create a sponge with the given index.
absorb a set of trits to the state
Add the current state to the given trits.
Apply the truth table to the state
Multiply two trits and add them together
Convert an integer into a list of trits.
add two trits
add two trits and carry
Outputs the seed of the RiveScript simulation
Find transactions on the device.
Promote a transaction.
Resolve a URI into an adapter.
( payload, )
log a message at the specified level with context
Send an HTTP request to a URL and return the response.
Interpret the response from the API.
Add digest to the sponge
Get address from digests.
Create an iterator for the given range of addresses.
Convert a digest into an address.
Generate a new address from the given key iterator.
returns a list of transaction objects matching the given filters
returns all the addresses used in a range
Get bundles for the given transaction hashes.
Get codec info from trytes codec
Get codec info.
Convert a bytearray to a trytes bytearray
Decodes a bytearray or bytearray - like object.
Find addresses using the address generator.
Add a route to the router.
Create a bundle from a string of trytes.
Returns the JSON - compatible version of the message
). strip ( ).
Boolean method to set the is confirmed attribute of all transactions.
Return a list of messages.
Group transactions by address.
Recursively discover commands defined in given package
Executes a request.
Apply a filter to the given value and return the filtered result.
Return a job URL for a given job ID.
get list of errors from validation
Check if the input is valid.
Returns a list of strings that can be used to validate the bundle
Get bundle signature errors.
Get the signature error for a transaction group.
Traverse the bundle with the given hash.
Start an interactive Python interpreter
Returns a random string.
Get the digest of the bundle.
Sign the transactions in the bundle.
Produce a pretty - printed representation of the object.
Add the given trits to the hash and update the signature.
Add context to exception.
Securing level of security
Increment the legacy tag.
Return the tag of the most recent txn.
Add a transaction to the block
Finish the transaction list by calculating the signatures and committing the transactions.
Sign all inputs with a given key.
= addy. address num
Convert value to standard unit.
Decompress g1 compressed string
prime field inverse algorithm.
load from json file
Split the text into a list of words.
Return all categories except special ones.
Returns a random component of colour
Create a builtin timescale by name.
Read components from an image file.
Convert the table to a CSV string
The maximum width of the table
Get decor for component c
Plot all the datasets in the list
Decorator to mark deprecation warnings.
process a text row from columns and return a dictionary
Parse canstrat text and return a dictionary of lists.
Unique version of the box including primary value and thickness.
Construct intervals for a set of values from a list of top values
Clean longitudinal data
Create a set of intervals from a Petrel log file.
Load a data file from a canstrat file.
) copy the line
Write the list of striplog to a CSV file
Write the trajectory to a CSV file.
overlaps.
Find all indecongruities.
Remove a number of items from the StripLog.
Anneals the strip in z - order
Fill in gaps with specified component
Return a list of intervals in common
Intersect with another interval or a set of intervals
Merge overlapping segments into a single segment
Invert the order of all elements in the list
Crop the log file to a specific extent.
Run a series of tests and return the results.
Get the value of a field.
Get a list of jobs.
Parses the given HCL and returns its content as a dictionary.
Update token by id.
Get a list of allocations.
Fail a deployment by ID
Pause a deployment
Enable or disable tasks on a node.
Drains a swarm node.
Check if a node is eligible and ineligible for creation
List files in account.
Get content of file or URL as a stream.
Return the file stat of a file or directory.
Join agent to the swarm.
Update the servers at the given addresses.
Force leave the given node
Get all nodes matching the given prefix
Get a list of all evaluations.
Get list of namespaces with optional prefix
Register a job.
Add a job to a workflow
Dispatch a job.
Revert a job to a previous version
Revert a job to a previous version
Remove a job from nomad
Get the current configuration from the API.
Delete a peer by its address.
Get all deployments with a specific prefix.
Get a random value for a given type.
Get mutator function for given object and type.
Return a random attack
Return the unicode representation of the buffer
Serve a custom HTML file
Serve the request and yield the fuzzed result
Spawn a process and wait for it to finish
Get output from process.
read from device and close process
Terminate the process.
Start the worker process.
execute a command and return the output
Build a random string.
Build and return a string.
Build and return the formatted quote.
Build a random value from this builder.
Build a new opt gram
get the definition from the fuzzer
Build a single gram
Shutdown the bridge and wait for it to finish
Spawn the process and monitor the return code.
Monitor the process to see if it is running
Return a random float in the range [ a max )
Returns the fuzzed version of the JSON data.
Get JSON fuzzed.
SIGTERM handler for SIGINT
Quit the server process
Kill the process if it is still running.
Resumes the playback
kill the currently running process
restart the currently running process
Return a list of skype events from the API.
Set user mood.
Set user avatar.
get meta data for a url
Return a SkypeContact by id.
Retrieve a user by its ID
Return all bots from skype
Return a bot with the given id.
Search skype for users
Return all Skype invite requests for this user
Create a Skype instance from raw data.
Merge another Tag into this Tag
Merges the specified object with the current one. If the object does not yet exist it is
Read user id and token from file
write token to token file
Verify the token if it is valid.
refresh skype auth data
Return current user id.
get Skypes registration token and store in self. tokens
Populate self. endpoints with the current list of endpoints.
Check if a user is logged in
Authenticate a user by sending a token
send a config to the device
Ping the device.
Get recent chats.
Return a chat message by id.
Create a user.
Extract user id from url
Convert a chat URL to a chat ID
Convert unicode to str
Detect a format handler for a text.
Parse text with given format handler and extract metadata.
Return a dict representation of the document.
) Load a yaml file.
Export metadata to yaml
Export metadata to JSON
Returns a tuple of the match and the string to be matched.
Returns a list of items in the string
Returns a list of sublists of the current list.
Converts the pattern to a new start string.
Construct list of argument objects from the lststr.
Returns list of lists referenced by arguments
plant trie from list of strings
Find the longest matching pattern in a trie.
Check index.
Insert string at given index.
partition char in atomic string
Return the subspans of this node type
Shrink the graph in place from rmstart to rmstop
Update the span of the message if it exists.
Find the nesting level of this node
Get the shadow of this string.
shadow this string
Return a mapping from type to spans
Pretty print the input string.
create list of parameters
return a list of parser functions
Return list of templates for this string.
Return wiki links of this node.
Generate a list of comments from the node.
The external links of the text
The list of tables associated with the string.
Generate all possible subspans of a given type.
Find all ancestors of the span of a given type.
Get the parent node of this node.
Return the mode of a list
Get argument by its name.
Remove duplicate arguments from self. arguments.
[ argument ] )
Does the function have the specified argument.
Delete argument by name.
Convert a CRS code to a string.
Find an ellipsoid by name.
Open and parse a CRS from given URL
create a GeoJSON instance from a file
Creates a CRS from an epsg code
Convert Esri code to geographic coordinates.
Create a CRS instance from a SRS code.
Create crs from text
to ( out )
Read a VLR record from a binary stream.
parse vlr list of geo tiff keys
parse geotiff keys from vlr
Returns the signedness of the given extra dimension.
returns the id for a given extra dimension type
Create a new point record by copying data from another point record.
Copy the fields from another record to the same record
Append zeros if too small
( ) )
Create a string of zeros of the specified count of points
Read point data from a stream.
Create a point object from a compressed buffer.
%s x dimension
%s y dimension
of self. z
Add an extra dimension to the data
Write the current VLRs to the output stream.
Write the image to a file.
Build point formats dtypes from point format identifiers and dimensions.
build unpacked numpy dtypes for all point formats
Convert numpy dtype to point format.
Returns the minimum file version for the given point format ID.
Check if point format id is compatible with file version
Extract the vlrs of a given type.
Read num to read vlrs from data stream.
Check that all las files have same point format id
Check that all las files have same dtype
Raise error if file signature does not match
header of file
read vlrs from the file
Read points from the file.
Read points from compressed data.
Read internal packet.
Read evlrs. evlr object from file
Print a warning if we are not at the expected position
Create a las data object from a las header
Merge multiple LAS files into one.
Write then read again from las file
Get creation date of archive.
Set date for creation.
min of the vector
Set the minimum values of the axes.
max of the Vector
Set the maximum values of the axis.
of all scales
Returns the x y and z offset
Read the file version from the stream.
Convert a header from one version to another.
Unpack an array with a mask to a given dtype
Return a list of dimensions that have not been lost.
A mapping from dimension name to a tuple of sub fields
( num ) )
in self. dimensions for dims in
Command line entry point.
Calculate the CRC of a list of bytes
print hex formated data
Verifies the response and strips the string
returns a list of set bits in r
Generate a QR Code
Demonstrate using async satel.
Connect to a serial port.
Send a monitoring request to the VW remote.
Disarm the server.
Clear the alarm.
Set the output of a machine.
Keep alive the connection
Monitor the status of the device for alarms.
Close the connection.
of the user
guesses the type of a file
Get file id for path.
get notebook by path and content
Create a notebook model from database record.
get directory or raise error
Extract notebook and file model from a list of database records.
Create directory model from database record.
Create a file from database record
Save a notebook model to disk.
Save file to disk.
Rename file or directory.
Delete file or directory
Ensure the user exists in the database.
Purges a user.
Create a new directory at the given path.
Determine if a table is in a given directory.
Delete directory from the database.
Check if a directory exists.
Get all the files in a directory.
Get all the directories in a database
Return True if file with given user id and api path equals given path.
select file from api path
Files default fields
Get file from database
Get file uploads.
Get the ID of a file.
Check if a file exists.
Rename a directory.
Save file to database.
Purge remote checkpoints.
Reencrypt the content of a row with given id using given decrypt function.
reencrypt content of user id
Derive a single fernet key from a password and user id.
Get the name of a LIKE or cast column
Convert row to a dictionary with no content
Convert row to dictionary with field names as keys and content as values
Create a checkpoint with the given notebook and path.
Create a checkpoint with the given content for the specified file.
) Delete checkpoint from database.
Get content of a checkpoint.
= path )
) Rename all checkpoints.
) return ''
: return :
Resolve a path using the api dictionary.
Join a prefix to the model
Called when managers are changed.
Get file or directory listing from the API.
Normalize a api path by removing leading and trailing whitespace.
Split a file path into its directory and file name
encodes a notebook to base64
read a notebook from base64
Decode a file from a base64 - encoded string
Decode from base64
Return a list of absolute paths to directories starting from the given path.
Create a checkpoint for a specified user.
Separate directories and files from the models
Recursively walk a list of directories.
, dir yield file
Files - > content dictionnary
Reencrypt the content of a single user
Unencrypt all users in database.
Unencrypt a user content.
Yield alembic ini filename.
Upgrade to a new revision.
Convert block to internal value based on serializers.
Adds instance to embed list
Load instances from database.
Insert instance into embed type
) return self. data )
Validate widget and fields.
Admin page for the API docs
Return a JSON representation of the record
Hide all authenticated fields
Remove fields from fields list from self. fields
Overrides the default get method to add versioning and previewing.
Get the queryset to use in the view
Get the queryset to use in the view.
Get boolean attribute of null boolean field.
Raise an exception if the widget is not valid
zone must have a valid id or name
Check if id is a valid UUID.
Get permissions of the user
Add or remove permissions from groups
Validate the author field.
Save widget and data
Get the submitted data as a dictionary.
Return prepared data from self. data
Render the template with the given data.
Get settings for this integration.
Get list of pages from facebook
Get integration settings.
Update settings for a given integration.
Create a new user with the given invite.
contents )
Render a zone.
Save image as featured image.
save subsection to article with given id
Returns the extension of the image
Returns the url for the medium.
Automatically set the image name and save the image
Save thumbnail to storage
Get the connection string for mysql
Get a bandwith limited stream.
Read a number of bytes from the stream.
Consume a amount of amt for a request token.
Process scheduled consumption
= None )
Record the current consumption rate
Poll for transfer completions.
Get callbacks from transfer s list of subscribers
Get a dict with only the whitelisted keys
Decrement the counter.
Finalize the callback and call the callback if count reaches 0
Check if a file is a special file.
Acquire an exclusive lock.
( tag )
Adjust chunksize according to file and chunksize
) return data
Get download output manager for the given transfer.
. encode ( )
Returns a list of dicts used to write to the file starting at offset.
Return True if fileobj is seekable False otherwise.
Shutdown the application gracefully.
Cancel all pending transfers.
Wait for all the transfer coordinators to finish.
Create a file - like object from data.
Get upload input manager for a given transfer.
Set the exception for the transfer.
Set the result of the future
Set the exception of the future.
Get the result of the job.
Cancel the future.
Submit task to executor and register future.
Add a done callback.
Add a failure cleanup function
Runs cleanups and callbacks and sets done to True
Upload a file to a bucket.
Download a file from S3
Get step from decorator args.
Find step and refactor it.
Extract step from decorator args.
Find the refactoring step and refactor the functions
Update a membership
Delete a membership.
Get catfact from CatoDB.
Post a message to a room
Delete a membership.
Validate base url
Check if given string is a valid web url.
Open local file at given path.
Check that o is one of the acceptable types.
Create a dictionary from a list of dictionaries with only none values
Check the response code
Convert json data into dict.
Parse a webex teams date time string.
Creates a new game.
Update an existing room.
Delete a room.
Get a list of organizations
Get created date from JSON
Get access token from environment variables.
Update a webhook.
Deletes a webhook.
Set the wait on rate limit.
Update request headers.
Returns the absolute url given relative or absolute url
Send GET request to given URL.
Get a list of pages from a URL.
Send PUT request to given URL.
Send a DELETE request.
Create a new token for a subject
Delete a message from the queue.
Get a person object by their ID
Delete a person by their id
Returns the current logged in user
Get a list of objects from the API endpoint
Creates a new object in the collection with the given name
Updates the team with the given id with the given name
Delete team by team id
Serialize a tuple or dict into a tuple.
Parses last activity from JSON response
Create new message after webhook post
Returns the public url of the ngrok instance
Delete webhook with a specified name.
Create a ngrok webhook
Creates a new ngrok webhook
Read telegrams from the serial port.
Reads and parses a serial connection.
Create DSMR protocol.
Creates a DSMR serial connection
Create a TCP reader.
Called when data is received.
Called when the connection is lost
Parse and process the received telegram.
Parse a telegram.
Get the python version from a python file
Check if python version is in specs.
Find all packages under the given directory
Call shell command with arguments.
Get data files for given data specs.
Get all files in a directory and its subdirectories.
Compile a glob pattern.
Explode a path into its parts.
translate a glob pattern into a shell pattern
Join translated parts with os sep class
Translate a glob pattern into a string.
Truncate table.
Write table to the database.
Add index to table.
write triggers to postgres db
Add constraint to table
, row ) = table.
( table ) )
( table ) )
( table ) )
Returns the number of elements in the queue
Add a new record to the queue.
Start execution of the task queue
Build extra predicate.
Simple JSON datetime serializer.
Reconnect to the database.
Execute a query and return the first row or none.
Return a connection to the database.
Benchmark benchmark function.
Return a connection to the aggregator
lookup error code by errno
( self )
= e. args return str
Construct a simple expression from the given fields.
Create an update statement.
Connect to a database in the database.
Destroy the database by deleting all tables.
Start a new step or finish a finished step
Stop a previously started step.
Load the steps from a YAML file.
Disconnect from the server.
Reconnect to the device.
Connect to the websocket.
Called when websocket connection is received.
Stop all timers
Send a ping to the websocket.
Cancel timer and reconnect if pong is received.
Send request to API
remove the paused message and resubscribe
The system event handler.
Error handler for the websocket connection
= ts )
Resubscribe to the channel
Handle authentication for this channel.
data, ts
Set timestamps of channels last update
reset the connection to the server
Retrieve the candles for the specified pair
Set bitfinex config
Subscribe to a currency pair.
Unsubscribe from a currency pair.
Subscribe to an order book.
Unsubscribe from an order book.
Subscribe to a raw order book.
Unsubscribe from a raw order book.
Subscribe to trades for the given pair
Unsubscribe from a pair of trades.
Subscribe to a candle.
Unsubscribe from a pair of candles
Authenticate to the channel
Cancel an order with optional order identifiers.
Called when a client sends a command.
Called when a device command is received
Called when a notification is received.
Create a device type
Update device info
Get all clients with specified status.
Get a list of configs.
Create a new DME with provided data.
Update a schema definition.
Disconnect from the server.
Callback for when the client receives a CONNACK response from the broker.
) : unsupported message
Called when a device event is received
Process device status event.
Called when the client receives a STATUS message
Get a specific event by id
Get all events for a device.
Make API call to datapoint api
Initiate a management request
Get the status of the management service
Close the file and destroy it.
Get the bounds of the region. If coordinate interleaved is none use the interleaved
Load byte array to string.
check return result of function call
Loads and returns the application.
Runs the gunicorn server.
Return the native representation of the image.
Crops and saves cropped image
Processes the image by generating a thumbnail and saving it to a file
Invert and save an image.
Returns the python representation of the input data
Processes and saves the placeholder image.
if file else None
Update ppoi field.
Add the sized image centerpoint and the admin file widget
Returns a string representation of the field.
Auto - discover INSTALLED_APPS dynamically
Remove the sizer registered for attr name
Unregister a filter.
URL of the image.
Build filters and sizers for this field
( filename ) ) : str
( filename ) ) of folder
Get sized root folder of filtered folder
Delete matching files from storage
Preprocess gif data
Preprocess JPEG data
Retrieve image from path to image
Save image file to disk.
( num + 1 ) )
Create a new resized image and save it to disk.
Render the widget using the template name.
Build the context of the input widget.
Build a set of attributes from a set of base and extra attributes.
Get resized path
Get filtered path
validate size keys in versatileimagefield
get url from image instance by key
get rendition key set
Formats an instruction in human readable form.
Format the body of a function body.
decode bytecode into an iterator of Instructions
Decode a module string.
create a new connection with the ssl config
Read result from reader.
parse agi code check output
Check AGI Code and response
Reset all instances to their default values
] Return instances as a list
Get the distro metadata
Get primary keys of a model
Deserialize a value into a related model instance.
Get existing instance from database.
Get declared fields for the given class and args.
Load object from data.
Split the model kwargs and the association attrs
List all snapshots
Restore a slave environment
Initialize the indexes at each epoch
Textacy Cleaner
Apply func to each element of data in parallel.
Processes text with tokenizer.
Process text with parallelism.
Generate doc length stats and store in self
Return a pandas dataframe with the counts of each token
Return list of possible types given a type.
Parse interfaces docstring
get the inverse of the word
Dedup or undup with rollback
Creates a copy of the current object
Returns a copy of the current node
Check equality of two mappings in the same order
Return a generator yielding the inverted keys and values of arg.
Clear the contents of the object.
Moves a node to the end of the simulation.
Write text to a temporary file and return its name.
Merge parsed arguments into a config.
Load address books.
Create a new vCard or edit an existing one
Print birthdays of the vCards in the given list.
Search for phone numbers in the supplied vCard list
List vCards.
Prompt user to modify a vCard with another vCard.
Remove a vCard from the vCards.
Source a vcard file using an editor.
Merge vCards from one user into another.
Get action by alias.
) Create a new contact object
) Create a bundle from a file
Create a contact from user input
Create a new contact from an existing contact and a new input
Get a part of the name list.
Add categories to the vCard.
Parse type value.
Convert a list to a string.
Convert a string to a date.
compare two uids and return the sum
Yield all contacts matching a query.
Search contacts by contact name
Get a list of contacts by UID
search for user names or UIDs
Return a mapping of short uids to contacts
Get short uid
Find vCard files in the path
Load vCards from the server.
get a book by name
Returns a map of arch to arch tuples
Return a dict of architectures available to the current platform
Guess the type of the keyword argument based on the type of the value.
Replace the query with another query using the given kwargs.
Get the first item in the query
delete blocksize items from the db
Emulate prefix lua.
Estimate the number of items in a lua table
Return the number of records that match the filters
Returns a connection for the given object
Return the full text representation of a value.
Add an object to the known list
) or None
Run the lua script and raise any error or return value
Save changes to the database.
Delete a record from the database
Retrieve one or more model instances.
Open a semaphore file and return its handle.
Send result back to worker.
Add a call item to the queue.
Adjust number of workers and start thread if needed.
Start the process with the given initializer.
Duplicate file descriptor
wait for all work items to be finished
sets process properties from a dictionary
Close file descriptors in keep fds
recursively terminate a process
recursively terminate a process
Wait for processes to terminate and return exitcodes.
Format a list of exitcodes as a string
Spawn the process if not already running.
An event processor that outputs events to the console
Split a string into a list of arguments.
Returns a list of tuples containing the frame and line number of the call stack
Run a list of hooks against an object
forget the frame and reset the stack
Get int from python interpreter
Processes all the commands in the core.
Add a command file to the queue.
Get the next token from a string.
Print error message with prefix.
Read a line from the input.
Close the connection and reset the state
Disassemble bytecode from a Python code object.
Count frames in a frame
Return the call function name for the given frame
Prints the stack trace of a processor.
Given a prefix return the name of the subcmd if found else return None.
Display the short help for the specified subcommand.
Add a sub - command to the parser.
Call subcmd name with arg
Show the available commands in a given category.
Get line number filename and line number and display it.
Try to find a frame that has been debugged.
Return arg as an integer or default.
Set the value of the setting.
Sets the value of the setting to the given integer.
Show boolean on off switch.
Show the value of the setting.
Show the value of a setting.
Check if the given line contains a def statement.
Check if the given line contains a class definition.
Quit all threads except the current thread.
Set the default bg
Is the color a dark rgb
Return the frame signature as a tuple.
Returns all available display names.
Convert a frame to a string of text
Read a message from the server.
Display a debug frame.
Get the frame and thread ID from the position string
Pretty print an array.
Lookup a signal name by its absolute number.
Lookup a signal from its name
Returns a canonic signature name for a given number.
Set a signal replacement. signum must be one of sys. signal_handler or sys. signal
Check and adjust all sighandlers if self. check is False
print info about a signal
Process signal arg.
handles print statements
Called when the signal is sent
Get module name from filename
Search for filename in any of the directories
return full path to py script
Get the names of all python files in the caller directory.
Write a message to the output
The main method called when the core is running.
Returns a string with the formatted commands in a table.
Close the connection and the underlying connection
write a message to the TCP server
Returns a list of complete identifiers.
str print ( )
Add frames or functions to ignore.
returns absolute path to canonic file
Returns the filename of the main py file or none if mainpyfile is None.
and self. trace dispatch )
Check if we should stop here
Set next step to the given frame
Prints the stack trace to the screen.
Delete a breakpoint from the list.
Delete a previously set breakpoint
Enable or disable all breakpoints
Enable or disable a breakpoint by number
Delete all breakpoints triggered by a line number
Open the file - like object inp for reading.
Read line from the input stream.
Write a confirmation prompt and read a reply from the stream.
Submit a query and add it to a future
Restore original login
Load a module and check if it has a given attribute.
Generator that iterates over all the documents in the collection.
Transcode a JSON file to a stream.
Convert dates in a stream to specified date format.
Convert date from string to datetime or float to timestamp
detect file encoding
Generator that yields JSON lines from a file or string
Transcode a file to utf8
open a csv file in python 2 and decode header
Read CSV file and yield dict.
Entry point for the transcoder script.
Save token to a file.
Send a request to the API.
HTTP DELETE method
Returns the root url of a url.
Save token to file.
Send a request to the API and parse the response as JSON. If the response contains an error
POST data to the API.
Get raw response from the API.
Request raw data from the API.
print csv format
read params from json body and params list
Simplifies a doc dict.
Upload docs to the server.
Upload documentation to Google Docs.
Upload documents to the Luminso server.
Upload a text file to the server.
main entry point for the script
Create a new instance from user credentials.
Send a POST request with a random user agent to the session
POST login page.
Get data from the service.
Prepare the page for rendering.
Initialize the view for the current company
render the template for the current request if not websocket
Called when a message from the browser is received.
Update menus of current menu
Create a list of default handlers for the site.
Called when a message is received from the browser.
) str = change
Create the widget for this widget.
Initialize the widget
Destroy widget and remove from parent
Insert widget when a widget is added
When a widget is removed from the widget list
Generator yielding all child widgets
Set attribute of the widget.
Update proxy attribute
Notifies the tree that the document has been modified
Executes an xpath query against the binder and returns a list of nodes.
Called when the component is initialized
Set source from html source
Remove all children from mode and refresh items
When a block is observed remove all children blocks and refresh items
Observe the children of this block and insert them into the parent block
given path components
Write error message to stderr and exit with an error code.
Parse a string and exit with an error code.
Get a product by its name.
Send a POST request with a new session.
Reset the store of the current token and return the new token
Search for stores by search term.
Set the delivery system for a store.
Get a menu from a store
Add an item to the basket.
Add a pizza to the basket
Add a side to the basket
Remove an item from the basket
Set payment method for invoice
Process a payment using current session and return the result.
HTTP GET operation.
HTTP POST operation.
Make a call to the API and return the response
Append a menu item to the menu
Add exit item if not already present
Draw the menu
Process user input
Select the currently selected item
Convert menu data to curses menu
Convert a string to datetime
Convert datetime to str
Perform a basic math operation on two columns
sum the dataframe grouped by index with cumulative sum
clean old cachedir entries
Add offset to a datetime object
get updates from the learning params
Get parameters for the current training set
Optimize the parameters using the current optimizer
Sample the sensor and get its first glimpse
Prepare the encoder decoder and classifier.
Computes the tensor of the shared problem with the model.
Apply a function to every item in the dataset
Vectorizes the target corpus
report the number of classes
Train the model on the given data
Sample a sequence for the given number of steps
Compute the alignment weights for the current state given the precomputed values.
Compute context vector
Concatenate neural variables along a particular axis
Pads the dataset with zeros on the given side with the given length
RMSProp with momentum and gradient
( num ) )
( data )
Compute the sum of the training data and report the new best
Build the vars for the loop
Perform a single scan step
Theano momentum algorithm
Train the model if not already trained
skip the specified number of batches
Load parameters from specified file
Train a set of models
Train the model and report the cost of the last epoch
Run a single valid step.
Report a score map.
Get data for the given split
Apply a function to the neural variable.
prints all used parameters to the logger
, * * kwargs ) :
Create neural variables from numpy tensors
Create a shared variable
stack layers together
Stack multiple decoders in one call.
Encode a set of minibatches.
decode a latent vector
Creates a 2d Gaussian kernel of the given dimension and sigma
Register a new layer on the system
= ''
Get all parameters as a list.
Set up the input and test variables
Compute and return the outputs from the model.
Save parameters to a text file.
Load parameters from file.
Print a report of the model to the console
Register updates.
Register new training updates
Register the given monitors with the node.
norm of a list of tensors
Dumps one element to file.
Yields the contents of a file - like object or pickled file
Load parameters from a file into the model.
Decode state from base64 if possible.
Get credentials from response data.
Remove access token from request elements.
Log in to a specific provider.
Return a dict where keys and values are strings if they are not already strings.
Convert items to a dictionary.
Parser for JSON queries.
Resolve provider class
Serialize and create a cookie
Save session to cookie
Get data from cookie.
Get and cache data from the request
Generate a signature for the given request parts.
Serializes the value to a string and adds a timestamp and signature.
Check if the token is still valid.
Expire cache item soon.
serialize provider id and provider type id
Check if a string is binary
Return response content.
Bitbucket user info endpoint
Login to gae
Returns the session key for this object.
return self. session
Generate CSRF token
Log a message at the specified log level.
Is http status in category
Split url into scheme netloc path params
Set response headers based on cors rules.
Get app kwarg dict.
Return a flexible string representation of the given object
Return inst as iterable if not already an iterable.
A more lenient version of math. isclose
Deserializes a pickled audio segment
Create a new audio segment from a file.
Create an audio segment from NumPy array.
Reduce this segment with another segment.
Returns the current state as a pickle string
Choose an overlapped front id from a set of candidate front ids.
Find the ID of the offset front after onset sample idx
Get offset front id after onset front
Match offset front id to onset front id
Get consecutive and overlapping fronts for two fronts.
Return front id num if id is negative else - num
Yield front ids not already yielded so far
Finds the indices corresponding to the onsets fronts and front id
Remove segments that overlap with fronts
Remove fronts that are too small
Merge adjacent segments in a mask
Split a mask into multiple masks.
Downsample one or both of the 2D STFT
Single asa task.
butterworth bandpass filter
butterworth low - pass filter
Converts a list to tf input.
Expand and standardize a dataset.
Compare two elements ignoring order
Load the confusion matrices stored in the audit file.
Converts a list of data to tf input
Get api url from environment and pip config files
Autodetect filenames from requirements files.
Handles an error code.
Return information about the object.
Open a stream to the libslsl object.
) [ 0 ]
returns the next sibling of node
returns the previous sibling of node
Set the name of the node.
Set the value of the node.
). e
) Prepend a child element
( elem ) )
( elem ) )
) : param rhs | xml
Returns a list of resolved stream names.
Pair a word with a list of tokens
Show the number of possible completions for a given query
Compute the number of edge ngrams for each token.
Apply a set of processors to a pipe
imap unordered chunked iterable
Returns a list of fuzzy words
\ Fuzzy search.
make fuzzy index
extract manytomany relations and add to bucket
Print help for the given command or list of commands
Display database info
Get a set of keys from the database
%prog geohash geohash
Index document by id
Find best score for word
Send a request to the API.
map a list of requests to a list of responses
Extract bits from a bitarray.
Reinterptet harray to bits
Convert a python slice to a python slice
Find files in a directory matching a pattern.
True if val is contained in iterable
Iterate over each item and add statements to the switch.
Return the ceiling of the logarithm
Is num a power of 2
Add a case to the graph.
add a default statement
Register the given object as interface with the VCD writer.
Set up the VCD for simulation.
return '' Log change in VCD
Generate hdl from processor and state dependences
Add agents to all extern interfaces of the unit
Returns the associated clk
Remove duplicates from an iterable using a comparison function.
Group items in collection by fn
Flatten a nested iterable
Merge nested if statement into this one.
Remove unconnected signals from a netlist.
Check if a procedure is too simple.
Merge two hw objects
Yields processes grouped by rank.
) : str
Return name of the first non generic statement in a list
Cut off drivers of a signal in a set of statements.
Synthesize this unit
Get the max stm id for a wait or assignment.
Get the max statement id for a procedure.
) write to simulation
get opposite direction of self
Loads all declarations of the interface and its parameters.
Generate signals for this interface and all its subinterfaces.
Return the physical name of the port
The number of bits required to store this structure
Get the sensitivity of a given operation.
Convert from a value to another type.
Reinterpret bits to a python struct.
Returns the number of words between two indices
Group transactions by word.
Generator that packs the data into the field
reset state of enclosed for and sensitivity
Discover enclosures for a set of statements and outputs.
Discover the sensitivity of all signals.
Get the rtl context from the inputs or outputs
Reduce the statement to a single statement if possible.
Merge another statement into this one.
is mergable statement list
Merge multiple statements into a single statement.
Merge two lists of statements
Try to reduce a list of statements
Call when parent event is dependent on other stms.
Set the parent statement of this statement to the given one.
= statements [ 0 ] return
Remove the statement and its references from the RTL context.
self. entity. clean ( )
Generator yielding values from nested fields.
Convert a signed numpy array to a signed numpy array
Add a function to the list of sensitivity checks
Compare the value of multiple conditions
Connect a signal from one SimPort to another
converts a python variable to a vector
Process hw statements.
Returns the value of a parameter or the value itself if it is a signal base
Set the variable to a given value.
creates a struct from a map of interface to fields
Combine all memories into a single resource.
return the index cascade for a single driver
= vld )
Auto cast sig or val to to type
Reinterpret cast functions.
Yield all params of the given interface and all its children
Connect a packed source block to a destination interface
pack interface signature
synthetise the unit in the target platform
Registers an implementation in the current process.
Try to reduce and return the result if the dtype of sig and val match.
Attempt to reduce a signal with a XOR op if possible.
Returns the base name scope for this category
Determines whether to serialize an entity architecture definition or declaration
Get the base cond of a condition.
Get or create sim bits table
Get the constant name for the given val
removes the drivers of the given signal
Load this node from a numpy array
Load data from a given dtype at the given bit address
Load from a bitstring or hdl type.
Get the width of each item
Flatten the tree starting at the given offset.
Fix a value by adding or subtracting a sign.
Get indent from cache or generate one if not cached yet.
Check if property is available on object
Register a parameter in the list of parameters.
Call updater on params in other that are not in exclude.
Register a unit with the factory.
Registers an interface in this module.
Register an array of objects as attributes of the class.
get a single driver
self. result
Creates a rtl operator with the given operands and executes the operator op with the result t
Return a copy of the context with indent changed.
Attempt to connect the specified interface if it has not already been connected.
propagate clk signal to all connected units
propagate clk and rstn to all connected units
propagate clk and rst to all connected units
propagate an rstn to its siblings
propagate rst to all connected units
Iterate bits in one channel
Exclude from serialization.
Serializes a single declaration or a single declaration of an entity.
Serializes a set of params to a boolean value. Returns a tuple of whether the params are
Get the full name of the interface
make an association.
Convert a unit to a simulation model.
Reconnect synthesised signals to model signals.
sim unit vcd wrapper
self. enable ( ) return ''
Connect this signal with another signal
Register the signal as in the signal registry.
add a connection to the current one
get the intern sig for the direction
Check if ev is dependent on sig and process
) : str
add hdl program to run
Schedule a comb update to run in the future.
schedule the apply values and run seq procs
Strategy for conflict resolution.
run all the processes in the containers
Run seq processes and plan outputs
Apply the current values in - place.
Read a value from a signature.
Write a value to the signal
) return self
Simulate this unit for the given time period
Convert ternary ops to if statements
Calculate the distance between two hashes.
Calculate the average hash of the image.
Calculate the distance between two images.
Set up the platform.
Get the current power state and volume level from the device
Mute the volume.
Move the volume up.
Decrease the volume level.
Set the volume level to a given volume.
Resets the instance to its initial state.
Gets the piece at the given square.
Removes piece at the given square.
Sets piece at a square
is suicide or check by dropping pawn
) [ 1 ]
Is the current move a game over?
is checkmate
Return whether or not the symbol is a fourfold repetition
Pops a move off the stack and returns it.
Returns the sfen of the game as a string.
. to_move
Return a zobrist hash for the current position
Returns the piece type as a symbol
Create a piece from a symbol.
Returns the USI string for the move.
Creates a piece from a string.
Yield a list of parsed commit objects.
Parse parts of a git commit message.
= argv [ 0 ] execute
Generate yaml file from the template.
Cast the string val to self. cast as
List all dates between two dates
Parse date from string.
Load a currency file.
Set all rates for currency to none
Get the exchange rate for the given currency on the given date
animates a list of frames
= 2 ** n
) write a record to the file
Return the memory mapped word between start and end.
Return str with comments.
Closes the file
Generate and return a random position.
Closes the file
Loads data from a DAF file
Detect logging level and visit call nodes.
Check for logging statements and arguments.
dict keys should be whitelisted.
Checks if the node is a joined string
Checks keyword arguments in whitelists.
Record exception handler name.
Detect the logging level of the given node.
Get the name of the node or the id of the name if not available.
Get id attribute from value
Check if node is a bare exception
Check the exc info keywords of a node.
Deletes the file related to the instance if it exists
Returns the rendered content of the pdf file
Render a PDF document to a web response.
Quote a string for use in HTTP.
Configure options from a module or kwargs
Convert camelcase to underscore
Automatically create indices for the collection
Parse price file.
Loads the content of the specified file.
Parses a line and returns a price model.
Translates a symbol to the original language.
Load all symbol maps from database.
returns the current session
Import CSV file to database.
Get the latest price for a security symbol
Download prices from the Marketplace.
Prune all or specified symbol
Returns default session
Add new map
List maps available in the database.
get symbol by id
Reads the content of a csv file and returns it as a list.
maps entity to price model
Converts a price model to a price entity.
read config from a file path
Returns the full path to the config template
Create user config file
Get the full path to the config file.
Get content of config file
Set a value for a specific option.
Get a value from a section of the config
save config to file
Parses a symbol and returns the namespace and mnemonic.
Add a price to the list
Downloads and saves new price.
Returns default session for current project
List of prices by date and currency
Returns latest price for a symbol on a date
Prune all items
Removes all prices for the given security
Downloads a symbol from an agent.
returns all securities
return the partial of the current state
Update child calls in self. data
Depth - first search of the tree
Have the student choose an option from the correct number of times.
Return a mapping of defined keys and values.
Return an object attribute from a parser tree.
A simple loop to see if there are any context loops.
Check if there is a context with the given names.
Check a part.
Check an index of a part in the student and solution parts.
Calculate the true anomaly.
Initialize ldap3 application
Add an LDAP server to the connection pool.
Remove a connection from the current context
Teardown LDAP3 manager when an exception occurs.
Authenticate user.
Authenticate user by direct bind.
Get user groups.
Get LDAP user info.
Get LDAP user info for a specific username
Get object from LDAP
get a ldap3 connection
Shortcut for makeconnection with contextualise set to True.
Make a new connection to the LDAP server.
Destroy a connection.
Search in the container.
search for all objects in the database
get all artifacts for a given collection
\ speak the client.
Announce usage of given command
get secrets and base from environment variable
update headers of the message
check for required secrets
download a URL to a temporary file.
stream to a file or file - like object to write to
update token in headers
Get or create a folder.
Read a response from the server.
get bucket from self. bucket name
get secrets and update base
Initialization of the client and secrets.
get and update secret key
Get the latest logs.
list all logs that ends in a string.
create a folder on the server
sets up transfer client
search all containers and return all uris
Show current status of this backend
add a variable to a backend
remove a variable from a given backend
activate the secret backend
Delete a secret backend.
Update base image
Generate the HTTP Basic Authentication header
Generate HMAC signature for the given payload and secret.
Generate header signature.
\ Call to a URL and delete the response.
\ Call the HTTP HEAD function on a URL.
Paginated GET request with pagination.
verify the connection over SSL
remove an image
Get the current version from the version file
get install requires from lookup
get singularity version
check if a software is installed
Returns the absolute path to the directory containing the package.
Returns the thumbnail path if available. Otherwise returns the current install directory
Run a command and return the output as a dictionary
get metadata from dbx metadata
update current account and secrets
print the response dict to the terminal
Kill one or more registered commands
List the logs for a container
Get list of collections from account
get and update secrets
ipython announces a new python script
get all the manifests for a repository
get the manifest for a repository
Returns the path to the downloaded file.
extract env from config
update base knowledge
Update the token in the headers
Return metadata dict for this build
Get settings for client
get and update a setting in the config file.
Update a setting on your client.
Generate the authorization string.
list all builders in a zone.
get a list of templates from the server
get the ipaddress of a given instance
build the instance into the compute service
list all containers that have the same metadata as the one you asked for.
list all containers and print it out to the console
Lists the contents of a registry
Main entry point for the sregistry CLI.
create an sqlite3 database for further use
get build template from json file
list all available endpoints.
list files or directories on a given endpoint.
share the image with dropbox
Read and return client secrets from a local file.
Get all the services we can.
Delete an object.
delete an object from the S3 Bucket.
destroy an instance.
Get subparsers from an argparse parser
Generate a string from the grammar.
Returns a temporary directory that will be deleted when the program exits.
extract a tar archive.
extract a tarball to the output folder
Get the hash of a file
read a file into a string
read json data from file
removes the given file or list of files
push an image to S3
Get or create a registry collection.
Get a collection by it s name
Get container from registry.
list of all images
Inspect a given container
rename a container
mv will move the specified image to the specified path.
remove a container based on the image name
Parse header from a recipe
Search for a recipe with a specified pattern in a directory.
create a tar file from a list of package files
Update blob metadata
Formats container name for display.
Whether to colorize output and error messages.
Return True if we should emit an error message ; otherwise return False.
Write a message to a stream.
Prints multiple table at once
push an image to the registry
get template by name.
get manifest by repository name and tag
get build template by name and manager
update client secrets with new values
Context manager that translates boto errors into boto errors.
Creates a new proxy for the given filename and mode.
Get the gravatar url for a user.
Generate a gravatar url for a given email.
Check to see if a gravatar exists.
Get gravatar profile url.
Blocks in Chimera DNA
Calculates the quotient of a chimera graph g from a list of blocks.
Enumerate all the resonance molecules in a smiles string
Enumerate molecules for resonance analysis
Apply transformation to a molecule
Canonicalize a molecule.
Validate a SMILES string.
Convert SMILES text to standardized format
Enumerate all tautomers with SMILES.
Canonicalize a Tautomer by converting it to SMILES
Return the parent of a tautomer molecule
Return the largest fragment of a molecule
Remove stereochemistry from molecule
Set the isotope number of a molecule
Get the parent charge
Entry point for molvs cli.
Remove a molecule from the simulation.
Choose the best fragment for molecule
Integrate with Mixed Partial Progress Progress Progress
get members of org in json format
get teams of org
get all repos for the organization and type
Get the total number of contributors to a repository.
Get the number of open and closed pull requests for this repository.
Get issues of a repository
Get the readme of a repository.
Get license from github
Get all commits for a repository
write dict to json file
Writes totals to a file specified by file path
Write languages to a text file.
Check if directory exists. If not create it.
Remove date from CSV file.
get gov orgs from github
Create a GitHub Enterprise session.
Check API limits.
Connect to GitHub API and return session object.
Query GitHub for repositories.
Get organization details from GitHub.
= str, author = str )
Create a project from a gitlab repository.
Convert license to object.
Queries the organization and retrieves data from the API.
Get releases from github.
Get referrers from given url
Get views or clones from Github api and store them in a dict to store in the
Write dict to JSON file.
= str ) : return : str write to file
Check redundancy of data
Write data to a CSV file.
referrers to a referrer file
Extract DOEcode from JSON file.
Get DAECODE from URL and yield JSON records.
Processes a JSON file or a URL.
Log into GitHub using username and password
Get all the members of the org
Writes the logins and emails to a file.
Connect to a stashy session
Connect to a Gitlab server.
Query projects by repos.
Compute labor hours for a locus
Remove all None or str values from a dictionary.
Read a GQL file
Await a reset of the barrier
Countdown waiting time
Load a JSON file from disk.
save json data to file
Creates a new tfs connection.
Create a tfs project analysis client
Create a tfs core client
Create a git client for the given URL
Create a tfs tfvc client for the given url
Get git repositories for the project.
Get all the branches for a project
Get number of commits from Github
Calculate total commits for the given week.
Writes the report to a file in the same format as the original report
timing information.
output for histogram
Rollup the metrics into a single interval.
Convert string to enum value.
Convert enum to python
Get the prepped value
Given a topic path return a set of elements that the path points to.
PROJECT usls on dictionary
Calculate the mean of the values
Mark the occurrence of a given number of events.
mean rate in ms
Overrides the base class mark to update the last derived value if the value is greater than the
Send a metric to the server
Converts a metric to a list of strings
Format the metric string.
Send a metric to Datadog
Overwrite default get method to raise missing setting ( option )
Convert unicode to json str
Get or set default value
map ledger codes to GUIDs
Get all available divisions
Returns a mapping from exact invoice numbers to foreign invoice numbers
( injector )
Create and return a form view.
Create a handler for a HTTP method view.
Creates an api view handler.
Creates a generic api view using the given API injector.
Creates a model view set.
Create a asyncio stream from a unix file descriptor.
Read data from the file.
Close the connection.
Add a request to watch
Stop watching a specific file or directory.
Add path to watch list.
Setup inotify client.
Get an event from the stream.
Touch the message.
Update interval after a successful write.
Update the interval to the next failure.
close all connections and stop redis queries
Connect to an nsqd instance
Send a query to the lookupd server
Set the maximum in flight for the connection.
) : return str
Add a callback to the event specified by name
Remove a callback from a listener.
Trigger all registered listeners for a specific event
Publish a message to a topic
Set the feature transform mode and degree
prediction of the model
clean up unpaired and unaligned files
Read a depth file and return a dictionary of coverage
Sets the template for the current file.
Set the main channel names.
Render a Jinja2 template with context.
Render template and return result as str.
Update the main forks list and the context dictionary.
Updates the object with the given dictionary of attributes.
Set secondary inputs
Parses an assembly and populates contigs.
Get the GC content
calculate the total assembly length not filtered out
Writes the assembly to a file.
write the report to a file
Remove inner forks in text
Run insanity checks on a pipeline
Find the source lane of a fork process.
parse string to list of lanes
create a linear connection from a list
Add unique identifiers to tags.
Remove unique identifiers from tags and pipeline links.
Check if trace and log files exist.
Map a header to its position in the header
converts a string to a float in hms
Get the size of a file in bytes.
Extract processes from the log file
Clears all the information in the object to make it ready to be used.
Update the barrier status.
Read a log from a text file.
Assess resource warnings for the given process
Update inspection by running the log and trace parsers.
Displays the overview of the curses interface.
Move up or down one line in screen
move padding right or left
Get the last n lines of the log file
read in static info for pipeline and configuration files
Load the DAG to a Python dict.
Get hash of the current pipeline
Returns the nextflow filepath from a given log file.
Extracts sequences from the assembly and writes them to a file.
Automatically run innuendo
List all recipes
Validate pipeline string
Recursive build function for upstream processes.
Recursive method that builds the downstream subgraph of a process
Automatically build and execute a forked program.
get component str by component and directives
Write the storage dictionary to a report file.
Generate report from list of log files.
Fix contig names in asseembly path
removes filepaths from fastq files
parse a list of files
parse fl file and store data in self. storage
Get the contig id from a contig string.
write plot and table data to json report
Parses an assembly file and sets the internal contigs dictionary.
Calculate summary statistics and write to a CSV file
Get a list of tuples describing the window for each contig
Calculate GC prop.
Calculate GC with sliding window over regions.
Run skesa from the command line.
Create JSON report
parse bowtie log file
Parses a process name and a list of directives.
Add a process dependency to the pipeline.
Searches backwards from the given starting point in the process tree
return self. template
return self. template
set initial process
Set the secondary channels
Adds status and report processors to self. processes.
get manifest string for pipeline
renders all the configurations for the current pipeline
write a DAG to file
write configs to a JSON file in the project root
Export the current processes parameters to json.
Export the current processes directives as JSON.
Build the Nf file
set kmers based on kmer opt
Get report id from report file or the id of the report.
Read and parse self. trace file.
Update log watch for pipeline execution.
Compile and send a report
create a report in live mode
close a connection to a report
convert adapter file to adap format
Parse mash output.
Prints msg with color label
collector for multiprocessing
Get range from qual string.
filter assembly file based on assembly coverage
Calculate assembly size and contig size from assembly file.
Copy assembly to bam filter assembly and bam to filtered BAM file
Converts name from camel case to lowercase.
Collect all component classes into a dictionary.
Convert a tree to a JSON report and write it to a file
Maps self. w to self. data
median filter with num columns
compute the krnl with sym = True
Compute the squared mean along a given metric
Returns the number of non - intersecting geometric distributions
Apply a gaussian filter to the time series
computes the normalized connectivity matrix
Circular shift op.
Enlarge m space into num equal space space
Plots formatting of the given optimization algos
Plots the boundaries of the estimated file with the given algorithms
plot labels with time intervals
Get features in evenly spaced segments.
Compute maximal segmentation of feat segments.
. __dict__
Get reference times and reference labels for the given annotator
Estimate the jam estimation based on the given parameters
Get all boundary algorithms
Get the configuration of the MAF.
Get the list of dataset files in path
Read reference annotations from jams file.
Get duration in seconds from a JSON file
Write mirex file.
Get dataset file.
Given a beat times and a song returns the beat times aligned with the segmentation.
Estimates the librosa beat time for the given track
Extract the beats from the jams. txt file
Computes the beat synchronization features.
Get param names.
Computes the framesync times based on the features.
Organize frame times based on features type
get all features of the audio file
Preprocess the feature string
Postprocess inbound segments and labels if necessary.
Entry point for the command line interface.
print results to log
Compute information gain from an annotation and estimated annotations.
Process a structured track and return the results
Create results file name.
Compute all features for the given audio file
Compute features for a set of dataset files
Cost function for Gaussian distribution
Log - normalize a number.
min max calculation op.
Get frames for animation
Remove empty segments from times and labels.
sonify clicks using sinusoidal method
Synchronize the labels of two sets.
Process a level of segmentation.
Align two end hierarchies
Calculate the distance between a point and a vector.
Estimate knee of k in dimension num
Get clustered data
Compute k - means and k - labels for a data set
BIC score computation
Calculate the magnitude of a complex number.
Convert segments json to bounding box
Convert bounds json file to numpy array
Convert segments json to labels
Load beats from json file.
Compute the 2D Fourier coefficients
Compute a list of labels for the input dataset.
Apply median filter to activation matrix
Returns the module for the given boundary identifier
Returns the label module for the given labels id.
Run hierarchical segmentation.
Performs the segmenter and segmenter on the audio data
translate source code from command line
Set a task or transliterated string based on num workers
Split an iterable into maxlen - sized chunks.
Send lines from inputstream to target.
Return a translation table for the given language
Print the translation table for the given language.
Remove nodes from a network
Write network as HDF5 file.
Load network from HDF5 file.
Process a node in the etree.
Make an OSM query.
Build node query from lat and lng data.
Return True if the value is a regex
Return the comparison of value with expectation.
Compare value with expression expr
Calls all callable methods on the target object with the specified arguments.
Get matcher by name.
Initialize a value by its name.
Set response body.
Set the response body as JSON.
Set the value of key to val in the container.
( item ) ]
Trigger request event on instance
Add a header matcher to the request
Add a header matching the given names.
( headers ) )
Add params to the url
) return self
, json )
. request. xml
+ path )
Set persist status of the model.
Set the error message
Generate a reply to the request with the status.
Match a request against the mock.
Set mock engine
Add a mock object in the mocks container.
Remove a mock from the group
Activate the mock engine.
Disable the integration and reset the engine.
( request ) )
Match a request against the mocks.
Creates a copy of the request object
Context manager to temporarily switch to a new engine.
) return self
Remove interceptor by name
Get a setting from the django settings dict or from the django defaults
Return the SQL for the decrypted column.
Set the original attribute on the model instance.
Returns a placeholder string
Get a column from a table from the database.
Returns a SQL placeholder to be used in SQL
Base regression function
Inverse of coverage
Recurse down the tree and store cinv and r for each nonterminal
Calculate averages for all clades in the tree
get the explained variance of the tree
Calculate the clock regression of the tree.
Set merger rate to a given value
count the number of branches in the tree
Cost function for finite difference merger cost
Attaches the cost function to all the branches in the tree
Normalize a profile.
Set the gtr value
Set the grounding model for the instance.
Set sequence length.
Attach sequences to nodes in the tree.
Prepare the tree for serialization.
Prepares the structure of the Cytoscape.
Calculates the distance to the root in the tree.
Computes the branch mutation matrix for a given node
Get the expanded sequence for a node.
Return the state of the fitch at position pos.
Returns tree sequence from left to right
The ancestral likelihood of the tree
Return the maximum branch length to use for this node.
Return the optimal branch length for the given node
Returns a multiple seq alignment of the tree
Return the Reynolds Number for the upper and lower quantiles
Generate a custom rate model with predefined rate parameters.
Solve Q problem with fixed mu
Find the optimal translation given a pair of sequences
Probability density function at time t for profile pair at profile pair at time t
Evolve a profile onto a vector
Calculate the log of a sequence given a sequence.
Set branch length mode.
Plot the root to tip
prints the left - hand side of the tree
add coalescent model
Find the optimal root for the tree
Assemble and assure a tree is provided.
Create a GTR instance from the specified parameters.
reads vcf files if there is a string in the end of the file reads the vcf
Calculates the fwhm of a distribution.
Constructor of the delta function
Assign dates to clades based on self. date dict
Setup tree regression tip value and branch variance functions
make time tree
Returns the likelihood of the timetree
convert dates in clades based on their years
Calculates the date uncertainty due to rate variation
object. x [ min ]
median of a interp object
Get the number of days since Jan 1st 1970.
Create a DataQualityAnalysis object from a given regression model
Closes the connection to the Horizon box.
Receive one line from the stream.
) send raw data to the server
) Send an instruction
Convert unicode to utf8 bytes
Loads the specified instruction and returns the instruction object.
encode a single argument
Encodes this instruction and returns the resulting string.
Get the URL for the given class
return the url of the instance
Generate a URL for the given class
Download the file to disk.
: return : parent job object.
Prompt user for email and password
Login to solvebio.
Get current user s name.
print the user
Create a range filter for this genomic variant.
Position a genomic variant according to the given position.
Executes a faceted query against the database
Processes a list of filters to a dictionary of dicts
Returns the next element and advances the cursor
Build query and execute it
Create a new migration.
Main entry point for the solvebio script.
Construct a new instance from a dictionary.
Logout of the user.
Return the child object for this task
Parse snpEff info.
Get current solvebio. api credentials
Save the project to a. hosts file.
Format a value based on its type.
Build a row from a list of strings.
Build a string that represents a line.
Convert a row of text to a row of text
create a migration from this source to target
Upload a file or folder to a remote vault
Validate full path
Validate API host url
Annotate records with the annotator params.
Evaluate the expression
Set the format name.
Register a new output format.
Adapter for tabulate.
) User configuration file
of system configuration files
+ self. files
Write default config file
Read and parse config files
Truncate a string to a maximum width.
Replace strings in a string with another strings
Call multiple commands in sequence and exit on the first one
Apply option to command.
Initialize options.
Run command and return exit code
run all commands in sequence
Truncate the data and headers of a table.
Formats a table row to a CSV string
adapter for table functions
Generator that yields formatted terminal tables.
Is the given type a number
Is this a bool type?
type must be a bin
Generate a AES key.
Generate a key pair.
Find objects by template.
Insert image into QR Code
Print a list of panels.
Get first day of week with given weekday.
Repeat the day on or after the given day.
Repeat a day in reverse.
Populate self with biweekly events.
Handle a single chunk event.
Get the variants from the database.
Convert a list of variants into a multi document.
Add or remove users from a user.
Display variants for a case.
Retrieve a single variant.
Return the string representation of a variant.
Verify a variant.
Export clinvar data from a variant.
Return all cancer variants for a case.
ACMG - Add a comment to a variant.
Deletes an existing evaluation.
Get ACMG for the given criteria
Uploads a new panel.
Download verified Excel.
Given a list of hgnc IDs return a dictionary mapping aliases to HGNC symbols
Add in incomplete penetrance genes.
Send a request to a given URL.
Get all nodes from mme nodes.
Get the cytoband coordinates from a location
Return the subcategory of the category
Get the length of the segment
Return the end of the BND structure based on position alt and category
Parse cytoband coordinates from a variant.
Update panel.
Export a panel.
Display a form to edit an existing gene.
Report a delivery report
Search the store for terms that match the query string
List all whitelisted devices.
Returns the phenotype object for the given phenotype id
Retrieve gene record by hgnc id.
Convert a genes search query to JSON.
Action for getting list of institutes
List transcripts.
Display the events of the given day.
Search a list of variants for a case.
Search for variants and return as a string.
Add a variant object to the database.
Export a case and its variants.
Get predictions from a list of genes.
Find a BAI file name from a BAM file.
Get a list of observations from the database
Parse a gene into its transcript - like structure
Convert transcript object to string.
Find the end position of a variant in a dict.
Find the most common frequency of the variants
Convert clinsig objects to human readable strings
Generate a link to a variant by its id.
Return the link to the cosmic variant
Returns the URL for the beacon for the given variant object.
Returns the link to the variant.
spidex variant humanization
Return the list of manual inherited variants from the variant obj
Get the callers of a variant in a caller category
Search for all variants of a case
Export clinvar data from the store.
Get clinvar submission details.
Display variant acmg details
Post an ACMG for a variant.
Organize evaluations based on institute case and variant
Upload HGNC symbols to the store.
Generate a verified excel file from the given institute list
Generator to export genes from the database
Parse clnsig output
Parse a list of compounds from a case id.
List genes for a build
Return a case object
List available collections.
Instruct a module to institute a new project
Returns a file handle for the given file path.
get network number from request
get next and prev num
Generating year and month
Check the weekday
Parse individuals from a list of samples
Parse a PED file and return a family id and samples
Builds an evaluation object.
Given a list of acmg terms predict the acmg type.
Get a list of variants for a case
Return all sanger variants for a case
Get a variant object by document id
Get a list of gene variants
Get all verified variants for a given institute
Return a list of causatives for the case or institute
Get causative variants for this case and institute
Yield other causatives that are not the same
Delete variants for a case
Get all variants overlapping with a given variant object
Return a list of evaluated variants for the case
Retrieve a sample s variants
Connect to a mongo database.
Get objects from submission fields.
Get the clinvar submission header.
Generate submission lines in CSV format from submission objects.
Load a panel from a file.
Build a exon object from a dictionary.
Delete a panel from the database.
Drop indexes from all collections.
Delete a user from the database
Drop the genes from the adapter.
Drop the exons for the specified build.
Delete a case.
List individuals from the database.
Show cases and associated data.
Load a user and login it
Log in a user by email
This function builds the institute object with the given parameters
Delete event by id
Get all events in the database.
Get all user events
Remove a phenotype from a case
Parse genotype from individuals and individual positions
Check if a position is within a defined range
HPO terms controller
List all transcripts.
Drop exons for a given build
Load a region from HGNC for a case.
Return events for a given month.
Return the live items for a given time range
Parse requirements file.
Check if gene exists in panel obj.
Parse a set of genes and add them to the store.
Add a new panel to the store.
institute the panel and return the panel object
Get archive info from the database.
Migrate a database from scout to archive
Show HPO terms and their frequencies
Configure extensions for a flask app
Register blueprints to application.
List all gene aliases or alias symbols for a gene
Build panel object from JSON data.
Write verified variants to a spreadsheet.
List variants for a case.
Create a VCF entry from a Variant object
Start a mongo web server
generate md5 key for list of arguments
Initialize database with app config.
Set up a new database from the given one
Index the database.
Initialize scout from institute
Start scout demo.
Setup the command line interface for mongo.
List institutes.
Parse the genetic models info.
List all the panels in the institute
Add institute to the database
Return institute object by id.
Match a date string to a date pattern
Get datetime object from string date
List HPO gene names.
Parses the rank score entry.
Add a user to an institute
Check connection to mongo instance.
Load a report from the database.
Add a user to the database
Pileup view for a VCF file.
Load exons from ensembl exons file.
Update compounds of a case.
Add links to ensembl gene obj - dict.
Manage HGNC symbols.
Parse hgnc genes returning hgnc gene objects
Get open clinvar submission.
Update clinvar submission by id with current datetime
Get clinvar id from submission id
Add multiple submissions to a single submission.
Update clinvar submission status.
Get list of submissions for a user and institute.
Delete a clinvar object from the database.
Get all the clinvar data for a case
Parse hpo lines and yield dicts
Search for a gene by name or id
View for a gene
Get genes data from query string.
Retrieve institute and case by id
institutes of a user
Get HGNC ID from gene symbol or HGNC symbol
Add or remove panel from gene panel cache
Load disease terms from mim files
Load disease terms from mim phenotype to database
Parses the frequency of the variant from the variant info.
return sv frequencies
List all users
Compare existing panel with new panel.
Update MIM version
Add gene panel
Get panel by id.
Delete panel and panel record from database
Get panel by ID and version
Get panel by id and institute id
Return a dict mapping HGNC ids to panels
Update panel and panel version
Add pending action
Returns set of clinical symbols in case
List cases to be processed.
Sends the email to the recipients
Drop and create indexes
Update indexes in the database
Drop indexes from the database
Build query to retrieve variants
convert mongo query to clinsig query
Add a coordinate to a mongo query.
Add HGNC symbols to the query if not present in the query.
Tear down a database.
Parse a panel CSV file.
Load HGNC table and bulk insert into database
Load a transcript and insert many records into the database
Load exon data into a collection and insert many transcripts.
Return the hgnc with the given identifier
Get the id of a build based on hgnc symbol
Return the list of genes for the given hgnc symbol
Return all genes for a given build.
Number of genes in a build
Drop a set of genes from the database
Drop a collection of transcripts
Drop all exons in the database
return all ensembl transcripts for a build
Return hgnc symbol as a dictionary.
Return gene identified by its symbol and build number.
Get the genes that are linked to a build
Get all the genes for a build
Return a HGNC symbol for the given build.
Add hgnc id to genes if not already present
Return a dictionary mapping chromosomes to intervals
Load OSM panel for an institute
A list of all cases of an institute
Display a case.
Takes an institute id and case name and checks if the user matches
Match a case against a target.
Delete case from matchmaker
Generate a PDF of a case.
Indicate a case.
Indicate status of a case
Assigns an institute to a case
Get terms from the HPO index.
Mark a case or variant as validated
Mark causative case.
Return the delivery report of a case.
Share an institute or a case.
Rerun the current case.
Open an institute of research in the database
Download a cytosure case file from the internet
Multiqc case file creation
Get a number of cases and their respective statuses from a case query.
List all submissions of a user.
Returns the number of excel files written
Return list of diseases found in a list of ids
Return cytosure and case from vcf file
Return the case and institute for a case name.
Return a list of sanger ordered by case and unevaluated variants.
Send a DELETE request to the MME server.
Match MME for all patients in case
Make multiple match requests to MME server
Drop genes and transcripts from the mim files
Parse callers info from a variant
Construct a hgnc transcript object from a dictionary
institutes are stored as JSON so we can save them to database later
Parse cadd from a variant and list of transcripts
Load a case from a YAML file.
Update the variant
Updates the rank of variants in the case
Update the variants in the database
Update the compounds of all the variants
Update compound variants using pymongo.
Load a variant and insert it into the database
Upsert or update a variant
Load a list of variants and bulk insert them into the database
Assign a user to a case
Share a case with another user.
Diagnose a case
Marks a case as checked by a user
Verify the order of a case and annotate it with an event.
Sangers ordered by institute id or user id.
Validate the variant against a single type.
Mark causative event.
Update the variant and dismiss a variant
Update the ACMG for the current case
Parse ids and return a dictionary of ids.
ref alt
parse a document id
Add HGNC genes to a panel.
Get a variant ID from a variant object.
Returns the number of cases in the database.
Update dynamic gene list for a case
Get a case by it s id or institute id and display name
Delete case by case id or institute id
Add a case object.
Replace a case with a new one
Update the case with new caseid and variants and events
Takes a variant object a user id and a case id and criteria and submits an evaluation
Get all evaluations for a given variant
parse ensembl transcripts
Parse gene ids from ensembl query
parse ensembl transcript result
parse ensembl genes
Parse exon IDs from ensembl output
parse ensembl exon response
init logging with console and file logger
get mim phenotypes from genemap lines
List genes and phenotypes for a brain mim
Convert string to int or float.
Return the month number in a string format
Format a single day.
Return a month name as a string
Populate the attributes of the popover.
Extract panel info from panel lines.
Create a gene panel from a gene panel file.
List disease terms.
Drop all HPO terms for an adapter
Get a list of users and events sorted by event rank.
conservations - > conservations
conservation of variants based on conservation score
Get general case information.
Return a list of case groups and their average status.
Render context and return a json response
get year and month from GET parameters
Check for cancelled events by date
get a term by hpo id
hpo terms search
Get disease term by identifier.
Get disease terms by hgnc id
, disease obj ) : str
Generate a gene list from a list of hpo terms
Read hdf5 file
Sets up the time axis for the analysis.
Computes the last value of the DFT with the option to use gbt or park
blank dc n coarse chan
Calculate the extent of the time series
plot a waterfall
Plot the time series.
Write the signal to the filterbank.
calibrate n1 data
convert to coarse data
Return the fractional polar of a given string
Write a series of polfils to a file
Find closest value of xarr to val
Rebin an array to a certain number of dimensions
Unpack data to a numpy array
Get the difference of two sets of pulses
Plot a calibrated diode model
Calculates the size of a single channel selection
Calculate the shape of a selection.
Sets the frequencies for the given header
Populate timestamp array with values from self. file
Calculate the number of coarse chan in the file.
Calculate the number of blobs in a given blob dimension
returns True if selection is heavier than max size
Read all available data from FIL
Read a row from the PNG file
read data from file and time range
Populate header with values from self. container
print information about the file
Write the file to FIL.
Write container to. hdf5 file.
Write the file to HDF5 light format.
get blob dimensions from chunk dimension
Get the dimensions of the chunk
grab data and plot it
Generic command line tool for guppi raw data
Return the first header as a dict.
Return the number of data blocks in the file.
print stats plot
Plot the histogram of the data
Generate filterbank header from filterbank file
Find the size of the header in a given file
Integrate calibrated waveforms using foldcal.
Return center frequencies averaged over each channel coarsely.
Calculate the on - off and off - on ratios
Get the time system from the spectrogram
Find the length of a string in a file
Return whether the file is a filterbank
Generate a sigproc header string for a file.
Calculates the number of ints in a given file
Return a dict representation of the traceback.
Creates a subparser with arguments.
Create the subparser for rr
Remove comments from text
Add a default name to the DNS record.
Parse text lines into JSON zones.
Parse a zone file and return a zone dict.
Quote a string field in a dict
Parse avro schema string.
Converts classes to a python package
Convert a django. db. models. fields. Model to a json compatible dictionary
Load json data from a dictionary
Load JSON data from a string or file - like object.
Add a schema record to the registry
Get schema for a record name
Return a dict of vars for the class
Generate a dictionnary describing a record s schema.
Get a JSON schema dict from a record.
Reader for mr output.
Writer which writes the outputs to the output stream
push dct at front
Get the query string of the resource
filter for this collection with raw filters
Get all the entities in this project and reload them.
Convert href result to entity
Return another quote for q if not already in quotes.
Escape a string for use in a filter
Return the elementary rotation matrix for a given axis and angle.
Calculate mean vrad error for all sources at given source and phase.
Calculates the parallax error
g Magnitude error
Estimate the magnitude error of a waveform.
Calculate the average number of transits for a given beta value
Calculate the angular distance between two angles
Transform cartesian coordinates
transform sky coordinates
Compute the jacobian of the covariance matrix
Return the astrometric error scaling factor for beta
Quote a string for use in LIKE expressions.
Iterate over a collection applying a series of functions to each item.
Exclude elements from the collection based on a boolean function.
Return a copy of this collection with only the elements that satisfy the given condition.
Return a new collection with only elements while func returns True.
Return a new collection with only the elements while func returns True.
Zip this collection with other collection items.
Find first occurrence of string
Get the path for the current operating system
Build a minimal set of runs based on events
Print the report to the output file.
Print the results to the output file.
Removes macros and pragma lines from code.
( base ) )
Blocking search for multiple indices
Calculate cache access.
Performs the FLOOR analysis on the input data.
Strip and uncomment asm lines from input ASM
Strip unreferenced labels from aasmasm lines
Select the block with the best value
Prompt the user to select an amount.
Insert start marker and end marker at given lines.
Generate evenly spaced numbers in a range
get last modified datetime of all files in dir
Validate command - line arguments.
Entry point for the script
Parse command line and update mapping in a pickle file
wrapper for sympy. symbol
Converts a multidim to 1d
convert multidimensional array to 1d ref
Find all nodes of a given type
Check that all datatypes are unique
Set the constant for the program.
Substract constants in expr
Get the sizes of the elements of the array.
Calculates the relative offset of the access dimensions for the given variable.
Remove duplicated accesses str - > str
Iteration length.
Generator for loop stack
Index the expressions in the order they were added
Returns a list of accesses to all the variables in the current scope
Compile the relative distances for each variable.
Convert the top of the loop stack to iterator indices.
Returns a string containing the iterator of the loop stack
convert indices to global iterator
maximal iteration of the loop
Prints information about the kernel to the given file.
Print info about all the variables
Prints the constants info to the given file or stdout.
str Print the kernel code.
Convert ast to sym
Get offset of array reference
Returns the basename of an ast. array ref
Get the type of the index declaration.
Build constant declartions.
Get all array declarations in the kernel
Get the kernel loop nest.
Build and return declarations and a dict of array declarations
Traverse a loop nest and find the inner most loop
Build kernel nodes for array initializations
Build a dummy call to the kernel
Build the ast node for the kernel function declaration
Build scalar declarations from the kernel ast.
Get the kernel code from the machine.
Builds a call to the kernel
Build the kernel code from the kernel template.
Performs IACAC analysis on the kernel.
Return the identifier of the data item
Get last modified datetime
Get the name of the compiler to use and the flags to use.
Parse a perfctr string and return an event tuple.
Enforce no overlap in the dataset.
Get absolute path of header file.
Align iteration with the next cacheline
str in self. machine ]
hits for each str
( str ) ]
str in self. machine ]
: float ]
Return the machine info in a dictionary format.
Temporarily replace an environment variable with a value
Configure the argument group.
Parses the text of the project's README file
Build a purchase item.
Records a purchase on the sailthru server.
Return content for a given course
Get course data from ecommerce
Updates the unenrolled list
Send an email to the sailthru site for the given refund id.
Send an email to a sailthru site for offer assignment.
Retry the order and raise the exception.
Fulfills an order.
Return a sailthru client
Get the cached value for the given key or none if not found
Set the value of key to value.
Get a configuration variable
Get overrides filename from environment variable
Get the value of a package by E + version
The eplus version this program is running on.
Populate the database from a JSON data dictionary.
Get the list of external files referenced by this database.
Set default values for all tables.
Prepare the field descriptors for extensible usage
Returns a dict of short references keyed on file name.
Get a value from a column.
Update the value in the field at the given index.
Update the current state of the robot.
Add fields to the object
Remove and return the last item from the list
insert value at index
Delete the record from the device
Register a record hook.
Add a link to the database
Create regex from intent
( num ) )
Return a dict representing this search condition.
http request helper function
Get all endpoints for a given type of service
Tries to create a directory. Fails if the directory already exists.
A helper function to configure a service.
Send a certificate to the CAS server.
Check the status of a recording.
Update event status
Configure agent state.
Returns full path to configuration file.
Update the globals dictionary with the contents of a configuration file.
check if the config exists and if so print the message and close the file
init logger from config file
Render the home page.
Find image by ID and return full path and filename
run all the modules in parallel
Parse a iCal string and return a list of dictionaries
Get calendar from iCal
This is the main loop of the scheduler. It keeps track of the events from the schedule and
The main loop of the control loop
Make an error response
Make a JSON response from data
Get internal state of the service instance.
Show all upcoming and recorded events
Get event by UID
Delete event and its directory
Modify an event
start recording a new event
Render the template to a HTML fragment.
Resource list excluding duplicates
: self. id, }
Build a frag from a dict.
Add content to the message
Set js function and json args
Return html string of resources associated with a placement.
Converts a resource to HTML.
Handle GET and POST requests
Render a fragment as an HTML response.
Render a fragment to an HTML string.
Calculate the sensitivity matrix for a given number of lamb values.
Convert values to one dim array
Lookup values in the error table.
Return a sampled version of the final cutoff table
Return a summary error table for a DataFrame with qvalues.
Compute error statistics for the target and decoy scores.
Find the minimum cutoff value
Fit peptidoforms to a peptidoform file
Identify peptides using a model.
Identify proteins in a file.
Subsample a file with a given ratio.
Reduce the infile to outfile.
Backpropagate an input file to a output file.
Get group by id
Creates a group on the server
Delete group by id
Get all members of a group
Update members of a group
Get the number of effective members for a group.
Return True if group netid is a member of the group
Decrypt a text file using AES key.
Get input from stdin.
Get stdout of this node.
Retrieve STDERR or STDERR.
Get debug output.
Context manager yielding stdin.
A context manager that yields stdout and optionally closes stdout.
Generator yielding STDERR or STDOUT
Print out debug information.
print error message and reset error flag
prints the help for the script
print usage text
Print the program version.
Resolve an option to its value from environment variables and configuration.
Create a copy of the current context
Write headers to file.
Generate a temporary URL for the given parameters.
Quote a value for inclusion in a query.
Get a client from the pool.
Decrypt data with AES.
Upload an account.
Upload a container and retrieve its contents.
Get the manifest body.
Create a container
Prints the translation for the specified song
True if buffer is empty False otherwise
Encrypt something on stdin with aes key
Get the status for a github repo.
Get a pull request.
Get a list of pull requests.
Write your forwards methods here
Get a list of slider items
Render hero slider.
Acquire a lock for reading.
Releases the reader lock
Acquire the lock for writing.
Remove task by task id
Get task by task id
return a list of all tasks
Convert object to a dict
Return an instance from a dict
Initializes the archive manager
Create index if it does not exist.
A simple JSON encoder
Write items to writer.
Add a new task to the backend
Remove a task from the scheduler.
Return all the items in the list
Validate args.
Parse archive args and create archiving task config object
Publish job status and result to RabbitMQ.
Schedule a job to run in a specific queue
Cancel job with the given task id
run the server
Listen for pubsub messages
Schedule the task
Schedule a task.
cancel a task by task id
Build arguments dictionary for QStorageJob.
Register a view with the admin.
Same as django. core. urlresolvers. reverse but no versioning
Returns the name of the view
Return a version string.
Resolve a key to its value.
Get engine mapping from url scheme.
Parse given mongodb path.
parse database url and return database info
Add new user
List of users.
Create a new password.
Add the view url to the kwargs.
Convert a string to a boolean.
Parse an int.
get parser by type
Create dict object from Django model object.
y64 encode a string with y64
Create a field from a field info dict.
Create a validator class from a struct dictionary.
Find unique points in explored parameters.
Change logging kwargs.
try to make directories for filename but fail if any error occurs
Extract strings from docopt arguments.
Set the logger for this class.
self. trajectory = trajectory str
Check parser args for filename indicators and replace if found
Return the parser as a string.
Find multiproc options with interpolation
Find a multiproc dict in the dictionary
Parse the given log file and return a ConfigParser object that can be used to extract the log
Recursively convert a log config into a new dict.
Create logging handlers and tools.
finalize for ToolCollection
Redirect stdout to this steam
Write buf to stderr.
Check if two results are equal
True if parameters are equal
Class decorator to add naming conventions.
Add a set of equations to the problem
Run a single network.
The Euler scheme.
Add parameters to the model
Lorenz algorithm.
Creates a storage object and initializes it with trajectory parameters.
Storage factory.
Add a parameter to the function
Calculates the difference between two values using the roessler method.
Check if a node is in a group
Build equations from the model.
Determine if model should be built and build model if so.
Build the model if not already done
Build the model and brian list.
Check if we should build the connections.
= None ) : return str
Add parameters to the model
Computes the Fano factor for the specified spike result.
Compute the mean fano factor for the specified spikes.
Analyse the network for the specified number of subruns
Add monitors to the network
Creating the folder for the plot
plot the result of a computational system
print graphs of the analysis
Analyse the results of the brian2 monitor.
Get a batch number from command line
Experimental explore method for a batch of samples.
Variables of the model
Get the function name of the node.
Renames the item
Set branch and run details
Translate PyPi node into a message.
Delete a node from the whole tree
Removes a node or leaf from the tree.
Translate a shortcut name to a boolean and a string.
Determine types of node in the tree.
Link the instance to the act node in the tree.
Check names in a list of names.
Sets the details of a tree node
Iterate over the nodes of the tree.
Create an iterator for the given node.
Recursively traverse a BFS tree starting at a given node.
Search a node for a key.
Return a list of nodes reachable from a given node in the tree using a backwards search.
Children of the node.
Add a group from storage
Add a leaf from storage
Recursively list all data files associated with this node.
Return a debug tree representation of the tree.
Get the parent node of self.
remove a link
Removes recursively the specified children from the function.
Fetch a file name from the cache or the default.
Get the children of this node. If copy is True copy the children.
Get groups of the user
Get the leaves for the function
Get the links of the document
Store the trajectory in the group.
Add a result group
Add derived parameter group
Add derived parameter to hidden layer
Add a config group
Add a config group
Add variables for a commit to the config file.
Create a git commit and return the commit SHA
Flatten a nested dictionary.
Nest a flat dictionary into a dictionary of nested dictionaries
Get the positional or keyword arguments of a function.
Get matching kwargs for a given function
Format timestamp to a time string.
Convert a random port to a tcp port.
Make sure that a directory exists before trying to create it.
Reset the track to the given values.
Get remaining time for given index
convert function to dict
Remove a key from the map.
convert dict to str
Make ordinary result from result and key.
Make shared result object
Calls the storage service to access the data for this entry.
Get node data of current node
Check if item is supported by the class
Create shared data in the database
manipulate traj in a safe way
Lock the specified resource.
) return str
Finalize the context and socket
Start the Zmq event loop
Send a request to the server and return the response.
Acquire a lock.
Listen forever on the zmq. Context
put data to queue
Fork a new process.
Store data in the Python object.
receive data from the trajectory file and handle it
Receive data from the front of the queue.
Receive data from the connection
wrapper for the storage service s store method
Store a reference.
Store references for all trajectory names
Returns a dictionary of options for a section
Return a dictionary of configuration values.
Interpret configuration file and add default values if needed
Add parameters and configurations to the model.
Plot a pattern
Build a pattern in cellular automaton 1 d.
Called when the timer fires
The overview group of the comic.
Load multiple items from a message file.
srvc check hdf properties
Repeatedly call store on the server
This routine is called when the server closes the connection to the server
Uses keyword arguments to extract file information.
Backup the trajectory group
trj read out a row as a dictionary
Prepare traj for execution and fill run table.
Pypet version check
Load exploration from overview or trajectory group
Store explorations in the hdf5file.
Store the PyPijj instance in the. hdf5 file.
Creates a leaf instance
Depth - first search of the tree.
Add or modify a row in the database
Get or create table in the database
get node by name from all nodes in trajectory
Insert dict into row
Cut string if it is longer than max length.
Creates a group or gets a child of parent
Create or get groups from a string.
Store annotations for a node
Load annotations for node if any.
Store a group.
Load a single group.
Loads the skeleton for the given node
Given a dictionary and a dictionary of dtypes and a dictionary of flags extract the corresponding flags
Add the instance to the overview group
Add meta information to the group.
Write a shared array into the shared HDF5 file
Creates a shared table in the shared folder.
prm write dict as table
Write pandas data to a group.
Write data into a group.
Write data into a group
Delete a link in the hyperlink database
Get a column as pt. col.
Get the length of the longest string in a list
Read a dictionary from the database
read shared data from node to instance
read an array from the repository
Creates a trajectory by loading the given name at the given index.
Make a name for a set
Set properties of the object using keyword arguments
Add dynamic imports.
Add a parameter to the global parameters dictionary
returns True if all runs are completed otherwise False
remove all stored exploration
Update the information about a run
Add run information to the report.
Thread to execute functions.
lock all derived parameters
finalize for RunCommand
Recursively load the skeleton of the PyPi module.
Populates wildcards dictionary with list of wildcards.
Merge many trajectories
merges a set of runs into the current trajectory
Rename a full name to a new name for a given trajectories
Merge configurations from one trajectory into another.
Merge a trajectory into this trajectory merging only the keys specified in rename
Merge results from a different trajectory into this trajectory.
Restore default value of function
Set the current value of all parameters to idx
create a single run of the graph
returns a list of run names
Start a new run
set start time
set the finish date of the run
Construct an instance of the given class using the given arguments.
return a dictionary of functions in param dict
finalize run removes any new nodes and links
Delete links from a node.
Recursively remove this node and all children.
Pooling for single run mode.
single run of the pool
Set up pool configuration.
configure traj pool kwargs
Process a single run of the system.
SCOOP single run method
Configure logging.
configure the niceness of the system
Runs the main loop of the pypet interpreter with sigint.
configure logging start a handling loop and run the handler.
Load a class from a full class string
Create a new class from a name and dynamically imports.
return the length of the range
Convert thread local value to string.
get range of function
Return a dictionary containing the current state of the table
Load parameter from a dictionary.
Load parameter from a dictionary.
Return True if two values are equal
Check if data is a supported matrix format.
Build name list according to name index.
reconstruct a matrix from a data list
Load parameter from a dictionary.
Store the parameter data in a dictionary structure.
Load the parameter from a dictionary.
Convert key to str if key is an int
Convert dictionary to a string
convert to dict
Set single item by name
Check if item is supported by this library.
Return a dictionary containing the stored data.
Load the data from a dictionary.
Set a single value for attribute name
store the current state of the pickler
Load from a dictionary.
merge multiple files into one file
Creates a new saga session and adds the context user and password to it
Merge all trajectories for this service into one.
Starts the jobs service
Multiply two rational numbers
Run a neuron.
Postprocess a list of results from a neuron
Add a parameter to the function
Add an exploration to the trajectory
Extract subruns from a given trajectory.
Run the network
Add parameters to components and analysers
Build and run the network.
Make a filename from a Trajectory object.
Get the next item from the chain.
Handles keyboard interrupts
write json config file to disk
Get pin data from API.
Request access and refresh tokens from the OAuth server.
Refresh access and refresh tokens using refresh token and API key.
Queries the thermostats API and returns the thermostats dictionary
Write OAuth2 tokens to file.
Set the HVAC mode of a thermostats
Set the thermostats fan min on time
Set the global temperature of a thermostat
Delete a vacation from the thermostats
Resume a paused or paused program
Send a message to the thermostatsd server
Generate delay for selecting a task.
Renew a lease
Generate fuzzed renewing time.
Filter fsm attributes
Reset the dhcpcap class to its initial state
Get a timeout for a function.
Change the timeout for a function in a state
select an offer from the queue
Send a request to the server and wait for it to finish.
self. timers = None
Processes a packet after it has been received from the network.
Initializing timer if not yet initialized
raise self. timeout if we have too many offers
max attempts = self. attempts
request = self. current state
request = self. current state
Receive an offer from the client.
Called when a ACK is received.
handle an incoming NAK packet
Called when a ACK is received.
Called when a NAK message is received
Process a received ack rebinding raise if needed
Handle rebinding of received packets.
renew the lease
Set a value in the query string
Add a name - value pair to self. qsl
Removes a query param from the query and returns the new query
Get supervisor status.
Read a tdms file.
convert tdms file to fcs file
Returns True if the two paths are equal False otherwise
Create a new patch with the given name.
Delete the top of the database.
Delete a patch from the database.
Check if a file exists in a patch
Backup a file in the patch
Add a file to the database
Run the command and wait for it to finish.
Create the directory if it does not exist.
Copies this file to dest.
Link the current file to a new link
Copies the file to the provided destination creating the destination directory if necessary.
Get the directory of the file
backup file to dest dir
Unapply a patch by name.
Apply a single patch
Apply the next patch to the series and save it to the database
Apply all patches to the series
Reads the series file and creates patch objects
Writes the patchlines to the series file.
Add a patch to the report.
Insert patch names into the patchlist.
Add patches to the line after a given patch.
Remove a patch from the editor.
Get all patches after a given patch
Get all patches before a given patch
Get all patches since a given patch.
Replace a patch by a new one.
Create the directory and create the version file
Check that the version of the database we are connected to matches the version in the file passed in
Add command line arguments to parser.
) return parser
Add command line arguments to a subparser.
set the subparsers args
Add subparsers to a parser
Find a file in a patch
Check if file exists in next patches
Revert a file to a given patch
Import or create a Quilt patch
Import the patches.
Create and add a way object to the project
Yield missing node ids
Add a node to the graph
creates a route for the given relation
Create a long name for a relation
Returns an agency ID for the given relation
Process all nodes and ways.
Add a relation to the current version
Monkey patch agencies.
Create a dummy stoptimes for each trip.
Write the current state of the builder to a zip file.
Write the archive to a directory.
Build agency from tags.
Generate a list of stops from a relation
Build shape from nodes and ways
Get the supported PCAP versions.
Sends an APDU to the device.
Authenticates a list of devices.
Register a new application on the device.
Authenticate a client app with the given data facet.
A simple wrapper for u2f register & unregister.
Convert unicode objects to str.
Wraps a class with flawless. client. client. wrap decorator
checks if given filepath matches any of the patterns
Get email address from given string
get entry from entry tree
Convert markdown to re
Serve a flawless server
Get image from url
convert image from string to PIL Image
Check if image is big enough
Check if image is big enough
Validate height is big enough for the image
Parse category field.
Parse totals from totals field.
Get all the items from the XML.
Save error message to errors list
parse data and save to database
Parse a single item.
get instance from data
Save instance to database.
Download a remote file to a local path
Open self. source in text mode
Get items from source.
Allow or disallow network access to the running container.
Add one or more files to the sandbox.
renames a file in the sandbox
Get all enrollments for a course
Get enrollments for course by sis id
Get all enrollments for a given section
Get enrollments for a given section id
Get enrollments for the given regid.
Enroll a user to a course.
Get roles in account.
Get roles for a given account.
Returns a list of course roles that are effective in the given account
Get role by id
Get a role by account sis id and role id
Get course by id.
Get course by sis id
Get all courses in account.
Get courses in account by sis id
Get courses in account published.
Get published courses in account by sis id.
Get all courses for a regid
Create a new course.
Update sis id
Get activity for a given account and term
Returns a list of grade objects for the given term and account.
Get statistics for a specific account and term.
Get activity by sis course id
Get assignments by sis course id
Get student summaries by sis course id
Get student activity by sis user and course id
Get student messaging by sis user id
Get external tools in account
Get external tools for a course
Create external tool
Update external tool data
Delete external tool by id
Check if all required parameters are present on given object
Get user by id.
Get all users for the given course id.
Get all users for a given course id
Create a user on the canvas
Get all logins for a user.
Update a user login.
Given a response return the URL of the next page
Get a resource by url.
Get a resource by URL with optional parameters
Send GET request to a URL with params
PUT request to AmigoCloud endpoint.
POST request to AmigoCloud endpoint.
delete a resource from the API
Get list of admins.
Create a new canvas admin.
Create admin user by sis id
Deletes an admin from the account.
Deletes an admin from the given sis account.
Create a new grading standard.
Get a single section.
Get a section by it s ID.
Get all sections in course
Get all sections in course by sis id
Get all sections with students in a given course
Get a list of sections with the given sis course id
Create a new section.
Update section name or sis section id.
Get a list of quizzes for the given course id.
Get account by id.
Get all sub accounts for the given account id
Update account.
Update SIS id
Get auth settings for a given account id
Update auth settings for a user.
get a term by sis term id
Import csv file into the canvas account.
Import a directory.
Get import status.
Build a zip file with all csv files in dir path
Get assignments for a course
Update an existing assignment
Get all available reports for the given account id.
Get a list of reports of a certain type for a given account.
Create a new report.
Creates a new course provisioning report
Creates a new course sis export report
Creates a new unused courses report
Get data from report attachment
Get the status of a report
Delete a report
Move all detections in label by dx and dy
Horizontal flipping of detections.
Get dict from Django object
Get configuration from Django settings.
Edit empty value
Create metrics and register them in the registry
Setup logging for the library.
Configures the node registry
Create and register metrics.
Get a metric by name
Render the home page.
Handle metrics.
Send a WhatsApp request to the server.
Fix http client. http. get content type and params
Query the API with the given input
) [ 0 ]
( str, )
Encode data as JSON and add it to the request
Call the API with GET method
HTTP DELETE method
HTTP PUT method
Call the Wavefront API with POST method
Group sentences into groups of length group length
Disambiguate a PDF file.
Disambiguate a query.
Segment text using the Giphy segmentation service
Get the language of the text.
Get concept by id
Create a feature map from the given features and classes
Calculate the score of a new feature for a given set of classes
( features )
score new feature with the predicted class labels
Transform features to a new format based on the mapping
Calculate the score of a trait given its features and targets.
\ Returns the vector of the given members.
\ Returns the vector of the given members.
Compiles and evals the given file.
Compiles and executes a stream of Python source files.
Compiles and evals the given string.
Create a repl namespace and register it in the runtime namespace.
Run python code in the interpreter with basilisp.
add method to map
) return self
remove method removes key from map
Removes the method with the given key from the MethodMap.
is macro of a variable
Returns the line and column number for a lisp form
Raise parser exception if node is not a comprehension
Recursively assert that the given node is not recursed.
Resolve bare symbol
Resolve a form symbol into a form or class form.
Shortcut for ast. parse ast.
or self. opts. entry
Returns a string representation of a map
Prints a sequence of elements as a string in LISP format.
fallback to construct repr for unknown types
Fix missing locations in the node and its children.
Compile lisp form and exec it on the specified module
Compiles a python module.
Compile multiple Python source forms to a single module.
Compile bytecode to the specified module.
Create a sequence from an iterable.
Mangles the string s by replacing characters with their munging characters.
Format a fraction string from a numerator to denominator number
Create a logging handler with the given level and formatter.
Maps a sequence of kvs to a single value.
Partition a collection by n elements.
Read a namespaced token from the specified context.
Reads a collection.
Read a list from file - like object
vector - > collection
Read a map from the stream.
Read a string token from the reader.
Read symbol from file.
Read keyword with namespace prefix.
Parse meta statement.
read a quoted string from the reader
Expand a syntax quoted form
Read syntax in quoted form.
deref derefs a string
Reads a single character from the reader.
Reads a regular expression from a text string.
macro - Reads reader macros
Consume the next token and return it if it is a comment.
Consume the next token from the reader
A str - > reader form from stream.
Reads a file and yields its contents as text form.
Move the cursor to the end of the line.
Pushes the current index back to the bottom of the index.
Advance to the next token and return it.
Basilisp bytecode
Returns a list of basilisp bytecodes from cached data
Return a full path to a cached file.
Hook imported modules into sys. meta path
Find a spec with the given fullname and path.
Compiles cached module
Compile and execute a single module.
Load and execute a module.
shortcut for making a symbol
Completer function for completion of text with keyword information.
Get or create keyword object in cache.
Return keyword with given name and namespace.
Chain a generator of ast nodes and dependencies.
Node - > ast collection.
Change AST node lineno and column offset
Decorator for ast generators
Decorator to annotate a function with ast locs.
Check if a variable is dynamic
True if v is redefable ; otherwise False.
Convert an ast. ast to a python statement.
Compile the function body as an expression.
Converts a do node to a python ast
Name of function.
Converts the arguments of a function to py ast.
Converts a single arity fn to a python ast
Convert a node to a python AST
Transform node to a python expression.
Converts an invoke AST into a python AST
Returns Py ast representation of quote node
Loop node to py ast
Converts a node to a python AST
Convert a set node to a py ast node.
Generate a Python AST node for the throw op.
Converts a Try node to a Python AST.
Convert a local to a pyast node.
Replacement for pyast. find into ast. attr
Convert a reference to a pyast node.
Convert an interop prop to a python ast
Convert maybe class to py ast.
Convert maybe host form to py ast
Convert const val to py ast
to py ast from collection literal
translate lisp ast to python ast
Yield all the imports of the current module.
Shortcut for ast. import from module
new var fn name in the namespace
Returns a set containing the given members.
set of members.
Visitor for except handler AST node.
Return node or None if it is not a constant expression.
Compile the function def as a fresh instance of it.
Visit while node.
Visitor for try AST node.
Create a new types. module instance
Return the first element of a sequence.
Get the rest of the argument or the empty string.
Return the ith rest of the collection
Return the nth element of a sequence.
Concise o with seq.
Convert an object to a sequence.
Concatenate multiple sequences into a single sequence
Association with key - value pairs.
Conj op.
Dereference an object.
Return true if the two arguments are equal.
divide two numbers
Sort a collection.
Returns True if coll contains k otherwise False.
Get a value from a mapping.
Convert an object to a lispable representation
Convert an object to Python.
Return a human readable string representation of an object.
Collect args into a list.
Mark a function as basilisp s fn decorator
Resolves an alias for the given symbol
resolves a var alias for s
Add generated python to var.
intern a name with a namespace
intern a name with the current namespace
find in namespace
Find the first occurrence of a variable in the namespace.
Return the value of the symbol or raise runtime exception.
Add a default import for the class if it doesn t already exist
add alias to the mapping
Interns a symbol into a variable.
Interns a symbol into the map
Find a reference to sym in the scope or None if not found.
adds an import for sym into the scope
Get module for symbol sym.
adds a reference to var to this instance
if not self else None
refer all the interns in other to the variables in refers
) return self
Get or create a namespace.
Get or create a namespace by name
Returns the name of the namespace referred to by name.
Removes a name from the namespaces
Suggest all possible alias completions for prefix and name.
Suggest all possible completions for imports and aliases.
Returns a list of completions for all interns and mutually exclusive completions of the value
filter refers of a given value
Autocomplete text.
Returns the tuple of positional and keyword arguments.
Convert members to a list.
Returns a list of members of the list
Decrypt JWT token.
Encrypts a JSON string using the JWT and JWT keys.
Delete the item from the cache
( ) )
Parse a fiql expression and return a fiql expression.
Dump NDB model to a file.
Convert datetime. datetime objects to str
Decodes a date string into a datetime object if possible.
Convert val from JSON to native python.
Default JSON parser.
Validate version of Leicacam and return it if valid None otherwise
Strongly connected components topological sorting
Sets the parent of the query.
Returns the parent of the expression. Raises exception if not a valid parent
Add element to the current working fragment.
Creates a string composed of the AND of the arguments.
Creates a OR expression
Parse incoming string to a list of dicts.
Convert a list of tuples to an ordered dict.
Check if messages contains a given value.
Prepares the message to be sent.
flush all data to socket
Enable a slide
save your template to disk
get information about the driver
Locate package. json file.
Parse package. json
JSON API error handler
Validate yourls response
homogenize two wavelengths
Dep vector interpolation
Get the indep vector between two wavelength sets
Verify wave a and wave b are compatible.
Load and return the systemjs manifest
Trace the parameters of a module.
expand a shorturl
Get url stats for a given url.
Get statistics for the given filter
Get database stats
Split an iterable into chunks of chunksize
Flatten an iterable.
print a table in tab - separated text
Create a dummy class with no members.
Create a number from a human readable string.
Trace the module.
Output links from a JSON file
Appends entry to plist to make it a common entry.
, num = 0 ) : = pkg )
Convert string ops to string words.
Split noise measurements into individual chunks
Chunk data into discrete vectors based on frequencies
Bound a waveform according to min and max values
Build and format units string
Apply a unit vector operation to the given waveform
Calculate the running area of a dependency vector
Validate wave vector against min and max values
Mathematic cosine function.
Inverse hyperbolic cosine
Return the arcsine of a waveform.
Mathematical atanh waveform.
Convert waveform to db waveform.
Group a waveform by its delay
Compute the logarithm of a waveform.
sqrt wave wave. units
convert wavelength in complex wavelength
Convert wave vector to float.
Interpret the wave vector as an integer vector.
Extends Django s find method to accept systemjs paths
Get short desc string from long desc string
Build expression from a list of tokens.
Find the next random number in a sequence.
Find functions in a template
Parse expression.
Remove consecutive delimiters from a string
Return scientific mantissa and exponent of number
Return scientific notation of a number.
Convert string to float in Pegasus format
Find fractional number in string
Parse mantissa number from string.
Whether or not the app needs js extension.
Runs the jspm bundle command
get app trace
Determines whether a dependency tree matches the dependency tree.
hexdump - > ascii
Parse a docstring into its parameters and return
Return a list of valid identifiers.
Resolve an add action from a module.
Split a line with POSIX lexing syntax.
Initializes the context if not yet initialized.
Return the help text for builtin functions.
Find a function in the given context.
Returns a listing of the specified context.
Returns whether the argument is a flag.
Extract arg value from remaining.
Invokes the function with the arguments from a line
Given a section name determine the section class to use.
Classify a line into a list item.
Join lines into paragraphs of num paragraphs
converts a value to a type specified by typename
Converts a binary value to a type.
Get the size of a type
Check if type name is known in the code.
Split type name into base type bool and sub types.
Instantiate a type given its base and subtypes.
Check if format is known.
Load types from a type module
Add a parameter to the param list.
typed return value
Print custom returnvalue.
Match shortname to all possible names
Returns the type of the parameter with the given name.
Format returnvalue using the stored return info.
convert positional argument
Converts an argument to the type specified by its name.
Format error message.
Convert this exception to a dictionary.
Check and execute a function if the function signature is valid.
Parse a validators list into a list of tuples.
Find all objects in a container
Get name and context from a module.
Get the help text for a function.
Decorator that cannot decorate a function
Mark a function as annotated.
Get a short description from a function docstring
Load all django - core - commands
install crontab and save to file
Print all registered tasks with their schedule
Uninstall crontab.
Create an object from a URI.
Load all projects from disk.
Save project configurations to disk.
Get projects dependent of this project
Initialize the project and return a list of failed presets
( f )
, pure )
View the fold expression in the given state.
Convert to list.
Apply a function over a state
Set the value of the element in the given state
Iterate over an iterable.
Return the kind of self.
Main function of the game loop.
Step towards another string
Handles user input
Advance robots by one step
end the game with message
return x y where num is the player s position
play the game
return self. board [ y ] [ x ]
Returns the name of the game winner.
from self. board yield from
Add item to list and upload if necessary.
Set the timestamp for the current spider.
Upload the current chunk to s3
Creates a file - like object for exporting the items.
= True )
Get the current state of an asset.
) [ 0 ]
) Get the current fee for.
) [ 0 ]
Get raw transaction by hash.
Get stored value for the given key.
= True )
Invoke a script.
, * args, * * kwargs
Invoke a script via JSONRPC.
= hextx )
= addr, )
Call a method on the server.
Check if a string is a valid hash256 string
Is the string a valid hash160?
Takes a list of invocation parameters and recursively encodes them into a hash.
Decode invocation result
Apply transform to dttm.
Render and save the plot to a file.
Render barcode.
Calls the callbacks with the code and returns the result.
Manage local and remote config files
Download a file from S3.
Upload a file to S3
Downsync an S3 envfile to the local config folder
Show differences between local and remote configuration files.
Parse environment variable.
set basic auth credentials
Set api key
Get all json files from folder.
Get all schemas.
Returns the schema for the current database.
Get the JSON Schema resolver for this resource.
Validate object against the schema.
Get examples from the schema folder.
Get examples that are not in the schema
auth user get url
Authenticate a user for the url
Perform an authentication request and return the resulting token
Return the current user id
Return list of files in a folder.
Create a folder.
Add a comment to a object
Decode obj to unicode if it is a string.
Recursively set a drop target for the given object and all of its children.
start drag opperation
Set the default tlw
Inspect an object with GUI tools.
Migrate a font dict from str to str
Load a page into the wxPython instance
Sends a message to the console
add a nicely designed tip to the wx object
mouse down event handler
move event handler for mouse cursor
key press handler for wxPython
Delete selected objects from the window
Duplicate selected objects
Refresh the snapshot displayed by the user.
Calculates best position for given widget
Returns the python data of the given item
set python data
find python data
Delete an item from the GUI
delete all items in list
Remove all rows from the table.
set selected item in the list
Returns the current selection
Set the data for the widget
add a string to the end of the item
Get wx component by name
add a child to the sizer
Set the parent of the component and reparent the wx obj
Draws the tile background
Erase the bitmap background
called when wx is painted
Return list of column headings
Reset the grid to its initial state
Updates the values of the grid
Updates column attributes
Sort the table according to the given column
Clear all cells from grid
Creates a combobox
Begin editing of cell
Changes the value of cell in the grid
test if key is accepted
Start key event handler
Enable or disable all items in the menu
Is any menu item enabled
enable all menus with a value
Check if menu is enabled
Remove a menu from the menu bar
Fill object with tag s attributes.
Autosummary table.
Get documenter for object obj
Mangle a signature so that it is compatible with Python.
Import object by its name.
Link to role num in rawtext
Launches an alert dialog
Prompts the user for input
select font with dialog
A dialog to get a color selection and return the selected color.
A dialog to get a directory path.
Find text in a table
set if the item has children
set the icon of the window
Parse datetime. datetime and decimal. Decimal.
Save a RSRC structure as a. rst file.
Build a GUI window from a result dictionary.
build a control or menu component from a resource dict
convert name from pythoncard property map
set data to the clipboard
Find autosummary comments in docstrings.
Load an object into the tree.
Inspect the tree
Activate an item in the tree.
Update the child in the tree
show the context menu
Convert to native representation
( False )
( False )
Implement custom select option method
Returns a webdriver class with the given name and capabilities.
Return the XPath of the current node.
Switch to a given frame.
Display a modal dialog and wait for a response.
A context manager that accepts a modal dialog yields a string.
Dismiss a modal dialog with a message.
Display a prompt and wait for a response
Dismiss a modal dialog with the given text.
save html page to file
Take a screenshot of the current window.
Raises the server error if capybara. raise_server_errors is True
wrapper for has selector method
= locator )
wrapper for has selector with unchecked field
Check if element has a checkbox with locator
title has the title
has no title
Get the inner content of a node.
Get the inner text of a node.
Normalize a URL.
Check if an error should be caught.
Count the number of rows that match the query.
cache at least size result
Checks if there is none in the options
Create a failure message.
Return True if the count is equal to the count in the options
Normalize text.
Remove leading and trailing whitespace from text
Normalize text and compile it as a regular expression.
Resolve current url against expected url.
resize the window to new dimensions
boot the capybara server
Set the cgetter function to call when instantiating the object
Manually set instance method
Set class method to be used when instantiating a class.
Returns the traceback as a string
Returns the source code for the object
Return the logger for the given instance
Sets the logger for the server
Call the API with the method and params
Get the list of channels the server is listening on
Get the list of users of the team
Make a slack message
Translate a message from Slack to Slack
Send a Slack message.
read a channel from the layer
Run the bot.
Run the value command.
Get the difference between two dictionaries
Colorize a string for terminal outputs
v1 playbook on task start
Print out stats.
Called when a task is skipped
Convert a dotted - quad ip address to a dotted - quad ip address mask
Add a model to the dataset
Load all filters from jinja2 filters
Find yang file
HTTP POST wrapper.
Returns the authorization code uri to redirect to
Get token by code
Parse url query params.
Remove querystring from url.
Build a URL with the given base and additional parameters.
) return { }
Make a response object.
Make a redirect error response
Make a JSON response
Get authorization code and persist it to the database
Get a new access and refresh token for a client
Generate a new token and persist it to the database.
get authorization code from uri
get token from POST data
Returns the authorization object for the request
Open the device with the given bus
= addr + 1 num = addr
Read number of bytes from the target device
Read a byte from a device
= str ( buf ) write
Write a byte to a device
write data to the device
Copies the effects to a new location.
Create a local copy of this object
Construct file from info dict.
Upload a file to a given store.
A list of CDN URLs for each file in the group.
Construct a new group from a group dict.
Create group by files.
base opration for bulk data requests
Yields file uuids
Generate a python list from an API object
Print a progress bar
Get the status of the home mode
Get a list of cameras belonging to this user.
Get information about multiple cameras
Get snapshot of a camera.
Enumerate the motion of an event.
Get event for a camera.
Update all camera motion settings
Check if li is last item in the list
Get single list nodes with meta data
Get indenture level for a given element.
Returns the value or none if it does not exist
Get grid span from translation table.
Get td at index
Check if a style is false.
Returns True if bold style is false.
Returns true if italics style is false.
Return True if the paragraph is underlined.
is title style or not
Get text run element from a BeautifulSoup object
Get relationships between elements in JDOM tree and media.
Get ordered list type.
Build table element
Get the HTML content for a given tag.
remove element with given tag from given tree
Retrieve a file from a URL to the dataset directory.
Load images from a pickle file generated by mnist
Plot a set of images
Plot a set of layers
Plot filters stored in file.
) + txt
Add a set of weights for each convolutional layer.
Decode a layer.
encode the output of the autoencoder.
predict on the last num outputs
predict on the last layer output
( str ) ]
Returns the list of target and weights variables
Calculate accuracy of the prediction.
Builds an activation by name and layer.
Reservoir sampling algorithm for rectangular data
Clears the previous loss and sets a new one
train the model and return monitors
Connects layers and regularizers together
( str ) ]
Returns a list of variables used in the loss
pickle and save as pickle file
Load a pickled model.
Calculates the total loss of the network.
Build a graph of updates
Returns the size of the output array.
Resolve all input shapes
Resolves the outputs of the calculation
Log the activation function and the parameters.
log the shape of the parameters
Format name with the given string.
Resolves a shape name to its output and input name.
Find a param by its index or name.
Add a bias parameter
Converts the current object to a spec
Returns the log of the gaussian with given parameters
Generate a loggabor image
Add a tier to the plot.
Removes a tier from the node.
Get tier by name number
Convert to ELAN format
Add a new point to the tier
Add a new interval to the tier
remove intervals at a given time
Removes a time point from the intervals
Yield intervals stored in self. intervals
Get all intervals
Indents el. text and el. tail.
add a annotation to the document
Add controlled vocabulary description to document
Add an external ref.
Add lexicon ref to a lexicon
add a linguistic type
Add a locale to the list
Remove all timeslots from tiers
Extract a range of annotations from the eaf
Generate a unique annotation id
Generate a time slot name.
Get child tiers for a given tier
Return a tuple with the first and last item in timeslots
Return the ref annotation data after a given time.
Get before time for a given ref annotation.
Get tier ids for a given linguistic type.
Remove all annotations from a tier.
Remove cv from controlled vocabularies with lang ref
Remove license from licenses list
Remove media linked to other files
remove property if key and value match
Removes the annotation from tier at time time
Remove secondary linked files
Remove a tier from the slot list
- > None
Rename a tier.
Remove tiers for a given timeslot
Print stack trace to stderr
Get embedding levels for text.
Perform explicit embedding and overrides on items in storage.
Replace neutral types with embedding types.
Reverse a contiguous sequence of characters
Reorder levels in a storage dictionary.
Normalise the current file for the scene.
) : str
Command line interface for the tool.
Update the binding with the current version of the module.
show the GUI
Discover GUI
Add items to file menu
Keep the current selection intact then restore it after the context exits
Context manager that ensures the time is maintained on exit
Show no gui
Get the cumulative sum of each item in the data
Return a list of values for a single axis from a dataset
Draw a constant line
Load the transform parameters for a plot.
Reverse a mapping.
A range of floats
= conf return
Render the graph and return a string
Calculate left margin
Calculate right margin
Calculate top margin
Add a popup to the context
Calculate bottom margin
Draws the graph
Make text for a datapoint
Draw the x labels
Draw the y labels
Draw x guidelines with count lines.
Draw y guidelines at the bottom of the graph
Draw the titles of the graph
render inline styles into xml
Start the SVG output.
Returns a list of stylesheet names.
Connect to the IRC server join the channels and enter the event loop.
Send data to the client.
Connect to the server and register the user.
Send a message to a channel or user.
: tuple of dispatch patterns to dispatch
Change the user s nick and re - register it.
= True ) return
Handle socket registered event.
Interact with the event loop.
Register the bot with the boss.
Task runner Loops through the task queue and executes each callback with the task id as argument
) : return : tuple of commands
Join a channel on success.
Executes a task if the worker allows it.
Add a nick
Send the user a validation email.
Sends a password reset email to the user.
verify token for user account
Remove user s avatar
Allow POST requests only if the method is a string.
Get the docker client
Returns a tuple containing the TLS certificate and the TLS key if tls is enabled for this connection.
Returns the name of the service.
Call a docker client method
Submit a docker call.
Check if a task is running in the service
Stop the service on the docker host
Validate the email address.
Update the user password and return it
Update the password on the user.
Validate email address.
Create a token for the user and return it
Deletes a token
Resend confirmation email only if user is authenticated and email is different from current user.
Send email to user if validation passes.
Update the expiry value for the timezone
Return the context to use when sending a password reset email.
Send email to user.
Set the subject of the notification email subject.
Add the email subject to the notification.
Authenticate the request with a token
Extend authentication to check token expiration
Show a Bokeh plot in the Jupyter notebook display
Given a list of hv plots return a list of bokeh plots.
Build custom js data and add it to plot
Returns the widget with the given name.
Render dimensioned objects to HTML.
Input widget for text field.
Return a list of tuples where key is the name of the object and value is the object
Returns the name of the owner of a method.
Parse and assign http auth data
Send a ping request.
Get information about the connection.
Check the health of the service by communicating with it.
Convert bytes to readable string.
Total CPU load
Returns the size in bytes of the memory
Get the up network number.
Get the volumes of the cluster
get volume by id
Get the size of a volume in bytes.
Get the percentage used for a given volume.
Get the average disk temp for a given volume
Get the max disk temp for a given volume
get disk by id
Login to the API and get the access token
Request url and return response
Method executes request url and returns json data
Calls the update method of the objects utilisation and storage
Get the utilisation of the network.
Fetch a syno storage object using base url and api.
Get a context object for the webhook event.
Get the current tenant token.
Build the attributes for the element
Override existing apps in settings. py
Temporarily disable apps
Get all global settings
Handles GET requests.
Change a value in the config file.
Migrate config file
Start the webserver and a daemon thread.
Wait for a response from the server.
Queries the server and gets new access information
check if a token is present
Set access credentials for the current token
Create the manifest table in Amazon DynamoDB.
Split path into bucket and path.
Check if there is a glacier in the bucket
Remove None values from dict
Add run id to manifest.
Check if a run id is in the manifest.
Extract schema from uri.
Fix schema string to something more pythonic
parse a json structure to a python structure
Transforms a line of text to JSON.
Convert a good event to a JSON object.
Get the template to use for the given response.
Returns a string with formatted context
Print the variables in the template with the given context.
Formats an SQL query with HTML.
Formats a django context object to HTML.
Pretty print a dictionary as an HTML table.
Styling for html content.
Format object with pretty printer.
= None return indent + allowance
Get the next latex token from a string.
Get latex nodes from a latex string
Converts a latex document to text.
) Converts the document to text
Un - ascii a string.
Get organisations of the authenticated user
Get a list of boards.
Get a list of members.
Update organisation by query params.
Remove member by ID
Add a member by ID
Add member to the group.
Get list of all repositories.
Add a new card
Get all labels of the logged user
Get a list of items from the server
Updates an existing label.
Update a label by a set of parameters
Get authorisation url for your app
Get credit card information
gets a board from the server
Get a list of attachments.
Get all checklists.
Add a comment to the list of comments
Add an attachment to a user s account
Add checklist.
Add a new label to the list
Add a label to the list of labels
Add a member to the group.
Get all members of the chatroom
Get a list of cards from the server.
Get organisations from DCNM.
Create a new board and return its ID.
Get information about the board
Get a list of lists.
Get a list of labels.
Get a specific card by id.
Get checklists.
Get a single organisation by name.
Update board.
Add a new list
Add a new label to your account
Get checklist info.
Get a card from the checklist
get items from the checklist
Update checklist by name
Add a new item to the list
Remove item from collection.
Update checklist name.
Update state of checklist item.
Add API key and auth token to query params
Check for errors in the response.
Builds a URI from the path and query params
Fetch JSON data from the API.
Create an organisation object
Create a board from a JSON dict.
Create a label.
Create a list
Creates a card object
Create a checklist.
Creates a new member object
Get organisation by id.
Get board by id.
Get a list by id.
Get a card by id.
Get a checklist by id.
Get member by id and full name.
domain from url
Convert text to markupless markup.
Set a password for a service.
Split the text at the locations whose decision equals shouldSplit.
Mark all matches matching the regex in the list of locations.
Find all occurrences of a regex in a text and mark them as undecided.
Main entry point for the cli.
Creates a cipher for the given password
Returns the cipher mode.
Sorting priority of posts
Check scheme of the aespyrc.
\ Called when a publish message is received
Create a new id and return it.
establish a connection to the broker
( response ) )
Encode a string as a bytearray
Decode a string to a tuple
Convert an unsigned 16 bit integer to a sequence of bytes
Encode a length.
Decode a length from an iterable of bytes.
Encodes and returns the header as a string
Encodes the session credentials into a string.
Decode a BIP0022 UDP packet into attributes.
Encodes the current session and result into a string.
Decodes a packet into the session and result fields
Decode a BQS packet into a message.
Encodes the message and returns it as a bytestring.
Encode the message and store encoded message in self. encoded.
Decode a BCC Packet into self. Topics.
Encode a message header into a string.
Encodes the message and saves it in self. encoded.
Decode a BQ message
decode a packet into the message
Build and return the url for this request.
Send a request to the API.
Refreshes self. blocks
Formats the data according to the defined analytes
Format data and fit to the data
K - means clustering.
Predict the closest clusters of the data.
Maps a cluster to a set of cluster ids
Sort a set of clusters based on mean value
Get date from given datetime string.
return the total number of points in a dict
Get the total time span of all the datasets
Returns a unit value based on the natural logarithm of a quantity.
Convert element to pretty string
Return analyte 2 namemass.
Return analyte 2 mass name from a string
copy all the files with extension in indir into outdir
Enumerate the elements of a bool array.
Boolean op.
Fast smoothing with a kernel
Calculates the gradient of a matrix using numpy. polyfit.
Find the indices of the minimum values in a dataset
Mean shift clustering.
k - means clustering
Get all the srms defined in a srm file.
Read the configuration of latools
Read the latools. cfg file
copy srm file
Exclude downholes from a boolean array
Autorange plot of the signal defined by analytes
creates a set of default values for the different time intervals
calculate the ratio of an analytes
Calibrate to a set of analytes.
Dictionary of ablation times.
Calculate the correlation between two analytes.
add a new filter
Get all the parameters of the object
Plot histograms of data
Load reference data from CSV files
calculate molecular molecular weight
Generate named tuple with keyword arguments
annihilate a stack based on a predicate.
Deduplicate a stack of tuples
Calculates the av standard deviation and standard error for weighted stats.
Gaussian distribution with num variations.
Stderr op.
Get a subset of the subsets
Calculate the ratio of all the stages.
Make a subset of the dataset with the given samples.
Applies the classifier to the given samples
print number of removed nodes from all subsets
Filter reports with the given filter
Export the minimal set of traces to a csv file
Save the log to a file.
Fold functor by mapping fa to z.
Bayesian scale of a statistic
Scale a time series to the median value
Despike noise in sig
Despike a signal using an exponential decay filter.
Add a new component to the index
Remove a component from the RHS.
remove all components and switches
Remove unused switches
Find the best fuzzmatch for a given key.
Get a component from an arbitrary filter
Get information about the system.
write log to a file
Read log file and return run arguments
Get modem information.
Send a message via modem.
Parse a SQL file or string and return a SQLFile object.
Link for nbviewer
Render a thumbnail div
Generate code div.
Code example of the notebook
URL of the notebook if available else None.
Get output file name.
Create the python file.
download num files
Create a thumbnail for the current picture
Scale an image to the given dimensions.
Saves a thumbnail of the image if the image exists.
Copy thumbnail figure from notebook to outfile
Get url for notebook file.
Returns a generator that yields all the languages that have the field name in db table but not in
Process thumbnail file.
Resizes the image and saves it.
Get all thumbnails
Creates new thumbnail.
Delete image of specified size.
Create a thumbnail
Get thumbnail by name and size
Delete a thumbnail
create a new message and add it to the traffic list
Register a callback for a message number.
Get the set of states of the message
Send a message.
Get blueprints from all registered providers.
Called when a message is received from the provider.
Receive a status from the provider.
Forward a message to all connected clients.
Sign a transaction dict.
Estimates gas cost for a transaction with web3.
Estimates gas cost for a transaction.
Write to the stream.
Reads a line from the serial port.
Returns True if this message has bad headers False otherwise
Add an attachment to the email.
Register multiple services at once.
Create a configuration from a module.
Register multiple resources at once
Return value at key or raise KeyError if not found.
Try to throw an exception or stop iteration.
Setup the application with the data manager
wavelength num
Cauchy equation for a wavelength and coefficients
Delete request to API endpoint
True if paths refer to the same physical file.
Create a file and link to it
Initialize global logging configuration
Raise error with remessage invalid subparser.
Claim a set of file readers.
Get a new column header from the metaheaders of the vcf reader
Claim vcf readers for a set of files.
Initialize population statistics from a vcf file
Claim vcf readers from unclaimed file readers.
Return a list of lines in data.
Return line terminator from input data or none if not found.
Suffix line terminator.
Move to the next line.
Search backwards from the current file position for a line terminator.
\ Return the last N lines of the file.
Return the first N lines of the file.
Follow a file and yield lines as they are found.
Claim a set of file readers.
Parse a VCF record from a line.
Create ordered dict with sample names as keys and sample values as values
Format tags into a string.
Join info fields.
Return the name of the field to format.
Return the value of a sample field
Text of VCF.
Add a new sample value to the metrics.
Add or replace filter
Returns a list of all available categories for the given user and products
Generate a form for a list of products.
Returns a staff product form for the given user.
) - > None
Create a model fields form with multiple choice fields.
Returns a list of items pending or purchased
( self )
Parse an OSM file and return nodes ways and relations.
Get notes from OpenStreetMap RSS feed
Return True if the condition passes the filter.
Check if the condition is met for the given user
Returns the quantity remaining for a given user.
Filter the queryset to include all carts for which user is a member.
Filter carts by user.
Add some filtering to the queryset before saving it to DB
Provide a pre - filter by user.
( user ) )
Creates a new commerce cart reservation for the given user
Updates the reservation duration based on the current number of reservations and any vouchers added.
Adds a voucher to the cart
Checks for simple vouchers and removes them from the cart
Removes all discounts from the cart and recalculates available discounts
in self. data
Get form from GET request
Render the data to HTML.
Display a list of available reports.
Returns a report of all items sold.
Show all payments.
Query for all credit notes that have been refunded.
Checks the status of selected products and categories
Check the status of selected discounts.
Returns a list of product line items for a given product or category.
Calculates the number of paid invoices by date.
Adds a credit note to the project.
Returns a queryset of all invoices.
Returns a list of all attendees and their profiles.
Get a list of speakers registrations.
Get missing categories
Returns the amount of credit available for the current user
Check if ticket is sold out and unregistered.
Edit a profile.
Handle profile form.
Handles product form submissions.
Handles a voucher form submission
Show a manual payment form.
Refunds an invoice
Extend current reservations to a given number of days
Sends an invoice via mailout.
Add badges to invoices
Render a badge from a user.
Get all available discounts for given categories and products
Annotate discount items with past use count.
returns a list of all products in the given category that are available in the user s account
Apply the credit note to an invoice.
Apply a cancellation fee on the credit line and return the resulting credit line.
Generate a random access code.
Get object from module name.
Returns the invoice for the given cart
Generates a manual invoice for the given user and price.
Applies the credit notes to the invoice
Checks if user can view the invoice
Refresh data from the database.
validate if invoice is allowed to pay
Updates the status of the invoice.
Marks the invoice as paid
Check if the invoice matches the cart
Checks if the invoice is valid and if it matches the cart
Void the invoice
Refunds the invoice
Send an email to the user of the invoice
Update the annotation and name from a dictionary
Flatten a field with its nested schema.
Print all the downloaded files
Download a file from the server
Get processors in the cluster.
print all inputs for a processor name
send rundata to Forest
Create and upload a project to a processor.
Upload a file to the repository
Download a list of data objects by field
Get all subclasses of a class.
Get github and asana repository and issue number.
Get variant phenotypes with suggested changes
Get variant phenotypes with merged changes
Update the element by id.
Remove duplicates from a list of strings
Authenticate using asana api and github api
Select a value from a list.
Get data for saved issue from the store
moves issue data from one namespace to another
Get task data from the saved state
Returns the asana task with the given id.
Applies a given action to the item.
Wait for the queue to empty and call the callback function if specified
Creates a task but does not assign it to the workspace.
Get types of data associated with this project.
Equivalent of the log function in ekm - logs
Initialize serial port
Set the polling values for the process.
render json reads since given timestamp
Set current context to context str if context str is longer than current context
convert a positiv pf to a number pf
Set max demand period
Set meter password.
get the buffer for the months
Assign schedule to self. m schedule params
Assign season and schedule to the calendar.
Assign holiday date to self. holiday date params
Read schedules from the device
Read month tariffs from the device.
Read holiday dates from device.
Read the settings from the device
write a message to the Purr pipe
Send password authentication request to the serial port
update all observers
Send request to receiver and calculate fields.
Sends address to the bus and returns meter data
Send raw bytes to the meter and get result
make req and b requires all fields not in str
Set LCD to display items in display list
Set relay timer
Write to serial port.
Set pulse input ratio.
Send zero or resettable to the serial port.
Set Lcd to a specific password.
Recursively iterate over all fields in fields dictionary.
Iterate over all schema sub - fields.
Generate random text
( result )
Colorize text with given color.
print ( text )
( result ) )
Parse a list of arguments
Setup ivoire with the given configuration
Run the given test suite
transform a config if possible and return a str
Transform describe to ast. class def.
Transform the body of describe node to str.
Transform example to ast. function def.
Replace the ast context variable with a string
A simplified ast. arguments object that accepts a single string argument.
Register finder to sys path hook.
Transform source bytes to code.
Apply a parser to the arguments
Load a module by its name.
Load python modules from a given path.
Find all files under path and yield paths relative to path.
Remove a file from the places. config directory.
Send a restart message to the chat.
Parse results and call the associated function
create a service from command line options
Refresh the current session with the current list of nodes
Remove nodes from the nodelist
Remove node from the graph.
Get the last updated time of a node
Get all nodes in the cluster.
Remove expired nodes from the nodelist
Increment the times modified counter by one.
This function takes a list of values and seperates it into a list of toks
Return list of bad files in path from start to now
Merge two status objects
Query whether a value exists.
Return the identifier of the given token
Create a new service.
Consume reader and completely parse it.
Decorator to specify an optional parser for the given parser.
Produce a parser that parses exactly one input.
Produce a repeated parser using parser ( parser ).
Produce a repeated parser that parses input by parsing one or more times separated by separator.
Repeat parser with separator and return repeated parser.
Cancel the value if it is still running.
Check if this value is valid.
Create a heart if it does not exist.
Create a multi - service master.
Freeze graph from a checkpoint.
Save the current state of the graph to a checkpoint.
Restore graph from a checkpoint and save it to a file.
Restore and save weights from a checkpoint.
Restore from a checkpoint.
Creates a new Tag instance from a given parsed token.
( self ) )
Validate the arguments against the class requirements
) : return
Parse tag.
Get context data.
Load a caffemodel into a tensorflow session
Freeze caffemodel from tensorflow checkpoint
Save a graph using tensorflow
Make rows of a sequence with num columns columns
Generator that yields every other element of an iterable.
Remove duplicates from a given iterable.
peek at the first element of iterable
Suppress exceptions raised by the given callables.
Assert that the iterable contains ordered items
Swap on miss
get first n queues from the queues
) [ 0 ]
Parse as variable.
Returns a keychain which is a descendant of the keychain at path.
Iterate over nodes in a structure.
Select element based on selector expression
Parse selector.
if node. parent
Returns the nodes in the rhs list that are siblings of each node in lhs
Match node against a list of validators
Send a GET request to a URL and return the body
Expire cache items older than age
set key to v
Returns tuple of values stored for given key
return k in store
Check the chain for the specified timestamp
Create instance from JSON string
Create instance from XML string
Minify JS content according to the template name
Call fn with every log line read from self. logfile
Get one or more lines from the file.
Validate token return the data if it is valid.
Return a fernet instance of the configured web engine
Validate token using supported digest algorithms
Create a new secret link token.
Calculates a random 32 bit counter
Calculate the counter used to store the number between a and b
Calculate the average duration of a visit list.
Create sources and triggers
Send a list of events to the source.
watchdog each registered source
Parses a format string.
Parse a line of log and return a dictionary
Validates that a field has an acceptable expiration date.
verify token and store in session
Name of device or browser
Same as warn but only warns if msg starts with str
Connect the receiver to the email.
Create a new secret link.
Send a notification for a request.
Send a confirmation notification for a given request.
Send email validation notification.
Send reject notification to record owner.
Send a notification via EmailMultiAlternatives.
Create a new user.
Validate token against expected data
Revoke a certificate.
Create a new record in the database.
Get receiver by request id and receiver user.
Confirm email and update request status.
Create secret link.
Pack the arguments and return a hash.
Verifies the signature
Returns True if the record is embargoed False otherwise
Create a new access request.
Process the confirmation email and confirm the user.
. ssh_endpoint, )
Reverse function for sortable columns
Return selected item as string or None if not selected.
Get list of items
Get version from. txt file.
Set the version in the. py file.
Start timer.
Get the next event and send it to the back callback.
Delete secret link.
Stop the thread.
Empty the event queue and send it to the Kafka broker
Received events.
Create elasticsearch client and start t.
Encodes an event to binary protobuf format.
Encode a list of events into a protobuf message
Decodes a protobuf message
) send events buffer
Generate a preview for a URL.
Retrieve a preview of a file.
This is the main loop for the worker thread. It gets a task object from the queue
Whether or not to log the current time
Abort the authentication.
Perform string mapping for SASL ciphers.
Add a footer to an admin page.
build payment parameters from amount and currency
build register credit card parameters
Pay with alias.
Get a version string.
PyQt slot called after QWidget is created
Create and configure the up shortcut
This method is called when the item is activated.
Called when user selects an item in the list.
Called when nav button is clicked
Combine resource source path and target path.
Fetches all children of current node
icon for source at given index
Forks a child process and returns its pid.
Get maximum file descriptor limit
Close a file descriptor.
Close all opened file descriptors
Redirect a stream to a file or file descriptor.
Set form widgets attributes.
Import the module for the given app name and module name
Import all Django project modules and return a list of them.
Include a template string.
Return True if path is an absolute file or a directory.
Validate s3 url
Get absolute path for filename.
Lists the contents of the given folder
build json from task template
Executes the workflow.
Archive a folder.
Make all directories up to p.
List the files in the project archive matching the glob pattern.
Restore a folder from the archive
Create a new instance of the bundled service.
Returns a list of files in the path
download file from server
Returns whether the path exists or not.
Get parent of the given path.
Create a folder at the specified path.
Upload a file to the container.
Delete a file or folder from the server
Validate storage path.
Creates a new instance of the Vault client given an access token and environment.
Create a new service in the given environment.
Get the metadata for the given entity
Delete project from authenticated user.
Deletes the folder with given name
Copies the content of the file to the destination file.
Get the signed url for the given file id
Emit a record.
Generate a URL for a service.
Returns a copy of the request with the given headers
Create a copy of the template with the specified parameters
( str, )
Returns the field names in self. list
Map a function over a set of inputs to a set of jobs.
Run oncotator on a vcf
Sort list alphabetically by f
) [ 0 ]
Loads an export
Shift this column by t
Get the sum of the field values
RFXCOM collector.
Create user account.
Parse vn results.
Parse release results from release page
soup - BeautifulSoup object to parse staff results
Parse character results.
Parse tag results.
Parser for user results
Tar a list of file paths into a tarball
For all paths in file paths run op on them and copy the result to output directory.
Copy a file from the file store to the output dir.
Add docker parameters to this host
Refresh the metadata from the database.
Returns a list of strm objects corresponding to the streams in the database
Export the project to a directory.
Parse search results.
Reset the API key and store it in the database.
Return a list of users in the database
Run a bwa index tool
Get a connector DB instance
add a stream
Add a stream to the scheduler.
Insert a stream in the database
Start the synchronisation process
Stop the synchronizing thread if it is running.
Download url and save to job. file
Upload file to S3.
Print all labels for a ontology
Print the hierarchy of a ontology
Get mean insert size of bam file
Create a new database file.
Export the dataset to a directory in JSON format
Return device object for this path.
Get labels for a given ontology
Get the hierarchy of a ontology
Get a new empty configuration file.
get mount path of current docker container
= self. prefix
Create argument parser
Create and return a pipeline command string
Set authentication for websocket connection.
Handle the response from the server.
Pings the robot.
Creates a new object in the database
Update object in path
( path ) )
Subscribe to a stream.
Return a list of device objects.
Cut an adapter between two docker images
Run faidx on the file store
Index bam file using docker call
mark duplicates and run docker call
Run samblaster on the sam file
Mark duplicates in bam and bai using picard.
Run picard sort on the input bam.
Run kallisto using the kallisto tool.
Returns the user affinity matrix for the given test.
= cmd return cmd
Subscribe to a stream.
Connect to the websocket.
Start a timer to reconnect to the IRC server
Resubscribe to the current stream
Called when websocket connection is established.
Called when websocket connection is closed
Called when websocket error occurs
Called when websocket connection is received.
Ensure websocket connection pings
Run a gatk variant select
Quick check if a bam file exists
Write a configuration dictionary to a JSON file.
Return current configuration as JSON dict.
get one ontology term
Search the ontology by name with the given query
Provide suggestions for a ontology
iterator of all descendant terms
iterator over all descendants of a ontology
Get labels for the ontology.
Yield hierarchical terms from the ontology
Run fastqc on the two specified bridges
Add a stream to the query.
starts the docker container
Starts a Spark job.
Start datanode in docker container.
Stop the apache file store.
Check the status of the Spark and HDFS containers.
Find a zone by name
Fetch the zone config from the API.
Merge multiple config chunks into a single config set
return list of errors in the changeset
Minimize a list of members by fitness score.
Calculate the average fitness of the members
get average cost of all members
median cost of the members
The mean of the parameters of the current cluster
get members of the cluster
) return self
Normalize keys converting keys with %s to str.
Get environment variables from os. environ
Wraps a callable to throw an exception when called.
Transform the results of package search into a format that is usable by distutils.
Transform result to a str
Converts html to xhtml
Convert xhtml to html removing the xhtml namespace
Open doc in browser.
Drop this node from the tree.
Remove the tag from this node and its children.
cssselect wrapper for lxml. cssselect
Returns a generator of namedtuple members for all loggers.
Get counts from environment variables
is this a single class
Check if is single module
Validate params in request.
Validate id in request.
Try to decode a path from file system.
Escape all strings in an argument spec.
Get the canonical codec name for the given encoding.
Detect bom codec.
] return None
Convert string int or float to decimal.
) fromstring - Parse a string
Parse a file or file - like object and return a ElementTree.
Convert a BeautifulSoup tree to a BeautifulSoup element and return the
Get the current traceback
A string representation of the exception.
Render a summary of the exception to HTML.
Generate a plaintext version of the traceback
) Render the source
Determine if link in egg info matches a regex
Sort a list of links into eggs based on their connectivity
Get Content - Type of a URL.
Iterates over all links within the page
Check if the certificate is verifiable according to the trusted attribute
Return a list of files to include in the source dir.
Exclude files that match the exclude patterns.
Get requirements from requirements file.
Join lines without trailing str.
Ignores comments and replaces them with their text.
Validate node is an ast node.
Visit an attribute node.
Convert a JSON string to a number.
( self )
Remove the last context from the stack.
. copy ( )
Try to match the current request with the route defined in the URL rule.
Push the current request context onto the stack.
Check if a distribution is an editable requirement
( self )
Decorator to add a url default function to a route
Get root path for the given import name
( self )
Print shell completion options.
Get cookie domain from app configuration
Check if a library is purelib.
Iterate over uninstallation paths from a CSV file.
Check compatibility of wheel.
Build one wheel file from requirements
Generator yielding all symbols used by code object
Write a delete marker file to a directory.
Check if we are running under a virtualenv
Get username of current user
Get a distutils scheme for a given dist name
Parse cache control headers.
Cache the response if the status code is num or num.
Load a template from the path.
Save the current state of the cache
Convert a value from one type to another
( filterer, filters )
( logger ) Add handlers to logger
Configure a logger from a dictionary.
Execute a python file.
Override the temporary directory with the replacement directory.
Get URL and revision from self. url
Get item from obj [ argument ]
= defer )
Get the default cache location.
Yield distributions from zipped pip - style egg metadata
Find distributions on a given path item
Declare a namespace for package name
Return mro without importing it
Returns the registered adapter for the given object
Ensure directory exists for a file.
Iterate over all entry points of a group
= self. platform
Evaluate a marker expression.
Evaluate markerlib.
Format a record and return it as a string.
Get decimal with given precision.
Get the decimal precision of a number.
Get scientific notation for value in locale
Get unpatched class
Verify that value is a valid requirements string
Fetch the package and install it
do dice roll
Converts a price string to a Price class.
Creates an attribute that validates a price.
Validate the request against the spec.
Get method name from app name.
Call method with parameters from args
Module name of the blueprint.
Returns the blueprint for the route if any.
\ Returns whether or not the distribution req to install is editable.
Iterates over all requirements and installs the one specified.
Get all namespace packages
Convert a model instance to a json string
Tokenize a document for tokens annotated with an annotation
Merge two HTML sequences and merge annotations.
Copy annotations from source tokens to destination tokens.
Compress a list of tokens.
Generate HTML from a sequence of BeautifulSoup tokens.
Expand a list of tokens to a list of tokens.
Locate unbalanced end
Fixup HTML tags in a list of chunks.
Flatten an HTML element.
Split text into words.
Return the HTML start tag for the element.
Return the closing tag of the element.
Serialize HTML fragment.
Move all block level tags inside the element and delete the tag
Build and return the cache url for this service.
Recursively auto - link element and descendants.
Kill conditional comments.
Parse a document from a string.
Exports a repository to a location.
Get the revision for a directory.
Name of the module
Propagate exceptions raised during tests or during tests
Auto find instance path
Update the template context with the current blueprint context.
Dispatch an HTTP exception.
Called when an exception is raised.
Raise the request s routing exception if debug is enabled otherwise raise redirect.
dispatch the current request
Default options response method.
Create url adapter.
Inject URL default values into the values dict
Yield unique values in iterable
Populate metadata with may - requires information
Convert a requirement to a requires distmantion string
Convert a pkginfo file to a metadata file.
Returns a generator that will import each module in self. paths and return it.
Generator yielding all subclasses of the test case
Generator yielding the names of all the methods defined in the module
Check if path is a module path.
Perform a os. walk on the given basedir.
Add default values to dump arguments
Set default JSON decoder for kwargs
Set many keys at once.
Increase a key by delta.
Dumps a python object into a string
Build editable options from the requirement string.
Populate link field if not already populated.
Returns self. source dir if it has not been explicitly set.
remove temporary source directory if exists
Get distribution object for this project
return a list of paths to site config
Iterate over sys. modules and yield file names.
Reloads the system.
Convert a string to text.
Find ca bundle path.
Parse a docstring and return a DOM tree.
Parse HTML from stream and return document HTML.
Parse a HTML fragment and return its document fragment.
translate a word if it has a translation for num
convert args to tokens
Bind to host and set server port.
print ( '' )
Load bytecode from a file - like object
Convert a dictionary of params and kwargs to a stylesheet param dict
Run a command in the subprocess
Get implementation version
Given a location and a basename return a list of distributions that match the basename
Find external links on a page
Open a URL locally.
Remove all paths from sys. path return known paths.
Return a set of all sys. path directories in sys. path.
Add a package to the site.
Add a site directory to sys. path
Check if enableusersite is set
alias mbcs strings to their stdlib equivalents
Set sys. defaultencoding to a reasonable default for the platform.
Force sys. egginsert after local site packages
Adjust sys. path to include all classpaths.
Call subprocess. popen and enqueue lines in a separate thread.
return True if we have pyrex installed
Convert pyx source files to lang files.
Run the application and store the traceback in the frames attribute.
Return the contents of the given resource.
Return True if name looks like a URL
Unpack file at link into location.
Download http url.
Check if downloaded file exists and matches download hash
Format currency symbol with currency format.
Exchange component with backend
Decode and optionally flush decoder.
Get the default context for a template.
Render a template and send the rendered signal to the app.
Given a template name or list of templates return a string of html.
Render a Jinja2 template file with optional context
Shortcut for pkg_resources. parse version
Check if name is already declared
Visit a name node.
Visit from import node.
Given a Flask app return a WSGI server to accept requests to.
URL encode obj and return it as unicode string.
Select wheels that match a given requirement
Add requirements to the requirement set.
Exports the project to a specified location on the local machine.
Lookup items in ASIN
Yield pages from query result.
Ancestor of the browse node
return list of child nodes of current element
Get element by path.
Safe get element text.
Safe get element date.
Price and currency as percentages.
Return the price of the product as percentage of the total price
Send the request and return the cached response if needed.
Build a response from request and response.
Capitalize first letter and capitalize last letter
Compare two values in constant time.
) == 0
Derive a key from the salt using the digest method specified.
Get signature from value.
sign given value
Verifies the signature of a value.
Unsign value.
Create a signature for value.
Validate the signature of a value.
Serialize obj to a string and sign it.
A server error.
Find the parents of all the given packages.
Return all directories under base path.
Prepare a response from cached items.
Unsigns a wheel file.
Unpack wheel file to directory dest
install scripts for all distributions
Arranges the graph using tabs and a dot syntax.
Redraw the graph using xdot graphics
Get a node from the graph.
Change the directed status of all graphs
Called when edges are added or removed
Called when a component is changed
left click for tool
Called when the diagram is modified
Clear diagram canvas and copy to viewport
= None )
Unmaps a model.
Runs when an element is added or removed from the graph
Parse xdot data
Process font setting.
Process ellipse token
Process a polygon component from the token stream.
Process a polyline component and return a component
Process text tokens
Process image tokens
Render file and return boolean response.
Saves an object in the dot file.
Loads and parses the dot file.
Check if a point is inside the box
Draw the bounds on the current path
Open the wizard and show the result.
Create the sqlalchemy session and add it to the context.
Parses the dot code into a model.
create a new graph
Open file dialog
Save the current model to a. dot file with info
save dot file with info
Provide edit traits for a graph.
configure nodes after initialization
add edges as edit traits
about godot.
Add a node to the graph
Add edge to the graph
Add a subgraph.
Add a cluster to the network
Request a graph and return it.
edit dot file
Configure dot code
Prompt user to confirm or close the app
move all components to origin
save to file like object or file like object
Load value from a file like object
Save the image to a file.
Load subtitle file from given filename with given format.
Create a property that is an alias of another.
Parse a text file to a list of words.
A list of start words
Add a markov chain.
remove chain by name
Build chain from source to chain.
Creates a new graph and saves it to a file.
Delete node from the graph.
Get node by id.
Delete edge from the graph.
Adds a subgraph to the visualization.
Called when a program is changed
+ new return self
Parse a GO DOT file and return a Graph object.
parse dot file
Build a top graph from a list of tokens.
Get time units and multiplier for given number of seconds
Format a duration in seconds to a string
Load a graph from a file.
create graph tree editor
Generate windows of a given length from a given iterable.
Get all children of the given object
Add a child object to the object
Insert a child object at the given index in the object
Delete a child from the object
Called when a child of the object is replaced.
Called when children of the root object have changed.
Get the label of the object.
set label of an object
Called when the label of the trait changes
Shortcut to initialize an edit window.
Add nodes edges and listeners to the editor
Add trait listeners to the object
) : str
= event. changed
Add nodes to the graph
) : str
= event. changed
Add edges to the graph
Parse xdot directive
Called when a drawing operation is performed on the component
Creates a node
Create an edge from a graph.
Called before the query is executed.
parse xdot drawing directive
creates a label for the drawing
Called when the drawing changed in the component.
Called when the component position is changed
Called when the current position has changed
Mouse button down handler
Highlight a string using pygments
draw self on the mainlayer gc
Returns True if the given point is inside the polygon.
Draw the mainlayer onto the canvas
handle an event in all registered engines
run the thread
Get full page url with scheme
Render the prev and next links as HTML.
Render seo links for current page
Create a URL identifier from user and password.
Discovers all modules in a given directory.
r Discovers all modules in a given directory and its subdirectories.
rlist all modules by module name
Create a directory if it does not exist.
= contents )
Luhn check if a card number is valid for Luhn
Load a module with the given name.
return path return None
Find a module by name.
Split a line to a range of lines.
Removes all namespaces from the given ElementTree.
Check the consistency of the package version.
Create a new str object from a dict.
Merges a dictionary of actions into the current dictionary
Execute the actions.
Add details to the message
Emit the log record.
Add rendition info to context.
Add an attempt to the dictionary of attempts. If the attempt exceeds the maximum it will be logged
Add url to queue if music is available and storage is available
Start workers.
Set value for key k to v.
Get a value from the key.
Recursively traverse a key.
Get an item from the API.
Delete a key.
Plot a heatmap using clustered heatmap.
Add months to a timestamp.
Add months months to a date
Is this a christmas period?
use the specified music service
add a storage service
Load data from a CSV file.
load from json file or gzipped file
= '%s.json'
Filter list of tuples by label
Average by label
Restore data from session.
Merge dict b into a
Import all blocks from all apps.
Verify that a block is valid.
Register a new block.
Unregister a block type.
Convert a file name to mp3 using subprocess.
Returns a reasonable version for the given version
Handle SSL redirect depending on request. endpoint
Parse a Content Type string
Parse a list from a string.
Resize an image to a given width
download a file from Yandex
Establish a connection to the server and create a folder on the server
Upload a file to the API.
Connect to music folder if not already connected
Update the sky file name and other metadata.
read in a phi and iop from file
scale the a - phi of the source
read pure water absorption from file.
Read pure water from file.
read iop from file
write iop to file
b = b + b water = b + b water = num - b water
build a atom from a water molecule
build the sum of a and b
self. build iop str
Batch parameters setter
read param file to dict
Return a list of floats from a string
Set a signal handler for the given signals
SIGWINCH
Default signal handler.
Pause the process for the specified number of seconds.
wrapper for abort and exit
The callback for when a signal is received.
remove event from event list
num = 0 ) Fetch metric sorted
Set the signature from a function or method
Restore signature from partial instance.
Create a new argv dict from the existing ones.
ignore certain metainf files
Key for sorting list of filenames.
Convert Little Endian QR Code to an integer
Parse the header of the archive
Convert seconds to a duration.
print str print str, self
get the data from the ui
This function is called when the user selects a result file.
write a batch to a file
Process the data file.
) return str
Displays the error message
Hides the error message
Run the simulation
cancel the current tab
Quit application.
Saves current figure.
Open log file
Open documentation in the browser
Prerequisite actions
Event handler for clicks on the menu
called on mouse move
Mouse target callback.
vote on genesis and sign it with privkey
Sign this transaction with a private key.
Hash of the message.
check quorum or not
Issue a amount of funds from a sender
Get the last lock from the round.
Get the last proposal that was voted on by the user
Return the last valid lockset for this round or none if there is no such lockset
Get the next timeout in seconds
Called when a proposal is received
Generate a list of private keys using sha3.
Delay packet by add delay between sender and receiver.
= self. timeout - to
Return the native contract class for the given address
Update or add a new data to the filter
transpose a vgg image
Convert image to vgg image
get layer function
get layer output
Returns a dictionary mapping layer names to layer outputs
Create a new key file at the specified path.
Finalize the execution and return exit code
Release a previously created table.
List of tables in database.
distutils. ccompiler. c. compile = compile
Find teradata home directory.
Get a value from the config.
Set a key value pair in the config file.
Handles the table command.
Write default configuration
Set the columns to filter on
export data to str
Returns a float number from a string
Parse gains from specific amp
Parse device settings string.
Wrap text with textwrap module.
detect devices via soapy
Set the center frequency.
Return the result array for the given PSD and state
Wait for a PSD to finish and return its result.
Update the PSD with new samples
Read and parse binary data from file.
= sys. stdout return f
Submit a task to the pool.
to time to repeats.
Create a buffer for the given parameters
Setup a PSD and a writer.
Stop the stream and release resources.
build with cmake
Filter datetimes to a given number of datetimes.
Mask a datetime with num hour minute second and microseconds
Mask a datetime by week.
Delete datetimes from set datetimes.
Convert a list of dates to a set of dates.
Delete the given dates from the set.
Get spi control byte from the hardware address.
Read a bit from the address
Write bit to memory at the given address
Get the number of a set bits pattern.
write gpio interrupt pin into userspace
set gpio interrupt edge
Wait until file exists.
pin function map
deregister a pin
Enable the gpio interrupts.
Sends a number of bytes to the IOC.
Render the tabset.
( form, )
Render the form as a link and return the result.
Extract version from a package name.
Add str to the kwargs passed to the form
Check the status of the response and raise appropriate exceptions.
Send GET request to API
Calculate the humidity from temperature and dewpoint
Calculate thermal dewpoint given temperature and hum
) Publish the message
Calculate the CRC for the given data
Verify the CRC of the data
Convert a storm date to a string
archive the data at the given offset in records
Send a wake up command to the device.
Send commands to the device.
get new archive fields from dmpaft
parses and extracts fields from input source
Update the weather data for a list of sites.
Initialize the logging system
get all pub services from opts
Returns the current value for the specified station and interval.
\ Set the meta data of the sensor.
return self. args
publish args to file
Fulfill the given requirements.
Push override onto the override context stack.
Pop the most recently pushed context from the stack.
Override current node with another node.
Push a new context on the stack.
Pop the last context from the stack.
Add an additional element yielding current.
Remove duplicate field names
Interpret the results of a stat update.
Extract params from query
Get the table as a pandas dataframe
Get a networkx graph representation of the search result.
make a simple plot
return the result as a CSV string
Add the widget context to the template context.
Return a list of tuples of widgets sorted by widget name
Get list of widgets that need to be updated
Register a dashboard widget.
Unregister a widget.
Returns the last update of the dashboard widget.
Saves the setting for this widget.
Should we update the device?
Concatenates two RDDs along an axis.
Check if arguments are spark contexts or bolt array spark contexts
Format axes tuple for printing.
Map a function over an axis of a bolt.
Reshape a matrix to align its axes with another.
= axis )
Convert to an RDD.
get number of chunks for shape in plan
Get n - indexed mask from indices inds
Repartition the RDD.
Stack the elements in this RDD.
Align the range along the given axis.
Return the first element of the RDD.
Return the mean of the array.
Return the variance of the array as a string
Return the standard deviation along specified axis
Calculate the sum along given axis
Calculate the maximum across records.
Calculate the minimum across records.
Transpose the array along the specified axes
Swap two axes of the array.
Reshape the object to a new shape.
Returns the index of the first shape equal to or larger than shape
Cast this RDD to another dtype.
Clip values outside of a given range
convert RDD to numpy array
Turn an argument into a tuple.
Pack an argument list into a tuple.
Validate shape and axes.
a and b
Ensure that lst has a length of at least dim.
Slicify a slice or int into a slice.
Check whether new can be transposed after old
Check if two arrays are reshapeable.
Recursively stack a NumPy arrays
iterexpand - Expand an arbitrarily expanded arry
Lookup a constructor for the given arguments.
numpy. ones op.
numpy. zeros
Concatenate multiple ndarrays along an axis
Computes the discrete likelihood of the data
Returns the most likely alpha of the data
Calculate the minimum value of a discrete alpha function
Find the best alpha value and its likelihood.
Plot the PPF value as a function of choice.
calculate lognormal distribution of the data
Sanitize HTML.
Configure the analytics information for Yadis.
( tags ) ]
Return md5 hash of file content
sha256 hash for unique key
SHA512 hash of the loaded key
Parse a long value from a byte string.
Decode a public key and return it as a str.
Process a SSH RSA key.
Process a DSS string and extract keys.
Process a ECDSA sha - like byte string into the internal ParsedKey object.
Process an ed25516 bit string
Parse a string or file containing a RSA key.
Returns the mechs of the customer
( options )
distutils. core. setup
Context manager to create an audio file.
Returns css for frontend static files
Normalizes the HTML output from the DJ - Framework static file.
fontawesome static html helper
Returns the HTML for the djfrontend modernizr static page.
Returns HTML with dynamic static assets
Returns the HTML for the page with JQuery UI
Returns HTML with dynamic static links embedded.
Returns the HTML for the given datatables version
Returns HTML with dynamic static links embedded.
Returns HTML formset for frontend.
Returns the HTML for the page to scroll to.
Returns HTML with dynamic static assets
HTML wrapper for django - twbs frontend
Returns a string suitable for use in DJ - Frontend HTML templates.
Generate a list of auth hashes
Calculate the expiry time with a given number of minutes
Get user auth token.
Custom serializer for user fields.
Update a user profile.
User authentication failed.
Returns user if token is valid
Check if request is secure.
Get username from username dict.
Create user and get token
Send user logged in signal
Logout of user
login with username password or resume token
login with username and password
login with resume token
Send forgot password signal.
Change the user password.
Recursively merge two dicts
Get a meteor id for the given obj or model instance. If obj is an instance
Get meteor ids given a list of primary keys
Given a meteor id return the object id
Given a list of meteor ids return a dictionary mapping meteor ids to object ids
Get object from a model by a given meteor id
Set default forwards for bulk operations.
Set default reverse for operation.
) return ''
) return ''
Implement setuptools. command. build
finalize the options
path to dir converter
Seeds the instance with a given list of values
Returns the current state of the machine.
Generate a random string with given length and alphabet.
Generate all api endpoints for the given object.
Clears the api path map cache.
Pretty print a variable.
Called when websocket connection is established
Called when connection to the database is closed
Called when a client sends a message
Generator that yields DDP frames from a message.
Process a Dynamic Request
Dispatch a message to the appropriate handler.
Create a new connection from the backend process and reply to the client
Send a ping message
recv a sub from the message
Receive an unsubscribe message
Send a message to a single remote method
( str, str ) )
Main entry point for the console script.
num = self. verbosity msg
Stop all servers and threads.
self. threads = [ ]
Connect to the database and execute queries.
Patch psycopg and psycopg2 if necessary
Generate a random meteor id.
Discover and register api. py modules
Return dict representation of the exception as a dict.
Get an instance from the registry.
Emit a record to the log
add a resource object to the router
Send a GCM message.
send alerts to multiple APNs
apns fetch inactive ids of registered devices
Send a GCM message.
Send a GCM message.
Send JSON data to the GCM server.
Send a request to the API.
Get model class from given module location.
Search the giphy database.
Translate a phrase using the giphy API
Get trending photo for authenticated user
Get a gif from the giphy GIF API
Retrieve the screensaver URL for the specified tag.
Upload a file to the giphy servers.
Convert all int values to int.
Fetch data from the API endpoint
trending search by rating
Return a giphy image object from the API.
Upload a new gif to the repository.
Manage user s access control settings.
Authenticate using Yahoo YT API
Upload a video to Youtube.
Check video upload status
Update a video.
Delete a video
Check video availability
Render a video.
List all videos for the given user.
upload video direct to swf
Upload a video.
Upload video to Youtube
Delete a video.
Entry point for the blog entry
Save video to api.
Delete the video.
Update metadata.
Update the value of a metadata field
Update Item with new attributes
Load a list of parse nodes from a string.
Convert a list of newick trees into a string.
Load yaml file from open file object.
Read a file and return a python object.
Parse a node string.
Create a node with the given attributes
Generate a newick string for the tree.
Get a node in the current graph with the given label
Prune the tree to remove only leaf nodes.
Remove all internal names from this Tree
= True )
Takes a JSON string and decomposes it into a JSON string
Require a setting.
Get a list of arguments from the request
Partially apply a callback.
Get a cookie by name.
Clear a cookie by name
Redirect to the authentication URL for this service.
Get authenticated user by requesting OAuth token.
Add oauth parameters to request
Redirect to the OpenID authorization page for the user.
Concatenate url and arguments.
Parse a line of header and return a key value dictionary.
Add a name value pair
get a list by name
Parse a line into the dict
Parses the given HTTP headers and returns a Header object.
Get normalized header name.
Convert a string to utf8 bytes.
Convert the given value to unicode.
Convert value to basestring type.
Convert an object to unicode recursively.
Called after the plugin is initialized.
Select a policy based on the matchstrategy
Calculate the number of occupied spaces in a triangular grid
write molecules in Gro format
write a pdb file out to a file
Determine molecule numbers based on absolute or relative values.
Resize a polygon for lipids
Get a resource file as a generator.
Add a message to the user cache
Send a message to a list of users.
Get a list of messages for a user
Process the response and inject messages if available.
Check user configuration file.
Verify that the specified profile name exists in the configuration.
Retrieve data from the config and fill missing attributes with default values.
Retrieve password from configuration.
Update configuration data from message.
Update config dictionary entry with user password.
Create a profile with the given message type
display all required items
Get data from user.
Get auth from user defined in config
Configure profile.
Write data into config.
Save authentication credentials to config.
Send the message via HTTP POST
Create a message based on a message type.
Validate user input
Validate a twilio.
Validate slackpost.
Check that value is a valid URL or integer.
Send a coroutine.
Add a message to the bus.
Get body from file if it exists.
Remove unwanted keywords from a set of keyword arguments.
Send a message to Airbrake.
get chat id by username
Send content to API.
Sends the email to the recipients
Get a registered SMTP server
Generate the email message and return it.
Add the header to the message
Add body to message
Add attachments to the email
get smtpd session
Return a ssl object for sending emails
Start TLS on the server
Sends the email to the recipients
Save tags to file.
Unloads the image if it was previously loaded.
Get a region of the image
Validate keys and values.
Remove all internal nodes
read data from the file
Delete this chunk from the file
Resize the file to the given size.
Insert chunk by its id.
Save ID3v2 frames to a file.
Delete a file from the store.
Parse a file into a list of lines.
Processes a line of source and extracts block lines.
Add a block of source lines to the template
Draw a string at the specified coordinates.
Parse ISO 8601 time string
Make html from wordlist
Returns an HTML version of the specified word.
Make html from paragraphs
Make html code from list.
make html from list of items
Save the file in the given filename.
Add delta to each atom in path
Run a game.
Register a mapping.
Returns the class name for the given controller or None if not found
Generate HMAC for AWS API request.
Get AWS request headers
Send a GET request to the API.
Send POST request to the API.
Send a DELETE request to the API.
Enhance Python 2. 7 ape specification.
Change resource record sets.
Get the size of the packet in bytes
Find the last page of an ogg file.
Creates a new section and sets it as the current section
Add markup to self. markups
Processes the content and returns markup tags.
Get markup object for given tag name.
Create an XML writer for the hosted zone.
Attempts to lock a file - like object. Returns a boolean indicating whether the lock was successful
Insert size bytes at offset in file fobj at position num. Ensure file is truncated
Delete num bytes from file fobj at offset.
Convert bytes to utf8 bytes.
add a change to the change list
Parse change info from XML element.
Measure a string using the current style
True if the object has been modified since it was last saved
Delete the record from the hosted zone
Save changes to the hosted zone
Read size bytes from file and return as a string.
Delete all the values for the given key
Called when a tag is loaded from a file.
Update the common attributes of the apics in the database.
Unload a previously loaded sound
Set the points for the loop
Return a list of values of adobe glyphs
Filter glyph names with the given filter
Dump encoding list to a file.
dump a byte array
Check if a file exists.
Create a list of files from command line
Parse a hosted zone element.
Parse a delegation set element
Write a list of blocks to a binary string
Group all paddings into one block and add num paddings to the end
Delete the file from metadata
Save ID3v2 data to a file.
Parses an alias element and returns the tuple
Parse rrset xml elements and return list of records
Parse a record RRset element.
Adds a record to the zone.
Create new mx record
Create a new namespace record.
Create a pointer record.
Create a new SPF record
Create srv record
Get the values from a change.
Write change XML.
Returns XML for a change set.
Create a log file and configure logging.
Get alias item by its name.
Sort a dictionary by its items.
Return a tuple of a html template and a list of attrs.
= app )
Initialize all bars
Add a new bar to the progress signal.
get args as a dict
Determine if the current request is the same as the one passed to the constructor.
Validate the metric class.
Get statistic by its name
Calculate statistics for given stat and frequencies.
Autodiscover Django apps and fail silently when not present.
Exports a metric as a CSV.
Calls maintenance. listStatistics or maintenance. calculateStatistics.
Get a list of values from a GET request
Gets a query variable as a boolean.
Get the next colour in a sequence.
Get parameters for Geckoo.
Displays the latest and previous number of events for this metric.
Displays the latest count for each metric that matches the query.
Geckoboard line chart
Geckoboard geckometric wrapper
funnel for geckoboard summary
Get gadgets stats.
Register a gadget.
Return a dictionary with the context data
str Print error message and exit with given code.
Prompt user for long input
Get a list of strings from the user
Prompt user to enter filename.
Return a pandas DataFrame representing the schedule for a given year.
Returns the winner of the game or None if there is no winner
Get the season of the month
Get the surface of the field
Get the coin toss link
Parse weather table from weather table
parse ref info from the doc
Returns a pandas DataFrame with the schedule of the number of games for each season
Returns a Pandas dataframe of the team standings for each team.
Return team stats table as a DataFrame.
Poll RORO voting.
Get a pandas dataframe with the table linescores
Get the season of the month
Return a pandas dataframe with player stats
Return a unique key for the given class for the given arguments and keywords
Age of the person.
Get a statistics table as a pandas DataFrame.
Get the per game stats table for the current user.
Retrieve the totals for the specified kind in this project
Get the per - 36 stats table for the current user
Get the per 100 best results
Get the advanced stats table for this cluster
Get the stats table for shooting.
Get the statistics table for the current user
Return gamelog table for a given year.
Gets a single item from the session and returns it.
Combine play details for each player with their qtr time.
Add team and opp columns to pandas features.
Add team features to a DataFrame
Computes the initial win probability for the given line
Returns a Pandas dataframe
Simple shortcut for awarding single year.
Name of team
Get all boxscores for a year
Get information about a year.
Return head coaches for a given season
Returns a pandas dataframe of the schedule for the given year
Returns the off coordinator for a given year
Get the coordinator for a year
Get the stadium url of a stadium for a given year.
Get scheme for the given year
Returns the alignment scheme for a given year
Turn off splits for a year
Get HTML from a URL.
) [ 0 ]
get directly from queue without locking
) return closed
Get a batch of data from the table.
Get the remainder of a file in chunks.
Get a generator for a specific file
Read the given file and parse its contents into a protocol buffer object.
Write pb objs to ofp file ofp.
Read varint from file.
Read and yield file objects from the file.
Flush and close file descriptor.
Write pb2 to the stream.
Flush output buffer to file.
Get the path to the game dir
Performs keyboard emulation with control key pressed.
Evaluate traits and return a list of descriptions
Repeatedly call condition until a condition is met.
Repeatedly poll element until all traits are present
add ignored exceptions to ignore
get the main volume of the system
Returns the source code for a given operator and value
Send a message to the SMTP server.
Get the status of the NAD.
Power off the device.
Power on the device.
Set the volume of the light
select a new source
Deobfuscate a URL with the given key.
CRC of a plaintext
Obfuscate a string using unfriendly algorithm.
Find missing schema in html for song
Get all hrefs of html page
Check if song name is valid
parse html file return list of links
Returns the URL for a song from Google Music.
Parse google html and get download url
Parses a song and returns the URL of the website
get html response
download a file using requests
download file with wget
Find stations by a city name
Get a location observation
parse observation from json response
] List of compilers to use
( self ) )
Returns the last compiled compiler mimetype.
Returns the compiler format extension for this file type
Register a processor for a mimetype.
Unregister a processor for a mimetype.
List of finder paths.
Register default extensions
import qtcore pyside qt5 or pyside
Get IDA s netnode.
Add plugin name to netnode plugins.
Delete a netnode plugin
import qt core. q settings
Export settings dict to ini file
Directory where to look for ida files
Iterate over all keys in idb directory user or system
A simple error handler that returns a response with the appropriate status code and headers.
Load a DynamoDB table.
List all tables in Dynamodb
Fetch items for a given category and date
Return the id of a metadata record
Get the updated on timestamp of an item
Fetches the owner team for a given crate id.
Fetch the owner of a crate instance.
Fetch the versions of a crate as a dictionary.
Fetches the downloads for a given crate id.
Get crates from the API.
Get a crate by its id.
Get a list of items from the given path.
Fetch question items.
Get all questions from kitsune
Fetches the data from the API.
Get the time that the item was last updated
Returns the category of the given item
Get all the items of a given category
The contents of the buffer
IO priority of the socket
return None return None
Submit a list of blocks.
Cancel a pending IO block.
Cancel all submitted jobs
Shortcut for fetching items from the database
Get a list of cells.
Extracts events from the feed and yields them.
Get export formats for given pid type.
Get permission factory.
Default view method sends viewed signal to current object and render template.
Export a record.
Time a callable invocation.
Close the connection.
Remove client from the session.
Increment a counter.
Send timing information
Send timing information since a given time.
Send a gauge metric to the clients
Add a metric to the current tube
Set the value of a metric at a given rate.
Add the given data to the current batch.
Create a new batch client and configure it
Creates a new unit client and configures it
Send all currently queued commands to the remote host
create a batch tcp client
Send all queued commands to the server.
Get a new unit client.
Creates a User instance for the given settings.
Interpret as open math function
Try to convert as openmath.
Convert an object to a python instance
Convert object to openmath
Initialize flask application
Generator for valid choices.
Create a value from the provided arguments
any form default for any form
Returns the data for a decimal field.
Render email field as string
Get a random date between two dates
Generate a datetime string for a field
Returns the data for a float field.
Get the data for an integer field.
Generate a random time format.
Return random choice from choices
Multiple choice field data
Get a random model choice
encode bytes object to xml string
Publish build and upload to sdist and tag
Tag the current build with the given version.
Load python global.
Decodes a bytestring into a bytearray.
convert value to fixed number with specific precision
Format a number according to the settings
convert a string to a numpy array
array - > str
Add an entry to the configuration file.
remove a value from the config file
return a list of all the config keys
Get a variable from the workspace.
Check if a repository exists in a workspace
Sync ws s repositories with the server
clone a repository
Check the version of the web server
Converts numpy array into indices of voxels
Create a numpy array from a voxel array
( self )
Update repository info and print to screen
Set console logging handler
Execute a shell command.
load png file as numpy array
Save a NumPy collection.
Prints the status of a workspace
print status of repository
Get the block size for the given token.
POST a blosc document
load tiff file as numpy array
Save numpy data to TIFF file.
Load multipage TIFF file.
write current config to file
% ( url
Get package version.
match a name with a greeting string
Decorator to add an option to an OptionParser
Reserve a number of ids in a channel
Merge multiple ids into a single channel.
Propagate a channel to the remote data store.
Return a list of projects in a dataset.
Get a dataset from the repository.
List all remote datasets
Parses the command line.
Show workspace or list of workspaces
Show the contents of a specific workspace
Show all workspaces
Returns the full url for a given endpoint.
guess format from file extension
Open an image file.
Convert in file to out file with specified format.
convert ramons to dictionary
convert python type to ramon type
Delete a channel from a dataset.
Generate ndjson from params
return a dictionary of dataset info
Return a dictionnary describing the channel.
Generate a dictionary for a project.
Identify image size
PUT data to the folder
Find a path from a name in a workspace configuration.
Get the public tokens for the current user
Get information about the project at the given token
Set metadata associated with the given token
Get the data for the url
Send POST request
Send a DELETE request to url
Load an HDF5 file and return numpy array of layers
Save array to HDF5 file.
infer gaps in a tree using dendropy.
) ( io )
install jinja translations
Run a task in exclusive namespace
percent of total
get cache stats
Get a cache slab from mc
Add the context data to the data
Show server status.
Show cache stats and current status.
Get cache statistics for the specified server
Get slabs for server name.
Convert bytes to human readable.
Find config in children.
Add new variables to the environment
Apply applicator to self. fpath
Absolute file path.
. strip ( )
( data )
Configures the logging.
Create the file if it does not exist.
Apply applicator to this tree and all its children.
Get full path to this node.
Remove the directory and all its contents.
Prepare the environment for execution
Clean up this node and all its children.
( path ) )
] List the files
( data )
. strip ( )
Add new files to the tree.
save to yaml file
Loads the configuration from a YAML file.
Remove the temporary file.
Recursively load plugins from a specified directory.
creates a child config node
Returns the value of the field or None if not found
Apply the config to a string
Build callback url.
Processes the next input from the module.
Sends output to the socket.
Send a request to the remote host.
Read from the socket until the required amount of data is received.
Write data to the socket until it is closed.
Returns a dictionary of settled settle modes for the remote settle mode
configure the link
returns source address of the sender or the remote source
Return the target address of the receiver or the remote peer.
Called when the session is closed
create a new sender and return its url
Add sender link to receiver link list
create a new receiver.
Request a receiver link.
Called when a link is destroyed.
( self )
Process an endpoint event.
Add inline pattern to inline markdown.
Called when a receiver closes the link
callback for when a receiver fails
Get host and port from a server address.
Connect a socket to the specified host and port.
Creates a server socket.
returns a list of connections that need processing
Get the next output data from the transport.
Create a sender linked to the given source address.
Reject a sender link
Creates a receiver link.
Called when the connection failed
connection active.
EP needs to be called when the connection is closed
error : str
Returns the color as a string
get ttf source and family dict
Set the compression setting.
Add an object to the PDF and return its index.
print stream to buffer
print stream return str
Add a page to the document.
Set the color scheme of the plot
Set default font.
add a new page
Set the font size.
Add text to the document.
Add a new line to the current page
Add pie chart to the current page
Output all pages.
Return a list of page indexes that have orientation changes
Print self. fonts.
output the images
Output the image to the screen.
Transform a 3x3 matrix
calculate the absolute position of the given x and y values
Set the style of the text.
rotate point x and y
Set the information of the object.
set zoom and layout of the map
Finalize the document and write the document contents to file or string.
Add a header to the document
Put pages into the worksheet.
Put resource dict in database
Add object to database.
Writes the cross - reference trailer.
Floyd - Moore cycle detection
Yield values from a naive sequence.
Cycle - induced Gosper cycles.
Brent cycles in a set of sequences
Fit test for x
Determine if y is enough to fit a line
is greater than test ordinate
is greater than test ordinate
Create a copy of the cursor
Add dx to self. x and return self. x
Y = self. y + dy
self. set cursor ( )
List all the tags.
Get all the labels that have the given name
Delete a tag from the list
Create a label
Returns a list of the current user s actions.
Get all tags with a specific tag.
List all hooks.
Sphinx extension setup function
( theme ) )
POST request to Tumblr API
Get a list of hosts.
get a log by set
Time duration in seconds
update all settings limbdark and settings
Call the scipy. optimize. compute function with the given settings.
Returns the binary representation of the matrix.
Free the memory used by the object.
Receive a message from the NTP server.
Generator that yields lines from the buffer
Check the status of the device.
Generate an info message
Returns a string with the generated info line
Send a capabilities command to the server.
Send a CMD_READONLY command to the server.
Send a quit command and close the connection.
Send a CMD_DATE and return a datetime object.
Send a HELP command to the server.
Send a NEWGROUPS command and generate new groups.
news ]
Run a command against the NTP server and yield new newsgroups.
Send a nntp command to list active times.
Send a command to the NTP server to list newsgroups.
Send a command to the device and yield overview fmt pairs.
Send a command to the nntp server and yield a list of installed extensions.
list generator.
( x ) ]
Send a XZ header and xzmsgid range.
Send a XPAT pattern to the server.
Send a XFEATURE compress command to the server.
Offset a number by the closest sign to it.
Method to make POST requests to the API
Generic DELETE request to the API
A simple GET request to the API endpoint
List all scheduled queries
Get a list of all tags.
Return list of tags matching name or id
Delete tag by id
Create a scheduled query.
Delete a query tag.
Parse newsgroup line
Parse an IRC header line into name and value tuple.
( CRLF )
Send POST request to the server and receive response
Run a list of tests and report results to a reporter.
Returns a docstring for the defaults docstrings.
Sets the value of the field
Check type of value
Returns the current value of the attribute.
Check if value is a scalar.
Returns the symmetric error of the sequence num
Set the errors attribute
Set the attribute of the given instance.
Import the metrics to the datastore
Extract a metric dictionary from a list of metrics
Filter metrics based on a regular expression
Calls the api and returns the result
return self. terminal ( text )
( text )
). strip ( ) add
Fill in missing params with any required params
Returns a list of parameters
if pnames else None return values
if pnames else None return errors
Clear derived parameters
Sets the method of the resource.
Get environment variables from environment variables.
Call the API and return the result
check if scene info is correct
Verify the product type
Get remote file size
Validate bands argument
Connect to earth explorer
Normalize a datetime according to this timezone.
Join the given iterable with the given delimiter and escape character
Get the positions of newlines in text where str is.
Point to a given position in a source file.
Print the relay output to text
Remove all metrics control and plugins from the relays.
Load fortune list from a list of files.
Set the chance of a list of files.
( result ) )
Create a rule using concatenation with identifier and expression.
Handling of special handling of identifiers.
Get the grammar as a str
The list of rules in the grammar
List of comments in the input grammar.
Returns a list of directive names referenced in the docstring.
Returns the source code for the output file and compiles it if needed.
Compile the format string
Get the import string of the module.
Get token type string.
get the string representation of the class
Get the name of the entry point
Returns the source code for the given rule.
Returns the transformed name of the given rule
) + expression
Convert node to ASN.
Hoist operands together and apply a predicate function to them
Recursively remove grouping groups from an optree
converts an ast node to a python code string
Convert an optree node into a Python code object.
Convert an ast terminal to code.
Generate the code for the given option group.
Return a list of python code lines for the given repetition group
Convert special handling to code
Code generation for an opr.
hoist operands and code to code
Convert an ast operation to python code.
Convert an ast mathematical operation to Python code.
Convert an ast op to a list of lines
Find directives satisfying the predicate pred.
Flatten a child expression to a parent expression
Handle API result
Returns wx. ID or wx. NEW_ID
Remove a hotkey for a control
Add command line arguments to parser.
Configure logging module.
Validate arguments and set error message if missing
Converts a list of operator nodes to postfix nodes.
Convert postfix operator to optree node.
Reduce a set of nodes into a list of nodes.
Load plugin manifest.
Get name and desc column lengths
Get the lengths of the metrics table
Replace underscores in metrics with string str
Print the table in markdown format.
Print the metrics as markdown.
generate metric definitions
Parse text and return a parse tree.
Attempt to match text with the original text
Add command line arguments to the parser
Parse time string and return a datetime object or None.
Format and output csv rows
Output json with timestamp and aggregated data
Output raw JSON
Output the data in XML format.
default pred function for parse nodes
Pretty print the tree.
Creates a repeat function for a given extractor and bounds.
Get terminal node.
Get exclusion from text if it matches.
Count leading whitespace
Call extractor on given text.
The position of this parse node or its children.
True iff all children are empty
Add a string to the ignored list
Check if node has type value
Flatten this parse node and all children.
Returns a copy of the node with all whitespace removed.
Merge two parsers together.
Retype the node to a new type.
Compressed this node and all children to a single string value.
= self. offset or 0
) max readed position in file
Step to the next char in the input string.
Move to the next line.
Move to the previous line if num line is present.
Return the last readed line
Increment cursor position.
Save current context to self. contexts.
Restore the last context from the stack.
Returns a string representation of the notification
Set the name of the module.
Returns the number of variables in the signature
Count the number of funs in the function signature
Update this scope with the signature
Return the union of this and the given signature
update the set with another set
compute the intersection of two scopes
remove all keys in oset that are not in self
Subtract the signature from the current scope and return a new scope.
Update this scope with the symmetric difference of another scope
Return the symmetric difference of two scopes
Add a signature to the registry
Remove signature from the list
Discard a signature
Returns the first signature of the sequence.
Returns the last signature of the object.
Get scope by symbol name
Get signature by symbol name
Return a scope containing all polymorphic objects
Injection for the ast translator.
Normalizes an AST.
set self from othernode
Check if a hit is ok for a given min and max charge
return signature for current value
Find the resolution of the signature
Get resolved names for type name
Set the resolved name for a type name2solve to ref
Delete local file locally
Deletes a file from Amazon S3
Delete a file from local or S3
Save local file to disk
Save file to s3.
save local or s3 object
List all files in S3 for a given path
Generate enum type with sequential values.
Insert a thing into the chainmap with the given name.
Read and validate end of file.
Create a new rule node and push it onto the stack.
Delete all rule nodes from the stack and return whether there were more nodes.
get value of node n in current node stream
parse stream with content and add it to stream list
Begin a new tag.
end tag with name
Set rules for the class
Set the class hooks
Set the directives on the directive namespace
Evaluates a rule and returns the result
Evaluate hook and return result
Check if the given text is present in the stream.
Read one char and increment position.
Read a character from the stream.
Read until there are no more data to read.
Ignore blanks in input stream.
Check compatibility of cluster hits
Add a rule clause to the query.
Add a rule to the generated grammar. Returns True if successful False otherwise
Add a rule to the grammar.
Add sequences in cla as new nodes in sequences.
Add alternative to alternative parser in alternatives.
Add a range to the tree
Add a parser point to the end of the sequence.
Add a capture to the sequence
Bind a character class to the parser tree.
Add a parsing hook to the parser tree
Get n param and save as param. pair
Parse string to param. pair
parse a character as a param
Return i th param and update param. pair
Set the name of hook.
Add a parameter to a hook.
Evaluates the rule and returns the result. Raises a diagnostic if the rule fails to evaluate
Ignore CXX characters.
Add a state to the machine.
Returns the dot representation of the machine learning process
( ) )
write png file to disk
Format the state machine into a string
Get the next state for this node given a new state.
delete all living state elements from the list
infer types for all elements in body
infer the type of a subexpression
, node )
prints all nodes to stdout
Finish the scope of the block.
Clause for not - op UnaryOperation
= node. body, )
) -> ast. expr. call
Compile a hook call.
) -> ast. expr.
Visit capture node.
- > ast. expr scope
Parse alt block.
Visit seq node.
Visit optional nodes.
Visit n node.
Visit n node.
Returns the end of dst concatenated with src.
set indent on all list items in lst
convert a list to a string
Print a list of nodes
Populates a graph from a sequence.
Populate the register with the initial state
Populate the tree from the statement sequence
Compare two nodes for equality
Builds a grammar from a BNF.
Builds a grammar from a file.
parse source and entry
parse a file with an optional entry
Set node src as value of node dst in structure
Set dst to src as int
Subnode evaluator.
Dump a Deposition object to a json serializable dictionary
Returns recid list for invenio12.
Return recid list for invenio2.
Return check.
Dump a JWT token to a dict.
Return the number of accounts and all accounts in the database.
Dump User object to JSON format
Returns the set of modified recids for the given date.
Get modified recids invenio2.
Return collection restrictions.
Return revisions for record with ID recid.
Return record collections.
Create record and dump to JSON.
Get the list of modified recids for a given date
Dump a record into a dictionary.
Dump a resource into a dict
Load object with common attributes.
Load entry points and return a dictionary of them.
Initialize application.
Return database query string.
Get a list of actions by query
Serialize a Relying Party Token
Load token and common attributes.
Import record.
Get config value from config file.
Dump OAuth2 client into a dictionary.
Return list of users in invenio account.
Return number of users in Invenio2.
Dump user to dict.
Loads the deposit report.
Create record and persistent identifier.
Load record.
Load records from JSON.
Get profiler statistics in JSON format.
Run the profiler on the given port
Dump profile information to a file.
delete the profiling data
Delete the current profiler
return self. running
Parallel calculation of translation for each image
Merge multiple images into a single image
add ones along the last axis
Create a new dump record.
Create a new record.
Update a record in the database.
Create multiple persistent identifiers.
Delete record.
Create object instances for files.
Delete all the buckets in a record
get all missing pids
Group files by name and sort by name
Prepare pids for the revisioning.
Check if the record is deleted.
Load community.
Loads the featured community.
Dump a thing to a JSON file
Check a thing
Deletes the object from event handlers.
Return the magnitude of a vector.
\ Normalize a vector
Transform the texture coordinates
Add bone to data dictionary
Set length of bone in data
Set parent of the bone.
Get the pivot point for the given data
start an animation
Set the state of the object
Unset the state of the light
Turn the region on and off
Disable the region
Ensure the given object has model data.
Redraw model vertices and textures
Draw the given object.
Set the database model to use.
Writes the reports as XML to a file.
Add menu to menu list
Redraw the label
redraw the label
Render the background of the window
Delete a widget from the editor.
redraw the label
) register event handlers
register event handlers with Peng.
add label with main text
Quit the dialog with the previous submenu
Update progress bar and label.
Render all the actors in the environment
Render the world.
return True if resource exists False otherwise
Add a texture category.
Returns the texture to use when no texture is specified
Get a model by name
Load model from database.
Get model data from cache if available otherwise load from disk
Add a widget to the node.
Draw the submenu to the screen
Redraw background.
Redraw the scroll bar
AABB test for mouse click
. nan )
Add a layer to the mesh.
Add an action to the actions list
Execute all functions associated with the given action.
Register a new name with the registry.
Add a layer to the map
( ) return ''
delete layered widget
wlredraw border string for widget
Return the offset of the widget.
Get size of widget
Read the HDF5 file and return a mesh
creates a connection matrix given a shape
Set the fields to be selected
Add fields to the fields list
Check types of elements
( ) )
Compute edges for each point in the mesh.
Returns a pandas dataframe with summary statistics of the graph
Set tag to a node set.
Set nodes to surface elements.
Convert surface to element sets
Return the metadata of the fields as a pandas DataFrame.
Return a pandas Series with metadata for this series
Make the work directory if not already exists.
Run a gmsh file
Read a report from a ProCoDA data file.
Reads a field report and returns it as a dictionary.
Convert a list to a string.
Returns a string representation of a equation equation.
Return a string representation of the set
Parse response and raise appropriate exceptions.
Send a HTTP GET request to the API.
Write XY report files
Return error message string for this field.
Return whether the exception is thrown by a descriptor
Set the data for the plot.
Return the mode of the given axis if it is time variable
set options for plot
Creates a new class with the given name using the given function and attributes
. loop ( )
Try to convert a value into a number or float
Convert string to int or float.
Returns a string with a plot of the given graph
Force unicode conversion of a string to unicode.
Check if the given mime type matches any included mime types.
Cleans up domain name.
return the left cuts of a domain
Make a hash kw for a token.
Collect words from the sentence and taggers.
Index si.
( tok hash ) ] hash
Get document frequencies for a list of hashes
lookup kvlayer stream for given hash
Make a stream of items from a function f.
Read a varint from the stream.
Read a object.
convert si key to binary string
Serialize and encrypt a streamed item.
Change working directory temporarily and return when done.
Strip a prefix from a string if it exists.
Strip a suffix from a string
Check if haystack is a subsequence of needle
Start the web server.
Shutdown and close the TCP server
Get error page callback.
Register a callback for a given request method and pattern.
Resolve a route.
Resolve a non literal route
Normalize pattern to a type and suffix.
Generate a Flask response.
) return self
Set cookie by name and value and attributes.
Return the status line for the response
Content - Type of the response including the charset
Delete a directory and all its contents
Returns a list of open file descriptors for current process.
Try to fetch the file at the given path.
Get lines from a file.
Return random adjspecies pair.
return a random adjspecies pair
Morph a sentence for a specific app.
Get similarity of a search query.
Hiragana web interface
Get entities from the API.
Get the shortsum for review.
Search for keywords.
Retrieve chrono text from a text document
Initialize all the stages of the pipeline
Run writers and return output paths
Performs incremental transforms on a stream item.
replace config with static stages
Check if chain mentions are contained in target mentions.
Check if there are any mentions in chain with any of target mentions
Match multiple tokens in a stream item.
make ner file
Shutdown the child process
multiplies a random variable by a random variable
Returns a generator yielding start end sent str
Create the label index for the item
Make sentences for the item body.
Make a cleansed file from the given chunk
make ner file from cleaned files
Remove punctuation and whitespace from span.
Import and instantiate all modules in the pipeline
generate john smith dataset chunk by chunk number
Write the chunk of data to a clean visible file.
Remove punctuation and whitespace from span.
Convert HTML to ASCII and print it to stdout
Try to load a function in a module.
Load stage modules from an external module.
Initialize a new stage from a configuration.
Read to bytes and return as a tuple.
Return True if href should be included in links
Create labels for the links in the html
Yield all paths in a directory and its subdirectories
Get tasks with a prefix
Retrieves a random row from the available table.
gets the list of sentences from a named entity
Verify the MD5 hash of the data
Get bucket from s3
Decode data to a Python object.
Extract a chunk from a key path.
Convert a stream id into a kvlayer key.
convert kvlayer key to stream id
Create a key for a stream item.
Main entry point for the server.
Build an argument parser
Given a list of sentences yield char tokens
Yield char tuples from a sequence of tokens
Add element to element list
Generate an XPath for the current element.
Return the index of text element
Recursively iterate over all descendant elements.
Select elements from source.
Select xml elements with a given name.
elements ( source )
Get the next sibling of elem
Calls inkscape with the given arguments.
Exports an image using inkscape
convert svg file to pdf file
convert svg file to png file
Return a Jinja environment for a given file path.
Setup the template and environment variables for the current template file.
Fills the docstring with rendered template and returns rendered docstring.
Save content to file.
Get doctype from a template file.
Override fill to replace characters for svg codes
Render the document to a file.
Render the template to a file.
Parse XML source using expat python module.
Return markup fragment of HTML source.
Insert text before or after specified node.
Insert node before ref node in the list
Clone this element.
Return a string representation of the XML tree.
Insert a child element at the specified position in the children list
Parse config file and return config data
get google credentials
Create datetimes dict with current time and timezone.
Create a new event.
Create a new event if requested.
Get the extension of a filepath.
Add extension to filepath if not exists.
Get a temporary file name.
Remove all files with extension in workdir
Convert csv file to json file.
replace old with new in file filepath
Parses the HTML.
Check if next sibling of current tag is same tag.
Create italic tag if the BeautifulSoup contains a style attribute.
Create a strong tag if the BeautifulSoup contains a style attribute.
Create an underline for the given tag.
parse attributes from html tag
Clean linebreaks from a tag
Parse the href and return the param as a dict
Parse attribute of href.
Translate dictionary keys using a dict of translations
Serialises the object to a JSON formatted string
Find all files matching a regex recursively
Concat strings using str. join.
Does full start with part?
True if full contains part ; False otherwise
Convert a string into a boolean.
Iterate over elements of a path.
lookup a key in a table
replace chars for svg code
Check input svg file and convert to svg.
Merge multiple PDF files into a single file.
embed font files into svg
embed font files to svg
Check if inputs are of the correct type
Check if function is callable.
Recursively go through inputs and generate the output
Create text input with Jinja2 template
Recursive function to add options to the parser
Convert an object to a string.
Convert an object to a number.
Convert an object to a boolean.
Return a string representation of the AST.
Change xml encoding of file at filepath
Save text into a QR Code.
Launch a melody task.
Call a shell command with arguments
convert tex file to pdf
Recurse through schedules to find loop options
Transform geometry to another spatial reference.
Wrapper for ogr. geometry
Expand the range.
intersect two envelopes
True if circles intersects with another circle
polygon of the ellipse
DataFrame constructor to create DataFrame from znm values
Write the main dataframe to a CSV file.
Select rows according to a condition
Get a table at a given nuclei.
Return a table with rows from self that are also in table
Returns a table with rows where self is not in table.
odd even elements
even even elements
Remove even elements from the group
Return the difference between self and another table
Calculate the binding energy of a molecule
Convert string to n - string.
Negative number with n - parent
Convert signed to negative.
Second part of the tree rooted at str
Return derived table
wraps a function with a db session
Derive a key from a master password
Create the database if it doesn t exist
Search for domains by name.
Modify the domain in the database
wrapper for create domain
Extracts HBS code from a given file
Returns the vsi prefix for the given path
Return the SRID of the EPG.
main entry point
Download url and update file filename.
returns a list of all available drivers
Get image driver for path
Convert a geometry to a raster array
rasterize layer with rasterizer
Open a GDAL raster file
Create a raster from a byte array
Copies a raster
Provide access to the option attributes
Create raster raster object and return GDAL raster object.
Set the geo transform of the Dataset.
Read the data into a numpy array.
Get the envelope of the dataset
get image driver
Create a copy of the raster
Create NumPy masked array from the bounding box
Get the nodata value for the field
read raster from underlying data source
Resample an image to a new size
Saves current image to specified destination.
Set the projection of the Dataset.
Warp the raster to a spatial reference
Calculate chunk length for encryption and encoding.
Return the alphabet for the given set of characters.
Encode a chunk of data into a string.
convert chunk to long
num = index % self. chunk
Returns a compiled regular expression for the given filename
Normalize date format.
Detect timezone from locale
Converts the model to a dictionary
Connect to a server and handle all the incoming jobs.
Start a new asyncio event loop and run jobs.
multiprocessing worker pool
Sets the classification of the node.
Send a message to the client
Turn on a light.
Turn on a switch
Turn on a lamp.
Turn off relay.
( ) ) return
Send a message to the lw.
Sets the nature of the Product.
) return self
get option values of all options
Create a TOML file containing the configuration of the section.
= False )
Reads and parses a TOML configuration file.
Read and parse all config files.
Generate a list of possible names for an option based on its action and kwargs.
Return a list of sections for this command.
Build the argument parser
Parse command line arguments
Provide bash comp comp command
complete bash commands
Start the supervisor as a master node.
Called when the transport is connected.
Decode line and notify worker. response received.
) return str
Called when the job is loaded.
Called when a response is received
Return the currently - running job to the scheduler.
) : return
( self )
Change all waiters result to none
Add a result
Coroutine to wait for the completion of the Future
Load the next job from the job queue.
Finish the job and all waiters
Add a result to the result list
Cancel the current number of jobs
Wait for the number of done jobs to be finished.
Distribute the currently active job to the ready jobs
add a job
Get a job from the active script and add it to the list of jobs to be processed.
Return job to the pool.
Add the result of a job.
Called when a job is done.
Cancel all running and queued functions.
Remove duplicates from a list preserving the order.
Returns True if any element of obj matches regex.
Get region from environment variable or AWS region name
Return entries that match all filters and do not match any exclude
Get host by name.
Create a new instance from a dictionary.
Get an attribute from the object
Create a new instance object from a boto instance object
Return True if this node matches the given filter.
Display IP address as a human readable string.
Add a timestamp to the event dict.
Creates a structlog logger
Setup celery.
Remove a job from the queue.
Get the configuration section of the config file.
Handler for config commands
Prepares the rows in the table ensuring each row is a string.
Get the color of the given string
Generate random color in specified range
Check if credentials are valid
Check if token exists in database.
Check if a process is running.
Reloads and returns obj from mod path.
Returns the IP address of the host
Send a request to the API
Prepare post parameters
Serve a dna application
Render the template with the given name and value.
Stream command dicts in parallel or in parallel.
Get all holidays between two dates
Get the path of a command.
build ssh command
Load a profile from command line args
Add a relationship to this part.
Get the related packages of the given type
) : return str
Add a new MIME part to the MIME header.
Create a new part and add it to the collection.
) or none
Create a content type object from a given XML element.
Parse input string using chatl.
Builds the JWT and returns it as a string.
Assigns a force field to every atom in an AMPAL object.
Find the maximum radius and npnp in the fit params
make force field params dict
. read ( )
get all matching segments from a zfs
List all the files in a directory.
List all the directories in a given directory
Create a new prefix for the bucket with the given dirname
Delete a file from the bucket.
Ensure the user is logged in
Get loud name
Try to get the url of the home page.
Return a list of the number of hotspots in live data.
Get keeper token
Upload a build to S3.
Determine if a travis event should be skipped
Confirm that a build was completed
Update dictionary d with the contents of u.
keeper hostname username and password python logging module
Edit an XML file or XML document.
print a list of files from a directory
Split a path in its components.
Get editor for given filepath or default editor
Check if the content of a module is correct.
Generates html for a chart.
Generate HTML for a chart and write it to disk.
Serialize a data object into a chart.
Patches the json data
Generate html from json data.
Convert dict to pandas dataframe
write html to a html file at folderpath
Return the chart class for the given type of chart
Return a tuple of encode functions for the given fields.
Infer the url of the tarball from the name of the app.
Create a new app
Delete app.
Generate random binary string with given length.
Get a random IP address.
Generate a random date between two dates
Get a new session.
Send HTTP request to API endpoint.
Create a new build
Check the status of a build
Generate a sequence of values.
Register subcommands.
Returns the root argparser for this namespace
Get the description of the docblock
Get the help string for the command.
Parse args and run the command.
Encode a single dataset.
Get athletes from the sport sport page
get last n activities from download activity list
Get a list of all activities for an athlete
Request the activity data from the activity endpoint
+ athlete + '/'
Return the endpoint to access an athlete s activity stream.
get request to Golden Cheetah API
Create a new build.
Generate a URL with API auth
Get a random title for the book.
Generate a random person
Get a random last name from one or more languages.
Add string options to template.
Set dataset for plot.
Render the plot.
Check if type is valid.
return url of current object
Show the object in the browser
Save file to specified path.
return urlopen or urllib2 urlopen
( self. url ) )
Write file to fp.
( self. hash or '' )
Generate a random amount with a given number of decimal places
get unprotected and protected claims
Return the signing keys as a JWKS
unpack a metadata statement
Pack the metadata statement into a string.
evaluate metadata statement
Check federation usage against usage in metadata.
extend with custom sms dict
Parse the command line arguments
Add command line arguments to a parser.
apply logging opts
) return msg
create a mapping from letter to a number in a word
Get all the anagrams in a word
). first ( ), cls
Transform timeseries data to a new format based on start and end.
Get the last value from a timeseries
Validate a page number.
Get page of iterator
change mode for a file or directory.
Create an internal signing service for an entity.
Create and return a signing service based on the given config.
sign a message
Create a new resource.
Update existing statement
) [ 0 ]
Iterate over contents.
Create a bundle with the given data
Return the urls for the given asset type.
Return html tags to include this bundle in the page
Return html tags for this asset type.
Add protocol to URL if not already present.
Return all links to the given URL
Proxy a client to a listening endpoint
Get modules for the project
Import all the modules
Select a list of fields from a nested dict
Apply datemap to doc
print cursor as csv or json
= None ) : return count
get all tasks in do tasks in dep graph
Add default departments to project
add default prj data
create a shot after sequence is saved
Create all tasks related to the given element
get config value by return type
factory. do end
Remove a factory.
Connect to a remote protocol using the given factory.
Called when data is received on the connection.
Remove a protocol from the protocol stack
Send a remote command to the device.
Connection was made to the remote end.
Handle multiplexed connection made event.
Called when data is received.
Send data to the remote end.
: str return None
( connection identifier )
Called when data is received from a remote node
Disconnect a connection
Center a string on the terminal
print clock on right
Generate a version number string.
Identify the framework to use for the given target unit
Assert that the given unit convertability is correct for the given framework.
Pads data to block size
Unpads data according to style.
sign a request dict and add to the request
Retrieve the metadata statements for the current context
Print the input word with its anagrams in a human readable form.
Argument parser.
Parse arguments and print word anagrams
Called when data is received.
= None ) :
Given a URL create a stub function.
Ping a remote client to check whether it is alive.
Return a tuple of command regex and a dictionary of option strings.
Parse from a proto - style string.
) - > str
Verify the metadata statement
Parses the remote response and returns the JWS compact serialization
Return a list of sqlite3 databases
Synchronize folder contents with S3.
Recursively builds the python package tree.
Create a readonly fridge and close it
Load dict from JSON file.
Create a signed JWT using the given keyjar and JWKS.
Create a JWT signed with a keyjar
Load all python modules in a test directory
Main entry point for the librarian CLI
Return a score for letter in str
Score a word based on a list of letters.
Return a list of words.
Check scrabble word for validity
Called when a string is received from the server.
Get command and responder.
Parse the request for the given command.
= encoded )
connection lost.
. encode ( )
Imports a JWKS into a KeyJar
Load a JWKS bundle from a JSON string or dictionary.
Dispatches the message to the appropriate handler based on the event type.
Process event from cinder.
neutron customer process routine.
Process a message based on glance customer process.
Process a message using swift.
Process an event from keystone
Process heat customer events
Serve the WSGI application using the WSGI server.
print a message to stdout
print a message to stderr
Register a subcommand in the global command registry.
Register a command with the class.
Checks constraints and converts to string
Creates a value from a string
Update completer dictionary
. work ( ) return connection
return mq. connection
init all modules
init nova notification consumer.
Initialize the consumer for cinder
neutron queue consumer
init glance consumer
Initialize the heat consumer
Enable event notifications for an openstack component
Get information about a song
Download a song using threads and a filename
Executes the instructions
Load a variable from the globals dictionary.
Calls a built - in function.
dump database in mysqldump path
. atexit
Run the application with the given arguments
Change the current working directory to path for the duration of the context
Recursively copies a directory tree.
Run the debugger if it is running
Get the last modification time of a file
Returns True if the file exists and has been modified since last compile
Synchronize the database with the files in the fdir
Remove all keys from dictionary
Scrape a RSS feed
Download the image from the URL and save it to the image cache directory.
Returns True if the image has changed since the last time it was loaded.
Find the calling function of the caller.
Returns the defining component of the element.
Load a metamodel and persist instances
Find symbol on top of the stack.
Check if a package is contained in another package.
Returns True if the expression is global.
Get data type name.
Get the related attributes of a reference object
Create namedtuple enum from complex expression
create a bridge function from a bridge function
Create namedtuple for external entities
Create a function from a sync object.
Return a constant value for a given cnst syc
Make operation function.
Create derived attribute property.
Create a simple association between two associations.
Create an association for a resource relationship.
Generate a component from the given bp model
Do the RPC work.
Send an accept message to the socket.
Send a reject message to the channel.
Raise an exception.
Send a message to the collector and wait for the result.
Establishes a connection to the result queue and waits for it to return at most
Process a reply from a remote process
Try to guess the type of a value
Deserializes a string into python data types
Get a feature from the index
Put items into the index.
Delete document by id.
Delete all documents from the index
Delete index from elasticsearch
Yield features whose name starts with a prefix
Get all ids from a prefix.
Yield ids found in the index matching fname and val
Return the source string for the given feature names.
Returns a list of filters for a given range or ranges
Return a mapping from feature names to index names.
Get all field types from Elasticsearch.
returns the disjunction of the query against the fc index
returns the length of each feature in fc
Count the number of bytes in each hit in the database
Return a pretty string representation of a feature collection
Process command line options
Default HTML formatter function.
Return pretty string format for instance and link
Make a pretty unique identifier
Check uniqueness constraint of model.
check integrity of links
check whether all the instances of super kind have a specific subtype
Basically transforms val into a str
Delete all keys in the database.
Implementation of scan prefix command.
Add or update index.
Put raw value into index.
Yields the index values for the given index name for the given content.
get index by name
Add direction to string
Get type name for a structure
Recursively gets referenced attribute
Build core type from one schema
Build enum type
Build struct tag tree.
Build user type element.
Builds a user defined type
build xml element from many obj
Build component using element tree.
Build schema etree.
Returns pretty - printed XML
Fetch bikes from Xero API.
Set node positional info
Create a queue.
delete a queue by name
List all queues and their properties
List exchanges.
Purge a queue.
Create a mail message body.
Reads the text from the Tesseract database.
Returns True if there is at least one character in the input
Parse the command line and run the function
Convert a python value to a JSON datatype
Serializes an Association.
Return serialized class.
Entry point for command line invocation
Partition a collection based on a condition.
Inject bidi data into the template context
Find link between two instances
Compute the lookup key for the given instance.
Compute the key for the given instance.
Returns the type of the attribute name
Creates a new instance of the class
Generator yielding instances
Defines a metaclass and registers it in the metaclass list.
send message to zmq socket
recv from zmq socket parse and return parsed msgs
Run python project and pipenv against a dead code file
Parse email addresses from a list of emails.
Decorator to register an RPC function.
Returns a lookup table of rpc specs for app.
middleware to check postcode and convert to upper case if needed
Returns the next element in the iteration.
( inst )
( inst )
( inst )
Download and return the average brightness of the device.
Matches the string against a series of patterns
Find a match for the position
Create extra selection for each character
Called when the cursor changes in the text edit.
returns tuple with exception name and traceback text
get instance by name
Executes the history console widget
Return True if up pressed Return False if not
Check if down key was pressed
Replace the most recent history string with substring
Move to the next history item
Process a reply message.
True if the history is locked.
Get the edited history item at the given index
Set the history
Store the current input buffer in the history.
on time to close the console.
sv to df
) return self
subscribe to the topics in self. topics
Extract topic from message extract level and topic from message.
iterate over a remote view
Convert a notebook to this nbformat
Get importer for path item
) str global io
Override a setuptools requirement with a custom version.
Parse a string source into a Module object.
Get parsed pkg info from email headers.
Remove leading whitespace from txt
Remove the event from the widget.
Overrides show event to update the text edit position.
Get text cursor for current position
Update the current item based on the current selection
Register the admin site for the given app name and exclude models
Return the disk partitions of the current minion
Get system cpu times from psutil
Return system per cpu times
Get raw input from the console and return it.
block raw input
Update tab bar visibility
Creates a new tab with the current kernel
add a new tab with frontend
populate self. magic menu with all magic classes
Close all window if user click yes or no.
Check if a passphrase matches the hashed passphrase.
Returns the indented short title for the given item
Returns True if user has permission to change the object.
Has delete permission for tree editor
Recursively adds children to graph.
Creates a tree with one bin in each level.
Apply a set of jobs to a graph.
Validate the tree.
) return class
Make a copy of this color scheme.
Add a color scheme to the registry.
Set the active scheme
Return the absolute path to the user s home directory
Get messages from iopub channel and display them
Wait for kernel to die
Set the style of the widget.
Returns a format for the given token
Get format from document
Get format from a style
Find a command in a given list of commands.
( path ) )
Verify that the value for dist. attr is a valid NSP
Check if entry point is valid.
Returns True if the last line of src is a blank line
Check if last two blanks are present
Transforms a system line into a new line if the line is invalid.
Replaces assignment commands with their respective commands.
Strip classic prompt from a line
Strip ipy prompt from a line
Find indent spaces and dedent status for a line
Stores the source code lines to the store.
reset the scanner and return the raw and transformed source
Parse cell magics.
Append lines to the cell return whether the cell is complete
transform the cell
Post a notification to all observers.
Get set of observers for a given notification type and sender
= callback return callback ( )
Update the status of the jobs that are running.
report a group of jobs
Flush all the jobs in the group and print the name and the number of jobs deleted
Update the status of the component and dead groups and return what has changed
Verbose status message.
Initialize a background job object
insert a value
) Copy the file
Declare a special variable.
Declare a list variable.
Declare a set variable.
Canonical path.
Move to a new state
Calculate the energy of the given state route
Create a dict with the default value of none
Check the table for the types and keys
Render the expression for the given check.
Return a table string from a list of rows
Create a HTML link.
Returns the javascript file for the given url
Returns css file for given url.
Returns an HTML img tag with attributes.
Subtract two numbers
Multiply two numbers
Divide two numeric values
Return the modulo of value % arg
Get verbose name of a model form or model instance.
Split user input.
Add options to the parser
Remove all builtins and restore the original ones.
Find url by url name.
Get links that have the specified relations
Return a list of shell commands from a string
main entry point for coverage script
Add an action to the menu.
Add an action to the parser.
Prints the help for the command.
Invoke the help function.
Check if the options are valid.
Execute code in the specified file or module.
debug prints the coverage report
Unserializes an object.
set the display hook
Decorator to log errors.
Return whether the given string represents a valid URL
Validate a URL.
Validate url container
Pull value from global namespace.
Return a list of n random ports to listen on
Call the wrapped callable and map the return value from the wrapped callable
Return the last n lines of the readline history as a list
Set autoindent value.
magic for starting logfile and appending
save sys module state
Restore sys module state
Register a post execute function.
create a new empty main module and return it
Populate user namespace with user s namespace
Get all refs for this namespace
reset user namespace if new session
Delete a variable from the display hook.
Reset selectively namespace variables to their default values.
ofind ( oname info ) - > struct
object find wrapper for struct. find
Inspect an object.
) return manager
Show the traceback of an exception.
= stb )
Show a syntax error traceback.
Insert indent before next input
Add a custom completer method at the specified position.
Set the frame to use for the completer
Run magic on a line of text
find a magic by name and kind
Define a user macro.
run raw in current working directory
Rewrites the input text.
Return user variables as a dict.
Convert user expressions to python dictionary.
) ev expr
Run a python file without importing it
Run a magic on a cached cell
Expand a string with the user namespace
Create a temporary file and store it to self. tempfiles.
Perform cleanup at exit of app.
Send a message from a sender to a destination.
List all profiles in a directory.
List all profiles that are bundled in the ipython notebook
Find a distribution matching requirements.
Returns the full path to a file in which to search.
read one line from the buffer and return it
send string to child process
Sends an integer to the terminal.
Prepare regex pattern for matching.
Prepare regex pattern for matching.
Returns the index of the first match found in the buffer.
returns the index of the first occurence of the pattern in the buffer
Unpack a given directory.
get the last error in the log
Execute a shell command and check its output.
Try to find a source file for the given filename.
Get arcs executed in the file
returns list of arcs that are not executed
Returns list of arcs unpredicted from executions
Return a list of branch lines with the most exits
Get the total number of branches.
A dictionary of arcs that are missing from the current branch.
Return a dict of branch lines to their exit counts and missing arc count
Set precision.
Calculate pc covered by the number of statements executed
Get pc covered as a string.
Highlight haystack with needles using cls.
Highlight keywords in a string
Highlight all keywords in a string
Run a function in the context of this module.
Removes the end of a string if it exists.
marquee text to specified width using mark.
Formats a string to fit on the screen
Dedent text for Pygments
Wrap paragraphs to the specified number of columns.
Find optimal row and column size for display
Return the i th item in mylist or default if default is none
Construct the kernel argument list for the shell.
Tunnel the kernel to the kernel
Pretty print a Python object
Pretty print a python object
Get the MRO of the object class
default pretty printer for objects
( num, str ) )
Print regex pattern with flags
Prints the name of the module and its full name.
Prints the name of the module and its full name.
Prints the attribute of obj as a list.
Register a printer function for a type.
Register a printer function for a type by name.
Add obj to the text buffer or create a text group and add it to the output buffer.
Add sep to the output and make it breakable.
End a group.
Flush buffer to output file and reset buffer width
Returns pretty representation of obj.
Write row into ods
Get text from the system clipboard
Get the clipboard content.
Get text from the clipboard
Get build prefix.
Rekey the keys in a dictionary
Recursively extract dates from strings
Recursively convert datetime objects to strings.
Default formatter function for datetime objects.
Check if sitepy is in site dirs.
Write a script to the output directory in the install dir
sleep here with t seconds
Create an argument parser.
Reads a connection file sends a query to the dealer and publishes the results.
Build a package finder from the given options.
Called when a log level has changed
Default log method
Command line flags changed event handler
Print alias help to the screen.
print help for each flag
Print self. subcommands.
Prints the help menu.
examples for the case
Update config with new config
Initialize a sub - command.
Flatten self. flags and return a tuple of flattened flags and aliases.
Parse the command line
Load a config file.
Generate a config file from the classes in the package.
Downsample k items from an array
Formats an info dict into a list of strings.
write to the output
Called when a configuration change is made.
Return a help string for this class.
Returns the trait help for the given trait name
Clears cls instance
Format a test failure tuple.
Custom crash handler for ipython notebooks
flush qt events
start qt kernel channels
Read from the file and return a string.
read from a file descriptor without interruption.
Split a string into a list of tokens.
Compress a double histogram.
Records a magic function in a dictionary.
List all the documentation of all the magics
Format strng as latex
Set a default option
Display a GUI reference page
Create a task with a callable
Get task info by label
get the callable from the funcinfo
Calculate the next run based on the last run
Submit a task to the queue.
Run the task and decrement iteration count
= now return
Run a number of iterations for a given callable.
Run the callable only once.
Find url file.
bind kernel to zmq socket
Create an interrupt event.
Run the program
Filter namespace by a regular expression
Filter objects in namespace by a pattern.
check mutex locks
Draw the interactive figure
Flush all figures to ipython
Print matplotlib figure to stdout.
Load a module from the current working directory.
Unload a python module by name
Generate a range of random ports
Init the web app and http server
Handle a system shutdown signal.
Confirm exit by reading from stdin and exiting.
shutdown all running kernels
Calculate price calls and put calls and asian calls for stock prices
Replace multiple placeholders in a string using a dictionary
Render the prompt
Create zip files and folders
Fix version using the context dict.
Check if an object is mappable.
get partition by num and q
Run program on a file.
Compile source and run interactively.
Download a file from an ftp server.
reduce frequencies to num frequencies
compute n digit frequencies for a file
convert a txt file to a list of digits
Get frequencies for each of the digits
Calculate the frequencies of each digit in a list.
Calculate the frequencies of each digit in the digits string.
plot two digit frequencies
Plot one digit frequencies.
DEBUGX ( expr pre msg msg expr )
Replacement for Django s reverse for URL views.
Check if a string is a private one
DEBUG test source code.
Run a python script in a shell.
Debug a testcase written to the module.
Return a dict of all items in the cache
Remove all files from the hashtree
Return a list of keys in the tree.
( record )
Format an error message.
Starts an embedded shell in the terminal
Create new translation and meta csv writers
Create directories for the languages
Write entries to. po file
write the header to a po file
Subscribe to a user.
Initialize option parser.
Python module runner.
Run a python file.
Make python code from a python file.
load python code from pyc file
Converts a python matrix to an HTML table
Set the current value
Cancel the current completion
Set the index of the selected row and column in the grid.
update list display
Get the frequency of each word in a text.
print n words and their frequencies
Returns a string representation of the XML document
. encode ( )
Validate pin document.
Send shared pin to Kafka.
Delete shared pin by ID
Send PIN to user.
Delete user pin by ID.
Subscribe to a topic.
Return a list of all subscriptions.
Begin the profiling.
Context manager to wrap the execution of a task.
A context manager for performing a subtask within a with statement.
Update the number of units of work
Add a new submonitor and register a progress update listener.
Mark the task as done
Move to the ideal build dir and clean up.
merge pyconfig files
get config dict from. conf file
load a config dict or config dict as a whole
decode argv according to enc
Load the configuration and return it.
Convert data to config.
Attempts to find the module with the given name.
method to be called when timer is stopped
starts the timer
Stop the timer and call all the callbacks
Interrupt the thread then kill it after delay seconds.
get command line arguments
( n )
Send a file via scp
Fetch a file from the remote location via ssh.
Return the number of registered engine names
Start up to n launchers
return job id
= str )
Parse the output of the job id command.
Write the batch script to the batch file
start the scheduler
Make context menu.
) return self
) return self
) return self
Add image to the document format
Copy image to the clipboard
Return image from the document
Insert image data into the document.
Insert svg into the database
Save image with specified format.
Exit the console after num seconds.
Initialize the environment.
Rewrite the input string with the specified command.
ask user to exit
Set the next input in the prompt
Read and parse a file.
Return list of values of option in section.
Get the lines of an option from a section of the config
Set timid from environment variable
Set object attributes from keyword arguments
read a config file and set attributes from it
Sets an attribute from a given section s option.
Set the delimiters to be used when parsing.
Split a line on the delimiter and return a list of tokens
Returns a list of global keywords and namespaces that match the given text.
Find all matches of the attribute name in the text.
Change greedy delims.
Returns a list of aliases that match the given text.
Matches text against the pattern.
completer for rlcomplete
Returns True if at least one test function matches the record.
Returns a list of records that match the filters
Extract subdict based on keys.
Ask user if they would like to be quiet.
Write output prompt to stdout
Write the format dict to the terminal
Log output to the console
Raise invalid operation exception if frozen
Convert string to mysql timestamp.
Called when the event loop is changed.
do one iteration of the simulation
Publish a Python IN command to the broker.
Send an abort message to the client.
Request to clear the console window
Return the topic name.
Shutdown all shell streams
Add modules to the top of the stack.
Remove modules from sys. modules that are not in the stack.
absdir - > absolute path
Check if name looks like a file.
Check if obj is a class
Check if the given path is a package or not.
Natural logarithm of a number.
Given a class name and a module name transplant cls to that of the module.
Return system CPU times as a tuple.
get osx process cmdline
Return a list of open file descriptors for the process.
Get all the connections for the process of the specified kind.
Determine if a user has a group.
Resolve a class by name.
Returns percent of used and total.
Login to a Docs server
Get key from URL querystring
ensure temp path exists
Delete all temporary files
Upload file to Google Docs
Synchronize the local and remote copy of gdocs files with po files.
Download the trans and meta csv files from gdocs and convert to po files.
Uploads. po file to Google Docs
Upload empty file to Google Docs
Create a qtconsole and connect it to the kernel
Check if url has a status code
Check if a URL has a specific string
Get HTTP response code for given URL.
Compares the content type of a URL to a provided value.
compare a url to a response code
Validate data.
Clear output of the console
Build a list of code units from a list of MOrf objects.
Returns the flat name of the module without the drive letter.
open source file
Whether the extension of the file is python
Returns the total seconds of the datetime. timedelta object
Get result or raise error. timeout if not ready.
Wait for all the messages in the queue to be sent.
get a dictionary of values from the cache
abort the current message
Get elapsed time since last submission.
Wait for the job to finish and display interactively.
Republish a display publication.
Wait for all the outputs to be available.
Wait for the deferred execution to complete.
Get absolute path for filename.
Convert patterns to absolute paths if not already.
Get the separator from a string
Find python files in a directory and return all their paths
Strip relative dir from filename
Get the canonical filename for the given file.
Get the zip data from a file.
Check if path matches one of the dirs
Returns True if fpath matches one of the patterns in self. pats
Map aliases to a normalized path
Loop for qt4
Start a gtk event loop
Enable event loop for a gui.
Calculates Goe number using standard normal distribution
Center eigenvalue of a matrix
Generate ensemble diffs
= step )
Load the config file.
Write the barcode to a file
Erase the saved lines and arcs.
Returns a dictionary mapping file names to line ids.
Returns a dict of arcs sorted by field name.
Write the current state to a pickle file.
lines and arcs
Return raw pickled data.
Read a file and extract lines and arcs information.
Combines parallel lines and arcs into one.
Add line data
Add arc data to the document.
( filename ) )
Get a summary of the file.
get pasted lines from input
Main loop for the CLI.
Replace readline history with multiline strings.
Get input from the user.
Edit syntax error message
ask user to exit
Get URL and revision from self. url
create a new frontend instance and return it
Set syntax style and stylesheet according to config. i.
) : return :
Convert NumPy array to NumPy array.
Set the active color scheme.
Toggles the current color scheme
Convert the traceback to text.
Format the traceback and return a list with traceback lines
Format the given list with colors.
show exception only in debug mode
change mode and include vars
Recursively imports fromlist and ensures that there are no modules that import fromlist.
Add a line of code to the generated code.
Add a new section to the code
Get a function from the current scope.
Returns the code for the given expression
Render the graph and return the result string
Get value with dots
render template with context
Default set of formatters.
Change the printer function for a type.
Set the float precision.
Return list of user config files.
Configure logging.
Configure the list of test names to search for.
page out a string starting at start
try to display given file name
Get the command to use for paging.
Get the pager start value.
Print a string to the screen and snip it at the end
Print unicode in pretty format
convert an image to png
convert a png file to a png file
returns True if the object can be printed
converts an object to latex and returns the latex string
Add configuration options to the parser
Validate that lst contains only strings
Validate that keys and values of a dict are strings
Start the main loop
. body )
Autocomplete given text
Information about an object on the vehicle
Shutdown the device and wait for it to stop.
Coroutine used to wait for ioloop to flush.
Send input message
Start channels.
Stop all channels
) Return if all channels are running
read connection info from a file
starts the ip kernel on the fly
Shut down the device and kill the kernel.
kill the kernel
Interrupt the kernel
send signal to kernel
Is the device alive?
Get shell channel
Get or create sub channel
Get the HB channel for this VM
Binds the kernel to the ZeroMQ socket
Print debug message to stderr if debug level is met
Return a list of extension classes.
Pre step.
Walk an egg s directory structure
Scans a module for dangerous dependencies.
Launch a new instance of the IP interface.
Save connection dict to JSON file.
load config from json file
Load the secondary configuration
enable autopx
Disable autopx.
Run a cell and display the result.
Check if a heartbeat message was received and run tasks if so
Run a task from a message.
Delete task with pk from message.
Patch an attribute if it is missing.
accept a connection from the broker.
Reject the pending connection.
= reactor )
validate the form and redirect back to success url
Delete an object.
Set the authenticated user attribute on the model instance.
Check python modules
Launch editor.
Get text from system clipboard
= priority )
Get the metadata type for the given path or module
Configure the debug handler using the given options and configuration file.
Import item by name.
Attempt passwordless SSH
Openssh with passwordless mode.
Try passwordless SSH connection.
Connect to a tunneled server.
Open a tunnel
Stop scheduling tasks and close the socket
Unwraps the given exception and adds the engine identifier to the exception.
Register a new engine with the message
Unregister an engine
Handle a reply message.
Flush notifications from the client to the notification socket.
Send all pending messages on the socket and wait for them to be delivered.
Flush control messages on the specified socket
Send all ignored control commands to the server
Flush all metadata for an iopub socket.
Spin the robot every interval seconds.
Stop the spin thread
Finish and flush sockets
Send a apply message
Send a query to the hub and return history
Query the database with a query string.
Return set of opcodes given names.
Get byte parser for this text
Find lines matching one or more regular expressions.
The first line in multiline mode.
Find first lines ignoring some lines and ignore others.
Parse the file.
return arcs sorted by first line
Returns a list of child parsers.
Iterate through the lines of code as byte and line number pairs.
. strip ( )
Return the block stack as a human - readable string.
num = len ( chunks )
Yield all arcs in the tree.
returns a list of all chunks in this parser
returns a set of all arcs from all child parsers
Load cover and start cover thread
report modules and reports to cover
Check if a file should be covered.
Interpret the distribution name
Open a URL with authentication.
Get the parent object of a value object
Get the root topic of the current engine
Render a template with context.
Configure capture plugin.
Format an error message.
Split string by num chars.
Convert nb to this nbformat.
Convert hex color to rgb
Return a dict of colors for the given style name.
Get font of given family.
Handle reply message.
Process a reply to a history request.
handle output message from browser
handle display data
start all channels
Execute a file and hide the file or directory
HTML - > plain text error handler
Dispatch payload item
Set default style sheet and syntax style
Request editor.
Make input prompt with specified number.
Make a continuation prompt.
Called when the style sheet is changed
Syntax style changed
Transform data if it is a dict
Virtual memory info
Get the cpu times of the system
Return uids of the current process.
get gids of the process
get all threads of the current process
Get the list of open files for the process.
Return a tuple of the commit hash and path of the given package
Return information about a Python package.
Return the number of cpus on Mac OS X.
Return the number of CPUs the current machine has.
Returns the next set of results
fetch a single row from the result set
Fetch many rows from the result set
fetch all rows
) return ''
Convert JSON string to notebook json
Parse python notebook file
Read a file from a string or file - like object
Write nb to a file format.
( nb ) )
convert notebook to metadata
Loads a value from a source dict.
name in self. patterns )
Check if a class is wanted by the plugin.
Return True if a directory should be included in the build.
Determine if a file should be processed.
Check if a function is wanted by the plugin or the user.
Determine if a method should be called from the mock.
Determine if a module should be run by the plugin or the plugin itself
Return a list of lines from a file.
Parse list command and print it.
Print a list of lines.
pdef xdef ydef zpdef xdef
Get the conversion factor between two currencies on a given date.
Convert currency from one currency to another
Calculate the return on a given rate.
Get stream encoding.
Get the default encoding for stdin.
write a connection file to disk
start a heartbeat on the given port
, password = str, )
Initialize sys. stdout and sys. stderr
import kernel and initialize the kernel
Convert html content to text using html2text
Convert Markdown text to plain text
Convert a domain name to a fully qualified domain name.
Add options and arguments to the parser
Configure the exclude options
Return True if we want the directory to be processed.
Whether this extension links to a dynamic library
Call each function in list with args and kwargs
Call each function in reverse order.
) return wraped
Insert func at index.
Format usage string.
Write PID to file.
remove pid file
Get PID from pid file.
Construct a parser for the given magic func.
Get the real name of a magic func.
Highlight the current block of code.
Disable highlighting for this block and then re - highlight this block.
Set the format for the current line.
copy control text to clipboard
Execute a kernel command
Called when the prompt is finished
Return True if tab is pressed
Insert paste into context menu
Intercept keypress events and handle keyboard interrupts
Insert continuation prompt before cursor.
Handle a reply from the server.
Handle reply message from kernel.
Restart the kernel when the kernel dies
Handle replies from the server.
handle output from python interpreter
Handle a stream message.
reply to the shutdown request
\ Executes the code of the specified file.
Interrupt the reading and the kernel
Reset the interpreter interpreter and reset terminal info.
Restart the kernel of the current process.
request the kernel tip to be called
Complete the current context or shell command
Process an error message and keep kernel on exit.
Process an OK message and print out a warning
Called when text is changed in the document
Add plugin to list of plugins.
Call all plugins in self. plugins with the provided arguments
Generator yielding results from all plugins
Call all plugins and return first non - none result
Configure plugins with options and config
Load plugins from entry points.
import nose. plugins
Convert a LaTeX string to a png string
convert latex to html
Check if package exists
return a dictionary of the current object attributes
The name of the process.
Get the percent of CPU usage in the last num seconds
Returns the percent of the memory in the virtual machine.
Returns the memory maps for the current platform
True if the process is running.
Suspend the process.
Resume the paused process
Kill the process.
Wait for the process to exit.
wire up the kernel
Return True if identifier is shadowed by an ip
Register a transformer function
Remove transformer from the chain
Register a checker.
Unregister a checker method
Register a handler function and its esc strings.
Unregister a previously registered event handler.
Prefilter a single line.
Try to find a handler for the given line info
Apply all transformers on line.
Prefilter line and return result.
Prefilter a list of lines for output.
check if the line is about to be logged
Check if line is a multi line special and get prefilter handler.
Check if a line is a prefilter.
Check if the line is a shadowed alias or shadowed prefilter
Indent line if necessary.
Replace aliases with their real names.
Prefilter magics.
Process a line into ifun command and rest of it.
Rewrite the command using the prefilter.
Prefilter line line
Reimplementation of QAbstractItem. event filter
( ) return ''
Paint the call tip
Show call info
Handle cursor move.
Canonicalize path to an absolute path
A dict mapping names to masks.
Check if we are running in a virtualenv
Partition a set of text files by word frequency.
Get the default aliases for the current platform
return name + cmd + default
Define a command alias with the given name.
Validate alias.
Alias a program.
Transform alias to command.
expand alias name if any
A directive that parses the autohelp directive.
Resets the SGR to its default values
Return the color that corresponds to a specific intensity.
Get QText2 format string
Generate a new JWT with a secret and age.
Delete expired tokens.
Check if token has already been used
Validate a JWT token
Find the common prefix of a list of paths.
The size of the scroll bar.
Check if user can cut text
True if the clipboard can be paste
Clear the current input or prompt
Delete selected text from clipboard.
Get the input buffer
Set the input buffer
Sets the font of the control and the completion widget.
Print the current state of the console
Prompt to top.
Reset font to default
Custom append method to control how to append text
) return self
) Insert html before or after text
) return self
Clear temporary buffer
Provide the user with completion information
Fill temporary buffer with text
Control key down given modifiers.
Create and return a gui control.
Create and return a qt page control
Key press event handler
Get block as plain text
Get end cursor
Get column number from input buffer
Get line from input buffer
Get cursor for prompt
Get text selection
Insert continuation prompt
Insert html in the editor
Insert html into the document and fetch the html as plain text Return the newly inserted HTML
Insert plain text
Keep cursor in buffer and move cursor to end
Quit the keyboard from the command line
Insert text at the current cursor position
Called when the prompt is started
read a line from the terminal
Set the continuation prompt
Set top cursor
Adjust scrollbars based on the current number of lines and the current viewport
Main entry point for the formatter.
Copies the specified configuration file into the current workspace. If path is none the file will be
Create a profile dir from a given path with the given name.
Find profile dir by name.
Read source from file with given filename.
Create a temporary file and return its name and file object.
( self. closed
Write data to file and flush
) add a new heart handler
) return handler
Handle a Ping message.
Batch list helper.
Find path and filename of a pathfile
Display elapsed time and elapsed units
Convert time to human readable units.
Extract wininst configuration from dist filename
as zdc )
Quote a string for use in a tag argument list
Check for conflicts with other distributions.
Set fetcher options
create home directory of the user
Determine if name is an archive file.
Create a new heading cell
Create and return a metadata node.
Create and return a new author node.
) Check if directory is writable.
Unquote a filename or path.
Get a python filename from a given name.
Get xdg directory.
Get the path to the ipython interpreter temporary directory.
Get the directory of the ipython package
get ipython module path by name
Determine if target is older than dependencies
Return the md5 hash of a file.
Check for the presence of old ipython configs.
Update the suggestions dictionary for viewed objects.
Get suggestions for the given object with the given size.
get suggestions for current object
Return self relative to cwd.
Glob pattern returning a list of Path objects.
read md5 hash for file
Creates the profile and saves it to the pfile.
Print the profiler to the given stream.
Clean up and close the profiler
Disable event loop for wx application
Disable event loop integration with qt4.
Enable GTK interaction.
Enable GUI tk
Enable Pyglet support
, num ) : wave saver
Create a sqlite3 db and fill it with data
Execute arbitrary SQL against the database.
Get session info from database
Get the last n rows
Get a range of lines from the table based on a string.
, str )
) return name
Clear the history and optionally start a new session.
Return a range session
Store output at a given line number in the database
write out cache for this session
Stop thread and save current state in history
Get the number of CPUs.
Get system per cpu times
Return the disk partitions
Get a list of all pids in the system.
Make a nice string from a pair.
Format a list of lines as a string.
Returns a short stack trace as a string
Join a list of regular expressions into a string.
Delete a file or directory.
Update md5 with value in argument
Update the dictionaries with the current ipython profiles.
Stop a cluster
Find command in PATH environment
Print the stdout and stderr of the process p.
Populate the code units attribute with code units found in the specified morfs
Report all code units in morfs to fn
trace = True )
load all extensions
run startup script
run the shell
Run startup files if they exist
run the exec files
Run cmd line code.
run python module
Get full data filename.
read in the data file
Escape a string for use in LIGO LW XML
Cover the site with coverage data.
make local copy of static report files to directory
write html to file
Generate a hash for the source file and coverage context cu
Index page.
Try to read the status file and settings from it.
Write the status to a pickle file in the given directory.
Sort two lists.
Get a slice from a sequence
Split seq into chunks of size
Read and parse manifest file if exists.
Translate glob pattern to regexp.
True if any of patterns matches filename
Return a list of versioned files in the current directory.
start a new kernel
shutdown the specified kernel
Kill a kernel.
Get a kernel by its id
Get the ports of a given kernel
Get notebook for a given kernel ID.
Start a new kernel
remove a kernel from the system
Interrupt a running kernel
restart a stopped kernel
) - > str or None
) : return : shell stream
= kernel id
Remove all properties that are no longer defined
Export html to. xhtml file.
Fix html content.
Get a unique object or none if it doesn t exist.
Builds a query from tokenized terms and search fields.
Parse a query string and return text search query.
Get date greater than a number of days ago
Generate a date query using the given day and date field.
Return null | blank query for given field
Case insensitive search.
Add options to the parser
Validates the attributes for a given method.
Return True if we want to use this method.
Rotate ring in place
URL of the current websocket connection
Reserialize the reply from the server.
Injects a cookie message to the request.
Start the heartbeat if it is not already started
Stop the heartbeat if it is currently running
Load self. fobj into self. fobj
Get the index of the current state in the progress bar
Move to the specified block index.
Edit the block at the given index.
Show the block with its index
print all src blocks to terminal
map a function to multiple cores
Get the source code for a traceback.
Find inspectable lines.
Create a countdown section
) print ( str ) )
Decorator to save ids in the history of execution of a function
Decorator to sync the results of a function with the client.
Decorator to spin after a function returns a result
Get all messages from the queue.
Get a message from the front of the tube.
Parse a URL and return it as a dict
get root modules of ipython
Return a list of possible completions for the given line of text.
completer modifies the completer to include python modules and directories
Quote a XML attribute.
Configures the plugin.
Write self. errorlist to a report file.
Add an error to the errorlist.
Add a failure to the test.
Add a success test.
twobin random number generator
Choose a random load from a weighted distribution
= uid + 1 return num
Unregister the engine with the given uid.
When a task is lost schedule it.
Audit the timeouts of the depending jobs
Called when an unreachable dependency is failed.
Add the job to the dependency graph
Submit a job to the engine
Dispatches a result message to the appropriate target
Handle a result message.
handle unmet dependencies
Update the graph with jobs depending on dep id
prints the state of the log
write a line to the syslog
Write to the log file and flush the file.
Stop logging and close log file.
Create a new worksheet node
Add an object to a command chain.
Add a new command with a specific priority
Dispatch a key to the appropriate str or regex.
flat ( val )
Called when a directory for a notebook has been changed
Return a list of notebooks in the notebook dir
Create a new notebook id.
Delete a notebook by its id
Check if notebook with given id exists
Get path from notebook id.
Get path of notebook given its name
Get notebook data
Get notebook object by notebook id
Save a new notebook
Save notebook to the database
Save a notebook object
Delete a notebook by its id
Create a new notebook and return its ID.
Copy notebook to a new location.
Yield tokens for the phys parser
Load the default pyconfig. py file.
default_classes ]
Parse the command line
Initialize ipython if not already initialized.
create shell instance and register this configurable
Initialize program banner.
Return a type representation of obj.
Parse a notifier name into a list of strings.
Return traits used by a given class
Get trait metadata
Returns the value if it is a subclass of self. klass otherwise returns value.
Returns the default value for this field or a default value generator
Check if the result is a subset of the completed result or failed result
Returns whether this list can be reached from a completed set and a failed set
, ) as dict
Get the depth of node n in a tree
( tree ) ) print tree
Disambiguate a DNS URL.
Combine allreduce with a function
Validate targets.
Process incoming monitor traffic.
Dispatches a query message
Handle a new heart that we have arrived.
Called when a heart failure occurs.
Save task request
Save a message to the database
Send a status message to the server.
Unregister a dead engine
Called when a heartbeat is finished
Shutdown the device gracefully.
Purge results for a client.
Extract the record and return content and buffers
Get the history for a client.
Perform a DB query.
Change the current working directory and return after the context exits
Turn a completed command object into a completed command object.
Run a command in the repository under the root directory.
Dispatches the message to the appropriate handler.
Check if message is from this session
= None )
Get installed version for a given package name
Recursively squash unicode objects into unicode strings
Extract a header from a message.
Check the value packer.
Create a message structure.
sign a message
Send a list of messages to a stream.
recv from a zmq socket
Save svg to file
Copy SVG to the clipboard
Convert SVG string to image
Return info fields as a dict.
Get docstring of an object.
Get source code for an object.
Get the argspec of a function or method.
Returns the absolute file name of the given object or class
Find the source line number for an object.
Returns the HDEF of the given object.
[ h ]
print no info message
Prints the definition of an object.
Print source code of Python object.
Print the source file of the given object.
Format the given fields into a string.
Search for namespaces using a pattern.
Run the reactor in a thread
Return a string representation of the XML document.
Returns the XML representation of the current document
Load all modules in a set of packages
Invert a dictionary with lists as keys and values as values
Convert an object to a primitive Python object
Get a list of figure objects by number.
Print matplotlib figure to terminal
select figure format
Find the gui and backend
Activate matplotlib backend.
Configure inline support for the current shell
start the trace
Stop the thread.
start a tracer and add it to the list
Installation procedure.
Start the collector.
Stop the current tracer and remove it from the list of active collectors
Stop the tracers and print the current stats.
Resume the tracers.
get branch line data
collect remote exceptions and raise them if they are the same
Render the traceback.
Start coverage reporting.
Canonical dir of morf
Remove str from end of filename if it exists
should trace with reason
Returns whether the given filename and frame should be traced.
+ '\n'
Check for packages
Start the collector.
( ) return
Get a list of regex to exclude
Save the current state of the harvest.
Combine all the paths in the config.
harvest data from the harvester
Analysis of motion.
Perform analysis on a single item
Produce a report of the data
Run annotate on the harvested data
Return XML report as a string.
Reload data from file url or url
Find the path of a command.
Run command with timeout and return exit status code.
Forward events from one socket to another
Send all data from socket to server.
Find launcher class.
Start the daemon
Build launcher.
start the main loop
start the app
Get the wxPython application installed by wxPython
Returns wx event loop status
start event loop running in main thread
Return an application instance for qt4
Is event loop running.
Start event loop
Create a blank canvas
draw cross in given position
Draw a line using skimage. line.
Create annotated image from grayscale image.
Generate a random UUID.
Get unique key from get dict.
Get domain name from URL.
Parse url querystring arguments.