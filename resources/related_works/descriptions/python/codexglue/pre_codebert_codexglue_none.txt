Converts an Sina XML string into a list of url data .
Download a URL and print its content .
Downloads a video file from a URL .
Return text with given colors .
Print text to stderr .
Print error message .
Print a message and exit .
Detect the OS name .
Extracts info from a CDK video file .
Get M3U real URL and segment list
Convert unicode to a string .
Download a CBS website .
Return a list of all matches found in text .
Parse a query parameter from a URL .
Parse a host and return a tuple with the host and port number .
Returns the title and the title of a webmenus topic part .
download by course - course - of - course
download by course Topic Particles
Returns True if the given task instance has a running task .
Get the event buffer for the given dag_ids .
Return a connection to the connector
Retrieves AWS access credentials from AWS
Get a field by its name .
Copy the given SQL to the database .
Bulk dump tables in a table
Execute the upload .
Print current task state .
Get a connection to the server .
Get instance details .
Creates an instance .
Delete an instance .
Creates a database .
Delete a database .
Start the proxy process .
Stop the proxy process
Returns the SQLProxy version .
Create a connection to the database .
Retrieve a connection from the database
Delete a connection from the database
Returns a CloudProxyRunner instance .
Get a postgresql hook
Clean up database hooks
Reserve a free TCP port .
Normalize a mlengine job id .
Get the code of an error .
Remove all dag runs from the database .
Remove all of the task instances from the database .
Set the status of all dags in the database .
Print statistics about the task instance .
Check the status of all failed tasks .
Create a directory .
Convert string to float if possible .
Make timezone aware .
Make a naive datetime . datetime object .
Helper function to convert datetime to datetime
Get a druid connection
Get a requests session .
Run a request and return the result .
Check response .
Run a POST request and check it .
Context manager for creating a session .
Drops all migrations
Returns a string representation of an exception .
Get records from sql query
Returns a pandas dataframe
Execute the given SQL query .
Insert rows into table .
Get a connection to the server .
Checks to see if a collection exists
Create a collection
Checks to see if a database already exists
create a database
Delete a database
Delete a collection .
Insert documents into a collection
Delete a document
get a document
Execute a query against a given SQL string
Retrieve a function by name .
Creates a new function in the specified location .
Updates a function .
Uploads a function to a zip file .
Deletes a function .
Return a list of depuses for this dependency .
Returns True if the requirement is met .
Return a list of all failure reasons .
Parse s3 config file .
Get credentials from a region .
Return a connection to the server
Flush the buffer .
Check if a file location is a zip file .
Constructs a TaskInstance
Starts the process .
Terminate the parser .
Terminate the process and exit .
Starts the process .
Start the DAG in parallel .
Start the DAG process .
Refresh the DAG directory .
Prints the stats if the file is less than the number of file paths .
Clear invalid import errors .
Log file processing stats .
Set new file paths .
Waits until all processes are finished .
End the process .
Get a connection to the SSH server
Creates a new transfer job .
Retrieve a single transfer job .
Fetches a list of transfer jobs matching the filter .
Update a transfer job .
Cancel a transfer operation .
Pause a transfer operation .
Resume a transfer operation .
Wait for transfer job to complete .
Find all tasks for a given task instance .
Get the number of open slots in the pool .
Run a command and return its output .
Allocate a partial ids .
Begin a new transaction .
Commit a job .
Perform a lookup of projects .
Rolls back a transaction .
Execute a query
Retrieve metadata about an operation .
Delete an existing operation .
Poll the specified operation until it is done .
Get the hostname of the configuration file
Return a connection to the server
Get a list of template fields from a full name .
Link to a template field .
Cleanly dispose the database and session .
Prepare the classpath for use in the system .
Check the task_id for the current task .
Detects the configuration variable in the configuration file .
Convert an Alchemy object to a dictionary .
Split a list into chunks .
Wrapper for reduce .
Chain the given list of tasks .
Render a jinja2 filename .
Return a connection to the server .
Perform an operation on the server .
Recursively coerce a string into a string .
Handle databox execution .
Runs the given pig .
Fetch celery task state .
Return the number of tasks per send process per sync process .
Return the number of tasks per fetch process .
Return a connection to the server .
Get metadata about a job .
Wait for a job to complete .
Create a version for a model .
Set the default version for a model .
Returns a list of all versions of a given model .
Delete a version of a model .
Create a model in a project .
Get a model by its name
Write batch data to DynamoDB
Injects the external executors modules into the module .
Get the default executor .
Get an executor by name .
Called when a segment error occurs .
Return a connection to the database
Trigger a run of a dag .
Delete a dag .
Get information about a task .
Returns a list of all configured pools .
Create a new pool .
Create or update a container group .
Get the state of an instance .
Returns a list of messages for a given instance .
Get logs from a resource group .
Delete a container .
Check if container exists .
Construct the ingest query dict .
Picks a message from the publisher .
Return a queryset of all task instances in the database .
Get task instance by task id .
Get the previous dagrun of this dagrun .
Get the previous scheduled dagrun for this dag .
Verify the integrity of the flow .
Takes a jenkins request and returns a dict with headers and headers
Convert a CloudFormationContext object to a dictionary of airflow variables .
Print the conditionally if the condition is triggered .
Query metric .
Get a dag by id
Kill a list of zombie objects .
Bag a dag .
Collect all the DAGs in the given folder .
Return a report of the dagbag stats .
Add number of days to datetime .
Return True if the file is in the given directory .
Return a boolean indicating whether the file is in the hdfs database .
Clear task instances from a task instance .
Get the number of tries to run .
Get current state of this task .
Log error .
Refresh the task instance from the database .
Remove xcom data from the database .
Return a key that can be used for debugging purposes .
Return True if all of the tasks have been done .
Get the next retry date .
Return True if the service is ready to retry .
Return True if the pool is full .
Get the Dagrun object for this Dagrun .
Push a value to xcom .
Initialize the run context .
Closes the upload .
Return a connection to the server .
Start an instance .
Retrieve an instance template .
Wait for an operation to complete .
Check if a bucket exists .
Create a bucket .
Checks if the given prefix exists in the given bucket .
List prefixes for a bucket .
List all keys in a bucket .
Check if an object exists
Get an object from a bucket .
Read the contents of a file .
Checks if a given wildcard exists .
Get the key matching a wildcard
Query the cassandra connection .
Convert a user type into a dictionary .
Get a connection to the API .
Execute the query .
Load list of entry points .
Check if a plugin object is valid .
Skip one or more tasks from a dag run .
Return a connection to the store
Check if a file exists on the server .
Return a list of files in a directory .
Execute the query
Unzip a file .
Query the mssql database .
Build metrics for a given function .
Create a cgroup from a path .
Delete a cgroup from a cgroup
Make a request to the API
Return a connection to the Salesforce server
Make a query and return the results .
Describe an object
Returns a list of fields available for the given object
Get object from salesforce .
Convert a column to a timestamp .
Get a MongoDB collection .
Checks if a email has a mail attachment .
Get email parts by name .
Get the file and payload .
Put records in firehose .
Get status of all pending tasks for this task .
Send an email .
Sends an email using SMTP
Convert value to UTC .
Check if a blob exists .
Check to see if a given container exists in the given container .
Create a blob from the given string .
Reads the contents of a blob into a string .
Delete a file from a container
Get ftp connection
Return a list of files in a directory
Store a file in the remote storage .
Get modification time of a file
Execute the webhook .
Return a connection to the server
Check if a directory exists .
Check if a file exists .
Returns a list of all the files in the specified share directory .
Creates a new directory in the bucket .
Load a file from a file .
Load a file from the server .
Get storage connection .
Download a file from a bucket
Upload a file to a bucket .
Check to see if an object exists .
Returns True if the object is updated after the given timestamp .
Delete an object from a bucket
Get the blob size of an object .
Get the CRC32c32c of a blob .
Get the md5 hash of an object
Checks if secondary training status has changed .
Return a string describing the secondary training status .
Upload a tar and S3 to a temporary file .
Configure s3 and tarball resources
Check if s3 URL is valid .
Get a log client connection .
Execute the job on the cloud
Run all migrations on the database .
Run all migrations .
Delete an instance .
Deletes a table .
Update one or more nodes .
Prepare the CLI command for this connection .
Convert a dictionary to a list of strings .
Returns True if table exists False otherwise .
Get a connection to the hive server
Get results from query
convenience method to get the results of a query
Returns a Pandas DataFrame with the columns of the query
Get a connection to the productsearch server .
Get the token from the HTTP connection .
Bind parameters to an operation .
Escape a string .
Cast bq_type to bq_type
Validates a value against expected_type .
Get a bigquery connection
Get a PyTorch service object .
Check to see if a table exists .
Cancel a running job .
Runs a table delete command .
Runs a table upsert .
Get a dataset .
Execute an operation .
Execute an operation .
Fetch next page token .
Query postgresql .
Recursively create intermediate directories .
Runs a subprocess .
Clean up the config file .
Entry point for the script .
Build HTML header .
This method is used to build the JSSchart object .
Create a new x axis .
Create y axis .
Get sqlite3 connection
Get the last executed dag run .
Execute this message .
JSON response .
Open a file - like object .
Create a cache key for the request .
Return a connection to the server
Get API key .
Get a HTTP connection .
Execute the query and return the response .
Build an opsgenie payload .
Execute the operation
Get a connection object to the database
Runs a query and returns the result .
Get the status of a query .
Wait for the specified query execution .
Get a pysftp connection
Handle a rate limit exception .
Get a table from a database
Get the location of a table .
Get the status of a cluster
Delete a cluster
Get cluster snapshots .
Restore cluster from a snapshot
Create a cluster snapshot .
Execute the method against Slack .
Create a job flow
Filter results to a file size .
Filter out strings that match the given extension .
Execute the query
Get pool by name .
Create a new pool .
Delete a pool from the database .
Convert a Python dict to a protobuf .
Wait for an operation to complete .
Retrieve metadata about an operation .
Append label to cluster_proto .
Get webhook endpoint
Builds a JSON payload to send to the server .
Execute the Webhook
Encrypt plaintext .
Get a texttospeech client .
Close the S3 bucket .
Build environment variables .
Get worker secrets .
Get security context .
Get the extra links to the task
Starts the process .
Return True if process is done False otherwise .
Exit the process gracefully .
Update import errors in the database .
Get a list of tasks from a dag .
Returns a dictionary mapping the number of dagids to dagids .
Update the state of the given task_instances .
Enqueue task instances with queued tasks queued .
Update state of queued tasks that failed .
Process events from the executor .
Update the counters for the given status .
Update the state of the executor .
Returns a Dagrun object for the given run_date .
Returns a dictionary of task instances for the given dag run .
Set failed dag runs as failed .
Perform heartbeat callback .
Get a client for a project .
Get instance details .
Delete instance .
Delete a database .
Check for email attachment .
Prepare the additional parameters for the provided language .
Get a connection to the keyspace
Check if a table exists .
Checks if a record exists in the database
Build command to track driver status .
Submit a Spark submit command .
Parse the log log output and log the exit code .
Parse the spark status log
Returns a task runner based on local_task_job_job .
Wait for a task to complete .
Query MySQL .
Configure CSV file with schema .
Write the schema to a file .
Returns a dictionary of column types to be used in the query
Map a mysql type to a string
Return the extra data as a string
Scale time units to unit .
Returns the number of days ago from the given number of days .
Create a role
Deletes a role
Get the roles of a user .
Returns a set of all permissions for the user
Returns True if the user has a role .
Return True if permission_name has permission_menu_name and view_menu_name .
delete all permissions
Merge permission and view menu .
Update admin permission view .
Create permission manager for all DAGs
Get fernet from configuration .
Put the table if it exists .
send messages from sqs queue
Get an hdfs connection
Get a connection object from the webhdfs_conn_id .
Check if the given HDFS path exists .
Get a connection to the broker
Get the URI for this connection .
Convert date to dict .
Convert time to a dictionary .
Get redis connection
Get a dataframe from the database
Run a SQL statement .
Set autocommit for the connection .
Serialize a cell into a string .
Check the status of the scheduler .
Return a cloudant connection object .
Execute the Slack webhook .
Get credentials from Google Cloud Storage .
Authenticate to Google .
Return a list of unfinished tasks .
Prepare the connection command .
Normalize a tensor .
Crop a PIL image .
Flips a PIL image in a PIL Image .
Compute the perspective of a pil image .
Flip a PIL image in a PIL Image .
Adjust the brightness of an image .
Adjust the contrast of an image .
Adjust the saturation of an image .
Convert an image to grayscale .
Save a tensor to an image file .
Find all classes in a directory .
Read labels from file .
Reads matches files in a directory .
Compute the accuracy of a tensor .
Download a file .
Returns a list of all subdirectories .
Returns a list of all files in the given root directory .
Download a file from Google drive .
Get parameters for a given image .
Generate random params .
Generate random params .
Generate parameters to be used as a parameter .
Generate random parameters .
Download the tarball file .
Download all the extracted images .
Returns the current theme name .
Return a list of themes .
Parse the response from the HTTP response
Generate a multivariate normal distribution .
Calculates the log probability of eight - school school sessions .
Build a random variable .
Return a masked version of x .
Compute the event size .
Evaluate all one - hot - hot - encoded function .
Convert identifier to Tensor function .
Calculates the size of the components .
Build the input pipeline .
Check if map values are valid .
Apply a function to the given arguments .
Call a given function fn and return its gradient and gradient .
Broadcast a structure from one to another .
Perform a leapfrog step .
Performs a step of the metropolis heuristic .
Creates a Function from a dictionary .
Convert x into Tensor .
Expand x to the event rank .
Calculate the probabilities for the logits .
Raise ImportError if tensorflow is not installed .
Logistic regression .
Compute coverage type and labels .
Make tensors that are positive or negative .
Squeeze input into tensor .
Return the z - value of x .
Inverse of z
Computes the semilocal trend transition matrix .
Calculate the semilocal - trend noise noise .
Return a boolean array where less than n is less than n .
Return the eps for a given dtype .
Perform a bisection on a line search .
Serialize a list of tuples into a string .
Check if a parameter is valid .
Interpolate a grid according to loc .
Interpolate a grid according to the given scale .
Concatenate multiple vectors .
Compute log - sum of given vector vs ms .
Compute log sum of ms .
Generate a tensor matrix from a sequence of vectors .
Helper function to extract log probabilities .
Generate random direction for current state .
Call fn if fn_result is not None .
Build a pre - trained posterior .
Compute the moments of a time series .
Compute the initial value of a masked time series .
Compute the mixture of samples over the posterior .
Get the range of the low .
Resolves the names of the arguments to a list of names .
Build the distribution .
The entropy of the distribution .
Summarize sequences .
Visualize the reconstruction .
Generate summaries of the given inputs .
Summarize distribution parameters .
Summarize mean .
Evaluate the Tensor with respect to inputs .
Zero - inflated state .
Call the convolution layer .
Sample the static prior from the given samples .
Return the shape of the batch .
Returns the batch shape of the parameters .
Helper function to convert a vector size to a square matrix size .
Returns the indices of the indices of the values along an axis .
Sort values along axis .
Compute the NTR of a tensor .
Calculate the asymmetric series of ntrimesh series .
Compute the standard deviation of x .
Log probability of joint messages .
Return True if index points are marginal .
Get index points .
Calculate the outer squared difference between x and y .
Compute the value and batch_jacobian of a function .
Split a covariance into a list of marginalizations .
Return a string representation of a tensor .
The shape of the sample shape .
Returns the sample shape .
Return the value of the sample .
Return a numpy . ndarray .
Return unit norm .
Log normalization .
Return the common dtype for a list of args .
Broadcast to target_tensors .
Returns the PDF at the peak .
Compute the effective sample size for a single state .
Reduce the size of a single state .
Helper function for _get_size_size
Convert a list or list of states to a list of states .
Remove a field from this mapping .
Merge two dictionaries .
Recursively convert a nested tuple into a string .
Get keyword arguments from a function .
vggconv_block_block .
Return True if states have no momentum .
Leapfrog function .
Calculate the log joint of current and momentum .
Generate randombernoulli .
Convert nested structure to Tensor .
Get a dictionary of attributes for tensor .
Creates a mixture - family prior .
Packs images into a 2D array .
Download filename to directory .
Call a volatility function and return the gradients .
Create a copy of the volatility of the given volatility .
Call fn with optional batch shape .
Call a function and return the result .
Computes the DTR of the K - T - T - T - T - T - T
Sample the distributions in the model .
Returns a list of strings for the given topics .
Add control dependencies to the barrier .
Save images to a file .
Convert dtype to a numpy dtype .
Return the base_dtype of dtype .
Check whether dtype is a bool .
Return True if dtype is complex .
Returns the maximum value of dtype .
Get the name of dtype .
Returns the size of a dtype .
Assert that all items have the same type .
Return a function that accepts the best objective and objective values .
Helper function to expand a simplex .
Shrink the smallest element down to the given smallest .
Replace all occurrences of x with replacement .
Calculate the arguments for the objective function .
Helper function to prepare the arguments for the initial vertex .
Build fake data .
Return a dict of Keras configs .
Create a tf . Tensor from a dict .
Matrix multiplication .
Helper function for _std_var_fn .
Pick a scalar condition .
Compute log probability for one fiber .
Finish the probability for one fiber .
Transpose x if necessary .
Validate a batch normalization layer .
Convert slice parameters to a dictionary of parameters .
Apply parameters to a single step .
Apply slice_overrides to the distribution .
Returns the number of columns in x .
Get a pred predicate .
Get rank from a shape_tensor .
Return True if scale is a diagonal scale .
Pad the dimensions of a tensor .
Assert x is nonnegative .
Try to get static value from x .
Return a boolean indicating whether the dtype is unsigned .
Return a boolean indicating whether the dtype is known by dtype .
Return the largest integer by dtype .
Return the smallest integer value for the given dtype .
Return True if dt is an integer - like object .
Generate a random seed .
Return the dimension of x .
Helper function for _validate_dims .
Check if perm is valid .
Compute event shape .
Return a list of dims .
Build a backward pass step .
Calculate the predicted mean and covariance for the given covariance matrix .
Propagate mean .
Propagate covariance matrix to covariance matrix .
Compute joint mean .
Construct joint covariance matrix .
Push latents to observations .
Log normalization .
The mode of the MOC .
Rotate the given samples .
Sample from a 3D tensorflow .
Return a copy of a function .
Remove all keys with value from a dict .
Recursively replace all dicts in a pretty dict .
Get a tensor from dist .
Return True if x is a namedtuple .
Return a new class based on accepted values .
Call fn with gradient descent .
Check if shape is valid .
Return True if any of the converged or failed .
Update position and gradient .
Checks if convergence is converged .
Broadcast value to target .
Return a harmonic number .
Get a field from kernel results .
Variance scaling term .
Apply cond to tval .
Check if two values are finite .
Returns the bootstrap kernel results .
Resnet block .
A deep exponential family .
Initialize params .
Returns the kl function that can be used to classify mroges .
Read image from file .
Download the static files to the data directory .
Create a character .
Create a sequence of frames from a character .
Create a random sequence .
Flatten a list of kernels into a single list .
Return a list of product kernels .
Build fake data .
Ensure that all dimensions are in the same order .
Make a list of nonnegative integers .
Sorts a tensor according to the last dimension .
Raise ValueError if x is not None .
Perform a batch gather of params .
Broadcast an event to samples .
Controls control inputs for the inverse of the inv_hessian .
Perform a batch transpose of a matrix .
Compute the sum of the elements in x .
Get the common dtype of the input list .
Returns initial state arguments for the initial state .
Return a boolean mask indicating whether x is positive eigenvalue .
Helper function to get initial arguments .
Find the best value in a given population .
Check if the input is converged .
Ensure that a tensor_list is a tuple .
Convert to Tensor .
Build the input pipeline .
Plot generated images .
Convert a list of productions into a string .
Call the LSTM model .
Evaluate the convolutional network .
Compute the weighted integral of x .
Compute the inverse of x .
Constructs the constraints for LU solver .
Generate a SparseBlock diagonal .
Try to validate a matrix .
Generate a list of strings representing the slices of a string .
Generate a tf . mask .
Create an array of integers
Return a list of strings that are within the given degrees .
Return a dummy matrix with zero - dimensional variance .
Convert parameters to weights .
Connects the model to the graph .
Build the seasonal transition matrix .
Calculate the seasonal transition noise .
Calculates the seasonal transition noise .
Ensures that the observation_index_points are valid .
Adds the value to the wrapped function .
Call this method to set a checkpoint .
Set the gradient constant to be used for gradients .
Optimize the model .
Set the summary of the train dataset .
Set the summary of the value
Set the training data for this dataset .
Download the news20 articles .
Download a GLOV file from a source directory .
Compile the bigdlf function .
Evaluate the model .
Predict for x .
Load MNIST dataset .
Preprocess MNIST data .
Determine the end - trigger value based on options .
Validate the validation of an optimizer .
Return the value as a string .
Calls a judfactory function
Convert an RDD to Java ObjectRDD .
Convert a Python object to a Java string .
Get activation by name .
Return label as ndarray .
Read image data from parquet file .
Write a BigDL file to disk .
Get the image stored in the frame
Get a list of tensors for this image .
Return a list of strings representing this tensor .
Get predictions for the given key .
Predict on x .
Apply BigDL transformation to dataset .
Save Keras definition to json file .
Build Keras model .
Predict class distributed with data_rdd
Returns a list of tensors representing the weights .
Get training data .
Load a torch . torch . layer from a file .
Load Keras model parameters .
Creates a criterion that evaluates to the given value .
Load weights from json file .
Load Keras data .
Build Keras model .
Get the shape of the dataset .
Get the shape of the output .
Read MNIST data .
Reads data sets from the data_dir
Get the classpath of the bigDL class .
Check if Spark version is less than 2 .
Export a checkpoint to a dictionary .
Save tensors to a bigDL file .
Expand a tile onto a tile .
Simple simple attention .
Compute the attention layer .
Get the log file .
Log the given utterance .
Compute summary gradient updates .
Read data from a config file and return it .
Interact with an Alexa voice agent .
Convert labels to onehot format .
Convert labels to one - hot encoded labels .
Create a tf . session .
Load the network from disk .
Get the value of the momentum variable .
Update graph variables .
Round f1 - score of predicted features .
Process a word .
Generate a dropout dropout layer .
Connects the LSTM model to the graph .
Build the basic network for the network .
Train the model on a batch .
Predict on a batch of objects .
Turn a sentence into a vector .
Convert a list of tags into a numpy array .
Advanced BLEU measure .
Verify a URL is valid .
Extract certificates from a file .
Verify a signed signature .
Verify a signed certificate .
Returns a JSON representation of the container .
Returns the ms_bot_framework of all controls .
Return a list of all telegram controls .
Alexa list of all controls .
Calculate accuracy .
Round accuracy .
Read data from file .
Creates a dummy agent .
Convert x to one - hot encoding .
Pretty - print metrics .
Loads the model from the checkpoint .
Save the model to disk .
Get a tf . train_op .
Search for words in the trie .
Start the timer .
Handle a request .
Runs the given utterance .
Generate the response template .
Handle the incoming request .
Handle a launch request .
Handle unsupported configuration request .
Pretty print the object .
Convert loss to pvl .
Build a model from a config file .
Interact with the given configuration .
Run inference on a model .
Read in text file .
Import function from a string .
Get a metric by its name .
Convert a label into an integer .
Private function to get the best value for the given values .
Encodes a list of tokens .
Read requirements from requirements file .
Calculate the log loss .
Create a string representation of the details .
Create an ecommerce agent
Runs the main function .
Download a file from a source URL .
Untar a file into a tar archive .
Recursively updates the editable_dict recursively .
Return path set md5 with MD5 fragment .
Set a query parameter in a URL .
Alexa response as a dictionary .
Returns the JSON representation of the control .
Generate the magic for ms bot action .
Returns JSON representation of the control .
Generate HTML for ms_bot_framework .
Compute the F1 score of a squad v2 .
Calculate the recall at k .
Check if GPU exists .
Recursively parse a configuration string .
Parse a JSON config file .
Expand ~astropy . path .
Run the main loop .
Delete a conversation .
Refresh valid certificates .
Verify a signed request .
Handle a request .
Return a class instance from a module name .
Return a model instance given its name .
Get a dictionary of glmregularization paths for a model .
Create a glmmodel from a model
Create an h2ocluster object from a list of key values .
Shutdown the server .
Returns True if the server is running False otherwise .
Returns a list of all the currently running jobs
Get timezones .
Fill self with other .
Runs test_func on the sandbox .
Get a summary of a key .
Delete a frame .
Get model builders .
Validate the parameters of a model
Get the metrics for a particular model and frame .
delete a model by key
Run one or more EC2 instances .
Terminate one or more instances .
Stop one or more instances .
Start one or more instances .
Reboot one or more instances .
Wait for ssh to complete .
Get the full name of a method .
Get a string representation of the arguments .
Wrap the given text into a string .
Wait for the job to complete .
Train the model with the given parameters .
Returns a dictionary with all of the current parameters .
Prints a signal handler to stdout .
Remove the output directory .
Remove a sandbox .
Scrape the port from the output file .
Scrape cloud size from stdout .
Terminate the process .
Stop all nodes .
Get the IP of the client .
Get the port of the client .
Determine the size of the column in pre_training .
Calculate the absolute error mean absolute error .
Calculate the squared mean squared error .
Calculate the median absolute error .
Explicitly explain the variance of a test .
Raise an exception if var is not a type .
Raises an exception if the value matches the regex .
Fail if v is not satisfied .
Check if var is of type vtype .
Get a type name for a given type .
Check if a variable is valid .
Check if a variable is a string .
Get configuration file .
Read config file .
Generate a list of paths to log files .
Store a model progress .
Recalculate model parameters .
Estimate the completion time for the current progress .
Guess the next poll interval .
Compute progress at time t .
Compute time at x_target at x_target .
Draws the text to the terminal .
Compute the width of all widgets .
Get the size of the terminal .
Set encoding .
Compute the encoding map for the given frame .
Refresh the cache .
Return the type of a column
Print a summary of the table .
Print information about this Frame .
Return a new DataFrame with the first rows .
Multiply the matrix with the given matrix .
Return a list of levels in the HTML frame .
Returns the number of levels in the tree
Set the level of the html frame .
Set the levels of the video .
Rename columns .
Set the names of the expression .
Set the column name .
Returns True if the item is in the given item .
Return a modulo - fold column .
Stratified kfold column .
Print the structure of the table .
Remove a column from the list
Concatenate multiple frames .
Bind the columns to the dataframe .
Create a h2oframe bound to the given data .
Group the results by a column .
Fill missing values with missing values .
Compute the expression of a given value .
Insert missing values for the current frame .
Convert the expression to a factor
Split a string into a list of strings .
Return a string with the strip removed .
Compute the entropy of the expression .
Calculate the number of valid substrings for a given path .
Return a string representation of the table
Subtract a substring from a string .
Get string representation of the expression .
Return an astropy . expression . Expression that will be broadcast to self .
Difference between rows .
Return an astropy . expression
Instantiate a H2oframe expression .
Create a H2oframe expression
Apply a function on the x axis .
Parse text into a list of tokens .
Parse a file and return a code object .
Move the cursor to a new row .
Unparse the input string .
Returns a list of the centers of the model .
Returns a list of the centers of the model .
Make a request to the API .
Check version of the cluster
Load a pattern from a path .
Parse raw frame .
Return a deep copy of the data
Returns an instance of the model .
Get a grid by its id
Get a single frame
Download a Pojo file to disk .
Download data from a CSV file .
Display a demo function .
Load a dataset .
Make metrics for the h2oframe
Write a key to a file .
Check frame id .
Return a human readable number of bytes .
Normalize a slice .
Check if a slice is normalized .
Wait for the queue to complete .
Get deepfeatures of all the models in the specified layer .
Print a summary of the models .
Prints a table of hyperparameters to stdout .
Return a list of hyperparameters for the given id
Get a dict of hyperparameters for the given id
Get ARCH types in a model .
Display a screeplot of the model .
Translates a camel case name into a lowercase letter .
Recursively dedent a string .
Main entry point for the script .
Close a session .
Request session id .
Start logging .
Prepare data for serialization .
Prepare a file payload for streaming .
Log a start transaction .
Log end of a complete transaction .
Log a message to the logging destination .
Prints a verbose message .
Get automl .
Download the Pojo Pojo .
Download a MOJO file to disk .
Fit the model .
Apply scaling to x .
Inverse of the transform
Extracts true string from string_content .
Finds node name in g_func_list that contains node name
Finds the build timeout for each test line .
Finds if the test fails occured in the test_func_list occurences of the
Find a build id in the given file .
Extract information from a URL .
Grab the current message from the test name
Save test info to a pickle file .
Update the summary file .
Writes file content to file .
Writes a java message to a text file .
Load the list of messages to ignore .
Normalize enum constant .
Returns a list of synonyms for a given word .
Poll job status .
Writes the object to a POJO file .
Fits the frame with the given fron .
Get the default parameters .
Returns a dictionary with the actual parameters .
Compute a deep feature of a scene .
Get a list of scores from the model .
Print model information .
Returns a pandas dataframe of the model
Get the residual degree of the model .
Get the coefficients for the model .
Download a pojo file to disk .
Download the MOJO to a file .
Save the model details to a file .
Checks that the number of targets are equal .
Return list of cross validation models .
Wait for a keypress .
Return a data frame as a pandas dataframe .
Pretty print the table .
Searches the jar for the specified path .
Return a list of jar paths .
Write a csv file .
Convert a path to a URI .
Discover all modules in the package .
Write the documentation to outdir .
Returns a list representation of the table .
Loads the JSON message dictionary from the JSON file .
Add a new message to the dictionary .
Save all the properties of the JSON file .
Prints the dictionary to stdout .
Parse arguments .
Print usage .
Find all files in a directory .
Find a magic string in a file .
Main entry point for the script .
Transform data to h2oframe
Summarize failed runs and add them to the summary dictionary
Extracts all tests that are not failed
Plot the metrics .
Check if a string is available
Removes all data back to the beginning of the month to keep .
Returns a dictionary with the list of endpoint groups
Update the site model on the database .
Convert data to json string .
Comment a user .
Get username and password .
Like the user_id but returns a bool - like object .
Like the given hashtag .
Check if a user is not a bot .
Read list from file .
Set the message time for this message .
Mark the message as alive .
Guess service info from a path .
Get the URI from a request .
Get a connection to a request .
Perform a HTTP request .
Get authorization server value .
Validate the request URI .
Get CLI profile .
Open a websocket connection .
Set the timeout for this request .
Sets a request header .
Get all response headers .
Send a request to the server .
Returns the status of the request .
Get the status of the HTTP request .
Get the response body .
Set the client certificate .
Send a HTTP request to the server .
Add a request header .
Send a request to the server .
Return a response object .
Get the id_name from the id_name .
Get the serialization name from an element name .
Get properties from an XML node .
Get children of node .
Recursively finds all the namespaces from a child .
Parses the given XML string and returns a service bus namespace .
Return a servicebus region object from an XML string .
Parses a namespace availability string and returns a boolean indicating whether it is available .
Convert an XML string into a MetricsObject .
Updates the specified KB .
Build a package from a PR number .
Perform a replace operation .
Gets the storage account properties of a storage account .
Gets the storage account keys for a given service .
Deletes the keys of a storage account .
Deletes a storage account .
Checks the availability of a storage account .
Gets the properties of a hosted service .
Deletes a hosted service .
Deletes a deployment .
Swaps an existing deployment .
Updates a deployment status .
Walks an upgrade domain .
Reboots a role instance .
Deletes one or more role instances from a service .
Check availability of a hosted service .
Lists the certificates associated with a service .
Gets the certificate for a service .
Adds a certificate to the subscription .
Deletes a service certificate .
Gets the management certificate for this subscription .
Adds a new certificate to this subscription .
Deletes a management certificate .
Gets the properties of the specified affinity group .
Creates a new affinity group .
Deletes the specified affinity group .
Fetches a list of subscription operations .
Deletes a reserved IP address .
Associates a reserved IP address .
Disassociate a reserved IP address .
Gets a reserved IP address .
Gets the specified role .
Deletes a role .
Starts a role .
Start a role .
Restart a role .
Adds a DNS server to a deployment .
Updates a DNS server .
Deletes a DNS server .
Fetches a list of all resource extension versions for a publisher extension .
Unplicate a VM image .
Share a VM image with permission on this server .
Deletes a virtual machine image .
Lists the virtual machine images .
Deletes an OS image .
Returns the data disk for a data disk .
Deletes a data disk .
Updates a disk .
Deletes a disk .
Build receiver .
Creates a KeyError from a connection string .
List all subscriptions for a topic .
Parse the response from an async operation .
Perform a GET request .
Perform an HTTP PUT request .
Gets the status of an operation .
Update the header of the request .
Parse travis deploy package .
Returns a list of all regions in the service .
Returns a list of namespaces .
Get a namespace by name .
Creates a new named service .
Deletes a namespace .
Checks the availability of a specified namespace .
Returns a list of topics .
Returns a list of notification hubs .
Returns a list of relay objects .
Gets the metrics rollups for a given metric .
Gets the metrics rollups of a topic .
Gets the metrics rollups for a given metric .
Gets the metrics rollups for a specific metric .
Create a new context .
Creates a virtualenv with the given packages .
Creates a new SQL Server .
Sets the server admin password .
Lists all quotas for a server .
Deletes a firewall rule .
Lists all firewall rules for a server .
Returns a list of service objectiveives associated with the server .
Deletes a database .
Returns a list of databases .
Get session state .
Set session state .
Validate a challenge .
Return error handler .
Creates a queue .
Deletes a queue .
Returns a Queue .
Creates a topic .
Returns information about the specified topic .
Creates a rule .
Fetch a rule .
Returns a list of rules for a topic and subscription .
Creates a new subscription .
Get information about a specific topic .
Returns a list of all subscribed subscriptions .
Send a message to a topic .
Unlock a subscription message .
Sends a batch of messages to a queue .
Unlocks a queue message .
Receive a message from a queue .
Receive a subscription message from a topic .
Creates an event hub .
Updates an event hub .
Returns an EventHub object for the specified hub .
Send an event to a hub .
Update the header of the service bus .
Generate an authorization token .
Check if token is expired .
Get a token from httpclient .
Update the request path with the query string .
Deletes this message from the queue .
Unlock this consumer .
Renew lock on the queue .
Add headers to the request .
Return a JSON - serializable representation of the batch .
Raise an exception if the error is invalid .
Handle a redirect .
Set the profile to use .
Delete a queue .
Deletes a topic .
Parse a connection string and return an AccessKey instance .
Get the properties of the entity .
Returns a boolean indicating whether the lock was locked .
Handle the results from the results queue .
This function is called when the task collection is processed .
Build a configuration dictionary from a configuration dictionary .
Create a message from an HTTP response .
Convert an ETree element to a Python rule object .
Convert an ETree element to a queue .
Convert an ETree element into a topic object .
Convert an etree element to a subscription subscription .
Parse a list of enum results from an XML response .
Get properties from an element .
Returns a list of queues for the service .
Returns a list of topics for the service .
Gets a specific site .
Deletes a website .
Updates a website .
Restart a website .
Get historical usage metrics for a website .
Gets the metric definitions for a website .
Get publish profile XML .
Get a specific publish profile .
Creates a cloud service .
Check the availability of a job collection .
Returns the information about a job collection .
Cancel scheduled messages .
Reconnect to the server .
Get a certificate from the publish settings path .
Load cookies from the session .
Calculate the terminal width .
Get the cut prefix of a string .
Print the given string to the terminal .
Format a file size .
Format the elapsed time .
Create a text line with the given parameters .
Print progress information .
Generate segment numbers .
Get all segments in this representation .
Wait for the event to complete .
Adds a segment to the queue .
Queue a value to the queue .
Get parameters for a PV SWF request .
Extract the nonce from the HTTP response .
Get vpid for a given url .
Parse a JSON string and validate it .
Parse XML .
Parse a QSL string and validate it .
Searches for all the keys in a dictionary
Iterate over all tags in HTML .
Determine the encoding of a sample .
Parse JSON response .
Parse XML response .
Parses cookies .
Parse HTTP headers .
Parse query parameters from cookies .
Return the message as a string .
Create a new record .
Login to the user .
Load a support plugin .
Update the query string with the given query parameters .
Iterate over the content of the file .
Returns a list of required dependencies for the given argument .
Checks file output .
Create output handler .
create an http server
Yield HTTP requests .
Output a stream to a file .
Open a file - like object .
Write a stream to a file .
Read data from a stream .
Handle a stream .
Fetch streams from plugin .
Fetches a list of streams and attempts to retry .
Resolves a stream name to a name
Prints the plugin list .
Authenticate using Twitch .
load plugins from a directory
Setup the HTTP session .
Loads the plugins from the plugins directory .
Log current versions .
Extract the stream id from text .
Get a list of streams from text .
Get a value from the server .
Set plugin option .
Get the value of a plugin option .
Resolve a URL .
Load plugins from a given path .
Convert string to integer representation .
Find a player s url .
Parse M3U data .
Returns the name of the player that matches the given command .
Get stream id from HTML .
get stream info from html
Log in to the server
Map a function to a key .
Make a call to the API .
Start a new session .
Get information about a media .
Creates an API object with the given options .
Return a string formatter for a character .
Read n bytes .
Return a string representation of the code .
Return an explanation of the code .
Set the decodet for the given string .
Set the length of the sequence
Read a tuple from the stream .
Return an explanation .
Return the value at index .
Return a tuple containing the base and upper and upper and lower and upper bound for the given index .
Return a value for a given index .
Get the mnemonic for a symbol .
Get the mnemonic for a given index .
Compile the actions table
Evaluate the given action .
Return a string representing the hexadecimal data .
Calculate metablock length .
Print uncompressed bytes .
Set block type .
Convert a sequence of integers into an integer array .
Read prefix array .
Patches a dataset .
Add two vCenter columns to the model .
Creates a vaEx app
Open a list of filenames .
Load a VEX object from a VEX file .
Create a dataset object from an astropy table .
Convert scalars to a numpy array .
Load data from a CSV file .
Create a VEX server
Variant of zeldovich .
Concatenate a list of dictionaries
Return a string representing a column in a column .
Open a dataset .
Evaluate an expression on the dataset .
Return a set of variables that should be used for this dataset .
Sort the pairs by ncol .
Wait for the plot .
Open OS using OS .
Write a file - like object .
Split arrays into multiple arrays .
Calculate the median of an expression .
Creates a plot widget .
Plot 3D data .
Get the numpy dtype of an expression .
Get the private directory of this instance .
delete the virtual meta
Write virtual meta info to disk .
Write metadata to disk .
Set a variable .
Evaluate a variable .
Evaluate a selection mask .
Returns a dictionary of the DataFrame .
Create a copy of this DataFrame .
Return a string representation of the DataFrame .
Convert to astropy . table . Table
Add a new column .
Renames a column
Add virtual columns to cartesian coordinates .
Add physical columns to cartesian .
Add physical columns to cartesian coordinates .
Add a rotation matrix to the current matrix .
Add virtual columns to cartesian .
Add virtual columns to the table .
Add a virtual column to the table .
Deletes virtual column
Add a new variable .
Deletes a variable
Return the last n elements of this array .
Prints the first n lines of the table and prints it .
catenate two dictionaries
Set the current row .
Trim the columns from the DataFrame to a new DataFrame .
Return a new DataFrame with columns removed .
Return a copy of the string .
Undo the current selection .
Move the selected item to the selected state .
Returns True if the current selection can be undone .
Selects a bounding box .
Selectively select a circle .
Create a new selection
Find a valid name .
Return a graphviz representation of the graph .
Add categories to the table .
Encode a column in the DataFrame .
Return a string representation of the data .
Length of the array
Helper function to stack two columns together .
Concatenate two DataFrames .
Add a column to the dataframe .
Patch a DataFrame to a DataFrame .
Fill missing values with value .
Return a string representation of an array .
Convert self into a recarray .
Write properties to the file descriptor .
Write comment to fileh .
Writes a property to the file .
Iterate over all newlines in a file - like object .
Print the versions of the current module .
Rename a name and a new value .
Set the fftlib library .
Run beat track .
Adjust the pitch and pitch of an audio file
Calculate Mel coefficients from a given frequency frequency .
Convert mel energies to a frequency frequency .
Return a list of FFT frequencies .
Apply the filter and frequency - Fourier Transform to a CQFT .
Trim a list of n_bins and n_bins
Compute the CQT response .
Calculate the number of times the frequency of the audio signal .
Encode the time - downsampling of the audio signal .
Generate a uniform transition matrix .
Sets the current image to plot .
Check if axes is a matplotlib plot object .
Helper function to scale axes .
Calculates the FFT frequency basis for a frequency domain .
Calculate mel frequency basis .
Calculate the frequency of a chord .
Calculate the chromosomes of each octave .
Generate a time - series of frames .
Apply time - stretch to a time series .
Compute beat - wise beat track .
Helper function to filter the neighbors of a network .
Calculate window width .
fill the window with window_sq
Calculate the Jaccard rank .
Find the best matching interval between intervals_to_to .
Match two intervals .
Load audio file .
Convert audio to mono .
Get all files in a directory
Stretch a fade in a wave .
Process command line arguments .
Compute the phonon transcription of an input file .
Compute the last beat track .
Calculate beat local score .
Calculate the beat track for each beat .
Returns the last beat for the given cumscore .
Calculate onset times .
Convert x to int .
Read from the vcap file .
Get a frame from the buffer .
Write image to file_dir .
Calculates the progress bar for each task .
Flip an image to an numpy array .
Rotate image .
Clip a bounding box of the given bounding boxes .
Scales a bounding box of bounding boxes .
Add padding to an image .
Pad image to multiple dimensions .
Scale the size of a shape .
Resize an image .
Resize an image .
Register a file handler .
Convert a priority value to a string .
Dequantize an array to a specified number of levels .
Display an image .
Dequantize a flow matrix .
Load checkpoint from file .
Convert a dictionary of weights to a CPU number .
Save a checkpoint .
Initialize optimizer .
Initialize the logger .
Returns a list of the current optimizer parameters .
Register a hook .
Run the pipeline .
Register training hooks .
Cut a video from a file .
Concatenate a list of videos into a single file .
Read a list of strings from a file .
Read a dictionary from a file .
3x3 convolution .
read image from file
Creates an ANTsImage from a byte string .
Write image to file .
Convert color image to grayscale .
Convert color to RGB .
Map inputs to dst_type .
Check if a sequence is of expected type .
Slice a list into a single list .
average the values of the history
Apply scatter on input devices .
Convert a color to a tuple .
Return the number of seconds since the given timer_id .
Starts the timer .
Returns the number of seconds since the process started .
Returns the elapsed time since the last check .
Display a flow showing the flow
Make a color wheel .
Compute the accuracy of the output .
Convert inputs to kwargs .
Fetch and return a response .
Return JSON as a string .
Return text as plain text .
Handle a request callback .
Perform multiple requests .
Perform an HTTP request .
Start the server .
Normalize ansible arguments to be passed to Ansible .
Return the name of the wheel distribution
Get the archive basename .
Add requirements to the metadata_path .
Create a text message .
Creates an activity message .
Create an attachment .
Create an attachment .
Create an attachment .
Setter for telemetry client .
Read one or more keys .
Write changes to the store .
Delete one or more keys .
Create a storeitem .
Create a dictionary from the given store item .
Sanitize a key .
Create db and container if it exists .
Get or create a database .
Get or create a container .
Create a Qna event for a Qna event .
Get a conversation reference for activity .
Returns the name of the step at the given index .
Returns true if the provided channel supports suggested actions .
Check if a card supports card actions .
Get the channel id of a turn .
Return True if the token is token from the emulator .
Create a hero card attachment .
Set control to classical register .
Creates a copy of the object .
Convert a QASTA instruction into a QASTA - formatted string .
Return the QASM instruction .
Run a circuit on a circuit .
Perform a single pass pass through pass_pass .
Returns a string with all the passes in the working_list .
Returns a dictionary with all passes passed in .
Returns a controller that can be used to instantiate the controller .
Creates a base base base - base quadratic model .
Get parameters for a single gate .
Return a single - gate matrix for a single gate .
Convert a circuit to a dag .
Function to fit exponential fit .
Function to compute the objective function of the OSC problem
Plot coherence .
shape rb data
Plots the errorbar of the given data .
Compose two uzyz components .
Convert yz coordinates to ZYZ .
Validate the quantum state of the quantum state .
Trim the portion of the image .
Returns the span of the gate .
Compute the coupling map for a given dag .
Create a new barrier .
Process a bit_id .
Processes a gate .
Process a CNOT expression .
Process a measure node .
Process if node .
Create a DAG op .
Get the duration of a channel .
Get the start time of a channel .
Return the stop time of a channel .
Generate a sequence of instructions for this schedule .
Dump additional data to a dict
Load additional data into a dict
Validate a model instance against the schema .
Return a dict representation of the model
Load a model from a dict
Calculate the Fourier Transform for a quadrature .
Takes an array and removes any non - zero elements from it .
Return the outer product of two vectors .
Calculate the concurrence of a state .
Compute the Shannon entropy of a state .
Calculate the mutual information of a state .
Compute the entropy of a state .
Compute the EOF qubit entropy .
Flatten a schedule into a schedule .
Shift a schedule by a given time .
Insert a schedule into a schedule .
Append a new schedule to parent .
Build a U3 gate .
Return the status of the backend
Start the simulation .
Return the remaining time in seconds .
Disassemble a QObject into a list of circuits .
Calculate hamming distance between two strings .
Create a quaternion from a rotation angle and axis .
Return quaternion from Euler angles .
Normalize the quaternion .
Return a matrix representation of the Compound .
Converts a Z operator to a ZZ operator .
This method is used to reduce the number of occurrences of the number of items to keep the most common
Ensure that the value is a collection type .
Check that the j is within the bounds of the index
Check if a matrix is a square matrix .
Check if matrix is a diagonal matrix .
Return True if op is symmetric .
Check if matrix is Hermitian matrix .
Check if a matrix is a semidefinite matrix .
Check if a matrix is an identity matrix .
Test if a matrix is a unitary matrix .
Convert the input data to a tuple .
Convert input to superop .
Convert data to a Kraus operator .
Convert a string representation of a string representation to achi operator .
Convert a string representation of the input data to a PPTM .
Convert a string representation of a Kraus operator to Stinespring .
Convert rep to operator .
Convert an operator to a tensor .
Convert a tensor to an operator .
Convert data to choi .
Reshuffle data to superop .
Convert a list of kraus indices to a tensor .
Convert a polynomial to a Kraus operator .
Convert stines to kraus .
Convert stines to choi .
Convert a list of Kraus stines into Stines .
Convert the Kraus matrix to the superoperator .
Translates the input data to QUI .
Translates data to Pauli notation .
Recursively reconstruct two tensors .
Transform data from Pauli algebra to Pauli notation .
Raise error if the input_dim is not the output_dim
Hide ticklines and labels and labels and labels .
Set the x and y label for the plot .
Clears the text and annotations .
Add vectors to the vector
Render the plot .
Plot the front .
Render the plot .
Get the top left corner of the layer .
The mid_content of the layer .
Get the string representation of the bot .
The length of the sentence .
Return a list of parameters for an instruction .
Return the label for a given box .
Return a string representation of this node .
Add deprecation warnings to the list .
Returns information about the current machine .
Return a connection to the given hostname and port .
Check the status of a job .
Return a constant for the given times .
Return the square of a square .
Return a triangle of a triangle .
Return the cosine of the given amplitude .
Gaussian derivative
Generate a gaussian with a square .
Create a pass manager for the pass manager .
Simulate the pass manager .
Returns True if the given register exists in the machine .
Return a copy of this CIR instance .
Return the inverse of the circuit .
Append an instruction to the instruction .
Raise an exception if the qubits are not duplicated .
Check that all qubits in qargs are valid .
Check that the cargs are valid .
Helper function to check that the registers are compatible .
Return the QR Code as a string .
Returns the number of gate operations .
Width of all registers
Returns a dictionary mapping op names to their sum .
Return a new circuit with new parameters removed .
Set the value of a parameter .
Map free gates to free gates .
Calculate the distance between layout gates .
Calculate the number of words that match the given step .
Copy metadata from source_dag into target dag .
Return a copy of the layout for the given layout .
Generate the swap gates from an edge .
Run the layout on the given dag .
Add a physical qubit to the graph .
Add an edge to the graph .
Return a subgraph of the coupling map .
A list of physical qubits .
Returns a bool indicating whether the network is connected .
Compute the distance matrix
Returns the distance between two components .
Creates a cu1 gate .
Inverse of the instruction .
Applies q_if to all gates .
Perform a c_if .
Subscribe to an event .
Call the given event .
Remove a callback from an event .
Publish an event .
Create a new register with the given parameters .
Define the circuit .
Create a circuit to uncompute the gates to be uncompute .
Calculate the bochastic angles for a complex pair .
Evaluate multiplexerxes .
Return True if value is virtual .
Returns a copy of this layout
Combine this layout into an edge map .
Add ctlx .
Insert a schedule into the schedule .
Checks if the given name is notenced .
Convert a list of gates into indices .
Run the transformation on a given dag .
Generate a set of Pauli operators .
Construct a boolean expression from label .
Initialize from a boolean array .
Return the multiplication of two Pauli operators .
Convert to operator
Convert this circuit into an instruction string .
Update self . _z .
Update x .
Appends a Pauli operator to the equation .
Deletes the specified indices from the Matrix .
Generate a random string .
Construct a Pauli operator for a single Pauli operator .
Get the measure outcome of a qubit .
Compute a sample measure .
Add a single qubit measure .
Add a qubit reset to the model .
Validate the initial statevector .
Initialize the initial state vector .
Return a copy of the statevector .
Validate and set the sample measurement .
Run a job .
Check that the memory is valid .
Validate the initial_unitary .
Initialize the unitary matrix .
Return unitary matrix .
Run a job .
Validate that this constraint is valid .
Return True if obj is a boolean .
Generate the property set for the given dag .
Return True if interval has overlap .
Shift the interval by a given number of times .
Shift the timeslot .
Returns the start time of the given channels .
Return the stop time of a channel .
Check if the given timeslots are merged .
Merge the timeslots into a single timeslots .
Shift the timeslot by a given amount .
Report to the issue .
Plot a state - paulive state .
Create a Rzz gate .
Swap two cache entries .
Create a program graph from a DAG .
Select the next program edge .
Private method to select the cost of the gate .
Select the best qubit for the given qubit .
Returns a list of instruction instructions .
Inverse of the gate .
Apply q_if to all gates .
Perform c_if .
Return True if the matrix is a unitary matrix .
The conjugate operator .
Returns a transpose of this dataset .
Return the result of the power operator .
Shape of the output dimensions .
Convert an Instruction to an operator .
Compute the swap mapper layer .
Separate bitstring into smaller pieces .
Format a list of memory .
Format a list of memory .
Return a string representation of the given memory .
Format counts as a dictionary .
Format a complex state vector into a complex complex vector .
Format a complex tensor in a complex form .
Submit the job to the scheduler .
Status of the job .
Return True if lo_freq is within the range of low frequency intervals .
Plots the bloch multoch .
Perform the decomposition of a dag .
Return the k - th k - > k
Compute the lex index of a list lst .
Returns a list of unique hardware backends .
Return the operation s value .
Generate a sample pulse .
Generate a zero - padded pulse .
Return a square pulse .
Generate a wavepulse .
Generate a sample pulse .
Generate a cosine pulse .
Generate a signed sin pulse .
Generate a samplepulse .
Compute the gradient of a Gaussian derivative .
Convert the tree to a string .
Get backend instance .
Removes all operations with the given opname .
Add a quantum register .
Add a classical register .
Add a wire to the graph .
Check that the condition satisfies the condition .
Return a list of all the bits in a condition .
Add an op node to the graph .
Apply an operation back to the graph .
Check the validity of the wire map .
Map condition in wire_map .
Extend the gate onto this gate .
Check that the wires have the same condition .
Creates a map from node to pred_map .
Return the full prediction map for the full pred_map .
Return a topological sort of the graph .
Get all edges from the network .
Get all nodes that match the given op .
Return a list of gate nodes .
Find all nodes that match the given names .
Return a list of two - quads .
Returns a list of all predecessors of a node .
Returns a list of predecessors of the given node .
Get all ancestors of a node .
Return a list of successors of a node .
Removes an op node from the graph .
Removes all ancestors of a node .
Removes all descendants of a node .
Removes all non - ancestor nodes of a node .
Removes all nodes that are not descendants of node .
Generate layers of the decomposition .
Return a list of multigraph layers .
Iterate over all nodes on a wire .
Count the number of operations in this graph .
Get a summary of this tensor .
Create a tomography basis from a basis set .
Perform Pauli - measure .
Generate the tomography data from the tomographic results .
Evaluate a list of operations on a basis set .
Compute the linear inverse of the given frequencies .
Calculate the eigenvector of an eigenvector .
Calculate the Wigner data .
Emit a gate .
Internal function that checks the status of the job and prints it .
Monitor the status of a job .
Simplify a u3 gate .
Add the required wires to the dag .
Build a tab for the job history .
Create a 3 - dimensional 3x3 matrix .
Build a Bell circuit .
Transpile the given circuit .
Return the drive in this bus .
Get the control channel .
Get the measure of this channel .
Return the active acquire channel .
Input state .
Unset the Qiskit log
Generate HTML for a state hinton state .
Handle input .
Pop the lexer from the stack .
Push the lexer to the stack .
Get the bound method for a given instruction .
Convert an acquire instruction into a QObject .
Convert frame change to QObject .
Convert persistent value to QObject .
Convert drive instruction to QObject .
Convert a snapshot to a QObject .
Update the annotations of a pulse .
Convert a DAG to a QuantumCircuit .
Convert a 1 - D matrix into a dictionary .
Update a symtab with obj .
Verify that a declared bit is a declared bit .
Verify all children of the exp list
Verify that the object is as a gate .
Verify that a register is valid for an object
Verify all registries in the object
Find the column in input .
Set the debug flag .
Parse the given data .
Parse the given data .
Parse QASM file .
Add a crz gate .
Create a basis state from a string .
Creates a density matrix for the given state .
Calculate the purity of a state .
Run the DAG .
Split the graph into a dag .
Get a single backend
Shape of the output shape .
Get the register name and maximum number of registers .
Truncate a float .
Return a LaTeX representation of the image .
Calculate the depth of the image .
Calculate the size of the Beamer page .
Load schema from file .
Load schemas and validators .
Generate a random unitary matrix .
Generate a NumPy matrix .
Randomly generate a random density matrix .
Randomly generate a random density matrix .
Returns a list of all call names .
Return the power of the Matrix .
Compose two subsystems .
Convert an Instruction to a superoperator .
Runs the DAG .
Compute the decomposition of a dag .
Define the gate .
Ensure that the value is a collection type .
Ensure the type of the container is valid .
Verify that the value is atol .
Set the limit of the parameter .
Reshape the dimension to output_dims .
A tuple containing the input dimensions .
Return a tuple of the output dimensions .
Return a copy of the model .
Return a new vector .
Return an automatic ordering for the given dimensions .
Deserialize a value into a string .
Ensure that the value is serialized .
Check that the value is a valid type .
Compute the SVD of a matrix .
Return a copy of the state .
The label of the message .
Return True if the matrix is unitary .
Convert to operator .
Convert this circuit to an instruction .
Initialize a transformer from data .
Monkey patch django . utils . utils . strptime
Check if given tokens are valid .
Split a string into a list of tokens .
Parse a date string and return the parsed time .
Returns True if the given date_string is valid .
Translates a date_string into a string .
Parses a date string and returns a tuple with the current date and period values .
Convert exception string to net number .
Convert exception to HTTP request number .
Compose the configuration of the phantom .
Get information about the stream .
Log stdout and stderr .
Expand a string into a time .
read config from config file
Reads the stepper info file
Writes the cached si cache to disk
Create a STPD file
Create a composite step
Returns the rps at t .
Execute a shell command .
Decodes the monitor data .
Create the points for the given label .
Publish a key - value pair .
Count the number of matched codes .
Stop the queue .
Feed stpd .
Add help options .
Configure the plugin .
Collect stats from the queue .
Notify listeners of received data and stats .
Find the UDP port on the server .
Terminate the process .
Reads data from lines of lines .
Create a criterion from a string .
Get the configuration from a XML file .
Create a config file for startup .
Execute checks on the disk .
Checks mem_limit for free memory
Returns the right line of the right line
Add info widget .
Return a tuple containing the width and spacing for each line .
Calculate the length of a given line .
Add an info widget .
Makes a request to the writer
Loads all registered plugins .
Get the plugin of a given type .
Returns a list of plugins of the given type .
Collects a file and copies it to the artifacts_dir .
Add an artifact file .
Create a temporary file .
Load configuration files .
Write configuration to file .
Returns a list of options from a section .
Find all sections that start with the given prefix .
Generate statistics for the chunk
Prepares the agent and artifacts .
Poll all agents .
Send the collected data to all listeners .
detect the configuration of the system
Private method to set the sign and numeric values
Subscribe to the polygon .
Start the hub .
Closes the connection .
Perform an HTTP request .
Submit a new order .
Get the position of a symbol
Get a list of assets .
Ensure a dict has a key and value .
Return a dict with the given key and value .
Create an event logger .
Creates a logger for json logging .
Load configuration from a config file .
Get a pipeline by name .
Collect all pipeline definitions .
Get next event from process .
Execute a pipeline through a queue and run it .
Block until all processes have been terminated .
Declare a dagster_type .
Build the pipeline .
Get the solid with the given name .
Construct publish commands .
Set the new version to the given version .
Block text with given prefix .
Download file from S3
Upload a file to S3 .
Raise a user code error with a user code error .
Create a new directory .
A context manager that creates a user code that executes a user code .
Create a context - free log file .
True if all steps have been completed .
Return True if step_skipped is skipped .
Return a dict of transformed values .
Return a string containing the failure data .
Return True if config value is a valid dataset .
Return True if config value is a valid table .
Coalesce an ExecutionPlan into a single ordered dictionary .
Get connection parameters from settings .
Get a connection to the database .
Create a cursor .
Closes connection to database .
Convert a model to a MDL string .
Convert a list of mdl objects to a MDL string .
Return a formfield for the model
Convert a value into a MDL instance .
Apply filters to a queryset .
Compute nfps for uniform distribution .
Compute the nfps real number for realizations .
Compute the optimal optimal partition for a given sizes .
Calculate the c1 and r2 .
Initialize the class based on the seed values .
Returns the number of bytes needed to store the hash value .
Merge the contents of another Hash .
Return the union of the given lists .
Query the index of the key with the given minhash and size .
Calculate the minimum hashvalue of an array .
Remove a value from the cache .
Count the number of nonzero values .
Merge two Registers .
Clear the register .
Calculate APK .
Compute the map k - means map between actual and predicted predictions .
Indexes the list of hashtables in descending order .
Return a list of keys matching minhash .
Close all of the instances of this instance .
Get user data .
Set the login to the auth process .
Select text from text .
Parses a scoped selector into a scope and selector .
Parse a single statement .
Parse the value from the parser .
Advance to the next line .
Parse a configurable reference .
Outputs the plugin configuration to the output directory .
Ensure that the given function is wrapped by the decorated function .
Format a string representation of a value .
Clears the system configuration .
Return True if the function has a parameter with the given name .
Get the argument specification of a function .
Get the positional parameter names of a function .
Parse a config file .
Parse a config value .
Recursively iterate over flattened values .
Iterate through all values in a configurable section .
Decorator to add constants from an enum .
Get all matches of the given partial_selector .
Return the selector of the given complete selector .
Transform a search query into a string .
Parse the retry_after value from the response header .
Validate a value .
Return a description as a string .
Validate and set the value .
Get a thing by idx
Initialize the object with the given things and hosts .
Sets the default headers for this response .
Prepare request headers .
Get the details of a thing .
Send a POST request to the server .
Remove an action from the Thing .
Start the service .
Return a dict representation of the Action .
Start the action .
Mark the task as finished .
Return the event as a dictionary .
Get the local IP address .
Returns a list of IPv4 addresses .
Set the value to the given value .
Emits an external update .
Return a string representation of the object .
Set the prefix for all properties .
Returns a dictionary of property descriptions .
Returns a list of descriptions of the given action .
Returns a list of descriptions of the specified event .
Adds a property to the document
Remove a property
Get the value of a property
Get all property names and values .
Set the value of a property in the schema .
Get action by name and id .
Add an event to the list .
Add a new event to the list of available events .
Perform an action on the server .
Remove an action .
Add an available action .
Remove a subscriber .
Add a subscriber to a given event .
Remove an event subscriber .
Notify subscribers of property
Notify about an action .
Notify about an event .
Annotate model fields .
Updates the model with the given fields .
Inserts a record into the model .
Insert a new model into the database .
Build a postgresql insert query .
Check if a field is a MagIC field .
Handle save signals .
Handle a model delete .
Resolves the value of the expression with the given arguments .
Return a string representation of this ParameterSet .
Return a new copy of this object with the given relabels .
Add join conditions to the table .
Checks if the field is a hstore field .
Creates the required constraint for a given field .
Private method to rename a table in a table .
Drops the required constraint for a given field .
Generate a constraint name for a field .
Create the sql for the index .
Get the base class from settings
Prepare the database for the database .
Prepare value for serialization .
Formats the return value for the query .
Return a list of SQL statements that can be inserted into this query .
Rewrite the insert if necessary .
Rewrite insert update statement into SQL .
Rewrite the insert with the given parameters .
Get model field by name .
Formats a field name .
Format the value of a field .
Creates a new table for the given field on the given model .
Rename a unique constraint on a table .
Drops the unique constraint for the given field .
Returns unique constraint name for a field .
Iterate over the unique keys of a field .
Add a double condition to the request .
Rewrite the query with extra conditions .
Calculate the tdist level of a dataframe .
Calculate the ratio of two samples .
Compute t - score of two samples .
Check if two sample values are significant .
Topological sort a tree .
Generate a sequence of queen_counts .
Pick a position from the board .
Choose a random play out .
Remove benchmarks from benchmarks .
Expand a benchmark name with a given name .
Initialize benchmarks .
Get the domain of the ellipse .
Fetch posts .
Parse raw posts from raw_posts .
Fetch information about a user .
Fetch a category entry .
Fetch items from the feed
Setup command argument parser .
Fetch a bug s bug entries .
Returns a list of Bugzilla bugs .
Fetch comments .
Get a list of bug ids .
Fetch a list of attachments
Get a list of merge requests .
Get a paginated list of merges .
Get the contents of a merge .
Get the versions of a merge .
Fetch a merge version .
Get a list of notes for a particular item and item .
Get emoji items .
Get emoji for a specific item .
Calculate the amount of time to reset .
Fetch the items from the repository
Fetch the rate limit
Setup command line arguments parser .
Fetch messages from a given date .
Extract the metadata id from a dict .
Returns the number of members of a conversation .
Get information about a given channel
Get user info
Setup the command argument parser .
Get the timestamp that was updated on the item .
Parse a CSV file into a list of dicts .
Parse the bug details .
Logout from the server .
Retrieve the metadata for the bug
Get a list of buglist objects
Search for bugs .
Get the activity of a bug .
Fetch events from a given date range .
Fetch events for a given category .
Fetch events from a group
Retrieve the comments for a event .
Retrieve the revents of a group .
a helper method for fetching a question
Fetch comments for a given question
Build a Question object
Fetch questions from API .
Get the HTML for a question
Get the comments for a post .
Parses a question into a dict
Parse the number of html pages in a question .
Parses user info .
Fetch reviews for a given category .
Parse reviews from raw data .
Fetches the gerrit 2822 and closes it .
Get version information .
Get the latest reviews for the last item .
Retrieve the next group item from the database .
Execute command from archive .
Execute a command on the remote server .
Setup the command argument parser .
Fetch data for given issue_id
Fetch all attachments for an issue .
Fetch all the messages for an issue .
Fetch activities for an issue .
Fetch user data
Returns a User object for the specified user_name .
Get information about an issue .
Get a collection of items for a particular issue .
Fetch a page from the API .
Get all subscriptions .
find the group id
Perform a GET request .
Setup command line argument parser .
Find all backends in the given package .
Fetch metadata from archive .
Remove classified_fields from item .
Parse arguments .
Set the arguments for the parser .
Set the arguments for the archive .
Add command line arguments to the parser .
Fetch data from the backend
Initialize the archive .
Get the timestamp of the metadata updated timestamp .
Parse a mbox file .
Fetch and parse all messages from a mailing list .
Copy a mbox to a temp file .
validate a message
Convert a phrase dictionary to a dictionary .
Get a message from the file .
Fetch commits from the repository .
Parse git log from a file .
Initialize the command - line arguments .
Setup command line argument parser .
Parse the stream and return a list of iterators .
Clone this instance .
Count the number of objects in the repository .
Return a boolean indicating whether the repository is detached .
Update the current working directory .
Fetch changes from the repository .
Returns a list of commits in the given packet .
Update a list of refs .
Find references in the repository .
Update a ref .
Execute a command on the remote repository .
Read lines from stderr .
Execute a command .
Fetch tweets for a given category .
Setup the command argument parser .
Fetch items for a category .
Fetch items from a given category .
Parse the hits and return the number of hits
Search for hits .
Get the timestamp of metadata updated on a item .
Determine the category of a item .
Fetch pull requests from the API .
Get repo info
Get all the reactions for a given issue comment .
Fetches the list of reviewers requested by pull number .
Get the hashes of the pull commit .
Get all pull review comment reactions .
Get a user from the server .
Fetch all transactions for an issue .
Get a paginated list of issues .
Get a list of pull requests .
Get the list of reviewers for a given PR number .
Get all commits for a given PR number .
Get the reactions for a review comment .
Get user by login .
Get a user s orgs .
Get the current rate limit .
Return a list of tokens with the rate limit .
Choose the best api token to use .
Checks if the rate limit is needed .
Fetch the current rate limit and update it .
Initialize metadata .
Store an archive in the archive .
Retrieve an archive .
Creates an archive .
Verify that the archive has the metadata .
Load metadata from the archive
Count the number of rows in a table .
Create an archive
Remove an archive
Searches for all archives that match the given criteria .
Search all files in the directory .
Generate months between two dates .
Remove illegal XML characters from raw XML .
Parse a raw JSON string into a list of Issue objects
Returns a list of issues for this pull request .
Fetch information about an issue
Get user info
Make a call to the API .
Fetch dockerhub data
Get a list of items .
Fetch the contents of a repository .
Removes custom fields from a dictionary .
Parse a raw page into a generator
Fetch issues from a given URL .
Get issues from a given date range .
Get comments for an issue .
Get the fields of the resource .
Fetch build items .
Get all the builds for a given job .
Parse a raw page into a generator
Get questions from the API .
Setup the command argument parser .
Fetch page reviews .
Get the max timestamp of a list of reviews
Internal method for fetching the content of the document .
Returns a list of all pages in the specified namespace .
Get recent pages of the given namespaces .
Parse the raw JSON string into a generator .
Return True if the message is in chats .
Retrieve updated updates .
Fetch articles for a given category .
Add metadata to an item .
Parse an article into a dictionary .
Helper method for fetching data from remote
Fetch an article from the server
Fetch data from remote server .
Fetch data from archive .
Create a HTTP session .
Setup the rate limit handler .
Sleep for rate limiting .
Update the rate limit from the response headers .
Parse supybot log file .
Retrieve a list of SupyBot archives from a given date .
Returns a list of all suybot archives .
Parse the incoming stream .
Fetch topics from a given category .
Parse the topics page .
Get information about a topic .
Get a post .
Fetch all tasks in the given category .
Parse raw json output from raw json .
Parse the raw JSON output of the user .
Returns a generator of all tasks in the repository .
This interface is used to get all transactions in a transaction .
Fetch a list of phab users .
Sets the Phab_phab_phids .
Make a call to the server
Extract the metadata id from a dict .
Parse the contents of a JSON summary summary .
Get the contents of the query .
Get historical content for a specific content .
Parse XML result .
Generate a capabilities URL .
Read an XML document .
Read an XML string from a string .
Parse nspv results .
Build the URL for the given path .
Construct a schema from a list of elements .
Generate the URL for a descriptor type .
Execute complex input with reference
Gets the movie list .
Fetches information about a TV .
Fetches information for a specific Id .
Gets the alternative titles .
Gets the credits for a device .
Gets the external Ids .
Gets the keywords from the API .
Gets the recommendations for a specific device .
Fetch a release dates .
Gets the releases of a project .
Gets the translations of a specific Id .
Gets a list of similar movies .
Gets the reviews for the specified Id .
Retrieves the next upcoming appointment .
Gets the currently playing track .
Gets the popular topics .
Retrieves a top - rated top - rated top - rated top - level list .
Gets the account states of the API .
Get a rating for a user .
Gets the movie credits .
Gets the tv credits for a particular Id .
Gets a specific API resource .
Fetches a list of attachments .
Fetches information about this session .
Gets a movie list .
Retrieve a new token from the API .
Gets a token validating the login credentials .
Get a new session
Initialize a new guest session .
Gets a list of movies .
Gets a single item status .
Create a list .
Removes an item from the server .
Clears a session .
Gets the contentratings for the given Id .
Fetches a similar Response .
Retrieves a dictionary of attributes .
Fetches information of a specific series .
Gets the credits for a season .
Gets the external ids of a series .
Fetches information of a specific season .
Gets the credits for a season .
Gets the external ids of a series .
Set the attributes to the object
Retrieve a collection from the API .
Gets a company company .
Gets a keyword from the API .
Retrieve multiple attributes from the API .
Normalize a string .
Take a list of refs and return a tuple of n - grams .
Return a tuple of n - grams for a ref .
Calculate the Erfcc correlation coefficient .
aligns two lists of strings
Get all descriptors in a module .
Register a JSON descriptor from a JSON string .
Register a descriptor .
Print string s to stdout .
Checks if the given descriptor is a subclass of type .
Convert the object to a dictionary .
The coordinate of the current context .
Calculate atomic solar system s radians .
The surface area of the surface .
Convert a molecule into a VD object .
Deserialize this object into a mordreduc descriptor .
Return a copy of self with missing values .
Return a copy of the molecule with only the values removed .
Return a dictionary of key - value pairs .
Return a dict representation of the object .
The name of the value .
Print a progress message .
Prints a message to stdout .
Fail with an exception .
Get a temporary file .
Set tempfile to target
Delete all temporary temp files .
Return the absolute path to the path
Returns a list of legal parameters for a method .
Merge parameters of a given method into the kwargs
Add command line options to parser .
Terminate all pending tasks .
Add a task to the queue .
Wait for all the workers to complete .
Count the number of processed tasks .
Get s3 keys from environment variables .
Get S3 keys from command line options .
Get s3 keys from s3cfg path
Initialize s3 keys
Connect to S3
Similar to os . walk but returns a list of paths .
Expand the given source to a list of strings .
Upload a single file to the pool .
Put a list of files into a single file .
Create a bucket in S3 .
Updates the privilege of the object
Print the contents of the given source to stdout .
Download a single file from the pool .
Get a list of files from source to target
Copy a single file to the pool .
Copy files from source to target
Delete all the files in a source
Return a list of relative paths to a given directory .
Recursively copy files from source to target .
Compute the MD5 hash of a file .
Return md5 hash of the file .
Ensure that the target directory exists .
Check if a string is in the local key cache .
Return True if path matches filter_path .
Walks an s3 url and returns the result
Check whether obj is modified or not .
Get the privilege of a file .
Look up an object by its path .
Read a chunk of file at pos .
Verify that the object is the correct size .
Writes a chunk of data to a file .
Run the command .
validate if format is valid
Executor for globus ls
Create a new bucket .
Suts multiple files to S3 .
Get a file handler .
Handler for cat_files .
Handler for dsync requests .
Copies source files to S3
Copy files from S3 to S3
Handler for delete_files
File size bytes .
Message the total size of the bucket .
Match date .
Match time .
Match delta value .
Ensure that value is a dict .
Get data from hub .
Push the given data to the listeners .
Generate a ciphertext key .
Handle exceptions raised by the given exception .
Ensure a log handler exists .
Get the request object .
Report a message .
create a logger for the agent
Build a person s person data .
Add lambda context data to the data dict .
Add request data to data dict
Checks if the given frame should be added .
Builds a dictionary of data for a request .
Build server data .
Build a payload from a dictionary .
Run the reactor .
compose chosung and jongodb
Decomposes a Hangul_letter into a string .
Checks if the given letter is a Hangul character .
Attach a word to a word .
Check if a node is inside an exception .
Checks if the given node is inside a lambda function .
Get all the elements of a node .
Return a tuple containing a tuple of variable name and an exception .
Check if the given node is a super class .
Check if the given node is an error .
Check if the given node is a function decorator .
Checks if the given node is an ancestor of the given node .
Find the parent of a node .
Recursively iterate over strings in a format string .
Get an argument from a call node .
Return True if node is a standard exception module .
Check if a function is decorated with a property decorator .
Return True if func is decorated with the decorated function .
Find a tryexcept wrapper .
Check if a node is from a fallback block .
Return a list of exception handlers for the given exception .
Return whether the given node should be ignored .
Checks if the given node is abstract .
Infer a node .
Return the type of a node .
Returns True if the given node is postponed .
Return a list of qualified names for a module .
Get the absolute name of an import node .
Return a string representation of the tree .
Create a dependency graph
Visit an import node .
Check that an import from a module is valid .
Check if node is valid .
records an import node
Check if a relative import is valid .
Add a module to the import graph .
Check if a module is deprecated .
Check that the preferred module is in the list of preferred modules .
Writes external dependencies to the section .
Return a filtered list of imports .
Get the default options .
Insert default options into sys . argv .
Returns whether the given attribute is visible .
Get the callbacks for a node .
Visit a node .
Checks the consistency of the messages in the list .
Check function call .
Check if a datetime is a valid datetime .
Check if an open mode is valid .
Handle a message .
Get the title for a given node
Set the default values for this config .
Return whether or not the given node should be shown .
Add a class to the class diagram .
Get the ancestors of a given node .
Get nodes that are connected to a given class .
Extracts all classes from a klass diagram .
Leave the current project .
Handle import from node .
Get classdiagram from klass .
Return a list of diagram objects .
Returns True if the given owner is not in the given classes .
Return a list of names that are similar to the given attribute .
Emits a no member .
Check if a node has a parent of type .
Return True if name is used as a variable .
Check if a variable is not a context variable .
Check if function is valid .
Check that the function is callable .
Handle unaryop operator .
Return an iterator over the interfaces of the given node .
Create a project from a list of files .
Visit a package and generate a UUID .
Set a function definition .
Handle assignnames .
Handle assignattr types .
Visit an import node .
Visit an import from a module .
Compute the module number .
Imports a module and adds its dependencies .
Register the reporter to the linter .
Handle a message .
Writes a message to the console .
Write an open graph .
Write an edge .
Processes a non - raw string .
Write a layout .
Insert the contents of an evaluation section .
Print a table with default values .
Add a renamed message .
Register all messages from a checker .
Registers a message .
Check if the given symbol exists in the given symbol .
Raise an InvalidMessageError if the two symbols have the same name .
Raise an InvalidMessageError if the messageid is not in the same message .
Initialize the builder .
Return the number of CPUs on the system .
Report the number of messages in the report
Context manager to temporarily fix the import path .
Load plugins from a list of modules .
Loads configuration of dynamic plugins
Set an option .
Register a checker .
Enable or disable the ports on the configuration .
Get checkers .
Get a list of checker names .
Prepare checkers .
Expand the given modules into a list of modules .
Set the current module s current status .
Run a module checker .
Report the evaluation results .
Handle a help message .
Print full documentation .
List available messages .
Print the number of checker groups .
Normalize text to a given line length .
Get the module and frame ID for a given node .
Safely decode a line of text .
Return True if base_name is in blacklisted file .
Register all plugins in the given directory .
Comment the given string .
Format an option value .
Format a section as an INI file .
Format a list of options into a file - like object .
Insert a child at the given index .
Add child to this node .
Return all parents of this node .
Format a given layout .
Get the string content of a table .
Compute the content of the given layout .
Collects the block lines from the given module node .
Handle an ignored message .
Register a report .
Add stats to the instance .
Get the name of a setters property .
Returns the setters property of a class or None .
Return True if returns is something else False .
Return a list of exception types .
Processes a module and adds it to the log file .
Check for encoding of a module .
Processes the comments .
Return True if the given name is a from future import .
Return True if statement is in for for or else branch .
Return the overridden method of a class .
Get extra info for a node .
Return True if the name_node is local
Mark a node as consumed .
Checks if a node has a homonym in the upper function scope .
Check that the given node is unpackable .
Checks metaclasses for class definitions .
Recursively get all packages in a directory .
Execute the install .
Create a table of similar stats .
Run a program .
Append a stream to the lineset .
Compute the similarities between two lines .
Display the number of lines in the list
Find the common part of two sets .
Iterate over all similarities in the network .
Iterate over the stripped lines .
Create a dict mapping line number to line numbers .
Check equality of two nodes .
Return True if two overrides have different parameters .
Safe infer_call result .
Mark the given node as accessed .
Check class definition .
Check if the mro is consistent .
Checks that the given node is valid .
Leave a function definition .
Check that a node is in slots .
Visit a name node .
Return True if node is a mandatory method parameter .
Check if the body is a raise .
Check if the given node has an exception .
Display the report .
Check if the given node is a typing namedtuple .
Check if the given node is an enum class .
Check if the given node is a dataclass .
Check if class definition is valid .
Emit a comment on a class definition .
Visit an if node .
Check that the condition is too long .
Check the docstring for the docstring .
Return a string representation of the given template string .
Checks if the given node is an actual elif .
Checks if a node is simplifiable .
Check if a node is inside a generator .
Check if exception is inherited from stopiteration .
Check for nested blocks .
Return a dict containing all of the instances of the call .
Ensure that the isinstance is not in a str .
Check if the given node is a ternary .
Checks that the return value is consistent with explicit return values .
Check if graphviz is available .
Print project information .
Write package packages .
Emits the class attribute of the given diagram .
Set the printer for this object .
Set the printer for the graph .
Return True if version information can be emitted .
Return a formatted help string .
Get environment variables .
Get a list of cycles in the graph .
Generate the graph and write it to a file .
Formats a section into a stream .
Disable a message .
Enable a message .
Get a message identifier for a message .
Check if a message is enabled for a given message .
Add a message .
Get the length of the indentation .
Return a string with indentation .
Get indentation level .
Handle line start .
Return a tuple of valid indentations .
Return the hanging indentation after the bracket .
Return an indentation for a bracket .
Push a token at position .
Starts a new line .
Check if the token is a valid type annotation .
Check that the whitespace is equal .
Check if token is in self . token .
Visit a default statement .
Check if a multi - statement line is a multi - statement .
Check indent level .
Return whether the given node is in an iterator .
Check if a node is a conditional import statement .
Visit a name .
Check if a substring is valid .
Visit an attribute .
Check for raise value .
Find a pylintrc file .
Validate a value .
Register an option provider .
Set provider option .
Set an option to a value .
Generate a config file .
Load the configuration from the config file .
Load command line options .
Add a help section .
Return a formatted help string .
Load the default values for all options
Get the string attribute of an option .
Get the value of an option from the parser .
Return a tuple of options and their values .
Return True if func is a method call .
Check if the given node is a complex format string .
Initialize a module .
Visit an import from module .
Visit the import module .
Check format_string for format_string .
Return True if a node is in a loop .
Get the parent break node from a break_node .
Check if the given loop exists in the given loop .
Return list of property names and names of builtin properties .
Determine the type of a function .
Create a report on the given stats .
Check if a call is exactly one argument .
Check if a starred node is assigned .
Check if the function is abstract .
Check if a node is on loop .
Check if a node is in a loop .
Open the linter .
Check if an expression is valid .
Check if the test fails .
Check that a dict has a valid key .
Check that the given node is not in the final body .
Check that the reversed node is backward .
Check docstring for docstring .
Check the comparison of a literal node .
Add a subgraph to the graph .
Parse a subgraph .
Visit a module and add its complexity .
Walks the given ASTroid and calls the visit function .
Add a relationship between two objects .
Get a relationship from_object .
Get the attributes of a given node .
Add an object to the diagram .
Get class names from a list of nodes .
List of class definitions .
Get a class by name
Returns a list of module names .
Get a module by name .
Get a module by name and name .
Add a dependency from a module to a module .
Deletes the cache
Query the model s query
Get user .
Get a single token from the database .
Set the token for the given user .
Set a grant on the client .
Get a client by code .
Prepare a request .
Initialize the extension for the given app .
Add a remote app to the registry .
Authorize the user using the given callback .
Handle an OAuth1 response .
Handle OAuth 2 access token .
Handle an authorization response .
Hash a token .
Create a client for the given token .
Create a client for the given token .
Context manager to temporarily remove the insecure transport .
Confirm an authorization request .
Get the client secret from a request .
Get the secret for a request token .
Get the access token for the request .
Get the realms from the request .
Get the redirect URI from the request token .
Get rsa_key from request .
Validate client key .
Validate request token .
Validate access token .
Verify that the timestamp is not valid .
Validate the redirect_uri parameter .
Validate realm .
Validate a verifier .
Verify the request token .
Verify that the realm is valid .
Confirm an authorization request .
Authenticate a client .
Authenticate a client .
Get scopes .
Confirms scopes against a refresh token .
Get the default redirect URI for a client .
Get default scopes for a client .
Invalidate authorization code for a client .
Save an authorization code .
Save a bearer token .
Validate a bearer token .
Validate client id .
Validate a code grant .
Validate grant type and user .
Validate a refresh token .
Validate the response type .
Validate scopes .
Validate a user .
Revoke a refresh token .
Update request data .
Recursively convert keys to strings
Changes the authorization header of the headers .
Register this OAuth to a given OAuth .
Create a new OAuth application .
Extract the parameters from the request object .
Convert text to bytes .
Decode a base64 - encoded string .
Create a response object .
Get cached clients for the current state
Add a remote app .
Add a remote application .
Check if the certificate already exists .
Make sure all iterations are valid .
Check if the private key is loaded .
Check if the private key is incorrect .
Check if the private key is wrong .
Verify that the code has been revoked .
Check that all certificates are revoked .
Create a X509 certificate request .
Create a certificate
Load a certificate from a certificate chain .
Use a certificate file to use a certificate .
Use the current context to use a certificate .
Add an extra chain certificate to the current context .
Use a private key to use a private key file .
Use the private key to use a private key .
Load the client certificates from a file .
Sets the verify depth .
Load a temporary dh file .
Set cipher list .
Set the certificate list for the current client .
Add a certificate authority to the current context .
Sets the profiles used for the TLS connection .
Set the connection callback for the network .
Set the alpn protocol protos .
Set the callback for alpn_select .
Setup OCSP callback .
Set SSL context .
Get the server name .
Set the host name of the connection .
Receive data from socket .
Read bytes from the socket .
Tries to renegotiate the connection .
Shut down the socket .
Get a list of cipher names .
Get a list of all certificates .
Set SSL shutdown .
Get a random string .
Get a random client .
Get the master key .
Export a key to a key .
Get a new SSL session .
Get the current cipher name .
Get the current cipher bits .
Get current cipher version .
Get the protocol version number .
Get the next negotiated proto message .
Set the alpn protocols for the connection .
Get the negotiated ALPN protocol .
Convert a bio object to a string .
Set the boundary of an ASN time .
Convert a timestamp to an ASN time .
Get an elliptic curve by name
Dump a public key .
Load a public key from a buffer .
Create a signature for a message .
Verify signature of data .
Dump a CRL to a file .
Return a cryptography key .
Check if this key is valid .
Return a set of Curve objects .
Load the elliptic curves from libcloud .
Convert this curve to EC key .
Return the certificate name .
Returns a list of name and value pairs .
Get the short name of the certificate
Get the data for this certificate .
Convert this certificate to cryptography .
Set the public key for this certificate .
Return a public key .
Return the name of the subject as a string .
Add one or more extensions to a certificate .
Return a list of all certificate extensions .
Verify that the certificate is valid .
Convert the certificate to cryptography .
Set the version of the certificate .
Return a public key .
Set the public key for the x509 certificate .
Sign a message using the X509 algorithm .
Get the certificate digest from the certificate .
Set the serial number of the certificate .
Get the serial number of the certificate .
Returns the time since the last time after the given amount .
Returns the time modified since epoch before the given amount .
Returns True if the condition has expired .
Get the issuer name .
Sets the issuer name .
Get the certificate name .
Sets the name of the certificate .
Add one or more extensions to the x509 cert .
Return the x509extension object for the given index .
Add a certificate to the store .
Add a crl to the store .
Set the time of the certificate .
Initialize the certificate store .
Return an x509 error message .
Verify the certificate .
Set the serial number from a hex string .
Get the serial number of the certificate .
Set the reason for this certificate .
Returns a string containing the reason of this certificate .
Set the date of the revocation date .
Return a cryptography certificate revocation list .
Get the list of revoked certificates .
Return the x509 issuer .
Sign a digest using the given digest .
Exports a certificate and a PEM file .
Get the type name of the object .
Set the certificate s caert certificates .
Sign a message with a private key .
Verify that the given key is valid .
Encode and return a base64 encoded string .
Get a public key .
Set the public key of the packet .
Raise an exception from an error queue .
Get metadata for service .
Iterate over all issues
Return a list of annotations for the given card .
Get all board boards
Get a list of lists from a board .
Get a list of cards from a list .
Get comments .
Construct and return the API URL .
Generic getter method .
Convert a link field into a dictionary .
Fetch issues from the server .
Get pull requests for a given tag
Aggregate the issues in the given configuration file .
Get a value from the main section .
Return whether this issue should be included .
Make a table from a list of lists
Run an oracle command .
Retrieve an integer from a section .
Pull all issues from the daemon .
Get data from url
Get a collection from the API .
Parse a sprint string and return a tuple of the fields and a list of strings .
Get credentials from the application .
Corrects the finite difference between p - values .
Compute z - score along given axis .
Adjust the spines for the axes .
Creates an argument parser with the given arguments .
Adds a parser for the enriched enrichmentr
Calculate the p - value of the gaussian distribution .
Returns a pandas DataFrame containing all the names and descriptions of the names and descriptions .
Returns a pandas dataframe of all available datasets
Returns a DataFrame of the attributes of the dataset .
Returns a pandas dataframe of all filters in the dataset .
Set the number of cores to use .
Loads gene_list from a gmt file .
Get available libraries .
Download a set of enriched genes .
Compute heatmat matrix
Load data from a csv file .
Run permutation on a DataFrame .
save the results to a file
Parse enriched gene sets .
Send gene_list to url
Get the number of genes in a user list
Generate a cube .
Generate an IICosphere filter .
Draws a cube of wires .
Get color values .
check if var is a list
Turn a variable into a list .
write a filter XML file
Merge a VEX filter into a XML file .
Split a vertex on a nonmanifold face .
Translates a vertex to a string
Rotate a script .
Scale a vector .
define a coeff function for a cylinder
Wrap a SVG script to a cylinder .
Transform a curve to a curve .
Convert a VCXML script to a LaTeX file .
Export a mesh script to a FCF file .
Run voronoi on a script .
Writes all the filter to a file .
Write a vertex filter to a SVG file .
Draw a cylindrical vertex .
Draw a spherical vertex
Rename a filter .
writes a filter to a file
Duplicate a filter .
Delete lower layer .
Create a new XML file and save it to disk .
Adds a layer to the current layer .
Save filters to file .
Write a filter filter to a script .
Measure the filter script .
Parse hausffs log file .
Naively divide two vectors .
Calculate the cross product of two vectors .
Multiply two scalar values .
Writes a depth filter to a file
Sort polylines in a file .
Measure the average geometry of a filter .
Lower case - insensitive version of filename .
The configuration configuration of this instance .
Returns the URL to a file .
Returns a filename for the given filename .
Return True if the given extension is allowed
Resolves a conflict with a given basename .
Get the VProf version from a file .
Remove duplicate objects from a list .
Get the difference between two objects .
Formats the object count and returns a sorted list of objects
Trace memory usage .
Return a list of code events that match the source code .
Amount of the overhead of the object .
Compute the amount of memory over the current process .
Profiling the package .
Profiling the module .
Profile the function in memory .
Runs the pipeline .
Get a set of module names in a package .
Run a function in multiprocessing .
Determine the type of a run object .
Initialize the module with the given profile module .
Initialize the package .
Initialize the function .
Replace sys . argv with sys . argv
Sample the given signal .
Inserts a new sample into the given stack .
Recursively fill sample count .
Recursively format the tree for debugging .
Build a call tree from the stats .
Return a dict containing the package information .
Profile the module .
Return a profile of the function .
Transform a profiler stats into a human readable form .
Profile the package .
Profile the module .
Profile the function .
Show the guestsbook .
Add an entry to the database .
Start a web server .
Handle the root page .
Handle static files .
Do a GET request .
Do a POST request
Send a response .
Check if module_path is in standard directory .
Add a line to the log file .
Return a list of lines without stdlib .
Calculate the heatmap .
Recursively skip lines with skip_map .
Return a dictionary containing the code of the package .
Formats a heatmap file and returns it as a dictionary .
Profile the module .
Profiling function execution .
Run profiler on a run object .
Run a profiler on a given function .
Predict_proba of x .
Predict the log probability of x .
Fit the model to data .
Compute the count of documents in analyzed_docs .
Sort the features in the vocabulary .
Limit the features to the given vocabulary .
Fit the model to the vocabulary .
Transform a numpy array to a str .
Convert standard scaler to a Scikit standard scaler .
Helper function to fit the model .
Perform a prediction on the class .
Fit the regression to z .
Fit the model to z .
Fit the model with the given parameters .
Calculate the score of the step .
Compute the score of an estimator .
Fit clustering to data .
Predict on an array of values .
Predict the class of x .
Check the dtype of an RDD .
Fit the model to an SVD .
Apply the transformation to the SparseSeries .
A generator that iterates over an iterator of blocks .
Yield tuples from an iterable iterator .
Convert an RDD of data into an RDD .
Apply a function to each RDD .
Return the shape of the RDD .
Convert the RDD to a numpy array .
Return the bit perm of the stat .
Return True if path is only root write .
Read config file and print it .
Read config from file .
Runs a command as a command .
Execute a command in a subprocess .
Execute a command over SSH .
Validate the config data .
Get the headers of the response .
Returns the URL for the configuration .
Get the URL for the event .
Formats the given Packet .
Print discovery information .
Scan for devices .
Execute this command .
Send confirmation message .
Executed when a device is pushed .
Execute a device .
Run the scan loop .
Find ledger file .
Install compatibility .
Load the textmeasurer from a json file .
Generate supported characters .
Encode characters in a sequence of encodings .
Returns a mapping between characters to the given length .
Write a measurer to a json file .
Convolve a 2D image to a 2D image .
Returns the Gaussian kernel
Convert an image to grayscale .
Parse arguments and compare them to the console .
Calculate the SSimImage value of this image .
Compute the ssim value between two images .
Destroys the container .
Set the version of the device .
Get the status of the document .
Print the status of the service .
Return the node that is connected to the given connection .
Bind the transport to the device if it is already open .
Called when a new connection is received .
Internal helper .
Return True if the node should connect to this node .
Connect a single node if necessary .
Called when a connection is received .
Handle a message received from the device .
Called when a connection is disconnected .
Add a node to the network .
Remove a node from the pool .
Send a message to the specified node .
Add an item to the queue .
Put an item into the heap .
Get a string from the heap .
Acquire a lock .
Returns True if the lock is acquired .
Release a lock .
Set the host for the given hosts .
Create indexes .
Migrate aggregate indexes to new version
Remove metadata from a report .
Saves aggregate_reports to kafka
Extract XML data from a file object
Parse an aggregate report file .
Writes parsed report into CSV file .
Parse an aggregate report file .
Get IMAP capabilities .
Save the assertions to Splunk .
Decode a base64 - encoded string .
Get the reverse name of an IP address .
Convert human timestamp to datetime .
Get information about an IP address
Convert an email message to an eml file .
Convert a string to a list .
Parse a report file .
Periodically drain the connection .
Publish a message .
Publish a message to the broker .
Publish a message to the server .
Subscribe to a subject .
Unsubscribe from the specified socket .
Send ping .
Select the next server .
Called when an error occurs .
Handle an op error .
Build the connection command .
Process a ping .
Processes a message received from the server .
Parse information from a dict of servers .
Flush pending messages .
Read data from the server .
Load features from a numpy array .
Load features from images .
Calculate the Pearson correlation coefficient for each image .
Compute dot product of image images .
Select a subset of features .
Returns a list of feature names in a dataset .
Train the classifier with the given classifier .
Fit the classifier .
Set the class weight for the classifier .
Perform cross validation .
Fit the classifier to a dataset
Get random n_voxels from dataset .
Returns a list of top words .
Pearson correlation function
Calculate the frequency of a linear function .
Load activations from a csv file .
Create an image table
Get feature names .
Returns a dictionary containing feature counts for each feature .
Load dataset from file .
Save the feature to a file .
Returns the names of the columns in the dataframe
Search for features that match a given search string .
Get ids matching expression .
Convert DataFrame to CSR
Transform a matrix to a matrix .
Convert a list of indices to a matrix .
Apply function to foci .
Get mask of layers .
Loads images from a masker file .
Save a nifti image .
Set the logging level .
Parse a string representing an address .
Convert a dict to an object .
Get price for a ticker .
Get a list of bulk news from the server .
Perform a HTTP request .
Get bearer info .
Perform an HTTP request .
Get a track s tracks .
Get information about a particular spotify_id .
Get a list of artist s albums .
Get the top tracks for a particular spotifier .
Get a list of artist related to a spotify_id .
Retrieve a list of artists belonging to a particular spotify_ids .
Get a category .
Returns a list of playlists .
Returns a list of categories .
Returns a list of featured playlists .
Returns a list of releases that match the given criteria .
Issues a request to retrieve the listing of the artists that match the given ids .
Get a list of albums .
Get all albums .
Get the total number of albums in this artist .
Get current context and track .
Get the current player .
Get list of available devices .
Returns a list of recently played tracks .
Replace one or more tracks .
Create a playlist .
Get a list of playlists .
Get a list of tracks .
Get all tracks .
Get the URL to redirect to .
Get an album .
Get a specific artist .
Get a track .
Get a specific user .
Get a list of albums .
Get a list of artists .
Convert a string to an OpenID identifier .
Create a Client instance from a HTTP client .
Construct a URL for a OAuth2 URL .
Return dict representation of this client .
Returns a string representation of the parameters .
Build a list of tracks .
Get all tracks .
Transfer a device to the user .
Create a new instance from a resource .
Returns the object as a dict
Convert the month to a string representation .
Recursively updates the URLs in the current working directory .
Return True if version is greater than version .
Returns true if the current branch is a development version
Return True if version is deprecation .
Save the current configuration to a JSON file .
Recursively restore the backup content
Check if line is to ignore .
Return a list of strings that match the given options .
Extract a base from a URL .
Formats the given string to a list of strings .
Attempt to access the resource .
Get access token .
Check if domain is valid .
Check if a given domain is a subdomain
Check if an IPv4 address is valid .
Check if a string is a valid IPv4 range
Check URL syntax .
Load the current configuration .
Prints a pretty message to stdout .
Download a file from a URL .
Set entry management url if not already downloaded .
Print header .
Process file based on current status .
Print the domain information .
Print URL .
Print logo .
Formats the domain if it is a valid domain .
Extract a domain from a file .
Takes a list of file names and formats it as a list
Get the URL for a file
Get the expiration date .
Handle the status code .
Get the structure from file
Creates a directory if necessary .
Delete all uneded files .
Set configuration and default configuration filename .
Download the production config .
Download the iana configuration .
Download the PSL configuration .
Download directory structure and write it to disk
Merge configuration values from pyfunceble into one .
load config from file
Split the version number into two digits .
Return a boolean indicating whether the version is newer than upstream .
Returns True if the file is a clone of the current directory .
Handles non - empty strings .
Returns the output directory of the domain .
Create a unified file from the metadata .
Output status file .
Returns True if the domain should not be produced .
Extracts the list of public_suffix entries from a line .
Load JSON from file .
Return a standard string representation of element .
Load the iana database .
Return the referer for a given request .
Extract URLs and referer from the URL .
Update the database .
Get the contents of the response
Retrieve a dictionary from disk
Backup json file
add the elements to the list
Remove all elements from the list
Get a list of strings that are installed on the system .
Processes the mining process .
Get content of a file .
Write content to json file
Write a record to disk .
Update the extraction date of the extracted file .
Called when a URL has been found or not .
Write header to file .
Construct a header string from data_to_print .
Construct an ordered dict of data
Extract size from header .
Colorify data .
Serialize data to JSON
Return formatted data .
Calculate the difference between two strings .
Format the execution time .
Return a list of files to delete .
Returns a list of databases to delete .
Deletes all databases in the database
Hash the contents of the file .
Return a hash of the data .
Get a hash representation of the data .
Execute the command .
Remove a key from main dictionary
rename a key in a dictionary
merge two dictionaries into a single dictionary
Writes the dict to a JSON file .
Writes the Dict to a yaml file .
Return a normalized version of path .
Write data to file .
read file contents
Return a string representation of the main list
Merge two dictionaries into a single list .
Return a list of strings that match the regex .
Return a string representation of the regex .
Replace all occurences of this regex .
Count the number of times the status of the item .
Calculate the percentage .
Check if url is valid .
Check if the given domain is valid .
Check if this token is a valid subdomain .
Get the status of the service
Reformat the historical formating error
Retrieve data from the database .
Backup the inactive database .
Return timestamp .
Return a list of strings
Checks if the string is present in the configuration file
Retrieves the Authorization header from the user .
Backup the authorization database .
Checks if user is in database
Returns True if the user is older than the database .
Get the expiration date of this token .
Check docker permissions for travis .
Execute travis permissions .
Attempt to lookup the names of the network interfaces .
Connect to the whois server .
Get the status of the url
Return a string representation of the domain .
Get the current object .
Return a list of standard paths .
Return a list of standard package names .
Yield line number of unused import messages .
Yield the module name and line number .
Yield line numbers from messages .
Yield undefined name and module name .
Yield line number of unused variable messages .
Iterate over the duplicate key line numbers in a message .
Run pyflakes check on a source .
Extract the package name from the line .
Implements multiline import .
Return True if line is multiline statement .
Remove unused imports from a module .
Split a line into a single line .
Get a dictionary of messages by line number .
Remove undefined import names from a string .
Remove duplicate key from line numbers .
Check if a dictionary entry contains a key .
Return whether value is a literal or not .
Generator yielding line numbers for each pass .
Remove useless line numbers from source .
Return a string with indentation .
Get the line ending with whitespace .
Remove unnecessary code from source .
Split a string into a set of whitespace .
Return True if filename is a valid Python file .
Return True if filename is in exclude list
Read lease response payload .
Write the lease information to a file stream .
Write this message to a file - like object .
Read a CancelResponse payload .
Create a new name .
Read the digest from the file .
Write this digest to a stream .
Read application information from a file .
Write the application data to a stream .
Create an instance of a specific application .
Reads the derivation from a file .
Write the state to a file .
Read a GET request from the input stream .
Write this object to a file stream .
Read a Response object from the input stream .
Write this object to a file stream .
Write the SignatureData to a file stream .
Read signature data from a file .
Build an error response .
Process a template attribute .
Returns a list of attributes that are applicable to the specified attributes .
Sets attributes on the specified object .
Sets the attribute on the specified object .
Returns True if the object is allowed to perform an operation .
Write the decrypt request to a file stream .
Create a new private key .
Set a setting .
Load settings from a file .
Create a bitmask from a value .
Return a list of security masks .
Read a long integer value from a file - like object .
Write this long integer to a file - like object stream .
Check that the field is valid .
Read a big integer from a file - like object .
Write the big integer to a file - like object stream .
Check that the value is valid .
Check that the field is valid .
Read a value from a file - like object .
Write the value to a stream .
Write bool to a boolean stream .
Check that the value is valid .
Read interval from file .
Check that the interval is valid .
Validates that the key is valid .
Check that the object is valid .
Check that the field is valid .
Convert an attribute name to a tag .
Convert an attribute tag to its name .
Return a bit mask from an enumeration of enumerations .
Return a list of enumerations that match the given bitmask .
Check if an enumeration is a bitmask .
Write this template to a file .
Read Keypair response .
Write the keypair response to a file .
Read the attributes from the input buffer .
Write the attachment to the output buffer .
Write this attribute to a file .
Get all json files in a directory .
Run the main loop .
Get a certificate from a connection .
Returns the extended key usage from the certificate
Returns a list of common names for a certificate .
Returns the client identity for a certificate .
Read a CreateRequest object from input buffer .
Write this IP to a buffer
Read a MIME response payload .
Write this object to a file - like object .
Convert a PyPI key object to a string .
Read encrypted message payload .
Writes the data to a file .
Returns True if the given attribute is supported .
Check if the attribute is deprecated .
Returns True if attribute applies to the given object type .
Returns True if the attribute is multi - instance per instance .
Read CheckResponse .
Write this CheckResponse to a file stream .
Read the attribute reference .
Write this attribute to a file .
Read attributes from a file .
Write attributes to a file stream .
Read a Nonce .
Write the nonce to a file .
Read username password .
Write the username and password to a file - like object .
Writes the object to a file stream .
Read a credential from a file .
Write this credential to a file - like object .
Read MACSignatureKey information .
Write MACSignatureKeyInformation to a file stream .
Writes the message to a file .
Read a keywrap specification from a file .
Write this KeyWrapper to a file - like object .
Read extension information from a file .
Write the extension information to a stream .
Read revocationreason code from a file .
Write revocation code to a stream .
Check that the revocation code is valid .
Read an object from a buffer .
Write this object to a file - like object .
Write the network to a file .
Read profile information .
Write this profile information to a file .
Write the capabilities to a file .
Stop the connection .
Writes the data to a file .
Read LocationResponse payload .
Write the LocationResponse to a file .
Create a RSA private key from bytes .
Read SignResponse payload from input stream .
Write the signature payload to a file stream .
Read usageallocation request .
Convert a protocol version number to kmip version .
Read ProtocolVersion from a file .
Write this ProtocolVersion to a file - like object .
Read credentials from a file .
Write credentials to a file .
Read Poll Request .
Read certificate information from file .
Write this certificate to a stream .
Reads an archive response .
Write the archive to a file - like object .
Run the handshake .
Read REKEY response .
Returns True if conformance is supported .
Get attributes for a group .
Get a list of attributes .
Perform a query .
Open the proxy connection .
Close the proxy .
Register a managed object .
Get attributes of a device .
Activate a device .
Build cryptographic parameters .
Build an encryption key object .
Parses the macsignature key .
Build a keywrap specification from a value .
Build a list of common attributes .
Build a name attribute .
Read a query request .
Write the data to the output buffer .
Read attributes from the buffer .
Write attributes to a buffer .
Get a single entrypoint .
Get all group names that have a given group .
Return a list of all installed entrypoints for a group .
Load object from self . module_name
Parse an entry point .
Generate a controller file .
Rewrite one file to another .
Check if URL is valid .
Encode a string as a string .
Deserialize a string into a python object .
Return the absolute URL for the given endpoint .
Signs a user in the session .
Returns the current user
Create a Flask application .
Write a DataFrame to a CSV file .
Load data from a CSV file .
Serialize a DataFrame to a writer .
Deserialize a DataFrame into a DataFrame .
The URL of the contents of the file .
Opens the intermediate dataset contents .
Reads the intermediate dataset contents as a binary string .
Reads the intermediate dataset contents as text .
Convert to a pandas dataframe .
Get the intermediate dataset for a node .
Get all experiments in a workspace .
Get all the datasets in a workspace .
Fetch a dataset
Return a set of all globals in code .
Returns a copy of the pen .
Look up a color from a string .
Draw the image .
Compute the cubic Bernstein - Bernstein extension .
Compute the cubic Bernstein Bernstein .
Build a list of choices .
Initialize cache .
Empty the cache
Get the value of a cache entry .
Update an entry in the cache .
Set an entry in the cache .
Initialize the cache .
Resolves an i18n tree alias .
Returns True if the current app is admin .
Calculate the depth of a tree item .
Get the current tree current item .
Returns the URL for the given sitetree item .
Return a sitetree and sitetree .
Get the attribute of the current page .
Get the level of the current item .
Check if the item has access to the item .
Return a string representation of a sitetree .
Render the children of a given item .
Return the children of a given item .
Updates the has_children for the given tree item .
Filter items based on the navigation_type .
Get the ancestor of a tree item .
Merges a tree into a tree
Resolve a variable .
Return a sitetree .
Return the children of the given token .
Return a breadcrumb node for a template .
Render the given tree items and return the rendered content .
Create a Template for a tag .
Returns a URL name for a given model nfo .
Registers the tree admin .
Handle redirects .
Redirect to the request .
Redirect to the add_url method .
Redirect to Django s response object .
Return the form for the treeitem choice .
Get the tree for the given item_id and item_id .
Moves the item to the given direction
Saves the current model to the tree .
Returns the URL for the admin .
Dump model view to JSON .
Imports a sitetree module .
Get model class from settings entry .
Create a Config object from a mapping .
Load a Python module from a Python file .
Parse a TOML file .
Create a string from an object .
Create http headers for a new span .
Returns a tuple containing the current context attributes .
Starts the Span .
Stop tracing .
Update extra annotations .
Add a binary annotation to the client .
Override the span name of the logging context .
Returns a copy of the endpoint with the new_service_name .
Create a v1 span for this v1 .
Encode a list of spans .
Converts a Span to a protobuf Span .
Convert hex ID to bytes
Get a protobuf kind for a given kind .
Convert an endpoint to a zipkin endpoint .
Convert annotations to zipkin annotations .
Create an annotation .
Create a binary annotation .
Create a zipkin endpoint .
Returns a copy of the endpoint with the new name .
Build a list of annotations .
Build a list of binary annotations .
Create a new span .
Converts a Thrift Span to bytes .
Converts a list of binary objects to a byte string .
Detect the encoding of a message .
Convert spans to spans .
Push the given zipkin attributes to the current thread .
Encode a v2 span into a V2 span .
Create a JSON Endpoint object from an endpoint
Encode a span into a protobuf .
Decodes a list of spans .
Convert a ThriftEndpoint instance to a endpoint .
Decode a list of Thrift annotations into a dict .
Converts a list of binary annotations into a tuple of tuples .
Converts a Thrift Span to a protobuf Span .
Convert trace_id to string .
Convert an unsigned long integer to lower - case .
Writes a long integer to the specified buffer .
Fixes the number of days to use when the month is bigger than the month .
Set transaction code .
Sets the iph_id for the given tag .
Set the TNR for a given Tag .
Join a string into a single line .
Reads the response from the HTTP response .
Log the number of seconds until the given duration .
Get bot info .
Get a list of bots .
Read all data from the packet .
Write a message to the output file .
Decode a string .
Encode a term .
Add a source to the multicast network .
Send any pending messages to the queue .
Register a callback that will be called when the response is received .
Stop the server .
Clear local libals .
Returns a list of servers that match the specified criteria .
Create a message for an OAP message
Discovers the given loglevel .
Returns the tagged item manager .
Return a list of all child relations of a given model .
Return a list of all child m2m relations of a model .
Save the model instance to the database .
Make sure all fields are unique
Return a boolean indicating if the data has changed .
Return a string with valid checksum .
Generate the address checksum .
Prompt user for a seed
Get a key from the database .
Get the key for the given address .
Create a new keyiterator .
Creates a kerlonge .
Abit the given number of bytes .
Squeeze the given length .
Transform the state machine to a new state .
Adds two strings to the right .
Given an integer n return a list of trits .
Add two triples .
Return the carry of the given string with the given carry .
Print a seed to stdout .
Returns a list of transactions matching the given bundles .
Promote a transaction .
Resolve a URI from a URI .
Send a request .
Log a message to the logger .
Send an HTTP request .
Interpret a HTTP response .
Add a digest to theonge .
Get the address of the multisig address .
Generate a generator that yields pairs of addresses .
Convert a digest to an Address object .
Generate an address from the key iterator .
Find multiple transaction objects .
Iterate over all of the addresses used by this adapter
Returns a list of bundle bundles from the given transaction hashes .
Check if trytas codec exists .
Get codec info .
Encode input into binary type .
Decode a byte string .
Returns a list of addresses matching the given seed .
Add a command to the blueprint .
Construct a Transaction object from a string .
Return a dict representation of the object .
Return a string representation of the transaction .
Set the is_confirmed property of all transactions .
Get all the messages in this group .
Returns a list of all transactions in the transaction .
Recursively find commands in a given package .
Execute a request .
Apply filter to value .
Returns the URL for the given job_id .
List of validator errors .
Returns a boolean indicating whether the value is valid .
Create a validationator for the bundle .
Return a list of errors that match the bundle signatures .
Validate a group signature .
Traverse a bundle and return a list of transactions .
Start the interactive REPL .
Generate random string .
Calculate the digest for each key .
Sign the input transaction .
Pretty print the object .
Bulk absorb num_bytes .
Add a context to an exception .
Get security level .
Increment the legacy tag number .
Get the tag of all transactions .
Add a transaction to this transaction .
Finalize the bundle .
Signs the inputs with the given key generator .
Create a list of input transactions .
Convert value to standard unit .
Decompress a G1 byte .
Return the prime number of a prime field .
Create a new instance from a json file .
Split a description into individual parts .
Returns a list of all categories in the object .
Generate a random colour .
Instantiate a TimeScale instance from a given name .
Create a decorator from an image .
Returns a CSV representation of the table .
Returns the maximum width of the table .
Get a decorator .
Returns a string representation of the plot
Run a rock component .
Process a single row .
Parses canstrat text into a dictionary .
Returns a list of unique IVs in this Assembly .
Compute intervals from top to top .
Clean data from longitudinal data .
Load a FrequencySeries from a PETREL file .
Load intervals from a file .
Return a string representation of the list .
Write the list to a CSV file .
Writes the section to LaTeX .
Find all overlaps that overlap .
Find all gaps in the sequence .
Prune a string removing any excess characters .
Return annealing strip .
Fill gaps with a component .
Return the union of the values in self .
Compute the intersection of two intervals .
Merge overlapping segments .
Invert the list to str .
Crop the list to the specified extent .
Run the quality of the dataset .
Return a value for a field .
Returns a list of all running jobs .
Parses a HCL request and returns the parsed JSON response .
Update a token .
Returns a list of all available allocations .
Fail a deployment .
Pause a deployment .
Enables the drain of a node .
Determines the drain of a node .
Get information about a node .
Returns a list of files in the server .
Stream the contents of a file .
Get a file s metadata .
Use this method to join an agent .
Update one or more servers .
Force leave a node
Returns a list of all nodes in the network .
Returns a list of evaluations .
Returns a list of namespace namespaces .
Register a job .
Get information about a job .
Dispatch a job .
Revert a job to a given version .
Change the status of a job .
De - register a job .
Get the configuration of the appliance .
Delete a peer .
Returns a list of deployments .
Get a random string from obj_type .
Get a mutator .
Get a random polyglot attack .
Convert a byte string into a unicode string .
Returns a custom html file
Serve fuzzed requests .
Spawn a subprocess .
Get the output of the process .
Start the read process .
Terminate the process .
Start the worker .
Execute the given object and return the string .
Build random string .
Build fuzzed string .
Build the query string .
Build random variates .
Build an Optiongram .
Build the ref definition .
Build a star .
Shutdown the process .
Runs the daemon and waits for it to terminate .
Start the process monitor .
Return random float .
Returns a fuzzed fuzzed string .
Return fuzzed version of json .
Signal handler for SIGTERM .
Quit the server .
Pause the process .
Resume paused command .
Stop the process .
Handles the restarting command
Returns a list of skypeevents .
Set user mood .
Set avatar .
Get the metadata of a URL
get contact by id
get user by id
Get a list of bots .
Get a bot by id
Search for user by name .
Returns a list of requests
Create a string from raw data .
Merge another dict into this one .
Merge another object into the cache
Read a token from the token file .
Write token to file .
Verify that the token is valid .
Refresh access token
Get userid .
Get the token from the provider
get all endpoints
Check if user is allowed
Authenticate with the server .
Configure the message to send to the client
Ping the device .
Get recent chats .
Get info about a chat
Create a member
Extract a user ID from a URL .
Extract the Chattoid from a URL .
convert unicode to unicode
Try to detect handler format .
Parses the given text and returns its content .
Return a dict representation of the metadata .
Load YAML data from file .
Export metadata to YAML
Export metadata to JSON .
Return a full match .
Return a list of items .
Return a list of sublists .
Change the start and end of the match .
Return a list of all arguments that match the expression .
Returns a list of all wikilist lists in the arguments .
Turn a list of strings into a trie .
Generate a pattern from a dictionary .
Check the index of a key .
Insert string at index .
Partition a single character .
Get the subspans of a given type .
Shrink the update spans .
Update the span with the given index .
Return the number of nesting levels .
Return the shadow of this span .
Extract the extended link shadow from the text .
Return a mapping of type to spans .
Return a string with deprecation warning .
Returns a list of all subspanned by this parameter .
Return a list of parser functions .
Return a list of template strings for this span .
Return a list of all wikilinks in the text .
Return a list of all comment lines .
Return a list of external links .
A list of strings representing the table .
Return an iterator over the spans of the given type .
Return a list of all ancestors of the node .
Return the parent of the given type .
Return the mode of a list .
Return the first argument that matches the given name .
Remove the first argument from the arguments list .
Get an argument by its name .
Return True if the command has the given name and value .
Deletes the argument with the given name .
Convert CRSC code to string .
Find an object by name .
Create a CRS object from a URL .
Parse geojson file .
Convert EPSG code to a CRS object
Convert ESRI code to CRS object
Return a CRS object
Return a CRIX object from an unknown string .
Write the record to a file - like object .
Read data from a stream .
Parse geotiff keys from a vlr list .
Parses a geotiff file and returns a list of geotiff keys .
Return signedness for extra dimensions .
Get extra dimension id for an extra dimension type .
Create a new record from another point record .
Copies the fields from another record to self .
Append zeros to the array if necessary .
The names of all dims in this array .
Construct a zeros array
Create a new Point object from a stream .
Creates a Point object from a compressed compressed buffer .
X - axis scaling .
String representing the y - axis .
The z - axis of the z - axis .
Add extra dimensions to the data .
Write the points to a file .
Write file to filename .
Build a dictionary mapping point format to dtypes .
Build numpy dtypes for point formats .
Convert numpy dtype to point format
Returns the point format for a point format .
Return True if point format is compatible with file format .
Extracts a list of VLRrs that match the given type .
Read a list of VLR objects from a data stream .
Check if files have the same point format .
Return True if las files have the same dtype .
Check if the file signature matches the expected file signature .
Read header .
Reads the vlr list from the stream .
Reads points data from the vlrs .
Read compressed points data .
Reads a waveform packet from the stream .
Read evlrs .
Checks if the expected position is not at the end of the stream .
Create a las data record from header .
Merge multiple las files into one .
Write a las object to a file .
The date of the object .
Set the creation date of the object .
A list of strings representing the minimum and maximum values .
Set min and max values .
A list of tuples representing the maximum and maximum values .
Set max values .
The scales of the x - axis .
A list of tuples representing the origin and z - axis offsets .
Reads the file version from the stream .
Convert a header from old_version to a new header .
Unpack a byte array into a numpy array .
Return a list of dimensions that are not in point format .
Returns a dictionary of all sub - fields in this dimension .
Number of bytes in extra_dims .
Returns True if all dimensions have a waveform .
Main function for demo .
Calculate the checksum of a given command .
Print a hex message to stdout .
Verify and clean checksum .
Return a list of int indices of the set bit numbers .
Generate a query string .
Example demo .
Connect to the server .
Start monitoring .
Disarm the given code .
Clear alarm code .
Set code to output .
Keep the connection to the server .
Monitor the status of the device .
Close the connection .
Purge the current user from the database .
Guess the type of the given path .
Get file_id for given entity .
Download a notebook file .
Create a notebook model from a database record .
Get a directory from the database
Convert a list of file records into a notebook model .
Convert database record to a directory model .
Create a file model from a record .
Save a notebook model to disk .
Save a file to the database .
Rename a file
Delete a file or directory
Ensure user exists in database .
Remove all files from a user .
Create a directory for a user .
Return True if the table is in a directory .
Delete a directory with the given user_id .
Check if a directory exists .
Return a list of files in a given directory .
Return a list of directories in a directory .
Generate a list of files matching a user id .
Select files from a user .
Return a list of fields for the file .
Get a file from the database
Retrieve a file from the API .
Get file_id from database
Check if a file exists in the database
Rename a directory .
Save a file in the database .
Remove all remote checkpoints from a user .
Reencrypt row with decrypt_func .
Reencrypt user content .
Derives a single FernetKey from a password and user id .
Get the name of a column .
Convert a list of fields to a dict with the same content .
Convert row to dict with decrypt_func .
Create a remote notebook checkpoint .
Create a remote file checkpoint .
Delete a checkpoint .
Get the content of a checkpoint .
Returns a list of all checkpoint points in the remote database .
Rename remote checkpoint .
Delete all checkpoints from the remote .
Remove all checkpoints from the database .
Resolve a URL path and return it .
Recursively apply a prefix to the model .
Called when a manager has changed .
Get a file or directory .
Normalizes an API path .
Split an API file path into a tuple of the path and the name of the file .
Convert a Python object to a base64 - encoded string .
Read a base64 - encoded file into a string .
Attempt to decode a file from a base64 - encoded file .
Decode a base64 - encoded binary file .
Return a list of all directories in a path .
Create a user in Postgres .
Separate the dirs and files in models .
Recursively walk through a directory tree .
Recursively walk all files in a directory .
Recursively walk through all files in a directory .
Reencrypt a single user .
Unencrypt all users in the specified engine
Unencrypt a single user .
Context manager to create an alembic file in a temporary directory .
Upgrade an alembic database .
Sanitize a block of data to be serialized
Queues an instance of the given embed type .
Load the instances for the given embed_type .
Insert an instance into the given dictionary
Loads all the instances of the embed type .
a helper method for validating data
The admin view .
Returns a JSON string representation of the model .
Hide fields that are logged in .
Remove fields from the request .
Get a version of the request .
Return a queryset of publishable items .
Returns a queryset of the publishable queryset .
Return a string representation of the Nullboolean field .
Validate a Widget .
Validate a zone .
Return True if id is a valid UUID .
Returns user permissions
Modify user permissions .
Validate author .
Validate and save zone data .
Returns a dictionary with all the data
Prepare data for serialization .
Render the template .
Get the settings for this model .
Callback method for callback .
Get the integration settings .
Update the integration settings .
Signup a signup form .
Maptag the contents of a list of strings .
Render a zone .
Save the featured_image .
Save the subsection of the article .
Return the extension of the image .
Returns the URL for the media .
Save image .
Save a thumbnail of an image .
Get the mysql connection to use .
Get a bandwidth limiting stream .
Read data from the file .
Consume an amt request .
Process a scheduled consumption .
Calculate the annualized rate based on the amount of time .
Record the consumption rate for a given amount of time .
Wait for a transfer to complete .
Returns a list of callbacks for a given transfer .
Get a subset of keys from a whitelisted_keys .
Decrement the cache .
Finalize the queue .
Check if a file is a special file .
Acquire a lock for a given tag .
Release a lock .
Adjust the current chunk size .
Queues a task to write data to the file .
Return the appropriate download manager class for the given transfer .
Write data to file .
Request a list of writes to the heap .
Check if a file object is seekable .
Shutdown the server .
Cancel all outstanding transfer .
Wait for all tracked transfers to complete .
Open the given bytes .
Return the uploader class for this transfer .
Set the exception to be raised .
Set the result of the Future .
Set the exception of the future .
Wait for the future to complete .
Cancel the current operation .
Submit a task to this transfer .
Register a function to be called when the future completes .
Add a failure cleanup function .
Called when the server is done .
Upload a file to S3 .
Download a file from a bucket .
Get the step arguments from a function call .
Refactor a step .
Extracts a step argument from a function call .
Refactor a step .
Updates a membership .
Delete a membership .
Get the catfact information
Post a webhook message
Delete a membership
Validate base url .
Return True if the string is a valid URL .
Open a local file and return a decodable object .
Check if o is of acceptable types .
Create a dict from a list of dictionaries .
Check the response code against the expected response code .
Convert json string to dict .
Return datetime in UTC format .
Create a new team .
Updates a room .
Deletes a room .
Fetches a list of Requests .
Datetime created date .
Get access token from environment variables .
Updates a webhook .
Delete a webhook .
Sets the wait_on_rate_limit parameter .
Updates request headers .
Return the absolute URL of a given URL .
Perform a GET request .
Get all pages from a URL .
Perform a PUT request .
Make a DELETE request .
Create a JWT .
Delete a message
Retrieve a person
Deletes a person
Fetch the current user object .
Get a list of items from the API .
Creates a new CloudFormation Object .
Updates a team .
Deletes a team .
Serialize a data structure into a tuple .
Returns the last activity in seconds .
Post a webhook message .
Get NROK public URL
Delete all webhooks with the given name
Create a new webhook
Entry point for the webextek server .
Read all telegram messages from the serial port .
Read all telegram data from the given queue .
Create dsmr protocol
Creates a connection to DSM reader .
Create a TCP connection to a DSM server .
Called when data is received .
Called when the connection is lost .
Handle a telegram .
Parse the telegram data .
Get a version from a file .
Ensure that the given specs are valid Python versions .
Find all packages in the directory .
Run a shell command .
Get data files from data specs .
Get package data .
Compile a regular expression .
Iterate through a path .
Translate glob patterns into a string .
Join a list of translated parts .
Translates a glob pattern into a list of strings .
Truncate a table .
Write table to database .
Write indexes to a table
Write all triggers in a table .
Write constraints to table .
Writes the contents of a table into the file - like object .
Write the index to the file .
Write the constraints to the file .
Write the triggers to the file .
Return the number of queued items in the queue .
Enqueue data into the queue
Start the task queue .
Build an extra predicate for the given extra predicate .
JSON serializer for datetime objects .
Reconnect to the database .
Execute a query and return the first row .
Get a connection to the database
Run the benchmark .
Connect to the pool .
Look up the error code by code number .
Returns the number of queues in this pool .
Handle a connection failure .
Build a simple expression from fields .
Generate UPDATE statement
Connect to the database
Destroy all tables in the database .
Start a step .
Stop a step .
Load raw steps from raw_steps .
Disconnect from the server .
Perform a reconnection .
Connect to the server .
Handle a WebSocket message .
Stop timers .
Send Ping message .
Check if pong is received .
Send data to websocket
Unpause playback .
Handle a system event .
Handle an error handler .
Called when data is received .
Resubscribe from bitfinex .
Handle an authentication event .
Handle configuration errors
Updates the timestamps for a channel .
Reset the connection .
Get a list of candles .
Configure bitfinex configuration .
Subscribe to ticker .
Unsubscribe from ticker .
Subscribe to an order book .
Unsubscribe from an order book .
Subscribe to the raw order book .
Unsubscribe from raw order book .
Subscribe to a trade .
Unsubscribe from a symbol pair .
Subscribe to candles .
Unsubscribe from candles .
Authenticate the channel .
Cancel an order .
Handle a command .
Send a command to the device .
Handle notification from client .
Create a device
Update device information
Get a list of client status .
Get a list of identities .
Create a new dataset
Update a schema
Disconnect from the server .
Called when a connection is received .
Handle unrecognized messages .
Called when a client is received from a client .
Handle a status message .
Handle a status message .
Get last event
Get all events
Make a call to the API
Initiate a new mgmt request .
Get the status of a request .
Close the underlying file .
Get the bounds of the array .
Load data bytearray .
Raise an exception if the return value is not valid .
Load application .
Serve the gunicorn server .
Convert value to native value .
Crop the given image with the given format and save it to disk .
Processes the given image and returns the thumbnail .
Processes the given image and returns it .
Open and open the given image field .
Process the placeholder image if it exists .
Override django s save method .
Updates the ppoi field if it exists .
Override django s default form field .
Convert value to string .
Auto - discover django . django . utils . django . utils . utils
Unregister a sizedizer .
Unregisters a filter .
Return the URL for a placeholder image .
Build filters and sizes for this field .
Returns the root folder of the filter .
Returns the root folder of the container .
Returns the path to the cleaned root folder
Deletes all files matching the given regex .
Preprocess a GIF .
Preprocess JPEG .
Retrieve an image from the filesystem .
Save an image to disk .
Return a string representation of the PPOI .
Creates resized image .
Render a template .
Returns the context for rendering a clearbox widget .
Build a dictionary of attributes .
Returns the resized filename .
Returns the path to a file with the filename_key_key and the filename_key .
Validate the size of a volatile image field .
Get the url from an image key .
Get a rendition key set .
Format an instruction .
Format a function body .
Decodes a bytecode into bytecode .
Decodes a module into a sequence of fragments .
Connect to RabbitMQ .
Read the result from the agent .
Parse an agi result line .
Return a parsed response from an AGI code .
Reset all instances to the default generator .
Returns a list of instances for this container .
Get metadata for a given path
Get the primary keys of a model .
Deserialize a value into an object .
Get an existing instance from a query .
Add declared fields to schema .
Load data from data .
Split kwargs into kwargs for the model .
Lists all currently active snapshots .
Restore a previously created snapshot
Sets indexes to the beginning of the epoch .
Clean textacy .
Apply a function to each data in a list .
Processes the given text .
Processes text in parallel .
Compute statistics about the document length .
Returns a pandas DataFrame with the frequency of each word in the corpus .
Map param_type to string type .
Parse interface definitions into a dictionary .
The inverse of the object .
Update the item with rollback .
Creates a copy of the matrix .
Return a copy of the graph .
Return True if all items in self are equal .
Return an iterable over the values of the given argument .
Clears the list of FSM files .
Move focus to the given key .
Write text to a temporary file .
Merge args into a config .
Load address books .
Creates a new contact .
Execute the birthdays command
Search for a phone number matching the given search terms .
Executor for globus list subcommand
Execute a modify command .
Prompt user for remove subcommand .
Execute a source subcommand on the selected vCard .
Executor for globus merge subcommands
Returns the action associated with the given alias .
Creates a new contact object .
Create a GSSHID instance from a file .
Create a Contact object from a string .
Create a new Contact instance from an existing contact .
Return a list of names for a variable .
Add a list of categories to the vCard .
Parse a string value for a given type .
Turn a list into a string .
Attempt to convert a string to a datetime object .
Compute the sum of two UIDs .
Searches for all contacts that match a regular expression .
Searches for all contacts in the contact list
Searches for uid from contacts
Returns a list of objects matching the query .
Get a dictionary of short uids for each contact .
Get the short UID for a given UUID .
Find all vCard files in the vCard .
Load all vCard files .
Get the name of a registered hook .
Return a dictionary of available architectures .
Return a list of available architectures .
Guess the type of the given kwargs .
Replace query parameters with new values .
Get the first item in the collection .
Delete all records from the query .
Emulate redis .
Estimate the amount of time from a Lua script .
Count the number of records matching the given filters .
Return a connection to an object
Convert a value to a list of strings .
Add an object to the session .
Get the value of a keypair .
Write a write key .
Save changes to the object
Deletes the object .
Retrieve a model instance by its identifier .
Open a sem_open file handle .
Send back result back to the result queue .
Add a pending call item to the queue .
Ensure the executor is running .
Start the process .
Duplicate a file descriptor .
Wait for the job to complete .
Prepare process data .
close file descriptors
Recursively terminate process with psutil .
Recursively terminate a process .
Wait for the exit codes to terminate .
Format a list of exit codes .
Ensure process is running .
Print an event processor .
Split a string into a list of arguments .
Get a stack of frames from f and t .
Runs the given hooks in the given object .
Clear the traceback .
Returns an integer or None depending on the arg .
Process commands .
Add a startfile to the queue
Get the next token from start_pos .
Print an error message .
Read a command line .
Close the internal state .
Disassemble a message from a byte string .
Count the number of frames in a frame .
Get the call function name for a given frame .
Return a string representation of the stack trace .
Look up a subcommand by its prefix .
Handle short help .
Add a subcommand callback .
Run a subcommand .
Show the given category .
Run the MCLIFN command .
Find a debugged frame .
Convert arg to int .
get_onoff function
Set an integer in the debugger .
Run show_off on setting .
Show the integer value of an object .
Show the value of a setting .
Check if a line is a def statement .
Check if the given line is a class definition .
quit the thread
Determine whether or not the background should be used .
Check if a color is dark .
Return the signature of a frame .
Return a list of all available display names .
Return a string representation of a given frame .
Read a message from the inout .
Print debug information .
Runs one or more debug frame .
Pretty print a list of values .
Look up a signal by number .
Look up a signal by name .
Convert a number to a valid sign name .
Set the replacement for a signal .
Check and adjust the sign and adjust the signals accordingly .
print info about signal
Handle action .
Set the print method to be called on SIGTERM .
Dispatch the given signal .
get module name from filename
Search for a file in a list of directories .
Attempt to locate a file in the current directory .
Return a list of python files in the given callername .
Write a message to the output .
Run the process .
Format a list of commands .
Close connection to server .
Write a message to the server .
Complete an identifier .
run a command on the process
Add one or more frames to the ignore filter .
Checks if the given filename is in the correct directory .
Return the filename or None if filename is not None .
Returns True if tracer is started .
Check if a given frame is stopped .
Set the next frame .
Returns a string representation of the stack trace .
Deletes a breakpoint
Delete a breakpoint by number .
Enables all breakpoints
Enable a breakpoint by its number .
Delete all breakpoints by filename and line number .
Open the input file .
Read a line from the input stream .
Prompt the user for confirmation .
Return a future that will be executed as a string .
Attempt to logout the user from the login .
Load a module .
Get a list of documents .
Transcode a JSON file into a temporary file .
Normalize data in a stream .
Convert date_format to float .
Detect the encoding of a file .
Yields lines from a JSON file .
Transcode text to a temporary file .
Open a CSV file and return it as a dictionary .
Read CSV data from reader .
Entry point for the script .
Save a token to a JSON file .
Perform a request .
Perform a DELETE request .
Return the root url of a URL .
Get a token from the server
Perform a JSON request .
Perform a POST request .
Retrieve the documentation for this client .
Get the raw text of the specified path .
Print result as CSV .
Read parameters from json file .
Return a simplified version of a doc .
Create a project with a list of documents .
Creates a Project from a JSON file .
Upload a stream to luminosoclient .
Upload a file to the server .
Entry point for the date_format function .
Creates a client from a user credentials .
Login to the API .
Login to the page .
Fetch data from self . _data .
Load the view if it exists .
Initialize the view .
Render a GET request .
Called when a new message is received .
Updates the list of menus based on the link .
Create a list of urls for each page .
Called when a DOM message is received .
Handle a DOM modification .
Create the widget for this element
Initialize the widget
Remove the widget from the cache
Add a child to the component
Remove the child from the component
Returns a list of all child widgets .
Set the attribute of the widget .
Update proxy .
Notify user about a modification .
Returns a list of declarations that match the given query .
Initializes the widget for this component
Set HTML source to HTML .
Called when a change is received .
Handle a block change .
Update the children of the block
Read the contents of a file .
Write an error message to stderr .
Print parse error and exit .
Get product by name
Get a new session .
Reset the cookie store .
Get all stores .
Set a delivery system for a given store .
Get a menu .
Add item to basket
Add a pizza item to the basket .
Add a personal item to the basket
Remove an item from the basket
Set payment method for payment .
Post payment process
Perform a GET request .
Perform a POST request .
Make a call to the API
Append an item to the menu .
Add an exit item .
Draw the menu .
Handle user input .
Select the currently selected item .
Parses the menu and returns a new menu .
Convert a string column to a datetime .
Convert datetime to strftime .
Apply a mathematical operation to a dataframe .
Compute cumulative sum of a column .
Removes old entries from a cachedir .
Add a timedelta to a date object .
Get optimization updates .
Returns training parameters .
Update optimization parameters .
Compute the first Glimpse sensor using Gaussian .
Prepare the layer .
Compute the Tensor cost .
Apply a function to each dataset .
Convert the target set to vectorize .
Prints a summary of the validation set .
Train the model on the network .
Sample from the input sequence .
Compute the weight scores based on precomputed values .
Compute the context vector .
Concatenate multiple neural variables .
Add padding to the dataset .
Compute the core of the parameters .
Print the elapsed time .
Runs the method on the model .
Invoke the pipeline .
Build the loop variables .
Perform a scan step .
Calculate theano and free paramaterials .
Return a string that can be used for training training .
Skip n_batches .
Load parameters from disk .
Train the model .
Run the training step .
Runs the validation step .
Writes score map to stdout .
Get data .
Apply a function to the network .
Prints the usage of the log .
Compute a tensor of tensor_type .
Creates a list of dictionaries from a dataset .
Return a shared string with the given value .
Stack encoding layers .
Stack the decoding layers .
Encodes the given input to the network .
Compute the decoding of x .
Create a 2D Gaussian
Register a layer .
Monitor layer outputs .
Return a list of all available parameters .
Set up the input tensors .
Compute the model s output and return a dictionary mapping the output to the output .
Save network parameters to disk .
Load parameters from file .
Log the current model and its parameters .
Register multiple updates .
Register one or more updates .
Register one or more monitors .
Calculate the l2 norm of a tensor .
Write one element to file_obj .
Load a pickled element from a file - like object .
Load model parameters from disk .
Decode a state string .
Parser for x509 credentials .
Remove parameters from request .
Login to provider .
Convert a dictionary to a string with the same length .
Convert a list of items to a dictionary .
Parse the body of a json query .
Resolves a provider class .
Create Cookie .
Save session data .
Get cookie data .
Return a string representation of the resource .
Generate HMAC signature .
Serialize the value to a string .
Returns True if the token is valid False otherwise .
Returns True if the cache has expired .
Return a string representation of this object .
Return True if content is a binary string .
The content of the response .
Access user info .
Log in to the user
Generate a session key .
Set a session value .
Generate a CSRF string .
Log a message with the given level .
Return True if status is in category .
Split a URL into a base and query parameters .
Set CORS headers to a response .
Returns a dictionary of kwarg arguments for a Flask app instance .
Return a string representation of an object .
Ensure inst is iterable .
Return True if two arrays are equal .
Deserialize a byte string into an audiosegment .
Create an audiosegment from a file .
Create an audio file from numpy array .
Return a new audiosegment with all others .
Serialize the state of the model .
Given a list of candidate offsets and an offset_fronts return the first one that matches the offset
Return the first offset frontid after onset_sample_idx .
Returns the offset_front_before after onset_fronts after onset .
Match an offset front to an onset front .
Given onset and offset front of onset and offset ids return a list of consecutive consecutive consecutive consecutive consecutive
Helper function to get front id from a front index .
Yields the first front ids that are at a time .
Get offsets corresponding to given onset and offsets .
Remove overlaps from a segmentation mask .
Removes the front that are smaller than size .
Merge segments with adjacent segments .
Split a mask into multiple masks .
Downsampling of two masks .
Perform SAS TFT analysis on mask .
Bandpass filter .
Lowpass filter .
Convert a list of responses into a tf input matrix .
Expand a response to a standard deviation .
Return True if two elements are equal ignoring order .
Load the audit confusion matrix from the audit file .
Convert a list of rows to a tf input matrix .
Updates the index URL from the config files .
Determine the requirements of a requirements file .
Convert an error to an appropriate string .
Get information about the stream .
Open a file - like object with a timeout .
Return the child element with the given name .
Return the next sibling of the element .
Get the previous sibling of the element .
Set the name of the variable .
Set the value of a string .
Append a child to the element .
Return a new child with the given name .
Append a new element to this element .
Prepend a new element to this element .
Remove a child from a node .
Return a list of resolved resolver results .
Print a list of words in a word .
Run autocomplete on an edge .
Return a list of n - grams from token .
Iterate through a list of processors .
Apply a function to each item in an iterable .
Generate a fuzzy fuzzy word .
fuzzy word
Compute fuzzy index of word .
Extract all related relations from a query .
Prints a help message
Shows redis info
\ x1b [ 1mNAME \ x1b [ 0m get_dbkey
Do a geohash .
Get index details .
\ x1b [ 1mNAME \ x1b [ 0mNAME \ x1b
Send a request .
Map a list of requests .
Get bits from an array .
Convert a reinterval array to a bitvector .
Convert a slice into a slice .
Find all files in a directory .
Return True if all elements in iterable are in the given iterable .
Apply a function to each item in a list .
convert x to a number
Return True if the given number is a power2 degree .
Add a case to the graph .
Set the default statement for the default statement .
Register the vcdregister interface for the given object .
Callback called when a new unit is received .
Log a change event .
Render a WWDL process .
Return a list of all registered agents in the unit .
Get the clk associated with this unit .
Yields distinct items from iterable .
Yields the items grouped by fn .
Flatten an iterable .
Merges the condition ifstm from ifstm .
Removes signals that are connected to a netlist
Check if a function is a assignment .
Merge two Compound Statements into a single Compound .
Reduce processes by rank .
Handle a write request .
Return the name of the output for processing and mark outputs .
Cut off drivers from a list of statements .
Synthesize this process .
Get the maxid of a stm .
Returns the maximum ID of the maximum statement .
Write data to the simulation .
Set master direction .
Load declarations .
Return the signals for this interface .
Returns the physical name of the entity
Return the length of the field .
Get sensitivity by operator .
Convert the given value to the given type .
Reformat bits to a hstruct .
Return the number of words between start and end .
Return a list of items grouped by word index .
Pack data into a dictionary .
Clean meta information for all signals .
Find all enclosures for a list of statements .
Discover the casualsensitivity sequence .
Get the context of the RDL output .
Called when the statement is reduced .
Called when the graph is merged .
Return the merge of two statements recursively .
Merge a list of statements into a single list .
Merge two statements into a single list .
Reduce a list of INDRA statements into a single reduced list .
Called when a parent event has occurred .
Set the parentstm of this statement .
Register a list of statements to the target statement .
Destroys this connection .
Clean up all subcommands .
Recursively walk through all the fields of the given object .
Return a signed version of self .
Add a process to sensitivity processes .
Return a boolean condition for conds .
This function is called when an interface is imported from another unit .
Return a vector representation of a vector .
Perform a single HWProcess on each statement .
Evaluate a parameter .
Set the value of this Field .
Convert a list of interfaces to a htype object .
Removes memory from the memory .
return the index of the operand on success
Convert a Python value into a string .
Cast the string to the specified type .
Return a string casted to the given type .
Recursively walk through the interfaces of an interface .
Connect all physical interfaces in srcpacked to dstpacked .
Pack interface as a string .
Internal method to call the _tortl method .
Register an interface to an interface .
Try to reduce a sig and return it .
Reduce a sig to a signed value .
Get a string representation of the namescope .
Determine the serialization of an object .
Get a basecond condition .
Return a bitstring for a given width .
Return the name of a constant
Cuts off the receiver s driver from the given sig .
Load data from an array .
load from struct . struct
Load from hdl .
Return the width of the item .
Recursively walk the structure of this bitfield .
Add a signed integer to the given width .
Get indentation .
Raise an exception if the property is not None .
Register a parameter .
Updates the parameters of the object using the given parameters .
Register a unit .
Register an interface .
Register an array .
returns a single driver object
Calculate the value of the operand .
Compute operands and return result .
Return a new string with new indent .
Try to connect to a unit .
Propagate clk to all units .
Propagate clk and rst n units .
Propagate clk to clk and rst
Get the propagated representation of the unit .
Get the propagated representation of all units .
Iterate over bits in a string .
Serialize exclude eval .
Serialize a parent unit into a serializer .
Evaluate the properties of a parent unit .
Get the full name of the object
Recursively call _make_association .
Convert a Unit into a SimModel object .
Reconstruct the junctions of the junctions in the model class
Compute the unit test code for a given model .
Initialize callback for writecallback .
Add this signal to the signal .
Register an intern signal .
Add this SIGINT to the source .
Get the interns of this function .
Returns true if the given process is in the given process .
Add a process to the event queue .
Add a new handle to the schedule .
Schedules the process to update the process when the process has been updated .
Schedules applyvalues for the applyvals plan .
Returns a strategy for conflict resolving .
Run all of the combine processes .
Run any conflict processes that need to be executed .
Apply the values to the simulation
Return the value of a signature .
Write a value to the simulation .
Add a process to the event loop .
Simulate a synthesised unit
Convert a list of statements into a ternary operator .
Compute the distance between two hashes .
Generate an average hash value .
Calculate the average hash distance between two images .
Setup the device .
Update the state of the device .
 mute the device .
Increase the volume up .
Decrease the volume down .
Set the volume level .
Reset the state of the board .
Returns the piece at the given square .
Removes the piece at the given square .
Add a piece to the board .
Checks if the given move is aicide or die .
Checks if the player is a suicide .
Is the game over?
Returns True if the character is a checkmate .
Returns True if the trajectory is a 4 - fold reposition .
Remove a move from the stack .
Return the sfen representation of the board .
Push a move onto the stack .
Return a zobrist hash of the board .
Get the symbol for this piece .
Creates a piece from a string .
Return a string representing the usi .
Construct a Piece from a string representation .
Parse the COMMIT statements .
Parse a commit string into a dict .
Load configuration from command line .
Generate a YAML string from a configuration file .
Cast val to str
Returns a list of dates between first_date and last_date
Parse string into datetime object .
Load data from a file .
Set the missing values for the currency to None .
Get the rate for a currency and date
Iterate over frames .
Read a single record .
Write a record to the file .
Return a copy of the given words .
Return a string of comments .
Close the DAF
Compute a sequence of positions .
Close the DAF
Load the initial coefficients from the DAF file .
Visit a function call .
Check if a binaryop is a string or string .
Check for strings in a dict .
Check if a comma - delimited string is formatted .
Check if the keyword argument is in the whitelist .
Visit an exception handler .
Detect the logging level of a node .
Get exception handler name .
Get the id attribute of a value
Check if the given node is a bare exception .
Check if an exc_info node is an exc_info violation .
Deletes a file from the database
Render the PDF content .
Override render_to_response method .
Quote a string using unidecode .
Configures the given module .
Convert string to CamelCase .
Ensure all indexes in mcs are valid .
Parses a file and returns a list of prices
Load lines from a file .
Parse a pricemodel line
Gets the symbol corresponding to in_symbol .
Load symbol maps .
Get a session object
Imports prices from a CSV file
Print latest price for symbol
Download price prices .
Delete all security symbols for a symbol
Get the default session
Add a new symbol map to the database .
Lists all price maps .
Get a symbolmap by symbol .
Reads lines from a CSV file .
Convert a price entity to a pricemodel .
Map a price model to a price entity
read config file
Returns the path to the config file .
Creates user config file
Returns the absolute path to the config file .
Get config contents .
Set an option to a value
Get an option from the configurationkeys .
Save config to file .
Parse the namespace and mnemonic .
Add a price to the table .
download price for symbol
Get session object .
Get prices for given date and currency
Get prices on_date on_date
Delete all price items in the database .
Delete all prices for a symbol
download price from symbol
Get securities .
Return a partial .
Update child calls .
Recursively descend the tree rooted at this node .
Callback called when the student has chosen .
Return a list of items that are defined in self .
Return a parser instance for the given parser tree .
Check if a context loop has a context loop .
Check if a state has any context in the state .
Check if a student part exists .
Check if a student has a valid part .
Returns the true anomaly .
Initialize a Flask application .
Add a ldap3 server to the pool .
Remove a connection from the stack .
Destroys the ldap3 connection
Authenticate using the given username and password .
Attempt to bind user to the LDAP server .
Get a user s groups .
Get user info .
Get user info for a given username .
Get a single object
Return a connection to the server .
Create a connection to the database .
Create a ldap3 connection
Destroy a connection .
Search for containers .
Searches the bot s metadata .
Search all jobs in a collection
speak the client
Say the command .
Update secrets
update headers with fields
Ensure that the client has secrets .
download a file to a temporary file
Stream a file to a stream .
Update authorization token
Get or create a folder .
Helper function to read a JSON response .
Get a bucket
Update client secrets .
Initialize client authentication .
Loads secrets from the server .
Returns log content of the VM .
List all logs in the bucket .
Create a folder in an endpoint
Initialize transfer client .
Search for all Containers
Print the status of the backend .
Add a variable to the backend
remove a variable
Activate backend settings .
Delete backend configuration
Update base based on provided image .
Create basic authentication header .
Generate HMAC signature .
Generate a header signature .
Perform a DELETE request .
Get a HEAD request .
Perform a GET request .
Disable SSL verification
remove an image
Get lookup information from version file
Get a list of dependencies from a dictionary .
get singularity version
check installed software
Returns the absolute path to the saltenldir
Get the thumbnail of the Sregistry .
Run a command and return its output .
Get metadata for an image
Update database with current user account
Prints the response to a file .
Kill all commands .
List logs for a container .
Get a list of all collections
Update secrets
Launch an ipython notebook
Get all manifests for a repo
Get a manifest from a repository
Get the download cache destination .
Extract environment variables .
Update the base setting and artifacts
Update the credentials .
Get metadata as a dictionary .
Get client settings .
Get and update a setting .
Updates the client s secrets .
Generate an authorization string .
Prints a list of all registered builders
return a list of templates
Get the IP address of an instance
Build a compute service .
List all running containers .
Search all the containers in the bucket .
Command - line entry point .
Entry point for the docker command .
Initialize a database
Get build template
List all endpoints
List files in a given endpoint
Shows a sharebox on the server
Read the client secrets from the secrets file .
Get the storage services .
Delete an object from a bucket .
Delete an object
Delete instance by name
Get subparsers for a given parser .
Generate text .
Returns a temporary directory that can be used by sregistry .
Extract a tar archive .
Extract a tar archive .
Get the SHA256 hash of a file .
Read content of a file .
Read json data from file .
Deletes the specified files
Push an image to S3
Get or create a collection .
get collection by name
get container by name
List docker images
Inspect a container
renames an image
move image to path
remove an image
Parse a header from a recipe
Find a single file in the manifest .
Create a tarball from a list of package files
Update the metadata of a blob .
Format a container name into a lower - case name .
Whether to use colorize .
Return a string representation of error level .
Write a message to a stream .
Display a table
Push an image
get a template by name
Get the manifest for a given tag
get a build template
Update client secrets
Context manager to convert an s3 error response into an appropriate object .
Create a temporary file - like object .
Get the URL for a user or email address .
Generate a URL for a Gravatar .
Check if the given email has a Gravatar .
Generate a URL for a gravatar .
Generate a sequence of string tuples .
Calculate a Chimera block quotient .
Enumerate a list of mesomers from a string .
Enumerate all of the residues in a molecule .
Apply a transform to a molecule .
Return the canonicalized Tautomers associated with the given mol .
validate a list of smiles
Standardize a list of molecules .
Enumerate all of the tautomers in a string .
Convert a tautomer to a canonical form .
Return the tautomer of a mol .
Return the largest fragment of a molecule .
Return a stereo parent of a molecule .
Return the isotope of a molecule .
Returns the charge of a molecule .
Main entry point for molvsparser .
Remove all fragments from a molecule .
Choose a molecule from a molecule .
Integrate an IVP using the given parameters .
Get the members of the organization .
Get the teams of the org .
Get all repos in the organization .
Get the total number of contributors for a repo .
Get number of pull requests for a repo .
Iterate through all of the issues in a repository .
Get readme from GitHub .
Get a license s license .
Iterate over all commits in a repository and iterate over the commits .
Writes json to a file in JSON format .
Writes the totals to a file .
Writes the languages in a file .
Ensure directory exists .
remove a date from a list
Return a list of all the organizations in the USG USG .
Create a GitHub session .
Check API limits .
Connect to a GitHub session .
Query repositories .
Get an organization from GitHub .
Write the distribution to a file .
Construct a project object from a Gitlab repository .
Convert a license into a dictionary .
Get information about the repository .
Get releases from a URL .
Get referrers from a URL .
Get data from a url .
Writes the repo to a JSON file .
Write the data to a file .
Checks the validity of the data in a CSV file
Writes the data to a file .
Writes the referrers to a file .
Parse a JSON file and return an iterator of records .
Get records from a URL .
Return an iterable of JSON encoded strings .
Login to GitHub .
Get the emails of the org .
Write logins to file .
Connect to a stashy .
Connect to a Gitlab server .
Query projects .
Compute the number of labor hours for a given sloc .
Removes all empty strings from a dictionary .
Read a GQL file .
Wait for a reset .
Print the number of retry times .
Load data from a JSON file .
Save data to a json file
create a tss connection
Creates a TFS client for the given URL .
Create and return a tfs client .
Create a tfs client .
Create a tfs_client object for the given url .
Get a list of git repositories .
Get a list of all the branches of a TFVC service .
Get the number of commits in the year .
Calculates the total commit for the current commit .
Write the list of weeks to a file .
Log a timing information .
Log a statogram .
Perform a rollup on the server .
Convert database value to string .
Convert a value to a string .
Prepare value for serialization .
Recursively resolve the given path .
Given a list of usls return a dictionary of singular sequences .
Return the value of the histogram .
Mark a value as a counter .
Return a string representing the average rate .
Mark the last value as a value .
Send a metric to the client .
Serialize a metric into a list of strings .
Return formatted string for metric .
buffered send metric_str to send
Get the value of an option in the specified section .
Ensure data is unicode .
Get the value of an option if it exists .
Map ledger IDs to GUID .
Get the choices for the current user .
Map exact invoice numbers to foreign invoice numbers .
Create a view handler .
Create a form view .
Creates a method view from a methodview
Create an Apiview view .
Create a generic API view .
Creates a model view set .
Create a stream reader from a file descriptor .
Read data from the socket .
Close the connection .
Add a watch to a file .
Remove a previously acquired descriptor .
Setup a new watch descriptor .
Sets up the connection for the given loop .
Read an event from the stream .
Trigger touch .
Mark the interval as success .
Update the timer .
Close all connections .
Connect to a socket .
Query the lookupd for this topic
Set the maximum number of connections to be sent .
Log up a warning .
Add a callback to a listener .
Remove a listener from a listener .
Triggers an event .
Publish a message to a topic
set feature transform
Perform a prediction on the model .
Remove duplicates from paired fastq_pairs .
returns a dict of depth dic coverage of a depth file
Set the template path .
Set the name of the main channel .
Render a Jinja2 template .
Render the template as a string .
Updates the sink with the given sink .
Update the attributes of the template .
Set the secondary inputs for a channel .
Parse assembly assembly file .
Calculate the GC content of a sequence .
Returns the total assembly length .
Write the assembly assembly to a file .
Write the report to a file .
Remove inner links from text .
Run a sanity check on a pipeline string .
Find the source lane in a list of pipeline lines .
Split a string into a list of lane tokens .
Build a linear connection between plist and a lane
Add unique identifiers to a pipeline string .
Remove unique identifiers from pipeline links .
Check required files exist .
Return a mapping from header to position .
Convert a string into a HMS value .
Convert a size string to a float value .
Get the process tags from the log file .
Clear the inspect info of all processes .
Update the status of the log file .
Retrieve log lines from a file .
Assign CPU warnings and memory usage for each resource .
Update the log parser and traceback .
Updates the display to the screen .
Updates the top line by the given direction .
Move padding to right left .
Get last n lines from the log file .
Read static info from the pipeline .
Reads a JSON file and returns a dictionary .
Calculate the hash of the pipeline .
Get the path to the next flow log file .
Uses assembly to read assembly files from the assembly file .
Run an innuendo instruction .
List all available recipes .
Validate a pipeline string .
Builds the pipeline for the given task .
Build a downstream pipeline .
Build the pipeline for the given tasks .
Build a component string .
Write a report to a file .
Parse a list of log files .
Fix the names of contigs in assegments .
delete all fastq files
Parse a list of files .
Parses a text file
Extracts a contig ID from a string .
Writes the report data to a JSON file
Parse assembly assembly file .
Get summary statistics from contigs .
Get labels for each contig .
Calculates the GC Propagation of the given string .
Calculate GC slope for all contigs
main entry point for skesa
Generate a json report
Parse the bowtie log
Parse process name and directives .
Add a process to the process .
Search for a given template in the tree rooted at parent_lanes .
Add the header to the template
Add the footer to the template .
Initialize the initial process .
Sets the secondary channels in the configuration .
Set the channels for all processes .
Return a string representing the configuration file .
Set the configuration for all processes .
Write DAG JSON to file .
Write configs to a project .
Export the parameters of all processes .
Export all of the directives in the process .
Build the nf file .
Set the kers to use .
Generate a unique report id .
Update the trace watch queue .
Update the log watch .
Send a live report .
Initialize the live reports .
Close connection to report .
convert the adapter fasta file
Run Mash on the assembly .
Return a string representation of a message .
Processes processes and processes the process map .
Get the range of a qual expression .
Filter assembly files that are less than minimum coverage .
Get assembly size from assembly file .
Create a BAM file for the assembly .
Convert camel case to camel case .
Returns a dictionary mapping class names to process classes .
Main function for the main function of the dendropy .
Map the w to the data
Median filter .
Compute the K - Gaussian kernel .
Compute the square root of x .
Compute the n - dimensional concatenation of two values .
Gaussian filter .
Compute the euclidean distance between points x .
Apply a circular shift to x .
Given a list of x and an array of x create a new array with the embedded elements of the
Helper function to format the plot formatting .
Plots boundary boundaries .
Plots a set of labels for each label .
Get a list of feature segments for a feature .
Convert a list of FeatureSegments into a 2D FMS matrix .
Fit the scatter plot .
Read reference annotations .
Searches for an estimation .
Return a list of all supported boundary algorithms .
Get the configuration for a feature .
Get a list of dataset files .
Read the boundaries of a jam file .
Returns duration in seconds .
Write a row of time series to a file .
Get the path to the dataset
Align beat times and labels to match the beat time .
Estimate the pitch of the beat track .
Read annotations from the file .
Compute beat sync features .
Returns a list of parameter names .
Compute framesync timesync .
Return a list of frame times for each frame .
Returns a list of features .
Preprocess the feature string .
Postprocess method for postprocessing .
Entry point for the script .
Print the mean of the results .
Compute the information gain for an annotation .
Processes a track .
Generate final results file .
Compute all features in a file .
Processes a MRF file .
Calculate the Gaussian cost function .
Lognormalize f .
Normalize f to lower and lower bounds .
Get a numpy array of timestamps for a given duration .
Remove empty segments from times and labels .
Calculate the sonify audio and write to out_file .
Synchronize new labels to new ones .
Processes a segmentation level .
align the end of two hierarchies
Calculate the distance between each element in the data .
estimate k - knee
Cluster data by label
Run k - means clustering .
Compute the Probability Information Criterion
Returns the magnitude of x .
Reads bounds from a json file .
Read bounds from a json file .
Convert json file to array of labels
Convert a json file to a numpy array .
Compute the FFT of x .
Compute the label for each label in x .
Apply a filter to the activation matrix .
Get a boundary module .
Get a label module .
Runs a hierarchical segmenter .
Runs the processing of a flat file .
Parse the command line .
Run a task in a separate thread .
Spool the given iterable .
source to the target stream
Returns a dictionary mapping the language code to a dictionary .
Prints a table of the translation table .
Remove nodes from the network .
Save a network to an HDF5 file .
Load a Network from a HDF5 file .
Processes an element from an e .
Make an osm query and return the response
Builds a query string for a query .
Return True if value is a regular expression .
Compare the given value against the given expectation .
Compare the given value against expr .
Triggers a method on an instance .
get matcher by name
Initialize a matcher with the given arguments .
Request body .
Sets the body of the response
Set a value in the container .
Appends functions to target .
Triggers the given request to the given instance .
Add headers to the request .
Add a header to the response .
Add headers to the response .
Add parameters to the request .
Set the body of the request .
Set the json representation of the request .
Set the XML for the request .
Read a text file .
Set the status of the object .
Set the error message .
Send a reply to the mock .
Match a request .
Set the mock engine .
Create a mock of the engine .
Remove a mock .
Activate the mock engine .
Disable this mock .
Return True if the current request should use the network .
Match a request .
Return a copy of this request .
Context manager to temporarily use engine .
Add an interceptor to the engine .
Remove an interceptor by name
Get the value of a setting .
Return the SQL for this column .
Set the value of the field to the original value .
Return a string that can be used to encrypt the value .
Get the cached value for this column .
Return a string that can be used to encrypt a value .
Base regression function
Returns the covariance matrix of the tree .
Recursively recursively traverses all non - terminal nodes recursively .
Calculates all the leaves of the tree
The explained variance of the tree
Returns a regression model
set interpolation of time series
Calculates the number of branches that are present in the tree
Calculate the cost of a node
Attach the branch length to the tree .
Normalize a profile .
Validate and set gtr .
Set the standard gtr .
Set the length of the sequence
Attach sequences to the tree
Prepare the tree .
Prepare internal nodes for internal use .
Calculate the distance between all nonterminal nodes in the tree .
Get the mutation matrix of a node .
Return the expanded sequence of this node .
Return the state of the fence at pos .
Returns the length of the sequence at pos .
Calculate the log likelihood of ancestral leaves .
Convert a branch length to GTR
Calculate the optimal length of the shortest branch
Reconstruct a multipleseqAlignment object
Evaluate the quaternion of the covariance matrix .
Create a custom GTR object .
Checks the QR code for the QR code .
Compute the optimal t - t - t - t
Calculates the probability of a given profile pair .
Evolve the model at time t .
Returns the loglh of a sequence .
Set branch length .
Plot the root to the tip
Print the LH hh for the LH
Add a coalescent model to the tree .
Find the right root of the tree
Assert a tree .
create a GTR object
Read a VCF file .
Calculate FWHM of a distribution .
Create a delta function .
Assign dates to the tree
Set up the treeregression of the tree .
Makes a time tree .
Calculate the log likelihood of the tree .
Convert dates to dates
Returns the uncertainty due due to the date due to the given interval .
returns the minimum value of an object
Calculate the median interpolation of an object .
Returns a string representation of date .
Construct a DCData object from a string representation .
Closes the connection .
Receive a single line from the server .
Send data to the client .
Send an instruction to the device .
Convert unicode_str to str .
Load an instruction from a string .
Encode an argument .
Encode this instruction .
Returns the URL for the given class .
Returns the url of the instance
Returns the URL for the given class .
Download the file .
Retrieve the parent object of this job .
Ask user for credentials .
Login to the user .
Print user information
Print user info .
Return a new RangeSet with only the specified coordinates .
Modify a chromosome in the specified chromosome .
Retrieve the results of a query .
Convert a list of filters into a list of dicts .
Get the next string from the buffer .
Execute a query against the API .
Creates a new dataset migration
Entry point for the solver .
Construct a model instance from a dictionary of values .
Logout the user
Return the child object for this task .
Parse snpeff output .
Get authentication credentials .
Save the configuration to a file .
Format a value into a string .
Build a row from a list of cells .
Build a single line .
Return row attributes for mediawiki .
Create a migration for this dataset
Upload a file to a remote path .
Validate a full path .
Validate a given URL .
Annotate the given list of records .
Evaluate the expression
Validate format_name .
Register a new formatatter .
Return an iterator of table data .
Path to the user config file .
Return a list of system configuration files .
The list of additional files to be added .
Write the default config file to disk .
Read configuration files .
Truncate string to max_width .
Replace a string with a list of replace .
Call multiple commands in a sequence .
Apply an option to a command .
Initialize the options .
Run the command .
Run clean documentation .
Truncate a list of rows .
Format a row in a CSV format .
A vertical table adapter .
Generate a table from data and headers .
Return True if the certificate type is a valid certificate .
return True if type is bool
Return True if type is a binary type .
Generate a key using the given template .
Generate a new public key pair .
Find all the objects in the context .
Insert image into qr image .
Export gene panels .
Return the first weekday in d
Repeatedly repeat a day .
Repeats the given start and end times .
Periodically repeat every day .
Handle a single event .
Yield variants from a collaborator .
Exports variants in a MIME format
Update a user .
List str variants .
Get information about a particular variant .
Get a string variant .
View for a variant verification .
Export a CLINvar to the database .
Retrieve cancer variants for a case .
Upload a variant access to a variant .
View for a single evaluation .
Get a classification .
Upload a new set of hgnc symbols to the database .
Download the verified email .
Return a dictionary mapping gene names to gene IDs .
Add incomplete Penetrance genes to genes .
Make a request to a URL and return the JSON response .
Get a list of nodes from MME .
Get the ctoband coordinates for a chrom and position .
Determine the subcategory of a subcategory .
Calculate the length of a sequence of strings .
Determine the end of a position .
Parse the coordinates of a variant .
Update a panel .
Export a panel .
Edit an existing gene .
Load a report from a case .
Return a list of hpo terms .
Print whitelist .
Build a phenotype object
Get information about a gene
Returns a list of query strings representing the query .
Show the institute .
List available transcripts .
Return a list of day events .
Retrieve variants from the database .
Get a list of variants .
Return a dict of str variant information .
Generate the header for a variant
Get predictions from a list of genes .
Find a bai file in bai_file
Get the case counts for the case .
Parses a gene into a gene object .
Return a string representation of a transcript .
Calculate the end position of a variant
Return the most common frequency of the variant .
Convert clinsig_obj to string representation
Returns the URL for a thousandg link .
Get the URL for a cosmic link .
Build a beacon link for a variant
Generate the URL for a UCSC variant .
Returns the string representation of the spidex .
Return a list of expected inherited models for a variant
Returns a list of callers associated with a given category .
Return cancer filters .
Export CLARV to a dict .
Return a dict of CLINV submissions for a particular case .
Fetch information about a variant .
Create an AssessmentMapping for a variant .
Validate the evaluation_obj .
Upload hgnc symbols from a file .
Generate a report of verified variables .
Export all genes in a given adapter .
Parse a clnsig session into a list of dicts .
Parse compound information .
List all available genes
Get information about a case .
List available MongoDB collections .
Instantiate an agent .
Get a file handle .
Get net number from req file
get the next and previous and prev value
Check that the year is in the current time range .
Checks the day of the given month and day .
Parse individual individuals .
Parse a family from a ped file .
Build an evaluation .
Convert acmg_terms into a list of bool - like objects .
Fetch variants from a case .
Returns a list of variants in the database .
Retrieve a variant object .
Fetch variants from database .
Verify that a particular institute has been verified
Returns a list of causatives for the case .
Returns a list of potentialusative variants that are present in the case .
Yields all causatives of a variant .
Delete variants in a case .
Returns a list of variants that overlap the given variant .
Returns a list of evaluated variants .
Retrieve variants for a given sample .
return a connection object
Return a list of submission objects from a variant submission .
Generate header for aclvar submission .
Given a list of submission objects return a list of submission lines .
Load a panel .
Build an exon object
Delete a panel .
Drop all indexes
Delete a user
Delete genes associated with a model .
Remove exons from a build
Delete a case .
Gives individual individuals .
Show cases .
Load a user from an email address .
Handle the login .
Build an institute object .
Deletes the event identified by event_id
Get events for a particular institute .
Get a user s events .
Removes a phenotype from the case .
Parse individual genotypes .
Check if chromosome coordinates are within given coordinates .
API endpoint for search terms
Print transcript information .
List all exons in the database
Load a region for a region .
Get all events for a particular month and month .
Return a queryset of all live items in the current time range .
Parse requirements from requirements file .
Get existing gene for existing gene
Update a gene panel .
Create a new panel .
Export a panel object
Get archive information .
Migrate a case to a case .
List hpo terms .
Configure extensions .
Register blueprint .
List aliases associated with a symbol .
Build a panel object
Report verified variables .
Print variants .
Construct a VCF entry from a Variant object .
Starts a WSGI server .
Generate a md5 hash of the given list of arguments .
Initialize the connection with the given app .
Setup the database .
Update the index
Setup Scout database .
Setup Scout .
Setup the database
List institute information .
Parse a list of genetic models info .
Lists all genes in an institute .
Add an institute .
Fetches an institute object from the database
Return True if the date matches the given date .
Parse a date string into a datetime object .
Print HPO gene IDs .
Parse a rank score entry .
Create a new user .
check connection
Load a delivery report
Add a user object to the database .
Parses a pileup request .
Load exons from a database
Update compound compounds .
Add gene links to gene_obj .
List HGNC genes .
Parse HGNC gene IDs .
Get an OpenCLINvar for a given institute .
Update a clinvar_id with the given submission_id .
Given a submission_id return the clinvar_id associated with the submission_id
Add variables to a submission .
Update the status of a clinvar submission .
Returns a list of dicts for a particular institute .
Deletes acls object from the database
Returns a dict mapping case_id to clinvars
Parse a list of OPO - formatted obo output .
List all genes .
Show a specific HGNC gene .
List genes in a query .
Instantiate an institute and return it .
Return a list of institute names for the given login user .
Retrieve HGNC ID from gene info .
Update a gene panel .
Lists diseases in a database .
Load the disease terms from the given gene map .
Parse the frequency of a variant .
Parse variant frequencies into a dictionary .
Prints a list of users .
Compares two mim_panel and returns True if they are present in the new panel
Updates the mim version of the gene in new_panel
Add a gene panel .
Returns a panel object
Deletes a panel
Retrieve a gene panel .
Returns a list of gene panels that are present in the database .
Convert a case to a list of panels .
Update a panel .
Add a pending panel to the database .
Get clinical symbols for a case .
List cases .
Send an email record .
Load indexes from the database
Update indexes .
Drop indexes .
Build a variant query
convert query to clnsig_query
convert query to chromosome
Filter gene filters
Remove all databases from the database .
Parse a panel from a CSV file .
Load multiple HGNC objects into the database .
Load one or more transcript objects
Load multiple transcript objects into the database .
Get a Transcript object representing a HGNC gene
Get the HGNC ID associated with a HGNC symbol .
Get a list of HGNC genes associated with a symbol .
Returns a list of all genes in the database .
Returns the number of genes in the database .
Drop all genomes in the database .
Drop all transcripts .
Drop all exons
Get a dictionary of transcript objects in the database .
Convert HGNC symbol to gene object .
get gene by symbol
Get gene IDs by name .
Get a dictionary of Ensembl gene IDs .
Return a string representing the HGNC gene .
Add HGNC IDs to a list of HGNC IDs .
Get the coding intervals for each chromosome in the genome .
Load an OMIM panel .
List cases .
Return information about a case .
Match matchmaker .
Mme match maker .
Delete matchmaker .
Render a PDF report .
Report diagnostic of a case .
View status of a case .
Assign a case .
Get all the terms in the request .
Check validity of a variant .
Mark a case as a cause of a case .
Generate a delivery report from an institute .
Shows a share of a case .
Rerun a case .
View and open a research .
Convert a VCF2Cosure to a file - like object .
Send a multiqc case .
Returns a list of cases for a case .
Get a list of clinvar submissions for a user .
Export all of the MT_variants to a temp file .
Return a list of diseases with the given HPO IDs .
Convert a VCF to acyt closure .
Return information about a case .
Get all unevaluated cases from the database .
TEAL MME DELETE request
Get matches for case .
Match a case against a match .
Retrieve genes and transcripts from a HPO database .
Parse the caller info for a variant .
Build a transcript object
Load an institute .
Parse the cadd value .
Create a case .
Update a variant
Update the rank of a case .
Updates variants of a variant
Update the bounds of the variants in a list of variants .
Update compound variants in bulk .
Load a variant from the database
Upsert a variant
Load variants into the collection
Assign a case to an institute .
Share a collaborator .
Report the diagnosis information .
Marks a case as checked .
Called when a variant is verified .
Returns a list of sanger events ordered by institute_id .
Update a variant
Marks a case as a case .
Updates a variant with dismiss_variant .
Updates an association with the given ACmg string .
Parse a list of ids
Parse a simple id as a string .
Generate a MD5 key for a document .
Convert a HGNC panel into a HGNC ID .
Get a variant id from a variant object .
Returns the number of cases in the database .
Update dynamic gene list
Fetch a Case object from the database .
Delete a case .
Add a case to the case .
Replace a case in the case database
Update the case id of a case .
Adds a new evaluation to the case .
Get all evaluations for a variant
Parse transcript information
Parse an ensembl gene request and return a list of dictionaries
Parse the ensembl transcript response .
Parse a list of ensembl genotypes .
Parse ensembl exons into dictionaries .
Parse ensembl ensembl exon request .
Initialize a logger .
Get a list of phenotypes from a genemap file .
Get phenotypes .
Convert string to int or float
Return a string representation of the calendar for the given date .
Format the day .
Returns a human - readable month name .
Helper for popover wrapper .
Parse panel information .
Parse a gene panel .
Show diseases associated with a user .
Drop the hpo database .
Returns a dictionary with all users and their events .
Parse the conservations from a variant
Parse a variant of a variant .
Get general information from the database .
Get all cases grouped by the given database .
Convert the given context to a JSON response .
Get the year and month from the request .
Check for events that have been cancelled .
Get a specific HPO Term
Fetch hpo terms .
Retrieve a disease term by its disease identifier .
Returns a list of disease terms in the database .
Load a disease term into the database
Returns a sorted list of gene names .
Read an HDF5 file .
Set up the timestamps for the input file .
Compute the last position in the GBS file .
Remove blank channels .
Calculate the extent of the plot .
Plot the waterfall plot of the waterfall .
Plot the time series .
Write the filterbank to a file .
Calibrate the bandpass - pass - pass - through - n1 - n1 - 1
Convert data to a coarse - grayscale .
Calculate Stokesp symbols from a string .
Writes fracpols to file
Find the index of the closest value to val
Rebin a numpy array .
Unpack a string of data into a numpy array .
Calculate the difference between two time - series cross - correlations .
Plot a calibrated diode cross - calibration .
Calculate the size of the selection
Calculate the shape of the channel
Set the frequency and f_start values for the FASTA file .
Populate the timestamps of the input file .
Calculate the number of channels in the file .
Calculate the number of blobs .
Check if the data array isheavy .
Read all data from the file .
Read a row from the file .
Read data from the container .
Update the header of the header .
Print information about the file .
Write the container to a file .
Write the container to an HDF5 file .
Write the image to an HDF5 file .
Calculate the blob dimensions for a given chunk .
Returns the chunk dimensions of the header .
Grab the data from the time series .
Command line tool for gppirawir
Read the first header of the file .
Find the number of data blocks in the file .
Reads the next data block and prints it .
Plots a histogram of the current data block .
Generate filterbank header .
Find the header size of a file .
Integrate the data into a single channel .
Calculate the center frequency of a given frequency .
Calculate the f - ratio for a set of calibration points .
Calculate the diode_spec for a given set of wavelengths .
Return the length of the header of a file .
Check if a file is a filterbank .
Generate a header string from a dataframe .
Calculate the number of samples in a file .
Return a dict representation of the traceback .
Create a subparser for a record type .
Creates a parser for zonefile - file - like objects .
Remove comments from a string .
Add a default name to a record .
Parse a list of records from a text file .
Parse zone file .
Quote all values in a field .
Parse a schema string into a dictionary .
Convert a list of classes into a python package .
Convert a record to a JSON string .
Load a record from a JSON dict .
Deserialize a JSON string into an object .
Add a record to the schema .
Get schema by name .
Return a repr of the Variable .
Return a dict with the schema for the given record .
Get the root schema for a record .
A generator that parses the input stream .
Writes the output of the mr to the output stream .
Push a key to an ordered ordered dict .
Query the resource .
Get the raw results of the search .
Return a list of entities with the specified attributes .
Get Entity from a href result
Give another quote
Escape a filter string .
Return an elementary rotation matrix .
Return the value of vraderror as a float .
Calculates the parallax error for the given parameters .
Returns the magnitude error of g .
Return the magnitude error of magnitude g .
Calculate the number of savings steps that have been applied to beta .
Calculate the angle between two angles .
Transform cartesian coordinates to cartesian coordinates .
Transform the sky coordinates to the sky coordinates .
Compute the covariance matrix of the covariance matrix .
Returns the errorfactors for the given beta and beta .
Return a unicode version of a value .
Apply a function to each item in the collection .
Return a new QuerySet with only non - None elements removed .
Return a subset of this collection .
Return a generator that removes items from the stream .
Return a new iterator that drops the elements of the stream .
Zip the elements of the collection together .
Find a node matching the given arguments .
Returns a list of the system path to the running system .
Build a list of runs to run .
Writes the results to a file .
Prints the formula representation of the model .
Clean the given code string .
Round x to nearest base .
Given a list of indices return a list of str indices .
Calculate access to results .
Runs the filter and returns the result .
Strip and uncomment and uncomment lines from a list of lines .
Strips unreferenced labels .
Select the most common block of a list .
Ask the user to select the increment .
Inserts the marker into the specified lines .
Iterate over a space between two points .
Get the last modified datetime .
Check if arguments are valid .
Entry point for the script .
Main entry point for the script .
Create a symbolic symbol .
Transform a multidim expression into a 1D declaration .
Transform a multidim expression into a 1 - dimensional array reference .
Return a list of all the nodes of the given type .
Check the number of variables in the model .
Set a constant .
Return a string representation of expr .
Get array sizes .
Calculate the relative offset of a variable .
Remove duplicate accesses from the destination .
Returns the length of each iteration .
Get the loop stack .
Return a list of free symbols in this expression .
Returns a dictionary mapping source variable names to symbols that can be accessed from source code .
Returns a dictionary mapping the relative representation of the variable accesses to the given indices .
Convert a global iterator to a list of indices .
Iterate over the global variables .
Convert a list of indices to a string .
Returns an iterator over the global variables .
Print the kernel info to a file .
Prints the variable information to a file .
Prints the constants info to a file .
Print the kernel code .
Convert a math expression to a symbol .
Return indices of the offsets of an operand .
Return the name of an array .
Return the type of for the loop .
Build a declaration for constants .
Get array declarations .
Returns a list of the name of the loop body that contains the loop .
Build array declarations .
Find innermost loop in loop_nest .
Build kernel for array initialization .
Build dummy calls for the kernel block .
Builds a function declaration for a kernel function .
Build scalar declarations .
Get the kernel code .
Build a function call for a kernel call .
Get the main code .
Runs the IAC analysis .
Get identifier .
Get last modified datetime .
Return the compiler and flags .
Parse a perfctr event into a tuple .
Ensure that there are no overlapping items in the array .
Get the path to the header file .
Calculate the alignment of a given iteration .
Returns the number of load loads for the given string
Returns the number of hits in each group .
Returns a list of missens for each item in the cache
Returns a list of stores in the machine .
Returns a list of all evicts in the cache .
Get the infos of the cache .
Context manager to temporarily replace an environment variable with a value .
Configure an arggroup .
Parse description .
Build a request item .
Record a purchase .
Get the content of a course
Fetches course content from ecommerce .
Get unenrolled list from unenrollthru
Send an email to a course refund .
Sends an offer notification email notification .
Tries to retry the request .
Fulfill an order .
Returns a Sailthru client for the given site code .
Get the value of a key from the cache .
Add a value to the cache .
Get a configuration variable .
Get the filename of a given variable .
Get the value of an oplus version by version .
Eplus version number .
Populates a Device object from a JSON dict .
Returns all external files in the database
Set defaults for all tables .
Prepare the extensible_info attribute for each field .
Returns a dictionary with the short reference strings .
Returns the value of a particular column in a particular column .
Updates a value in a device .
Update the model .
Add multiple fields to the record .
Remove and return the value at index .
Insert a new value at the given index .
Deletes the record .
Register a record hook .
Register a Link
Create a regex for the intent .
Return the remaining duration in seconds .
Return a dict representation of the event .
Make a request to the given url .
Get information about a given service .
Try to create a directory .
Configures a service and waits for it to terminate .
http request wrapper
Get the current status of a recording .
Update the status of an event .
Update the state of the agent .
Return the configuration file as a string .
Update a configuration object .
Checks if configuration file exists and closes it .
Initialize the logger .
Send a listing of events .
Serve an image from the config file .
Run multiple modules .
Parses an ISO calendar into a list of events
Get upcoming events .
Run the control loop .
Main control loop .
Make an error response .
Make a JSON response .
Get internal state .
List upcoming events .
Show an event .
delete a recorded event
Modify an event .
Start capturing a capture .
Render HTML to fragment
Returns a list of all registered resources .
Return a dict representation of the object .
Create a fragment from a dictionary of strings .
Adds the given content to the response .
Initialize the JavaScript object .
Return a string representation of the resource with the given placement .
Convert a Resource object to a string .
Render a GET request .
Render a standalone HTML fragment .
Render the fragment to HTML .
Calculates the p - values for a set of pvalues
Convert a list of values to a numpy array .
Given an error table and an error table return the corresponding p - values .
Forms a truncated error table from a DataFrame .
Create a summary table from a DataFrame that contains the missing values .
Calculate the error statistics for the target scores .
Find the cutoff for the given scores .
Run inference on the input file .
Infer the peptide of a peptide file .
Infer proteins from a protein file .
Perform subsample on input file .
Reduce the infile of infile to a file .
Backpropagate infile and outfile to outfile .
Get a group by its ID .
Create a group .
Deletes a group .
Get the members of a group .
Update the members of a group .
Get effective member count .
Returns True if the group is effective with netid
Decrypt encrypted data .
Get stdin .
Get stdout .
Get the stderr .
Get debug output .
Yield stdin and wait for it to finish .
Yield stdout and wait for it to finish .
Yields stdout and stderr to stdout .
A context manager for running the debug command .
Write an error message to file .
Print the help for this parser .
Print usage information to file .
Print the version of the option parser .
Resolve an option in the environment .
Return a copy of the current context .
Write headers to a file - like object .
Generate a temporary URL .
Quote a value
Get a client .
Decrypt bytes from stdin .
Put an account .
Put a container into a container
Build the manifest body .
Create a container for a container .
Displays information about a translation .
Return True if the stream is empty False otherwise .
Encrypt a key .
Get the status of a repository .
Get information about a pull request .
Returns a list of pull requests .
Mark all titles as published .
Return a queryset of all the slider items .
Render a hero slider item .
Acquire reader lock .
Release all readers .
Acquire the write lock .
Remove a task from the queue .
Get a task by ID .
Return a list of tasks sorted by task_id .
Return a dictionary representation of this Config object .
Construct a Config object from a dictionary .
Initialize the perceval archive .
create index
JSON encoder .
Writes a generator to the writer .
Add a task to the scheduler .
Cancel a task .
Iterate over all stored items .
Helper function to validate arguments .
Parse arguments and return a dict .
Publish a job .
Schedule a job on a queue .
Cancel a scheduled job .
Run the server .
Listen for jobs .
Schedule the event loop .
Schedule a task in the scheduler .
Cancel a scheduled task .
Build a dictionary of job arguments .
Register the given view .
Override Django s reverse method .
Get view name .
Return the main version number .
Resolve a key .
Get the engine from a scheme .
Parses a database path into a database and schema .
Parses a database URL into a dictionary .
Log a user .
List all users .
Update password .
Add URL name to view .
Parse a boolean .
Parse string into an integer .
Get a parser for a given type .
Create a modeldict from a model .
Encode a base64 - encoded string .
Create a field from a dictionary .
Create validator from a dictionary .
Find the unique elements of the parameter list .
Helper function to change logging arguments .
Create all directories in filename .
Get a list of strings from an expression .
Creates a logger
Extract replacements from a trajectory
Check and replace parsed arguments in a parser .
Convert a parser instance to a file - like object .
Find multiple options in a parser .
Return a dict where each key is the value of a multiprocessing .
Parse the log file and update the parser accordingly .
Convert a log configuration dictionary into a new dictionary .
Create logging handlers and tools .
Finalize all of the tools .
Starts the stream .
Write buffer to stdout .
Compare two results .
Compares two dictionaries .
A decorator that adds a prefix to a class .
Add parameters to traj .
Runs a network of neurites
Compute an euler scheme using the euler algorithm .
Add parameters to the function .
Difference of Lorenz function
Create a storage service .
Create a storage service object .
Add parameters to the trapezoid .
Calculates the Rolesky - Schottles .
Determine if the parameter is in a group .
Build the model equations from the trapezoid .
Pre - build the model if necessary .
Build the model .
Builds the model for the given traj .
Build a pre - build if necessary .
Build the connections for the given trapezoid .
Add parameters to a trapezoid .
Compute fano factor for a neuron .
Compute the mean factor of a neuron .
Compute mean fano factor .
Add monitors to the network .
Creates a folder containing the output folder .
Plots the result of the run .
Visualize the graph and plot the results .
Run analysis on the network .
Get the number of batch options .
Explore a batch of documents .
Nntode variables .
Get the function s function .
Rename the resource .
Set the attributes of this object .
Convert a node to a message .
Delete a node from the tree .
Remove a node or a leaf node from the tree .
Translate a shortcut name into a boolean value .
Determine the type of a node .
Create a link between the given node and the given instance .
Checks that the names of the given names are valid .
Set details on a specific tree node .
Iterate over all nodes in the tree .
Create an iterator for the child nodes .
Perform a breadth - first traversal of a BFS traversal .
Search for a key in the tree .
Return a list of strings that match the start node .
The kids of this node .
Add a group from the storage .
Helper method to add a leaf from the storage .
Return a list of path names of the data .
Return a string representation of the tree .
Get the parent of the v_location .
Remove a link .
Removes the child .
Get the value of a file .
Get the children of this node .
Get group names .
Get a list of leaves .
Get a list of links .
Stores the trajectory in the given group .
Add a result group to the interface .
Add a derived parameter group .
Add a derived parameter to the interface .
Add a config group to the interface .
Add a configuration parameter .
Add configuration variables to the given Commit object .
Create a git commit .
Flatten a dictionary into a single level dictionary .
Return a nested dictionary nested by separator .
Get the argumentspec of a function .
Get keyword arguments from kwargs .
Formats the given timestamp .
Attempt to bind a port to a TCP port .
Recursively create a directory .
Reset the object to its initial state .
Get the remaining number of seconds .
Return a string representation of the file .
Remove a value from the cache .
Return a string representation of the annotation .
Make a result from a result .
Make a shared result from a result .
Store access data for this variable .
Get data node .
Return True if the item is supported .
Creates shared data for the specified item .
Manage multiprocessing .
Lock a client .
Send a complete handshake .
Clean up the context .
Start the socket .
Send a REQUEST and retry it .
Acquire the lock .
Listen for incoming requests .
Put data into queue .
Attempt to find the current process pid .
Handle processing of data .
Run the main loop .
Receive data from the queue .
Receive data from the socket .
Stores the object in the storage service .
Store a message in the database .
Stores references in the given list of trajectory objects .
Collect and parse a section .
Collect configuration values from a dictionary .
Processes the kwargs passed to the command line
Add parameters to a trapezoid .
Plot a pattern .
Calculate cellular autocaton pattern .
Signal update signal .
The overview group of the conversation .
Load multiple items from an iterable .
Checks the hdf5 properties of an object
Store multiple items in an iterable .
This function is called when the wrapper is closed .
Extract file information .
Backup a trajectory to a backup file .
Read a row into a dictionary .
Prepare the intersection of the trjobs and update the table .
Check if the version matches the given Python version .
Load an explorations from the given Trajectory .
Store the explorations of the given traj .
Stores the trajectory into the database .
Helper function to create a leaf node .
Recursively store the nodes in the given directory .
Store a parameter or result table entry in the database .
Get a table from the HDF5 file .
Get a single node by name
Helper function to insert values into a row .
Cuts a string to a maximum length .
Creates a new group if it doesn t already exist .
Helper function for _all_hdf5_get_or_create_group .
Store annotations in an HDF5 file .
Load annotations from a node .
Private method to handle the group of a group .
Helper function to load data from a load group .
Ensure all annotations are loaded .
Extract missing data from a dictionary .
Add summary information to the table .
Add metadata information to the group .
Write data into a shared array .
Write a table to the HDF5 group .
Write data to a pytable .
Write data to HDF5 store .
Helper function to write data into an array .
Write data into the HDF5 file .
Delete a link .
Helper function for _get_table_col .
Return the maximum length of a list of strings .
Helper function to read a dictionary from a table
Read shared data and return it .
Helper function to read an array .
Load a trajectory into the database .
Make a set name based on the given idx .
Set property values .
Add to dynamic_imports .
Called when a preset is saved .
Returns True if run is complete .
Removes an existing explanation .
Update the run information .
Add information about a single run .
Lock all of the parameters .
Lock all derived parameters .
Finalize the object .
Loads the skeleton skeleton file .
Creates the list of wildcards for this rule .
Merge multiple trajectories into one .
Merge two runs into one .
Rename the given name using the given name .
Merge configuration parameters into this one .
Merge two annotations into a single object .
Merge the results from another run .
Restore the default values to their initial values .
Sets the parameter access to the given index .
Turns a single node into a single run .
Return a list of run names .
Starts a new run .
Set the start time of the run .
Set the finish timestamp for the run .
Constructs an instance of the given constructor .
Helper function to convert a dictionary into a dictionary .
Private method to remove the number of nodes from the run .
Delete links from an iterator .
Remove a node from the tree .
Wrapper for _wrap_single_run .
Apply frozen pooling to the given kwargs .
Configure pool parameters .
Configure frozen pool .
Process a single run .
Perform a single run of a scoop .
Configure logging .
Configures the current niceness .
Handles a single - run for a single run .
Wrap the handling of the given arguments .
Load a class from a full class
Try to load a class from a list of dynamic_imports .
Return length of the file .
Return a string representation of the file .
Get range .
The string representation of the object .
Load this parameter from a dictionary .
Loads the arrayparameter from a dictionary .
Compare two values .
Returns True if the sparse matrix is supported .
Build the names of the sparse parameter .
Construct a sparse matrix from data_list
Internal method to load sparse parameter data
Stores the object in the database .
Load the parameter from a dictionary .
Translate a key to a string
Return a string representation of the HDF5 file .
Convert the file to a dict .
Set a single item .
Return True if item supports sparse matrix .
Serialize self . _data into a dictionary .
Load a sparse parameter dictionary from a sparse parameter dictionary .
Set single item .
Stores the state of the object .
Load parameters from a dictionary .
Main entry point for merging all static files in the current directory .
Create a session .
Create a job and run it
Start all the jobs in a session .
Multiply the vector onto the vector .
Run the simulation
Calculate the firing statistics for a neuron .
Add parameters to the trapezoid .
Add an exploration to a trapezoid .
Extract subruns from a given trapezoid .
Execute a network run of components .
Add parameters to the given traj .
Run the network .
Create a filename for a given Trajector .
Get the next item from the chain .
Handle keyboard interrupt .
Load configuration from a file .
Get PIN code
Request the access token and refresh the refresh token .
Refresh access token .
Get all thermostats .
Write the tokens to a file .
Set the thermostat mode for a given index .
Set the fan_on_time for a given index .
Set the temperature for a specific temperature
Deletes a specific vacation .
Resume a program .
Send a message to the thermostat .
Generate a delay depending on the number of seconds .
Generate time required to renew a lease .
Generate a renewing time .
Return a dict representation of self .
Reset the DHCP capabilities .
Get the timeout for a particular state and function .
Set a new timeout for a particular state .
select an offer
Send a request .
Set the timers for the current state .
Checks if a packet is a NAK .
Initialize the selector .
Called by the client to select the offers .
Called when a request is received .
Check if the request has expired .
Called when a request has been received .
Called when an offer is received .
Handle an ACK packet .
Called when a received packet is received from the device .
Called when an ACK packet has been received .
This method is called when a new packet is received .
Handle an ACK packet .
This function is called when a received packet is received .
Called when the client is renewed .
Set the value of the query .
Return a new QuerySet with the given name and value .
Remove a value from the query .
Get status of a status command .
read a tdms file
convert a tdms file to fcs
Compare two files .
Create a patch in the database .
Delete the next patch .
Delete a patch .
Check if a file exists in the patch
Backup a file
Add a file to the database
Run the command .
Create the directory if it doesn t exist .
Copies this directory to a destination .
Create a link to a file .
Copy file to dest .
Returns a directory containing the current working directory .
Backup a file
Unapply a patch .
Apply a patch to the series .
Apply the next patch to the series .
Apply all patches to the data .
Read the series from the series file .
Save the series to a file .
Add a patch to the patch .
Insert patches into the patch .
Add patches to the patch .
Remove a patch from the dict .
Return a list of all the patches after the given patch .
Returns a list of all the patches before the given patch .
Return a list of all the strings that match the given patch .
Replace an existing patch .
Create the directory structure .
Check version against version file .
Add the argument to the parser .
Add this command to a parser .
Add this command to a subparser .
Set the arguments for this parser .
Add the given parser to the given parser .
Check if a file exists in the patch
Check if a file is in the next patches .
Revert a file
Import a patch .
Import patches from a file .
Add way points to the way .
Return a list of node ids that are missing .
Add a node to the graph .
Create a route for a relation .
Create a short name from a relation .
Get the agency id for a relation .
Processes the analysis .
Add a relation .
Patch agency names to their respective agencies .
Generate time stamps for a trip .
Write the buffer contents to a zip file .
Write all buffered files to a destination .
Build agency object from relation tags
Extract stops from a relation .
Build a shape for a relation
Returns a list of supported versions .
Send an APdu .
Authenticate using apdu .
Register app .
Authenticate against the device .
Register multiple devices .
convert unicode to str
Wraps a class to a class .
Return True if the filepath matches the given filepath .
Return the email address for the given email .
Return the entry for a given entry .
Converts markdown to regular expressions .
Start a HTTP server .
Downloads a URL and returns it as an image object .
Convert a string to an Image object .
Raise an exception if the image is not too large .
Raise an exception if the given width is not too large .
Raise an exception if the given height is not too large .
Parse a category for a specific field .
Parse the value of a field as a number .
Return a list of parsed items .
Save an error .
Parses the parsed data from the source file
Parse an item .
Get model instance from data .
Save an item to the database .
Download a file
Load configuration file .
Get all items in the CSV file .
Validate whether or not the device can access network .
Add one or more files to the working directory .
Add a file to the sandbox .
Get all enrollments for a course
Gets the enrollments for a given course .
Get all enrollments for a section
Gets the list of enrollments associated with a SAS section .
Get all enrollments for the given regid
Enroll a user .
Get all roles in an account
Get all roles in an Account
Returns a list of all roles in the given account
Get a role by ID
Get a role by account ID
Returns a specific course
Get a course by its Id
Get a list of courses in the specified account .
Gets the courses in a given SIS Account
Gets a list of courses in an account .
Gets the published courses in a given SIS Account .
Get all courses associated with the regid
Creates a new course .
Update thesis course id .
Returns the activity with the given account .
Returns the grade by account .
Returns the statistics for a given account .
Retrieves an Activity by its Id
Returns a list of Assignments with the given Id
Returns a list of student summaries by sis_course_id .
Get the student activity for a given course .
Get the student messages for a given course .
Gets a list of external tools in an Account .
Gets all external tools in a course .
Create an external tool .
Update an external tool .
Deletes an external tool .
Check that an object has all required parameters .
Get user by ID
Get a list of users associated with a course .
Get all users for a given course
Create a new user .
Get a user s logins .
Update a user login .
Extract the next page from the response .
function to get the url of a resource
Get a full url for a resource .
Get a resource from a url .
PUT the body of a resource
POST the body of a resource
delete a resource
Get a list of admin admins .
Create a user admin .
Create an admin by user .
Delete an admin .
Deletes an admin by user
Create a new grading standard for a course .
Get a specific section
Get a Section by its Id
Get all sections in a course
Gets the list of sections in a course
Gets the list of sections in a course .
Gets the list of sections in a course
Create a section
Update a section .
Returns a list of quizzes for course_id
Get a specific Account by ID
Get all sub accounts of a given account
Update an account .
Update SIS Account ID .
Returns a specific canvassos settings for the given account .
Update auth settings .
Get a term by its SIS_term_id
Import a CSV from a CSV file .
Import a directory from the Canvas API .
Get the status of a SIS import
Build the body of the archive .
Returns a list of assignments for the given course .
Update an assignment .
Returns a list of available report types .
Get a list of reports by type .
Create a report .
Creates a course provisioning report .
Creates a report for a course SIS export .
Creates a report for unused courses .
Get report data .
Get report status
Deletes a report .
Move all detections in the label
Flip detections between strings .
Returns a dict with the keys of the given object .
Gets the config from the request .
Return empty value .
Create metrics from a list of metric configurations .
Setup logging for this class .
Configure the registry with the given process stats .
Create metrics from one or more metrics .
Get a metric by name or labels .
Handle the homepage .
Handle metrics request .
Queries a wavenumber channel .
Replace the HTTP message with the appropriate content type .
Send a query to the server
Returns information about the pod and its assumptions .
Iterate the results of the query .
Encode a request to the request object .
Make a GET call to the API .
Make a DELETE request .
Make a PUT request .
Make a POST request to the API .
Group sentences into a group of sentences .
Disambiguate a PDF file .
Disambiguate a query .
Segment a text .
Get a specific language .
get concept by id
Fit the model to the given features and classes .
Returns the accuracy score of the given features .
Fit the model on the given features .
Return the accuracy score of the given features .
Transform the features to a string .
Returns the weighted score of the given features and targets .
Create a vector from a list of members .
Return a vector representation of the given members .
Compile a form file .
Compile and execute a form file .
Compile a string and return the compiled form .
Bootstrap a repl module .
Compile a Python code file .
Add a method to a map .
Adds a method to a key .
Remove a method from a map .
Remove a method from the collection .
Check if v is a macro
Get the location of the line .
Raise an exception if the node is not recur .
Raises an exception if the node is not tail - tail .
Resolve a bare symbol .
Resolve a bare symbol .
Parse an AST .
Whether or not the variable is a shadowed variable .
Return a string representation of a list of entries .
Return a string representation of a sequence .
Fallback for repr calls .
Replace all locations in this node with a given location .
Compile and execute a parsed form .
Compile a module into an AST .
Compile a module into a module .
Compile a bytecode into a module .
Create a sequence from a string .
Unpack a string .
Return a fraction .
Returns a logging handler for logging .
Return a mapping of key - value pairs .
Partition a collection of strings into n elements .
Reads a namespace .
Read a collection from the reader .
Read a list from the reader .
Read a vector .
Read a map .
Read a string .
Reads a symbol from a context .
Read a keyword .
Read a meta dict from the reader .
Read a quoted comment .
Expand a syntax quote into a list of strings .
Read a syntax quote from the context .
Read a delimited form .
Read a character from the reader .
Read a regular expression .
Read a reader macro .
Read the next comment from the context .
Read the next token from the reader .
Read a string from a string .
Read data from a file .
Updates the position of the current line .
Push back onto the stack .
Read next token from the stream .
Build a base64 bytecode .
Get the bytecode of the cache .
Compute a cache from the source code .
Add a font import to the meta_path .
Find a module that matches the given fullname .
Execute a cached module .
Compile a module into the cache .
Execute a module .
Create symbol .
Complete a string with a prefix and a prefix .
Get or create a pmap from kw_cache .
Get a keyword for the given name .
Return a tuple containing the deps and nodes of the given generators .
Generate Python AST for a collection of forms .
Set the location of a py_ast node .
Decorator to turn a function into a py AST node .
Decorator to wrap python ast in py ast .
Return whether v is a dynamic meta variable .
Return a boolean indicating whether the value is a predef .
Turn an expression into a statement .
Convert a Python expression into an expression .
Convert a do node to a py AST .
Generate a filename .
Convert a list of function arguments into a Python AST .
Convert a single IR function node into a py AST .
Convert a function node into a Python AST .
Convert an if node to a python AST .
Convert an invoke node into an astroid AST .
Convert a quote node to a Python AST .
Convert a recursive recur into a py AST .
Convert a node into a Python AST .
Convert SetB AST to Python AST .
Convert a throw node into an ast node .
Convert a Try node into a py AST .
Convert a local variable into an ast . AST .
Convert a variable name to a pytorch ast .
Convert a VariableSymbol to a Python AST .
Convert an interop property into a pyop AST .
Convert a maybe class to a pyclass .
Convert maybe_host_form to a pytest AST .
Convert a constant value to a Python AST .
Convert a collection literal literal to a Python AST .
Generate a Python representation of a Lisp AST .
Yields all the imports from a module .
Return an ast . ast . ast . ast . string .
Helper function to create a symbolic variable .
Create a set from an iterable of elements .
Return a set containing the given members .
Visitor for excepthandler .
Return node s expr if it is a constant else None .
Visitor for functiondef .
Visitor for While node .
Visitor for try .
Create a new module .
Return the first element of an iterable .
Return the rest of the given object .
Return the nth rest of a collection .
Return the nth next sequence of i .
Return the cons of a sequence .
Convert an object to a sequence .
Concatenate multiple sequences into a single string .
Associate an object with given kvs .
Return the conjugate of the given collection .
Dereferencing an object .
Compare two strings .
Divide two numbers .
Sort a collection .
Return True if k is contained in collection .
Get a value from a dictionary .
Convert an object to a Lisp format .
Convert an object to a python type .
Return a string representation of an object .
Return a list of arguments .
Mark a function as a basis function .
Resolves an alias for a symbol .
Resolve a variable in a string .
Add a generated python code to the current variable .
Internally intern a variable .
Internally intern a variable .
Find a symbol in a namespace .
Find the variable corresponding to a symbol .
Find a safe variable in a namespace .
Add a default import .
Add an alias to the symbol .
Intern the symbol for a symbol
Internally create a new variable with new_var .
Find the variable with the given symbol or None .
Add an import to a module .
Get the import for a symbol .
Add a reference to a symbol
Get the reference to a symbol .
Reconstruct all the variables to the same symbol .
Swap all internals to the given namespace .
Get or create a new lmap .
Get or create a symbolic name .
Get a qualified name .
Remove a variable by name .
Complete the aliases of the given prefix .
Given a prefix and a name_in_module and a name_in_module return a list
Return a list of internedInterns for the given value .
Return a list of completion strings for the given value .
Recursively complete a dotted name .
A tuple containing the positional argument .
Convert a list of members into a list .
Convert a list of members into a list .
Decrypt a JWE token .
Encrypt a JWT .
Deletes a value from the cache
Return a string representation of the selector .
Parse a FQL string into an expression .
Dump a NDB model to a file - like object .
Object hook for serializing datagrams .
Decode string to datetime .
Decode a JSON string .
Return a JSON encoder for the given object .
Validate the version string
Robust sorting by strongly connected components .
Set parent expression
Get parent expression
Add an element to the working tree .
Create a new expression with AND operator .
Create an expression with an OR operator .
Parse incoming messages into a list .
Turn a list of tuples into a dict .
Return first message matching cmd .
Prepare a packet for sending .
Flush the socket .
Enable a slide .
Save the template to a file .
Get information about the device .
Locate the systemjs package json file .
Parse the package json file
Raise an API exception based on the json response
Validate the response and raise an exception if it exists .
Convenience function to homogenize two wavelength arrays .
Interpolate the data in the dependent vector .
Calculate the indep vector between two wavelength arrays .
Make sure the compatibility between two Waveforms are compatible .
Load systemjs manifest files
Return a tuple containing the names of the variables in the given module .
expand shorturl
Get the stats for a short URL .
Get database statistics .
Get database statistics .
Yield chunks from an iterable .
Flatten an iterable .
Print a table to stdout .
Create a dummy class with the given name .
Create a new instance from a string representation .
Trace a module .
Defines the links in a file
Add common prefix to plist .
Create a multi - entry entry for a list of PyVersion objects .
Convert a list of strings to words .
Generate chunk noise data .
Given a frequency series of data points split them into parquet .
Bound a waveform to a waveform .
Build and return a string describing the units .
Internal helper for constructing a wave operation
Calculate the running area .
Validate the indices of a waveform .
Return the cosine of the wave .
Return the acosh of a wave .
Return the arcsine of wave .
Compute the tangent of a wave .
Return a copy of the wave .
Calculate the delay of a wave .
Log the value of the wave .
Square root of wave .
Convert wave to complex
Return a copy of the wave .
Return a copy of wave .
Find systemjs files .
Get a short description from a long description .
Recursively build an expression .
Removes the next item from the given items .
Get the function functions from an expression .
Parse an expression into an expression .
Removes duplicate delimiter from expr .
Convert a number to a WGS84 representation .
Return a string with the minus sign without the given exponent .
Convert string to Peng float .
Returns the Peng frum of a string
Convert syllable to peng float .
Return True if the app needs to be downloaded .
Runs a command on the server .
Return a dict of the contents of the app .
Returns True if all of the hashes in dep_tree match .
Format a hex dump of a hexadecimal string .
Parse a docstring from a docstring .
Return a list of valid identifiers .
Add a deferred action to the context .
Split a line into individual parts .
Check init commands .
Return help text for builtin functions .
Find a function in context .
Lists all built - in built - in functions in a given context .
Return True if arg is a string False otherwise .
Extracts the value of the argument from the command line .
Invoke a function on a given line .
Classify section name .
Classify a line from a line of text .
Join a list of paragraphs into a single paragraph .
Convert value to a type .
Convert binary data to binary type .
Get the size of a type .
Returns True if type_name is known to known type .
Split a type into its parts .
Instantiates a type from the given subtypes .
Returns True if the type is known to a known format .
Load all the types of a type module into this object .
Add a parameter .
Add a typed return value .
Add a return value for this method .
Match a short name .
Get the type of a parameter .
Format a return value .
Convert a positional argument to a string .
Convert an argument to a validator .
Format the error as a string .
Return a dict representation of the error .
Check and execute a function against the given arguments .
Parse validators .
Find all items in a container .
Extracts all documentation from a module .
Get the help text for a given function .
Annotate a function with a decorator .
Mark a function as annotated .
Return a short description of a function .
Load the command_module .
Install crontab .
Print all crontab tasks .
Uninstall the kronos package .
Create a new resource from a URI .
Load project configuration from YAML file .
Saves project configuration .
Returns a mapping of dependent projects to dependent projects
Initialize a project
Execute the function call .
Apply a function to a pure function .
Return a copy of this string .
Return a list of strings .
Apply a function over a state .
Set the value and return the result .
Apply the setter to the given state .
Get the kind of an object .
Main game loop .
Returns a step of this vector whose values are outside of self .
Handles player input .
Advance the robots .
End game .
Player move command .
Play the game .
Make a move on the board .
Returns the winner of the game .
Iterator over potential winners .
Add the item to the queue .
This method is called when the spider is started .
Upload a file to S3 .
Create a gzip file object .
Get the state of an account .
Get asset state .
Get the block hash .
Get the block system fee .
Get contract state .
Get the raw transaction data .
Get the storage value for a key .
Get the transaction output .
Invoke an RPC method .
Invoke a function on a given script .
Invoke a JavaScript script .
Send a raw transaction .
Validates that an address is valid .
Calls a remote method
Return True if s is a hash256 hash256 hash256 .
Return True if s is a hash160 hash160 .
Encode the invocation parameters into a string .
Decodes the result of a function call .
Apply this unit to a datetime .
Render the template to a file .
Render barcode as a string .
Render the given code .
Command - line entry point .
Download a file to local_path
Upload a file to the local path .
Downsync the given sections to the specified section
Prints the diff of a specific section .
Parse an environment variable .
Set basic authentication .
Set the api_key in the config dictionary .
Get all JSON content from a folder .
Get all schemas in json_path
Get the schema from the database .
Returns a jsonschema resolver .
Validate an object against this schema .
Returns a list of valid examples .
Get invalid examples .
Generate a URL to redirect to .
Process the authorization code from a URL .
Get a token from the API .
Get user ID .
Returns a list of folders in a folder .
Creates a directory .
Adds a comment to an existing comment .
Decode an object to unicode .
Set the drop target for an object .
Start drag operation .
Set the default tlw .
Inspect an object
Migrate a font from a font
Load a page .
Raise an alert
Displays a Wellcome tip tooltip
handle mouse down event
handle mouse movement
handle keypress events
Deletes all objects in the selection
Duplicate the selection .
Refresh the object
calculate best position
Get the python data for a given item .
Set pydata data for a given item .
Find the index of a given python data .
Delete an item from the list .
Remove all items from the map
Remove all entries from the table .
handle selection selection
Get string selection
Set the data of the client
append a string to the wx object
get window by name
Adds a child object to the wx_sizer .
Set the parent of the component
Tile the background in the background .
Erase background clipping .
Paint the Wx object
Returns a list of column headers .
Reset the view to the given grid .
Update the values of the current view
Update the column attributes .
sort a column
Clears the current widget .
create a combobox
Start the selection
Called when the table has ended .
Checks if a key is accepted .
Handle opening key press events .
Enable the given value .
Returns True if the menu is enabled .
Set value to value
Returns True if all menus are enabled
Remove a menu item from the menu .
Set the object tag and its attributes .
Visit the html table in html table .
Get the appropriate class for autodirective .
Mangle a signature
Import a module by its name .
Create a role for an autolink
Display an alert dialog .
Prompt the user for a text entry .
Select a font
Display a color dialog .
Show a directory dialog .
Wrapper for find dialog .
Set whether the item has children .
Set wx icon
Parses the given filename and returns the result .
Save rsrc to file .
Build and return a window .
Build a component from a dictionary .
Convert a python property name to a python object .
set data to clipboard
Find autos summaries in a docstring .
Load an object from the tree .
Inspect an object
Updates an item
Update an object in the tree
Create a context menu
Try to get the thumbnail from the value .
Assert that path has the given path .
Assert that path has no current path .
Select an option .
Get a browser .
Return a string representation of the expression .
Switch to specified frame .
Context manager to accept an alert .
Context manager for accepting a confirmation dialog .
Temporarily dismiss a confirmation dialog .
Context manager that opens a prompt .
Temporarily dismiss a prompt .
Save the document to disk .
Save a screenshot to disk .
Raise the server error if the server error occurred .
Returns a boolean indicating whether a field has been checked .
returns True if the field has no match
Whether a field has an unchecked field .
Returns True if the element has no unchecked field .
Assert that a title has the given title .
Raises an AssertionError if there is no title .
Return the inner content of a node .
Return inner text as string .
Normalize a URL .
Return True if error should be caught .
Compare the number of items in the query .
Cache the result of a given size .
Returns True if any of the options are not None .
Construct a failure message .
Returns True if count matches given count .
Normalizes given value .
Normalize whitespace .
Convert text to regular expression .
Determines whether the URL matches the expected URL .
Resize the window to the specified width and height .
Start the server .
Decorator to register a function .
Decorator to specify a method on the object .
Decorator to specify a class method .
Returns a string with the current traceback .
Get the source of an object .
Returns the appropriate logger for the given instance .
Set the logger .
Make a call to the API
List of available channels .
List of users .
Create a slack message
Translate a message from Slack .
Sends a Slack message to the channel
Read a channel from the network .
Run the Slack server .
Run the client .
Return the difference between two dictionaries .
Colorize a message .
Callback called when a task starts .
Prints stats on the server .
Prints a message when the task is skipped .
Convert a prefix to a netmask .
Add a model to this element .
Load all jinja filters
Find a file in a YANG directory
Perform an HTTP POST request .
Build authorization code URI .
Gets OAuth token .
Return query params as a dict .
Deletes a query string from a URL .
Build URL from base .
Handles exception logging .
Create a response object .
Build a redirect response .
Create a JSON response .
Returns the authorization code for the client .
Refresh a refresh token .
Get a token from authorization code .
Get authorization code from URI .
Get a token from POST data .
Parse the Authorization header and validate it
Open the connection to the specified bus .
Read a byte from the device .
Read a number of bytes from the device .
Read byte data from a device .
Write bytes to the device .
Write byte data to the device .
Write an i2c block data to the device .
Creates a copy of this object .
Create a local copy of this CDN
Construct a File object from a dictionary .
Upload a file to the server .
Return a list of file CDN URLs for the file .
Construct a Group from a dictionary .
Create a new group .
Base method for the HTTP request .
Iterate over all file paths in the file .
Helper function for _list_class .
Prints a progress bar .
Get home mode status .
Get a list of available camera objects .
Get information about the camera .
Retrieve a camera snapshot .
Gets motion list .
Save camera parameters to a camera event file .
Update the current camera state .
returns True if li is last li
Yields the content of a single list .
Get value of w_namespace .
Get VXML merge element
Get the number of grid spans .
Return the td element at index
Return True if style is not False otherwise .
Return True if r is bold .
Return True if r is italic .
Return True if r is underlined .
Return True if the element is a title .
Yields HTML elements from a text run .
Takes a tree and returns a dictionary of tags .
Returns ordered list type
Build a table element .
Get the content of a t tag .
Strips all HTML tags from the tree .
Find a dataset
Load a pickled numpy file .
Plot a list of images .
Plot layer layers .
Plots the given filters .
Return a list of letters in txt .
Add convolution weights to the model .
Decodes the tensor with the given layer .
Compute the autoencoder score .
Predict the output of x .
Predict probability of x .
Return the logit for x .
Returns a list of variable names .
Compute the accuracy of the model .
Build an activation layer .
Randomly generate a n - dimensional n - dimensional n - dimensional n - grams .
Add a loss to the list
Train the model on the iterator .
Build the graph for all layers .
A list of all input layers .
Returns a list of variables that are not already used .
Saves the state to a file .
Load pickled model .
Compute the loss of the model .
Builds a graph of updates from the model .
The size of the output .
Resolve input shapes .
Resolves the shapes and outputs to the appropriate shape .
Log the state of the model .
Log the total number of parameters .
Format a string according to the name .
Returns the shape and output shape of a layer .
Find parameter by key .
Add a bias to the parameters .
Returns a dictionary representation of the model .
Returns the loggabor environment for a given position .
Loggabor of the image
Add a tier to this tier .
Remove a tier from this tier .
Get a tier by name .
Convert the list of tiers into an EAF file .
Add a point to this tier .
Add an interval to the list .
Remove the interval from the tier .
Remove a point from this tier
Get intervals .
Returns a list of all intervals of the tier .
Indent an element .
Add an annotation to the dataset .
Add a description to the vocabulary .
Add an external reference .
Add a new lexicon reference .
Add a linguistic type .
Add a locale .
Removes all time slots from self . tiers
Extracts the annotations from the EAF .
Generate a string representing an annotation id .
Generate a unique timestamp for timeslots .
Returns a list of child Tiers for the given id_tier .
Returns a tuple with the full time interval .
Get the reference annotation data after the given time tier .
Get the number of annotations before the given time tier .
Get a list of tier ids for a given ling_type .
Remove all annotations from the given tier .
Remove a description from the controlled vocabulary .
Remove a license .
Removes linked files from the media .
Remove a property from the definition
Remove a reference annotation from the id_tier .
Remove secondary linked file descriptors .
Remove a tier from this tier .
Remove all tiers from the cache
Rename a tier .
Shift the annotations to the given time .
Prints a debugging message to stderr .
Get embedding levels from text .
Apply explicit embed and override levels for explicit embedding levels .
Resolve neutral types .
Reverse contiguous sequences in a contiguous sequence .
Reorder all resolved strings in a dictionary .
Processes a file .
Add an attribute to an object .
Parse command line arguments .
Maintain backwards compatibility .
Show the current GUI .
Attempt to discover the GUI for PyBlish .
Add command to filemenu .
Context manager that ensures the current selection is maintained .
Context manager for maintaining the current time .
Shows a message box with no GUI .
Get cumulative data .
Returns a list of values for a single axis .
Draw a constant line .
Load the transform parameters .
Reverse the reverse of a mapping .
Generate a range of floats .
Add a conf to the list
Draw the graph and draw it .
Calculate the left margin for the label
Calculate the right margin of the right
Calculates the margin for the figure .
add a popup element
Calculates the bottom margin of the text
Draw the graph .
Makes a datapoint text element .
Draws the x - labels for the field .
Draw y - line y - label on the field .
Draws the xidelines on the plot .
Draw yidelines onto the graph .
Draw the title of the graph
Render inline styles .
Start svg .
Return a list of all the stylesheet resources for this class
Run a bot .
Send data to the socket .
Connect to the server .
Respond to the channel .
Dispatch regex patterns .
Generate a new nick .
Handle ping message .
Handle registered registration .
Read lines from the socket .
Register a connection to the bot .
Main task runner .
Return a tuple of regex patterns to use for the worker .
Called when registration is successful .
Execute a command on the server .
Add a worker .
Send email notification email to user s site .
Send password reset notification .
Verify token is valid .
Delete a user .
Override this method to allow POST requests .
Return a docker api client .
Get the TLS client certificate .
The service name .
Wrapper for docker - docker - docker API calls .
Execute a docker docker method .
Return the number of running tasks .
Stop this container .
Filter unique email addresses .
Update password with validated password .
Update password .
Validate email address .
Create a new user logged in .
Deletes an authorization token .
Check if user is logged in .
Handle POST requests .
Update the expiration date of the object .
Generate a context for password reset email .
Send an email notification .
Send password reset email .
Add email subject to notification .
Authenticate the request with the given key .
Make sure the user has expired .
Display a Bokeh notebook .
Replace callbacks with callback_commands .
Create a customJS callback for a change .
Returns a Widget for the specified parameter .
Render an object and return it .
Wrapper for django s textinput
Turn a list of objects into a namedtuple
Returns the owner of a given method .
Assign auth values .
Send a ping request .
Get information about the device .
Returns the status of the device .
Convert a number of bytes to a human readable string .
Returns the total number of cpu load and user .
Return the memory size in bytes .
Get the network number .
Returns a list of all volumes .
Get a volume by its id .
Returns the total number of bytes in the volume .
Returns the percentage of the used volume .
Returns the disk temp for a volume .
Returns the disk temp for the volume .
Get a disk .
Login to the API .
Execute a GET request and return the response .
Execute a GET request
Update the data from the API .
Get the utilisation of the API .
Storage object .
Creates a context for a given request .
Return tenant token .
Build the attributes of the widget .
Configures a set of installed apps .
Returns a copy of the settings without any of the installed apps .
Returns a dictionary of all the global settings .
Do a GET request .
Change the value of a section in the config file .
Migrate config file .
Start the HTTP server .
Wait for a response .
Get access information .
Ensure the token is present in the configkey .
Set access credentials .
Create a manifest table in the manifest
Split a full path into a bucket and a prefix .
Returns True if the given bucket is a glacier object .
Remove None values from dict .
Add a run id to the manifest
Returns True if the given run is in the manifest .
Extract schema from a URI .
Replace snake_case with snake_case .
Parse an unstructured schema into a tuple .
Transform a JSON string into JSON .
Convert event into JSON .
Get the used template for a given response .
Return a string representation of context .
Return a string representation of the variables in the context .
Convert SQL to HTML .
Return a string representation of an object .
Return a string representation of a dictionary summary .
Clean the text .
Format an object to a pretty printable string .
Format the object to the pretty printer .
Get a token from a string .
Get a list of nodes from a string .
Convert LaTeX content to text .
Convert LaTeX to text .
Convert unicode to ASCII .
Gets the organization information .
Returns a list of boards .
Method to get the members of the organization .
Update an organisation .
Removes a member from the server .
Adds a member by its identifier
Adds a member to the organization
Fetch list information .
Creates a new card .
Retrieves information about the device .
Fetches a list of items from the server .
Updates the name of the specified label
Helper method to update a label dict
Build the authorisation url .
Fetch card information .
Get a board .
Get a list from the server .
Returns a list of checklists .
Adds a comment to the pull request .
Adds an attachment to the client .
Creates a new checklist .
Adds a new label from a dict
Adds a new label from a class .
Adds a member to the group
Retrieves information about the organization member .
Get a list of cards .
Method to get organisations
Creates a new board .
Returns information about the board .
Get a list of lists .
Returns a list of labels .
Get a card by ID .
Returns a list of checklists .
Get a specific organization
Updates the board .
Adds a new list to the list .
Creates a new label .
Retrieves information about the checklist .
Get card information .
Returns a list of CheckItem objects
Updates a checklist
Adds a new item to the list .
Removes an item from the server .
Updates the name of the check
Updates the state of the checklist
Add authorization parameters to the query string .
Check for errors in response .
Build a URI from a path and query parameters .
Perform a GET request and return the response .
Create an organisation instance .
Create a board object .
Create a new label .
Create a new list .
Create a card object .
Create a new checklist .
Create a new member .
Get a single organization .
Get a board .
Get a list .
Get a card .
Get a checklist .
Get a single member .
Extract the domain from a URL .
Convert text to markuploid .
Set the password for a service .
Split text with given locations .
Mark regex in text .
Mark begin and end locations in text .
Run commandlinetil .
Create AES cipher using AES key .
Get cipher mode .
The priority function .
Ensure the scheme is correct .
Called when a publisher is received .
Generate a unique id for this column .
Connect to the MQTT server .
Handle connack error .
Encode a string into a bytearray .
Decodes a byte string into a two - byte string .
Encode a 16 - bit integer .
Convert a value to a length string .
Decodes the length of an encoded byte string into a length - value .
Encode the message header .
Encode this object as a string .
Decode a packet .
Encode the message .
Decode packet .
Decode a packet .
Encode this Access Token .
Encode the message .
Decode a packet .
Encode the message header .
Encode the message .
Decode a packet .
Decode a packet .
Build the URL to use .
Make a request to the API .
Refresh the comm .
Format the data into a numpy array .
Fit data to data
Fit k - means clustering
Predict classifier .
Map cluster clusters to cluster indices .
Sort the cluster by the given sort_by .
Return a string representation of a datetime .
Get the total number of points in a dictionary
Get the total time span of all data dictionaries .
Utility function for unit testing .
Return a string with the same element as a string .
convert analyte to a name
convert analyte name to massname
Collate all files in a directory .
Enumerate boolean array .
Convert a list of tuples into a boolean array .
Compute the smoothed version of the convolution function .
Compute the gradient of an array using a rolling gradient .
Find indices of elements in x between y and y .
Perform a cluster - shift clustering .
Cluster data with k - means clustering
Retrieve the set of unique SRMs defined in the file .
Read configuration from latoolscfg file .
return a configuration file and a configuration file
Copies a resource file to the specified destination .
Exclude a boolean filter out of a filter .
Plot the autorange plot .
Creates numpy arrays for each time step .
Returns the ratio of the analyzer .
Calibrate and calibrate the data
The dictionary of all translation times .
Calculate the correlation coefficient .
Add a new filter
Returns a dictionary of parameters for the model .
Plots histograms of the given data .
Load reference data .
Calculate molecular m
Generate keyword arguments .
Return a tuple of elements that are not in the stack .
Remove all elements from a stack .
Calculate the Gauss - weighted statistics .
Gaussian function
Return the standard deviation of an array .
Get a list of samples .
Calculate the ratio of the data .
Create a new subset of this sample .
Apply classifier .
Return the number of removed entries in the subset .
Filter the data for the given analyzer .
Export traces to a CSV file .
Save the log to a file .
Applies a function f to each element of a result .
Calculate the bayes scale of a string .
Rescale a median value
Apply noise on noise .
Apply exponential decoder to signal .
Add a filter to the model
Remove a parameter from the model .
Remove all of the components from the cache .
Remove all items that are not empty .
return the key matching fuzzkey
Grab a filter from a dictionary .
Get information about the component
Write log data to a file .
reads a log file and returns a dictionary of arguments
Get modem information .
Send email to modem .
Parse a file or file - like object .
Convert a nbviewer URL into a string .
Generate the thumbnail divider .
Returns a code div
The code example for the notebook .
URL of the file .
Get the final output file name .
create python file
Generate data_download string
Creates a thumbnail for the current image .
Scale an image .
Save the thumbnail to the given path .
Copy the thumbnail figure to the output file .
Return the URL for a given nbfile .
Yield the language code for a field .
Processes a thumbnail file .
Save the image to disk .
Return a list of thumbnails .
Create a new thumbnail image .
Delete the given size .
Create a thumbnail .
Get a thumbnail .
Delete a thumbnail .
Handle incoming messages .
Subscribe to the given number .
Returns a set of all accepted states .
Send a message .
Returns a dict mapping the receiver s blueprints .
Receive a message from the gateway .
Handle a status message .
Forward an object to all clients .
Signs a transaction using Web3 .
Estimate the gas of a web3 address using Web3 .
Estimate the amount of gas used by a safe method .
Write to file .
Read a line from the serial port .
Return True if message has bad headers .
Attach an attachment to this email .
Register new services .
Load a module from a module .
Register new resources .
Get a value from the configuration .
Internal method to handle the exception .
Sets up the service for this instance .
Calculate the Nth of the wavelength
Compute the Cauchy equation .
HTTP DELETE method .
Return True if two path objects are the same .
Creates a file on the filesystem .
Initialize the logger .
Handle an error message .
Claim a list of file readers .
Build a new column header from a vcf file .
Attempt to claim a VCF file for each variant .
Initialize population stats .
Claims the unclaimed file readers and their translations .
Split data into line terminator .
Returns the line terminator that starts with a line terminator .
Returns the suffix of a line terminator .
Seek to the next line terminator .
Seek to the previous line in the file .
Return the last num_ lines .
Get the head of the file .
Follow the next line .
Attempt to claim a Strelka file .
Parse a VCF record into a VCF record .
Get sample tag values for sample_names .
Return a set of tags for this sample .
Join info fields into a string .
Generate a format field .
Get the string field of a sample .
Return a string representation of the VCF record .
Add a sample tag value to this tag .
Add a filter to the list .
Returns a list of available category names .
Returns a form for the products form
Generate staff products form .
Add an error to the product .
Returns a form class for a model field .
Get pending items pending
Send an email .
Parse an OSM file and return a list of dictionaries .
Iterate through the OM notes .
Returns True if the user has the given condition .
Returns True if the given user is met .
Return the remaining quantity for a given user .
Filter out items that are in the given user .
Filter out items that are in the given user .
Pre - filter queryset .
Filter the queryset for a given user .
Filter the user s conditions .
Creates a new custom cart for the given user .
Helper method to update the reservation_duration attribute of the cart .
Apply a voucher code .
Fix invalid errors .
Recalculate discounts for the current product .
Iterate over rows of content_type .
Returns a valid form form .
Render the given data .
List all available reports .
Displays a summary of all items of the invoice .
View of all payments
Displays all credit note refunds
Display a list of product status .
Display a status report for the current discount
View for product line items .
View paid invoices by date .
Displays a report on the credit note .
Retrieves the invoices for the invoice .
Return a list of the attendees of the attendee file .
Display a list of speaker registrations .
Get the set of missing categories that are missing .
Get the credit notes available for the invoice .
Return True if ticket is sold out and unregistered .
Edit profile .
Handle a profile form .
Handles product items .
Handle a voucher form .
View for manual payment .
Refund the current invoice .
Extend a reserved reservation .
Send email notification .
Render invoices .
Render a badge .
Return a list of discounts that are available for the given user .
Annotate queryset with pastuses and product counts .
Returns a list of all available products .
Apply credit to an invoice
Calculate the cancellation fee for this credit note .
Generate access code .
Get an object from a module name .
Returns an invoice for the given cart
Generate a manual invoice invoice .
Apply credit notes to invoice
Return True if the invoice can view the given user .
Refresh invoice data from database
Check that all allowed to pay to pay to pay .
Updates the invoice status
Marks the invoice as paid .
Return True if invoice has the current cart .
Validate the invoice validity .
Mark the invoice as void .
Refund the invoice
Send an email to an invoice .
Update the object from the given data .
Flatten a field into a dictionary .
Print all of the downloads .
Download the specified field .
Get a specific processor name .
Print all of the processors for a particular processor .
loads data from the server
Upload fields to a project .
Upload a file
download a list of data objects
Get all subclasses of a given class .
Get the repo and project information .
Get a list of phenotypes with suggested changes .
Get evidence for each variant in the variant_ids list .
Updates the object with the specified fields
Remove duplicates from a sequence .
Authenticate with the given settings .
Prompt the user for a list .
Get issue data .
Move the issue data to the given namespace .
Get task data .
Get Asana task by ID .
Apply a key to the data
Flush all items from the queue .
Creates a missing task in the Asana workspace .
Return a list of all available data types in the project .
log a string to ekmmmeters
Initialize the serial port
Set the value of poll_sleep and wait_sleep .
Render a JSON read in a readable string .
Set the context of the model .
Calculate calcpf function .
Set the maximum demand period for the device
Set password .
Get the months buffer .
Assign a schedule to the schedule
Assign a season schedule to the schedule .
Assign holiday date to holiday .
Read scheduleset from the serial port .
Read months data .
Reads the days from the device .
helper function to read the settings
Write a command message to the server .
Send a password to the serial device
Update all observers .
Send a request to the server .
Request data from the device .
Request data from the device .
Replace all strings in the fields that are not in the correct order .
Set up lcd command
Set relay status .
Post end of the serial port .
Set pulseinput ratio .
Setter for Zerorek on device .
Set the password of the device
Iterate over fields in a dictionary .
Recursively iterate over schema .
Generate a random text string .
Returns a formatted string with the execution statistics .
Return a string with the given color .
Print text to stdout .
Return a string representation of the result .
Parse arguments .
Setup the result instance .
Load test results .
Transform a file using the given configuration .
Transform a describe node into an AST .
Transform the body of the describe body into a string .
Transform an example .
Transform an example body into a string .
Returns a callable that can be used to call this function .
Registers a path - hook to the system .
Transform source code to python code .
Apply an argument parser .
Load a module by name .
Load a module from a given path .
Scan a directory and yield all subdirectories found in the given path .
Remove a configuration file .
Restart a message
Wrapper around places .
Create a service object
Refresh session .
Remove expired nodes .
Remove a node from this node .
Get the last modified timestamp of a node .
Get all node IDs .
Refresh session .
Increment the number of times modified .
Split a list of tokens into a list .
Check if path is bad
Merges the given status .
Query the existence of a given value .
Get a matching value .
Creates a new TIMESTAMP service
Try to parse the parser and then parse the given parser .
Turn parser into an optional parser .
Return a repeatedonce parser .
Return a repeated parser .
Replace separator with separator .
Repse a parser with separator .
Close the stream .
Return a boolean indicating whether the URL is valid .
Make sure that a worker can be run on a server
Wrap a service into a master heartbeat
Freeze the graph from a checkpoint .
Freeze a checkpoint from a checkpoint .
Creates a tf . graph from a checkpoint .
Save weights from checkpoint .
Restore model from input checkpoint .
Parses the given parser and returns a parser instance .
Render the tag with the given arguments .
Validate arguments .
Get the context data .
Parse a tag from a given parser .
Get context data .
Convert caffe to TensorFlow session .
Freeze a caffe to a checkpoint .
Saves a tf . graph_only tf . save_graph to disk .
Takes a sequence and returns a list of rows .
Yields every item in iterable .
Remove duplicates from an iterable .
Peek an iterable .
Silently suppress callables .
Assert that an iterable is ordered .
Swap the two items after the last item .
Get the first n queues in the queue .
Reset the iterator to its original state .
Parse as_var and return as_var .
Return the descendant key as a public key .
Recursively iterate through an object and return it as a generator .
parse a string and return a boolean expression
Parse the given selector .
Return the parents of lhs in lhs
Return the siblings of lhs in lhs
Return a list of nodes matching the given validators .
Make a request body .
Expire all items in the cache
Set the value of a key in the cache .
Get the value of a key .
Returns True if k is in the cache .
Return True if the given timestamp is valid .
Creates a Key object from a JSON string .
Parse an XML string from an XML string .
Render the rendered content of the template
Apply fn to the log file .
Get all rows from the file .
Validate a token
Returns the encryption engine used to authenticate .
Validate token .
Create a JWT token .
Calculate counter - clockwise .
Calculate counter64 .
Return a string representing the duration in seconds .
Set up a list of sources
Send events to a specific source .
Stop the sourcewatch watchdog
Parse a format string .
Parse a line of text
Validates that the field s expiration is valid .
Ensure token is valid
Name of the browser .
Wrapper for _warn_node .
Connect receiver to receivers .
Create a secret link for the record .
Send an accept notification .
Send confirmed notifications to confirm .
Send an email validation notification .
Send a rejected notification .
Send a notification to the given template .
Create a new secret link .
Validate a token
Revoke this link .
Create a new request .
Get a record by receiver .
Confirm email .
Create a secret link
Create a sha512 hash .
Verify a signature .
Checks if the given record is already in the current time .
Handle access request .
Send email confirmation request .
Get a connection to the SSH server .
Return the reverse of a column
Get the selected value .
Returns a string representation of the selected items .
Get the version of the file .
Set the version of the MAR file
Start timer .
Tries to tick the service .
List secret link .
Stop the connection .
Empty events from queue .
Processes incoming events .
create an elasticsearch client
Encode a protobuf event .
Convert a list of events into a protobuf message .
Decode a protobuf message .
Send events to the socket .
Generate a file preview .
Retrieve a file preview .
Process message loop .
Returns a string representation of the log time .
Abort the session .
Replace the SASL mapping with the SASL .
Renders the admin footer .
Build the payment parameters for a given amount .
Build the payment parameters to register credit card .
pay with the given amount
Return the version number .
Called when the container is finished .
Configures the shortcut shortcuts .
Callback called when the item is activated .
Select an item to be selected .
Set the location of the mouse button .
Finalize the options for this object .
Fetch and return a list of unicode children .
Returns the icon for the given index
Runs a command with given arguments .
Get file descriptor .
Close a file descriptor .
Close open file descriptors .
Redirect to a stream .
Set the attributes of a form .
Imports a module into a module .
Import all submodules of a project .
Process an include node .
Check that the given path is a valid file system .
Check if the given URL is a valid S3 URL .
Get the absolute path to a template .
List all objects in the bucket .
Build the JSON for the task_template
Execute the update request
Archives the project archive .
Recursively create a directory .
List all project files matching pattern .
Restore the project to the given folder .
Creates a new ApiClient .
Returns a list of file names in the folder .
Download the signed URL to a file .
Returns True if the entity exists .
Get the parent entity of the given path .
Creates a folder at the given path .
Upload a local file to the server .
Delete a folder .
Validate the storage path .
Creates a new StorageClient .
Create a new Authorization Request .
Get metadata for an entity .
Delete project .
Delete a folder
Copies the content of a file to a destination file .
Get the signed URL of a file .
Emit a record .
Updates the configuration with the given service and version .
Sets the response headers .
Returns a new QuerySet with the given parameters .
Sets whether or not the exception should be thrown .
Return a list of fields to be displayed on the model .
Add a function to a job .
Run oncotator command
Sorts the list .
Returns a list of timestamps .
Load loadexport data into this object .
Shift the string bytearray .
Return the sum of all values in the sequence
Collect rfxcom .
Create a new user .
Parses vn results and returns a list of dictionaries
Parse release results .
Return a list of producers .
Parse character results .
Returns a list of tags found in the given soup .
Parses user results and returns a list of users .
Create a tarball from a list of files .
Perform operation on multiple files .
Copy a file to the given directory .
Return a list of docker_parameters to docker_parameters .
Refresh the metadata from the server .
Get all streams from the database .
Export the stream to a JSON file .
Parse search results .
Reset the apikey .
Get a list of users .
Run bwa index command
return a connection to the server
Add a stream to the database .
Add a stream to the database .
Inserts a value into the database .
Start the monitor .
Stop recording .
Download a URL to a file .
Upload a file to S3
Print the labels of the ontology .
Print the hierarchy of the ontology .
Get the size of a bam insert .
Creates a new resource in the database
Export the data to a JSON file .
Return a device object representing the device .
Get labels for an ontology
Get the hierarchy of an ontology .
Get an empty config .
Return a path to the mount path
Add an option to an arg_parser .
Create an argument parser .
Create a command for the pipeline .
Set authentication for a user .
Handle authentication errors .
Ping the server .
Create a crud .
Update a crud .
Deletes a path .
Subscribe to a stream .
Get a list of devices .
Runs cutadapt on the input r1 and r2 .
Run samtools faidx faidx
Run samtools index on a bam file .
Run DAM markDuplicate on a bam file .
run samblaster
Mark duplicate duplicates in a BAM file .
Run Picard sort on a bam file .
Run kallisto .
Get the affinity of a test test .
Send a command to the websocket .
Subscribe to a stream .
Connect to the server .
Reconnect to the device .
Resubscribe from all subscribed subscriptions .
Called when the connection is opened .
Called when the connection is closed .
Called when an error is received .
Called when a message is received .
Ensure that the connection is alive .
Use GATK to select variants from a GATK file .
Run fastcheck on a bam file
Write the configuration to a JSON file .
Get the configuration as a dictionary .
Fetch a term from the ontology
Search ontology by name .
Suggest a suggestion for a given name .
Iterate over the terms of an ontology .
Iterate over the labels of an ontology .
Iterate over the labels of a given ontology .
Iterate the terms of a given ontology .
Run a fastqc command from a fastqc file .
add a stream to the query
Starts the container if it exists .
Start a job on the HDFS
Starts a single HDU node in the container
Stop Spark container .
Check the status of the container
Look up a zone by name .
Fetch DNS information for a given zone .
Merge R53 configs into a single xml .
Validate a changeset .
Reduce the members to the highest fitness score .
Returns the fitness of the group .
Return the average cost function of the group
Return the median cost function of the group .
Returns a dictionary containing the parameters of the model .
Returns a list of member names .
Add a parameter .
Normalize keys to be strings .
Get a list of environment variables .
Call a given callable with the given exceptions .
Transform a list of hits into a package list .
Transform result to unicode .
Convert html to xhtml
Convert xhtml to HTML
Open a document in a web browser .
Drop the tree from the tree .
Drop this tag from the previous tag .
Apply cssselect to this element .
Iterate over the member names of a logger .
Get a dictionary of counts for each environment variable .
Returns True if the class is a single class .
Returns True if the module is a single class .
Ensure that the request is a list of strings .
Ensure that a request id is valid .
Decode a file system path .
Escape arguments in an iterable .
Get codec name for encoding .
Detect the encoding of the stream .
Get a remote address from a forwarded_for message .
Convert an amount to a number .
Create a BeautifulSoup from string data .
Parse an XML file and return an ElementTree .
Convert a BeautifulSoup tree to HTML .
Get current traceback .
Return a string representation of the exception .
Render a summary as a string .
Generate a plaintext traceback from the error .
Render source as HTML .
Returns a string matching the search_name .
Sort a list of links into eggs .
Get the content type of a URL .
Yields all URLs in the resource .
Return True if the signature is verifiable False otherwise .
Find all data files in a package .
Exclude files from exclude_package_data .
Parse a requirements file .
Join a list of strings into a single line .
Remove comments from an iterable .
Visitor for ast node .
visit an attribute node
Convert a string into a number .
Push the context onto the stack .
Pop a context from the stack .
Return a copy of the app .
Match request .
Push the current context to the stack .
Return True if dist is editable .
Add a URL value preprocessor function .
Add a URL default function .
Get the root path of an import .
Jinja template loader
Run the completion script .
Return the cookie domain of the cookie .
Checks if the given name is a pure library .
Yield paths to uninstallation .
Raise an exception if the version is not valid .
Build a wheel .
Iterate over the names of a code object .
Write the delete marker file to a directory .
Return True if we are running in a virtualenv .
Get username .
Return a distutils scheme for dist_name .
Parse the Content - Control - Control header .
Cache the response .
Load a template from a template .
Save changes to file .
Convert value to string .
Add a list of filters to the configuration .
Add handlers to a logger .
Set common logger configuration .
Execute a file .
Temporarily override temporary directory .
Return the url and revision of the url .
Get a value from an object .
Generate text file from source .
Get the default cache file name .
Find eggs in a zip archive .
Find distribution on a path .
Create a namespace for the given package .
Get mro from a class .
Find an adapter for the given ob .
Ensure directory exists .
Iterate through all entry points in a group .
Return True if dist can be added to this distribution .
Evaluate a marker .
Evaluate a Marker library .
Format a log record .
Get the decimal value of a given precision .
Returns the decimal precision of a number .
Compute scientific notation for scientific notation .
Retrieves a class that is not patched .
Check the requirements of a requirement .
Fetch a build egg .
Do a dice roll .
Convert an object to a string .
Validate a price instance .
Validate the request .
Get a Flask method from the given args .
Apply a function to arguments .
The module that this module is registered for .
Get the blueprint endpoint for this route .
Return whether a requirement is an abstract or not .
Walk through all requirements to install .
Return a list of all namespace packages .
Encode the object as JSON .
Tokenize an annotation .
Merge the annotations between two strings .
Copy annotations from src to dest .
Compress a list of tokens .
Serialize a sequence of tokens into HTML .
Turn a list of tokens into HTML .
Find the index of the unbalanced string in unbalanced_delete .
Convert a list of chunks into HTML tags .
Flattens an etree element and returns it as a generator .
Split text into a list of words .
Return start tag as string .
Return end tag from tag .
Serialize an HTML fragment .
Remove all tags inside a block .
Generate a cache url for this service .
Recursively truncate all children of an element .
Kill conditional comments .
Parse a string and return a HTML document .
Export the current revision to a given location .
Get the revision number .
The name of the module .
Returns a tuple containing the configuration of the exception .
Automatically find instance path .
Update the template context with the given template .
Handle an HTTP exception .
Handle the given exception .
Raise the appropriate routing exception .
Perform the actual dispatch request .
Create a default OPTIONS response .
Create url adapter .
Inject URL defaults into the given endpoint .
Return the unique value of iterable .
Handle any types that are present in a package .
Convert a requirement to a requirements string .
Convert a pkginfo file to a metadata dict .
Iterate over all loaded modules .
Returns a list of all classes in the module .
Returns a list of all method names in the class .
Return True if path is a module path .
Walks a base directory and returns root dirs and files .
Dump args to kwargs
Load the default arguments for the given kwargs .
Set multiple keys in a mapping .
Increment the value of key by delta .
Dump an object to a string .
Build a dictionary of editable options .
Populates the link to the link .
Ensure that a source directory has source_dir .
Remove temporary source .
Get the distribution for this project .
Return a list of config directories for the specified app .
Iterate over all module files in the current module .
Restart the process with the given arguments .
Convert a string to plain text .
Find a CA bundle .
Parse an HTML document .
Parse an HTML document and return a DOM document .
Parse the fragment into a string .
Return a list of dictionaries describing the given word .
convert argstokens into a list of strings
Bind to the server .
Prints the report to stdout .
Load the bytecode from a file .
Add stylesheet parameters to a dict .
Run a subprocess command .
Get the impl version .
Return a list of distros for the given basename .
Find external links in a page .
Open a local file or directory .
Return a list of ui paths removed from sys . path
Return a set of paths in sys . path .
Add package to sitedir .
Add package to sys . path .
Check if user is enabled .
Add codecs to the aliases .
Set default encoding .
Force global eggs after local site packages after local site packages .
Fixes sys . path . path . path .
Run a subprocess .
Return True if pyrex is available .
Convert pyx . sources into a list of Python sources .
Run the application .
Get a file from the server .
Return True if name is a valid URL .
Unpack a link into a location .
Download a HTTP URL .
Check if a link exists .
Registers a currency .
Register a service exchange .
Decode data .
Return a dict with a template context .
Render a Jinja2 template .
Render a Jinja template .
Renders a template string using Jinja2 .
Attempt to parse a version string .
Checks if the given name is declared in this module .
Visit a variable .
Visit fromimport node .
Create a HTTPServer .
URLencodes an object using the given charset .
Return a list of wheels that match a requirement .
Populates a requirement set with the given arguments .
Export the package to a temporary location .
Lookup an item .
Iterate over pages .
The ancestor of this node .
Return a list of child nodes .
Safely get an element from a path .
Get the text of an element .
Safely get the value of an element at path .
Get price and currency .
Get price list .
Send a cached response .
Build a response .
Capitalize a string
Compare two strings .
Verify the signature of the given value .
Derives the key from the key .
Get the signature for the given value .
Sign a value .
Verify the signature of the given value .
Unsign a signed value
Sign a value .
Validate signed value .
Serialize an object to a string .
Format a server error .
Ensure all packages are parents .
Return a list of all subdirectories in a directory .
Prepare a HTTP response .
Unsign a zipfile
Unpack a whelfile .
Installs a setuptools command for each distribution .
Assemble all nodes in the graph
Return a new canvas for this plot .
get a node by id
Called when a directed connection has changed .
Memorizes the edges of an object .
Called when a component has changed .
Handle a left click event .
Called when the diagram canvas has changed .
Clear the canvas .
Called when a domain model has changed .
Remove all nodes from the map
Parses an element and adds it to the GUI .
Parse the dot output
Process font .
Process ellipse .
Process a polygon .
Process a polyline .
Process text .
Process image .
Render a grid file .
Save an object to a file .
Load the DOT file .
Checks if a given point is in the grid
Draw the bounding box .
Open the dotgraph wizard .
Create a new connection to the database .
Parse the dot code and update the model graph
Initialize a new model .
Open a file dialog .
Save the model to file .
Save model to file .
Configure the model
Configure nodes on the control interface
Configure edges .
Show the info about the bot .
Add a node to the graph .
Add an edge .
Add a subgraph to the control flow .
Create a cluster .
Request a graph from the graph .
Updates the options of the gtk .
Configure dot code .
Prompt user to exit .
Move components to origin .
Save the object to a file - like object .
Load data from a file - like object .
Save the image to a file .
Load from file .
Creates an alias for the given object .
Parse a text file .
List of startwords .
Add a new chain to the graph .
Remove a chain .
Build a chain from source code .
Create a temporary directory and save it to disk .
Delete a node from the graph .
Get node with given id
Delete an edge from the graph .
Add a subgraph to the graph .
Called when a program has been changed .
Set the list of nodes in the graph .
Parse a DOT file and return a graph object
Parse a DOT file .
Build a top graph from the given tokens .
Return the units and multiplier for a given number of seconds .
Format a duration in seconds .
Change the name of the editor
Create a ui widget
Generate a list of strings from an iterable .
Get the children of an object as a list .
Append a child to an object .
Insert a child into an object .
Deletes the child from the object .
Called when a listener has been removed .
Called when a listener has changed .
Get the label for an object .
Set the label of an object .
Called when the label has changed .
Initialize self .
Update editor .
Add listeners to the node
Replace old nodes with new ones .
Called when a node has changed .
Add nodes to the graph .
Replace the edges in an object .
Called when the object has changed .
Add the edges to the graph .
Parse a xdot directive .
Called when a drawing is done .
Return a Node instance for the given row factory .
Return an edge .
Initialize mongoengine proxy .
Parses the drawing directive .
Parse a label directive .
Called when drawing is done .
Handle position change .
Called when the component is changed .
handle down right down event
Print style information .
Draw the main layer .
Returns true if the given point is inside the given point .
Draw the main layer .
Handle an event .
Run the loop .
Get full page url .
Return HTML for the previous and next page .
Generate HTML for the current page .
Create URL identifier .
Discovers the modules in a directory .
Find all modules in a directory .
Lists all the modules in a module .
Ensure a directory exists .
Put text into blob .
Checks the validity of a given card number .
Load a Python module .
Add a path to the list .
Find a module by its name .
Split a line into a list of strings .
Remove all namespace elements from the document tree .
Return a consistency message indicating whether the version is consistent .
Create a new instance from a dictionary .
Merges the given dict with new actions .
Run all registered actions .
Add details to the request .
Emit a record .
Add image rendition to context
Record the number of attempts to be logged in .
Add url to queue .
Starts worker processes .
Set a value in kvstore .
Get a value from kvstore
Recursive function to get a list of dictionaries .
Returns an index for a given key .
Delete an object from the kvstore .
Plots a heatmap for each feature in a cluster .
Add months to a timestamp .
Add months to a date .
Return True if the current period is a period .
Use a music service .
Use a storage service .
Load data from CSV file .
Extracts a list from a JSON file .
Write x and y to a JSON file .
Filter x and y values by label .
mean average of the values in x y
Restore the data stored in this object .
Merge two dicts .
Iterate through all installed apps and import them .
Verify that the block is valid .
Register a block
Unregisters a block .
Convert ffmpeg to mp3 .
Return a string suitable for a reasonable version .
Handle SSL redirect .
Parse a content type string into a datastructures .
Parses a string into a list .
Resize the given image to the desired width .
download a url
Establish a new connection to the server .
Upload a file to the server
Connect to the music folder
Updates the filenames of the input file .
Read aphi values from file .
Scale the aphi to a_phi parameter .
Read pure water absorption from file .
Read the pure water scattering from a file .
Interpolate the spectrum in a file .
Write iop to file .
Build the b .
calculate A
build the c and b
Build all of the IPA files .
Set parameters from parameters .
Read a parameter file to a dictionary .
Convert a string to a list of floats .
Registers a signal handler .
Handles a pseudo signal .
The default handler for signals .
Pauses the specified signal .
Abort the child process .
Handles the status call .
Unregisters an event .
Returns a sorted list of dictionaries sorted by number .
Extracts a signature from a function .
Initialize a partial from a partial .
Add new arguments to the parser .
Determine if a file should be ignored .
Format a file name into a key .
Convert vlq to int
parse the header of the archive
Convert seconds into a duration string .
Print the details of the game .
Read data from the UI .
Open search file dialog .
Write the BatchData to a file .
Perform the actual data processing
Displays the connection to the screen .
Display the error message .
Hides the error message .
Run the batch .
Cancel the planarrays .
Quit the application .
Save current figure to file .
Open log file .
Open the documentation in the current working directory .
Setup required actions .
Handle click .
Handle mouse move event .
Set the mouse target to the specified location .
Return a lockset for the given genesis block .
Sign this message .
Return a SHA1 hash of this message .
Return a bool indicating if the set has noquorum .
Issue funds to the given sender .
Get the lock for the current round .
Returns the proposal proposal for the last block .
Last valid lockset .
Get timeout value for current roundtrip .
Called when a handshake is received .
Generate a list of private keys .
Calculate the delay between receiver and receiver .
Deliver packet .
Returns the native contract class corresponding to the given address .
Update the list with the given data
Convert vgg data into a numpy array .
Convert an image to VGG .
Get f layer .
Get layer output .
Get the features and outputs for a given layer .
Create a base64 - encoded key file .
Finish the analysis .
Release memory .
List of table names .
Add flags to the compiler if any .
Find the TTER metadata home directory .
Get a configuration value .
Set a configuration value
Print a table
Write default configuration to file .
Filter columns .
Return a string representation of the data .
Return a float with the given multiplier .
Extracts the specific gain from the string .
Convert a string of device settings into a dictionary .
Wrap text with given indent .
Use Simples to detect devices .
Set the center frequency .
Compute the PSD and PWR .
Wait for the PSD state to complete .
Update the PSD state with the PSD .
Read header data from file .
Write the PWR array to file .
Submit a function to work_queue .
Return the number of times to repeat in the given bins .
Create a buffer for the audio file .
Sets up the FFT buffer .
Stop playback .
Run cmake .
Return a list of datetimes that start with the given datetimes .
Return a modified version of dt .
Return a datetime . datetime . datetime . datetime . datetime . datetime .
Convert datetimes to delete
Given a list of dates return a set of dates .
Get dates to delete .
Get SPI control byte .
Read a single bit value .
Write a boolean value to the specified address .
Get the bit number of a given bit pattern .
Put the specified gpio interrupt into the user s account .
Write a file - like object to a file - like object .
Wait until file exists .
Register a pin function .
De - register a pin .
Enable GPIO interrupt interrupts .
Send data to the device .
Render the form .
Return True if any of the errors in the form are valid .
Render a link to the form .
Get the version of a package .
Add form to the form .
Check the status of the HTTP response .
Perform a GET request .
Calculate humidity from temperature .
Calculate the dewpoint from temperature and temperature .
Send the request to the server .
Calculate CRC for given data .
Verify integrity of data
Unpack a Storm date into a string .
Return whether or not the archive is archived .
wake up the port
Run a command .
Get the fields of the archive
Parse archive fields .
Update weather info for station .
Initialize the logging module .
Get a list of site services from the opts
Get the value of the segment for the specified interval .
Set properties of weather data .
Set the command line arguments .
Publish the configuration to a file .
Returns True if all requirements are satisfied by this instance .
Push a context onto the stack .
Removes a context from the context stack .
Override the current context .
Push a context onto the stack .
Removes the current context from the stack .
Add a string to the current context .
Unduplicate field names .
Interpret results from a stats object .
Extract params from query string .
Get a pandas dataframe .
Get a networkx graph representing the results .
Plot the data .
Return a CSV representation of the table .
Returns a dictionary with the boolean value of the widget .
Returns a list of widgets sorted by position .
Returns a list of all widgets that need update
Register a widget .
Unregisters given widget_cls
Returns the last update of the dashboardwidget .
Save a setting for this dashboard
Returns True if the model should be updated False otherwise .
Concatenate multiple arrays .
Helper function to check if arguments are of type Spark .
Helper function to format axes .
Wrapper around SparkArray .
Align this array to the given axes .
Convert to Spark .
Return the tangent of the tensor .
Get the number of chunks in a plan .
Get a boolean mask from indices .
Repartition this RDD .
Return a copy of this RDD .
Align self to the given axis .
Return the first item in the RDD .
Return the mean of an axis .
Calculate the variance of an axis .
Returns the standard deviation of the DataFrame .
Sum the values along axis .
Returns the maximum value of the series along an axis .
Returns the minimum value of the Series along an axis .
Transpose self along axis .
Swap two axes .
Reshapes the array to new shape .
Reshape the array to a new shape .
Cast this RDD to a given dtype .
Clip each element in this RDD to a new range .
Convert the RDD to a numpy array .
Convert argument to a tuple .
Pack an argument into a tuple .
Ensure shape is correct .
Return True if two arrays are equal .
Convert a list into a list of integers .
Make a slice from an input slice .
Check that two dictionaries are transposeable .
Raise ValueError if new is not equal to old .
Concatenate multiple values into a single string .
Takes an array and an optional extra dimensions along with extra dimensions .
Lookup a constructor by name .
Return a new numpy . ndarray .
Create a new numpy array with zeros .
Concatenate multiple arrays along an axis .
Compute the discrete likelihood .
Calculate the most likely alpha value of the data .
Calculate discrete alpha for discrete data .
Calculate the best alpha of the data
Plot a p - f function .
Calculate the log likelihood .
Sanitizes the given HTML .
Add analytics to yandex .
Returns a list of tags and a list of strings .
Return MD5 hash of the key .
Return a SHA256 hash of the key .
Generate a SHA512 hash .
Parse a long integer .
Decode a base64 encoded public key .
Processes an SSH - RSAP RSA key .
Processes a SSH DSS ciphertext .
Process ECDSA SHA1 SHA256 .
Process an ED25516 16 bit field .
Parse a key .
A list of available mechanisms .
Runs the command line tool .
Initialize setuptools .
Context manager for creating a file .
Return the HTML for the static HTML for the Django frontend .
Apply djfrontend to djfrontend .
Format the djfrontend_fontesome_default_default_url
Format a Django frontend template .
Format Django frontend Jupyter notebooks .
Format django jqueryui .
Format the datatables for django . datatables .
Return the HTML for the Django frontend dataset .
Format the datatables for django . datatables_datatables .
Format django - frontend_jquery_jquery_jquery .
Return the jquery_scrollto_default_scrollto_default_default template for django
Generate HTML for jquery_smooth scrollbar .
Return the CSS for the Django frontend URL .
Return the user s account name .
Generate a hash for a user .
Calculate expiration time .
Get a user token .
Serialize user data .
Update a user .
Called when user login failed .
Validate a user against the auth hash .
Check if the request is secure .
Get username .
Create a new user .
Perform a login .
Log out a user .
Log in to the API .
Authenticate with the server .
Returns a valid user token for a user .
Handle a forgotten password
Reset the user password .
Recursively merge two dicts .
Get the id of an object or model instance .
Given a list of object ids return a dict mapping ids to their ids .
Get the object id for a given meteor_id .
Given a list of meteor_ids return a dict of object ids .
Get an object matching the given meteor_id .
Set the default forwards for the given operation .
Set the default bearer ID for a model operation .
Delete the entire database for the given app .
Recursively truncate the database .
Initialize the options .
Finalize the options of the command .
Convert a list of path arguments to a directory .
Randomly seed the sequence .
Return a dictionary representation of the current state .
Returns a random string .
Get all api endpoints for an object .
Clear the API path map for all API providers .
Pretty print function .
Initialize websocket connection .
Called when the connection is closed .
Called when a DDP message is received .
Generate frames from a UDP message .
Dispatch a dp message .
Dispatch a message .
Receive a connection .
Receive a ping .
Receive a sub subscription .
Receive a unsub message .
Send a method to the server .
Yield info about the socket .
Entry point for the Django server .
Print msg if verbosity is too long .
Stop all server threads .
Start the worker thread .
Run the server .
Patch all strings to be printed .
Generate a random meteor id .
Shortcut for autodiscover_modules .
Return the error as a dict .
Get an object by name .
Emit a record .
Add a new route to a resource .
Send a message .
Sends a notification to the APNS server .
Fetch inactive IDs from APNS .
Send a GcmM message .
Sends a bulk email to the specified registration_ids .
Send a JSON response .
Send data to the API .
Get model from module_location .
Search for giphy search .
Translate a giphy giphy giphy word .
Get a list of the most recent popular tweets .
Get a string representation of a GIF .
Get a screensaver .
Upload data to a file .
Convert data to integers .
Fetch data from API .
Return a generator that iterates over the giphy image .
Fetch a giphy image
Uploads the given tags to Giphy .
Turn access control into a media extension .
Authenticate the user .
Upload a video entry .
Check the status of a video .
Updates a video entry .
Delete a video .
Check if a video is available
Show the status of a video .
Render a list of videos .
Upload a video via HTTP POST .
Upload a video .
Redirect to django . upload
Deletes a video .
Get a video .
Update the video .
Delete a video .
Updates the properties of this container .
Updates a metadata field .
Update attributes .
Deserialize a string representation of the given XML string .
Convert a list of trees into a string .
Load data from a file - like object .
Load data from a file .
Parse a node into a Node .
Create a new Node .
Return a string containing the newick .
Get the node with the given label
Prune the given leaves .
Removes internal names .
Removes leaf names from this node .
Takes a string and a list of strings and a comma separated string and cleans up it .
Raise an exception if the given setting does not exist .
Get a list of arguments from the request .
Turn a callback into an asynchronous callable .
Get cookie value .
Clear cookie .
Redirect to the user s authentication endpoint .
Get the authenticated user .
Construct OAuth request parameters .
Perform authorization redirect using OAuth .
Concatenate url with given arguments .
Parse a header line .
Add a new value to the request .
Get a value as a list .
Parse a line of text .
Parse HTTP headers .
Normalize header name .
Return a unicode representation of a string .
Convert value to unicode .
Convert a string to a bytes object .
Recursively convert a python object to unicode .
Runs all plugins that are in the given app .
Select policy based on request and request method .
Calculate the occupancy of a grid .
Write a ROI file containing atoms and box .
Write a PDB file to a PDB file .
Determine the number of molecules .
Resize a pbc component .
Iterate over all lines in a file .
Writes a message to a user .
Send a message to users .
Get all messages for a user .
Add log messages to the response .
Check config file and update config data .
Verify that the given profile name is valid .
Retrieve data from a config message .
Extracts password from a message .
Update config data from a protobuf message .
Update the pwd of a message .
create a config profile
Print the required items of a message .
Get data from a given type .
Get authentication information from user .
Write JSON profile data .
Writes data to the specified profile .
Write authentication information to a config file .
Send the request to the server .
Return a message type .
Validate input .
Check that the given attribute is valid .
check for slack post post validation
Check if the value is a valid value .
Coroutine to send messages to the client .
Add a message to the coroutine .
Read the body of a file .
Remove all arguments from a dictionary .
Send a message .
Get chat id
Send the content to the server .
Build and send the message .
Get a SMTP server for a given address .
Generate email .
Add header to message .
Attach a body to the message .
Add attachments to the message .
Get a session object .
Get an SSL connection .
Create a TLS session .
Sends the email .
Save the tag to a file .
Unload an image
Get a region of the given pixels .
Return a string representation of the configuration .
Clears the internal list .
Read data from the file .
Deletes the chunk .
Resize the file .
Insert a chunk into the file .
Save ID3v2 .
Deletes the specified file .
Parse a file - like object .
Processes a line from a normal line .
Add a source block to the file .
Draw a string on a given font .
Parse ISO 8601 time string into a datetime object .
Turn a list of words into an html string .
Make a valid HTML word from a word .
Converts a list of words into a HTML paragraph .
Turn a list of strings into a single html code .
Turn a list of HTML items into a string .
Save the metadata to a file .
Update parent atomically .
Run the game .
Register a mapping .
Get the vendor ID for a controller .
Create a HMAC - SHA - 64 - encoded string .
Generate request headers .
Send a GET request .
Sends a POST request .
Send a DELETE request .
Convert value to string .
Helper method to update a resource record set .
Total packet size .
Find the last page with the given serial number .
Set a section .
Add markup to document .
Processes the given HTML content .
Return the markup for the given tag_name .
Create a hosted zone writer .
Lock a file .
Insert a number of bytes into a file .
Delete a file - like object from a file - like object .
Convert bytes to str .
Add a change .
Parses the e_change_info element and returns it as a dictionary
Measure the width of a string
Returns a boolean indicating whether the model has changed .
Deletes this resource record .
Save this record to the hosted zone .
Read a number of bytes from the file .
Deletes all keys matching the key .
Add a frame to the frame .
Update all apics in the list
Unload Sound .
Set the loop point points .
Split the adobe glyph values into a list of glyphs .
Filter a list of glyph names based on a filter .
Write encoding_list to file .
Dump the array to a file .
Check if a file exists .
Create a list of file paths from a list of paths .
Parse a hosted zone tag into a dict
Parse a delegation set .
Convert a list of blocks into a string .
Group padding blocks .
Deletes metadata blocks from the file .
Save metadata to file .
Parses an rrrset alias .
Parse rrrset record values .
Parse a Route53 Route53 record into a dict .
Adds a record to this zone .
Create a record in this dataset .
Create a new DNS record .
Add a pointer record to the resource recordset .
Add a SPF record to this resource .
Create a new srv resource record .
Returns a dictionary of values for a change .
Writes a change element into XML .
Write a change record set to XML .
Initialize log file .
Return an alias for a given alias .
Freeze a dictionary .
Join a dictionary of attributes into a single string .
Initialize the given app .
Initialize the bars .
Bind bar .
Return a dict with the args as a dictionary .
Returns True if the current request is currently active False otherwise .
Validate metric_class .
Get a statistic by name
Calculates statistics for a given stat
Auto - discover installed modules .
Returns a CSV representation of the metric .
Handle maintenance events .
Get a GET request .
Get a GET request variable .
Get the next colour in the geckoboard .
Get parameters from gecko request .
Displays the number widget for the number of days .
Displays metrics for geckoboard .
Generate a line chart for a given number of days .
Return metrics for geckoboard .
Displays metrics for geckoboard .
Returns a list of gadgets that are not in gadgets .
Register gadgets .
Returns a dictionary with the context data .
Print error message .
Get a long string from a string .
Display a list of strings .
Prompt user for a file - like object .
Returns a DataFrame of the Schedule for the given year .
Returns the winner of the game .
Returns the season s season number .
The surface surface data .
Get coin_toss value
Return weather information as dict .
Returns information about the current object
Returns a DataFrame of statistical information about the athlete .
Returns a pandas DataFrame with the standings of the team .
Returns a DataFrame of the team stats .
Returns a DataFrame containing the currently voting .
Returns a DataFrame containing the lines of the text .
Get the current season number .
Returns a DataFrame of the player stats .
Return a unique key for a class instance .
Returns the person s age .
Returns a pandas DataFrame with the given table_id .
Get stats per game .
Get stats table .
Return stats table as a string .
Get stats table .
Get extended stats table .
Get stats table .
Create a stats table .
Returns a DataFrame of the basic stats for a particular year .
Get a value from the session
Expand detailed details into a DataFrame .
Add team and opperities to features .
Add features to dataframe .
Calculates the initial win probability for a given line .
Return a DataFrame with the passed parameters .
Retrieve the number of awards for a given award_id .
Returns the team s name .
Returns a list of box scores for the given year .
Get pq value for a given year .
Get a list of the head - level team IDs for the given year .
Returns a DataFrame containing the schedule for the given year .
Return the coordinate for the given year .
Returns the coordinate for the given year .
Returns the URL of the football team for a given year .
Get the name of the scheme from the year .
Returns the alignment for the given year .
Returns a DataFrame of splits for the given year .
Get the html from a url .
Directly put a buffer into the queue .
Directly read the queue .
close the read queue
Get a batch of data from a HDF5 file .
Get the remainder of a file
Return a generator that yields rows from the queue at path .
Parse a file - like object or file - like object .
Write a list of objects to a file - like object .
Read a varint from the file .
Return a generator of strings .
Close the file .
Write pb2_obj to buffer .
Flush all output buffers .
Get the path to the game directory .
Input text with keyboard escape sequences .
Evaluate all traits in the model .
Wait until the condition is met
Waits until the element is present in the timeout .
Add ignored exceptions to this message .
Execute a logical volume command .
Execute the specified operator and return the result .
Send a message .
Get the status of the device .
Power off .
Power on the device .
Set the volume .
Check if a source has changed .
Obfuscate a request s url .
Calculate CRC32 CRC32 .
Obfuscate an obfuscated value .
Remove missing schema from song_name .
returns a list of all href and name
Checks if the song name is valid .
Parse a song and return a href .
Generate a URL for a song .
Parses the download url and returns the url
Download and parse a song URL .
get html response
Download a file using requests .
download a file using wget
Returns a list of station codes by city
Get the observation of a location
Parses a response from a server response
Returns a list of compiled compiler extensions .
The mimetype of the file extension .
Get the most recent compiled compiler mimetype .
Return the compiler format extension .
Register a processor for a given mimetype .
Unregisters a processor for a given mimetype .
Return a list of paths to find .
Register default values for all formats .
Imports qtcore from the Python interpreter .
Get the netnode for the ids
Add plugin name to netnode .
Deletes a plugin with the given name
Import settings from settings file .
Export settings to a file .
Absolute path to the config directory .
Iterate over all the keys in the database .
Convert exception to a json response .
Get information about a DynamoDB table .
Return a list of DynamoDB tables .
Fetch items from a given category
Get the metadata id for the given item .
Get the timestamp that was updated on the given item .
Fetch the crate owner team .
Fetch the crate owner user .
Fetches a crate s versions .
Fetch the crate version downloads .
Get a list of crates .
Get a crate by id
Fetch data from the API .
Fetch items from the database .
Fetch questions .
Fetch events from the database .
Return the timestamp of the metadata updated timestamp of an item .
Determine the category of item .
Fetch raw items from remo .
Return a list of buffer names .
The priority of the device .
Release a connection to the server .
Submit a list of blocks to the pool .
Cancel a block .
Cancel all submitted blocks .
Fetch a list of items .
Get the raw cells from the API .
parse the feed
Return a list of formats for the given pid_type .
Return the permission factory .
Default view method for a record .
Export a record .
Call a callable with the given arguments .
Close the socket .
Remove a client .
Increment the metric counter .
Send a timing metric .
Record timing information since start_time .
Sends a gauge with the given name .
Updates gauge delta with given delta .
Set the value of a metric .
Send a request to the server .
Create a batch client .
Get a unit client .
Flush all pending batches .
Create a TCP batch client .
Flush all pending batches .
Get a TCP client .
Creates a user with given permissions and permissions .
Convert an object into an Openmath math object .
Convert a term into an Openmath term .
Convert an OMObject to a native Python object .
Convert an object to an Openmath representation .
Initialize the Flask app .
Return valid choices .
Create a value based on the field type .
Apply any form fields to the form .
Return string representation of decimal field .
Return email field data .
Generates a string representing a date .
Returns a string representation of a datetime field .
Return a string representation of a field .
Returns a string representation of the integer field .
Generate a time field .
Generate a random string of field choices .
Generate a string representation of a field .
Return a random string of the given queryset .
Encode a Python object as bytes .
Publish the build and tag it
Tag the build
Load a global variable .
Decode a byte string .
Convert a value to a fixed number .
Formats a number using the given kwargs .
Convert blosc data to numpy array .
Pack an array into a bytes object .
Add a value to the configuration file
Remove a configuration value .
return a list of all the Ws
Get a specific ws .
Checks if a repository exists in the workspace .
Sync the configuration of the ws
Clone a repository .
return the version of the url
Convert a numpy array to a list of voxels .
Convert a list of voxels into a NumPy array .
Execute the command .
Update a repository .
Add console handler .
Execute a command in a subprocess .
Load png file .
Save numpy arrays to file .
Print status of a workspace .
Print status of a repository .
Get the block size .
Post a cutout of the data .
Load image from file .
Save numpy array to file .
Load image data from a tiff file .
Write the configuration to disk .
Clone this repository .
Returns the version of the installed package .
Combine a greeting and say it .
Print an option decoration .
Reserve the number of ids for a channel .
Get a list of ids
Get the propagation status of the given channel .
Get all projects in a dataset .
Get dataset by name
Returns a list of all available datasets .
Parse command line arguments .
Execute the show command .
Show information about a workspace .
List all workspace
Construct the URL for the connection .
Attempt to guess a format from a file extension .
Open an image .
Convert a hdf5 file to another .
Convert a list of ramons into a dictionary .
Return the ramon for a given type
Deletes a channel .
Return a JSON string representation of a dataset .
Generate a dictionary for a given dataset .
Create a dict of channel information .
Return project dict .
Identify the size of the image .
POST data to the server
Find a path by name .
Get a list of public tokens for this user .
Retrieve metadata about a project .
Set metadata for a given token
Get a url .
Make a POST request to a URL .
Perform a DELETE request .
Load layers from hdf5 file .
Save array to HDF5 file .
Infer gaps in a phylogenetic tree .
Return a string representation of a write operation .
Installs the gettext translations and ungettext translations .
Perform an exclusive lock .
Return the percentage of a part .
Get statistics about the server .
Get the number of slabs for a server .
Returns a dictionary with the context data .
Get the server status .
Render a dashboard .
Returns a dictionary of stats for the given server .
Return a list of slabs .
Converts a number of bytes into human readable form .
Find and return a Config object .
Add a child environment .
Apply the config to the given applicator .
Absolute path of the file .
Read the contents of the file .
Write data to file .
Configure the logger .
Creates the file if it doesn t exist .
Applies the given applicator to this node .
Absolute path of the object .
Remove the directory .
Prepare the container .
Cleans up the tree .
Returns the path to a file .
Returns a list of all the files in this directory .
Write data to a file .
Read the contents of a file .
Add a file to the tree .
Save configuration to YAML file .
Load configuration from file
Cleanup temporary directory .
Loads the plugins from a directory .
Return a child object with the given path .
Get a value from the container .
Apply reignment to a string .
Build URL for callback .
Process input .
Send the output to the socket .
Send a request .
Read data from socket .
Write data to a socket .
Get the set of modes for the remote network .
Configures the target handler .
The receiver s source address .
The target address of the connection .
Callback called when the connection is closed .
Create a new sender .
Request sender link .
Create a new receiver .
Request receiver link .
Called when a link is destroyed .
Called when the session is closed .
Process an endpoint event .
Add markdown to markdown .
Called when a remote connection is closed .
Called when receiver fails .
Extract host and port from server_address .
Connect to a socket .
Create a socket socket .
Return a list of connections that need to be processed .
Read data from the transport .
Creates a new sender .
Reject sender .
Creates a receiver .
Called when the connection failed .
Called when the connection is active .
Called when the connection is closed .
Called when an error occurs .
Return a string representation of the color .
Get a dictionary of all font files in the search path .
Set compression value .
Add a PDF object .
Write a string to the page .
Put the given stream into the output buffer .
Adds text to the document .
Set style scheme .
Set default pdffont font
Add a PDF page .
Set the font size .
Add text to the page .
Add a newline to the page .
Add a pie chart to the page .
Output the pages as a string .
Return list of orientation changes .
Output the fonts to the database .
Output the images to disk .
Output the image data .
Transform a 3x3 matrix
Return the absolute position of a given pixel .
Set style .
Rotate a point x and y
Set the information on the object .
Set zoom mode .
Closes the document .
Put header to buffer .
Put the pages in the document .
Put resource dict to database .
Put information on the server .
Put the metadata to the file .
Yields a sequence of values from a sequence of sequences .
Generate a naive version of seq .
Generator for GOSper s gosper function .
Compute a breadth - first search .
Test if the length of the data is too long .
Test if the data is too long .
Returns True if this coordinate is greater than the given coordinate .
Returns True if this coordinate is greater than the test coordinate .
Returns a copy of the cursor .
Set x - value of x .
Increase the y - axis by dy .
Draw the QR code .
List tags .
Get all labels matching the given label .
Delete a tag
Create a label
Get a list of strings .
Returns a list of tags with the given label_sn .
List all hooks .
Setup extension .
Returns the path to the theme .
Do a POST request
List all hosts
Get a log set
Return the duration in seconds .
Updates the settings of this object .
Perform the compute on the transit plane .
Calculate the binary flux .
Free memory usage of the memory .
Receive data from socket .
Generator for iterating over lines
Return the status code and message .
Generate information for a given code .
Return info as a string .
Get capabilities .
enter reader mode
Quit the server .
Return a datetime object .
Print help message .
Generate newsgroups from a timestamp .
Return a list of newnews .
Generate a list of active articles .
Generate names for active times .
Generate a list of name and description .
Generator that yields tuples formatted names .
Generate list of extensions .
Generate a list of strings for a particular keyword .
Return a list of strings .
Send an XZDR header .
Generator for xpat commands .
Compress a gzip compressed file .
Calculate the offset of a string .
Perform a POST request .
Do a DELETE request .
Perform a GET request .
Lists all scheduled queries .
Returns a list of tags for this account .
Get a tag by name or id
Delete a tag .
Create a scheduled query .
Delete a tag by id
Parse the low and high high high high low high low high high high high low and high high
Parse a header line .
Return a string representation of the HTTP header .
Do a POST request .
Run multiple tests .
Return the default docstring for this class .
Set the value of the parameter .
Raise TypeError if value is not a type .
String representation of the field .
Raise TypeError if value is not valid .
Symmetric error .
Set errors .
Set parameter values .
Import metrics .
Extracts a metric from a list of metrics .
Filter metrics according to the filter expression
Calls the api call
Return an expression that matches the given text .
Return an operator s operator .
Add an op_add to text .
Initialize all required properties
Get a list of parameters from the model .
Return a list of parameter values .
Returns a numpy array of parameter errors for each parameter .
Clear all derived parameters
Setter for method .
Get environment variables .
Calls the method and returns the result
Validate the sceneinfo .
Verify that the type is valid
Get the size of a remote file .
Ensure that the bands are valid .
Connect to earthexplorer .
Normalize a datetime .
Join strings with delimiter .
Returns a list of the positions of the newline characters .
Convert a point to a string .
Dump the results of the query
Remove all metrics from the registry .
Initialize from a list of files .
Set the number of files that match the given files .
Entry point for the script .
Concatenate a rule .
Add special handling for special handling .
The grammar for the input source .
The grammar rules .
List of comments .
Returns a list of directive directives .
Output the source code of this Compiler .
Return the string representation of the parser .
Returns a string with the import directives
Return a string representation of the token type .
Return the class definition as a string .
Get the name of the entry point
Get the source of the given rule .
Find the transform for the given rule .
Convert an expression to ASN .
Convert a node to an ASN string .
Return a list of operands that satisfy predicate .
Remove grouping groups from an OptionTree .
Convert an AST to a Python code object .
Convert an AST node into a Python code object .
Convert an AST to code .
Convert an AST node into a Python code block .
Convert an AST repetition group into a list of code lines .
Converts an AST node to a code string .
Convert an AST node into a list of code lines .
Convert an AST node into a list of code lines .
Exclude an AST node to a code block .
Multiply the given operand into a single line .
Return a list of code lines for an astroid .
Find directives that match pred .
Flatten a child node .
Print the result of the API call .
Returns a wx . id
remove a hotkey
Add the command line arguments to the parser .
Configure logging .
Helper method to validate arguments .
Convert a list of infix nodes to postfix format .
Convert a list of nodes to an optree .
Reduce a list of nodes .
Load manifest from file
Returns the length of the field s length
Returns the length of the columns that are present in the table .
Escape allunderscores .
Print field markdown to stdout .
Print metrics to stdout
Generate Markdown definitions .
Parse the given text and return a tree .
Attempt to get the most consumed bytes .
Add command line arguments to the parser .
Parse a string representation of time .
Output the metrics in CSV format .
Prints the metrics in JSON format .
Print JSON to stdout .
Converts the given string into XML .
Whether the given node is a string or not .
Pretty print a tree node .
Returns a function to extract a repetition .
Get a parse tree .
Get an exclusion expression .
Count leading whitespace .
Call extractor .
Get the position of the node .
Return True if this node is empty .
Add ignored items to the queue
Checks if the given value is a valid type .
Return a flattened version of this node .
Return a new Parsenode with the given pred .
Return a merged parser .
Return a copy of the new_type .
Return a copy of this parser .
The position of the cursor .
The position of the current read position .
Go to next character .
Go to next line .
Go to the previous line .
Get the last readed line .
Move to the specified number of characters .
Save current cursor position .
Restore cursor position .
Return a string representation of the notification .
Set internal name .
Returns the number of variables in the header .
Returns the number of functions in the header .
Update the current scope with new values .
Return a new scope with the given signature .
Update this scope with the given oset .
Return a new scope with the given sig .
Update this scope with the given oset removed .
Return a new scope with the given sig .
Update the symmetric difference with symmetric difference .
Return the symmetric difference of two symbols .
Add a signature to the scope .
Remove a signature from the state .
Remove a signature from the state .
The signature of the header .
Last signature .
Get a scope by its name .
Get a signature by its name .
Return a new scope that can be used to create a new scope .
Add an injector to the AST node .
Normalize an ast .
Recursively sets the given node and its children .
Checks if the hit is valid .
Returns a signature for the Compound .
Resolve this Parameter object into a string .
Returns a list of resolved names for the given type .
Set the type name of a type in the dictionary .
Delete a local file .
Delete a file from S3
Delete a file from S3 .
Save object to a local file .
Save a file to an S3 bucket .
Saves the object to a file .
Find a bucket by path .
Create an enum type .
Add a callobject to the chainmap .
Reads the next EOF character .
Push the rules to the tree .
Remove all rules from the tree .
Return the value of a node as a string .
Add a parsed stream .
Begins a tag with the given name .
End a tag .
Set the rules for the given dictionary .
Set the hooks for this class .
Set directives .
Evaluate a rule .
Evaluate a hook .
Echo the given text from the stream .
Read one character from the stream .
Read a character from the stream .
Read until the stream is read .
Validate and ignore any blank lines .
Check that the struct is compatible with the struct .
Add a rulecl to the namespace .
Add rules to bnf .
Add a rule .
Add sequences to the parser .
Add an alternative to the parser .
Add a range to the sequence .
Add a triple to the parser .
Add a capture to the parser .
Add a binding to the parser .
Add a parser hook to the sequence .
Set the value of a parameter .
Set a string parameter .
Set a parameter .
Set the value of a param .
Set the name of a hook .
Add a parameter to a hook .
Get the parsed rules .
Ignore the cxx code .
Add a state .
Returns a string representation of the state .
Write the graph to a DOT file .
Write the graph to a PNG file .
Returns a string representation of the state .
Return a new state .
Reset the living state to its initial state .
Infer the infernode of a block .
Infer subexpr of expr
Infer a literal .
Returns a string representation of the tree .
Exit scope .
Return a statement if pt is not an expression .
Return an astroid . Call node as string .
Return an astroid . Calltrue node .
Return an astroid . hook .
Return an astroid . rule .
Visit a capture node and return a statement .
Return an AST node .
Visit an alt statement .
Visitor for parsing a sequence node .
Visitor for repoptional node .
Visit a rep0n .
Return a rep0n .
Add a string to the end of a string .
Set indentation of a list .
Convert a list to a string .
Echo the given list of nodes .
Populate from a sequence .
Populate an edge from all_seqs .
Builds the state tree of the INDRA Statements .
Return True if predicate is equal to value .
Create a grammar from a grammar .
Create a grammar from a file .
Parse the given source .
Parse a YAML file .
Set node src to dst .
Set the value of the node as an integer .
Get a subnode s value .
Dump a DataFrame to a dictionary .
Get ids of records from from_date
Get records from invenio2 database .
Return a list of check IDs .
Serialize object to JSON .
Get a list of users .
Dump a UUID object as a JSON string .
Returns a set of ids that are modified in from_date .
Return a list of ids that are modified since from_date
Returns the list of dicts for the collection .
Retrieve the revision revisions of a record .
Get list of record collections for record recid .
Serialize a record to JSON .
Get records that match the given query .
Dump a record to a JSON string .
Dump a ra as a JSON string .
Load a common model .
Return a dictionary mapping entry_points to things .
Initialize test_request_context into test_request .
Get the sqlalchemy run_sql .
Run a query and return a list of actions .
Dump a JSON - ready representation of the remote account .
Load token from data .
Import a record dump .
Get a config imp or a default if it exists .
Serialize object to JSON .
Helper function to return a list of users .
Get a list of users .
Return a dict representation of a user .
Load a deposit repository .
Create record and pid .
Load a record from a record_dump .
Load JSON records from one or more sources .
Returns a list of the function stats .
Run the tornado application .
Dump profiler .
Deletes the profiler .
Deletes the profiler .
get the current status
Calculate the translation for each image in parallel .
Merge multiple images into one .
Add one dimension to an array .
Create a new record from a dump .
Create a record in the database .
Update a record
Create one or more persistent identifiers .
Deletes a record from the database .
Create a file instance for the given list of file versions .
Delete all buckets from a record
Return a list of pids that are not persistent .
Prepare the list of files
Prepare pids .
Return True if the record is deleted .
Load a community .
Load a featured community .
Dump a thing .
Check a thing .
Remove all events from the pengager .
Returns the magnitude of a vector .
Normalize a vector .
Transform the texcoords of the texcoords .
Ensures that the skeleton is present in the data dictionary .
Set the length of the piece
Set the parent of the bone
Get the coordinates of the pivot point
start animation
Set the camera state .
Unset the camera state .
Set the state of the texture
Unset the current state of the bone .
Ensure a modeldata object exists .
Redraw the vertices of an object .
Draw the image if it has already been set .
Set the model and cleanup it .
Write XML reports to a file .
add a menu
Redraw the label .
Redraw the label .
Draw the visualization .
Deletes a widget from the container .
Redraw the label .
Register handlers for events .
Registers event handlers to the event loop
Add a title to the window
Exit dialog .
Update progress bar .
Render a 3D representation of the actor .
Render the image to a 3D .
Check if a resource exists in the repository
add a category
Get a missingtexture from a texture
Get a model by name
Load a model
Get modeldata .
Add a widget to this widget .
Draw the menu .
Redraw the rendering of the image
Update the size of the scrollbar .
Checks if mouse is in space .
Percentage of the array .
Add a layer to the layer .
Add an action to the list .
Run a given action .
Register a new string with the given name .
Add a layer to the layer .
Draw all layers .
Deletes all layers from this widget .
The border of the canvas .
Offset of the current view .
Return the size of the widget .
Read a mesh from a HDF5 file .
Convert a 2D shape to a network matrix .
Set the fields to be displayed .
Add one or more fields to the request .
Checks that the types of elements are not less than allowed .
A list of string representations of the elements in the array .
Return a DataFrame containing the indices of the data .
Returns statistics about the current mesh .
Convert an element set to boolean set .
Convert a set of node sets into a boolean array .
Convert a surface tag to element sets .
DataFrame metadata .
A series of metadata values .
Ensure all possible directories exist .
Run the GMSh command .
Read a history report .
Read a field report .
Convert a list of integers into a string .
Return an equation string .
Return a sorted set of labels in a DataFrame .
Parse an HTTP response .
HTTP GET method .
Write a list of xy data to file .
Return error message .
Return True if the current traceback is thrown by a descriptor .
Set data for this class
Returns True if axis is a string or None otherwise .
Set the options for the plot
Create a class for the given function .
Cycle through all incoming datafeeds .
Try to convert value to float .
Convert string to float
Render a graph
Force unicode to unicode .
Returns True if mime_type is a match of include mime types .
Cleans up a domain name .
Return a list of cut cuts for a domain name .
Generate a hash for a given token .
Collect all words that are in the response .
Index the document .
Invert a hash to a list of tokens .
Get frequency of document frequencies .
Look up the stream ID for a given hash .
Iterate through all protobuf items from a file - like object .
Read a varint from the stream .
Read a string from the file .
Serialize an SSA key into a bytes object .
Convert a streamitem to a key .
Context manager to temporarily change the current working directory .
Strip a prefix from a string .
Remove the suffix from a string .
Return True if needle is a subsequence of needle .
Run the server .
Terminate the server .
Returns a callback for the error page .
Register a callback for a given method .
Resolves a route and returns it .
Resolve a non - literal route to a route .
Return the type and pattern of a pattern .
Return a string representation of the response .
Add a header .
Set cookie .
Return the status line as a string .
The Content - Type header .
Recursively delete a directory .
Return a list of open files .
Attempt to fetch data from a work unit .
Get a list of lines from a file .
Return a pair of random adjspecies pair .
Return random adjac species pair .
morph a sentence .
Shows similarity scores .
Executes the hiragana .
View an entity .
Print shortsum .
Print a Goolabs keyword .
Gets the chrono for the given sentence .
Initialize all stages .
Run all writers .
Runs a stream item in a stream .
Replace all sub - modules in a pipeline with a given name .
Return True if all target mentions are in the chain .
Return True if any of the target mentions are in the chain .
Match tags to a stream .
Make a tagger for the template .
Terminate the child process .
Multiply a sequence of integers .
Yield sentences from a string .
Create a sorted index for the label in the stream .
Return a list of sentences .
Creates a cleaned file with the contents of the i_chunked file .
Make a gpg file for a tagger .
Remove whitespace from a string .
Instantiate a pipeline configuration .
Generate a json -smith chunk from a file .
Makes the clean_visible file from i_chunk .
Remove whitespace from a string .
Parse command line .
Try to load a stage from a module .
Load the external stages from a file .
Initialize a stage by name .
Read bytes from a byte string .
Return True if the given href is valid False otherwise .
Creates a list of labels for this attribute .
Generate all paths in input_dir .
Get all tasks in the queue .
Get a random number of available rows .
Get a list of sentences from a GermaNet .
Verify the MD5 checksum of the data .
Get a bucket from config .
Decode the given data .
Get a chunk from a file .
Convert a stream id to a Kvlayer key .
Converts a kvlayer key to a stream ID .
Generate a hash for a stream item .
Entry point for running the application .
Build argument parser .
Given a list of sentences return a list of token tokens .
Convert a sequence of tokens into a sequence of tokens .
Add a tag to the xml .
Return the xpath representation of the XML tag .
The index of the text in the last tag .
Recursively iterate over all descendants of elem .
Selects all the elements of the given source .
Selects all elements of the given XML element .
Select elements that match a regex pattern .
Return an iterator over the following siblings of elem .
Run inkscape command .
Evaluate inkscape .
Export an SVG to a PDF file .
Export an SVG file to a PNG file .
Get the jinja environment for a given file .
Setup the template to use .
Fill the template with the given doc_contents .
Save the object to a file .
Create a doctype from a template file .
Overrides fill_contents method .
Render the editor to a file .
Render the template to a temp file .
Parse an XML source .
Return HTML fragment from source string .
insert text into xml
Insert new node before reference node .
Return a clonode element .
Return the string representation of a node .
Insert a child .
Parse config file .
Get Google credentials .
Create event datetimes .
Create an event .
Entry point for the command line tool .
Get file extension .
Add a file extension if it doesn t already exist .
Get a temporary file .
Remove all files in the workdir
Writes a CSV file to a json file
Replace old content with old .
Parses the HTML and returns the parsed HTML .
check the next tag
Create an italic tag for a given tag .
wrap a strong tag
Wrap a string underline .
Parse the attributes of a tag .
Clean line breaks .
Parse a href string .
Parse attribute value .
Translate one or more strings in a dictionary .
Convert the object to a JSON string .
Find all files in a folder
Concatenate strings .
Return True iff the string starts with the given part .
Return True iff the given part contains the given part .
Generate a boolean value .
Yield tuples from a sequence expression .
Yield tuples of values from a table .
Replace characters for svg code .
Check if svg file is an svg .
Merge multiple PDF files into a single file .
Embeds a font to a svg file .
Embeds a font to svg file .
Check that all of the _inputs are valid .
Check if the function is callable .
Recursively recursively recursively recursively walk the input and output the output
create a jinja2 input from a template
Recursively walk through the input tree and add it to self . _options .
Convert an object into a string .
Convert an object to a number .
Convert an object into a boolean .
Return a string representation of an XPath expression .
Change XML encoding of a file .
Save text into qrc file .
Launches a custom input .
Call a shell command .
Write a PDF to a PDF file .
Recursively walk through a pypsy .
Transform geom to a new geometry
Create a geometry object from a string or string .
Expand a sequence of strings into the triplestring .
Intersect two strings .
Return True if this rectangle intersects this rectangle .
Get a polygon representing the WKT .
Initialize a FrequencySeries from a ZNM .
Write the dataframe to a CSV file .
Select rows from the DataFrame .
Return a table with the given nuclei .
Return the intersection of the table with the given table .
Return a new table with not in the given table
Return an odd number .
Select rows that are not odd .
Select rows that are not even even even .
Returns a table of error data
Calculate the binding energy of the model .
Function to get the number of elements .
extracts the singular value
Convert to p2p .
Derivative of the singular value
Compute a table derived from the data .
Decorator to do a SQLAlchemy method .
Derives a key from master_password .
Initialize a database .
Search for domains in the database .
Modify a domain
Creates a new domain .
Extract HBS messages from a HBS file .
Return the virtualenv prefix for a given path .
Return the ID of the site .
Entry point for the script .
Update a file from a URL .
Return a dictionary of available drivers .
Returns a driver for a given path .
Convert a geom to a numpy array .
Rasterize a raster
Opens a raster from a file .
Create a raster from a byte array .
Copies the raster to the destination
Return a list of available options .
Create a raster from this image .
Set geotransform to geotransform
Read data from the file .
Calculate the envelope of the region .
Driver driver object .
Create a new raster .
Return a numpy array with masked coordinates .
Return the nodata as a string .
Read raster data
Resample this image to another .
Save this object to disk .
Set the projection of the spatial reference
Warp the image to a new location .
Calculate the chunklen and an enclosing chunk length .
Look up the alphabet for the given charset .
Encode a single chunk at the specified index .
Convert a chunk to a long integer .
Get a chunk from data .
Return a compiled regexp for the given filename .
Normalize date format to UTC .
Try to detect timezones .
Return a dict representation of the Swagger_types .
Handle a single HTTP server .
The main entry point for the worker .
Run a multiprocessing worker pool .
Validate classification .
Send a message to the queue
Turn on a device .
Turn on a switch .
Turn on a device .
Turn off a device .
Send all messages from the queue .
Send a message to the LW link .
Sets the nature of this DeviceData .
Set configuration files .
Iterate over all option values .
Create the config file at the given index .
Update configuration values from a dictionary .
Read configuration from a file .
Read the configuration files .
Return a list of names for the given option .
Return a list of section names .
Build and return an argument parser .
Parse command line arguments .
Return a list of command names for bash commands .
Complete a bash command .
Start a server on the server .
Called when a connection is established .
Called when a line is received .
Called when the connection is lost .
Called when a job is loaded .
Called when a response is received .
Close this client .
Add a list of jobs to this queue .
Close the server .
Remove all waiting waiters .
Add a new result to the list .
Wait for the task to complete .
Load next job .
Mark this job as complete .
Add a result .
Cancel all active jobs .
Wait for all active jobs to complete .
Distribute the available jobs to the active callback .
Add a new job_set to the server .
Get a job from the driver .
Return a job .
Add a result to a job .
Called when a job set is done .
Close the event loop .
Remove duplicates from a list .
Return True if the given regex matches the given regex .
Get the boto region for the environment .
Filter a list of entries according to the given filters .
Get the instance details for a given instance .
Create an instance from a dictionary .
get an attribute
Creates instance from a Boto instance .
Return True if the value matches the filter .
Return the name and public IP address .
Add timestamp to the event dictionary .
Create a logger for structlog messages .
Setup celery app .
Delete a worker .
Return a dict of configuration options .
Handle config commands .
Prepare all rows in a table .
Get a hash of a string .
Generate a random color .
Checks username and password .
Check if a token is valid .
Check if process is running .
Dynamically import a module or an object .
returns a string representing the current host
Make a request to the API .
Prepare HTTP POST parameters .
Serve the HTTP server .
Render a template with the given attributes .
Utility method to stream a list of dictionaries .
Returns a list of weekday days between two dates .
Get the path to a command .
Build a SSH command .
Create a profile from the command line args .
Add a relationship to this part .
Return a list of the parts of a specific type .
Load relationships from data source
Add a part .
Load a part from the data .
Find a file or extension .
Create a ContentType from an XML element .
Parses the input_string and returns a unicode object .
Build the Access Token .
Assign force field to AMPAL object .
Find the maximum and npnp of the spectrum .
Make force field data structure .
Return a string representation of the object as a stream .
Get all segments matching a given name .
Returns a list of filenames in the given directory .
Returns a list of all directories in the given directory .
Create a prefix for a bucket .
Delete a file from the bucket .
Ensures that the user is logged in .
Returns the loud version of the message .
Return the URL for the home namespace .
Return a list of hotspotices in the sample .
Get a keeper token
Upload a build .
Determine if we should skip Travis .
Confirm the build
Recursively update a dictionary .
Entry point for the keeper .
Execute a part edit command .
Pack the contents of a directory .
Split a path into a list of directories .
Get editor from filepath .
Processes the given file .
Generate chart object .
Convert chart object to HTML .
Generate a chart for the given data object .
Patch json_data .
Convert a JSON object into an HTML string .
Convert a dictionary to a pandas dataframe
Writes a file in a folder
Internal function to create a new chart class .
Return a string representation of a list of fields .
Get a tarball URL from a tarball file .
Create an app .
Delete an application .
Generate random binary string .
Generate random IP address .
Generate a random date .
Get a session object .
Perform an HTTP request against the API .
Create a tarball .
Get the status of a build
Generate a sequence of strings .
Register subcommands for the given parser .
Returns the root argument parser .
Get the description of the command .
Get the help string for this command .
Execute the action .
Encodes the given arguments into a single string .
Returns a pandas DataFrame of all athlete deletes .
Returns a list of the last n active activities .
Request the activity list for the given athlete .
Get the activity data for the given athlete .
Construct the athlete endpoint for the given athlete .
Build an activity endpoint for the given athlete .
Get a request from the server
Create a build .
Utility function to create a url with the given regex .
Get a random title .
Generate a person .
Get a random name .
Convert the dictionary to a string representation .
Setter for _dataset .
Render the plot as a string .
Check if a type is in the dictionary .
Generate the full URL for the resource .
Open the document in the browser .
Save the URL to a file .
urlopen url
Return the image as a string .
Write the file - like object to fp .
Return the SHA256 hash of the template .
Return a number of decimal places .
Return a dict of protected and protected claims .
Return the JWK keys as a dict .
Unpack a JWT statement into a JWT .
Pack a metadata statement into a string .
Evaluate a metadata statement .
Ensure that the given string has the given federation usage .
Extend message with SMS messages .
Parse command line arguments .
Add generic command - line arguments to an arg parser .
Apply logging options .
Log msg with verbose level .
Return a dictionary mapping each letter to a number .
Return an iterable of words in a word .
Return the class as a string .
Given a timeseries and a timeseries return a list of timeseries .
Get the last value from a timeseries .
validate a page number
Get a page of data from an iterator .
Change the mode of a file .
Create an external signing service .
Create a signing service .
Create a signed message .
Create a new resource
Update a PUT statement
Update the signature for the specified location .
Yield bundle contents .
Create a bundle from a dictionary .
Returns the URLs for the given asset type .
Return HTML tags for a given asset type .
Return HTML tags for all asset types .
Ensure URL is valid .
Find links in a URL .
Connect to a client
Returns a list of all modules in the project .
Import all available modules
Selects a subset of a document .
Apply a date_map to a document .
Return the number of characters in the table .
Print the cursor to stdout .
Given a list of do_tasks return a list of tasks .
Add default departments to project
Add default dependencies for the project .
Save shot after sequence .
Create all tasks for the given element .
Get a value from a config section .
Add a factory factory .
Remove a factory factory .
Connect to a remote factory .
Receive data from a connection .
Disconnect from the given connection .
Call a command remotely .
Called when a connection is made .
Called when a connection is made .
Called when data is received .
Send data to remote device .
Called when the connection is lost .
Get the protocol for a given connection identifier .
Called when a response is received .
Disconnect from a given connection
Return a string centered on the given line
Print the given string on the right side of the right line .
Return a string version number .
Identify a target unit framework .
Assert that the value is convertable .
Pad data_to_pad with padding .
Unpads a string with padding .
Sign a request .
Gather the metadata statements for a given context .
Pretty print a word .
Argument parser .
Print a list of words and their words .
Called when data is received .
Unregistered type handler
Create a RPC function stub .
Check if a remote peer is in local or local
Return completions for this command .
Convert a string representation from a protobuf string into a dictionary .
Return a string representation of the amplist .
Verify that the JWK is valid .
Parse a JWT response .
Return a list of databases .
Synchronize all local files in a folder
Build all the modules in a given package .
A convenience wrapper for readonly .
Load configuration from file .
Create a self - sign JWT .
Create a signed JWT from a keyjar .
Discovers all files in the testdir
Entry point for the librarian library .
Get the score of a letter .
Returns the score of a word .
Lists all words in the file .
Return True if the word is valid .
Called when a string is received .
Returns the command and the function of the given command .
Parse request values from a request object .
Writes the response to the transport .
Called when a connection is lost .
Returns a JSON - LD protocol object for the given address .
Create a keyjar object from a JWKS string
Load a JWT from a JSON string .
Handle custom processing of a message .
Processes a Cinder event .
Process the specified event type .
Process a message from glance customer process .
Process a swift customer event .
Processes an event from a message .
Process a heat customer process event .
Serve the server .
Print message to sys . stdout .
Print msg to stderr .
Decorator to register commands subclasses .
Register a command subclass .
Return a string representation of the argument .
Parse a string and return a value .
Update a dictionary with the completer .
Initialize the connection .
Create and initialize a connection to RabbitMQ .
Initialize services .
Initialize a consumer .
Create a consumer for cinder .
Initialize the neutron consumer .
Initialize glance consumer .
Create a heat consumer for heat - consumer .
Map the name of a component to a listener .
Get song info .
download a song
Execute code .
Load a variable by name
Call a function on the stack .
Dump a database to a temporary file .
Called when the user exits .
Run the command .
Context manager for cd .
Recursively copy a directory .
Starts a post - mortem debugger .
Get the modification time of a file .
Check if file has changed since last time .
Syncs the changes stored in the database .
Remove all data from the cache .
Scrape a feed
Downloads the image to disk .
Returns True if the image has changed .
Find the caller s name and line number .
Get the defining component of a PE element .
Entry point for oofooa .
Find a symbol by name and kind .
returns True if pe_pe is contained in the given root
returns True if pe_pe is global False otherwise
Get the data type name of a data type
Get the names of the related attributes of a rgo .
Create a namedtuple from an EDT document .
Create a function that returns a function that can be used to create a bridge .
Creates an external entity from a model
Create a function that will run the given sync model .
Return a constant from a cnst symbol
Creates a function that will be used to create an operation .
Create a get_derived_attribute property .
Creates a simple association from a source model .
Create an association .
Recursively create component classes .
Perform a RPC call .
Accept this message .
Reject this message .
Raise an exception .
Wait for a call to the server .
Establish a connection to the pool .
Dispatch a reply to the client .
Guess the type name of a given value .
Deserialize a Python value into a Python object .
Get a feature by content_id .
Put items into the database .
Deletes document from Elasticsearch
Delete all mapping from index
Delete the index .
Scan a prefix and return a sequence of results .
Iterate over the IDs of a prefix .
Return a list of scan ids matching the given value .
Format a list of feature names into a string .
Generate a list of dicts for the given keys .
Return a mapping of indexes to their index name .
Get the types of the field
Returns a list of disjoints associated with a query fname .
Returns the number of bytes in the FC file .
Count the number of bytes found in the corpus .
Return a string representation of the feature collection .
Entry point for docopt .
Default formatting for an error .
Return a string representation of a link .
Return a string representation of the unique identifier .
Return number of metaclasses that match the given kind .
Check integrity of a link
Ensure that all subtypes are valid .
Basic transformation for encoding .
Deletes all indexes and indexes
Perform a scan on a prefix .
Insert a list of ids into the kvstore .
Put raw value at index .
Return the index key value for a given idx_name .
Return an index by name
Add the language to a string .
Get the type name of a data type
Get the referent of an object
Build a mapping of core type element to XML .
Build an enum element .
Build a struct type element .
Build user type element .
Build a type based on the data type .
Build a class element for the given object
Build a component element .
Build an XML Schema element from a model .
Return a prettified version of an XML string
Return a list of likes .
Set positional information for the node .
create a queue
Delete a queue from the queue
Get a list of all queues and query properties .
List all exchanges .
This method is used to dump a purge of a queue .
Create a MIME message .
Read the image from the connection .
Return True if text is visible .
Entry point for the script .
Convert a value into a serializable representation .
Serialize association to string .
Serialize a Metaclass to a string .
Entry point for the script .
Partition a collection of items in a collection .
Adds bidirection to the current language .
Find the relationship between two instances .
Compute lookup key for a given instance .
Compute the index key for the given instance .
Returns the type of an attribute
Create a new instance of the class with the given arguments .
Return a list of metaclasses .
Define a metaclass .
Send a message to a socket .
Receive a message from a socket .
Run a dead code .
Parse email addresses .
Decorator to turn a function into a function .
Build a dictionary of rpc specification from an application .
Normalize postcode .
Get the next value .
Recursively accept all sys packages and accept them .
Accepts a c_pept and handles all its children .
Accept all pe_pe packages and accept them .
Get the brightness of the image
Matches the value of the field .
Find a match at position .
Return a text editable selection for a character .
Handles cursor position changes .
Get exception information .
Retrieve a single instance of the class .
Execute the command .
Called when the command is pressed .
Returns True if the pressed modifier is pressed .
Go to previous edit .
Go to the next edit .
Handle an execute reply message .
Returns True if the lock is locked .
Get the edited history item
Set the history of the edit .
Store the current state of the input buffer .
Close the connection to the console .
Convert a collection to a Pandas DataFrame .
Set multiple attributes .
Subscribe to the topic .
Log a message .
Execute a remote iterator on a view .
Convert a notebook to a new notebook format .
Get a path importer .
Wrap stringio . stringio . stringio
Override setuptools to override setuptools .
Parse a requirement string .
Return parsed pkg_info as a string .
Collapse leading whitespace .
Override hide event filter .
Overrides show event filter .
The text cursor .
Update the currently selected item .
Register models to the admin site .
Return a list of disk partitions .
Get the system CPU times .
Returns a list of the system per cpu time .
Read raw data from stdin .
Read raw bytes from stdin .
Updates the tabbar visibility .
Create a tab with the current kernel .
Add a tab to the tab widget .
Populate the menu with the magic menu .
Handle close event .
Check if the hashed password matches the passphrase .
Return an indented version of an item .
Check if the user has permission to change the object .
Check if the user has permission to delete the object .
Add n children to g .
Create a nested nx - tree from the given levels .
Submit the given jobs in the given graph g .
Validate that all nodes are in the tree .
Creates a string for each color template .
Return a copy of this colorcheme .
Add a scheme to the scheme .
Set the active scheme for the given scheme .
Return the path to the library .
Handle incoming messages .
Wait for the kernel to be running .
Set style .
Get a format from a token .
Get format from a document .
Get a QTextCharFormat from a given style .
Search for a command in PATH .
Normalizes a path .
Check that all names in value are present in the given value .
Ensure entry points are valid .
Return True if src is blank .
Return True if the last line is the last one .
Transform a string to an Assign system command .
Transform a line of assignment magic magic into a single string .
Transform a single prompt into a plaintext representation .
Transform an ipy prompt into its components .
Finds the appropriate indent for the given line .
Stores the given lines into the buffer .
Reset the source and raw data .
Handle cell magic parts .
Append lines to line mode .
Transforms a single cell into the stack .
Called when a received notification is received .
Return set of observers for a given ntype and sender .
Add a callback to receive notifications .
Update the status of running jobs .
Print the number of jobs in a group .
Flush the group to the given group .
Check if the status of the component is new
Display the status of the component .
Initialize threading .
Insert an item at the given index .
Return a copy of the file .
Declare a special class .
Declare a list variable .
Declare a set variable .
Set the current working directory .
Move the lock to the given state .
Calculate the energy of a node .
Return a dict with default values .
Check the contents of the table .
Render a check .
Returns a string representation of a list of rows .
Build a link .
Render a javascript file .
Generate a css file from a url .
Create an HTML tag .
Subtract a value from a value .
Multiply a value .
Return the division of value .
Return the modulo of value .
Get verbose name of an object .
Split a user input into a tuple .
Add options to parser .
Deactivate the Builder .
Find the url_name of a request .
Yields urls for explicit links .
Convert a string to a list of strings .
Run a coverage script .
Add an action to the menu .
Appends an action code to the parser s actions .
Print help message .
Handles the help command
Validate the arguments passed to the parser .
Execute the code .
Print information about the given arguments .
Unserialize an object .
Set the hook to register .
Calls the given function with the given arguments .
Check if url is a valid URL
Validate a URL .
Validate a URL container .
Get a list of values from the global namespace .
Select n random ports .
Execute the function .
Get the last n lines from the readline .
Set the autoindent of the text .
Initialize logging .
Save sys module state .
Restore sys module state .
Register a boolean post - execute function .
Create a new main module .
Initialize user namespace .
Return a list of all user - defined namespace references .
Reset the history .
Delete a variable
Remove all variables that match regex .
Internal method to convert a property into a property .
Internal helper for get_object_find
Run a method on the object .
Initialize history manager .
Show a traceback of an exception .
Print a traceback to stdout .
Show a syntax error .
Prepare line for reading .
Set a custom completer for this widget .
Sets the completer frame for this editor .
Runs a line magic cell magic .
Find the magic by name .
Define a macro .
Run a command on the system .
Output the string to stdout .
Return a string representation of the user s variables .
Evaluate user - defined expressions .
Evaluate an expression .
Safely run the given file with the given fname .
Run a cell magic magic .
Expand variables in a string .
Create a temporary file .
Stop all processes and cleanup the session .
Broadcast a message to a destination .
Lists all profiles in a directory .
Returns a list of all available bundle profiles .
Find a version matching req .
Return the full path to a file or None if not found .
Get the next line from the stream .
Send a string to the child process .
Sends a value to the terminal .
Convert regex pattern to a regular expression .
Convert a regex pattern to a regular expression .
Search the buffer for the given buffer .
Search the buffer for the given buffer .
Unpack a directory into a directory .
The last error in the log file .
Execute a command and return its output .
Find a zip file with the given filename .
Returns a list of all arcs executed .
Returns a list of all arcs that are not missing .
Returns a list of all arcs that are not in the circuit .
Return a list of branch lines .
Returns the total number of branches in the parser .
Returns a mapping of branch arcs to missing branch lines .
Calculate the branch stats .
Set the precision of the DataFrame .
Return the number of affected statements covered by the code .
Return a string containing the PC covered by this PC .
Highlight text in a given string .
Highlights the given string .
Highlight given keywords .
Run a function on the object .
Unquote ends of a string .
Convert a string to a marquee .
Remove whitespace from screen
Return a dedent of text .
Wrap paragraphs to ncols
Find the optimal subset of a list .
Return the value of the item at the given position .
Build kernel arguments .
Initialize the SSH tunnel .
Pretty print object .
Pretty print obj .
Get the mro list for an object .
Default pretty print function .
Pretty print the object .
Print a re pattern .
Print the name of an object .
Pretty print function .
Pretty print exception details .
Add a function to the given type .
Registers a deferred type for a type by type .
Add the given object to the output buffer .
Break a breakable into the buffer .
End a group .
Flush the buffer .
Pretty print the object .
Writes a row into an ODS spreadsheet .
Get the contents of the current clipboard .
Use osx . get_clip to get text from OSX
Get text from tkinter .
Get the build prefix .
Replace the keys in a dictionary with integers .
Recursively convert datetime objects to strings .
Convert datetime objects to strings .
Return a string representation of a datetime object .
Check if the site directory is in the target directory .
Write a script to the install directory .
Sleep and print the number of seconds .
Create an argument parser for the given prog_name and subcommand .
main entry point for zmq connection
Build a packagefinder .
Called when the log level has changed .
Return a default logger .
Fail if flags has changed .
Prints the help text for all aliases .
Print flag help .
Print the subcommands as a string .
Print the help of this command .
Print examples to stdout .
Update the config with the given dictionary .
Initialize the given subcommand .
Flatten flags into a nested structure .
Parse command line arguments .
Load configuration from a file .
Generate the config file .
Downsample an array according to its length .
Format a list of dicts .
Write a string to the output .
Called when the config has changed .
Get the help string for a class .
Get the help string for a trait .
Clear the instance s instance .
Format the failure of a test failure .
A custom exception handler that prints a traceback .
Flushes all pending events in the queue .
Emits the start_channels method .
Read from file .
Read data from a file .
Split a string into a list of tokens .
Compress a dhist .
Add a function to the dictionary .
Return a dictionary of all the documentation for this object .
Formats a string for LaTeX .
Set a default value for an option
Page for the IPython notebook .
Create a task with the given callable .
Get taskinfo with given label .
Get the function object from the info dict
Calculate the next run for this schedule .
Submit the task to run .
Send a message to the task .
Run the task asap .
Run a task .
Run the callable once .
Find the URL file in the security dir .
Bind the kernel to the ipkernel .
Create an interrupt event .
Run the main loop .
Return a dict of keys matching name and type pattern .
List all objects in a namespace matching pattern .
Check that the mutex op is in dict .
Draw the figure if it is in interactive mode .
Flush all active figures .
Write a matplotlib figure to the display .
Load an IPython extension .
Unload an IPython extension .
Generate n random ports .
Initialize the WebApplication .
Handle a SIGINT signal .
Confirm the user to exit .
Clean up kernel manager .
Generate price options .
Replace all strings in a dictionary with a single string .
Render the text with the given name .
Create a zip file in the context .
Fix the version number in prerequisites .
Return True if obj is mappable .
Get a partition of a sequence .
Run a source file .
Run a source .
Fetch a file from ftp directory
This function reduces a frequency list of frequencies to a single frequency domain .
Compute the n - digit frequency of n - digit frequencies of the given file .
Iterate over the number of digits in a text file .
Return frequency of one - digit frequencies .
Compute the frequency of two - digit frequencies .
Return frequency of given digits .
Plot two - digit frequency frequencies
Plot one digit frequency spectrum .
Print the given expr to stdout .
Reverse the base URL .
Return True if prefix is private False otherwise .
Debug a source .
Debug a script .
Generate a script for debugging .
Return a dict of hashes from the hashroot .
Compress the hashroot with the given hashroot .
Return a list of all keys matching glob .
Return True if the record should be allowed .
Formats an error into an error message .
Start an interactive shell .
Create new CSV writer .
Prepare available translations for the given languages .
Write po entries to the given languages .
Writes the header of a po file
Subscribe a user .
Initialize parser .
Run a python module .
Run a Python file in a Python file .
make a python code from a python file
Load Python code from a Python file .
Convert a list of items into an HTML table .
Set current value .
Cancel completion .
Select an index by row and column .
Update the list of currently displayed items .
Get frequency of words in text .
Print the number of words in a dictionary .
Returns a string representation of the document .
Write the text to a file .
Validates that a pin is valid .
Sends a shared pin to the given topics .
Delete a shared pin .
Send a user s PIN to the API .
Delete a user s pin .
Subscribe to topic .
Returns a list of all subscribed subscriptions .
Set the total statistics .
Context manager for executing a task .
Context manager for submonitor .
Update the progress of the current work .
Add a submonitor to this monitor .
Update the progress .
Ensure that the build location is correct .
Load configuration from a list of configuration files .
Load config file
Load a flag from a config file .
Return a list of unicode strings .
Load configuration from argv .
Convert the parsed data into a Config object .
Find a module by name .
Register a function to be called when a stop is reached .
This function is called when the start_data is started .
Called by the listener to notify the stop callbacks .
Interrupt and kill the event loop .
Return command line arguments .
Set self . n times .
Send file to remote .
Fetch a file from remote
Returns the number of engines registered in the engine .
Start n threads
Starts the execution of the job .
Return the default context dict .
Parse output_id from output .
Write a batch script to disk .
Execute the n arguments and return the job id .
Create a context menu .
Append a JPEG to the file .
Append PNG to the image .
Append an SVG to the display .
Add an image to the document .
Copy an image to the clipboard
Get the image from the display .
Insert an image into the buffer .
Insert an SVG into the buffer .
Save image to file .
Called when a process has changed .
Initialize the environment
Auto - rewrite the input string .
Ask the user to exit .
Sets the next input to the server .
Read config file .
Get a list of strings from a section .
Get a list of option values .
Check if environment variable is in environment .
Initialize instance from keyword arguments .
Load configuration from a file .
Set an attribute from a config file .
Set the delimiter to match the delimiter .
Split a line into a list of strings .
Return a list of words that match the given text .
Return a list of strings matching the given expression .
Called when the parser is changed .
Returns a list of aliases that match the given text .
Return a list of strings matching the given text .
Handles completion of the current line .
Returns True if the record matches the given dict .
Recursively match a dictionary .
Extract a subdict from a dict .
Return True if the current line is quiet .
Write the output prompt to stdout .
Write format data to stdout .
Logs the output of the logger .
Raise an exception if the operation is not frozen .
Convert a string to a timestamp .
Called when the event loop has changed .
Do one iteration .
Publish Python code .
Send a request to the server .
Send clear request .
Convert a topic to a string .
Send a shutdown message .
Hook before the current context is started .
Remove the modules from the stack .
Return the absolute path to the given path .
Check if a file is a file - like object .
Returns true if the given object is a subclass of class type .
Return True if path is a package .
Calculate the length of a string .
Receives a class with the given module .
Get CPU times for the current system .
Get the command line for this process .
Get a list of all open files in the process .
Get a list of all process connections for this process .
Returns True if the given user has a given group .
Resolve a module class .
Return the percentage of used used in usage .
Log in to Google .
Get the key from the gdocs URL .
Ensure temp path exists .
Clear temporary files
Upload a file to Gdoc .
Synchronize the local and local and gdoc .
Download the CSV file and save it to a po file .
Uploads the po file to Google Places .
Clear the contents of the temporary file .
Create a new Qt console .
Check URL access .
Check if the given URL has the given content .
Get HTTP response code .
Compare the content type of a URL .
Compare the response code of a URL .
Check that the given data is valid .
Clear the output .
Given a list of morfs return a list of code unit objects .
Return the rootname of the file .
Return a string containing the source file .
Return True if the file should be a python file .
Convert timedelta to seconds .
Wait for the request to complete .
Wait for all pending messages to complete .
Get the metadata from the server .
Abort the server .
Returns the elapsed time of the client .
Wait for the process to complete .
Publish the eid of the display
Wait for all the output to be written .
Wait for all pending messages to complete .
Return the absolute path to a file .
Prepare a list of patterns to be used by the user .
Return the separator of a string .
Find all python files in a directory .
Remove relative filename from filename .
Returns the canonical version of filename .
Get zip data from filename
Return True if fpath matches given file path .
Return True if the path matches the pattern .
Map aliases to their canonical filename .
Start the event loop .
Loop over a gtk kernel .
Enables the given UI for the given gui .
Calculate the GoE element of a plane .
Compute the center eigenvalue difference of a matrix .
Calculate the ensemble differences
Initialize this step .
Load configuration file .
Write to file .
Erase the contents of the file .
Return a dictionary of line data .
Returns a dictionary with the name of each arc .
Write data to a pickle file .
Read a text file .
Get the raw data from the given filename .
Read a file and return a list of lines and arcs .
Combine parallel data from parallel data .
Add line data for line_data .
Add arc data to self . arcs .
Add the given filename to the given hash .
Summarize the summary .
Get a list of lines from a sentinel .
The mainloop for the bot .
Replace the contents of a line with a multiline history .
Read raw input .
Edit a syntax error .
Prompt the user to exit .
Return the url and revision of the url
Create a new frontend widget .
Initialize the colors for a widget .
Return information about the identity .
Convert a DataFrame to a numpy array .
Set the colors for the current color scheme .
toggle the color scheme
Create a plain text representation of an error .
Return a formatted traceback of an exception .
Formats a list of extracted items .
Get a string representation of an exception .
Set mode .
Ensure all of the modules in a module are submodules .
Add a line to the code .
Create a new section .
Get a function s value .
Return the code for the given expr
Render the template .
Get a value from a value .
Render a template .
Return a dictionary of formatters defined in the configuration .
Register a function for a given type .
Called when the float format is changed .
Return a list of paths to user config files .
Configure logging for this instance .
Configure the testnames .
Pretty - print a page of text .
Page a file .
Get pager command .
Get the start string for a pager
Print a string to the terminal .
Simple pretty print function .
Convert an object to PNG .
Return a PNG representation of an object .
Return True if o can print latex strings .
Return a string representation of an object .
Add options to parser .
Validate a list of strings .
Ensure that all keys in a dictionary are strings .
Run the ioloop loop .
Handle a receive message .
Complete the server .
Get information about an object
Shut down the device .
Flush all queued messages .
Ask user for input
Start the SSH channel .
Stop all SSH channels .
Return True if the server is running .
Load the connection configuration from a JSON file .
Start the kernel .
Shut down the kernel .
Kill the kernel .
Interrupt the kernel if running .
Send signal to the kernel .
Return a bool indicating whether the connection is alive .
Return a shell channel .
Return a string representing the sub channel .
Get the Hb channel object .
bind kernel to ipengine
Write debug message to stderr .
Get list of extension classes .
Perform pre - step pre - step .
Recursively walk the contents of an egg .
Scan a module and return a boolean if it exists .
Launch a new IPcontroller instance .
Save connection dict to file .
Load config from json file .
Load configuration from secondary configuration .
Enable autopx and pxrun .
Disable autopx and reset self . run_cell .
run a python cell
Check if the heartbeat is too long .
Runs a task from a message .
Removes a task from a message .
Assign an attribute to an object .
Accept a new connection .
Reject a connection .
Return a string representing the proxy .
Validate the form and post it .
Deletes the object and post delete it .
Ensure user is logged in .
Run check_all .
Execute an editor .
Obtain clipboard content .
Add a function to the chain .
Get metadata for a module or a module
Configure the object with the given options .
Import an object by name .
Attempt to connect to a passwordless server using a passwordless platform .
Try a passwordless passwordless server .
Try passwordless paramiko .
Establish a connection to a given socket .
Creates a new SSH tunnel
Stop scheduling tasks .
Unwrap exception and return it .
Parse an engine .
Unregister an engine .
Handle an execute reply .
Flush all pending notifications from the socket .
Flush all pending messages from the socket .
Flush control packets from the socket .
Flush all ignored control packets .
Flush the iopub socket .
Synchronously spin every interval .
Stop the spin thread .
Flush all notifications from the server .
Send a apply request .
Return the history of the hub .
Send a query to the database .
Return a set containing the opcode for the given names .
Return a |byteParser| instance .
Find all lines that match a given regexes .
Returns the first line of text
Return the first line in a list of strings .
Parse the source and return a list of lines .
Return a list of all arcs in the byte parser .
Return a list of parser parsers .
Iterate over byte numbers .
Find all the statements in the parser .
Return a string representation of the block stack .
Checks that the given chunk is valid .
Return an iterator over the arc lines of this instruction .
Return a list of all the chunks in this parser .
Return a set of all arcs in this parser .
Initialize cover instance
Generate coverage report .
Return True if the file should be included .
Interpret a distribution name .
Open a file - like object with authentication .
Get the parent of an object .
The root topic of the engine .
Render a template string using the given context .
Configure the plugin .
Formats an error .
Split data by num .
Convert nbformat to nbformat
Convert hex color to RGB .
Get the background colors for a given style .
Return Qt font .
Receives a message from the IPython notebook .
Handle a history reply .
Handle a pyout message .
Handle display data .
Display started channels .
Execute the given file .
Handle an error message .
Process an execute payload .
Set default styles .
Run the editor .
Make the text in the prompt .
Make a continuation prompt from a prompt .
Called when the style sheet has changed .
Called when syntax style has changed .
Transform a dictionary into a string .
Returns information about virtual memory .
Get the current CPU times for the system .
Get the uids of the current process .
Get the gids of the process .
Get a list of all process threads .
Return a list of all open files in the process .
Return the SHA1 hash of the current package .
Return information about a given package .
Return the number of cpus in the platform .
Return the number of CPUs available for the current platform .
Return the next result set .
Fetch one row from the database .
Fetch one or more rows .
Fetch all rows .
Connect to a peer .
Reads a JSON string from a JSON string .
Reads a Python file and returns a Python object .
Read a file and return a dictionary .
Wrapper for _write_json
Write a buffer to a file - like object .
Convert glob names to metadata
Load configuration from a dictionary .
Returns True if the given name matches the filter .
Determine whether the given class should be targeted .
Determine whether the given dirname matches the exclude directory .
Determine whether the given file should be watched .
Determine whether the given function should be wanted .
Determine whether the given method matches the given method .
Determine if a module should be wanted .
Return a list of lines from a file .
Execute a list command .
Print a list of lines to stdout .
Perform a pdef statement .
Returns the difference between two symbols .
Convert currency to another currency
Calculate the return value for a given date range .
Get the encoding of a stream .
Get the default encoding for the input stream .
Write a full connection file
Initialize heartbeat .
Initialize session .
Initialize the IO socket .
Initialize the kernel .
Convert html to text .
Convert markdown to text .
Convert domain name to FQDN .
Add noseexclude options .
Configure noseexclude .
Return True if dirname should be excluded .
Return True if the given extension is linked to the given extension .
Call each of the functions in a list .
Calls the given functions in reverse order .
Add a function to the end of the list .
Inserts a function into the list .
Format the usage as a string .
Write the pid file to disk .
Remove pid file
Get pid from pid file .
Construct a magic argument parser for a given magic function .
Returns the real name of a function .
Highlight the given string on the frontend .
Rehighlight the block .
Override the default format method to override the formatoptions .
Copy text to clipboard .
Execute a shell command .
Callback called when prompt is finished .
Checks if the tab is pressed .
Create a context menu for paste .
Handles keyboard keypress events .
Insert a continuation prompt into the cursor .
Handle a complete response .
Handle an execute reply .
Called when kernel d died .
Handle object info reply
Handle Pyout messages .
Handle stream events .
Handle a shutdown reply .
Execute the script at the given path .
Interrupt the reading process .
Reset the prompt .
Restart the kernel .
Handle calltips request
Complete the shell channel .
Process an error message .
This function is called when a message is received .
Handles document contents change .
Add plugin .
Chain the plugins and return the result .
Generate all registered plugins .
Call the plugins with the given arguments .
Configure the plugin .
Loads all installed plugins .
Loads all installed plugins .
Convert a string to PNG .
Convert a latex string to a PNG image .
Check if a distribution exists and if it exists .
Return the object as a dictionary .
The process name .
Get the percentage of cpu times for this machine .
Returns the memory percentage .
Get a list of memory maps .
Returns True if the process is running .
Suspend the process .
Resume the process .
Kill the current process .
Wait for the device to complete .
Wires the kernel .
Returns True if identifier is shadowed in IP .
Register a transformer .
Unregisters a transformer .
Register a checker .
Unregisters a checker .
Register a handler for a list of esc_strings .
Unregisters a handler for a given name .
Prefilter for line_info .
Find handler by line_info .
Apply the transformers to a line .
Prefilters a line according to the custom handler .
Prefilter method for prefilteration .
Return handler for line .
Return handler for line_info .
Return handler for line info .
Check if line_info matches the prefilter .
Handle line_info .
Replace aliases with their aliases .
Handle the given line .
Processes a line of text .
Handles the line of a single line .
Handle line_info .
Override Qt method to hide the widget .
Stop the hide timer .
Draw a Ppanels event .
Show the call info for a given call line .
Handle the cursor position changed .
Return a canonicalized version of path .
Return a masked version of the DataFrame .
Returns True if there is no global global .
Calculate pword frequency .
Return a list of the default aliases .
Define an alias .
Define an alias table .
Validate the given alias .
Execute an alias on the given alias .
Transform an alias .
Expand aliases in a line .
Generate autocomplete directive for test program .
Reset all settings to defaults .
Get a color from the GUI .
Returns a string representation of the textcharformat .
Generate a JWT token .
Remove all expired JWT entries
Check if token is already used .
Check token validity .
Find the common prefix of a list of paths .
Return the size of the document .
Return whether or not the cursor can cut .
Return whether or not the clipboard can paste .
Clear the control buffer .
Cuts the text .
Get input buffer .
Set the input buffer to the input buffer .
Set text font .
Print this control .
Prompt to the cursor to the cursor .
Reset the font .
Applies custom insert to the cursor .
Appends html to the buffer .
Add HTML fetching the HTML fetched from the HTML .
Appends plain text to the buffer .
Clear the temporary buffer .
Complete the text with the given cursor .
Fills a temporary buffer with the given cursor .
Checks if the given modifiers are control key .
Create a QtControl object .
Create a page control .
Filter the page keypress event .
Get plain text from a block
Get end cursor position
Get the column number of the input buffer .
Get line cursor from input buffer .
Get prompt cursor .
Get text cursor .
Insert a continuation prompt into the buffer .
Insert the given HTML into the cursor .
Insert HTML into cursor .
Insert plain text into the cursor .
Keep cursor in buffer .
Quit keyboard quit .
Handle a page .
Called when the prompt is started .
Read a line .
Sets the prompt .
Set the cursor on the top cursor .
Adjust scrollbars .
Extract metadata from command line .
Copies a config file to the ipython location .
Create a profile directory by name .
Find a profile directory by name .
Read the contents of a file .
Create a temporary file and write it to a temporary file .
Closes the file .
Write data to the file .
Add a new heartbeat handler .
Register a handler for a heartbeat failure .
Handle a Pong message .
Create a list of strings from a sequence .
Split a path into a filename and filename .
Display all elapsed time .
Return a tuple of time unit strings .
Extract config from dist_filename .
Uncaches a zip directory .
Convert a list of strings to a single string .
Check if any of the dependencies in the dist .
Set fetcher options in config file .
Create home directory if it doesn t exist .
Return True if name is an archive file type .
Create a new heading cell
Create a new metadata node
Create a new notebook node .
Return True if path is a writable directory .
Unquote a filename .
Convert a python file to a filename .
Get the xd directory for the current platform .
Get IPython IPython directory .
Get the path to the ipython notebook dir
Get the path to a module .
Return the number of outdated dependencies .
Return md5 hash of a file .
Check for old config files .
Update the suggestions dictionary for the given object .
Returns a list of suggestions for the given object .
Return a list of suggestions for the given object .
Returns the relative path to the current working directory .
Return a list of files matching the given pattern .
Returns the MD5 of the file .
Start profiling .
Write the profiler stats to a stream .
Finalize the profiler .
Disable the wx event loop .
Disable Qt4 event loop .
Enable interactive interaction with gtk .
Enable or disable a tkinter .
Enable pyglet hook .
A helper function that saves wave data .
Initialize the database
Run a SQL query .
Get current session information .
Get the last n rows .
Get a range of lines from a string
Return the path to the history file .
Name the session .
Reset the state of the session .
Get a range of values .
Store the output of the given line number .
Write the cache to the database .
Stop the event loop .
Get the number of cpus .
Get system cpu times per CPU .
Return a list of disk partitions .
Get a list of PIDs .
Return a string representation of a start and end pair .
Format a list of statements into a single line .
Return a string representation of the stack .
Join a list of regexes
Mark file as gone .
Update the MD5 hash of an object .
Update the list of available profiles
Stop a cluster
Tries to find a command in the current environment
Read the system body and wait for it to finish .
Find code units for a given file .
Perform coverage reports on the given files .
Set the traceback to stdout .
Initialize the list of available extensions
Initialize the module .
Runs all the lines in the shell
Run startup files
Run the command on the remote host .
Run command line code .
Run a module in the shell .
Get the filename of a file in the static directory .
Return the contents of a file .
Escape all strings in t .
Compute the coverage report .
Copy static report files to the report directory .
Write HTML to file .
Compute the hash of a file .
Index html file .
Read coverage data from a directory .
Write coverage status to file .
Compare two lists of strings .
Get a list of strings .
Chops a sequence into smaller chunks .
Read a manifest from the manifest .
Convert glob glob to regular expression .
Return True if filename matches any of the given patterns .
Returns a list of all versioned files .
Start a kernel .
Shut down a kernel .
Kill a kernel .
Get a kernel by kernel_id .
Get the ports of a kernel .
Get the notebook id associated with a kernel .
Start the kernel for the given notebook .
Shut down a kernel .
Interrupt a kernel .
Restart a kernel .
Creates an IPub stream
Create a shell stream
Create a HB stream for the given kernel .
Reset all properties of the object .
Export the given HTML to a file .
Remove excess whitespace from html
Return a unique identifier or None .
Build a query from a list of tokens .
Given a query string and a list of exclude words return a boolean value that can be used to filter
Build a query to get the date greater than the given date .
Build a date less than the given date_field .
Return a string that can be used for null values .
Ensure fields_insensitive are in fields_dict .
Add options to parser .
Validate a method attribute .
Return True if the given method matches the expected method .
Rotate the text .
Get the websocket URL .
Convert a reply list into a JSON string .
Inject cookie into request cookies .
Actually start the hb callback .
Stop the HBB stream .
open the file - like object
Return the index of the block .
Seek to a specific block .
Edit the editor .
Print the content of the block .
Print the contents of the file .
Run a function on a sequence .
Get the source code of a traceback .
Return a list of lines that are in the given position .
Generate a progress bar .
Kill all engines and kill them .
Call a function f on the client .
Synchronously update the results of a function .
Runs the function f after the function is called .
Return a list of messages .
Get a message from the in queue .
Parse a URL and return a dict with the scheme and port and port .
Returns a list of python modules that have been built in Python .
Try to get completion of a string .
Receives a magic run completion .
Encode an XML attribute .
Configure plugin .
Writes the errors to the given stream .
Add an error to the batch .
Add a failure to the test .
Add a test result to the log .
Return the number of bytes in a sequence .
Generate a random weight from a sequence of loads .
Register an engine .
Unregister an engine .
Handle all pending tasks .
Check if the timeouts have been executed .
Send an unreachable message to the graph .
Save an unmetered job to the graph .
Submit a job to the queue .
Parse raw_msg and dispatch the result .
Handle the result of a result .
Handle an unmetable dependency .
Update the graph for a particular dep_id .
Print the current state of the instance .
Log a single line .
Write a string to the log file .
Stop logging .
Create a new notebook node .
Add an object to the command chain .
Add a regular expression to the regex list .
Return a generator that matches a key .
Return a flat list of tuples for a key .
Called when a directory has been changed .
Returns a list of notebook IDs .
Return a new notebook id .
Delete a notebook_id .
Checks if a notebook exists .
Find a path to a notebook .
Get notebook path by name
Get information about a notebook .
Get a notebook object from the server .
Save a new notebook .
Save a notebook .
Save notebook object to file .
Deletes a notebook .
Create a new notebook .
Copy a notebook .
Split a list of tokens into tokens .
Load the default configuration .
Return a list of the default classes for the shell .
Fixes the command line if it doesn t exist .
Initialize ipython .
Initialize the shell .
Initialize the banner .
Return a human - readable string representation of an object .
Parse a notification name .
Return a dict mapping metadata to traits .
Get metadata for a trait
Validate value .
Return the default value of the field .
Returns True if all items have completed .
Returns True if all tasks are unreachable .
Return a dict representation of the dependency .
Find the number of nodes in a tree .
Pretty print a tree .
Disambiguate a DNS URL .
Apply function f to each element and return the result .
Validate targets .
Dispatches the monitor traffic from the connection .
Dispatch a query .
Handle a new heart
Handle a heartbeat failure
Save a task request .
Save an IPub message .
Handle a connection request .
Unregister an engine .
Finish the registration process .
Send a shutdown request .
Purge the results of a query .
Extract the content of a record .
Get the history of a message .
Query DB records .
Context manager for cd .
Decode the parsed command output .
Run a command under rpath under rpath .
Dispatch a message to the appropriate handler .
Check if a message is from the current session .
Report the given morfs to the given file .
Get the installed version of a command .
Convert unicode strings to unicode .
Extract a header from a message or dict .
Check Packers and unpack them .
Generate a message .
Generate a signature for a message .
Send a list of messages .
Receive a message from a socket .
Save SVG to file .
Upload a string to the clipboard
Convert a SVG string to an image .
Return information about the object .
Get the docstring of an object .
Get the source code of an object .
Get the arguments of an object .
Try to find the absolute file name of an object .
Find the source code lines of an object .
Get the argument definition of an object .
The header of the table
Prints a message to stdout .
Get the definition of a function .
Print the source of an object .
Pretty - print a file .
Format a list of fields .
Search for namespaces in a namespace table .
Create a reactor and start it
Return a string representation of the metadata .
Convert the document to XML .
Recursively load all modules in a package .
Invert a dictionary into a dictionary .
Recursively convert a Python object to a primitive .
Return a list of figures .
Return the string representation of a matplotlib figure .
Select the format of a matplotlib figure .
Find and return the gui and backend
Activate matplotlib .
Configure an inline backend .
Starts tracing .
Stops the current thread .
Start a tracer .
Returns a function that will trace the traceback .
Start the collector process .
Stop recording .
Pause all tracers and stop profiling .
Resume all tracers .
Get line data .
Collect exceptions from a list of remote errors .
Return a list of lines describing the traceback .
startup coverage
Returns canonical dir for given morf morf .
Return the source filename for a given file .
Determine if the given filename should be traced .
Determine if the given frame should be traced .
Log a warning message .
Check for missing packages .
Starts the process .
Shutdown the container .
Return a regex for the excluded regex
Saves the current session .
Combine data from a file .
Collect all python data from the source .
Return the morf - formatted representation of a morf .
Perform analysis on an iterator .
Produce a summary of the data .
Annotate the contents of the corpus .
Generate XML reports .
Reload the file from disk
Find a command and return its path .
Run a command on the child process .
Forward a stream of read events to a given fd .
Read lines from the socket .
Find and return a launcher class .
Start the process .
Build a launcher instance .
Start the engine .
Start the controller .
Get a wysimple app object
Returns True if the event loop is in an event loop .
Starts the event loop in the main event loop .
Get a QApplication instance from IPython .
Returns True if the current app is in an event loop .
Start the event loop .
Creates a blank canvas .
Draw a cross crossing .
Draw a line between two positions .
Create an image from a grayscale image .
Get a UUID .
Get a unique cache key from a GET request .
Get the domain name of a URL .
Returns a dictionary of url arguments for the given URL .