This function converts Sina XML to a list of URL strings.
dailymotion_download - Download a file from dailymotion. org.
Download a Sina video from a URL.
Prints text to the terminal with ANSI escape sequences. If the terminal is an ANSI escape sequence
Print a log message to stderr with the current script name and the given text and colors.
str_ Print a message to the console and exit if exit_code is not None.
str_ prints a message to the console and exits if exit_code is not none.
Detects the current operating system and returns the name of the operating system.
Get info by xml string.
Get the real m3u url segments size and segment_list from a m3u
Turn a text string into a legitimate string based on the current operating system.
Download a CBS file from a given URL.
matchall - Match all patterns in text and return a list of all matches.
Return the value of a query parameter in a URL or None if there is no such parameter
Parse a host string into hostname and port.
Get the title of a topic and part of a Wanmen object.
wanmen_download_by_course - Wanmen download by course
wanmen_download_by_course_topic_part - Wanmen download
has_task - Check if a task is in the queue or if it is in the
Get the event buffer for a set of DAGs or all DAGs if no
str get snowflake connection
Get the AWS access key and secret key from the extra_dejson.
_get_field gets a field from the extras dict. If the field does not exist
copy sql from filename to sql. filename can be a file path or a file object.
Bulk dump a table to a temporary file.
Upload a file to Google Cloud Storage.
str task_state - Show current state of a task in a DAG.
str_ Get a connection to the API.
str_ Get details about an instance in a project. If no project_id is provided
Create a new instance.
Delete an instance. If no project_id is provided the instance will be deleted from the
Creates a new database in the specified instance.
Delete a database from an instance.
Start the SQL proxy process if it is not already running. If it is already running it
Stop the SQL proxy process and clean up the proxy directory.
Returns the version of the SQL proxy installed on the system. If the proxy is not installed
Create a new connection object and add it to the database.
Retrieve a connection from the database. If no connection is found None is returned.
Delete a connection from the database.
Returns a CloudSqlProxyRunner object that can be used to run the SQL proxy.
str_ if database type is postgres return postgreshook otherwise return mysqlhook
cleanup the database hook if the database type is a string and the database hook has a connection
reserve a free TCP port to be used by the SQL proxy.
Normalize a mlengine job id to make it more readable. This is done by replacing all
Get the error code from the error message.
str_ Clear all DagRun instances in the database.
Clear all taskinstances from the database for a set of DAGs.
str_ Set the paused state of all dags in the list of dags_ids
str_ format dag_id task_id execution_date end_date execution_time
Check if there are any tasks in the dagbag. If there are more than max_
str mkdirs - Creates a directory at the given path with the given mode.
_convert_to_float_if_possible tries to convert a string to a float
make_aware returns a datetime. datetime object for the given value. If the value is
make_naive returns a naive datetime object for the given value. If timezone is None
Returns a datetime object with the timezone set to the timezone if it s not already set.
Get a connection to the Druid broker.
Returns a requests. Session object that can be used to make a request to the API.
Function to run the request and return the response.
Check if the response is valid and raise an exception if it is not.
run_and_check - Runs a request and checks the response.
str_ Create a new session and commit the transaction and close the session after the context is
Reset the database to the initial state. This is done by dropping all the database metadata
Returns a pretty - printed message for the given exception. If the exception has a message attribute
str_ Returns a list of records from the database with the given SQL.
get_pandas_df returns a pandas. DataFrame from the given SQL string.
Strips the SQL from the string and executes the given code.
Insert rows into a table. If target_fields is not None then the fields will be
Return a CosmosClient instance.
Checks to see if a collection exists in the specified database. If the collection does not exist
Create a collection in the specified database. If the collection already exists it will be overwritten.
Checks if a database exists in the database manager. If the database does not exist it will
Create a database if it doesn t already exist.
Delete the database with the given name. If the database does not exist it will be created
Delete a collection from a database. If collection_name is none this will delete all collections
Insert a list of documents into a database.
Delete a document from a database and collection.
Get a document from a database.
Get a list of documents from a database. If no database or collection is specified it will
Get a function by name.
Creates a new function in the specified location.
Update a function with the given name and body. Update_mask can be a list of
Upload a zip file to Google Cloud Storage. Returns the upload URL.
Delete a function.
Returns a generator that yields the statuses of the dependencies of the given task.
str_ True if all the passed statuses are met in the dep_context.
str - Returns a list of failure reasons for the given dependency status.
_parse_s3_config - Parse the S3 config file and return the access
get_credentials - get the frozen credentials for a given region. If no region is specified
Get a connection to the vertica server using the vertica_conn_id property.
Flush the buffer to the logger. If the buffer is too large log the last num_
If fileloc is a zipped file return it. Otherwise return fileloc as is.
str_ Construct a task instance from the current state of the task instance. If lock_
Start the DAG process.
Send a terminate signal to the child process to terminate the execution of the DagParser.
Gracefully terminate the process and exit with os. ex_ok.
This method is called when the DAG is started. It will start the DAG in
start_in_async is the main loop for the agent. This is the main loop
str Start the agent in a synchronous fashion.
Refreshes the DAG directory if it is too long or if it is too long to
str print_stat - Prints file processing statistics if it is too long to be printed
Clear nonexistent import errors from the database.
_log_file_processing_stats - Log file processing stats.
Set the list of file paths that should be processed. If a file with the same name
wait until all processors have finished
Terminates all running processes and waits for them to finish.
This method creates a connection to the remote host and returns a paramiko. SSHClient object
str_ Creates a transfer job with the given body.
str_ Get a transfer job by name. If project_id is not specified it will
list_transfer_job - List all transfer jobs in the project filtered by the given filter
str_ updates a transfer job with the given name with the given body and project_id
Cancel a transfer operation.
pauses a transfer operation with the given name.
Resume a transfer operation.
wait_for_transfer_job - Wait for a transfer job to complete.
str_ find_for_task_instance finds all taskreschedules for a given task
str_ Returns the number of open slots in the pool.
Run a command and return the output. Raise an exception if the command returns an error.
Allocate ids for a set of keys.
Begin a new transaction for the current project.
Commit the changes made to the current state of the project. Returns the commit status of the
Lookup a set of keys in the project.
Rolls back a transaction.
Run a query on the project.
Get a single operation by name.
Delete an operation from the project.
Polls an operation until it is done or the polling_interval_in_seconds is
Get the hostname of the current instance of airflow. This is the hostname of the running
str_ Get the languageservice client object.
Get a list of template fields from a class.
A role that renders a template field. The template field is a list of template fields.
dispose_orm - Disposes the current ORM session and the database engine.
Prepare the classpath to be used by the airflow tool. This is done by adding the
Check if the target task id is in the celery queue. If so pull the task
Returns True if the ticket is in the configuration file. If the ticket is not in the
str_ Converts an alchemy object to a dictionary.
chunk_size is the size of the chunk_size of the list items. num_
reduce_in_chunks reduces an iterable to a number of chunks and returns the initial value
str_ Chain up and down tasks into a single upstream task.
Render the log filename for a given try_number in the given template.
Get a connection object for the current API version. The connection object can be used to connect
Wait for the given operation to complete.
Coerce a value to a string if it s not already a string. If it s
This function handles the execution of a databricks operator.
Run the pig command using the pig - cli command.
Fetch the current state of a celery task.
num_tasks_per_send_process returns the number of tasks per send process.
str Max number of tasks per fetch process per sync_parallelism.
Get a connection to the server.
Get a job by its ID.
Wait for a job to be done and return it.
Creates a new version of a model.
Set the default version of a model.
Returns a list of all versions of the specified model in the specified project.
Deletes a version of a model.
Create a new model in the specified project.
Get a model by its name in a given project.
str_ Write batch data to the DynamoDB table. Returns True if successful False if not.
str _integrate_plugins - Introduces the airflow. plugins_manager
Returns the default executor. If no executor is configured the default executor will be returned.
Get an instance of an executor given its name.
Called when there is an error while processing a segment.
Get a connection to the MSSQL server.
Trigger a dag.
Delete a DAG from Airflow and return the number of deleted DAGs.
Get information about a task in a DAG.
str_ Get a list of all available pools.
create_pool - Creates a new pool on Airflow.
Create or update a container group.
Get the current state exit code and detail status of an instance.
Get a list of all the messages for a given instance view.
Get a list of logs for a container.
Delete a container group.
exists - Check if a container exists in a resource group.
Construct an ingesting query for the given static_path and columns.
Poke a message from the pubsub channel and push it to the xcom_push channel
str_ Get all task instances in the DAG. If no state is given all task
str_ Returns the task instance for the given task_id in this DAG.
str_ Get the previous DagRun for this Dag.
get the previous scheduled DagRun for this execution_date
Verify integrity of the current task instance.
Sends a request to the Jenkins server and returns the response body and headers as a tuple.
Convert a context object to a dict of airflow variables.
Conditionally trigger the dag_run_obj. payload and return the dag_run_
Query a metric from a given time range.
Get a DAG by its ID. If the DAG is a sub - dag it
Kills a set of zombies from a task.
bag a dag and all of its subdags into the dags dict.
collect_dags - Collect dags from all files in the given dag_folder.
dagbag_report returns a report of the DAGBAG statistics.
Add days to a datetime string and return the result as an ISO - 8601 formatted string.
Return a list of files that match the regex and filter the results based on the ignore_
Return True if the file is in the list of files in the hdfs. If the file
clear_task_instances removes all running task instances from the session and updates the state of
str Return the next try number. If the current state is running return the current try number
str_ Returns the current state of the task instance in the DAG.
Log an error and set the state to failed and commit the changes to the session.
str_ Refresh the state of the task instance from the database. If lock_for_
str Clear all XCom data associated with this task.
Returns a key that can be used as a key for a key - value pair.
bool_ True if all the dependencies of the task are done False otherwise.
Returns the next time the task should be retried or None if there is no next attempt.
str_ True if the job is ready to be retried and False otherwise.
str Return True if the pool is full False otherwise.
str_ Get the DagRun object associated with this Dag.
Push a new value to the X - Com queue.
str - > None - > str - > bool - > bool - > bool - >
Close the log file and upload it to the remote server. If upload_on_close
Get a connection object for the API version.
Start an instance in the specified zone and wait for the operation to complete.
_ Get an instance template from a resource.
Helper method to wait for an operation to complete.
Check if a bucket exists. If it does it will return True. Otherwise it will return
Creates a bucket in S3. If region_name is none the current region is used
Check if a prefix is in the list of prefixes for a given bucket.
List all prefixes in a bucket.
List all keys in a bucket.
check_for_key - Check if a given key exists in S3. If not
Get an object from an S3 key. If no bucket_name is provided the key
Read the value of a key from Amazon S3. If the key does not exist it
check_for_wildcard_key - Check if a wildcard key exists in the bucket.
str_ - > str_ - > str_ - > str_ - > str_
str_ query_cassandra executes the CQL statement and returns a cursor object.
Convert a UserType object to a dictionary of data.
str_ Get a connection to the Speech API. If no connection is established a new
str Execute the sparksqlhook.
str This function loads all airflow plugins from a list of entry_points.
is_valid_plugin - Checks if plugin_obj is a valid airflow plugin and
str Skips the given tasks in the given execution_date. If the dag_run
Get a connection to the AZuredlFilesystem service.
check_for_file - Check if a file exists on the server.
Returns a list of files or directories in the given path. If the path is a glob
Execute the query and return the result. Raise an exception if the query is in a failure
Uncompress a file from the input_file_name to the dest_dir.
str_ query_mssql - Query the MSSQL database and return a cursor object
Build metrics for a given function name and a given namespace.
Create a cgroup for the given path.
Delete the cgroup at the given path. If the path does not exist nothing happens.
Perform an API call to the Airflow API.
Get the salesforce connection object.
Make a query against the database and return the results as a list of dictionaries.
Get the description of an object. This is useful when you want to get information about the
Returns a list of all available fields for the given object.
Get an object from salesforce using the given fields and object.
Convert a column to a timestamp column. If the column is not a datetime it will return
str_ Get a collection from a mongo database. If no mongo_db is specified the
Returns True if there is an attachment with the given name. If there is no attachment with
Returns a list of all attachments with the given name. If check_regex is True the
Get the filename and payload of the file.
put records to the delivery stream
Get the statuses of the dependencies of a task instance. The statuses are returned in the order
Sends an email to a list of recipients. If dryrun is True the email will be
Sends an e - mail using the SMTP standard library.
str_ Converts datetime to UTC if possible.
check_for_blob - Check if a blob exists in a container.
check_for_prefix - Check if a prefix exists in a given container.
Create a blob from a string.
Read a file from a blob in a container.
Delete a file from a container. If ignore_if_missing is True the file will
Get the FTP connection to the server. If no connection is currently open create a new one
str List all files in a directory. If nlst is True return a list of files
Store a file on the remote server.
Get the modification time of a file on the FTP server.
str Execute the webhook.
str_ Returns a fileservice object for the given connection id.
check_for_directory - Check if a directory exists in a share.
check_for_file - Check if a file exists in a directory.
list_directories_and_files - List all directories and files in a share.
Create a new directory in the specified share.
Load a file from file_path into share_name directory_name and file_name
Load a string from a string_data into a file in the given share_name.
str_ Get a connection to the storage backend.
Download an object from S3. If filename is specified it will be downloaded to the specified
Upload a file to a bucket.
str_ Check if an object exists in a bucket.
Check if a blob is updated after a given timestamp. Returns True if the blob was updated
Delete an object from a bucket.
Get the size of a blob in a bucket.
Get the CRC32C of an object in a bucket.
Get the md5 hash of an object in a bucket.
Returns True if the secondary training status has changed in the job description. If the job description
Returns a string describing the secondary training status of a job based on the previous training status.
takes a path to a tar and uploads it to S3. If the path is
Configure S3 resources based on the given configuration.
Check if an S3 URL is valid.
Get a connection to the log service.
Creates a dataflow and starts it with the given options.
str_ run_migrations_offline - Runs migrations in offline mode.
str Runs all migrations on the database online.
Delete the instance with the given id. If the instance does not exist nothing is done.
str Delete a table from an instance.
str update_cluster - Update the cluster with the given id with the given list of nodes
Prepare the CLI command to be passed to the command line.
Convert a dictionary into a Hiveconf format.
Checks if a table exists in the database. If the table does not exist returns False.
Get a connection to the hiveserver2 database. If no schema is provided the schema
fetch_size is the number of rows in the result set that are fetched from the database
Get a list of records for a given HSQL query.
get_pandas_df returns a pandas dataframe of the results of the given SQL statement.
str_ Get a connection to the ProductSearch API.
Get the endpoint from the http_conn_id and the password. Raise an exception if
_bind_parameters binds the given parameters to the given operation and returns the resulting string.
Escape a string so that it can be used as a value in a query string.
cast string_field to bq_type. If string_field is None return none
Validate that the value is of the expected type. Raises a typeerror if the value is
Get a connection to the BigQuery database.
Returns a service object that can be used to interact with the API. The service object is
Checks to see if a table exists in a dataset.
Cancel the running query if it is still running. If it is running it will be cancelled
Run the table delete API command.
Run the table upsert command to update a table in a dataset. If the table already exists
Get a dataset by id. If project_id is not specified the current project will be
str_ Execute the given operation on the database and store the result in the job_id
executemany executes the given operation on the given sequence of parameters.
Returns the next page of results. If there are no more results it returns none. If
_query_postgres executes the query on the postgres server and returns a cursor object
Make intermediate directories in remote_directory. If the remote_directory already exists it will be
run_with is the command to run. If run_with is None the command will
Called when the application is finished.
Entry point for the command - line tool.
buildhtmlheader - Builds the htmlheader attribute from the header_css and header_
build_jschart - Builds the jschart and the series_js attribute of the
Create a x - axis with the given name and format. If the name is a date
Create a new y - axis with the given name and format.
Get a connection to the database. This will return a connection object that can be used to
str_ Get the last dagrun for the given dag_id. If include_ex
Execute the SQSHook command to send a message to the SQS queue.
Return a response object with the JSON representation of the given object. The object is converted to
str_ If f is a zip file open it otherwise open f as an open file.
Make a cache key from the request path args and kwargs.
str_ Get the videointelligenceservice client.
Get the API key from the http_conn_id. Raises an exception if there is
Returns a requests. Session object with the given headers. If no headers are provided requests.
Execute the API call with the given payload and return the result as a dict.
Build an opsgenie payload from the attributes of this object.
str Execute the opsgenie hook.
Get the connection to the server. If the connection doesn t exist it will be created.
Run a query and return the query_execution_id.
Check the status of a query execution. Returns None if the query is not in progress.
Polls the query status for a given query execution ID and returns the query state.
Returns a pysftp. connection object that can be used to connect to the remote host.
Handle rate limit exception.
Get a specific table from a database.
Get the location of a table in a database.
Returns the status of the cluster with the given identifier. If the cluster does not exist returns
Delete a cluster from the cluster manager.
Returns a list of all snapshots for a given cluster.
Restores a snapshot from a cluster.
Create a snapshot of a cluster.
str_ Execute the API call and return the response.
Create a new job flow with the given job_flow_overrides and return the response.
Filter a list of dictionaries to only contain objects with a size greater than or equal to the
Filter a list of dictionaries for extensions that are not in the ignored_ext list.
str_ Execute the query and save the result to S3. Returns True if the query
Get a pool by name. Raises an exception if the pool is not found.
Create a new pool with the given name and number of slots. If the pool already exists
Delete a pool from the database.
_dict_to_proto - Convert a Python dictionary to a protobuf.
Waits for an operation to complete. If the operation is done it returns it. Otherwise it
Get a single operation from the zone.
Append a label to a cluster proto message.
Get the webhook endpoint from the http_conn_id. If webhook_endpoint is not
Build the payload to send to the Discord API.
Build and execute the discord webhook. The webhook will be sent to Discord via the
Encrypt plaintext with key_name. If authenticated_data is not provided the plaintext will be
str_ Get the texttospeech client.
Close the log file and upload it to S3 if upload_on_close is True
Get environment variables from kube_env_vars and kube_secrets.
_get_secrets returns a list of secret objects from the kube_secrets dict
Get the security context from the kube_config and return it as a dictionary.
Get the extra links for a given operator and dttm. If the operator has a
Start the DAG file processor.
This method is called when the task is done. It returns True if the task is done
Exit the process with a graceful exit. This is called when a graceful exit is received.
str Update the import errors for the given DagBag.
Process all the task instances in the given DAG.
Returns a dictionary of dag_id and task_id concurrency counts for the given states.
_change_state_for_executable_task_instances change the state of the task
_enqueue_task_instances_with_queued_state - Enqueues task instances with
change state for tasks that failed to execute
Process all the executor events in the event buffer.
update_counters updates the status counters based on the current state of the status counters.
Manage the state of the executor in the event buffer. This is called when the executor is
str_ Get the DAG run for the given run_date. If there is no
str Returns a list of task instances that are scheduled for the given DAG run.
str _set_unfinished_dag_runs_to_failed _merge_ dag
This callback is called when a heartbeat is received from the Airflow server. This callback
str_ Get a client for the given project_id or create a new one if it
Get the details of an instance. If the instance does not exist None is returned.
Delete the instance with the given id.
Delete a database from an instance. If the database does not exist it will be created.
Check if an attachment exists in the IMAP folder.
Returns a dictionary of additional parameters with language hints and web_detection_params merged.
str_ Returns a connection to the database. If the database is already connected it will be
Returns True if the given table exists in the current keyspace.
Check if a record exists in the database.
Build the command to track the status of the driver.
Submits a spark application to the Airflow server.
Process a log line from the sparksubmit. log file and store the results in self.
Process the spark status log and store the driver_status in self. _driver_status
Get the task runner for the given local task job.
Wait for the task to end.
str_ mysql_conn_id = mysqlhook. get_conn_id
_configure_csv_file configures a CSV file with the given schema and file_handle
Write the local schema file to the local file system and return the file handle and mime type
Get the column type dict from self. schema. If self. schema is not a list
Return a string representation of the mysql_type.
Return the extra data as a JSON object or an empty object if there is no extra data
scale time_seconds_arr by unit and return a list of time_seconds_arr
Returns the number of days ago in the current timezone.
init_role creates a new role if it doesn t already exist and adds it to the
Delete a role from the database.
get_user_roles returns a list of roles for the given user. If user is
Get a list of all permissions and views that the user has access to.
str_ Check if the current user has the specified role or a list of roles.
_has_perm - Check if a user has a permission for a given view_menu
clean_perms cleans all permissions from the database. If there are no permissions in the
_merge_perm merges permission and view_menu into the permission_name and view_
Update the admin permission view with the permissions from the permissionview table.
str Create permissions for all the DAGs.
Get the fernet key from the configuration file or create a multifernet multifernet
Check if the expression is a partition of the table. If the expression is a partition of
Receive messages from SQS queue and push them to xcom_push. Returns True on success
Get a connection to the HDFS server. If autoconfig is set to True the
Get a connection to the airflow webhdfs service.
check_for_path - Check if a given path exists in the HDFS database.
Get a connection to the pinot broker.
Get the URI for the current connection.
str_ convert datetime. datetime object to dict.
convert datetime. time object to a dictionary
Get a redis connection.
get_pandas_df - get a pandas DataFrame from a SQL query.
Execute a SQL statement. If autocommit is True commit the transaction otherwise do nothing.
Set the autocommit flag for the given connection. If the connection is not supported by this
str_ Converts a cell to a string. If the cell is None it returns none.
Get the current status of the scheduler in a JSON format. If there is no current scheduler
get a connection to the cloudant server
str Execute the webhook.
str_ str_ str_ str_ key_path str_ keyfile_dict str_
str_ Return an authorized http object.
Returns a list of all unfinished tasks.
Prepare a command to be executed on the remote server.
Normalizes a tensor by subtracting the mean and dividing by the standard deviation.
Crops an image to the specified dimensions and returns the new image. If the image is
Flip the left and right of a PIL image.
Computes the perspective of the image at the given start - point and endpoint - value pairs.
Flip the top and bottom of a PIL image.
Adjust the brightness of an image.
Adjust the contrast of an image.
Adjust the saturation of a PIL image.
Convert a PIL image to grayscale.
Save a tensor to an image file.
str Finds classes in the given directory and returns a tuple of classes and their indexes.
Read the info file and return a long tensor with the labels as a list of integers.
Read matches from matches_file in data_dir and return a torch. longtensor of
str_ Returns the accuracy of the given output on the given target with respect to the top
Download a URL to a file. If the file does not exist it will be created.
str_ list_dir - list all directories in a given directory.
str_ List all files in a directory with suffix suffix. If prefix is set to True
Download a file from Google Drive.
Get random parameters from an image and output size. If the image has the same size as
str_ Get random parameters for distortion. distortion_scale is the distortion scale
str_ Get random parameters for an image. Returns w h w w in the image.
str_ Returns a random transform that applies to the image according to its brightness contrast saturation and
Get random parameters for the image. The parameters are in degrees translate scale and shear.
Download the file from the remote server. If the remote server does not support integrity check download
downloads the training and test files from the given urls and saves them to self. processed
Returns the current theme name. If override is not specified the default theme will be returned.
Returns a list of all the themes in the given templates_path. If a theme is
Convert the response to a list of dictionaries.
str_ mvn.
str_log_prob - Eight Schools joint log probability.
Build a random variable with a custom shape and value.
_max_mask_non_finite returns the maximum value of x along the given axis
Returns the event size for the given event_shape. If the event_shape is constant
_eval_all_one_hot is the same as _eval_one_hot
Returns a function that can be used to convert the given identifier to a Tensor.
Returns the total size of the parameters in the graph.
str Build input pipeline.
Checks that map_values is valid.
str_ Call a function with the given arguments. If the args is a list or tuple
str_ Call fn with args and return ret extra and grads.
Broadcast from_structure to to_structure if it s the same length as to_structure
Given a leapfrog_step_state and step_size return the leapf
str_ Step for metropolis_hastings.
Create a new instance from a configuration dict.
Returns x converted to a Tensor with name and dtype. If x is None returns None.
str expands x to the event_shape.
str LogSoftmax if log_probs is True. If log_probs is False return
Ensure that the tensorflow module is installed.
Logistic regression.
str_ Generate the features and labels from the sklearn. datasets. covtype. fetch
Make a tensor that represents the positive axis of a tensor or a list of tensors.
Squeeze a tensor along a given axis.
Returns x - self. loc + self. scale.
_inv_z returns z with scale and loc applied to self. scale and self.
str_ Returns the semilocal linear trend transition matrix for the autoregressive
str ) semilocal_linear_trend_transition_noise
_primes_less_than returns a list of primes that are less than n
str_ Returns the machine s eps value.
_line_search_inner_bisection computes the inner bisection of a
Helper function to print values to a pass through tensor in the form of a flat list.
Checks that the given param has a valid shape and if so raises an error if not.
Interpolate a grid at a given location.
Interpolate a grid by a scale.
concat_vectors takes a list of tensors and returns a list of the concatenated tensors.
_log_vector_matrix returns the logarithm of the vector matrix vs + ms.
_log_matrix_vector returns the log - sum of ms + vs.
_vector_matrix returns the sum of vs along the axis - axis - num_.
_extract_log_probs extracts the log probabilities from the distribution.
Choose a random direction from a list of current_state_parts.
_maybe_call_fn calls the function with the given arguments and checks that the result
Build a trainable posterior with the given initial_loc_fn and param. prior.
str_ moments_of_masked_time_series returns the mean and variance of
Returns the initial value of a masked time series.
Returns a mixture of posterior draws from means and variances.
str_ Returns the range of values in the range of this range. If no name is
str_ Returns a tuple of the names of the distribution functions in dist_fn_args
Build the dist_fn_wrapped and dist_fn_args from the given model.
Returns the entropy of the distribution.
str_ summary for images.
Visualize a reconstructed image.
Visualize the qualitative analysis.
Summarize the mean and standard deviation of the distribution parameters.
Summarize mean in NATS and bits.
str_ Call the multivariatenormal_diag function.
str_ The shape of the output tensor and the hidden_size and hidden_size.
str Call conv1 conv2 conv3 and conv4.
str_ Sample from the static prior. num_ samples is the number of samples. fixed
str - > TensorShape of the batch of the model.
str_ batch_shape_tensor for all parameters.
Vector size to square matrix size.
Sort an array of values by a given axis. If direction is a string it will be
sorts a list of values along a given axis. direction can be either str_ or
_ndtr returns the N - dimensional square root of x where x is the square root
str_ log_ndtr_asymptotic_series.
str_ erfinv returns the erfinv function of x.
str_ joint log probability for text messages.
Returns True if index_points is an univariate marginal.
Returns the index points. If index_points is not specified the current index points are returned
_outer_squared_difference returns the outer squared difference between x and y.
str_ Returns the value and the batch jacobian of the function f at x.
_split_covariance_into_marginals splits a covariance matrix into a list of
Returns a string representation of a numpy tensor.
str - > TensorShape.
str_ to be used as a name for the sample_shape tensor.
Returns the value of the distribution.
Return the value as a numpy array of the eagertensor.
_uniform_unit_norm returns the unit norm of the uniform distribution.
str_log_normalization returns the lognormalization of the concentration.
Given a list of tensors return the common dtype for all the tensors in args_list.
_broadcast_to returns a tensor_to_broadcast + zeros_like target_t
Return the PDF at the current peak in the range [ low high ).
Compute the effective sample size for a single state.
Returns the potential scale reduction for a single state.
str_ Returns the size of x along the given axis or None if axis is none.
Broadcast a list of maybelist states to a list of maybelist states.
Returns a new mapping by removing the specified field from the current mapping.
Merge old and new into a new value. If old and new are none the old value
str_ Returns a deep copy of x. If x is a dict it will be sorted
Returns a dictionary of the function s arguments. If the function is a function it will be
Block for VGG convolution.
str_ Return True if there is no u_turn in the momentum.
_leapfrog - Leapfrog version of value_and_
str_ joint log probability of current_target_log_prob + current_momentum
_random_bernoulli returns a random tensor with a less than or equal to
str_ Convert a nested structure to a tensor.
Returns a dictionary of attributes that are used to create a TensorLike object.
make_mixture_prior creates a mixture prior with latent_size and mixture
str_ pack_images packs images into rows cols width height and depth.
str_ Downloads a file from the server to the given directory and returns the filepath.
Call volatility_fn with the given state and return the gradients of the volatility.
str_ Broadcasts volatility to state_parts if necessary.
str _call_reshape_input_output implementation of _reshape_input_
str _call_and_reshape_output calls fn and reshapes the output
_bdtr returns the Bayesian Deviation between k and n and p.
_flat_sample_distributions returns a list of the flat distribution and a list of
Returns a list of strings for each topic in the given list of words with the highest weight
str_ Add control dependencies to the vector quantizer.
Save a 2D array of images to a file in the form of a matplotlib figure.
Convert a tf dtype to a numpy dtype. If dtype is already a numpy dtype return it
Returns the base dtype of the given dtype or None if dtype is not a string.
Returns True if dtype is a boolean dtype.
Returns True if dtype is a complex dtype.
Returns the maximum value of the given dtype. If dtype is a string or numpy dtype the
Returns a string representation of the dtype.
Returns the size of the dtype. If dtype is a string return the size of the dtype
Assert that all items have the same base type as expected_type.
accept_reflected_fn returns a function that accepts the given simplex and the
Returns a function that expands the simplex and replaces it with the result of applying the
str shrink_towards_best - Shrinks the simplex towards the best index
_replace_at_index replaces the value at the given index with replacement.
str _prepare_args_with_initial_simplex.
_prepare_args_with_initial_vertex prepares the arguments for objective_function with
str_ Build fake data for the MNIST dataset.
Get the config dictionary for this Keras instance.
Create a TensorFlowInitializer from a configuration dictionary.
np. matmul wrapper around scipy. sparse. linalg. matrix_transpose.
_std_var_helper is a helper function for _std_stats_with_
_pick_scalar_condition picks a scalar condition from cond_true and cond_
finish_log_prob_for_one_fiber.
finish_prob_for_one_fiber.
Rotate dimensions if necessary.
Check that the given layer is a batch normalization layer.
Returns a dictionary of slices for each parameter in the given distribution.
_apply_single_step applies a single step to the given distribution.
_apply_single_step applies a sequence of slices to a distribution.
num_cols returns the number of columns in x.
get_static_predicate returns the value of the given predicate or None if the predicate is
Returns the rank of the tensor from the given shape.
is_diagonal_scale returns True if the scale is a diagonal scale.
Pad mixture_distribution into event_ndims.
embed_check_nonnegative_integer_form - Ensures x is non - negative
str_ if x is None or tf. get_static_value returns x. If
Returns True if the dtype is known to be an unsigned integer.
Returns True if the dtype is known to be signed.
Return the largest integer value in a dtype.
Returns the smallest integer value of a given dtype.
Returns True if the dtype is an integer or a boolean dtype.
Generate a new seed based on the given seed and salt. Returns none if seed is none
Dimension size of a tensor along a given axis.
Checks that rightmost_transposed_ndims is non - negative.
Checks that perm is an integer and that it is a list of integers and that it is
Returns the event shape for the given shape.
str - > list of dimensions of x or None if x is not a tensorshape.
build_backward_pass_step - Build a backward smoothing update step for a given timestep
str_ Propagates the mean and covariance of a kalman transition.
str _propagate_mean - Propagate mean to linear interpolation.
str _propagate_cov - Propagate covariance matrix to linear interpolation.
_joint_mean - Computes the mean of the latent states in a joint fashion.
_joint_covariances _joint_cov_step _joint_cov_step
Pushes the latent means to the observations in the mean and variance of the latent means.
Log Normalization for Besselive and Besselive concentration.
str_ Returns the mode of the concentration in the same order as the mean direction
str _rotate - rotates the samples by the mean direction and returns the new samples.
Sample from the 3d distribution.
Returns a copy of the given function. Raises typeerror if the function is not callable.
Returns a copy of dict_ with only the keys with a value of val removed.
recursively replace a dict with a pretty representation of its values.
Get samples from the distribution with the given z and n. If n is None return the
is_namedtuple_like - Check if x is a namedtuple - like object.
Returns a copy of accepted with the values of accepted and rejected. If accepted is not a
Call a function with the given arguments and return the result and gradient.
Check that shape is a valid shape.
str_ Converged any of the values in the converged list and failed list.
_update_position updates the position and converged fields.
str_ Check if the current position and the next objective converge within the given tolerance.
str_ Broadcasts value to target with num_ elements.
_harmonic_number returns the harmonic number of x.
Get a field from a kernel_results object.
Returns the variance scale term.
str_ where returns the value of tval where cond is True for tval and f
str_ val_1 is finite val_2 is finite val_1 is finite val
str bootstrap_results returns the results of the HamiltonianMontecarlo
_resnet_block creates a resnet block with the given convolution and stride.
Deep Exponential family with Poisson - Poisson - Poisson distribution.
Internal method to initialize the parameters for the LambertSpectralModel.
str _registered_kl returns the KL function to use for the divergences
str - > tf. image. Image
Download the sprites from the data_sprites_dir and return the filepath.
Create a character from the given hair top and pants.
Create a sequence of frames from character and action_metadata.
create_seq creates a random sequence from the given character and action_metadata.
Flatten a list of summand kernels into a single list of summand kernels.
Flatten a list of multiplicand kernels into a single list of kernels.
str_ num_examples = num_examples str image_shape = num_examples str
str insert_back_keep_dims insert_back_keep_dims insert_back
Make a list of non - negative dimensions.
str Sorts a tensor by top k.
Raise an error if the number of dimensions is not equal to or less than the number of
Helper function for batch_gather that broadcasts params and indices along the given axis.
str_ broadcast_event_and_samples.
_inv_hessian_control_inputs controls the inputs of the inv_hessian
str _batch_transpose.
sum rightmost ndims preserving shape.
str_ If any of arg_list is None return None. Otherwise return the common dtype
str_ Returns the initial state of the BBFGS optimizer.
Compute the PSD mask for a tensor of length num_. The mask is the minimum
_get_initial_args - Get the initial arguments for the objective function.
_find_best_in_population finds the best value in the population.
_check_convergence returns True if the values in the population are within func_
str_ if it s not a list return it as a list and a bool_ if
Returns a tensor with num_ and a non - negative tol. If validate_args is
str Builds the input pipeline for the training pipeline.
Plot generated images to a file.
Convert a list of productions to a string.
Call the LSTM model with the given inputs.
Returns the multivariatenormal diagonally of the model.
_hat_integral. This is the integral of the Hat function at x.
_hat_integral_inverse. The inverse of _hat_integral is the
_lu_solve_assertions is a wrapper around _reconstruct_assertions.
str_ - > tf. sparsetensor for sparse_block_diag.
Checks that a is a float matrix and that its rank is at least num_.
gen_slices generates slices for the given number of blocks and number of rows and columns.
Generate a mask for the given number of blocks.
str_ to create an array of input_size - > input_size + num_
Create a list of masks from a list of degrees. The first mask is less than the
str_ 0 - dimensional multivariatenormal diagonally.
str_ Converts parameters to weights.
Build the prob_chain_rule from a model dictionary.
Builds the seasonal transition matrix for a given number of seasons.
str_ of_season num_seasons - number of seasons drift_scale -
str_ of num_seasons is the last day of the season in drift_scale
Validate the shape of the observations for the given index points and the kernel s feature dimensions.
Adds the current value to the current value using the given scheduler and max_iteration.
This method is used to set the checkpoint of the model. This is used to set the
Sets the graduation clip constant.
Optimize the model and return the result as a bigdl. nn. layer. Layer
Set the training summary.
Set the summary of the value of the variable.
Set the training data for the model.
Get a list of tuples of content and label_id from the news - 20 file.
get_glove_w2v downloads the GloVE W2V file
Compiles the loss function into a bigdl object.
Evaluates the model on the input data and returns the result.
str is_distributed is True if distributed is True if distributed is False if local is
get the MNIST dataset from the data set sc. data_type can be either
Preprocess the MNIST dataset and return the training and test data.
Get the end trigger number based on the endtriggertype. If the endtriggertype is
str_ Validate an optimizer.
Returns the value of the field. If the field does not exist it will be created.
Call a bigdl function on the specified bigdl_type with the specified arguments.
Convert a bigdl RDD to a Java RDD.
str_ Converts a Python object to a Java object.
Returns an activation object given its name. If no id is given the activation object will be
Returns the label of the object.
Read a distributed image from a parquet file and return it as a distributed imageframe.
Write a parquet file to a file - like object using the bigdl library.
Get an image from the image_frame. If float_key is set to True the
Returns a list of numpy. ndarrays representing the image of the tensor. If to_
Returns the label of the tensor. The label is the string representation of the tensor.
Returns the predicted value of the given key or None if the key does not exist.
Returns the predicted value of x. x can be an RDD or a local RDD
Returns the transformed value of the dataset. This is the inverse of the Java transform function.
Save a Keras model definition to a JSON file.
Build a Keras model.
Returns the class of the dataset distributed on the data_rdd. The data_r
Gets the weights of the tensor. If the tensor has no weights None is returned.
str_ if is_training is True then call the Java training function otherwise call the Java
Load a Torch model from a file.
Load a keras model from a JSON or HDF5 file.
Construct a criterion object from a JC criterion string and a bigdl_type.
str_ Load weights from a JSON file in HDF5. If by_name is True
str_ Loads the training and test images from a keras. preprocessing. dataset.
Build a keras model.
Returns the shape of the input tensor as a tuple of the shape of the input tensor.
Returns the shape of the output of the function.
Get the MNIST data sets.
Read movielens data sets from a zip file.
Returns the path to the bigdl. jar file in the same directory as the bigdl
Returns True if Spark version is below 2. 2 or greater.
Export the current checkpoint as a dictionary of tensors.
BigDL function to save a dictionary of tensors to a file in the target_path.
str_ expands a unit vector into a tile of time steps along a given axis.
str_ Simple attention.
str_ attention.
str_ log_dir str_ log_file_path str_ log_file_
Log a message to the log file. If the log file is too large it will be
Summarize gradient updates for all trainable variables.
str_ to read data from a config dict.
interact_alice interacts with an alice agent and returns the response and the
Convert a list of labels to a one - hot list of classes.
proba2onehot - converts a list of probabilities to a list of one - hot
Create a tf. session with a configproto with allow growth and visible_device_
Load the network from the load_path. If the load_path doesn t exist nothing
Returns the momentum variable of the model.
str Update the learning rate and momentum variables.
round_f1_macro returns the F1 score of the prediction with the average of
Converts a word into a list of strings. If to_lower is True the word will
str_ str_ str_ str_ str_ str_ str_ str_ str_
Build the model and return the model and lstm_outputs.
str_ Builds the basic network for LSTM and pre - LSTM.
Trains the model on a batch of data.
Predict on a batch of data.
Takes a list of tokens and returns a vector of indices for each token in the list.
str_ Make a vector of indices corresponding to the given tags. If bucket_length is
str_ bleu_advanced returns the BLEU measure based on the Brevity
Verify that the given URL is a valid Scraped URL.
Extract a list of crypto. x509 objects from a PEM - encoded string.
Verifies the signature on the request body.
Verify a signature chain and return the certificate associated with the signature chain. If the signature chain
Return the JSON representation of the controls.
Returns a list of ms_bot_frameworks for all the controls in this group.
Returns a list of telegram messages for all the controls in this group.
Returns a list of alexa control strings for all the controls in the group.
str_ Returns the accuracy of y_true on y_predicted on y_true
str_ round_accuracy returns the accuracy of y_true to y_predicted.
Read data from a file and return it as a dictionary.
Make a hello bot agent.
to_one_hot - convert x to k - hot units.
Converts a list of metrics to a list of strings with precision rounded to the given precision.
Load the model from the checkpoint file.
Saves the current model to a file.
Returns a tf. train. AdamOptimizer and tf. train. update_ops.
Search for a word in the trie and return a list of the results. If allow_
str_ = self. config. get ( self. config. get ( self. config
Handle the given request and return the response. If the request is not handled the request is
_act is the main entry point for the agent. This is the main entry point for
Generate a response based on the request and response_template.
Handle an intent from the request. If the intent is not valid it will return an error
Handle the launch request.
Handle unsupported requests.
Pretty print the state of the object in a format suitable for printing to the console.
convert elmo loss to ppl
Build a model from the given configuration.
Interacts with the model and prints the results to the user.
predict_on_stream - Run the model on a stream of input and output the results
Read a text file and return a list of tuples of words and tags.
Import a function from a string.
Get a metric by its name. If the metric is not registered an error will be raised
Return the decay type corresponding to the given label.
Get the best value from a list of values based on a list of losses.
_encode converts a list of tokens into an embedded word vector. If mean is set to
str_ is the path to the requirements file and returns a list of the names and links
sk_log_loss returns the log loss of the prediction of the sklearn model.
Returns a string with the details of the given item data.
Make an ecommerceagent object from the config file.
str_ Main entry point for the ms - bot - framework - server script.
Download source_url to dest_file_path. If dest_file_path is
str_ Untar a tar file to a given folder.
str update_dict_recursive recursively updates editable_dict with values from editing_dict.
Return a new URL with the path set md5 as the last part of the URL.
set_query_parameter - Sets a query parameter in a URL.
Return a dictionary with the Alexa data.
Returns the JSON representation of the control.
Returns a dict with the name and the callback for the bot framework. This is useful for
Returns a JSON representation of the control as a dictionary. The keys are the text and the
Returns a dict with all the buttons and the text attached to this activity as well as the
squad_v2_f1 - Squad - v2 F1
str_ Return the recall at a given number of examples at a given number of k.
Check if a GPU is available on the system.
_parse_config_property - Parses a config property and returns it as a string
Parse a config file and return a dict with the values formatted according to the environment variables.
Expands the given path to an absolute path and returns the resulting path.
This method is the main loop that processes incoming requests and dispatches them to the appropriate handler
_del_conversation removes a conversation from the list of available conversations.
_refresh_valid_certs refreshes the list of valid certificates.
Verify a request against a given signature chain URL. If the signature chain URL does not exist
Handle a single alexa request. If the request is valid it will be sent to the
Import a class from a string.
Get a model from its name. If the model is not registered a config error will be
get glmregularizationpath from h2o model
makeglmmodel - Creates a h2ogeneralizedlinearestimator from a
Create a new h2ocluster object from a list of key - value pairs.
Shuts down the H2O server.
Returns True if the H2O server is running. False if the H2O server
list_jobs - list all the jobs in the H2O database.
Returns a list of time zones in the H2O system.
str _fill_from_h2ocluster Fills _props and _retrie
stabilize the test_func until it returns True or the timeout is reached. The
Get a summary of a H2O object by key and column. If column is None
Delete a frame from the key - value store. If ignoremissingkey is set to True
This method returns a list of model builders that can be used to build a H2O
This method validates the model parameters for a given training_frame and returns a dictionary of the
computes the metrics for a given model and frame
Delete a model by its key. If ignoremissingkey is set to True the model will
Run EC2 instances and wait for them to finish.
Terminate EC2 instances in a given region.
Stop an EC2 instances in a given region.
Start the specified instances in the specified region.
Reboot one or more EC2 instances.
wait_for_ssh waits for the given IP addresses to become available on the given port
Returns the fully - qualified name of the given function. If the function is a class it
Return a string representation of a function s arguments.
Wrap a string at a certain number of spaces.
Wait for the next job to complete and resolve it to a model.
Fits the model on the given data. If y is not provided the data will be
Returns a dictionary of the parameters of the model. If deep is True the parameters will be
This function is called when a signal is received. It prints the signal and then terminates the
wipe g_output_dir if it exists. If it doesn t exist exit with
remove_sandbox removes a sandbox from parent_dir. dir_name is the name of
Scrapes the port from the stdout of a cloud node.
Scrapes the cloud size from the stdout.
Terminates the child process and waits for it to exit. If the process is not running
str_ Stop all the nodes and client nodes in the cluster.
Returns the IP address of the current node.
Returns the port of the node. If the node is a client the port is returned.
Determine the size of the vector in the pre - trained dataset.
str H2O mean absolute error.
str H2O mean squared error.
str H2O median absolute error
str H2O explained variance score
Raise an exception if var is not of the expected type.
assert that the value matches the given regex. Raises an exception if the value does not match
Raise an exception if the value v does not satisfy the condition cond. If the condition is
str_ Check if a variable is of a given type.
Get a human - readable name of a type.
str_ Check if variable is of any type in the list of types. Returns True if
Check if var is a constant.
str Get the H2O configuration.
_read_config reads the configuration file and returns a list of tuples of keys and values
Yields the absolute path to the log files that should be used to generate log files.
str _store_model_progress - store model progress in self. _progress_data
Recalculates the model parameters based on the current progress and the current progress delay.
str _estimate_progress_completion_time - estimate the completion time for the current progress
guess the next poll interval based on the current progress and the current time elapsed.
str_ t0 t0 x0 v0 t0 x0 v0 t0
Returns the time at which the progress is at the given x_target. If the progress
_draw - Draw text to stdout. If final is set to True the text will be
Compute the sizes of the widgets to be rendered. The sizes are calculated based on the width
Returns the size of the current terminal.
Set the character encoding of the bar.
Fits the encoding map to the given frame. Returns the encoding map as a dict.
str - > None - > None - > None - > None - > None - >
str - > int - > str - > int - > str - > int - >
Returns a summary of the data. If return_data is set to True the data will
Describe the data in the H2O API.
Returns a new table with the first row and column of the table as the first row and
Return a new H2OFrame by multiplying the contents of this frame with the given
Returns a list of levels in the HoloViews data frame. The levels are ordered by
Returns the number of levels in the tree.
Returns a new H2O frame with the given level set to the given level.
Returns a new H2O frame with the given levels set to True.
str_ Rename the columns in the table to match the columns in the given dictionary.
Set the names of the columns in the table.
Set the name of the column. If col is None the first column will be used.
Returns True if the column is in the given item. If item is a list tuple or
Modifies the column in the first n_folds k - folds of each column
Stratified k - folds a column in a DataFrame.
Prints the structure of the HoloViews object in a human - readable format.
Pop a column from the frame. If i is a string it will be converted to an
concat returns a new DataFrame with the same columns as this one. If axis = num_
Create a new H2OFrame from a list of data frames.
Create a new H2O frame from a list of H2O frames.
str group_by - Group the results by the given criteria.
Return a new H2OFrame filled with the specified fill - values.
Return a releveled version of y in the H2O frame. y must be
Insert a fraction of missing values into the H2O dataset.
Return a factor expression that can be used as a H2O frame.
Split a string into rows using the given pattern. The pattern can be a string or a
Return a new frame with the left - hand side of this frame trimmed by str_.
Return a new H2OFrame with the entropy of this frame as a string.
Return a new Frame with the number of valid substrings in path_to_words.
Create a new H2O frame with the given data. If data2 is not specified
Replace all occurrences of pattern in this string with replacement.
Return a new H2O frame with the upper - cased value of this frame.
Return a new DataFrame with na_omit attribute set to - num_.
Return a H2OFrame with the first column of the H2OFrame with the
Return a new H2O frame where the frame is not an instance of a string.
Returns a new H2O frame with the minute of the time represented by this frame.
Return a new DataFrame with the same columns as this DataFrame but if seed is not None then
Apply a function to the H2O frame and return the result as a new H2
Parse the given text and return a code object. The text is expected to be a string
Parse a file and return a list of tokens.
move the cursor to a new location drow and dcol. drow and dcol
str_ Unparse the input string and return the result as a string. The input string
Returns a list of the centers of the cell in the model as a list of lists.
Returns the standard deviation of the centers of the model.
h2oconn. request wrapper for h2oconn. request.
Check the version of H2O and raise an exception if it is not the same as
str - > str - > str - > str - > str - > str - >
parse raw data into an OpenFrame object.
Create a deep copy of the given H2OFrame.
This function returns the model with the given id. This function returns the model with the given
get_grid - Get a grid with the given id. Returns a grid object.
str_ Returns the frame with the given frame_id or None if no such frame exists
Download a POJO from the H2O model. If the model has no POJO
Download data from H2OFrame to a CSV file.
Prints a demo function if it exists. If it doesn t exist it prints the function name
Loads a dataset from a file in the H2O directory. If the file does not
Make metrics from two H2O frames.
Put a file into the cache. If dest_key is not specified the file will be
Check if a frame id is valid.
Returns a human - readable string representation of the given size. If size is None returns None
Return a slice normalized to the given total. If the slice has no start stop or step
str - Returns True if slice is normalized.
Wait for the job to complete and return True if the job is complete. If the job
str_ Returns a dictionary of the deep features for each model in the layer.
prints summary of the models in a table. If header is True prints the header
Print the model and hyper - parameters as a tab - separated table. If the model is
Returns a list of hyperparameters for the model with the given id. If display is True
Get a dictionary of hyperparameters for a given model id.
proj_archetypes returns the archetypes of the given test_data. If the test
screeplot plot of the cell variances of the model in the model_json.
Translate the name to lower and capitalize the first letter of each part of the name.
Indents a text by a number of spaces. If ind is equal to num_ then
This is the entry point for the javac command line tool. It prints the command line
Close the session and reset the stage to - num_. If there is no session id
Returns the session id for the current request. If no session id is set the session id
Starts logging to stdout. If no destination is specified it will be written to a temporary directory
Prepare the data payload to be sent to the API. If the payload is empty return none
Returns a dict with the filename as the key and the contents of the file as the value
Log the start of a transaction.
Log the end of a transaction.
Write a message to the logging destination. If logging_dest is a file - like object
str_ Print a message to the console if verbose is True. If verbose is False print
Get the automl data from the H2O API and return it as a dictionary.
Download the POJO of the current leader.
download_mojo - Downloads the mojo from the leader.
Fits the model to the given data and returns the model.
str_ Transform the input x by the mean and standard deviation of self. means and self
str_ Inverse transformation of the mean and standard deviation of the input array.
Extract true string from string_content.
find_node_name finds the node_name in each_line and updates g_
find_build_timeout finds the build_timeout in each_line and stores it in
find_build_failure - Find build failure in each line.
find_build_id finds the build_id_text in each_line and updates
extracts the job build url from the given string and stores it in the global variables g
Grab the java message from the temp file.
Save the dictionary of failed and passed tests to a pickle file in the same directory as the
Update g_summary_text_filename and g_output_filename_failed_tests
Write the content of file2read to fhandle.
Write a message to a text file in Java format.
Load the java messages to ignore from a pickle file. If the file does not exist it
Normalizes an enum constant to lower case and strips leading and trailing whitespace from the string.
Returns a dictionary of synonyms for a given word. The dictionary is ordered by number of synonyms
Polls the status of the job and updates self. status and self. warnings.
Write the H2O object to a POJO. If path is set to str_
Fits the H2O algorithm to the given frame and returns the resulting frame object.
Returns a dictionary of the default parameters for each parameter. The key is the name of the
Returns a dictionary of actual parameters. The keys are the parameter names and the values are the
Get the deep features for a given test_data and layer. If layer is an integer
Get the scoring history for a given model.
shows the model and the summary of the model in the model_json and the model
varimp returns a pandas dataframe of the cell values of the model. If the model is
residual_degrees_of_freedom returns the number of degrees of freedom
Returns a dictionary of the coefficients of the model with the name as key and the value as
Download a POJO from the H2O dataset to the given path.
Download the mojo from the H2O library.
Save the model details to a file. If the file does not exist it will be created
Raises an error if the number of targets is not the same as the number of predicted
Returns a list of all cross validation models in the H2O database.
_wait_for_keypress - Wait for a keypress to be pressed.
as_data_frame - Return the cell as a pandas dataframe.
Prints the contents of the table to the console.
Search for a jar file in the current working directory. If no jar file is found raise
Generator that yields the paths of the jar files in the same directory as the current working directory
Returns a csv. DictWriter object for writing to a file - like object f.
Convert a relative path to a relative path relative to the root_path and package_name
discovers all modules in the package and returns a list of their URIs.
str Write the API documentation for all modules in the project to the specified output directory.
str_ to_list returns a list of the cell values in the table as a tuple
load_dict - loads the java message from a pickle file. If the file does not
add_new_message - Add new message to message_dict and update message_dict
Save the current state of the dictionary to a pickle file if the dictionary has been changed.
prints all the java messages to a file in the same order as in g_ok
Parse the command - line arguments and set global variables.
Print the usage string and exit the program with the number of exit code.
Locates all files in a given directory and returns them as a list of absolute paths.
Find a magic in a file and return a tuple of the spell of the first line.
This is the main entry point for the test program. It prints all the files in the
Transform a H2O frame into a H2O frame. If allow_timestamps is
Summarize all failed runs in g_test_root_dir and add them to g
extract printsaveintermittens from g_summary_dict_intermittents
str_ - The name of the matplotlib module to use for the plot. server - If
Check if the H2O builder is available. Return True if the builder is available False
This function trims the data back to the monthtokeep. This function is called from
Returns a dict of all endpoint groups keyed by the endpoint name and the list of endpoint instances
Update the site forward settings.
str_ Returns a JSON representation of the given data. If no data is provided the default
Comment a user s medias. If the user doesn t have medias return False.
Get the credentials from the secret file. If no username is given then get the credentials from
Like a user s medias. If filtration is set to true it will like
like hashtag returns a list of like medias for a given hashtag.
Check if a user is not in the bot s whitelist or blacklisted list.
Reads a list of strings from a file. Returns an empty list if file does not exist
str_ Create a unique message_id and add the schedule_time to the message.
Defer the execution of the message. The message will be modified if it is live.
Guess the service name and is_arm from the spec_path.
Get the URI for the given request.
Get a connection to the target host using the given request object.
Perform the given request and return the response.
Returns the authorization server.
Validate the request URI and return the netloc.
Get the CLI profile from the Azure CLI config directory.
Open a request to the given URL using the given HTTP method and URL.
Set the timeout for this request. The default timeout is 5 seconds. The default timeout is
str_ Set the value of a request header.
Returns a list of all HTTP response headers for this request. The headers are returned as a
str - > None - > None - > None - > None - > None - >
Returns the HTTP status code of the request.
Return the status text of the request.
Return the response body of this request as a string. If the response body is a safe
str_ Set the client certificate for this request.
Send a PUT request to the server.
Put a header on the current request.
str - > None - > None - > None - > None - > None - >
Returns the response as a _response object.
_get_readable_id returns a readable version of id_name. id_prefix
Returns the name of the serialization of the given element name. If the element name is already
Returns a dictionary of properties from an entry node. If include_id is set to True
Get the children of a node from a given path. The path can be a list of
_find_namespaces_from_child finds the namespaces of the given child node in the
Convert an XML string into a servicebusnamespace object.
Returns a servicebusregion object from an XML string.
Converts an XML string representing a namespace availability response into a NamespaceAvailabilityResponse object.
Returns a metrics object from the given XML string.
Updates the metadata of a given keybase.
Build a package from a given PR number.
Replaces the word alterations of a document. The operation is performed on the resource identified by
Gets the storage account properties for the specified storage account.
Gets the storage account keys for the specified storage account.
Regenerates the storage account keys for the specified storage account type.
Deletes the storage account with the specified name.
Checks if the specified storage account name is available for use.
Gets the properties of a Hosted Service.
Deletes the specified hosted service. If complete is set to True the service will be marked as
Deletes the specified deployment from the specified service. If delete_vhd is set to true
Swaps the given source_deployment into the given production. The source_deployment must be
Updates the status of a deployment.
Walks through the upgrade domain of the specified service in the specified deployment.
Reboots a role instance from a service in a deployment.
Deletes the specified role instances from the specified service in the specified deployment.
Checks if a given service name is available for this subscription. The service name must be unique
Lists the certificates associated with the specified service.
Gets the certificate for the specified service.
Adds a new certificate to the specified service.
Deletes a certificate from a specified service.
Gets the management certificate for the specified subscription.
Adds a new management certificate to the subscription.
Deletes the management certificate with the specified thumbprint.
Gets the properties of an affinity group.
Creates a new affinity group in this subscription.
Deletes the specified affinity group from this subscription.
This method returns a list of subscription operations that match the specified filters. If no filters are
Deletes a reserved IP address.
Associates the specified reserved IP address with the specified service and deployment. If virtual_ip_
Dissassociates a reserved IP address with a service in a deployment.
Returns the reserved IP address for the specified virtual machine or None if it does not exist.
Gets the role with the specified name from the specified service in the specified deployment.
Deletes the role with the specified name from the specified service in the specified deployment.
Starts a role in the specified service in the specified deployment. If the role is already running
Starts the specified roles in the specified service in the specified deployment.
Restarts an existing role in the specified service in the specified deployment.
Adds the specified DNS server to the specified service in the specified deployment.
Updates a DNS server.
Deletes the specified DNS server from the specified service in the specified deployment.
Lists the versions of a resource extension.
Unreplicates the specified virtual machine image.
Shares the specified virtual machine image with the specified permission. If the virtual machine image is already
Deletes a virtual machine image. If delete_vhd is set to true the virtual machine
Get a list of all virtual machine images.
Deletes the specified image from the server.
Gets the path to the data disk of the specified role.
Deletes the specified data disk for the specified role. If delete_vhd is set to
Updates an existing disk.
Deletes the specified virtual disk. If delete_vhd is set to True the virtual disk
Build the receiver.
Create a SharedAccessKey object from a connection string.
List all subscriptions for a given topic. Returns a list of subscriptionclient objects for each subscription
Parse the response for an asynchronous operation and return it as an asynchronousoperationresult object.
Perform a GET request to the given path.
Perform an HTTP PUT request.
Gets the status of the specified operation in the specified request.
Update the management header based on the request method and the X - MSS - Version.
Build a travis package based on the environment variable travis_build_package.
Get a list of all regions in the service bus.
Returns a list of all namespaces in the servicebus.
Get a namespace by name.
Creates a new namespace in the specified region.
Deletes the namespace with the specified name. If the namespace does not exist nothing is done.
Checks if a namespace is available for use.
Returns a list of topics for the given topic name.
Returns a list of notification hubs associated with the specified notification hub name.
Returns a list of all relay feeds for the given relay name.
Get the metrics rollup queue for a given metric.
Get the metrics rollup feed for a given topic and metric.
Gets the metrics rollup notification for a given metric in a given hub.
Get the metrics rollup feed for a given relay.
str_ Create a new environment in the given env_dir using the extendedenv builder.
Creates a new virtualenv with the given packages.
Creates a new SQL Server.
Sets the admin password for the specified server.
Returns a list of all quotas for the specified server.
Deletes the firewall rule with the specified name from the specified server.
Returns a list of all firewall rules for the specified server.
Returns a list of all service level objectives for the specified server.
Delete a database.
Returns a list of all databases in the project with the given name.
Get the state of the current session.
Set session state.
Check that the challenge string is a valid bearer string and return the rest of the string.
Returns an erroraction for the given error.
Creates a new queue with the specified name. If the queue already exists it will be overwritten
Deletes the specified queue. If the queue does not exist fail_not_exist is set
Gets the queue with the specified name. If the queue does not exist it returns None.
Creates a new topic. If a topic with the specified name already exists it will be overwritten
Returns the topic with the specified name. If the topic does not exist it returns None.
Creates a new rule for the specified topic in the specified subscription. If the rule already exists
Gets the rule with the specified name in the specified subscription. If the rule does not exist
Returns a list of all rules for the specified subscription in the specified topic.
Creates a subscription on the specified topic. If the subscription already exists it will be overwritten.
Gets the subscription with the specified name for the specified topic. If the subscription does not exist
Returns a list of all subscriptions for the specified topic.
Sends a message to a topic.
Unlocks a subscription message. The lock_token is used to acquire a lock on the
Sends a batch of messages to a queue. This method is intended to be used by the
Unlocks a message in a queue.
Receive a message from a queue. If peek_lock is set to true the message will
Receive a subscription message from a topic. If peek_lock is True the message will be
Creates a new Event Hub.
Updates an existing event hub.
Gets the Event Hub with the specified name.
Sends an event to a hub. If device_id is specified the event will be sent
Updates the service bus header based on the request method and body. If the request method is
Returns an authorization string for the given request and httpclient.
_token_is_expired - Check if the token is expired or not.
Get an access token from the given host path and httpclient. If the token is expired
Update the request URI query and return the new path and query.
Delete the message from the service bus. If the message does not exist raise an exception.
Unlock the message. If there is no queue or if there is no topic or subscription unlock
Renews the lock on the queue or subscription specified by the _queue_name and _
Adds the headers to the given request object.
Serialize the request body as a batch request body.
A general error handler that raises an azurehttperror with the status code and message.
r. is_redirect is True if the request is a redirect. If it is False
Use the given profile. If the profile is not a known profile an error is raised.
Delete a queue from the service. If fail_not_exist is set to true the
Delete a topic from the service. If fail_not_exist is True the topic will
Create a SharedAccessKey object from a connection string.
Get the properties of the resource.
bool - True if the lock has expired. False - False if the lock has expired.
str_ Returns a list of results from the results_queue. If the queue is empty
str Runs the task collection in a separate thread. This thread is responsible for adding tasks
Build a config dictionary from a package name and a list of package names. If the package
Create a message object from a response object.
Convert an lxml. etree. _Element to a lxml. etree. _Rule
Convert an etree element to a queue object.
Convert an etree. _Element to a topic object.
Convert an etree element to a subscription object.
parse_enum_results_list - parse XML response into an enum object.
Returns a dictionary of entry properties from an XML element. If include_id is set to
list_queues - List all queues in the service.
str_ Returns a list of topicclient objects for each topic in the service.
Gets the site details for the given website.
Delete the given website from the given webspace. If the given website does not exist it will
Update the state of a website in the given webspace.
Restarts the website with the given name in the given webspace.
Returns a list of historical usage metrics for the given website. Metrics can be a list of
Gets the list of metric definitions for the given webspace and website.
Returns the publish profile XML for the given website and webspace.
Gets the publish profile for the given webspace and website.
Creates a new cloud service in the specified region.
Checks to see if the specified job collection is available for the specified cloud service.
Gets the details of a specific job collection.
Cancels the scheduled message with the given sequence numbers.
Re - connect to the server and queue any unsent messages to be re - sent.
Gets the certificate from a publish settings file and writes it to a file in PEM format.
Load all cookies from the cache and store them in the session s http. cookies.
Returns the terminal width of the given value.
Get the cut prefix of the given value. If the value is longer than max_len
Print a message to stderr in the same order as the terminal width. If the user is
Format a file size into a human - readable string.
Format the elapsed time in hours minutes and seconds into a human - readable string.
Create a status line based on a list of progress formats.
A progress bar that displays the progress of the given iterator. The progress bar will be printed
str_ Returns an iterator over the segment numbers for this segment. This is the number of
Returns an iterator over the segments of this representation.
str_ Wait for the given time to elapse. Returns True if the time has passed
str_ Put a segment into the queue.
str - Queue the given value in the given queue. If the queue is full the value
Returns a list of parameters to be sent to a PV SWF. If the SWF
Extract the nonce from the last redirect URL.
str Find the vpid for a given url.
str_ parse json data and validate it with schema if schema is provided. If schema is
parse_xml - Parse an XML string into an ET. ElementTree object.
str_ - > dict parse_qsl - > dict parse_qsd - >
str_ Search for a key in a dictionary and return a list of the keys found.
Iterator over all tags in html that match the given tag. The tag is returned as a
Determine the encoding of a sample as a JSON string. The encoding is determined by looking at
str_ - > parse_json - > parse_json str - > parse_json
str_ parse_xml - return XML from response. text as a list of strings.
str - > None - > None - > None - > None - > None - >
str - > None - > None - > None - > None - > None - >
str_ Parse a list of cookies into a dictionary of query parameters.
Returns the message as a string. If the message has arguments it will be formatted with the
Create a new log record with the given name level fn lno msg msg args exc_
Login to the server with the given email and password. If the user is not logged in
Load a support plugin from the current stack.
update_qsd returns a new URL with the updated query string.
iter_chunks - iterates over the tags in the file and returns a list of tags
Returns a generator that yields all of the required arguments of the argument with the given name.
check if a file exists and if yes output the file. If not exit with an error
Create the output for a player. If no player is specified the output will be stdout.
str_ Create an HTTP server for the given host and port. If the host or port
iter_http_requests is a generator that yields HTTP requests from the given server to the
Passthrough output from a stream to a player output file.
Open a stream and return the file descriptor and prebuffer.
output_stream - output a stream to a player
Read data from a stream and write it to the output.
Handle a single stream. If the stream is a subprocess output it. If the stream is
str_ Fetches streams from a plugin.
fetch_streams_with_retry tries to fetch a set of streams for a given plugin
str - Returns the name of the stream with the given name if it exists in the streams
Print a list of all available streamlink plugins. This is useful for debugging and debugging.
Authenticates the user using the Twitch OAuth flow.
Load streamlink plugins from a list of directories. If the directory does not exist a warning
Setup HTTP session options.
str Loads plugins from the plugins_dir. If the plugins_dir is a directory
Log the current versions of the python and socks and websocket versions.
_get_stream_id extracts the stream id from the given text.
_get_iframe parses the given text and returns a list of streams.
Get an option from the options dictionary.
str - > None - > None - > None - > None - > None - >
str_ Get a plugin option by key. If the plugin does not exist return None.
Resolve a URL to an absolute URL. If follow_redirect is True the URL will be
Load all plugins in the given path.
Returns the number of hours minutes seconds from the given value. If the value is not an
Find the player url from the response.
str_ Load a M3U8 string into a M3U8 object.
str - > str The name of the player that is supported by the given command.
Get the stream id from the given html string.
Returns a list of tuples of stream number and stream name.
_login - Login to the server with the given username and password. The username and password
Add a map function to be called when a key is found. The function is called with
Perform an API call to the Crunchyroll API.
Start a new session and return the session_id.
Get information about a given media.
Create the crunchyrollapi object based on the options.
Returns a string representation of the given character. If the character is a number it will be
Read n bytes from the stream and return them as a string.
Return the value of the code at the current index. If extra is not specified the value
str_ Returns the explanation of the error. If the error is an error the explanation is
str_ Set the decodetable to be used for decoding. The decodet
str_ format the length of each symbol in the lengthtable and the decodetable
Read a tuple from the input stream.
Returns an explanation of the bit pattern at the given index. If extra is none the explanation
Return the value at index. If index is out of range raise a ValueError.
Returns the lower and upper bounds of the extratable value at the given index.
Returns the value of the bit at the given index. If the index is greater than the
Return the mnemonic of the symbol at the given index. The mnemonic is a string
Return the mnemonic string for the given index.
Compile the action table into a list of actions.
Perform an action on the given widget and return the result of the action. The action is
Make a string of hex data from the current position to the end of the stream.
str Metablocklength - Check for reserved or skiplength - Check for filler
Returns True if the file is compressed False otherwise.
Read blocktype and blockcount for a given block kind.
Convert a list of integers into a list of integers.
Read an array of prefix codes of a given kind and number ofoftrees.
Patch a function so that it can be used as a hidden attribute of the dataset.
Add virtual columns with proper motion to vperpendicular.
str_ example of the vaex app. This is the main function of vaex.
Open multiple files and concatenate them into a single dataframe.
str_ import vaex. samp. single_table and convert to astropy. table
str_ from astropy. table. Dataset. astropytable
from_scalars - convert a list of scalar values to a list of numpy. ndarray
from_csv - read data from a CSV file into a pandas. Series.
Connect to a VAEX server and return the result as a list of dict objects.
zeldovich function. This function returns a random number generator for the zeldov
Concatenate a list of dfs into a single string.
Returns a list of integers representing the range of values in a column. If the range is
str_ Open a dataset at the given path and add it to self. dataset_selector
Evaluate an expression on the dataset.
_depending_columns returns a list of the columns that are depending on this selection.
sorts the list of pairs in ascending or descending order. If ncol == num_
wait for all the threads to finish
Open the given document in the current operating system.
A context manager to write a file to a file - like object or file - like object
str_ Splits arrays into masked arrays and merges them into a single masked mask.
median_approx returns the median approximation of the expression. The expression is assumed to be a
Create a 2D plot widget for the dataset.
Draw a 3D plot of the volume data.
Returns the dtype of the expression. If the expression is a variable the dtype of the variable
Get the private directory for this object.
Remove the virtual meta data from the private directory. If the directory does not exist it will
Write the virtual meta data to a file in the private directory.
Write meta data to a file in the private directory.
str - Sets a variable in the context of the template. The variable will be written to
str_ If the variable is a string evaluate it and return it. Otherwise return the variable
Evaluates a selection mask in the scope of the list. If no selection is given then the
str_ to_dict - returns a dictionary with the values of the table as keys and
str_ Copy a DataFrame to a new DataFrame with the same columns and values as this one
str - > arrow table from vaex_arrow. convert. arrow_table_from
Return an astropy. table. Table containing all the data in the dataset.
Add a column to the index.
str_ Name of a column to a new name. Returns the new name. If unique
Add virtual columns from cartesian coordinates to polar coordinates.
Add virtual columns cartesian velocity to polar coordinates.
Add virtual columns polar velocity to cartesian coordinates.
Add virtual columns rotation to the matrix.
Add virtual columns from spherical to cartesian.
Add virtual columns from cartesian coordinates to spherical coordinates.
Add a virtual column to the table.
Deletes the virtual column with the given name.
Add a new variable to the model. If the variable already exists it will be overwritten.
Deletes the variable with the given name and emits the signal_variable_changed signal.
Return the last n characters of the string.
str_ Prints the head and the last n rows of the table.
cat - Prints two sequences in a table. i1 and i2 must be lists
Set the current row of the list.
Returns a copy of the DataFrame with all columns trimmed.
str_ Take a subset of columns from the DataFrame and return a new DataFrame with those columns
Extract a subset of the data from the string. If the string is filtered it will be
undo the last num_ rows of the selection with the given name. If no executor is
redo the selection with the given name. If no executor is given it will be used
Returns True if the given selection can be redoed. If the given name is not given
str_ Select a rectangle at x y. limits can be a list of floats or a
str_ Selects points in the image whose radius lies within the circle r.
Creates a new selection and adds it to the selection history. If execute_fully is True
Returns the name of the column that is valid for the given initial_name.
Returns a graphviz representation of the tree.
Categorize a column. If check is set to True the column will be categorized
Returns a new DataFrame with the values of the given column converted to integers. If values is
str_ Returns the data of the table as an object.
str_ Returns the number of elements in the mask. If selection is True returns the length
_hstack adds columns from another table to the current table. If prefix is not None
str_ Concatenate two DataFrames and return a new dataframeconcatenated object.
str_ Adds a new column to the dataframe and updates the length_unfiltered attribute.
Patch a function in the dataframe with the name of the function as the name of the function
Fill missing values in an array with a given value.
Convert an array to a string if it is not larger than sys. maxsize. If it
Convert object to a numpy. recarray with the same shape as the object s attributes.
Write properties to a file - like object.
Write a comment to a file - like object.
Write a property to a file - like object.
Yields lines from a file with unicode characters replaced with a single unicode character. This is
Show the current version of the module and its dependencies. This is useful when you want to
Renames a keyword argument in a function or function call.
Set the numpy. fft library to use. If none is specified the default is numpy.
beat_track - Tracks the time of each beat in the input file.
Adjust the tuning of an audio file by taking the harmonic tuning and then
hz_to_mel - Convert Hz frequencies to Mel frequencies.
mel_to_hz - Convert Mel frequency to Hz.
numpy array of frequencies of the Fourier transform in the range [ 0 num_ ).
cqt_filter_fft - Filter the CQT data using the Fourier transform
trims the top n_bins bins from the top of the cqt_resp array
Compute the response from the CQT data.
Return the number of downsamples to downsample based on the filter_cutoff and the number
Early downsample the audio data.
uniform transition between 0 and n_states - 1 where n_states is the number of
str_ Set the current image of a matplotlib plot.
Check that axes is an instance of matplotlib. pyplot. gca. If axes is None return
Helper function to scale the axes based on the axes type and the which argument.
coord_fft_hz returns the frequency spectrum of the n - th coordinate in H
str_ coord_mel_hz returns the mel_frequencies of a
coord_cqt_hz returns the frequencies of the CQT data for the
chroma binning function for chromosomes with octave - based binning.
a helper function to generate a time string for a given number of frames. This is a
time_stretch - Stretch a time - series y by a given phase rate.
hpss_beats takes an input HPSS file and returns a list of beat
str_ helper function to compute the neighbors of a given set of points.
Calculate the bandwidth of a given window.
win_sq is a window of length n_frames where n_frames is the number
Return the Jaccard distance between two integers.
str - > int - > int - > int - > int - > int - >
Returns a list of intervals that overlap between intervals_from and intervals_to.
Load audio data from a file using the audioread library and return a numpy array
Convert an audio value to a mono array. If the input is not a mono
Returns a set of files in the given directory that match any of the given extensions.
stretch an audio file in a demo mode.
Process the command - line arguments and return a dictionary with the parsed command - line arguments.
This is a demo of the HPSS algorithm. It takes an input file a list
tightness specifies whether to trim the last num_ beats in the onset_
Compute the local beat score for the given onset_envelope and period.
beat_track_dp takes a local score and a time period and a tightness
Return the last beat in the cumulative score.
Detect onsets and save them to a CSV file.
check that x is an integer and cast it to an integer. If cast is None the
Read the next image from the file and return it as a string. If the file is
get_frame returns the frame with the given frame_id. If the frame_id
Write a number of frames from the image to a directory. The number of frames will be
Track the progress of a list of tasks and print a progress bar to the console.
Flips the image along the axis specified by direction. direction can be one of str_
rotates an image with a given angle around a given center.
str_ clip bboxes to the image_shape and return the clipped bboxes.
str_ Returns a scaled version of bboxes with the given scale.
str_ impad pads an image to the specified shape. pad_val can be
impad_to_multiple - Pads an image to a multiple of the specified divisor
scale the size of the image to the given scale. scale is the width of the image
Resizes an image to the specified size. Returns the resized image w_scale and h
imresize - Resize an image to the same dimensions as dst_img. If return_
Register a file handler for a list of file formats.
get_priority - get a priority from a string or an integer.
Dequantizes an array to be between min_val and max_val.
str_ | imshow | cv2. waitkey | wait_time | num_ seconds
str_ Dequantizes the flow between two data sets.
Load a checkpoint from a file.
str - > ordereddict - > ordereddict - > cpu - > cpu - > cpu
Saves the current model state to a file in mmcv format.
Initialize a torch. optim. optimizer object from a dictionary or a torch. optim. optimizer
Initialize the logger. If log_dir is specified the log file will be added to the
Returns the current learning rate for the current optimizer.
Register a new hook with the given priority. If the hook already exists it will be replaced
Run the given data_loaders in the given workflow. The data_loaders can
str_ Register training hooks.
Cut video from start to end and print to out_file. If start and end are
Concatenate a list of video files into a single video file.
list_from_file - List items from a file.
Returns a dictionary from a file.
3x3 convolution.
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
str Write an image to a file using the cv2 library. If auto_mkdir is
str_ bgr2gray - convert a BGR image to a grayscale image.
convert a grayscale image to a grayscale image in BGR format
Convert an iterable of strings to a given type. If return_type is none return the
str_ is_seq_of - Check if a sequence is of a given type.
Slice a list into a list of lists. lens can be a list or a tuple.
avg returns the average of the values in the history. n must be greater than or equal
str_ scatter function for torch. tensor and torch. cuda.
Return the value of a color or tuple of color values.
str Returns the time since the last check for the given timer_id. If the timer
str_ Start the timer if it s not already running. If it s already running it
Returns the amount of time since the start of the timer.
Returns the amount of time since the last check. Raises an exception if the timer is not
str_ - Show a flow in the terminal. win_name - Name of the window
str_ Make a color wheel from a list of colors.
str_ Returns the accuracy of the given output on the given target with the given topk
str_ scatter_kwargs - Scatter the inputs and the kwargs of a scatter.
Perform the request and return the response. If the request times out it will retry the request
Return the response as a JSON string. If no content_type is provided the response will
Return the response as a text string.
Handle a callback from the AWS API.
str_ Send multiple requests to one or more URLs.
A wrapper for requests. request that takes a URL and a method and returns a response.
Start the master process. This is the main function that will be called when the master process
Normalize a task v2. 0. 0 - > v2. 0. 1 -
Returns the name of the wheel distribution in the form of name and version.
Returns the basename of the wheel archive. The archive basename is the concatenation of the wheel distribution
Add additional setup. cfg requirements to the package metadata file.
Creates an activity that displays a text message with optional speak.
A simple wrapper around suggestedactions that takes a list of cardactions and returns an activity with
str_ Shows an attachment with the given text and speak and input_hint.
Renders a list of attachments with the specified text and speak and input_hint.
Returns a string with an attachment with a given content type and a given URL.
_telemetry_client - The telemetry client to use.
Read a set of keys from the database.
Write a set of changes to the database.
Delete one or more keys from the database.
Create a storeitem from a result dict.
Create a dictionary from a storeitem object.
Sanitize a key to be used as a key for a key - value pair.
str Create database and container
Get or create a database from the given id.
Get or create a container in the database. If the container does not exist create it.
Fill the qna event with information from the query results.
Returns a conversationreference object for the given activity.
Returns the name of the step at the given index. If the index is out of range
Returns True if the channel supports suggested actions.
Returns True if the given channel supports card actions with the given number of buttons.
Get the channel id from the activity.
Returns True if the given auth_header is a valid token from the emulator.
Returns a hero card attachment.
set control classical to val if val is greater than or equal to num_
Returns a copy of this string. If name is not specified the name will be set to
Returns a QASM string for the given string. If the string is not a Q
Returns a QASM string for this parameter.
Run the given circuit and return the resulting circuit. The circuit will be removed from the graph
str_ is the name of the pass that should be run.
Dump all the passes in the working_list as a list of strings.
Dump all the passes of this flow controller.
This is the main controller factory. It creates a flow controller based on the passed passes options
str_ u_base Generates a u_base sequence.
Returns the parameters of a single gate.
Returns the matrix of a single - gate.
str_ Converts a circuit to a DAG.
str_ Returns the fit function of the log - likelihood of a function at a given value
osc_fit_fun returns the oscillator of the given x with the given
Plot the coherence of a qubit.
str - > numpy. ndarray of the mean and standard deviation of the raw_rb.
plot the mean and variance of the data and survival_prob on the plot.
str_ Composes two u3 quaternions.
Converts a rotation from Yzy to Zyz.
_validate_input_state - Validates the input quantum state.
str _trim - Trims the background of an image and returns a copy of the image
_get_gate_span returns the span of the given qregs based on the
Run the coupling map on the given DAG and store the result in self. property
QUBO - > QUBO - > QUBO - > QUBO
Process a bit_id node and return a list of the corresponding register and bit index.
_process_gate processes a single gate node.
Process a CNOT node.
Process a measure node.
Process an IF node.
Create a DagOp class from the given name and params and qargs.
Returns the duration in seconds for the given channels.
Returns the start time of one or more channels.
Returns the stop time for the given channels.
str_ for each instruction in this schedule and all its children in the order they were added
str_ Dump additional data to the valid_data dictionary.
str_ Load additional data into valid_data. If many is True load all additional data
str_ Validate the instance against the schema. Raises an exception if the schema fails to validate
str_ Returns a dict representation of the model s data.
str - > None
str_ qft - qft - qft - qft - qft - q
chops an array of numbers into a new array with numbers less than or equal to epsilon
str_ Outer product of two vectors.
concurrence returns the concurrence of the given state.
str_ Returns the shannon entropy of a state.
str_ Returns the mutual information of the given state. d0 is the number of
Returns the entanglement of the functional of the given state. If d0 and d
- - - - - - - - - - - - - - - - - -
Flattens a schedule into a single schedule.
Returns a new schedule with the given time shifted to the next schedule with the given name.
Insert a new schedule component at the given time in the given parent schedule.
str append - Appends a child schedule to a parent schedule.
str_ u3 gate
Returns the current status of the backend.
str - > None - > None - > None - > None - > None - >
str_time_remaining_est returns the time remaining in the completed_iter days.
str Disassembles a QuantumFlow object into a list of circuits.
Returns the hamming distance between two strings.
Create a quaternion from an angle and an axis.
Quaternion from euler angles.
str_ Return a copy of the quaternion with the normalized values removed. If inplace is True
Returns the rotation matrix of the rotation matrix. The rotation matrix is the rotation matrix of the
str_ to_zyz returns the euler angles of the rotation matrix.
process_data takes a dictionary of data and returns a dictionary of p - values for each
check_type - Check the type of the value and return the root value. If the
check if index j is within range of self. size or range of self. size
bool_ True if mat is a square matrix False otherwise.
str_ is_diagonal_matrix - Check if a matrix is a diagonal matrix.
str_ is_symmetric_matrix - True if op is a symmetric matrix.
str_ is_hermitian_matrix - True if mat is a Herm
str_ is_positive_semidefinite_matrix - Check if a matrix is
str_ is_identity_matrix - Check if a matrix is an identity matrix.
str_ is_unitary_matrix - Check if a matrix is unitary.
converts a scalar to a choi. rep can be one of kraus k
Helper function to convert data to a superoperator. Repetition can be one of the
Convert data to kraus. Repetition can be one of stinespring or
_to_chi - Convert data to a Chi or Chi - like object.
Convert the data to a ptm.
Helper function to convert a string to a stinespring.
_to_operator - Convert data to an operator. Repetition can be one of
Helper function for _from_operator_to_ptm and _choi_to
_stinespring_to_operator - Convert a stinespring array to an operator
_superop_to_choi - Convert a superoperator to a choi.
_choi_to_superop - Reshapes data to a superoperator.
Convert kraus to choi.
_choi_to_kraus returns the kraus of a choi
str_ stinespring_to_kraus returns a tuple of kraus
_stinespring_to_choi converts a stinepring to a choi
str_ kraus_to_stinespring - convert kraus to st
_kraus_to_superop - Convert kraus to superoperator.
_chi_to_choi - Chai transform from Pauli to Chai.
_choi_to_chi _transform_to_pauli
str_ reravel - Reraveling of two matrices.
str_ Transform from Pauli to Pinyin. The data is assumed to be in
Check that the input_dim and output_dim are the same.
str Hides all ticklines and labels in the given axis.
Set the label convention for the plot. The convention can be one of ketex or
str Clears all the data from the object.
str_ add_vectors - add vectors to self. vectors - add vectors to self.
str_ Draws the plot and returns the rendered plot. If the plot has already been
Plot the front of the surface and wireframe.
str_ Prints the figure to the screen. If the figure doesn t have a figure
Return the top layer as a string. The top layer is centered on the left and center
_mid_content _mid_padding _mid_bck _mid_padding _
Return a string representing the center of the bot of the layer. The center of the layer
Return the maximum length of all the top mid and bot points in the rectangle.
Returns a list of strings representing the parameters of the given instruction. If the instruction is not
Returns the label for the given instruction. If the instruction is not a box the label is
Returns a LaTeX representation of this node in a nested scope. If no nested scope
Add a deprecation warning to the list of warnings to be displayed in the deprecation warning list.
Returns information about the local hardware.
Check if there is a connection to the given host and port. If there is a connection
Checks the status of the job_var and updates the status. value with the html message
Returns a constant array of the same length as times and the given complex amplitude.
Calculate the square of a complex time series with the given amplitude and period and phase.
triangle of a complex number between 0 and 1 and return a complex number between 0 and
- - - - - - - - - - - - - - - - - -
Returns the derivative of the gaussian at the given times and amp at the given center and sigma
str - > np. ndarray - > np. ndarray - > np. ndarray - >
Returns a default pass manager for the given coupling_map and initial_layout.
Default pass manager simulator.
bool - True if the register is a quantum or classical register and False otherwise.
Returns a copy of this circuit with all its sub - circuits mirrord.
Returns a circular copy of this circular object with the inverse of each instance in reverse order.
Append an instruction to the context.
Check that there are no duplicates in the given qubits.
Check that all of the qargs are integers and that all of the registers in qargs
check that all cargs are valid classical registers and that all of them are in the
check that qregs and cregs are compatible
Returns the QASM representation of the instruction.
Returns the number of ops in this gate.
Returns the total width of all qregs and cregs.
str_ count the number of operations in the list of instructions. This is a dictionary of
Returns a copy of the circuit with the parameters bound to the values in value_dict.
str _bind_parameter - binds a parameter to all the instructions in the parameter table.
Returns a list of mapped and remaining gates for the given layout. If the layout is
calc_layout_distance calculates the distance between a layout and a coupling map.
Return the score of a single step based on the number of qargs in the step.
Copy the circuit metadata from the source DAG to the target DAG.
Returns a copy of the given gate with the given layout applied to it.
Return a list of swap ops for the given edge and layout.
Run the transpiler on the given DAG using the given coupling map.
Add a physical qubit to the circuit.
str_ Add an edge from one qubit to another.
str_ Create a sub - coupling map from the current graph and the given nodes.
str_ Returns a list of all physical qubits in the graph.
str - True if the graph is weakly connected False if it is not.
Compute the distance matrix from the shortest path lengths of the graph. The distance matrix is a
Returns the distance between two physical qubits.
str_ cu1 gate
str_ Reverses the instructions in the instruction list.
str_ Generates a Q - if instruction for each gate in the sequence.
str_ If val is True this function will be called for every gate in the list of
Subscribes a callback to an event. The callback will be called when the event is
str_ dispatches an event to all registered subscribers.
unsubscribe - Unsubscribes from an event. callback - The callback to unsubscribe from
Dispatches an event to the broker and returns the result as a string.
str Initialize the circuit with the given parameters and qubits. If the qubits argument is a list
_define initializes the circuit with a disentangling gate.
Generate an uncompute circuit from the gates in self. gates.
Calculate the bloch angle of a pair of complex numbers.
Creates a multiplex circuit for the given list of angles.
is_virtual returns True if the given value is a virtual value.
str copy of the layout
Combine this layout into a mapping from virtual to physical.
str_ ccx cctl1 cctl2 tgt
Insert a new schedule at start_time.
Check if a property is fenced. If so raise a transpileraccesserror
Convert a list of gates to a list of indices corresponding to the given qregs
Run the mapper on the given DAG and return the result as a new DAG.
pauli_group returns a list of pauli groups of number_of_qubits.
Create a new instance from a label string. The label string must be in the form of
_init_from_bool initializes self from z and x. z and x must be
str_ Returns the product of p1 and p2.
str_ Converts the quantum matrix to a QISK operator.
Convert the circuit to a QIS instruction.
Update the z - axis with a boolean array or list of indices. If no indices are
Update the x attribute. If indices is not specified the x attribute will be set to the
str append_paulis - Append a list of paulis to the end of
str_ Delete the qubits at the given indices from the Z and X matrices.
str_ Create a random gate with the given number of qubits. num_qubits must be
pauli_single - Create a Pauli object from a single pauli label.
Returns the measure outcome of the given qubit.
str_ Add a sample measure to the classical memory. num_samples is the number
Add a QASM measure to the classical_memory and classical_register.
Add a QASM reset to the QASM.
Check that the initial state vector has the correct number of qubits and raise an error if not
str_ Initialize the state vector.
_get_statevector returns the state vector of the state machine as a numpy array.
Check if measure sampling should be performed.
_run_job runs the given job and returns the result.
Check that all the experiments have the same number of qubits and that all instructions have the same
Check that the initial unitary has the correct shape.
str Initialize self. _unitary with the unitary of self. _number_of
_get_unitary - get the unitary of the gate.
_run_job - Run a job in the backend and return the result as a dict
Check that all of the inputs are valid.
str - > bool - > bool - > bool - > bool - > bool - >
Generate a trivial layout for each qubit in the given DAG.
str_ True if the interval overlaps with the current interval False otherwise.
Shifts the interval by the given time.
Shifts the channel by the given amount of time and returns the resulting timeslot.
Returns the start time of the given channel or None if the channel does not exist.
Returns the last stop time for the given channel or None if the channel does not exist.
str_ Returns true if the given timeslots is mergeable with any interval in the
Returns a new timeslotcollection containing the merged timeslots of self and timeslots
Shifts all the timeslots in the collection by the given time.
str_ report_as_issue str_ report_as_comment str_ report_
plot the state of a paulivec.
str_ Creates an rzz gate with the given theta and two qubits.
str_ cscwap - cscwap - cscwap - c
Create a program graph from the given DAG.
selects the next program edge in the graph that is not mapped to any other program.
Select the best available CX gate from the list of available CX gates.
Select the best available hw qubit from the list of available_hw_qubits.
str - > list of all instructions in the compositegate.
str_ Reverses the order of the gates in the list.
str_ q_if Returns a copy of the gate set with q_if applied.
str_ c_if - Apply a classical filter to all the gates in the
str_ is_unitary - Check if the matrix is unitary.
str_ Conjugate of the tensor.
str_ Transpose the data.
Calculate the power of the input array with the given number of dimensions.
Returns the shape of the tensor as a tuple of the dimensions of the output and input.
str_ to_operator - Converts an instruction to an operator.
This function is called when a new layer has been added to the coupling map. It
separate a bitstring into a string with the given creg_sizes.
Format a level 0 memory array into a Qiskit complex array.
Format a level 1 memory array.
str_ level_2_memory - Format level 2 memory.
str_ Format a dictionary of counts to be used in a CSV file.
str_ Format a state vector into a complex complex vector.
str_ Format a unitary matrix into a complex matrix.
Submit the job to the executor.
str Status of the job.
Returns true if lo_freq is less than or equal to or equal to or greater than
Generate an iplot of the Bloch multivector.
Run the decomposition on the given DAG and return the result as a new DAG.
str_ n_choose_k - n choose k
lex_index returns the index of the k - th item in the list of lists.
Get a list of all registered backends that are not a simulator.
Returns the operator of the current object or raises a qiskiterror if the object is
Sample a constant pulse.
Sample a pulse with a zero value at a given duration.
Sample a square pulse.
Sample a sawtooth pulse.
Sample a triangle pulse.
Sample a cosine pulse with the given amplitude and phase.
Sample a sine pulse at a given duration with a given amplitude and phase.
Sample a Gaussian pulse at a given duration with the given amplification and standard deviation.
Sample a Gaussian derivative pulse.
Print a string representation of this node and all its children. The string is indented by indent
Returns an instance of backend_cls. Raises exception if backend_cls is not an instance
str_ Remove all operations with the given name from the graph.
Add a QuantumRegister to the DAG.
str add_creg - Add a classical register to the DAG.
Adds a wire to the graph. If the wire already exists it will be added to the
Check that the condition is valid.
_bits_in_condition - returns a list of all the bits in a condition.
_add_op_node adds a new op node to the multi - graph.
Apply an operation back to the graph.
Check the validity of a wiremap.
str_ Returns a new condition based on the given wire map. If the condition is none
str_ extend_back - extend the current graph with the data from the given dag.
Check that wires are the same length as the node s wires and raise a circuit
Make the pred_succ_map and succ_map for the given node.
Returns the full pred_succ_map and full succ_map for the given input
Returns a list of the topological nodes in the multi - graph in lexicographical order
str - Returns an iterator over all edges in the MultiGraph. If no nodes are provided
Returns a list of all nodes in the multi graph that have an operation. If op is
str_ Returns a list of all gate nodes in the graph.
Returns a list of named nodes in the MultiGraph.
str - Returns a list of all two - qubit gate nodes in the graph.
Returns a list of the predecessors of the given node.
Returns a list of the predecessors of the given node that are quantums.
Returns a list of all the ancestors of the given node.
Returns a list of the successors of the given node that are quantums.
Remove an operation node from the graph.
Removes all ancestors of the given node from the graph.
Remove all descendants of the given node from the graph.
Remove all nodes that are not ancestors of the given node.
Remove all nodes that are not descendants of the given node.
Generate a list of all the topological operations in the circuit.
Generator over all the multigraph layers in the graph.
Returns a generator that yields all nodes on the given wire. If only_ops is True
Count the number of operations in the graph. This is a dictionary with the keys of the
Returns a summary of the current state of the graph.
Returns a tomography basis string for a given basis set.
Pauli measuring gates.
Returns the tomography data for the given name in the given tomoset.
projector - project a list of op_list to a basis matrix.
str_ Tomo - Linear Inverse
str_ Wizard function.
wigner_data returns the wigner data for a set of meas_qubits
str_ Method to call the measuring function if available.
Check the status of a job and print it if it is not already on the screen.
Monitor the status of a job. If the job is running in a Jupyter notebook run
str_ Simplifies a u gate.
Run the layout on the given DAG and return the result as a new DAG.
Build a tab with the job history for the given backend. The history is a list of
str_ cu3_gate Creates a new cu3 gate with the given parameters.
build_bell_circuit - Build a Bell circuit.
str _transpile_circuit - Transpiles a single circuit.
Return the current drive channel. Raise pulseerror if there is no drive channel in the pulse
Return the control channel for this pulse.
Return the current measure channel. Raise pulseerror if there is no measure channel.
Acquires a channel from the pool.
str_ input_state input_state input_state input_state input_state input
Unsets the qiskit logger from the logging module.
Plot a state hint on the iplot. This function is intended to be used in the
str_ Input data to be read from the input stream. The input is stored in the
str_ Pops the current lexer off the stack and sets the filename and line number.
str_ Pushes the current lexer onto the stack and creates a new lexer for it.
Get the bound method for the given instruction.
Convert an acquire instruction to a QObject model.
Convert a frame change instruction to a QObject.
Convert a persistent value instruction to a QObject model.
Convert a drive instruction to a QObject.
Convert a snapshot instruction to a QObject model.
Update the annotations of a discretized pulse by adding a number to the end of the
str_ Converts a DAG to a circuit.
make dict_observable from matrix_observable
Update the current symtab with the given object. Raises a qasmerror if the
Verify that obj. name is a declared bit in the current symtab.
Verify that all expressions in the expression list are in the current symtab.
Verify that the given object is a gate. Raise an exception if it is not.
Verify that the object is in the global register of the given type. If the object is
str verify_reg_list - verify all reg objects in a list of RegObjects.
find the column of the given token in the input string. token can be none.
parse_debug sets parse_deb to True if val is True otherwise raises qasmerror
Parse the given data and return a QASM object.
Run the parser and return the number of times the data has been parsed.
str_ Parse the qasm file and return a list of QASM objects.
str_ crz gate
Create a basis state from a sequence of complex numbers. If the sequence is longer than the
Project a state into a density matrix. If flatten is True then the density matrix will be
str_ Returns the purity of a state.
Run the commute algorithm on the given DAG.
Run the CX run on the given DAG and return the resulting DAG.
Get a QiSkit backend by name or raise error if no backend is found.
str shape of the bipartite graph.
str_ - > register_name - > register_name - > register_name +
_truncate_float truncates the match object to a float and returns the result as a
Returns a LaTeX representation of the image as a LaTeX string.
Returns the number of columns and the number of columns in the image.
str_ Get the size of the beamer page.
Load a schema from a JSON file.
_load_schemas_and_validators Load all schemas and validators from the default schema paths
random_unitary returns a random unitary operator of the given dimension.
str_ Returns a Ginibre matrix of size nrow and ncol.
str_ Returns the random density of the Hilbert distribution with the given rank.
str_ random_density_bures returns n random density bures.
Returns a list of the names of all the calls in this node.
Calculate the power of the input array to the output array of the n - th element.
_compose_subsystem - Composes a sub - system of this tensor with another.
str_ Converts an instruction to a superoperator. If the instruction is a quantumcircuit
Run the BFS barrier on the given DAG.
Run the decomposition on the given DAG and return the result as a new DAG.
defines the u3 gate and two_qubit_kak depending on the number
str_ Check that value is an iterable and that all values are of the correct type.
Check that the value is of the correct type for each element in the list of containers.
Set the maximum number of errors to raise when the error is less than or equal to the
Set the rtol value. If rtol is less than or equal to max_tol
Reshape the input and output dimensions to match the input_dims and output_dims.
str_ Returns a tuple of input dimensions. If qargs is None returns all input dimensions
str_ Returns a tuple of the dimensions of the output data. If qargs is None
str_ Returns a copy of the dataset.
Returns a new QiS object that is the power of n of this QiS
automatic_dims returns a tuple of dimensions that can be used to generate a QI
Deserializes a string into a Python object.
Serialize the value to a string. If the value is not a string raises validationerror.
str_ Check if the value is of the correct type for the field.
Compute the diagonal of a matrix using the SVD function func.
Returns the inverse of the circuit.
_label - Set the label of the node. Can be a string or an instance of
str_ is_unitary returns True if the operator is unitary False otherwise.
str_ to_operator - convert the data to a Matlab operator and return it.
Converts the CPTP instruction to a QISkit instruction. The CPTP instruction
Initialize a transformer for the given data. If the data is already a quantumchannel it
Patch strptime to use the same module as strptime and return the _strptime_
Returns True if all tokens in tokens are valid. If any token is not valid returns False
str_ Splits a string into a list of tokens. If keep_formatting is
Parse a time string into a datetime. time object.
str_ Returns True if the given date_string is a valid date and False otherwise.
Translate a date string into a date string. If keep_formatting is set to True
Parse a date string with a list of date formats.
str_ = param1 num_ = param1 num_ = param1 num_ =
str - > int - > http - > http - > http - > http - >
Compose the configuration of the PhantomJS and return the path to the config file.
Returns a dictionary with information about the current stream. The dictionary contains information about the current stream
str_ Prints the contents of stdout and stderr to the given log.
Expands a time string into an integer. The time string must be in the form of
Read the configuration from the config file and populate the object with the values from the config file
str_ Read the cached stepperinfo. json file and return it as a dict.
write the cached options to the si_file in JSON format.
make stpd file
rps_schedule - a list of rps_schedule to produce a single step.
str Return the number of rps at time t.
Execute a shell command and return the exit code.
Decode monitoring data into a list of points. Each point is represented as a dictionary with the
Make a list of points for a given label at a given timestamp.
This method is used to publish a value to a key. It will log a debug message
count the number of matched codes in codes_dict. codes_regex should be a regex
str Stop the worker thread and wait for all tasks to finish and close the feeder.
feeds the stpd file into the task queue and waits for all workers to finish.
Add user options to self. options.
Configure the plugin with the given options. If the option does not exist it will be created
Collect data from the queue and store it in self. data_cache and self. stats
str_ Notifies all registered listeners that the data has been aggregated.
Try to find a UDP port for the jmeter process. If found return it.
Terminates the process and kills it if it is running. If the process is not
_read_data returns a list of stats_item objects for each line in lines.
Creates a criterion object from the criterion_str. If the criterion is not found an error
Returns a list of all the hosts in the given XML file. If target_hint is
Create a config file for the startup and shutdown commands and return the path to the config file
Check if the disk is not too large to be used. If not raise a runtime error
Checks the current memory usage and raises a runtime error if it is less than self. mem
Get the right panel line from the widget_output.
Add an info widget to the list of info widgets.
Fill a rectangle with spaces and return the width of the rectangle and a list of lines.
str - > int - > int - > int - > int - > int - >
Add an info widget to the current screen. If no screen is currently open print the info
This method makes a request to the writer endpoint and returns the response. If trace is True
load_plugins - Load all plugins from config. json and add them to self. _
get_plugin_of_type - Get a plugin instance of a given class.
get_plugins_of_type - Get a list of plugins of a given type
Collect a file from the artifacts_dir and move it to the artifacts_dir.
Add an artifact file to the list of artifact files to be processed. If keep_original
str mkstemp - Create a temporary file with the given suffix and prefix.
str_ Loads config files from a list of resources.
Write the configuration to a file. If no filename is specified the current configuration file will be
Get all options for a given section. If prefix is specified only the options with that prefix
str_ Returns a list of all sections that start with the given prefix.
Decode the chunk of stats data into a generator of stats_item instances and reqps.
Prepare the agent and install the client if the agent config is specified. If the agent config
Polls the agent reader for data and sends them to the server. Returns the number of
Send collected data to all listeners.
This method detects the current configuration. If the configuration is not set it will try to
Handle the data items for the given host and update the sign dictionary.
Subscribe to one or more channels.
str_ Runs the event loop and subscribes to the given channels and closes the connection
close the connection to the server and close all open connections to the server. This will close
_one_request performs a single HTTP request and returns the response or None if the request
Submits a new order for a given symbol with the given quantity side type and time in
Get the position of a symbol.
Get a list of all assets.
str_ Check that the given object is a dict and that its key and value are of
str_ If obj is not a dict raise an exception. If obj is not a dict
Construct a structured logger that logs each message in a structured format with the event_record_
Construct a structured event logger from a JSON file.
Creates a Config object from a config file.
Returns the pipeline with the given name or raises a DagsterInvariantViolationError if
str Returns a list of all the pipelines in the pipeline_dict. If there are solid
Get the next event from the queue. If the queue is empty return process_dead_
str_ Execute a pipeline through a queue.
Wait for all processes to finish processing and return True if they are done.
Create a field from a Dagster type.
Build the execution plan for the given pipeline_def and artifacts_persisted.
Returns the solid of the pipeline with the given name or raises a DagsterInvariant
Construct a list of publish comands.
Release a new version and commit the new version to the git repo and tag the new version
Block text into a single line. The text will be indented by the current indentation level.
Download a file from S3.
Upload a file object to S3.
A context manager that raises an error when a user code boundary is reached.
str_ mkdir_p - Create a directory with the given mode if it doesn t exist
A context manager that runs a user - defined function in the context of a context manager.
Create a context free log for a given run.
Return True if there are any step_success expectations in the chain. Otherwise return False.
str_ True if all of the steps in the DAG have been skipped.
str_ Returns a dictionary of the transformed values for this step. If the step is successful
str - Returns the failure data of the step.
Check if config_value is a valid dataset.
Returns True if the config_value is a valid table.
str_ Coalesces the topological steps of an execution plan into a list of
Returns a dictionary of connection parameters that can be used to connect to the server.
Get a new connection to the database with the given connection parameters. If a connection already exists
Create a cursor object for the current connection.
str_ Close the connection to the database. If the connection is already closed this method will
str_ Creates a model instance from the given model and model_dict.
str_ Converts a list of mdl_dict to a list of mdl objects.
Returns a formfield with the default values for the arrayformfield and model_form_
str_ Converts a dictionary to a model instance.
str _apply_rel_filters apply core_filters to the queryset.
_compute_nfps_uniform - computes the NFPS for a uniform distribution
_compute_nfps_real - Computes the NFPS for a real
str_ Returns a list of optimal partitions based on sizes counts and num_part.
calc_c calculates the correlation coefficient between a1 and a2 r1 and r2
str seed str hashvalues str
Returns the number of bytes needed to store the seed and hashvalue in the given byte order
Merge another seed into this one.
union returns the union of the given permutations and the seed of the union of the given permutations
str_ Returns a list of keys for the given minhash and size.
Returns a weighted minhash of the given values.
Remove a key from all hashtables.
count the number of regressions in self. reg and return it as a float.
Merge another register with this one and return the new value.
str_ Clears the current regulatory state.
str_ - > float k - > float k - > float k - > float k
k - means k - means k - means k - means k - means k - means
str_ Indexes the hashtables in the hashtables attribute.
str - > list of k keys for a given hash. k is the number of keys
str close all the hashtables and all the keys in the hashtables.
Get the user details from the given object.
get_social_login will set the state of the social_login object to connect to
str - > str - > str - > str - > str - > str - >
Parses a scoped selector string into a scope and selector tuple.
str_ = binding_key_or_keyword value binding_key_or_keyword
Parse a string into a value.
Advances the parser to the next token in the current line.
str_ If the next token is a configurable reference parse it. If it is a configurable
Writes the operative config to the output directory.
Ensure that a function is wrapped in a function.
_format_value - Format a value as a string. Return None if the value is
str Clear the current configuration. If clear_constants is set to True the constants will be
Returns True if the function or class may have a parameter with the given name.
_get_cached_arg_spec - Get the argument spec for a function.
_get_supplied_positional_parameter_names - Get the positional parameter names
parse_config_file - Read a config file and parse it into a dictionary.
Parse the given value as a configuration string and return a dictionary of the configuration values.
iterate flattens the values of a nested dictionary into a list of values.
str_ Yields all configurablereference values in the given config. If to
Convert an enum class to a list of constants. The class must be a subclass of enum
str - > list of all matches for the given partial_selector.
minimal_selector returns the minimal selector that can be used to match the complete selector.
Returns a string representation of the given search query.
Return the number of seconds to wait before retrying the request.
Validate a value against the metadata. If the value is not valid raises a propertyerror.
Returns the property description as a dictionary.
str - > None - > None - > None - > None - > None - >
str_ - > None - > None - > None - > None - > None -
str_ Initialize the object with a list of things and a list of hosts.
Set the default headers for all requests.
Check if the request host is in the list of hosts and raise an exception if not.
Get a thing from the server. If the thing doesn t exist it will be created.
This method is called when the client sends a message to a thing. It is called by
Delete an action from a thing. If the thing does not exist nothing is done.
Start the server and start the ioloop. This is called when the server is started
Returns a dictionary with the action name as the key and the value as the value.
This method is called when the thing is started. It is called when the thing is started
finish the action notify the thing that the action has been completed.
Return the event as a dictionary with the event name as key and the event data as value
Returns the IP address of the current machine or None if the machine is not running.
Get a list of all IP addresses in the system.
str_ Set the value of the field. If the field has a value_forwarder
This method is called when an external value has been updated. It will emit an external value
Returns a dictionary with all the properties of the object as keys and their descriptions as values.
str - Sets the href prefix for all properties and actions.
str_ Returns a list of property descriptions for all properties in the object.
Returns a list of action descriptions. If no action_name is specified all actions are returned
str_ Returns a list of EventDescriptions for the given event name. If no event name
str property_ - Property object to be added to the resource. property_ - Property object
str - Remove a property from the object.
Returns the value of the property with the given name or None if the property does not exist
str_ Returns a dictionary of all the properties of the object.
Set the value of a property. If the property does not exist it will be created.
str_ Returns the action with the given name and id. If the action does not exist
str add_event - Add an event to the list of events to be notified.
Adds an available event to the list of available events. If metadata is none an empty list
str action_name - The name of the action to perform input_ - The input to
Remove an action by its name and id. If the action does not exist nothing happens.
Add an available action to the list of available actions. If metadata is none it will be
str Remove a subscriber from the list of subscribers and remove all events from the list of available
Add an event subscriber to the list of available events for a given event name.
Remove a subscriber from the list of available subscribers for a given event.
Notifies all subscribers of a property change.
Send an action notification to all subscribers.
Send a message to all subscribers of the given event.
Returns a copy of the model with the given annotations renamed.
str_ Update the model with the given fields. Returns the number of rows updated.
Create a new record with the given fields and return the primary key of the record.
Create a new record and return a new model instance.
Build a Postgres insert compiler for the given rows.
_is_magical_field - Check if the given field is a magical field
Called when a model is created or updated. This method is called when the model is saved
Called when a model is deleted. Sends a signal to delete the model.
resolve_expression - Resolves all string values in the object and returns a hstorevalue
Returns a tuple of the key and value as a SQL string and a list of parameters.
str_ Return a copy of this object with the given relabels applied to it.
Adds a list of conditions to the current query s join table.
_is_hstore_field - Check if field_name is a hstore field
_create_hstore_required creates the required constraint for the given field and key.
str old_table_name new_table_name old_field new_field key
_drop_hstore_required - Drop a required constraint from the hstore.
Returns the name of the required constraint for the given table field and key.
Create the SQL statement for creating a new index for the given model and condition.
str_ is the name of the base class that should be used to instantiate the backend.
Prepare the database to be executed. This method is called when the database is ready to be
get_prep_value gets the value of the field and converts it to a string.
Return a string that can be used as the returning value for the query.
str_ returns a list of SQL statements that can be used to insert this object into the
Rewrite the insert statement according to the conflict_action.
Rewrites the insert and update queries to match the index_predicate and update_fields.
Rewrites the insert statement to include the conflict target and the parameters to be passed to the
_get_model_field - Get the model field object for a given field name.
Returns the field name in a format suitable for use in a SQL query.
_format_field_value returns the value of the field with the given name.
Create a unique constraint in the HSTORE.
str old_table_name old_field new_table_name new_field keys
_drop_hstore_unique - Drop the unique constraint for the given model field and
Returns a unique constraint name for the given table field and keys.
Iterate over the uniqueness keys of the given field.
str add_condition - Add a condition to the list of extra conditions to be met.
Return the rewritten SQL statement and the extra_conditions as a tuple of SQL and parameters.
str_ Returns the tdist 95 conf level for a given df.
str_ Pooled sample variance
tscore returns the t - score between two samples. The t - score is the average
str_ Returns True if the t - score of the two samples is significant.
str_ toposort - Sort a list of nodes and their parents in a topos
n_queens returns a generator that yields n - queens of a given number of
str_ Select a random position from the unexplored list. If there are no
str_ random_playout plays a random move on the board. maxmoves
Filter out benchmarks that don t have a function with a version greater than or equal to
str - > str - > str - > str - > str - > str - >
str_ Returns a list of tuples containing the regular expressions and strings. If n_values
Get the domain of the curve.
fetch_items is a generator that yields all of the items that have been fetched from the
Parse raw_posts and return a generator of post objects.
Get information about a specific user.
Fetch a list of items for a given category.
fetch_items - Fetches the items from the feed and returns them as a generator.
Setup the command parser for the backend.
Fetch a list of bugs from the database. If no from_date is given the default
Get a list of bugs for a given date. If no date is given all bugs are
Method to get a list of comments for the given bug_ids.
This method returns a list of bug history for the given bug_ids. If there are
This method returns a list of attachments for the given bug_ids. If there are multiple
Fetch all the merge requests for a given date.
Get a list of all merges for the current user.
Get a single merge from a repository.
Get a list of all versions of a merge.
Get a single version of a merge.
Get the notes for a given item.
Get a list of emojis for a given item_type and item_id.
Get a list of emojis for a given note.
Calculate the time to reset the rate limit.
Fetch a list of items from the repository.
_init_rate_limit initializes the rate limit for the current user and repository.
Setup the command parser to be used by the backend.
Fetch all the messages for a given category.
metadata_id returns a unique identifier for the given metadata item. If the metadata item is
This method returns the number of members of a conversation.
rchannel_info - Returns information about a channel.
ruser_info Gets information about a specific user.
Setup the command parser for the backend.
metadata_updated_on returns the timestamp of the metadata updated on the given item.
Parse a buglist file into a list of dictionaries.
Parse bugs details from raw_xml.
Logout from CGI server and close the HTTP session.
This method returns the metadata of the bug. The metadata is returned as an XML string.
Get a list of all bugs for a given date range. If no date is provided the
Get a list of bugs for a given list of bug_ids.
a wrapper around cgi_bug_activity for bug_id
Fetch all events for a given category.
fetch_items - Fetches all events for a given category from a given date range.
Get a list of events for a given group.
rComments Get a list of comments for a given event_id in a given group.
Returns a generator that yields a paginated list of RRSVPs for the given group and
Fetch the html question items from the API and return them as a list of html_question
Fetch the comments for a given question and return a dict with the comments as keys and the
Build the question object from the html_question and the question and comments.
get_api_questions - Get a list of questions from the API at the given path
Get the HTML question for the given question_id. The page parameter specifies the number of
Get comments for a given post.
str_ is the name of the question to be displayed in the question_container. html
Parse the number of html pages from a html question.
Parse the user info from the update_info element and return it as a dictionary.
fetch_items - Fetches items from the Gerrit API and returns them as a generator
Parse reviews from raw_data and return a list of reviews.
_fetch_gerrit28 returns a list of Reviews from Gerrit28.
Returns the version of the Gerrit server.
Get a list of reviews from the Gerrit server.
Retrieve the next group item from the Gerrit server.
Execute a command from the archive and return the response.
Execute a remote command and return the output.
Setup the command parser for the backend. This is used to setup the command line arguments for
Fetch issue data from the API and return it as a json object.
Fetch all attachments for an issue.
Fetch all the messages for a given issue and return them as a generator.
Fetch all the activities for an issue.
str user_link - user_link to fetch user data for a given tag type -
Get a user by name. If the user does not exist it will be created.
Method to get the raw text of an issue.
Method to get all the items for a given collection of an issue.
Fetch items from a given path using the given payload. If the path does not exist it
Get a list of all the subscriptions in the groupio api.
Find the group id for the current user.
Fetch data from url with payload and return the response as a string.
Setup the command parser to be used by the backend.
Find all backends for a given top - level package and return them as a list.
fetch_from_archive fetches items from the archive and returns them as metadata objects.
Remove classified fields from a nested dict and return a copy of the original object.
str_to_datetime - > parsed_args. datetime - > parsed_args.
Set the basic and token authentication arguments to the parser.
Set the archive arguments to the parser.
Set the output arguments for the command.
Run the command.
Initialize the archive manager.
str_ to datetime timestamp for metadata_updated_on
Parse a Mbox file and return a generator of message dictionaries.
fetch_and_parse_messages fetches all messages from the given mailing_list and
Copy a Mbox object to a temporary file and return the path to the temporary file.
Validate the message fields.
str_ message_id_field = message_id str message_date_field =
Get the message for the given key. The message is read from the file. The message
fetch_items - Fetches items from the repository and returns them as a generator.
Parse a git log file into a list of GitCommit objects.
This method is called before the command is run. It is called before the command is run
Setup the command parser for the backend.
Parse the stream and return a generator of commit objects.
Clone a file from a given URI to a given directory.
Count the number of objects in the repository.
Returns True if the repository is detached from the working directory. Otherwise returns False.
Update the repository.
Syncs the repository with the remote repository. Returns a list of commit IDs that have been
Return a list of commits from a pack file.
_update_references updates the references in self. dirpath with the new references in refs.
Return a list of gitrefs for this repository. If remote is True return a list of
Update a reference in the repo.
Execute a command in a separate thread and return the output as a list of bytes.
Read the stderr of the process and log it if the process exits with a non - zero
str_ Executes a command and returns stdout and stderr. If the command returns an error
fetch_items - Fetches items from the API and returns them as a generator.
Setup the command parser for the backend.
Fetch a list of items from the database.
fetch_items - Fetches all the items from the API and returns them as a generator
Parse the hit_raw and return a dict with the results.
Returns a list of hits for the given keywords. The keywords can be a list of strings
metadata_updated_on returns the timestamp of the metadata updated on or None if the metadata
Returns the category of a metadata item.
fetch all the pull requests for a given date range from from_date to to_date
Fetch information about the repository from the server and store it in the repo dict.
Get all the reactions for a given issue comment.
This interface is used to get the list of reviewers requested for a pull request.
Get a list of the hashes of all the commits in a pull request.
Get a list of reactions for a pull review comment.
Function to get a user from the API and return it as a dict. If login is
Get a list of Reactions for a given issue.
Returns a list of issues for a given date. If no date is provided all issues are
Pulls from the repository. If no date is provided all pulls from the repository are
Get a list of all reviewers that have been requested for a pull request.
Get a list of all commits for a pull request.
Pull review comment reactions for a given review comment.
Returns the user with the given login. If the login is already in use it will return
Returns a list of orgs for a given user.
_get_token_rate_limit - Get the rate limit for a given token.
Returns a list of token rate limits for each token in self. tokens and updates self.
Randomly choose the most recent API token to use. If there are more than n_
str Check if we need to check the number of tokens for this switch.
_update_current_rate_limit fetches the current archive and updates the rate limit.
init_metadata initializes the metadata for the archive.
Store the given data in the archive.
Retrieve an entry from the archive.
Create a new archive at archive_path.
Verifies that the archive is valid. Raises an archiveerror if the archive is not valid.
Load the metadata from the database into the instance variables.
_count_table_rows returns the number of rows in the given table.
Create a new archive with a unique name.
str_ Remove the archive at archive_path. Raises archivemanagererror if archive
str Searches for archives that match the given parameters.
str_ Searches for all files in the directory and returns them as a generator.
returns a generator that yields the month range from from_date to to_date.
Remove invalid XML characters from the raw XML string.
Parse issues from a raw JSON string.
Get a list of all issues for a given date range.
Get a single issue by its ID.
_ - Get information about a user. _ - - - - - - - - -
Call the API with the given parameters and return the response as a string.
fetch a list of dockerhubs for a given category
fetch_items - Fetches all items from the repository and returns them as a generator.
Get the content of a repository.
Returns a list of custom fields sorted by the string value of bool_ in the order they
Parse issues from raw_page and return an iterator of issue objects.
Get a list of items from a given URL.
Get a list of issues for a given date range.
Get a list of comments for a given issue.
Get a list of fields from the API.
fetch a list of items for a given category. category can be category_build or category
Get a list of all the builds for a given job.
Parse questions from raw_page and return a generator of question objects.
Get a list of questions for a given date. If there are more than one page of
Setup the command parser to be used by the backend.
fetch_items - Fetches items from MediaWiki API.
Returns the timestamp of the most recent review in the list of reviews.
1. 1. 2 fetch all pages from all revisions and yield them as page_re
Get a list of pages for a given namespace. If apcontinue is not specified all pages
Get the most recent pages for a list of namespaces. If rccontinue is set to True
Takes a raw JSON string and returns a generator that yields all the messages in that string.
Returns True if the message is in the given list of chats. If chats is
str_ Returns the list of updates for this object. If no offset is provided all updates
fetch_items - fetch items from nntplib. nntplib. nntplib
Returns the metadata for the given item. If filter_classified is True the metadata will
str_ parses a raw article into a dictionary.
Fetch data from the remote or from the archive. If the archive is from_archive then
Fetch a single article from the API and return it as a dictionary.
_fetch_from_remote - Fetch data from the remote server.
_fetch_from_archive fetches data from the archive. Raises an exception if the archive
str Create a requests. Session object and add retry adapters to it. This is done by
This method sets up the rate limit handler. It is called by the rate_limit_
Sleep for rate limit if rate limit is reached. If sleep_for_rate is True
Update self. rate_limit and self. rate_limit_reset_ts based on
Parse a supybot log file and return a generator of messages.
Retrieve a list of supybot archives sorted by date.
Return a list of all the supybot archives in the directory.
Parse a supybot stream and return an iterator of supybot. Item objects.
fetch_items - Fetches all the items for a given category at a given date.
Parse the topics page and return a list of tuples of topic_id updated_at pinned
Get information about a specific topic.
Get a single post by ID.
fetch_items is a generator that yields all the tasks that have been fetched from the API
Parse a JSON string and yield a list of Task objects.
Parse a JSON string and return a list of User objects.
Returns a generator that yields all of the tasks that have been modified since from_date.
a wrapper around the maniphest_transactions API method to return a list of transactions for
Method to get a list of users from a phab. Requires a list of phab
This interface is used to retrieve a list of phab IDs.
Make a call to the conduit API with the given method and parameters.
Generate a unique identifier for a metadata item.
Parse a summary of the contents of a file.
Get a list of the contents of a resource.
Returns a list of historical content for the given content_id and version.
Parse the result of the test and convert it to a measurement.
Returns the capabilities URL for the given service_url. If the service_url does not
str_ Read capabilities from the given URL and return it as an etree. Element object.
Read a string and return an etree. fromstring object.
Parse the result and return a measurement time series object.
Build the URL with the given path. If the path is not specified the URL will be
Construct a schema from a list of elements and a namespace map.
_get_describefeaturetype_url returns the describefeaturetype url with version and typename
complex_input_with_reference - Complex data input with a reference.
Method to get a list of all movies for the authenticating client.
Returns a list of TV objects.
Get information about a resource.
Returns a list of alternative titles for the current user.
Returns a list of credits for the current user.
Returns a list of external ids for the specified resource.
Get a list of keywords for the current user.
Returns a list of recommendations for the current user.
Returns a list of release dates for the specified resource.
Returns a list of releases for the specified resource.
Retrieve a list of translations for a given resource.
Similar to get_movies but returns similar movies as a list of dicts.
Get a list of reviews for the current user.
Get a list of upcoming items from the API.
Get information about the currently playing played player.
Get a list of popular items from the API.
Get the top rated data.
Get a list of all account states for the authenticated user.
This method allows you to get the rating of an item. You can use this method to
Method to get movie credits.
Returns a list of tv credits for the current user.
Get information about a resource.
Returns a list of all the items in the collection.
Get information about the current session.
_ watchlist_movies - Gets a list of movies from the watchlist.
Create a new token.
This method is used to validate a token with a logged in user. This is useful when
Creates a new session.
Creates a new guest session.
rated_movies - Gets a list of movies rated by a guest session
Get the status of an item.
Method to create a list of users.
Remove an item from the session.
Method to clear a list of items from the session.
_content_ratings endpoint. Returns a list of content ratings for the specified resource
Returns a list of similar objects for the given id. The id can be a string or
Returns a dictionary with the data on the air of the device.
Get information about the season number of a series.
Returns a list of credits for a given season number and series id.
Returns a list of external ids for the given season number and series id.
Get information about the season number and episode number of a series.
_ Gets the credits for a season number episode number.
Returns a list of the external IDs for the given season number and episode number.
str_ if response is a dictionary set all attributes to their values. If response is a
Get a collection of objects.
Method to get company information.
Returns a dictionary with the values of the given keyword arguments.
Returns a list of objects from the API as a list of objects.
normalizes a string into a list of tokens.
Cooks a list of reference strings and counts the number of occurrences of each reference.
Cooks out the set of n - grams in a reference string.
- - - - - - - i a u E r f c c - - -
align_texts takes two lists of strings and returns a list of strings where each string is
Returns a generator of all descriptors in the given module. If the module is a module it
str_ Register a list of descriptors from a JSON string or a list of dictionaries.
str_ Register a new package. If version is none the current version will be used.
Echo a string to the given file or stdout. If the file is a file object it
str_ True if desc is an instance of descriptor and False if it is an abstract class
Return a JSON representation of the object.
Returns the coordinate of the current node. If require_3d is False the node will
str_ Returns the atomic mass of the atom i in the sphere. The atomic mass is
str - Returns the surface area of the rads.
Create a VDW object from a Molecule object.
Get a descriptor from the given JSON object. If the object has no descriptor return None.
Fill missing values in the molecule with the given value. If the value is missing it will
str_ Return a new molecule with all missing values removed.
str_ Returns a list of tuples of key - value pairs.
Returns a dictionary with the keys as keys and the values as values. If rawkey is
Returns the name of the descriptor and its value. This is the name of the descriptor and
Prints a progress message to stderr if it is on a tty. If it is on a
Prints a message to stdout. Clears the progress bar and clears the progress bar.
Print an error message and exit with the given status code. If the function is called with
Create a new temporary file with the given target name and return it.
str_ Set tempfile to target or delete tempfile if target is already set.
str clean_tempfiles cleans up the temporary files that were created by create_temp
Returns a fixed version of the path that is the same as self. path but without the
str_ Returns a list of all possible params for a given API method.
str_ Merge opt params into kargs.
This function adds the options for the botoclient. extra_client_params to the
str_ If exc_info is not None it will be set as the exc_info
str_ Add a task to the list of tasks to be executed.
str Joins all the workers and all the tasks in the queue.
This method is called when all the workers have been processed. It will print a progress bar
Returns the S3 access and secret keys from the environment if present. Otherwise returns none.
Returns a tuple of the access key and secret key from the command line. If none is
Get s3 keys from s3cfg.
str_ init_s3_keys init_s3_keys init_s3
Connect to S3.
str_ Walk a directory and return a list of all the files in the directory.
Expands the source into a list of dicts.
put_single_file - Put a single file from source to target in the pool.
Put files from source to target. If target ends with path_sep the files will be
Create an S3 bucket if it doesn t already exist.
Update the permissions of the target file based on the permissions of the object.
prints the contents of one or more S3 files to the console. source can be
Download a single file from source to target.
Get a list of files from source to target. If target is a directory it will be
Copy a single file from source to target. If source ends with path_sep copy all
Copy files from source to target. If target ends with a path_sep it will be
Delete files from S3 source.
Returns a list of paths relative to the given directory. If dir is an s3 url
sync files from source to target using dsync. If source is an s3 url it
Returns the MD5 hash of the given file. If the file does not exist it will
str_ Returns the MD5 hash of the file.
Creates the target directory if it doesn t already exist. If the target already exists it will
Check if the local md5 matches the local md5 of the remote key.
str_ Returns True if the path matches the filter_path and False otherwise.
Walks through an S3 object and returns a list of objects that match the filter_
Add the object to the result list if the object is not fileonly or last_modified
Returns the file s permissions as a string. If the file does not exist an exception is
Look up an object in S3.
Read a chunk of data from a file at a given position in a file - like object
Verify that the downloaded file size is the same as the size of the downloaded file.
Write a chunk of data to a file at a given position in a file - like object
This method is called when a command is parsed from the command line. It is called by
Validate the arguments according to the format and the arguments passed to the command handler.
List all buckets in an S3 bucket or list all buckets in an S3 bucket.
mb_handler - Create a new bucket in the S3 bucket store.
put_handler - Put files from a source to a target in a S3 bucket.
get_handler - get a handler for a given source and target. args - list of
cat_handler - Prints a list of files from an S3 bucket to stdout.
dsync_handler - DSync a file or directory from a source to a target.
str cp_handler - cp_files - cp_files - cp_files - cp
mv source to target
Delete a file from the S3 bucket.
du_handler - S3 file size handler.
Get the total size of all S3 objects in the given list of S3 objects.
Match a date in a string and return a tuple with the date and the value.
match_time returns a tuple with the time and the value. If the value is not
match_delta returns a tuple with a datetime. timedelta object and the value of the delta
Check that the value is a dictionary.
Get a message from the hub. If the message is not received from the hub it will
Push data to the callback queue. If the data is not valid it will return False.
Return the key to be used for this token.
This is the exception handler for the rollbar module. It is called when an exception is
Ensure that the log handler is available. If not create one and add it to the log
str_ Returns the request from the bottle flask pyramid or pylons API.
Report a message with the given level request extra_data and payload_data.
Create a logger for the agent log file. If the log file does not exist it will
Build a dictionary of person data based on the request. user and request. user_id
Add the current lambda context data to the data dictionary.
Add the request data to the data dict.
Check to see if we need to add local variables to the frame.
Builds the request data from the given request object.
Build server data from sys. argv and os. argv.
Build a payload from a dictionary of data.
The main entry point for the rollbar server.
Compose chosung and joongsung from chosung and joongsung
Decomposes a Hangul letter into a Chinese code and a Joong code
Check if a letter is a jongung.
attach a josa to a word if the word is not hangulexception or
str_ Returns True if node is inside an except handler.
Returns True if the node is inside a lambda.
str_ Get all elements of a node recursively.
Check if a node can be clobbered in an except handler.
Return True if node is a super class of built - ins_name.
Returns True if the node is an error. Otherwise returns False.
Returns True if the node is a function decorator.
Returns True if node is an ancestor of the given frame.
astroid. node_classes. nodeng - > astroid. node_classes.
Collect all string fields from a format string.
Get the argument from a call node.
Return True if the given node inherits from the stdlib exceptions module.
str_ True if the function is decorated with a property.
Returns true if the function is decorated with any of the given qnames.
Returns the first try - except wrapper node of the given node or None if none is found
str_ Returns True if the given node is a from - fallback block.
Returns a list of exception handlers for the given node. If the node is not a try
Check if a node ignores an exception.
str - Check if a classdef is abstract or not.
Safely infer the value of a node without raising an error if the node cannot be inferred
node_type returns the type of the given node. If the node is not inferable
Returns True if postponed evaluation is enabled for the given node.
Given a module name return a list of fully qualified names.
str_ Returns the absolute name of the given module or None if the given module is not
Returns a string representation of the tree definition data.
Make a graph of the given type.
Check that an import is valid and if so add it to the list of imported modules.
Check that an import from node is valid.
Check if the node is at the beginning of an import. If so add a message to
Record the name of the imported module in the import stack.
Check if the import is relative to the given module. If so add a message to the
Add an imported module to the import graph.
Check if a module is deprecated.
Check if the module is in the list of preferred modules. If so add a message to
str_ report_external_dependencies - Reports the external dependencies of this module.
Returns a graph of all importers that depend on the given package. If internal is True
Get the default options from the rc file.
str_ Insert default options into sys. argv.
Returns True if the node s attribute is visible False otherwise.
Get the callbacks and callbacks for the given node. If no callbacks are cached the callbacks are
str_ Visit the given node and call all the registered callbacks. If the node is a
Check that all messages in the queue have the same message id.
Visit a CallExpression node and determine if it should be included in the code or not.
Check if the node is an instance of datetime and if so add it to the messages.
Check if the node is in an open mode. If so add a message to self.
Add a message to the list of messages to be processed.
Get the title of a node.
str Set the default options based on the options in self. config.
bool True if the node is a built - in node False if it is a built -
str_ Add a class to the diagram.
str - Returns all ancestors of a given node in a given level.
str get_associated - get associations for a given class node at a given level.
str This method extracts all classes from a given class node and its ancestors and their associated nodes
str leave_project - Return the package and class diagrams for the given node.
visit an ImportFrom node by adding it to the PackageDiagram.
class_diagram returns the classdiagram for the given class. The classdiagram
str_ Returns a list of DIADefs for the given project. If no DIA
Returns True if the given owner is ignored by any of the ignored_classes or ignored_
Similar to _node_names but returns a list of names that are similar to attrname
Returns a boolean indicating whether the node is a member of owner with owner_name.
Returns True if the parent of the given node is an instance of the given node_type
str_ True if name is used as a variadic.
str_ True if we are not in a context of a variadic function.
str - Print the return value of a function or a function declaration if it is a function
Check if a function call is uninferable. If so add a message to the error
visit a UnaryOp node and add errors to the reporter.
Iterate over the interfaces implemented by the given node. If herited is set to True then
Create a project from a list of files. Files are assumed to be relative to the project
str_ Visit a package node.
visit a FunctionDef node by setting locals_type to a list of locals.
visit a AssignName node and add it to the locals_type dict.
str_ handle assignattr_type
visit an Import node and add it to the list of imported modules.
Visit an ImportFrom node and add it to the list of imported modules.
str_ Returns the number of the module in context_name. If mod_path is
_imported_module adds the module path to the list of imported modules. If relative is
str_ Register text and parseabletext reporters.
Write a message to the console. If the message is a module add it to the list
Handle a message and write it to the output stream.
Open a graph and write it to the output stream.
str_ Write an edge between two nodes. edge_type specifies the type of the edge
Process a non - raw string token.
str - > None - > None - > None - > None - > None - >
visit_evaluationsection prints the evaluation section of the given layout.
str visit_table - Shows a table with the given layout as the default table.
str old_id old_symbol new_symbol
Register messages from a checker.
str Register a message in the message registry.
_check_symbol - Check that msgid is unique for the given symbol. If there is
Raises an invalidmessageerror if the msgid is a duplicate of the other_symbol.
Raises an invalidmessageerror if the msgid is the same as the other_msgid
This function is called when the builder is initialized. This function is called when the builder is
Return the number of CPU cores in the system.
report_messages_stats - Report messages stats.
Fixes the import path so that it can be used in the context of a context manager
str_ Loads a list of plugin modules and registers them with the plugin manager.
Load the configuration of the dynamic plugins.
Set the value of an option. If the option does not exist it will be created.
str_ Register a checker with the checker manager.
python3_porting_mode is the porting mode for Python 3.
str_ Returns a list of all registered checkers.
Returns a list of checker names sorted by name.
Returns a list of all registered checkers sorted by message priority and by report priority.
Expands a list of files into a list of files that are not in the black list
Sets the current module name and filepath. If filepath is none the current module is set to
check_astroid_module - Check an AST node against raw checkers and token checkers.
Report the evaluation of the current file state to the reporter. If score is set to True
This callback is called when the user clicks on a help message. This callback is called when
Print the full documentation for the linter.
Callback for linter. msgs_store. list_messages.
cb_list_groups - list all the groups of the linter.
Normalizes text to fit into line_len characters and indents with the given indent string.
Returns the module and frameid of the given node.
Safely decode a string using the default encoding if it is not available.
str_ True if base_name is in blacklist_re False if base_name is
Register all plugins in the given directory with the given linter. This function is intended to be
Returns a string with a comment appended to the end of the string.
Format the value of an option in a format suitable for use in a command line option.
str_ format a section in a file stream.
_format_options prints the options in the ini format to the given stream.
str_ Insert a new child at the given index.
str_ Append a child node to this node s list of children.
str_ Returns a list of the parents of this node and all of its ancestors.
Format the output using the given layout. If no stream is given stdout will be used.
Returns the content of a table as a list of lists. The first element in the list
Generator that yields the content of the given layout as a string.
str - Collect all the lines of a module s block and store them in self. _
str_ Handle a message that has been ignored in the given state scope. If the message
Register a report with a checker. The checker must be an instance of a Checker class.
Add some stats to the stats dictionary. If a key already exists it will be removed.
Get the setter property name from the given node s decorators.
_ Returns the setter property of a node or None if the property is not decorated with a
Returns True if the given return node is a function that returns nothing. Otherwise returns False.
str_ Returns a set of possible exceptions for a given node.
Process a module and add it to the messages handler.
Check that the module s file encoding matches the file encoding specified in the module s configuration.
Process a list of tokens and add them to self. messages.
str_ Returns True if the given statement is an import from a future imported module.
str_ Returns True if the given statement is in a for - else branch of the given
str_ Returns the overridden method of the given class or None if the method does not exist
Get the extra info to be used in the unpacking of a node.
str_ True if name_node is assigned locally.
str_ Mark a node as consumed and remove it from the list of to_consume.
Returns true if the node has a homonym in the upper function scope.
Check if unpacking is possible.
_check_metaclasses - Check all classdef nodes for metaclasses and remove them from
Returns a list of all packages in the given directory. If prefix is specified prefix will be
Run the install_lib and copy the files in include_dirs to install_dir.
Report the similarities of the given stats to the given section.
Run the simulator.
str_ Append a stream to the list of linesets for the given streamid.
str_ Returns a list of tuples with the number of simulations and a list of tuples
Display a list of sims in a human - readable format.
str_ Find common lines between lineset1 and lineset2.
_iter_sims - iterator over all simulations in the linesets.
Return an iterator over the stripped lines in the file. If no start_at is given
str_ - > str - > str - > str - > str - > str -
str_ Returns True if node_a and node_b have the attribute attr_name
str_ True if the original and overridden parameters are different.
str_ Try to infer the result of a method call. If the result cannot be inferred
set_accessed sets the node as being accessed in the scope of the given node.
Check if the node is a classdef and if so add a message if it is.
Check if the node s mro is consistent. If it is add a message to the
Check that the bases of the given node are valid.
Leave a functiondef node.
Check if a node is in a slot of a class.
str - > bool - > bool - > bool - > bool - > bool - >
Returns True if the node is a mandatory method parameter.
_is_raising returns True if any node in body is an astroid. raise
Check if a node has a bad context. If so add it to the error message.
displays the reports in the given layout.
str_ True if node is a typing. NamedTuple.
Returns True if the given classdef is an enum class or False if it is not.
str Returns True if the node is a dataclass.
Visit a ClassDef node and check for too many parents and too many attributes.
Leave a classdef node.
str_ Check whether the expression is boolean expression or not and if the expression is boolean expression
Check if the boolean expression is greater than the maximum allowed.
Check the docstring of the given node for spelling.
str_ Format the object with the given template string and return the result as a string.
str_ Returns True if the node is an ELSE node and False otherwise.
Check if the if statement is simplifiable. If the else statement is simplifiable the else
Check if the node is a stop iteration inside a generator. If so add a message to
Check if an exception is inheriting from the stopiteration.
str Check if nested blocks are needed and emit a message if needed.
_duplicated_isinstance_types returns a dict of duplicated isinstance types.
Check whether we consider merging an instance of another class with the same name in the same order
Returns True if the node is an AND or OR node.
Check if the node has a consistent return. If so add a message to the report.
Check if GraphViz is available and exit if not.
str_ Write out the diadefs for the given project.
Write all the packages in the diagram to the output file.
Write all the classes in the diagram to the output stream.
Set the printer to be used to print to a file. The file_name is the
This method sets the printer to use to print the graph. This is done by opening a
str - If minversion is greater than sys. version_info and maxversion is greater
Format the help message for the command. If checkerref is set to True the message will
Get the current environment as a dictionary. The keys are the environment variable name and the values
str _get_cycles - Get cycles from graph_dict starting from vertice.
Generate a dot file from the source and write it to a file. If outputfile is
Helper function to print a section and options to a stream. This function is used to format
str_ disable disable a message.
str_ Enable or Disable a message. str_ Disable the message and register it with the
str_ Returns a list of message symbols for the given message. If the message is not
str is_message_enabled - Check if a message is enabled for a given line and
str - > None - > None - > None - > None - > None - >
_get_indent_length returns the number of indentation characters in the given line.
Returns the indent hint line for the given bar_positions and the given bad_position.
Return the indentation of the token at the given index in the source file.
Handle the start of a line.
Get the valid indentations for a given token.
Return the hanging indentation after a bracket.
Returns a list of tokens for the continuation of a bracket inside a given bracket.
str push_token - Pushes a token onto the token stack at the given position.
Called when a new line is found in the given tokens.
Returns True if the token at index i has a valid type annotation.
Check if the spacing is valid for the equals operator.
Check that the token is surrounded by a space.
Visit a default node. If the node is not a statement or if it is a pure
Check if a node is a multi - statement line. If so add a message to the
Check the indent level of a string.
Returns True if the given node is in an iterating context.
Returns True if the node is a conditional import.
Check if the name of a node is a builtin and if so add it to the message
Visit a Subscript node and add its message to the messages collection if it is an instance
Visit an attribute node and check if it is an instance attribute. If it s an instance
str_ If node. exc is an astroid. InferenceError node. exc is
find_pylintrc finds the path to the pylintrc in the current
Validate the value against the type of the option in optdict. If the option is invalid
Register a provider with the command line parser. The provider must have a priority greater than or
cb_set_provider_option callback. This callback is called when a provider option is
str - > None - > None - > None - > None - > None - >
Generate a configuration file from the configuration providers. If stream is not specified the output will be
str_ Loads the config file into the global config object.
load_command_line_configuration - Loads the command line configuration from the command line
str - > None - > None - > None - > None - > None - >
str - Prints the help message of the command line.
Load the default values for all options.
Returns the attribute name of an option. If optdict is None the attribute name is returned
Get the default value for the given option.
Returns a generator that yields all the options in a section sorted by the option name and the
str - True if func is a boundmethod with one of types and one of methods.
Checks if a node is a complex format string.
Visit a module node and populate the logging_names logging_format_style and logging_
visit an import from node and add it to self. _logging_names.
visit an import node and add it to self. _logging_names.
Check that the format_string is a valid format string. If not add a message to
Returns True if the node is inside a loop.
Get the parent node of a loop node that contains the given break node.
str_ Check if a loop exits early.
str_ = builtin_property str_ = property_names str_ = property_names
Determine the function name type based on the decorators of the given node. If the node is
Report by node type stats.
Returns True if the given call is a one - argument call with the same number of arguments
str_ if the node is a starred assignment or a function call. If it is
str_ Visit a Call node and check if it is an abstract class.
Check if a else statement is on a loop. If so add it to the report.
Check if a node is in a loop. If so add it to the message queue.
str open - Open a file and add stats to the linter. This is called when the
visit an astroid. Expression node by converting it to a string and adding it to the
Checks if the node is an assert and if so adds a message to the report.
Visit a dict node and add messages for any keys that are not constants.
Check if a node is not in a try - finally block.
Check if the node is a reversed protocol call.
Check if a node has a docstring. If so report it. If report_missing is
Check if the literal is a string or a literal literal that is a list tuple dict or
Parse a subgraph of the given node and add it to self. graphs. If self.
Parse a subgraph and add it to the graph. This method is called when a subgraph is
Visit a module and collect all the messages for each node in the module s body.
Walk through the AST and call all events that have been registered for this node.
str_ Add a relationship between two objects.
str_ Returns the relationship object for the given from_object and relation_type.
Returns a list of node_names for the attributes of the given node. If the node
str_ Add an object to the diagram.
Returns a list of class names from the given list of AST nodes.
Returns a list of all classdef objects in the source file.
str_ Returns the class with the given name. Raises KeyError if the class does not
str_ Returns a list of all modules in the source code.
str_ Returns the module with the given name. Raises KeyError if the module does not
Returns the module with the given name in the given node. If no module with the given
add_from_depend - Add from_module to the list of modules that depend on
Delete the token from the cache. This is a no - op if the token is not
Returns a query object for the model. If the model has a query method it will be
str username - username of the user password - password of the user to be checked.
str_ Get user by access_token or refresh_token. If access_token or
Set a token for a given client and user. If the token already exists it will be
Set a grant for a given client_id and redirect_uri in the session.
Get a user from the database by client_id and code. Returns None if not found
Returns a tuple of the uri headers data and method to be sent to the server.
init_app sets the app object and sets the state_key in the app s extensions
str_ Create an oauth remote app and register it in the remote_apps dictionary.
Generate an authorization token and redirect to the given callback.
Handle OAuth 1. 0 response.
handle_oauth2_response - Handle the response from the OAuth 2. 0 flow.
Returns a response to the user. If args is none the request. args will be used
Hash a token for the given application and return it as a tuple of the class name and
_make_client_with_token - Creates a new client with the given token.
Make an OAuth session from the given access token and secret. If the access token is a
Temporarily disable the insecure transport when running in debug mode or in testing mode.
Confirms an authorization request and returns a response. If the request is successful the response
str Get the client secret for a given client key and request object.
str_ Get the request token secret for the given token and client key. If the token
str Get the access token secret for the given request. If the request has not yet been
str_ Get the realms associated with the given request token. If no realms are
Returns the redirect_uri for the given token. If request. request_token is not
Returns the RSA key associated with the given client key. If no client key is associated with
str Validate that the client_key is valid for the given request. If the client is
str Validate the request token.
str Validate the access token and save it to the request. access_token.
str Validates the timestamp and nonce for a given request. Returns True if the timestamp is
Validate a redirect_uri against a client s redirect_uris. If the redirect_uri
str Validate that the realms in the access token match the realms in the realms
Validate the given verifier against the given request. If the verifier is valid the request s user
str verify_request_token - Verify request_token and set it to request. request
Verify that the request token matches one of the realms in the realms list.
Confirms an authorization request. If the request is successful the response will be returned.
Authenticates a request with a valid client ID and client secret. Returns True if authentication
Authenticates a request based on a client_id. If no client_id is
Get the original scopes for a given refresh token.
Confirm that the given scopes match the refresh token. If the refresh token does not match the
Returns the default redirect_uri for the given client_id.
Get the default scopes for a given client. If no client is given the default scopes are
Invalidates the authorization code associated with the given client_id.
save_authorization_code saves the authorization code to the request and returns the redirect_uri
str_ saves the bearer token and returns the default redirect_uri.
Validate the bearer token and set the request. access_token and request. error_message
str Validate that the client_id is a valid client id. If the client id is
Validate a code for a given client. If the code is valid return True. Otherwise return
Validate the grant type for a given client.
Check if the refresh token matches the client s client_id. If so update the request
Validate that the response_type is one of the allowed response types for the client.
Validate that the given scopes are valid for the given client. If the client is an instance
Validate the username and password against the user getter. If no user getter is defined the user
revoke_token revokes an access_token or refresh_token.
Update the qq_api_request_data in the session with the given data.
Convert all keys in a dictionary to strings.
Change the Weibo authentication header for a request.
str_ Register to a remote oauth application.
Create a new remote app with the given name and oauth instance.
Extract the uri http_method body and headers from the request object.
convert text to bytes if it s not already bytes_type. If it s not bytes
str_ - > bytes str_ - > unicode str_ - > bytes str_ -
Create a response object with the given headers body and status code.
Get a list of cached clients for the current app.
add_remote_app adds a remote app to the registry.
Add a remote application.
check_exception - check if exception is raised in x509_get_pubkey method.
check_success - Check the success of the generation of the key and certificate pair generation.
check_load_privatekey_callback - check load private key callback
check if load_privatekey_callback_incorrect is called in case of incorrect private
check_load_privatekey_callback_wrong_type - check_privatekey_
Check if the crl is revoked. If it is it will generate a crl and get the
check_x509_revoked_dup - check for duplicate x509_revoked
str_ - > x509req - > str_ - > str_ - > str
str_ Create a certificate from a request and an issuer cert key and a serial number.
Use a certificate chain file for SSL connections. The certificate chain file must be a PEM -
Use a certificate file to connect to the server. The file can be either PEM or PEM
Set the SSL certificate to use for the current connection.
Adds an extra chain certificate to the SSL context.
Use a private key file on the SSL context. If no private key file is specified the
Set the private key for the SSL context. The private key must be a valid private key
Load a list of CA certificates from a PEM - encoded file.
Set the maximum number of times a certificate should be verified. Defaults to 1.
Load a temporary DH parameters from a PEM - encoded file.
Set the cipher list to use for this connection.
Set the list of authorities for the client certificate authorities for the SSL context.
Adds a certificate authority to the SSL context s client CA list.
Set the SSL Tlsext profiles to use SRTP for the current connection.
Set the callback function to be called when the next protocol is NPN - Select.
Set the ALPN protocol extensions for the SSL context.
str Set the ALPN select callback. The callback will be called when ALPN is selected
str Set OCSP callback.
Set the SSL context.
_ssl_get_servername - Get the server name of the current SSL context.
Set the host name for the TLS TLSEXT.
Receive data from the socket.
Read a bio from the server.
bool True if SSL renegotiation is pending False if SSL renegotiation is pending.
Shuts down the SSL connection.
_ssl_get_cipher_list Return a list of ciphers supported by the server.
Get a list of client CA names for the current SSL context.
Set the shutdown state of the SSL connection.
Get a random string from the server.
Return a random string that can be used as a key for a client - side key.
Get the master key of the SSL session.
Export the keying material of the current SSL context to a string.
str - Returns the current SSL session. Returns none if there is no session in the SSL
Get the name of the current SSL cipher.
Get the cipher bits of the current SSL context.
Get the version of the current SSL cipher.
Get the SSL protocol version name.
Get the next protocol negotiated message from the SSL context.
Set the ALPN protections for the SSL connection.
Get the ALPN protocol negotiated by the server.
_bio_to_string - Convert a bio to a string.
Set an ASN. 1 time boundary to the given value.
Return the ASN. 1 string representation of the given timestamp.
Returns the Elliptic curve with the given name. Raises ValueError if the curve is not
Dump a public key to a PEM or ASN. 1 string.
Load a public key from a PEM or ASN. 1 - encoded string.
Create a signature for the given data using the given private key and digest. The signature is
Verify an EVP signature against the given data and digest. If the signature does not match
Dump a CRL to a string.
str - Returns the cryptography key as a string. If the only_public flag is
Check if the private key is valid.
Return a set of all the curves that are supported by the Elliptic curve library.
_get_elliptic_curves returns a list of curves loaded from the given
Return the EC key associated with this curve.
Return the DER encoding of the certificate.
str_ Returns a list of components of the X. 509 name.
Get the short name of the extension.
Get the extension s data as a byte string.
str - Return the certificate signed by the Hazmat server as a cryptography string.
Set the public key of the certificate.
Get the public key of the certificate.
Get the subject name of the certificate.
Add one or more extensions to the certificate request.
Get the list of extensions in the certificate.
Verify that the certificate is signed by the given private key.
str - Return the certificate as a cryptography. hazmat. backends. openssl.
Set the version of the certificate.
Get the public key of the certificate.
Set the public key of the certificate.
Signs a message with a private key.
Return the digest of the certificate.
Set the serial number of the certificate.
Get the serial number of the certificate.
Update the notafter time of the certificate in the X. 509 certificate. The amount
Update the notbefore time of the certificate in the X. 509 certificate in the future
Returns True if the token has expired.
Get the issuer name of the certificate.
str Issuer of the certificate. The name of the certificate must be unique within the certificate.
Get the subject name of the certificate.
str Set the subject of the certificate.
Add one or more X. 509 extensions to the X. 509 certificate.
Return the extension at the given index or raise an error if the extension does not exist.
str Add a certificate to the hash table. If the certificate already exists in the hash table
Add a CRL to the certificate store.
Set the time at which the certificate was verified.
Initialize the X509StoreContext.
_exception_from_context returns an x509storecontexterror from the current context.
verify_certificate - Verify the certificate in the store context.
Set the serial number of the certificate from a hex string.
Get the serial number of the certificate in ASN. 1 format.
Set the reason for the CRL.
str - Returns the reason of the certificate revocation. This is the reason of the certificate revocation
Set the revocation date of the certificate.
str - Return a cryptography representation of the certificate.
str - Returns a tuple of the revoked certificates in the CRL. Returns None if the CRL
Get the issuer of the certificate.
Signs the given digest with the given issuer_cert and issuer_key.
Export a certificate to PEM format.
Return the name of the type of the object.
Set the list of certificates to use for the CA certificate. If none is given all certificates
Signs a message with a private key.
Verify that the key is a valid key in the SPKI.
Return the SPKI encoded as a base64 string.
Get the public key of the SPKI.
Set the public key of the SPKI.
raises an exception from the error queue. If there are no errors in the error queue
Returns a dictionary of metadata for the service.
Returns a generator of issues for each card in a board. Each issue is created from the
Returns a list of annotations for the given card_json. The first element in the list
Get a list of boards from the API. If boardid is specified it will return
Get a list of lists for a given board.
Returns a generator that yields all the cards for the given list_id. If the list
Get a list of all comments for a given card.
Returns the API URL for the given path and context. If the host is the same as
Get a list of objects from a given URL.
Convert a link field to a dictionary.
Get a list of issues that match the given query.
Get a list of requests for a given pull request tag.
aggregate_issues is a generator that yields all the issues in the given configuration. If debug
_get_config_or_default returns the value of the given key from the main
Returns True if the given issue should be included in the result.
Make a table from a list of lists of strings.
Execute an oracle command and return the output as a string.
Get an option as an integer. If the option does not exist or is not an integer
str_ Pulls issues from the pidlockfile and aggregates them into a list of issues
Get the data from the given url and return it as a string.
Get a collection of values from the given URL.
Parse a string in sprint format into a dictionary of fields and values.
Get the credentials for the target.
str - > np. ndarray - > np. ndarray - > np. ndarray - >
str_ Returns the z - score of a 2D array along a given axis.
adjusts the spines of a matplotlib plot to match the color of a list of colors
Prepare an argument parser for use with the GSEA command line tool.
Add a parser for the enrichr subcommand to subparsers.
gsea_pval returns the p - value of the GSEA problem.
Get the names and descriptions of the MARTs in a pandas. DataFrame.
get_datasets returns a pandas. DataFrame of the datasets in the mart. If m
Get the attributes of a dataset as a pandas. DataFrame.
Get the filters for the given dataset as a pandas. DataFrame. The first column is the
str_ Set the number of cores to use for the current process.
Load a list of genesets from a GEDCOM file. The list of genesets
Get a list of all the libraries in a database.
Download the libraries from the enrichr server and return a dictionary with the keys and values.
Compute the heatmat for a given pheno position and negation. If pheno_
load_data loads the data into a pandas. DataFrame.
Run the GSEA algorithm on the samples in the given DataFrame.
Save the results to a. s2d file in a. s2d format.
Parse the genesets file and return a list of dictionaries.
Send a list of Gene objects to the given URL. Returns the job_id.
Check if a user is in a list of genes. If so print the number of genes
Add a cube to a script.
Add an icosphere filter to a script.
Create a cube with hires.
Get the color values for a given color. If the color is not found print the color
check if var is a list with num_terms elements
str_ make a list of numbers. num_terms is the number of terms in the
write a filter to a mlx. filterscript object
Merge verticals into a script.
This function splits the vert on a non - manifold face in the script.
Translates a script to the specified value. The value can be a tuple or a list of
Rotate the script by the given angle.
Scales the script by the given number of values.
r_func r_func r_func theta_func r_func z_func
Wrap a script in a cylinder.
deform2curve takes a script and a curve and a step number and returns a function
Write a VC2TeX filter to the given script.
Write a mesh script to a filter file. If all_visible_layers is set to
str_ voronoi - Voronoi script generator.
Write a filter to the script.
Write a vertical quality filter to the script.
Returns the vertices of a cylindrical script.
Run a spherical function on the given script.
str_ Rename the current layer in the script. If the current layer is the same as
Change the current layer of a filter script. If no layer is specified the current layer is
Duplicate the current layer in the script. If layer_num is None the current layer is
str Delete the lower layer of the script.
This function is the main entry point for the script. It is the main entry point for
str Add a new layer to the layer stack. If change_layer is set to True
save the filters to a script file
Write a per - triangle filter to the script.
Measure the topology of a filter script.
Parse the hausdorff log file and return a dictionary of the hausd
Return the 2 - dimensional angle between y and x. The angle is expressed in radians.
Returns the cross product of u and v.
v_multiply returns the vector v1 multiplied by scalar. scalar must be a scalar
Write a depth filter to the script.
sorts a polyline by vertices and z - coordinates and returns a sorted list of polyline vertices
measures the geometry and topology of a MLB file. If a log file is specified
Return filename with extension lowercased. If filename already has extension return it. Otherwise return filename
Returns the upload set s configuration.
Returns the URL for a file in the set. If the base_url is not specified
str_ Returns the full path to a file in the given folder. If no folder is
Returns True if the given extension is allowed by the current user.
Resolve a conflict in the target_folder with the given basename. If the target_folder
Returns the version number of the vprof file.
Remove duplicates from a list of objects and return a list of the removed objects.
str _get_object_count_difference - Gets the difference between two objects.
Returns a list of tuples with the object type and the number of objects in the dictionary.
Trace the memory usage of the current process.
str_ Returns a list of code events sorted by mem_overhead.
str - Returns the overhead of the current object. str - Returns the overhead of the current
str_ Computes the memory overhead of the process.
Profile the package and return the profiling object and the name of the package to be run.
profile_module returns the profile module and the memory overhead of the source code in memory.
str_ Profile the function and return a tuple of the profile and the result of the function
str_ Runs the profile and returns a dictionary of the result and the number of objects
Returns a set of absolute paths to all of the modules in the given package_path.
str_ Runs a function in a separate process and returns its output.
Get the type of the run object.
str_ = run_object str_ = run_object str_ = run_object
init_package initializes the run_object with the profile_package and the run_args
str_ The name of the run_object and the source file of the run_object
str_ Replace sys. argv with self. _run_object and self. _run
Sample a function from a given frame. This function is called when a signal is received.
Insert a stack of functions into the call tree. If a function is already in the call
fills the sample count of the node with the sum of the sample counts of all children
Format a tree of samples into a dictionary of colors.
Returns the call tree as a dictionary. The keys are the method name and the values are
Profile the package and return a dictionary with information about the package and the time it took to
Profile the module and return a dictionary with information about the module and its call tree.
Profile the function and return a dictionary of the result and the time it took to run it
str_ Converts the profiler s stats into a list of tuples sorted by number of calls.
Generate a profile package from the run_object and the run_name of the run.
Return the profile module for the run object. The profile module is the name of the object
Profile the function and return a dictionary with information about the function and the time it took to
Show the guestbook as a Jinja2 template.
Add a new entry to the database.
Starts a web browser and runs the profiler_stats on the given host and port.
_handle_root returns the content of _profile_html in the root directory of the
Handle other files that don t have the same extension. Return the content and the extension.
Send a GET request to the client.
Do a POST request to the server. This method will read the data from the stream and
str - > None - > None - > None - > None - > None - >
Check if module_path is in the standard lib directory.
record_line is called when a new line is added to the list of lines to be
Returns a generator that yields the lines of the source code without the standard library.
fill_heatmap - Fills the heatmap with the number of times each line has
Returns a list of lines that should be skipped based on the given skip_map.
Returns a dict with the run_object run_time and a list of heatmaps
Format a heatmap to be used in a log file.
Returns a dictionary with the run_object run_time and the list of heatmaps.
Returns a dictionary with the results of the function and the number of times it took to run
run_object - Run object with all profilers listed in prof_config - Run
Run a function with the given arguments and options and return the results.
sparkbasenb predict_proba.
str_ Returns the log probabilities of x. If x is a blockrdd it will
Fits the model on the data in z. If classes is not provided the model will
_count_vocab returns a sparse matrix that counts the number of documents in the vocabulary.
str_ Sorts the features in the vocabulary and returns a list of the indices of the
str_ Limit the number of features in a vector to a specified number of documents.
Fits the model on the data and transforms it into the vocabulary. If the dataset is
str_ is the name of the dataset to be transformed. It is assumed that the dataset
str - > Scikit - compatible version of standardscaler. to_scik
_spark_fit - Fit the model to a spark dataset and return the average model.
spark_predict is a wrapper around the predict method of the underlying class. This is a
Fit a linear regression model to an RDD z.
Fit the model to the given Z vector and save it in the last step of the model
Fit the model and transform the data using the fit_params and return the transformed data.
score returns the score of the transform at the given z. z must be in the form
Return the score of the estimator at the given z_test using the given scorer.
Spark k - means clustering.
Compute the Kmeans for the given input.
Predict the class of the input data.
Check that the given RDD has the expected dtype.
Fits the SVD and then transforms the data using the truncated SVD algorithm.
Transform an RDD using the Truncated Singular Value Transform method.
A generator that yields a block of data from an iterator. The iterator must be a generator
str_ - > str_ - > str_ - > str_ - > str_
Block an RDD into a new RDD of the specified size and dtype.
Apply a function to the RDD and return a new RDD of the transformed RDD
Returns the shape of the RDD as a tuple of the shape of the first element.
Convert the RDD to an array of numpy. ndarrays.
Return the bit - mask of the given permission and position in the stat object s.
Return True if path has only root write permissions. If path has only root write permissions return
Check if a config file is valid and print it to the given printfn.
Read the config file and update the config with the data from the config file.
run_as_cmd - Run a command as a given user in a given shell.
executes a command and returns the stdout and stderr of the command. If timeout is not
Execute a command over an SSH server.
Validates that the content type is valid and that the content type is valid JSON.
Returns a dict of HTTP headers for the request. If no headers are present in the request
Returns the URL for the execute home assistant. If the configuration is invalid raises an exception.
Get the URL for the current event.
Return a text representation of a Packet object.
Print a discovery packet to the console.
scan for devices on the given interface. If no interface is given all devices are scanned.
Execute the command and return the result. If root_allowed is set to True the command
Send a message to the user s confirmation channel.
Called when a new device is pushed to the board. This method is called when a new
Execute the command on the given device. The command will be executed in a new thread.
str_ Runs the on_push callback.
find_ledger_file - Find the path to the ledgerrc file.
Installs the compatibility module and runs the tests in the session.
Read a JSON file and return a precalculated text measurer.
Generate a list of supported characters from the deja_vu_sans font.
generate_encodeable_characters - Generate a list of encoded characters from a list of characters
Returns a mapping of characters to their length in characters.
Write the deja_vu_sans_path to a JSON file.
str convolve a 2d image with a gaussian kernel.
str gaussian_kernel_width - width of gaussian kernel gaussian_kernel_sigma - sigma
Convert an image to a grayscale image and alpha.
Command - line interface for the ssim command line tool.
str_ ssim_value - returns the ssim value of the target image.
str_ Computes the S - Imm value between two images using a Gaussian kernel.
str_ Destroy the object. If autotick is enabled the object will be destroyed.
Set the version of the python interpreter. The version must be greater than or equal to the
Returns a dict of all the information about the state of the node. This is used to
Print the current status of the server. This is useful for debugging the status of the server
str_ Returns the node of the given connection or none if the connection is not connected to
str_ If we re not in a read - only node or if we re in a
str _onnewincomingconnection Method called when a new incoming connection arrives.
This is the callback that is called when a connection is established. It is called when a
str - True if we should connect to the given node.
str connectifnecessarysingle - Connects to a single node if it is not already
Called when the connection to the node has been established.
str _onoutgoingmessagereceived Method called when a message is received from
str _ondisconnected Method called when a connection to a node is disconnected.
str Add a node to the list of nodes and connect to it if it should connect.
Drop a node from the connection pool and disconnect it from its connection if it is connected.
str Send a message to a node
str Put a new item into the queue. If the queue is full the item will be
str Put a new item into the heap.
str_ Returns the value at the top of the queue or default if the queue is empty
str_ Attempt to acquire a lock with the given lockid. If the lock is acquired
This method is called when a lock is acquired. It returns true if the lock was acquired
str_ Releases the lock with the given id. The callback will be called when
Set the list of hosts to connect to. If use_ssl is set to True the
str_ Create the indexes with the given names if they don t already exist.
Migrates the given indexes to the latest version.
Remove all metadata from the report and return it as a dict.
Saves the aggregate reports to kafka and flushes the report to kafka.
Extract XML from a file or file - like object and return it as a string.
parse_aggregate_report_file - Parses an aggregate report file into a list of
Converts a list of forestic reports to a CSV file.
parse_report_file - Parses a report file and returns a dictionary of results.
Get the capabilities of the IMAP server as a list of strings.
Save a list of forensic reports to splunk.
Decode base64 string into bytes.
Get the reverse DNS name for an IP address.
Converts a human - readable timestamp to a datetime object.
Get information about an IP address. If the IP address is already in the cache return it
converts an outlook message to a rfc822 message.
Convert a string to a list of strings.
str_ Parse a report file and return a list of results and the file_path.
Drains all subscriptions. If no sid is given all subscriptions will be drained
str_ Publishes a message to RabbitMQ. The message will be sent to RabbitMQ
str_ Publish a request to the server.
Publish a message to the server.
Subscribe to the given subject asynchronously.
unsubscribes from the specified channel. max_msgs is the maximum number of messages
str Flush the connection to the server. If the connection is closed or the timeout is reached
Select the next server in the pool.
Process an error message from the NATS server.
Process an operation error. This is called when an operation fails to connect or is closed.
_connect_command returns the command to connect to the server.
str Processes a PING and sets the result to True if the PING was received
Process a message received from a client.
Process the server info from the server pool and add them to the server pool if needed.
_flusher is a long - lived thread that flushes the internal buffer to the
This is the main loop for reading data from the socket. It is run in a separate
str _load_features_from_array - loads features from a numpy array.
Load features from a list of images. If names is not specified all features will be loaded
Returns the Pearson correlation between the input images and the output images.
Returns the dot product of the feature images with the image images in imgs_to_decode
Select features from a dataset based on a feat_select. If feat_select is a
str_ Get the order of the feature names in a dataset.
str_ - Classify the data using the given classifier.
str_ Fit the classifier and return the classifier object.
str_ if class_weight is set to str_ if class_weight is set to
stratified kfold fit with cross validation. If the cross_val is a string
str_ or np. float64 x = data y = data y = data y =
Randomly select n_voxels voxels from the dataset and return them as an
Get the top n_top_words words of a model.
str_ Pearson correlation coefficient between two data sets. x and y must have the
Calculate the FDR of an array of points p and q. If q is not specified
Load the activations from a CSV file into a pandas. DataFrame.
r - The number of pixels in the image. If r is not None the image will
str_ Returns a list of feature names ordered by feature name. If no features are provided
str_ counts the number of features in the dataset that are greater than or equal to the
Load a dataset from a pickle file.
save the feature table to a. sdf file in a. sdf format.
Returns a list of the names of the features in the dataset ordered by their names.
Search for features that match a string or list of strings.
str_ Returns a list of ids that match the given expression. The expression can be a
_sdf_to_csr - Converts SDF data to CSR data.
str_ transform foci from mat to foci from foci from foci to mat
str_ to_mat convert foci to mat
Apply a function to a Foci object. If the function does not exist it will be
get_mask - Get a mask of all layers in the image. layers - list of
str_ Loads images from a list of filenames and masks them using a masker.
Save an image to a Nifti1 image file using the given masker.
Set the logging level. If no argument is passed the current logging level will be returned.
Parse an address string into a list of Address objects.
str_ Converts a dictionary to a named object.
Get the price for a given ticker. The ticker must be in the format specified by fmt
get_bulk_news - get all the news for a given file_id or all
Make a request to the API and return the response. Raise a restclienterror if an
Get information about the Spotify Bearer associated with the Spotify API client.
Make an HTTP request to the given URL.
album_tracks returns a list of tracks for a Spotify album identified by the Spotify
Get a Spotify artist by Spotify ID.
Get a list of albums for a Spotify artist.
Get the top tracks of a Spotify artist in a specific country.
Returns a list of artists that are related to a Spotify artist.
Request artists from Spotify.
Get a specific category for a given category_id. If country or locale is not provided
Get a list of playlists for a given category.
Get a list of categories for a given country and locale. If no country or locale is
Get a list of featured playlists for a given locale country and timestamp.
Get a list of new releases for a given country.
following_artists_or_users returns a list of the following artists or
Gets a list of albums for this artist.
Gets a list of all albums for this artist.
Get the total albums for this artist.
Returns the currently playing context and track. If the currently playing context does not exist it will
Get the current player.
Get a list of all available devices.
Returns a list of recently played tracks.
Replace the tracks in a playlist.
Creates a new playlist in this user s account.
Gets a list of all playlists in the user s playlist.
Gets a list of tracks for this album.
Get a list of all tracks in this album.
Returns the OAuth2 URL for the given redirect_uri with the given scope and state.
Get Spotify album by Spotify ID.
Get a Spotify artist by Spotify ID.
Get a Spotify track by Spotify ID.
Get a Spotify user by Spotify ID.
Get a list of albums by their ids.
Get artists by their ids.
str_ to_id - Convert a string to an id. If the string is not
Create a new instance from a client object.
Generate a URL to redirect the user to the given client_id and redirect_uri.
Returns a dictionary with the client_id redirect_uri scope and state.
Returns the parameters as a string.
Build a list of playlisttrack objects from the data returned by the playlisttrack API call.
Get a list of all tracks in this playlist.
Transfer a player to another device. If ensure_playback is True the player will be
from_href - Get a client object from the href attribute of the client object.
Returns True if the request is valid False otherwise. If the request is not valid returns False
Convert a month to a short month if it is in the short month list otherwise return the
Recursively walks the current directory and updates the code_urls attribute.
Returns True if current_version is greater than version_yaml False otherwise.
Check if the current version is a development version.
str Returns True if the current version is greater than the version in the version_yaml.
Create a backup of the current configuration and save it to self. backup_content and self
str_ is the name of the file to be restored from. backup_content is a
Returns True if the line is to be ignored or False if it is to be ignored.
Returns a list of domains from the given options. If aggressive is set to True
Extract the base from an element. If the element is a list the base is returned.
Format a string into a list of strings. If no string is given the string will be
Returns the status code of the request. If the request fails None is returned. If the
Returns the HTTP code of the request. If no HTTP code is available None is returned.
str - > None - > True - > False - > True - > False - >
is_subdomain - Check if a domain is a subdomain or not.
Check if an IP is a valid IPv4 address. If ip is a string it will
is_ipv4_range - Check if ip is a valid IPv4 address range.
str - > None - > True - > False - > True - > False - >
Load the configuration from the current directory. If under_test is True the current directory structure
stay_safe prints a random string to the console if it is not in the configuration
Download the entry management url if it is not already downloaded.
Return the entry management url.
Print the header of the table.
This function decides whether a file should be executed or not. If so it will be
Returns a domain name and the status of the domain. If no domain is specified the current
Returns the URL of the current page. If url_to_test is set it will
colorify_logo - Prints the logo to the console. If the logo is not
Format a domain from the extracted_domain. If the extracted_domain starts with str_
_extract_domain_from_file extracts the domain from a file.
Returns a list of domain objects for each file in the file_list_to_test
Returns a list of urls to the files in the directory. The first item in the list
Returns the expiration date and the status of the user. If the user is not authorized to
Handle the catched status and return the catched status. If the catched status is
_get_structure gets the structure from the API and updates self. _update_structure
str_ Create a directory if it doesn t already exist. If loop is set to True
Delete all directories that are not in the structure. This is done by replacing the parent path
str_ Returns a tuple of the parsed and default configuration filenames.
Download the production config if it is not cloned. If it is not cloned download the default
Download the IANA configuration file if it doesn t already exist.
Download the PSL configuration file if it doesn t already exist.
_install_directory_structure_file - Downloads the directory structure file and writes it
_merge_values - Merge values from upstream_config and pyfunceble. configuration
Load the config from the user. If the user is not in the environ it will ask
Split a version string into a list of digits and non - digits. If return_non
Check if the local versions are newer than the upstream versions.
Returns True if any of the files and directories in str_ are cloned False otherwise.
Handle a non - existant index in the pyfunceble. intern dictionary.
Returns the directory where analytic host file should be written.
Returns a unified file with the current status of the domain.
Generate a status file based on the domain_status and the source and expiration_date.
Return True if the file should not be produced or False if the file should be produced.
_extensions adds a line to the public_suffix_db if it does not already exist
Load the data from the destination file. If the file does not exist it will be created
Returns the standard version of the given element.
Load the IANA database into the pyfunceble. If the database does not
Return the REFERER for the given extension or None if there is no REFERER
Return a generator of all the valid extensions in the IANA file.
Update the IANA database and write it to the destination file.
Return a list of urls that can be fetched from the API.
Retrieve the data from the file if it exists. If it does not exist it will create
Backup the current configuration to a JSON file if it exists.
Add elements to the list of elements to be added to the list of elements to be added
Remove the get bare value from the list of elements in the list.
Return a list of all mined elements.
Process the configuration and add it to self. _add. If the configuration is set to
str_ Returns the content of a JSON file as a dict.
Write the content to a JSON file. If the content is not a dictionary it will be
This method is called when a record is about to be logged. It will write the record
This method is used to update the expiration date of the extracted data. It is used to
This function is called when the referer is not found. It will write the referer to the
Write the header to the output file if it is not already present.
Returns a list of tuples containing the header data and the size of the data to print.
Constructor for data_to_print and data_size.
_size_from_header - returns the size of the header as a list of strings
Colorize the data according to the template and the data_to_print attribute.
_json_print - Prints the data to a JSON file or raise an exception.
Returns a list of data to be printed based on the template. If no template is specified
Calculates the time difference between start and end. If start and end are None the time difference
Returns a string representation of the execution time between start and end.
Returns a list of files to delete from the output directory.
Returns a list of databases to delete from the current directory.
str_ Delete all files and then load the current directory. If clean_all is True
Return the hash of the file using the given hash algorithm.
str_ hash_data - returns the hash of the data for the given hash algorithm.
Returns the hash of the file or data. If the algorithm is not valid returns none.
Execute the command and return the output as a string.
str_ Remove a key from the main_dictionnary. If the main_
renames a key in the main_dictionnary. If strict is set to
str_ Merge to_merge into self. main_dictionnary and return a
Write the main dictionnary to a JSON file.
Dump the main dictionnary to a YAML file.
Fixes the path to be relative to the current working directory. If the current working directory
Write data to the file. If the file does not exist it will be created.
Returns the contents of the file as a string. If the file cannot be read the contents
str_ format the main_list as a list of strings sorted by lower case.
str_ Merge a list of dicts or lists into the main list. If strict is True
Returns a list of strings that are not matching the regex.
Match the data against the regex and return the result as a string. If no match is
str - > str - > str - > str - > str - > str - >
Count the number of times the item has been added to the pyfunceble. status
Calculate the percentages for each percentage of the number of items in the list of percentages
Check if a URL is valid. If return_formatted is set to True then return the
is_domain_valid - Check if a domain is valid or not. If domain is
Returns True if the domain is a subdomain. If domain is None then the element of the
Get the current status of the domain ip or url. If the domain ip or url is
str_ is the name of the historical formatting error file in the current directory. If the
Retrieve the configuration from the configuration file. If the configuration file does not exist it will be
Backup the current configuration to the inactive_db_path if it exists.
Returns the timestamp of the current database.
Return the content of the configuration.
Returns True if the configuration is present in pyfunceble. configuration. If the configuration
Retrieve data from the whois_db_path and store it in the internal dictionary.
Create a backup of the whois database if the user is authorized to do so.
Returns True if the user is in the database False otherwise.
is_time_older - Check if the current time is older than the current time.
Returns the expiration date of the user. If the user is not in the database or the
travis_permissions - Check for travis permissions in the current environment.
travis is the main entry point for running the travis command.
Look up a namespace by its name. If the namespace doesn t exist it will be created
Send a request to the whois server and return the response. If no domain is given
Get the current status of the current page.
Returns a boolean_ if the domain extension is configured. If the domain extension is not configured
Get the current object. If the current object does not have a method it will be called
Returns a generator that yields the paths of the standard Python libraries.
Generate a generator of standard package names.
str_ Yields the line numbers of unused imports from a list of messages.
Yield unused import module name from a list of messages.
str_ Yields the line numbers of import starused messages in a list of messages.
str_ Given a list of pyflakes. messages. importstarusage return a generator
str_ Yields the line numbers of all unused variables in a list of messages.
Yields line numbers of duplicate key literals in source.
Check the source for errors and return a list of errors or an empty list if no errors
Extract the package name from a line of text.
multiline_import returns True if the line is a multiline import False otherwise.
Returns True if the line ends with str_. If the line ends with str_ returns
Remove unused modules from the given line and return a new line with the filtered lines.
Break up the import statements in the given line and return the resulting line.
Returns a dict of messages keyed by line number. The key is the line number and the
Removes star imports from a line that are not marked as imported.
This function is used to filter out duplicate keys in the source code. It is used to
Check if a dict entry has a given key.
is_literal_or_name - Check if value is a literal or a name.
Yields line numbers that are useless passes in a source file.
str - > list of line numbers that are useless passes in a source file.
Returns the indentation of the given line. If the line is empty returns an empty string.
Returns the line ending of a string. If the string is empty returns the empty string.
Fixes the source code by removing unused variables from the source code. This function does not
Split a comma separated string into a set of strings.
is_python_file - Check if a file is a python file or not.
is_exclude_file - Check if filename matches any of the exclude patterns.
str_ Read an obtainleaseresponsepayload from an input stream.
str Writes this obtainleaseresponsepayload to the given output stream.
str - Writes this cancel request payload to the given output stream.
str_ Read this cancel response payload from the given input stream.
Create a name object from name_value and name_type.
str_ Read a digest from an input stream.
str_ Write the digest to the given output stream.
str_ Read application specific information from an input stream.
str_ Write this application specific information to an output stream.
str ApplicationSpecificInformation Create a new applicationspecificinformation object from application namespace and application data.
str_ Reads a derivation parameters from an input stream.
str Write this DerivationParameters object to the given output stream in the given kmip_
str_ Read a getrequestpayload from an input stream.
str - Writes this getrequestpayload to the given output stream.
Read a getresponsepayload from an input stream.
Write this getresponsepayload to the given output stream.
str This method writes the signature to the given output stream.
Reads signatureverifyresponsepayload from input_stream.
_build_error_response - Build a response for a failed operation.
Process the given template attribute and return a dictionary of attribute names and values.
_get_attributes_from_managed_object - Gets attributes from a managed object.
_set_attributes_on_managed_object sets the given attributes on the given managed
_set_attribute_on_managed_object - Sets an attribute on a managed object
Returns True if the user is allowed to perform the given operation on the given object.
Write this DecryptRequestPayload to the given output stream.
str_ Create a secret of the given secret_type with the given value.
Set the value of a configuration setting. The setting can be one of the expected_settings
Load settings from a file.
Process bind param value.
Return a list of cryptographic usagemasks that match the given value.
Read long integer from input stream.
Writes the long integer to the specified output stream.
Validate that the value is an integer and is within the range defined by longinteger. min
Read this big integer from the specified byte stream.
Writes this big integer to the specified output stream.
Validate that the value is an integer. Raises typeerror if the value is not an integer
Validate that the enum is valid and that the value is in the range of the enum.
Read a value from an input stream.
Write the value of the field to the given output stream.
str_ Writes this boolean to the given output stream.
Validate that the value is a boolean.
Read interval from an input stream.
Validate that the value is a valid integer. If it is not an integer an error is
Validate that the cryptographic usage is a valid value.
Validate the cryptographic_usage_mask and the cryptographic_usage_masks.
Check that the value and opaque_type are valid.
Convert an attribute name to a tag.
converts an attribute tag to the name of the attribute.
Get a bit mask from a list of enumerations.
Returns a list of enumerations that match the given bit mask.
str_ is_bit_mask - Check if an enumeration is a bit mask.
This function writes the key to the specified output buffer using the specified KMIP version.
Read a create keypair response payload from a buffer.
Writes this createkeypairresponsepayload to the specified output buffer.
str_ Reads a getattributelistrequestpayload from a buffer.
str - Writes this getattributelistrequestpayload to the specified byte buffer.
Writes this getattributelistresponsepayload to the specified output buffer.
Get a list of all json files in a directory sorted by file extension.
This is the main entry point for the plugin. It starts the monitoring process. It runs
get_certificate_from_connection - Get a certificate from a connection object.
str_ Returns the extended key usage of the given certificate or None if the certificate does not
Get a list of common names from a certificate.
Get the client identity from the given certificate.
Reads a createrequestpayload from an input buffer.
Writes this createrequestpayload to the given output buffer.
Reads a createresponsepayload from an input buffer.
Writes this createresponsepayload to the given output buffer.
converts a pie object to a pie object
Reads the encrypted response payload from the given input stream.
Writes the object to the given output buffer.
str Returns True if the given attribute is supported by this rule set. If the attribute is
Returns True if the attribute is deprecated or False if it is not.
Returns true if the given attribute applies to the given object type.
Returns True if the given attribute is multivalued.
str_ Reads a CheckResponsePayload from an input stream.
str Write this check response payload to the given output stream.
Reads an attributereference from an input buffer.
Writes this attributereference to the given output buffer.
Read attributes from an input stream.
Writes the attributes to the specified output stream.
Reads a nonce from the given input stream.
Write the nonce to the output stream.
str_ Read a usernamepasswordcredential from an input stream.
Write this username password credential to the given output stream.
str - Writes the device credential to the given output stream.
Reads a credential from an input stream.
Write the credential to the output stream.
Reads this MAC signature key information from an input stream.
Write this MACSignatureKeyInformation to an output stream.
Write the keywrappingdata to the output stream.
str_ Read a keywrappingspecification from an input stream.
Write the keywrappingspecification to the given output stream.
str_ Read extension information from a byte stream.
str_ Write the extension information to an output stream.
str_ Reads revocation reason from an input stream.
str_ Writes the revocation reason to the given output stream.
Validate the revocation_code revocation_message and revocation_reasoncode.
Reads the object defaults from the given byte stream.
Writes the object defaults to the given output buffer.
Write the signature to the given output buffer in the given kmip_version.
Read a profile information from a byte stream.
Write the profile information to the output buffer.
Writes the message to the given output buffer.
stops the socket and waits for all threads to finish and shuts down the socket.
Writes the contents of this object to the given output buffer.
str_ Read locateresponsepayload from input_buffer.
str - Writes this locateresponsepayload to the given output buffer.
_create_rsa_private_key - create RSA private key from bytes.
Reads a SignResponsePayload from an input stream.
Write this SignResponsePayload to the given output stream.
str_ Reads a usage allocation request payload from an input stream.
str - > enum. kmipversion. kmipversion. kmipversion. km
Read the protocol version from the given input stream.
Write the protocol version to the given output stream.
str_ Read this authentication from the given input stream and return it as a list of Credentials
Write the authentication header to the output stream.
str_ Read this poll request payload from the given input stream.
str_ Reads a certificate from an input stream.
str_ Write this certificate to an output stream in the format specified by kmip_version
str_ Read archiveresponsepayload from input_stream.
str_ Writes this archiveresponsepayload to the given output stream.
The main loop of the server.
Reads this rekey response payload from the given input stream.
str Return True if the profile is supported by the given conformance clause and authentication suite.
str_ get_attributes - Get a list of attributes for a given uuid or all attributes
This method returns a list of attributes for the specified user. If no user is specified the
str_ Query the server and return a list of results. If batch is set to True
Open the connection to the server. If the connection is already open raise a clientconnectionfailure
Closes the connection to the server. If the connection is not currently open nothing is done.
Register a managed object.
Returns a list of attributes for the specified user. If no attribute is specified all attributes are
Activates the KMIP. If uid is None the KMIP will be activated
Build the cryptographic parameters from a dictionary.
Build the encryption key information object from the given value.
Build a macsignaturekeyinformation object from the given value.
build_key_wrapping_specification - Build a keywrappingspecification object from
_build_common_attributes Build a list of common attributes for the given operation policy.
_build_name_attribute - Build a list of name attributes.
Read a KMIP queryrequestpayload from a byte buffer.
Write this query request payload to the given output buffer.
Reads a getattributesresponsepayload object from a byte stream.
Writes this getattributesresponsepayload to the specified output buffer.
str_ Get a single entry point from a given group. If no entry point is found
get_group_named - returns a dict of all the endpoints in a group with the
str_ Returns a list of all the entries in the specified group in the specified path.
Import the module and return the object. If the object_name is specified it will be
Create an object from an entry point string.
generate_controller - Generate a controller file from a template file and a test file.
rewrite src_file with project_name and copy to dst_file with project_name
Check if the field s data is a valid URL. If so replace the URL with the
Encode an object into a URL - safe string using the secret key stored in the app config
Decode a string into a Python object using the secret key stored in the app s config.
Returns the absolute URL for the given endpoint with the given values.
Signs in a user. If permenent is True the user will be permanently
Get the current user from the session. If no user is found signout_user will
Create a Flask application. This is the main entry point for the Flask application. This is
Writes a pandas dataframe to a CSV file.
_dataframe_from_csv - Create a pandas. DataFrame from a CSV file.
Serializes a pandas. DataFrame object to a CSV file using the specified writer and data type.
Deserializes a pandas. DataFrame from the specified reader. The data type must be one of
str_ Returns the URL of the contents of the file.
Open the intermediate dataset contents for the given node in the given experiment.
Read the contents of this intermediate dataset as binary data.
Read the contents of this intermediate dataset as text.
_to_dataframe - reads the data from the file and converts it to a DataFrame.
get_intermediate_dataset - Get the intermediated dataset for a given port and
get all experiments for a given workspace
Get a list of all the datasets in a workspace.
Get a single dataset from a workspace
str_ Find the names of all global variables in the given code object.
Returns a copy of the pen object.
Look up a color in the brewer_colors dictionary. If the color is not
str_ Draws the rectangular area of the rectangular area.
str_ for cubic_bernstein_extrema
Cubic bernstein function.
Build a list of choices from the tree and the template.
Initializes the cache. If the cache doesn t exist it will be created. If the cache
Empty the cache and initialize the cache. This is useful when you want to clear the cache
Get the value of an entry from the cache. If the entry does not exist return False
str update_entry_value update_entry_value update_entry_value update_
str - > None - > None - > None - > None - > None - >
Initializes the view with the given context. If the context is None the current request is used
Resolve a tree alias to an i18n alias. If the alias is already in the
Returns True if the current app is an admin.
Calculate the depth of an item in the tree.
Returns the current item for the given tree alias. If there is no current item for the
Returns the url for a given sitetree item.
Initializes the tree and returns the tree_alias and sitetree items. If the current request
Get the value of the attribute of the current page in the tree. If there is no
get_ancestor_level - Get the level of the parent of current_item.
Check if the current user has access to the given item. If the user has not access
Returns a list of items for the given tree_alias. If the tree_alias is
Returns the children of the given parent_item. If use_template is set to True
Returns the children of the given item in the given tree_alias. If the current app
update_has_children updates the has_children attribute of each tree item based on the
Filters the given list of items based on the current page context and navigation_type.
Returns the item that is the ancestor of base_item. If base_item is a
Recursively climbs the tree from the given base item to the parent of the given base
str_ Resolve a variable to a string. If the variable cannot be resolved it will be
Parses the given string and returns a tree of trees. If the string is not a tree
Returns a list of the children of an item in the sitetree.
Returns a list of breadcrumbs for a given site tree alias. If the tree alias is not
str_ Render a tree of tree items using a template. If use_template is a
Returns a tree alias for the given tag. If the preposition is the same as the
Returns the model name for a given model_nfo and page. If with_namespace
str_ Registers the tree admin for the model_tree_class.
This is the handler for redirects. It is called when a redirect is requested. It is
Returns a redirect to the request if it is in the POST. If it is in the
Redirect to the post_url_continue if none is provided.
Return a response to the change action.
str_ = treeitemchoicefield. label. help_text. widget. known_
str_ Get the tree object for the given tree_id. If tree_id is
Move an item from one tree to another in a given direction.
Save the model to the database. If change is True the model s parent will be changed
Returns a list of urls for the treeadmin admin view.
Dump the model tree and the model tree item to a response.
import_app_sitetree_module - Import the app s site - tree module.
get_model_class - Get the model class for a given settings_entry_name
Creates a new configuration object from a mapping.
from_pyfile - Load a module from a Python file. filename - Path to the
from_toml - Load a TOML file and convert it to a string.
str_ - > str_ - > str_ - > str_ - > str_
Create HTTP headers for a new span.
str Returns the current context of the span. If the span is a local root span the
str_ Start the span. This method is called when the span is started. This method
Stop the transport.
str_ Update binary annotations with extra_annotations. If self. logging_context is None
sa_binary_annotation - Add a binary annotation to the remote endpoint of the client.
str Override the name of the span in the current context.
str_ Returns a copy of endpoint with new_service_name.
Build a v1 span from this span.
str - encodes a list of spans into a protobuf list of spans.
Create a protobuf span from a span object.
Convert a hex string to a binary string.
str_ Returns the protobuf kind for the given kind or None if the kind is unknown.
str_ Convert endpoint to zipkin_pb2. endpoint.
str_ Convert annotations dict to zipkin_pb2. annotations.
str_ Create a zipkin annotation from timestamp value and host.
str_ Create a binary annotation.
Create a zipkin_core. endpoint object.
str_ Returns a copy of an endpoint with a new service_name.
str_ builder to create a list of annotations from a dict of annotations and a host.
Build a list of binary annotation objects from a dictionary of binary annotations.
Create a zipkin span from the given parameters.
str_ Converts a thrift span to a byte string.
str_ bytes_list - encodes a list of binary thrift objects into a list of bytes
Detect the span version and encoding of a message.
str_ Converts spans from input_encoding to output_encoding. If input_encoding is
Push zipkin_attr to threadlocalstack.
str_ encodes a V2 span into a Thrift span.
Create a JSON endpoint from an endpoint object.
Encodes a span into a list of protobuf spans.
_decode_spans decodes the spans from the transport into a list of thrift spans.
Convert a thrift endpoint to a endpoint object.
Decode Thrift annotations into a tuple of tuples. The first tuple is the local endpoint the second
Convert thrift binary annotations to tags local_endpoint and remote_endpoint.
str_ Returns a ThriftSpan object for the given ThriftSpan object.
Convert a trace id to a hex string.
Convert an unsigned long to a lower hex string.
str_ Write a long in hexadecimal format to the given data starting at the given position.
fixup_date_fixup_pre_processor - Date fixup pre - processor
str - > int - > str - > int - > str - > int - >
Set the iph_id attribute of the given tag in the given tag_dict.
Set the TNR for a given tag in the tag_dict.
Returns a string with all the lines of the given string. If the strip parameter is set
Return a JSON object if the response contains a header with the given name. Otherwise return the
Log a warning at the given time until a certain number of minutes. This is useful when
Get information about a specific bot.
Get a list of bots.
Read the next term from the stream. Returns a tuple containing the term and the remaining bytes
str_ Write a message to the output stream. Returns the number of bytes written.
str_ - > Term - > Term - > Term - > Term - > Term -
Encode a term into a string.
str_ Add a source address to the multicast - out socket.
str Sends the next message in the queue and waits for the next message to be sent
str _remoteservicehellocallback - Set a callback to be called when
str stop - Stop the server.
str_ Clear all local services.
Returns a list of services that match the specified criteria.
str createsoapmessage returns the message to be sent to the client for the given environment
Discovers the current state of the application. The scope parameter is the name of the
Get the tagged item manager.
get all the child relations of a model as a list of model fields.
get all the child m2m relations of a given model
Save the model to the database. If update_fields is not specified all fields will be
Validates that all the fields in the form are unique and that they are not already in the
has_changed - True if any form has been changed False if any form has been changed
str_ Return a copy of the address with a valid checksum.
str_ Generate a checksum for the address.
Prompt the user for a seed and return it. If seed is a function it will be
Get the key at the given index for the given number of iterations.
Get the key associated with the given address.
Create an iterator that iterates over the keys in the seed. The seed is used as the
create a sponge from the seed and the index of the sponge
Absorb num_ trits from the given trits starting at offset and ending at offset
Squeeze the state into num_ trits starting at offset and ending at offset + length
truth_table is the truth table that is used to transform the state to the state
str_ add_trits adds two trits to the left and right trits.
str_ - > list of trits from an integer n - > list of trits
_add_trits adds two trits and returns a boolean indicating whether the result is
str_ full_add_trits returns the sum of the two trits and the
Output a seed to the user. The seed can be a binary string or a bytearray.
str findtransactions - Find all transactions for a given set of bundles addresses tags approvees
str PromotetransactionCommand - Promotetransaction command.
Resolve the adapter for the given URI.
Send a request to the API.
Log a message at the given level. If the logger is not set the message will be
Send an HTTP request to the given URL with the given method and payload.
Interprets the response and raises a BadAPIResponse exception if the response is not valid
Add a digest to the Sponge. The digest must be in the form of a
Returns the multisigaddress of the digests. If there are no digests an empty
Create an iterator of addresses from the seed. The iterator starts from start and stops from step
str_ - > Address. from_trits - > Address. from_trits
generate_address - Generate an address based on the digest of the given key_iterator.
find_transaction_objects - Find all transactions in a tryte database. Returns a list
Returns an iterator over the addresses that are used in the given address range starting at the given
Get a list of Bundles from a list of transaction hashes.
Check if the given encoding is a valid trytes codec. If so print a deprecation warning
Get the codec info.
str - > binary_type bytes - > bytes bytes - > bytes bytes - > bytes
str - > bytes - > bytes - > bytes - > bytes - > bytes - >
Return a list of addresses for the given seed index security_level and checksum. If count
str_ Add a command to the list of routes.
from_tryte_string - returns a signature message from a tryte_string.
Returns a JSON - compatible version of the signature message.
Get the signature validation trytes.
str_ Sets the is_confirmed attribute of all transactions in the list.
Returns a list of message fragments for all transactions in the transaction group. If errors is not
Returns a list of transactions grouped by the address of the last transaction in the list.
discovers all commands in a package and returns a dictionary of them. If recursively is
Execute the request and return the response as a dict.
Apply a filter to the given value and return the result. If the filter returns a valid
Get the URL of the job with the given job_id. The job_id is
str - List of errors that occurred during the validation of the field.
str_ is_valid returns True if the validator is valid. If the validator returns False
Create a validator for the bundle.
str Return a list of bundle signature errors for the given groups. If there are no errors
Returns the error message for a group signature validation error.
Traverses the bundle tree starting from the given transaction hash.
Start a repl in the context of the given API object.
Returns a random string of the given length.
str_ Returns the digest of the key and the hash of the key. The hash is
Signs the input transactions in the bundle starting at start_index starting at start_index
Pretty print the object in a format suitable for printing to the given printer. If cycle is
Absorb num_ trits from a list of trits. If length is none then
Returns a copy of the given exception with the given context. If the given exception is already
The security level of the address generator.
str This method increments the legacy tag by 1 and returns the new tag. This method is
Returns the tag of the last transaction in the list or None if there are no transactions.
add_transaction - add a transaction to the chain.
This method is called after all transactions have been added to the chain. It is called after
Signs all the inputs in the list. The key_generator is used to generate the
str _create_input_transactions - create transactions for adding a new input address to the
str_ to convert a value to a standard unit.
Decompress a G1 compressed value.
prime_field_inv returns the inverse of the prime field of an integer a.
Create an instance from a JSON file.
Split a description into a list of words based on the number of words in the description.
str_ Returns a list of all the categories in the model.
Returns a random colour for the given component.
Create a timescale object from a builtin timescale name.
Returns a list of Decorator objects from a given image file.
Convert the table to a CSV string.
Returns the maximum width of all rows in the table. If the table is empty returns the
Returns a Decoration object for the given component. If match_only is set to True
str_ Plot all the data in the list. If fmt is none plot all the data
Deprecated. Use the component function instead. Use the component function instead of the function itself.
Process a single row of text into a dictionary of columns.
Parse a Canstrat string into a dictionary. The keys are card names and the
str - > list of unique thickness values.
Returns a list of Interval objects from a list of tops and a list of values.
clean_longitudinal_data cleans the longitudinal data.
from_petrel - Read petrel file and return a list of intervals.
from_canstrat returns a list of intervals from a canstrat file
Returns a copy of the log.
converts the list to a CSV file. If filename is none returns the contents of the
str_ to_las3 - > las3 - > las3 - >
Returns a list of all the overlapped incongruities in the tree.
Returns a list of all gaps in the graph.
Returns a copy of the strip with all thickness less than or equal to the specified number of
Anneal the strip by annealing the base and top coordinates.
str_ Returns a copy of self with all gaps filled with the given component. If component
str_ union - returns the union of this set and the other set.
str_ - > list of intervals intersecting with other. str_ - > list of
str_ Merge overlapping segments into a single segment. If there are overlapping segments in the segment
invert the order of the elements in the list and return a new list. If copy
Crop the striplog to the given extent. If the extent is None the striplog will
Returns a dictionary of the quality of each test in tests. The keys are the name of
Get the field from the custom formatter. If the field does not exist it will be created
Get a list of all the jobs in the cluster. If no prefix is provided all jobs
Parse the given HCL into a Python object.
Update the token for the given id.
Get a list of all allocations that have been allocated. If prefix is not specified all allocations
Fail a deployment with the given id.
Pauses a deployment.
Drains a node from the cluster. If enable is set to True the node will
drain_node_with_spec Drains a node with a spec.
Returns a list of nodes that are eligible for the given node id.
list_files - List all files in a directory or a list of files in a directory
Get a stream of data from the server.
str_ stat_file - stat a file or directory. id - id of the file
Join a list of addresses to a single agent.
Update the list of servers.
Force leave a node.
Get a list of all nodes in the cluster. If no prefix is specified all nodes are
Get a list of all the evaluations in the database. If prefix is not specified all
Get a list of all namespaces with a given prefix. If no prefix is specified all namespaces
Register a job to be run on the server.
This method is used to create a plan job. The plan job can be either a diff
This method dispatches a job to the server and returns the result. If the job is
Revert a job to a new version.
Revert a stable job to a new version.
Deregister a job from Nomad. If purge is set to True the job will
Get the current configuration of the server. If stale is set to True the configuration will be
Delete a peer from the server. If stale is True the peer will be removed from the
Get a list of all deployments for a given prefix. If prefix is not specified all deployments
Get a random value of the given object type.
Returns a mutator for the given object. If the object is not a string it will be
Get a random polyglot attack string from the list of techniques.
Convert a buffer of bytes to a string that is safe to use in a string.
custom_html returns a static html file from a custom file path. This is useful for
A context manager to serve a testcase. This is a context manager that serves a test
Spawns a new process and waits for it to finish.
Get the output from the process.
finish_read is the function that will be called when the process is finished reading from the
Close the process and clean up any resources.
str_ Start the fuzzing process.
Execute the pjfbase command and return the output.
str_ Builds a random string from this string. If shortest is True returns the shortest
Build a string from the list of values. If shortest is True the shortest value is used
Build and return a string representation of the query. If shortest is True the result will be
str_ Builds a random value from the list of values. If shortest is set to
str_ Builds the optgram. If shortest is set to True the optgram will
str_ Builds the value of the reference. If shortest is True the value will be
str_ Builds the optgram. If shortest is set to True the optgram will
Shuts down the pjfbase process and waits for it to finish.
Spawn a new process and monitor the return code.
Start the monitor process and wait for it to finish. If standalone is True the monitor will
randfloat returns a random float between a and b. If b is none returns a random
Returns a fuzzed JSON string.
Returns a fuzzed version of the JSON object.
Signal handler for SIGTERM signal.
cli_command_quit - Quit the running process. msg - Message to quit.
Pause the running process if it is in the paused state. If it is in the paused
resume - Resumes the process if the current state is paused. If the current state is
Stop the running process if it is paused. If it is paused kill the running process.
Restarts the running process if the state is running and the process is running.
Get a list of skype events from a skype server.
Set the user s mood.
Set the avatar of the user. The image is a file - like object that can be
Get the meta data for a given URL.
Get a single contact by id.
Get a skypeuser object by id.
Get a list of bots for the current user.
Get a bot by its id.
Search for users that match the given query. Returns a list of skypeuser objects.
Returns a list of skyperequests for the user s contacts.
str_ constructor from raw data.
str_ Merge another object into this one.
str_ Merge an object into the cache. If the object already exists in the cache it
Read the token from the tokenfile and store it in self. tokens and self. token
Write the current token to the tokenfile.
Verify that the token is valid. If the token is invalid raise skypeauthexception.
Refresh the skypetoken from the skyperefreshauthprovider and store it in
Get the current user id from skypetoken api_user and store it in self
get reg token from skypetoken and store it in self. tokens and self.
Syncs the list of skype endpoints with the list of skype endpoints in the msgs
Check if a user is logged in.
Authenticates the user with the given token and returns the resulting token. If the user
Configure the message. This is the default configuration for the message. This is the default configuration
Ping the device to see if it is alive. If it is it will return True.
Returns a list of recent skype group chats.
Get a single chat by id.
Create a new chat with the given members. If the user is not a member of the
Returns the usertoid of the given url or None if the url does not contain a
Return the chattoid number from the given url.
Replace unicode characters in a string.
str_ Returns a handler for the given text. If no handler is found None is returned
str_ - Parse text into metadata and content. Returns a tuple of metadata and content.
Returns a dictionary with the metadata and content as the key and the value as the value.
Load a YAML file into a Python object.
Export the metadata as a YAML string.
Export the metadata as a JSON string.
Return True if the string matches the pattern. If the string matches cache the result and return
Return a list of all the items in the string.
Returns a list of all the sublists in this list. If i is None returns all
Convert the start of the matched string to the new start of the pattern.
Returns a list of arguments for the given string. If the string does not contain any arguments
Returns a list of wikilist objects that match the pattern. If no pattern is
_plant_trie takes a list of strings and returns a dictionary mapping each character to
Returns a pattern from a trie. If the trie is empty it will return an empty string
Check that the given index is valid.
Insert a string into the list at the given index.
Return a tuple of the partition of a character in the list. The first tuple is the
Returns a list of spans for the given type.
_shrink_update shrinks the update to the range rmstart - rmstart rm
Update the span of the given index with the given length. This is used to update the
Returns the nesting level of this node.
Return a shadow of the current span of the span list.
Return a byte array containing the extended link shadows of the current string. The shadows
Return a dictionary of type - > list of spans corresponding to the current span.
Returns a pretty - printed version of the object.
Returns a list of all the parameters in this span.
Returns a list of parser functions for each sub - span in the string.
Returns a list of template strings for each span in the span list.
Returns a list of Wikilink objects for each subspan in the string.
Returns a list of comment objects for each span in the string.
Returns a list of all external links in the string.
Returns a list of all tables in the table list.
Returns a generator of spans of the given type that are sub - spans of this span.
Returns a list of all ancestors of this span. If type_ is none returns all ancestors
Returns the parent of this node or none if this node is not an ancestor of the given
Return the mode of a list of strings.
Return the first argument with the given name in the given list of arguments or None if none
Remove the first of duplicate arguments from the list of arguments.
Get the first argument with the given name in the list of arguments.
Check if the command has an argument with the given name and optional value.
_ Delete the first argument with the given name.
Convert a CRS code to a string.
Find an object in the system by ellipsname and crstype. If strict is set to
Return a CRS object from a given URL.
Parse a GeoJSON file into a GeoJSON object. The file can be either a W
Convert an EPSG code to a CRS object.
Return a CRS object from an ESRI CRS code.
Convert a SR code to a CRS object.
from_unknown_text returns a CRS object from an unknown text. If strict is
str_ Write the header and record data to a file - like object.
str_ Read a VLR object from the given data stream.
parse_geo_tiff_keys_from_vlrs - returns a list of
parse a list of geotiffkeys from a geokeydirectory and a list of
Get the signedness for the extra dimension type_index.
str_ Returns the ID for an extra dimension type.
from_point_record - Create a new point record from another point record.
str _copy_fields_from _copy_fields_from _copy_fields_
_append_zeros_if_too_small - Append zeros to the array if the
A set of the names of all the dimensions of the array and all sub - fields.
_ zeros - Create a new Point object with the given point format and number of points.
Create a Point object from a file - like object stream and a point format.
_ From compressed buffer.
Returns the x - coordinate of the image. This is the x - coordinate of the image
str representing the y - coordinate of the data point.
str - Returns the z - component of the image.
Add an extra dimension to the point data.
Write the VLRs to a file - like object. If do_compress is True
Write the LazFile to a file.
str _build_point_formats_dtypes - Build a dictionary of point formats to
str_ Builds a dict of numpy. dtype for each point format.
Convert a NumPy data type to a point format.
str Returns the minimum file version for a point format.
Check if the given point format ID is compatible with the given file version.
Extract a list of VLRs of a given type from the list of VLRs
Read num_to_read VLRs from data_stream.
str Return True if all las files have the same point format id.
Return True if all las files have the same data type.
Raise an error if the file signature is not the same as the headers. las_file
Read the header from the file and return it as a str.
str_ Reads the VLRs from the file and returns them as a list.
_read_points reads the points from the VLRs and returns them as a packed
Read compressed points data.
Read the next internal waveform packet from the stream and return the header and the waveform record.
str_ Returns a list of all the evLRs in the file.
Log a warning if the current position is not at the expected position in the stream.
str_ Create a lasdata object from a lasfile header.
str_ Merge multiple las files into a single las file.
str_ - > bytes io. bytesio. bytesio. bytesio. bytesio
str - > datetime. date - > datetime. date - > datetime. date - >
str_ date - Date to create a new object. date - Date to create a new
Returns the minimum values of the data.
str Mins - Set x y and z - Set the minimum values.
x y z maxs
str Maxs - Set the x y and z limits.
str - > np. ndarray of x y and z scales
str - > np. ndarray of offset values for x y and z axis.
Peeks the file version from the given stream and returns it as a string.
Convert a header from old_header to new_header with new_version.
unpacks a mask into an array of uint8 values.
_ Returns a list of dimension names that are not present in the output.
str_ Returns a dictionary of sub - fields keyed by dimension name and sub - field.
Returns the number of bytes of the extra dimensions.
bool - True if the dataset has a waveform packet.
The main entry point for the demo command. This is the entry point for the demo command
Calculate the checksum of the given command.
Print a hex string of the given data to the logger. This is useful for debugging.
Verify the checksum of the response and strip the checksum from the response. Raises an exception if
list_set_bits - returns a list of set bits in a byte array.
generate_query generates a query string from the given command. The command must be a hex
The demo function is used to connect to the SATL server. It is used to
Connects to the server and opens a connection to it. Returns True on success False otherwise.
Start monitoring data from the server.
Disarm the given code and partition_list and send the result back to the server.
Clear an alarm.
This method is used to set the output of a command. It is used to set the
Keep the connection alive and send a query to the server. If the connection is closed the
Monitor the status of the device. This is a blocking call that will block until the device
Close the connection to the server. This will close the connection to the server if it is
Purges the database for the current user. The user will be deleted from the database.
Guess the type of a file or directory from the given path. If allow_directory is
Get the file id for a given file path.
str get_notebook - Get a notebook from the database.
Create a notebook model from a record in the database.
get_directory - get a directory from the database. If the directory doesn t exist it
Convert a list of file records into a list of FileModel objects.
Create a directory model from a database record.
_file_model_from_db - Creates a file model from a database record.
Save a Jupyter Notebook to the given path. Returns the saved notebook or None.
Save a single file from the database to the given path. If the file does not exist
rrename a file or directory
str Delete the file or directory at the given path. If the file or directory does not
str_ Ensure that a user exists in the database.
str Purge all files and directories for a given user_id from the database.
Create a new directory in the database.
str is_in_directory - Check if a user is in a directory.
str user_id - user id api_path - path to be deleted
str user_id - user id db_dirname - database directory name
str_ Returns a list of files in a user s directory.
str_ Returns a list of directories in a user s directory.
Return a where clause to filter files by user_id and api_path.
str_ Select all files for a given user and api_path. If limit is not
str_ Returns a list of the default fields for the files table.
_get_file gets a single file from the database. If the file doesn t exist
r Retrieve a single file from the database. If include_content is True the file will
Get the file id for a given user_id and api_path.
str - Check if a file exists in the database. Returns True if the file exists False
rrename_directory renames a directory in the database for a given user_id.
str - > None - > None - > None - > None - > None - >
Purge remote checkpoints for a given user.
Reencrypt the content of a row with the given decrypt_func and encrypt_func.
Re - encrypts the content of a user s files and remote checkpoints.
str_ password str_ user_id str_
str_ Returns the name of a column_like object.
Convert a row of data to a dict without the content.
Convert a row of data to a dict with the decrypted content.
str_ base64 - encodes the notebook and saves it to the given path.
str_ Create a checkpoint for the given content.
Delete a checkpoint for a given checkpoint_id from a given checkpoint_path.
Get the content of a checkpoint.
list all remote checkpoints for a given path in the user s account.
Move all remote checkpoints from old_path to new_path.
Delete all remote checkpoints for a given path.
Purges remote checkpoints from the database.
Resolve a path and return the manager and the path. If the path contains a manager that
Apply a prefix to a model. If the prefix is not present in the model it will
Called when the managers attribute has been changed.
Get a root directory from the API.
Normalizes the given API path. If the path is already normalized it will be returned unchanged.
Split api file path into dirname and name.
Writes nb to base64 and returns it as a string.
Reads a base64 - encoded nbfile and returns a list of reads.
Decode an unknown content from base64 and return the decoded content and the original content.
Decode a file from base64 and return the content and mimetype.
Returns a list of all directories starting from the given path.
Create a new user in the database with the given user_id in the given db_
Separate directories and files from models.
walk_dirs walks the given directory tree and returns a list of directories and files.
str Walks the files in the given directory and returns a generator for each file in the
str_ Walks the files in a directory and returns a generator that yields the content of
str_ reencrypt_single_user re - encrypts a single user.
Unencrypt all the users in the given engine using the given old_crypto_factory.
Re - encrypts a single user using the given old_crypto object. The old_
Create a temporary alembic. ini file in a temporary directory.
Upgrade the database to a new revision.
Sanitize a block by converting it to the appropriate internal value based on the embed type.
str - > None - > None - > None - > None - > None - >
str_ Loads the instances of embed_type from ids. If the embed_type
Insert an instance into the block. If the instance already exists in the block it will be
str_ Loads the data for each embed type.
Validate the given data. If the data contains a widget it will be validated. If the
The administration page. This page shows the current API URL and version of the dispatch.
str_ Returns a JSON representation of the object.
Hides all fields that are not authenticated.
Removes fields from the fields list based on the request query parameter.
If the request contains a version and preview_id get the version and preview_id from
Get a queryset of the publishable objects based on the request query parameters.
Returns a queryset based on the publishable_queryset and the request query parameters.
Return the value of the field as a string. If the field is null return False.
Check if a widget is valid. Raises an exception if it is invalid.
Validate that a zone is a valid zone id or name.
is_valid_uuid - Check if a string is a valid uuid.
Get the permissions of the user.
Add or remove a group from the list of permissions. If permissions is the same as the
Validates the author data.
Save the zone to the database. The validated_data argument should be a dict with the
str_ Returns a dictionary with the values of all the fields in the data dict.
prepare_data - prepare data to be sent to the API.
Render the template with the given data. If no data is provided the template will be used
Get the settings for this integration. If the show_hidden argument is set to False the
This is the callback function that is called when the user is logged in. This is the
get_settings - Get settings for an integration.
Update the settings of an integration.
Signup a new user with a given email. If the request method is POST the user
maptag returns a string with the tag name and the contents of a list of strings
Returns a string representation of the zone with the given id. If the zone does not exist
Save the featured image to the database.
Save the subsection of this article to the database. The subsection_id must be
Get the extension of the image.
Returns the medium url for this media item. If the media item is a gif it will
str_ Save the image and its thumbnails to the database.
Save a thumbnail of an image to disk. If the size is greater than the image s
Return the current database connection.
get_bandwith_limited_stream - Get a stream that can be used for bandwidth
bytes_read - Read amount of bytes from the underlying file - like object. If the
str_ This function is called when a request is received. It is called by the consumer
Process a scheduled consumer.
Returns the proposed rate for the given amount of time at the given time_at_consum
str time_at_consumption str time_at_consumption str current_rate
poll_for_result - Poll for the result of a transfer and raise an exception if
Get a list of callbacks for a given transfer_future and callback_type.
get_filtered_dict - returns a copy of original_dict with keys in whitelisted_
Decrement the counter by num_. If the counter is finalized the callback is called
This method is called when the object has been finalized. It is called when the object
str is_special_file - Check if a file is a special file or not.
Acquires a lock on the semaphore. If the semaphore is not available a NoResourcesAvailable
Release the semaphore for the given tag and acquire_token.
str_ Returns the current_chunksize in bytes. If file_size is not None
str - Queue a file - like object for writing to the file - like object.
Returns the download manager class for the given transfer_future.
Write data to a file object at a specific offset in the file object.
Request data to be written to the given offset. Returns a list of dicts with the data
Returns True if the given file - like object is seekable or False if it is not
str cancel_msg = str_ cancel_msg = str_ cancel_msg = str
str_ str_ type of exception raised by all tracked transfer coordinators.
Wait for all tracked transfer coordinators to complete.
str - > open_file_chunk_reader - > open_file_chunk_
Returns the upload manager class for the given transfer_future.
Set the exception for this transfer. If the transfer is not done raises TransferNotDoneError
Set the result of the job.
set_exception - Set the exception for the future. If override is set to True the
Return the result of the future.
str_ str_ str_ str_ str_ str_ str_ exc_type str
str_ Submits a task to the given executor and returns a future that can be used
str Add a callback that will be called when the task is done.
str_ Add a failure cleanup function to the list of cleanup functions to be called when a
announce that the job is done. This is called when the job is done.
Upload a file to S3. If the size of the file exceeds the configured upload_
Download a file from S3 to a local file system.
Step the decorator arguments. If the step is a string return it. Otherwise return none.
Refactor a step by rewriting the old_text to the new_text and moving
Return the value of the step argument. If the value is not a string or a list
str Diff between old_text and new_text. move_param_from_idx
Update an existing membership.
Delete a membership by its ID.
Get a list of all the catfacts for the current user. This is a list of
Create a new message in a room. If the message is already in the room it will
Delete a membership by its ID.
Validate a base URL.
Returns True if string is a valid web URL False otherwise.
str_ open a local file and return an encodablefile object.
Checks that the given object is one of the given types.
str_ dict_from_items_with_values This function takes a list of dictionaries
str Check if the response code matches expected_response_code. If not raise an exception
Convert a JSON string to a dictionary.
strptime - returns a webex_teams_datetime object for the given date_string
Create a new team with the given title and teamid. Returns a new team object.
Update a room. You can change the title of the room. You can change the title
Delete a room.
List all items in an organization.
Returns the created time of the game. If the game was created before the game was created
Get the access token from the environment variables.
Update a webhook.
Delete the webhook with the given id.
Set the wait_on_rate_limit value.
Update the headers of the current request.
str_ Returns the absolute url of the given url.
Sends a GET request to the given URL and returns the response as a Python object.
Get a list of pages from a given URL.
Sends a PUT request to the given URL and returns the response as a dict.
Sends a DELETE request to the given URL.
Creates a new token for the given subject displayname issuertoken expiration and secret.
Delete a message from the chatroom.
Get a person by its ID.
Delete the person with the given id.
Get the current user s information.
str - List all objects in the API. request_parameters is a list of request parameters
Create a new object with the given name and request parameters. The object will be returned.
Update a team.
Delete a team.
serialize data to a tuple or list of tuples sorted by key and value in alphabetical order
Returns the last activity of the game. If there is no last activity None is returned.
This function handles the post_events_service webhook. It is called when the webhook is
Get the Ngrok public URL.
Delete all webhooks with the given name.
Create a Ngrok webhook.
str_ Delete all webhooks with the given name and create a new webhook with the given public
Read telegram data from the serial port and return a generator of parsed telegram data.
Read data from the serial port and add it to the given queue.
Creates a DSMR protocol with the given version.
Create a connection to a DSMR device.
Create a TCP connection to a DSMR server.
Called when data is received from the client. This is called when data is received from the
Called when the connection to the server has been closed.
handle_telegram - Handle a single telegram received from the server and call the callback
Parse the telegram_data and return a dictionary with the parsed telegram data.
Get the version from a file.
Ensure that a Python object is available in the current Python interpreter.
Find all packages in a directory and return a list of their relative paths.
Run a command and return its exit code. If the command is not a list or tuple
Returns a list of tuples of file paths and list of files that match the data specs.
Returns a list of package data from the given root directory. If no file_patterns is
Compile a glob pattern into a re. match object.
Split a path into a list of paths. If the path is a directory it will be
Translate a glob pattern into a string that can be used as a relative path to a file
Join the translated parts with os_sep_class or os_sep_class.
translate a glob pattern to a glob pattern in the form of str_ % separators.
Truncate a table in the database. The table must be in the form of a table name
str - > None - > None - > None - > None - > None - >
str - > None - > None - > None - > None - > None - >
str - > None - > None - > None - > None - > None - >
str_ - > None - > None - > None - > None - > None -
Writes the contents of a table to a file.
Write the indexes for the given table to the file - like object.
Write the constraints for the given table to the file - like object self. f.
Write triggers to a file in postgres format.
Returns the number of items in the queue that match the given predicate.
Enqueue the given data to the database.
str_ Returns a callable that can be used to wait for a task to be executed.
Build the extra_predicate string to be used in the query.
Simple JSON serializer for datetime objects.
Connect to the database and close the connection if it is still open.
Execute a query and return the first row of the result as a single object or None if
get a connection to the database
Run a benchmark for a given number of workers.
Connect to the pool and return a connection to the aggregator. If no aggregator is currently connected
str_ Looks up a function by its errno number.
str_ Returns the total number of connections and fairies in the pool.
If there is a connection failure try to connect to the database. If there is a connection
Returns a simple SQL expression with the given fields sorted by the number of fields in ascending order
Generate an UPDATE statement from a table name and a set of fields.
Connect to a database and execute a query on it.
Destroys all tables in the database.
Start a new step with the given name. If a step with the given name already exists
Stop the step with the given name. If the step is already finished raise an exception.
Load the steps from the raw_steps dictionary and return it as a list of dictionaries.
Disconnect from the server and wait for the connection to be closed.
Disconnect from the server and close the connection to the server. This should be called when the
Connect to the server and start accepting new messages. This is a blocking call that will block
Called when a message is received from the websocket. This function is called when the websocket is
Stop all timers that have been set up. This is done by calling cancel on all timers
Send a PING message to the server and check for a PING response.
Check if we have received a PING message. If so we re reconnect to the server
Send a message to the server.
_unpause - Unpauses the connection and resubscribes to it.
This is the main handler for the system. It is called when a system event is received
Handler for error messages. This function is called when an error occurs in the data dictionary.
Called when data is received from the client.
Resubscribes to all channels in the channel_configs dict. If soft is True
Handle a channel authentication request.
Handle a configuration change. This function is called when a configuration change is received from the server
Update the last update timestamp for the channel with chan_id. If there is an error
Reset the connection to the server and send all the channel configurations to the server. This is
Return a list of candles for a given pair.
Set the bitfinex configuration for the bitfinex server.
Subscribes to the given ticker pair.
Unsubscribes from the ticker for the given pair.
Subscribes to a pair of order books. The pair can be a symbol or
Unsubscribe from order book.
Subscribe a pair to the raw order book. If prec is not specified it will be used
Unsubscribes from the raw order book for the given pair.
Subscribe to trades.
Unsubscribe from trades.
Subscribe to a pair of candles. If timeframe is not specified the pair will
Unsubscribe from a pair of candles. If timeframe is not specified the pair will
Authenticates the client with the API key and secret. If the client is not authenticated
Cancels an order. If multi is set to True the order will be canceled in multiple
Called when a client receives a command from the server.
Called when a device command is received from the pika.
Called when the client receives a messagenotification message.
Create a new device type.
Update a device.
Returns a list of client status objects that match the given criteria.
Get a list of all of the users in the system.
Create a new entry in the database.
Update an existing schema definition.
Disconnect from the server and stop the event loop.
Called when a client connects to the MQTT server.
Called when an unsupported message is received from the broker.
Called when a device event is received.
Called when the client receives a devicestatus message.
Called when an application status message is received from the pika.
Get the last event for the given deviceuid and eventid.
Get all the events for a given device.
Make a request to the API and return the response as a dict.
initiate a request to the MusicBrainz API.
str_ Returns the status of the specified request. If typeid or deviceid is none
Close the file handle and release any resources associated with it. If the file does not exist
str_ Returns the bounds of the index. If coordinate_interleaved is set to True
Load an array of bytes from a page.
check_return checks the return value of a function. If the return value is not num
Load the application if it is a string. If it is an instance of str import it
This is the main entry point for the gunicorn server. It runs the application in
Return a URL that can be used as a URL to the image field in the browser.
process_image - Crops an image on the center of the image and saves it to
process_image - Process an image and return a bytesio object with the image data.
strio - > bytesio - > bytesio - > bytesio - > bytesio
If data is a string open it and return it as a string. Otherwise return None.
str_ PlaceholderImage is a placeholder image that will be stored in the versatile image
Update the versatile image field and update the ppoi field on the model instance.
update_ppoi_field update the ppoi_field of the given instance
Overrides the default formfield to add a ppoi_field to the formfield.
Convert an object to a string.
Autodiscovers the versatileimagefield_registry. py module for each app
unregister a sizer. attr_name is the name of the sizer to unregister
Remove a filter from the filter registry.
str url for versatile_imagemixin
Build filters and sizers for this image field.
Get the path to the root folder of the filtered imagefield.
Returns the path to the root folder of the resized image field.
str_ sized_root_folder returns the full path to the root folder of the
str_ Delete matching files from storage.
Preprocess the Giphy Giphy Giphy image to save it as a
Preprocess the image for a progressive JPEG image.
Retrieve an image from the storage and return a tuple of the image file extension image format and
Save an image file to a file on disk. The file will be in - memory and
Returns the PPOI as a string.
Creates a resized image from the given path_to_image and saves it to the given
str_ Render a ClearableFileInputWithImagePreview widget.
Returns the context dictionary for the ClearableFileInputWithImagePreview widget.
Build attributes from base_attrs and extra_attrs. If extra_attrs is not None
Returns the path to the resized file in the given storage with the given width height and filename
Given a path_to_image and filename_key return the path_to_image
Validate versatileimagefield_sizekey_list.
get_url_from_image_key - Get image url from image instance and image
Returns the rendition key set for the given key or raises an error if the key is
Returns a string representation of an instruction.
Format a function body as a string.
str - > list of instructions from a byte - > list of instructions. str - >
str - > Generator for decoding a module into a sequence of ModuleFragment objects.
Connects to the server and returns a task that will be called when the connection is made.
Read the next agi result from the stream.
parse an agi result line and return a dictionary of agi_code and agi
agi_code_check returns a dictionary of agi_code and agi_
str_ Reset all instances to the given uid. If uid is not specified all instances will
Returns a list of all the instances of this instance.
Get the metadata from a Fakecontext file and return it as a dictionary.
str_ Returns a list of the primary keys of a model as a list of strings.
Deserialize a value to a related object.
str_ Gets an existing instance of the related model from the database.
str_ to get all the fields declared by the schema.
Load data into a model instance. If instance is not specified it will be set to None
Split the model kwargs from the association data into the kwargs and the attributes of the association.
List all snapshots.
Restore a snapshot to a new state. If no snapshot is given the latest snapshot will be
str This method is called at the end of the epoch.
Clean text according to textacy rules.
Apply a function to a list of data in parallel.
Process the given text and return a list of processed text.
parallel_process_text takes a list of strings and returns a list of lists of strings
Generate statistics about the number of documents in the document length histogram and calculate the huerest
Returns a pandas dataframe with the word counts for each word in the index sorted by frequency.
Map a param type to a list of string types.
parse_interfaces parses a list of interfaces and returns a dict of the parsed interfaces.
str_ Returns the inverse of the symbol.
Helper function for _update_item and _undo_write. This is the same as
Returns a copy of the current state.
str_ Create a copy of the current state.
str_ Tests if two mappings are equal in ascending order. If they are not they
Returns a list of tuples where each tuple is the value and the key of the tuple is
str_ Clears the state of the Firmata and Invm objects and clears the
str_ Move a key to the end of the list. If last is True move the
Write text to a temporary file and return the name of the temporary file.
Merge the command line arguments into a config object.
Load address books from a list of names. If no names are provided all address book
Create a new contact in the selected address book. If open_editor is set to True
Returns a subcommand to display the birthday of a list of VCard objects.
Returns a list of phone numbers that match the given search_terms.
list_subcommand - list of vcards or a list of vcards depending on the
Modify a sub - command for editing a contact or editing a contact from a user input.
Remove a sub - command from the selected vCard.
str - > str - > str - > str - > str - > str - >
merge a list of vcards into a list of vcards that match a given search term
str_ Returns the action for the given alias. If no action is found None is returned
Create a new contact.
str_ Create a new instance from a file in a given address book and a list of
from_user_input - Create a new contact object from a user input.
from_existing_contact_with_new_user_input - Create a new contact
Get a list of names for a given part of a vcard.
Add a category to the list of categories to be added to the vcard.
Parse the type value and return the standard types custom types and the preferred value.
str_ Converts a list of strings to a string.
Convert a string to a datetime object.
Compare two UID strings and return the sum of the number of times the two strings are equal
Search for all contacts that match the given query.
Search for contacts whose full name matches the given query.
str_ search for a uid in the contacts dict. If the uid does not exist it
str search - Searches the database for the given query. If no method is specified the
str_ Returns a dictionary of short UIDs sorted by the number of characters in the first
Returns the short version of the given UID. If the given UID is not a short version
Returns a generator of all vcards found in the directory. If search is set to True
Load all the vCard objects from the source files and store them in self. contacts.
str_ Returns the Abook object with the given name.
str_ Return a list of available architectures.
Return a list of available architectures.
Try to guess the type of the argument based on the type of the value of the argument
Replace the current query with a new query.
Return the first entity in the collection or None if there are no entities in the collection.
Delete all rows in the result set. If there are no rows in the result set raise
redis_prefix_lua is a wrapper for _redis_prefix_lua.
estimate the number of work for a given index. prefix can be a string or a list
Count the number of items that match the given criteria.
Return a connection object for the given object. If the object is an instance of a model
Return a list of the full text of the given value. If the value is a string
Add an object to the session. If the object already exists it will be added to the
str_ Return the value of pk in the known set or wknown set if pk is
Write an entity to the Redis database using the lua command.
Saves the model to the database. If full is set to True the model will be saved
Delete this object from the database.
Get a set of objects from the database.
Open a semaphore with the given name. If the name does not exist an error is raised
str_ Sends the result back to the result_queue.
str _add_call_item_to_queue - Add a work item to the
_ensure_executor_running - ensure that the executor thread is running if the number of
Start the server.
Duplicate a file descriptor and return a copy of the file descriptor. If the file descriptor is
wait for num_ pending work items to complete
This function is called when the user wants to set some properties on the current process. This
Close all open file descriptors that are not in the keep_fds list.
_recursive_terminate_without_psutil is a wrapper around _recursive_terminate that
Recursively kills a process and all its children.
Returns a string of the exitcodes of the processes that are terminated by a worker.
Format the given list of exit codes as a string.
Spawns a new process and ensures that it is running. If the process is already
This function is called by the debugger when an event is received. It is called by the
Takes a string and splits it into a list of arguments. If posix is set to True
Returns a list of tuples where the first tuple is the frame and the second is the line
str_ Runs a list of hooks on an object. Returns True if the hooks succeed
str_ Forget the current state of the stack and reset the current index to none.
str_ get_int_noerr get_int_noerr get_int_
process_commands - process all the commands in the debugger and return True if the command was
Queue the start of a command file to be run. If the command file is not readable
Returns the next token from start_pos to start_pos + num_. If there
Print an error message to the console. If verbose is set to False the message will be
str_ Read a command from the input stream and return it. If verbose is True print
Close the input and output files and reset the state to str_. This method is called
Disassemble bytes from a code object and a section and a code object.
count_frames returns the number of frames in the given frame.
Get the name of the function at the given frame. Returns none if the frame is not
str_ Print the stack trace of the given proc_obj.
str_ Looks up a sub - command by its prefix. Returns None if not found
shows the short help for a sub - command
Add a sub - command to the list of sub - commands.
Run a sub - command with the given name and argument. If the sub - command is
shows a specific category of the commands in the current process.
str_ The name of the file and line number of the current frame. Returns True if
Find the frame that is currently in debug mode. If the frame is not in debug mode
get_int - get an integer from a string or a default value. errmsg is a
str_ = True or False to set the value of the property on the debugger object.
Get an integer from a string or raise an error if the string is not an integer.
Show the current value of the variable as a boolean. If the variable is not set the
Show the current value of the variable in the debugger s settings. If the variable is not
Show the current value of the variable.
Return True if the line is a definition statement.
Returns True if the line is a class definition.
threaded_quit - Quit the current thread in a threaded way.
Set the default background color based on the environment variables.
Return True if r g b are darker than the midpoint of the terminal.
str_ Returns a tuple with the name filename and first line number of the given frame.
Returns a list of all the display strings in the display list.
str_ Returns a list of display names for the given frame. If the frame is not
Read a message from the socket and return it. If the socket is closed raise EOFError
str_ Display a debug message to the user. If no frame is given show the current
This is the main entry point for the debugger. It takes a name or id and runs
Pretty - print a simple list of values.
Look up a signal name by its number. Returns none if no such signal is found.
Look up a signal by its name. If the signal is not found return none.
Return a canonic signature name for a given number. If the number is not a valid
Set a signal handler to be called when a signal is received. Returns True if the signal
check_and_adjust_sighandlers - checks and adjusts all sigh
info_signal prints the information about a signal. If the signal is a name or number
This is the main entry point for the command line interface. It is called by the user
if set_print is True set the print method of the signal otherwise set it to None
Called when a signal is received. Prints the name of the method and the stack trace
Return the module name of the given file or None if the file is not a module.
Search for a file in a list of directories. If the file is found it will return
why_file returns the path to the given Python script. If dirnames is not
Returns a list of the names of the python files in the callername. If level is
Write a message to the output stream. If the output object is a string it will be
The main entry point for the script.
Returns a list of commands sorted by command name and then display them in a columnized format
Close the connection to the server and reset the state to str_. The connection will be
Write a message to the socket. If the socket is not connected wait for the connection to
complete_identifier returns a list of strings that match the given prefix. If the prefix is
This function is called when a command is added to the command queue. It is called by
str Add a frame or a function to the ignore filter. Returns the ignore filter object.
Returns the absolute path of the given filename. If the filename is already absolute it will be
Returns the filename of the current debugger. If filename is none returns the filename of the main
str_ True if tracer is started and trace_dispatch is not suspendable and trace_
Check if the given event is a stop. If it is set the stop reason and the
str_ Set the next frame in the stack.
Print the stack trace of a function f. f_back is the function f. f
delete_breakpoint removes a breakpoint from the list of breakpoints. Returns True if the breakpoint
Delete a breakpoint by its number. Returns True if the breakpoint was successfully deleted False otherwise.
en_disable_all_breakpoints enables all breakpoints in the list of breakpoints in the
Enable or disable a breakpoint by its number. If do_enable is False the breakpoint will
str - Delete all breakpoints for a given file and line number. Returns a list of the
Open an input file or file - like object. If the input is a file - like
Read a line from the input stream. If no line is available raise EOFError.
Ask the user for confirmation and return a boolean value. If the user presses enter the
str_ Returns a future that will be completed when the query completes.
Restores the original login from the session and logs the user in as the original user.
str_ str_ str_ str_ str_ str_ str_ str_ str_
Iterate over all the documents in the given client.
Transcode a JSON file to a stream.
Helper function to normalize the data in a list of dicts. If date_format is not
converts a date string to a timestamp if the date_format is different from the string
Detect the encoding of a file.
Stream lines of a JSON file as JSON objects.
Transcode a file to UTF - 8 and return a temporary file.
Open a CSV file in Python 2 and return a dictionary with the data in the first row
Read a CSV file and return a generator of row_dict objects.
This is the main entry point for the transcode script. It parses the command line arguments
str_ save a token to a json file. If token_file is not specified the
str_ Method to perform the actual request to the server.
Make a DELETE request to the API with the given path and parameters. Returns a dict with
Get the root URL from a URL string.
saves a token to the token_file if it doesn t exist it will create it
Wrapper for _request that returns a JSON response. Raises luminosoapierror if
Make a POST request to the API with the given data and content - type.
Get the documentation from the API.
Make a GET request to the API and return the raw response as a unicode string.
prints a list of dictionaries as a CSV file in the same order as the first line
_read_params reads params from input_file json_body and p_params.
Simplify a doc into a tuple of lists.
Create a project with the given docs.
upload_docs - Uploads documents from a JSON file to a GnuPG project.
Upload a stream of documents to a luminosoclient project.
Upload a file from a file - like object to a Google Cloud Storage account.
This is the entry point for the command line interface. It parses the command line arguments and
This method is used to get a token from a user s credentials. It will return a
Login to the server with a random user agent and return the URL to the login page.
Post a login page to the linky server.
str_ Fetches the data for each time period and stores it in self. _data
Prepare the view to be used in the template. This method is called before the view is
str_ Initialize the handler.
A GET method that renders the demo view and writes it to the client. If the request
This function is called when a message is received from the client. It is called by the
Update the menus of the current page based on the given change. This method is called when
Returns a list of default static file handlers for this site.
This function is called when a message is received from the viewer. If the message is a
on_dom_modified is called when the DOM is modified.
str_ Create the widget for this widget.
Initialize the widget with the data from the declaration. This method is called when the widget is
Destroy the webcomponent and remove it from its parent.
str_ child_added - add a child to this webcomponent s widget list.
Remove a child from this webcomponent. This is called when a child is removed from the
str_ Returns a generator of all the child widgets of this node.
str - > str - > str - > bool - > str - > bool - >
_update_proxy updates the proxy with the given change. If the proxy is active it
Notify the root object that a change has been made to this object.
str_ Find all nodes that match the given XPath query and return them as a list of
init_widget - Initializes the raw component and sets the source of the component.
str - > None - > None - > None - > None - > None - >
This method is called when the user changes the mode of the widget. This method is called
observe a block in the tree and refresh the list of items if the block has changed
observes the children of the current node.
str_ Returns the contents of the file at the given pathcomponents.
Print an error message to stderr and exit with the given exit code.
Print error message to stderr and exit with error code einval.
Returns the product with the given name or None if there is no product with the given name
Creates a new session and sets it to the current session. Returns the new session object.
Resets the session cookie store to a new one and returns the response.
Returns a list of stores that match the given search term.
Set the delivery system for the given store and postcode.
Get the current menu for a given store.
Adds an item to the basket. If the item is a Pizza it will be
Adds a Pizza to the basket.
Adds a side to the basket.
Removes an item from the basket.
Set the payment method to cash on delivery. The method can be cash_on
Process a payment by sending a POST request to the Paylands API to process it.
Method to make a GET request to the API.
Make a POST request to the API.
Call the API with the given verb and path and return the response as a Python object.
append_item - Append an item to the menu. The item will be added to the
add_exit adds the exit item to the end of the list if it is not already
str_ Draw the menu to the screen.
Process the user input and move the cursor to the correct position based on the user input.
str Select the currently selected item.
parse_old_menu - Parse the old menu data and return a curses menu object.
str_ to datetime
Convert a datetime column to a string in the given format.
Helper function to perform a basic math operation on two columns in a DataFrame.
Cumulative sum of the values of a column in a DataFrame.
clean up up to limit entries from the given cachedir. Returns the number of entries removed
Add an offset to a date object.
str_ Returns the learning updates for the model.
Returns a list of all the training parameters in the network.
Performs optimization updates on the given parameters and gradients. Returns the number of updates applied to the
_first_glimpse_sensor returns the first glimpse sensor and the gradient
Prepare the encoder decoder and target_input objects for the model. This method should be called
Computes the final cost for the given input tensor.
str_ Map a function over all the data in the dataset.
str _vectorize_target - Vectorizes the target of the model.
str Report the number of training valid and test sets.
Train the model with the given train_set validation_set and test_set.
Randomly sample from a set of input samples. The input should be a list of input
Compute the alignment scores for the given prev_state and precomputed_values.
Compute the context vector for the given inputs. The context vector is the sum of the weights
str_ Concatenate a list of tensors or neural variables along a given axis.
str _pad - Pads the dataset to the specified side with the specified length.
The RMS Proportional Regression Core.
prints the time elapsed since the start of the timer and the number of seconds per second
Run the computation and return the cost for each variable in the data_x.
This method is called every time a sample of the data has been received. It runs the
str _build_loop_vars Build loop variables.
_scan_step performs a single step of the loop.
The momentum core for the given parameters and gradients. The momentum is the number of
If the training flag is True then the branch else the branch else the branch then_branch
Set the number of batches to skip and set the number of epochs to skip.
str Loads parameters from a file and updates best_params and best_params attribute.
Train the model. This is a generator that yields the costs of the training set. The
Run a single training step and report the result.
_run_valid runs the valid_step function for the given epoch and valid_set
Report a score map to the network. The score_map is a dictionary with the keys
get_data - Get the data for the current dataset. data_split can be either
str_ Apply a function to the neural variable and return a new neuralvariable.
Report the current parameters to the logger.
Returns a variable of the given tensor_type with the given last_dim and test_
Create a set of neural variables from the data in the dataset.
Returns a shared variable for the given value. If the value is an integer it will be
str stack encoders in the encoding layes and add them to the encoding l
str stack decoders
str_ Encodes the input tensor using the neural network. If the network is not
str - > numpy. ndarray - > numpy. ndarray - > numpy. ndarray - >
create a 2D Gaussian kernel. dim is the number of dimensions dim is the number of
str Register a new layer in the model.
Monitor the output of each layer in the training set. This is used to keep track of
This method returns a list of all the parameters in the model.
Set up the input variables and output variables for the model.
str_ compile and call the _compute method and return the output as a dict.
str save_network_params - save network parameters to a file.
Load parameters from a file. If the file ends in pickle format load it as a pickle
Prints out a report of the current state of the model.
str_ Register a list of updates to be applied to a node.
str_ Register a list of updates to be applied to the training data.
str_ Register training and testing monitors.
Multiple L2 norm of a list of tensors.
Dumps one element to a pickle file object.
Load an element from a file - like object. The file - like object is expected to
Load the parameters of the model from a file.
str_ - > str_ - > str_ - > str_ - > str_
_x_credentials_parser - Parse X. 509 credentials.
Remove access_token_request_type and access_token_request_type from the
Authenticates the user with the given provider_name and returns a response with the user
Returns a copy of the given dict with all values converted to str. If the value is
str_ Converts a list of items to a dictionary.
json_qs_parser - JSON parser.
str_ is the path to the class and tries to import it. If the class is
Create a cookie based on the cookie s name value domain path secure and expiration date.
Saves the session data to the adapter.
_get_data gets the data from the cookie if it exists otherwise returns an empty dict
str_ Returns the data of the response. If the response has no data it will return
Returns the signature of the given parts.
Serialize the given value into a string with a timestamp and a signature. The serialized string is
str - True if the token is valid. False otherwise.
str True if the token is expired within the specified number of seconds.
Serialize this provider instance into a string that can be used as a URL for a URL.
is_binary_string - Check if content is a binary string.
Return the content of the response. If the response is a binary string it will be decoded
Returns a dictionary with the user information. If the user has an email address it will be
Login the user to the federated server.
Returns the session key for the given key.
str - > str - > str - > str - > str - > str - >
Generate a random string that can be used as a CSRF token for a given secret.
Helper method to log a message to the appropriate logger. If no logger is defined the default
_http_status_in_category returns True if the status is in the given category
str_ Splits a URL into a base url and a list of query parameters.
str_ Set CORS headers on the response object based on the request headers and CORS options.
get_app_kwarg_dict - Get a dictionary of the app s configuration options.
Returns a string representation of an object.
str_ if inst is not an iterable return it as is otherwise return it as is.
Returns True if a is close to b with relative tolerance rel_tol and absolute tolerance abs
Deserialize a pickle string into an audiosegment object.
pydub. audiosegment. from_file - Create a audiosegment from a file
Create an audiosegment from a numpy array.
Return a new audiosegment with the same name and data as this one and all others.
Serialize the state of the object into a pickle string.
_choose_front_id_from_candidates returns the first offset_front_id
str_ Returns the offset_front_id after the onset_sample_idx.
str_ Returns the offset_front_id after the onset_front_id.
_match_offset_front_id_to_onset_front_id -
str _get_consecutive_and_overlapping_fronts - Get consecutive portion
str_ int int int int int int int int int int int int int int int int
Generator that yields all the front ids in the onset_fronts at a time.
_get_corresponding_offsets - Get the offsets corresponding to the given onset
removes overlapping segments from fronts and segmentation_mask.
_remove_fronts_that_are_too_small removes fronts that are
str_ Merge adjacent segments in a mask into a single segment if they are adjacent.
str_ Separates a list of masks into a single list of masks based on a
Downsample one or the other mask and stft.
Asa task for plotting the Fourier transform of a set of signal masks and stft
Butterworth bandpass filter using Butter - Penstein butter filter
Lowpass filter using a butter and lfilter.
convert a list of rows to a TensorFlow input matrix and a list of one hot outcomes
Expands the dataset and standardizes the columns according to the standardizers.
Returns True if a and b are equal ignoring the order of the elements in a.
Load the audit confusion matrices from a JSON file.
converts a list of rows to a tf. input matrix and a list of outcomes
Update self. pypi_api_url and self. pip_config_locations based
Autodetects all files in a directory and its sub - directories.
Handle an error by raising appropriate exception based on the error code. If errcode is an
Returns information about the LSL object.
Open a stream for reading and writing. The stream will be closed when the timeout is reached
Returns the child element with the given name.
Returns the next sibling of the current element. If no name is given returns the next sibling
Returns the previous sibling of the current node. If no name is given returns the previous sibling
Sets the name of the LSL object. Returns true if the name was successfully set.
Sets the current value of the LSL object. Returns true if the value was set.
Append a child element to the end of the list. Returns the new child element.
Prepends a child element to the end of the current element. Returns the new element.
Append a copy of an element to the end of the list. Returns the new element.
Prepends a copy of an element to the end of the list. Returns the new element
lsl_remove_child removes a child from the current node. If rhs is an
Returns a list of streaminfo objects representing the results of the resolver.
Pair a word in the database.
Autocomplete the edge n - grams for a given query.
str_ Computes the edge n - grams of a token.
iter_pipe yields a list of processors from the given pipe. If pipe is a string
str_ imap_unordered. imap_unordered is the same as imap except it
Make a fuzzy search of a word.
Fuzzy search for a word in a string.
fuzzyindex - Prints the index of the word in the fuzzy form of the word
extend_results_extrapoling_relations - extend results_extrapoling
prints the help for the given command or all commands if no command is given.
\ x1b [ 1mNAME \ x1b [ 0m dbinfo -
\ x1b [ 1mNAME \ x1b [ 0m dbkey -
\ x1b [ 1mNAME \ x1b [ 0m geohash -
\ x1b [ 1mNAME \ x1b [ 0m index - Index
\ x1b [ 1mNAME \ x1b [ 0m bestscore -
Send a request to the server and return the response. If stream is True the response will
Map a list of requests to a list of responses. If stream is set to True the
getbitsFromArray - Get a range of bits from an array of bits.
reinterptet_harray_to_bits - convert a reinterptet
str_ to_slice str_ to_slice str_ to_slice str_ to
str_ Find all files in a directory that match a given pattern. If recursive is True
Returns True if all items in iterable are equal to the given sigorval.
A static foreach function that calls bodyfn for each item in items and returns a list of
str_ log2ceil - returns the ceiling of x. x can be an
str is_pow2 - returns True if num is a power of 2.
Add a case statement to the graph.
str_ The default statement is a list of statements. The default is a list of statements
Registers the given interface and its units in the given vcdvarwritingscope.
beforesim - beforesim method.
str_ logchange - log a change to the vcdwriter.
hwprocess - HW - process a state machine proc and return the result as a string
Auto - add agents to a unit.
_get_associatedclk - Get the associated clock for this unit and its parents.
A generator that yields the distinct elements of an iterable according to a predicate function.
Group items by a function. The function is called with each item in the collection. The
Flatten a list or tuple of iterables into a list of lists. If level is greater than
Merge nested if statement from else statement into self. elifs and self. iffalse.
Remove unconnected signals from the given network list.
str_ Check if ifistoosimple is a simple assignment or not.
str_ Try to merge procb into proca.
Reduce a list of processes to reduce the number of processes to the number of maxstmid
str_ onwritereq - add a write request to the request queue.
Given a list of HDLStatements return the name of the process and mark the outputs.
str_ cut off drivers of dstsignal in a list of statements.
Create a synthesized entity and its architecture.
Return the max id for a given STM object.
Returns the maxid of the statements in the given proc.
Write data to the interface.
_m sets the master direction to the opposite of self. _masterdir.
str_ Loads the declarations of the interface and its sub - interfaces into the class.
_signalsforinterface returns a list of signals for this interface. If this is an interface
Returns the physical name of the device.
str_ Return the bit length of this object.
str sensitivitybyop - Get sensitivity by op.
Convert the bitstring to the given type. If the bitstring is of the given type
reinterpret_bits_to_hstruct re - interprets sigorval as a
str_ Return the number of full words between start and end.
groupbywordindex - Group the words in a transaction by their startofpart and the
Pack the data into a sequence of words. The data is expected to be a list of
str _enclosed_for _sensitivity _iter_stms
_discover_enclosure_for_statements returns a list of all enclosing statements.
_discover_sensitivity_seq - Discovers the sensitivity sequence of
Get the right - hand - side context for this operator.
This function is called when a statement is reduced. It is called when a statement is reduced
str Merge other statement into this one.
str_ Returns True if stmsa and stmsb are mergable.
_merge_statements takes a list of statements and returns a tuple of the merged statements and
_merge_statement_lists merges stmsa and stmsb into a list of
_try_reduce_list tries to reduce a list of statements to a list of statements
_on_parent_event_dependent - Called when the parent event is dependent.
_set_parent_stm sets self. parentstm to parentstm.
_register_stements adds the given statements to the given target list.
str_ Destroy this statement and all of its associated resources.
cleanassubunit - clean up the assubunit and all of it s ports and
walkflattenfields walks through all the fields of sigorval and returns a list of
str_ Returns a copy of self with the signed field set to True if signed is True
str_ Given a hwprocess and a list of sensitiveto add it to the
Returns the condition and the value of one or more SIMEVAL conditions. The conditions are
str_ Connects a port from a source unit to a destination unit in a given direction
Return a string representation of a bitvector of the given width.
Process a HWProcess object.
str_ evalparam returns the value of a parameter.
Set the value of the field to the given value. If the field has been replaced with
Convert a list of interface maps to a hstruct.
Finalize the memories and return a list of ff_to_remove and ff_
str_ Returns the index cascade of the current signal or None if there is no index cascade
Convert a Python object to a string.
str_ If sigorval. _dtype == totype return sigorval else cast
str - > str - > str - > str - > str - > str - >
walkparams walks the parameters of the given interface and adds them to the discovered set.
connectpacked returns a list of connections from srcpacked to dstinterface. If exclude
str_ packintf packs an interface into a string.
str_ The name of the unit and all its subunits. This is the name of
str_ Register an interface and register its signals for the given interface. The interface must be
try to reduce sig to val if val is fullvld. If val is fullv
tryreducexor - Try to reduce val to sig and val. If val is fullv
str_ Returns a namescope for use in Basenamescope objects.
str_ Returns true if the object should be serialized or False if it should not be serialized
Get the base condition of a condition object. If the condition is a logical or not condition
Return the first bitstring of a given width. If signed is True then return a signed
Get the name of the constant for the given value. If the value is already a constant
_cut_off_drivers_of - cut off drivers of a given signal.
_loadfromarray - Load from a numpy array and return the address of the new array
_loadfromhstruct loads a struct from the given bit address and returns the bit address
_loadfromhtype - Load data from a HDL type. dtype - HDL
str_ Returns the number of items in the array.
Walks the tree and flattens it into a sequence of tuples. The first tuple
str - > str - > str - > str - > str - > str - >
Get the indent string for a given number of indentation. If the number is out of range
raise intflvlconferr if obj. propname is not None and prop is not
Register a parameter.
Update parameters from otherobj using updater. If exclude is a set it will only update those
Register a unit.
Register an interface.
Registers an array of objects with the given name. The name is the name of the array
Returns a single driver instance or raises an error if there are multiple drivers.
str_ Return the value of the expression in the result object.
str_ Create a new rtlsignal with the given opdef and operands.
Returns a copy of the context with the given indent added.
str_ Try to connect src to the unit s intfname. If the intfname is
propagate the clk to all units in the object.
Propagate the clk and rst_n units to the clk and rst_n
propagate clk and rst to all units in obj. clk and obj.
propagate stn to all units in obj. rst_n - > str
propagate the state of obj to all units in obj. _units. This is
Iterate over the bits of sigorval.
str _serializeexclude_eval - serializeexclude_eval - serializeexclude_eval - serialize
str_ If priv is None then the parent unit is serialized. Otherwise the parent unit is
serialize_params_uniq_eval - serialize paramstovaltuple of parentunit to obj
Get the fully qualified name of this object.
str _make_association - Creates an association between the objects in the list of objects.
Convert a unit to a SimModel object.
reconnectunitsignalstomodel re - establishes the unitsignalstomodel
simunitvcd - Solve a model with a list of stimul functions and write
Initialize the ontwritecallback function.
Connect this driver to the given signal.
Register an intern signal to the source or destination of this link.
connectinternsig - add this driver to the endpoints in the driver s source and destination
Get the intern signature of the direction of the link.
Returns true if the given process is dependent on the given signal. If the signal is None
str _add_process - add a process to the event queue.
_addhdlproctorun add hdlproctorun
_schedulecombupdatedoneev schedules a combupdatedoneplaned event and returns it.
str _scheduleapplyvalues _scheduleapplyvalues _scheduleapplyvalues _scheduleapplyvalues _
Returns a callable that can be used to determine if a conflict should be resolved or not.
_runcombprocesses is called when there are any runcombprocesses that need to
_runseqprocesses is a generator that runs all the sequence processes in the order they were
_applyvalues is a generator that calls the simupdateval function for each sequence in the
str_ read the value of the given signature. If the signature is not an attribute error
str_ Write a value to a signal.
str add_process - Add a process to the event queue.
Simulate a unit by running the synthesisedunit in the given time frame.
rtlsignalbase ternaryopstoif - > rtlsignalbase ternaryop
Return the distance between two hashes.
Calculate the average hash of an image.
str Distance between two images. Returns distance between the average hash of the image and the other
Setup the platform with the given config and add entities to the Hass object.
str Update the state of the device based on the current power state and the current volume level
str mute_volume - Mute or unmute the volume on or off.
str volume_up Updates the volume level and calls the device s vol_up method.
str Volume down
str_ Set the volume level of the device.
str_ Reset the board to its initial state. The board will be reset to its initial
Returns the piece at the given square.
str_ Remove a piece at a given square. If into_hand is set to True
str Given a square and a piece set it to the piece. If from_hand is
str is_suicide or is_check_by_dropping_pawn
Returns True if the turn was a suicide in the king_squares.
str Return True if the game is over False otherwise.
str is_checkmate - Checkmate is a checkmate or not.
Returns True if the zobrist is a fourfold repetition. Otherwise returns False.
str - > str - > str - > str - > str - > str - >
Returns a list of all the pieces in the file. The list is a list of strings
_ Push a USI at the end of the move stack and return a move object.
str_ zobrist_hash - returns the zobrist hash of the
str_ Returns the symbol of the piece type. If the color is black the symbol is
str_ Create a piece from a symbol.
Return the USI representation of the piece.
from_usi returns a piece object from a USI string.
str - > list of parsed commits
Parse a commit from a string representation of a commit block into a dictionary. The keys are
str_ Loads the config from the command line and executes it with the given arguments.
generate_yaml generates a YAML string from the current configuration.
Cast a value to the type specified by self. cast_as. If the cast_
list_dates_between - list of dates between first_date and last_date
Parse a date string into a datetime. date object.
Load a currency file into the currency object. The file can either be a URL or a
Set missing rates to none for all dates between first_date and last_date.
Return the rate for the given currency and date. If the date is not found raise an
Animate a list of frames with a given interval and a given name. The name is
str_ read n records from the file and return them as a string. n is the
str_ Write a record to the file. n is the number of records in the file
str start start + 1 end + 1 start + 1 end + 1 start + 1 end
Read the comments from the file and return them as a list of strings.
Close the DAF file and clean up internal data structures.
Generate a sequence of positions from the given tdb and tdb2. If tdb
Close the DAF file and remove all the data from the segment objects.
str_ Loads the initial epoch interval length and coefficients from the DAF file.
str_ format_violation log_level log_exc_info log_extra_
str Visits a BinaryOp node. If we are in a logging statement and we are
Check if the keys in the dictionary are not in the whitelist. If the keys are not
str Visits joined string nodes. If the node is a string or a list of strings
Check if the keyword is in the whitelist and if not add it to the violations list.
Visit an excepthandler node. The name of the handler is stored in the current_except
Detects the logging level of a node.
Returns the name of the except handler for the given node. If the node does not have
Returns the id attribute of the given value. If the value is not a string it will
str_ True if the given node is an exception of the current except list.
Check if the given exc_info node is valid for the current logging level.
Delete the file if it exists and is the same as the instance s filefield_name
rendered_content - Rendered content of the page as a PDF file.
Override render_to_response to add support for the pdftemplateresponse class.
Quotes a string for use in an HTTP request.
str_ If module is an instance of types. moduletype it will be replaced with lowercase
Convert a string to an underscored string.
auto_index - Automatically index the given MCS s collection in the MCS s
str_ file_path - Path to the file to parse currency - The currency to parse
Load the content of a file into a list of strings.
Parse a single line of text into a pricemodel object.
Translate the given symbol to the corresponding symbol in the symbol_maps dictionary. If the symbol
Load all symbol maps from the repository into the self. symbol_maps attribute.
str_ Returns the current session. If no session is set the default session is returned.
str_ import_csv - Import price data from CSV file to price database.
Get the latest price for a given security symbol. If no symbol is given the latest price
Download all prices for a given symbol in a given namespace. If no symbol is provided all
Prunes security symbols from the database. If all is True all security symbols are deleted.
Get the default session for the price database. If the database does not exist raise an error
add_map - Add a symbol map to the price database.
str List all symbol maps in the database.
Get a symbolmap by it s id.
str_ - > list of lines from a CSV file.
Map a price entity to a pricemodel object.
Convert a pricemodel object to a price object.
Read config file from file_path. If file_path does not exist raise filen
Get the path to the config file.
Create the user s config file if it doesn t already exist.
Get the path to the configuration file.
Get the contents of the configuration file.
str_ - > None - > None - > None - > None - > None -
str_ Get the value of an option from the configuration file.
Save the configuration to a file in the same directory as the config file.
Parse a symbol into its namespace and mnemonic parts.
Add a price to the invoice.
Download the price for the given symbol currency and agent and save it to the database.
str_ Returns the session to use for this request.
Get a list of all prices for a given date and currency.
str_ Get all prices on a given date for a given symbol on a given namespace.
Delete all items in the database and return the number of deleted items.
Delete all prices for the given symbol. Returns True if the symbol was deleted False otherwise.
Download price from finance_quote_python and add it to self. price_list
Get all securities for a given currency agent symbol and namespace.
Return the partial state of the state of the state at index num_.
Update all child calls with their partial values.
str_ yields the descendent nodes of this node. If include_me is set to
Check if the user has chosen the correct option in the student process. If the user has
Returns a list of all the keys and values that are defined in this object.
_getx - Get an extended attribute from a tree of ASTs. This method is
Check if there is a loop in the context of the given names.
Check that the solution has a context with the given name.
Check that a student or solution part is present in the student and that it is present in
Check that a student or solution part exists at a given index in the student and solution parts
str_ Returns the true anomaly.
init_app initializes the ldap3_login manager with the given ldap3. ldap3
Add an LDAP server to the pool.
_decontextualise_connection removes a connection from the context of the current stack.
Tears down the context. This is called when an exception is raised during the context
Authenticates the user and returns a dict with the username and password. If the user
Authenticates the user using the direct bind method.
Get a list of groups for a given user.
Get information about a given user.
Get the user info for a given username.
Get an object from the server. If _connection is not provided a new connection will be
Returns a connection to the ldap3 manager. The connection will be bound to the LDAP server
Creates a connection to the database and returns a connection object that can be used to connect to
Creates a connection to the LDAP server. If no bind_user or bind_password is
Destroys a connection and unbinds it from the connection manager.
str_ Search for items in the container.
Search for objects that match the given query. If no query is given all objects are returned
Search for all artifacts in a collection.
speak the client name and database.
announce a command. If no command is given announce all commands. If quiet is True
Update the secrets setting and the base setting if it doesn t exist. If it doesn t
Update the headers of the message. If fields is not None the headers will be updated with
Check if the client has the required secrets. If not exit with an error message.
Download a URL to a temporary file and move it to the given file_name.
stream a url to a file or stream to a stream_to. If stream_to
Update the Authorization header with the token from AWS.
Get or create a folder.
Read a message from the response. If the response is not a JSON object return the reason
Get bucket object from S3 bucket name. If no bucket exists create a new one.
Update the base key from the client secrets. This is done by reading the client secret file
str _init_clients - Initialize the native appauth client.
Load the secrets from the config file and update the auth and transfer attributes.
Returns a list of logs. If no name is given all logs will be returned. If
List all the logs in the bucket that match the name of the log file suffix.
Create a folder for a given endpoint_id.
init_transfer_client initiates a transfer client based on the current transfer data.
Search for all containers and return them as a list of dictionaries.
status - show client secret status and update secret list if it exists. If it does not
Add a client secret to a backend. If the variable already exists it will be overwritten.
Remove a variable from a client secret backend.
Activates a client secret backend. If the backend does not exist it will be created.
Delete a backend from the client secrets. If the backend does not exist nothing is done.
Update the base of the image if it is in the given image. If it is not
Returns a basic auth header for the given username and password.
str_ Generate a signature for the given payload and secret.
Generate a header signature for the given payload and request type.
Send a DELETE request to the specified URL.
Send a HEAD request to the given URL.
Perform a GET request and return a paginated list of results. If start_page is not
Returns True if SSL check should be disabled or False if SSL check should be disabled.
Remove an image from the registry. If force is set to True the image will be removed
get_lookup returns a dictionary with the version number as key and the value as value.
get_reqs returns a list of install_requires for the given lookup. If no lookup
Get the singularity version from the command line. If the command is not found in the
Check if a given software is installed. If quiet is set to True it will print the
str_ Returns the absolute path to the current installation directory.
Returns the path to the thumbnail file. If none is specified the current installation directory is used
Run a command and return the output as a dict.
Get metadata from dbx_metadata. If dbx_metadata is None return all metadata
Update the secrets for the current account.
Print the response to the console. If output_file is not none print the output to
str kills all the commands specified in the command - line argument list.
str list_logs - list logs of a container. container_name - name of the
Get a list of all the collections in the account.
update_secrets - get the secrets from the environment and update the _secrets attribute
str_ The main entry point for the ipython interpreter.
Get a list of manifests for a given repository and schemaversion. If digest is not
Get a manifest from a repository.
Returns the path to the cache file to be downloaded. If destination is None returns the singular
Extract the environment variables from the config file.
Update api_base artifacts and job.
update_secrets - update the token in self. headers and self. token_secret
Get the metadata for this job.
str - > str - > str - > str - > str - > str - >
Get the value of a setting and exit if it is not set.
str_ If value is not None update the value of the given setting. If value is
Generate a credential and signature for the given request_type and names. If payload is none
List all builders in a zone. If no project is specified all builders are listed.
Load all templates with the given name. If there are more than num_ templates with the
Get the IP address for a given network name.
Run a build on the compute service and return the response.
List all the containers in the bucket that match the given metadata key.
List all containers in the bucket and print them in a table.
Command line entry point for sregistry ls command.
str_ Main entry point for the sregistry command.
Initialize the database with the given path. The path is relative to the base directory of the
Get the build template from the current installation directory.
List all the endpoints in the cluster.
list_endpoint - list all files in an endpoint. If query is not specified all files
Create a shared link to a dropbox image. If the image already exists it will be
str_ Read the client secrets from the secrets file or from sregistry. defaults.
str_ is the name of the service that will be used to create the bucket storage and
str_ Delete an object from a bucket.
Delete an object from the bucket.
Destroy an instance.
str - > argparse. _subparsersaction - > dict - > argparse. _sub
Generate a random string from the list of descriptors nouns and numbers.
str_ Returns the current working directory. If requested_tmpdir is None the default is
Extract a tar archive to output_folder. If handle_whiteout is set to True
Extract a TAR archive to a folder and save it to the given output_folder.
Returns the hash of the given file.
str_ Read a file and return the content as a string. If mode is str_
str_ read json file and return data as a dict.
clean up files that are not in the filesystem. files can be a string or a list
Push an image to S3.
get_or_create_collection - Get a collection by name or create a new one
str_ Get collection by name.
str_ Get container by name collection_id tag and version.
List all images in the registry. If no query is given all images are returned.
Inspect a container and return a dictionary of the fields of the container.
Rename an image to a new location in the container storage. If the image does not exist
Move an image to a new location.
Remove an image from the container.
Parse a header from a recipe string. If no header is found return the original string.
find_single_recipe finds a single recipe in the manifest.
Create a build package from a list of package files. Return the sha256 hash of the
Update the metadata of a blob based on the response from the server.
Returns a container name with all non - alphanumeric characters converted to lower case. If special_
Return True if the user has preference to use colorization or False if the user has not
emit error if level is one of abort error warning verbose verbose1 verbose2 verbose3 debug
Write a message to a stream.
Display a table of messages.
Push an image to a remote endpoint.
Get a template by name. If the template does not exist a warning will be logged.
Get the manifest for a given tag in a given repository. If the tag is not present
Get the contents of a build template file. If no name is given it will return the
Update the client secrets from the config file and read the client secrets from the config file.
A context manager for handling S3 errors. This is a context manager that raises errors for
str_ Create a temporary file and return a proxy object that can be used to access the
Returns the gravatar url for the given user or email.
Returns the Gravatar URL for the given email.
has_gravatar - Check if email has a gravatar.
Returns the gravatar profile URL for the given email. If secure is set to True then
str_ generator for chimera blocks of size m n l.
chimera_block_quotient returns a chimera graph where each node is
enumerate resonance smiles
Enumerate all resonance chemical structures in a molecule.
Apply a transform to a molecule and return the result as a list of mols.
Return the canonicalized tautomers of a molecule. The tautomers are
str - > str - > str - > str - > str - > str - >
convert smiles to moltosmiles
enumerate tautomers from smiles
str - > moltosmiles with tautomer canonicalization
str - Returns the tautomer parent of the given molecule. If skip_standard
str Returns the fragment parent of the given molecule. If skip_standardize is set to
str Returns the stereo parent of the given molecule. If skip_standardize is set to
set the isotope of the parent atom of the given molecule. If skip_standardize is
str charge_parent - Charges the parent of a molecule and returns the uncharged
The main entry point for the molvs command.
remove all fragments from a molecule and return the removed molecule. If leave_last is True
Choose a molecule from the list of fragments.
Integrate an IVP using a predefined or adaptive integration method.
get the mems of the organization in json format
get all teams of an organization
get all repos of a given type and add them to the self. repos_json dict
get the total number of contributors in a repository
Get the number of open and closed pull requests in a repository.
Get a list of issues in a repository.
Get the full path to the readme file for the given repo.
get_license - get the license path for a given repo.
Get the number of commits in a repository.
Write a JSON file for the given organization and date. If the file does not exist it
Write the total information to a file. If the file does not exist it will be created
write the languages to a file. If the file does not exist it will be created.
str_ if file_path does not exist create it if it doesn t exist.
Remove a date from a CSV file.
Get a list of all available gov organizations.
Creates an enterprise session for the given URL. If token is not provided the session will be
Check if the API rate limit has been reached.
Connect to a GitHub server and return a session object. If no url is provided it will
Query a list of repositories in a given organization or a list of repositories in a given organization
Get an organization from the GitHub API. If organization_name is None ask the user for
Write the stargazers to a file.
Create a project from a gitlab repository.
_license_obj returns a license object for the given license string. If the license string
get all the data for each repo in the org_retrieved list of all the repos
Get a list of releases for a given repository.
Get a list of referrers for a repository.
get_data gets the data from the API and stores it in the dict_to_
write_json - Write a dictionary to a JSON file.
This method writes the data to a file. The file will contain the referrers views
check if data redundancy has changed. If so remove it from dict_to_check
Write data to a file.
Write the referrers to a file.
process_json reads a json file and returns a generator of the records in the file.
process_url returns a generator of records from a given URL. If key is None then
str_ Processes a JSON file or a URL and returns a list of dictionaries.
Login to GitHub with a token and a user id. If no token is provided the user
get mems of org
Write the logins and emails to a file. If the file_path is not specified
Connect to a Stashy server and return a session object.
Connect to a GnuPG server and return a GnuPG session. If token is
query_repos returns a generator of projects in the given repos. If no repos is given
Compute the number of labor hours for a given sloc. If month_hours is
Prunes all None values in a dictionary and all sub - dictionaries of type dict.
Read a GQL file and return its contents. If the file is the same as the
Await for a reset to occur in the given time. The time is assumed to be
_countdown sleeps for the specified number of seconds. If waittime is less than
Load data from a file. If no filepath is specified the current filepath will be used.
Saves the data to a file. If no filepath is specified the filepath will be used.
Creates a TFS connection to the TFS server using the given URL and token.
Create a TFS project analysis client from a TFS URL.
Create a TFS core client for a given TFS URL. If token is not provided
Returns a TFSGitClient for the given TFS URL. If token is None the
Create a TTFVC client for the given URL.
Get a list of Git repositories for a given project in a collection.
Get a list of branches from a TFS repository.
Get the number of commits from the GitHub API for the current year. If the file does
Calculates the total number of commits for each week in the list of commits_dict_list
Write the commits to a file in the format of week - > commit - > commit -
Log timing information.
Log a histogram of the given stat and value. The value can be a float or a
This method rolls up all of the metrics and logs it to the logger. This is
Convert a value from the database to the corresponding enum value.
str_ Converts the given value to its Python equivalent.
Returns a string representation of the given value. If the given value is not a valid enum
_resolve_path returns a set of objects that can be used to resolve the given path
str_ Project a list of ULSs into a dictionary of ULSs.
Returns the mean of the values in the histogram. If the histogram is larger than the number
str_ mark the counter and update the m1 and m5 and m15 rates.
str The mean rate of the events in the histogram. This is the average of the events
Mark a number as being the last value. If the value is greater than the last value
Serialize and send a metric to the server.
Serialize a metric into a list of strings.
Returns a string representation of a metric with the given name value and metric type.
str metric_str - string to be sent to the server in batches of self. batch
Returns the value of an option in the given section. If the option does not exist raises
Decode data to a string if it s not already a string. If it s a string
Get or set the value of an option. If the option does not exist the default value
Returns a mapping from ledger codes to GUIDs.
Get a list of all available divisions for the current user.
Returns a mapping from exact invoice numbers to foreign invoice numbers.
str_ Create a view from the injector and inject it into the injector.
str_ Create a form view and inject it into the injector.
str_ Create a method view for the given injector. The method view is a function that
str_ Create an instance of the apiview APIView class and inject it into the injector
str_ Create a generic api view with the given injector.
model_view_set - A function to inject a model view set into the injector.
A context manager to create a stream from a file descriptor.
Read data from the file and send it to the protocol.
str Close the connection to the server. If an error is provided the connection will be closed
Watch a file or directory for changes. If the file is a directory it will be watched
Remove a watch from the inotify file descriptor.
Setup a watch for the given path and flags. If the watch already exists it will be
str_ Set up the inotify object.
Get the next event from the stream.
str_ Touch the message.
str success - Update the interval and update the short_interval and long_interval accordingly.
str Failure to update the interval. This is called when the timer fails to run.
str_ Close all connections and stop the periodic timers.
Connect to a nsqd server.
Perform a query to the LookupD API.
Set the maximum number of in - flight requests in the connection pool. If the number of
Log a message that is giving up to the client.
Register a callback to be called when an event is received.
str_ Remove a callback from a named event listener.
str_ Triggers an event on all registered listeners with the given name with the given arguments
Publish a message to a topic. If callback is not None it will be called with the
Set the feature transform mode and degree of the training data.
Returns the prediction of the input data. The input data can be a string or a list
clean up files that don t match the pattern specified in clear. If clear is set to
depth_file_reader - Read depth file and return dictionary of depth_dic_coverage
str_ is the name of the template to be used. It is the name of the
Sets the input and output channel names based on the input_suffix output_suffix and l
Render a Jinja2 template with the given context.
Render the template and return the result as a string.
Update the main_forks attribute of the context with a new sink for the output channel
Update the attributes of this object with the values in attr_dict. If the attribute is
Set the secondary inputs in the context.
Parse an assembly file into a list of contigs and their coverage.
Get the gc and at properties for a given sequence and the length of the given sequence.
Returns the total length of the assembly for all contigs that are not in the filtered_
Write the assembly to the specified output file.
Write the report to a file in the format of contig_id = val1 val2
Remove all the inner forks from the given text and return the new text.
insanity checks for a given pipeline string.
Get the source lane from the fork_process and the pipeline_list.
Get a list of lane tokens from a lane string.
This function returns a list of lists where the first element is the connection to the second element
Add unique identifiers to the pipeline string. This is done by replacing the identifiers in the pipeline
Remove unique identifiers from the pipeline links.
Check that the trace and log files are present.
Returns a mapping from the header to the position of the header in the header string.
_hms returns the percentage of the given string s. If the string s is a
Return the size coverter of a string.
Get the pipeline processes from the log file and store them in self. processes and self.
clear all the information about the current process and clear all of it s data. This is
Update the barrier status of all processes in the log_file.
str_ Returns the contents of the log file at the given path. If the file does
assess the resource load and size of a process and return cpu and memory warnings.
update_inspection - update the logging and tracing in case of errors.
Display an overview of the current state of the inspection.
Move the cursor up or down in the given direction. If the cursor is at the top
Right left padding.
Get the last n lines of the log file.
str_ is the name of the pipeline and the config file is the name of the pipeline
str_ is the path to the DAG file and tries to load it into a dictionary
Generate a hash for the next flow run.
Get the next flow file path from the given log file.
This is the main entry point for this module. It takes the sample id and the assembly
brew_innuendo - Brew - Innuendo pipeline.
List all registered recipes.
Validate that the pipeline string is a valid one. If the pipeline string is not a valid
Build the upstream pipeline for a given task.
Build the downstream pipeline for a given task.
str Runs the auto - pipeline for the given list of tasks and returns the pipeline string
Returns a string representation of the given component with the given parameters and directives.
Write a report to a file in JSON format.
This is the main entry point for the script. It takes a list of log files and
Fix contig names in an Asseembly file.
Remove files that match the pattern in the given FASTQ file. This is done by removing
parses a list of file paths and calls the _parser method for each file found.
Parse the CSV file fl and store the results in self. storage.
_get_contig_id gets the contig id from the given contig string.
Write the plot and table data to a JSON file.
Parse an assembly file into a dictionary of contigs.
Get the summary statistics of the contigs and the number of sequences in the contigs.
str _get_window_labels - returns a list of tuples of contig_id contig
Returns the GC property of the string s in the range [ 0 length ).
Returns a sliding window of the contigs in the sequence. The number of contigs
This function is the main function of the skesa tool. It takes a fastq pair
Write a JSON report of the quality statistics of the two data sets.
Parse the Bowtie log file and extract the total number of reads and the number of
Return the process name and directives from the given name string.
Add a dependency to a process
str Search tree backwards from template to parent_lanes. Returns True if template is found
Build the header part of the response.
Build the footer of the file.
This method sets the main raw inputs and extra inputs for the init process.
Set the secondary channels for each source in self. secondary_channels.
Set the status compiler and report compiler channels for all the processes.
Returns a string representing the manifest of the pipeline.
_set_configurations - Sets the configuration of the process.
dag_to_file - writes a DAG to a file in JSON format.
Write all the configuration files to a file in the given project_root directory.
str_ Export the parameters of all the processes in the process pool to a JSON file.
str_ Export the directives of all the processes in the pipeline to a JSON file.
Build the NF file and write it to disk.
Set the number of kmers to use based on the kmer_opt parameter.
Returns a unique identifier for the report. This is used to generate a unique identifier for the
Update the trace_sizestamp and report_queue based on the trace_file.
Update the size of the log file to reflect the size of the log file in bytes.
Send a live report to the report_queue.
init_live_reports initiates a live report with the given report_id.
Close the connection to the report server.
convert adatpers from fasta format to fasta format
This is the main entry point for the Mash analysis. This is the main entry point
colored_print prints a string with a color label.
Collector function to collect processes from process_map and print them to stdout. If pipeline_
_ Returns the min and max values of the given qual_str.
Filter the assembly file to only contain contigs that are below the minimum coverage.
Returns the number of lines in the assembly file and the number of contigs in the assembly
This is the main entry point for filter_assembly and filter_bam.
Convert a camel case string to a lower case string.
collect_process_map returns a map of process names to their class instances.
This is the main function of dendropy. tree. get. It takes a newick
str _map_w_to_data This maps the w values to the data.
median_filter - median filter of a list of numbers.
str_ - Computes the gaussian kernel for a given number of samples. m - The
str_ - Computes the S - SM distance between x and x. metric - The
computes the number of non - zero components of the linear distribution of x and g.
str_ Filter the input array using a gaussian filter.
Compute the number of non - zero components of the distance between the points in x and the
circular shift of a 2D array.
embedded_space returns an embedded space of the input array x. The input array must be
plotting function for plotting a given number of algo ids at the end of an estimator file
Plots all the boundaries of a given estimator file.
Plots the labels of a given set of labels on a given time series. The labels are
This function returns a list of feature segments from the input features f. The input features are
Convert a list of feature segments to a list of 2D - MCMC 2D
str_ Fit the model to the given data and set the scatter_within_ and scatter
Read references from an audio file and return a list of times and a list of labels.
Find an estimation based on a Jam object and a set of boundaries and labels.
Returns a list of all the boundary algorithms in the system.
Returns a configuration dictionary for a given feature and annot_beats. The configuration dictionary is
Get a list of audio files from a dataset in a given path.
Read Hier references from a JAMS file and return the bounds labels and level of
Get the duration of a given feature file as a floating point number.
Write a mirex file from a list of times and a list of labels.
Get the full path to the dataset file in the given directory with the given extension.
str_ aligns the segmentation of a song to the beat times and the segment labels
str - Estimates the time and the number of beats from the audio percussive
Read beat annotations from a JAM file and return them as a tuple of times and frames
str_ Compute beat sync features and beat sync times.
Returns a list of all the parameter names that are not prefixed with the string str_.
str _framesync_times _framesync_features _framesync_time
str - Returns the time of each frame in the dataset.
Returns a list of features in the audio file. If the audio file does not contain any
Preprocess the feature_str to make sure it is in the list of valid_features
Post - process the input and output labels and return the input and output indices.
This is the main entry point for the command line tool. This is the entry point for
Print the mean of the results to the console.
str - Computes the information gain for the given annotations and estimated data.
Process a single track file and return a list of the results.
Get the name of the results file for a given set of parameters.
str Function to compute all features for a given audio file.
str Function to compute all features from a file or list of files. If the input file
str_ Returns the cost of a gaussian distribution of x.
str_ lognormalizes a float to the logarithm of the absolute value of the normalized
str_ normalize min and max values of a numpy. ndarray.
str_ - > numpy. ndarray of time frames. dur - > float dur - >
str_ Remove empty segments from a list of times and a list of labels.
sonify_clicks - Sonify audio clicking with a given number of clicks
str_ Synchronize labels between old_bound_idxs and new_bound_idxs.
str_ Process the segmentation level and return the segmentation times and labels.
Aligns the end hierarchies in hier1 hier2 by thres.
Compute distance between a point and a point in the dataset. The distance is calculated using the
Estimates the k - knee of the model.
get_clustered_data returns the data for the clustered data.
run k - means on x and return the means and the labels of the k - means
str_ Computes the BIC for a given set of means and labels.
str_ Returns the magnitude of a complex number.
Convert a segments. json file to a numpy array of bounds.
Convert a bounds. json file to a numpy array of bounds.
Convert segments_json to a list of labels.
converts a json file to a numpy array of beats
Compute the 2 - D Fourier transform of x.
str_ Returns a list of the most frequent label for each frame in x.
Apply a median filter to the activation matrix.
Returns the module for the given boundaries_id or None if the boundaries_id is not
get_labels_module returns the module for the given labels_id. If labels_
Run hierarchical segmentation on the audio file using the specified bounds module and the specified labels module.
Run the segmenter on a flat audio file with the given parameters.
The main entry point for the command - line tool. This is the main entry point for
A context manager that sets up a task to be run in a separate thread. The task
Spool an iterable of text into a stream of text. Yields text from the iterable
Read from inputstream and write to target. The inputstream will be closed when finished.
Returns a translation table for the given language.
prints the translation table for the given language.
Remove nodes from the network and edges from the list of nodes and edges in rm_nodes
Convert a Network object to a Pandas hdf5 file.
Create a Network object from a pandas hdf5 file.
Process a node and return a dict with all the node s tags and their values.
Make a request to the Osm API with the given query.
Build a node query string from the given parameters.
Returns True if value is a regular expression False otherwise. If value is a string returns True
Returns True if the value matches the given expectation. If the value does not match the expectation
str - > bool - > bool - > bool - > bool - > bool - >
Trigger all methods on the target object with the given arguments.
Returns the matcher with the given name or None if no matcher with the given name exists.
Initialize a matcher with the given name and arguments.
Set the request body.
Set the response body as a JSON string. If data is not a string it will be
Set a key to a value in the container. If the key already exists it will be
Append function or method to target list.
Trigger the request on the given instance. The instance must be an instance of the request class
Add a header matcher to the current request.
Add a header matcher that matches if one of the given headers is present in the response.
Add a header matcher that matches if any of the given headers is present in the response.
Add the given parameters to the current request URL.
Add a body to the request. The body will be parsed and added to the matcher chain
Add a JSON match to the current request.
This will set the request s XML and add the matcher to the matcher list. This will
Read the content of the file at the given path and add it to the request body.
str | bool | bool | bool | bool | bool | bool | bool | bool |
Set the error message. If error is a string it will be converted to a string.
Return a reply to the request. If new_response is True the response will be returned
Match a request against this mock.
Set the mock engine.
Creates a mock and adds it to the engine s list of mocked URLs.
str Remove a given mock from the list of mocks.
bool_ True if active False otherwise.
str_ Disable the mock engine. If the mock engine is already disabled nothing will happen.
str_ Returns True if the request should be used in the network mode.
Check if the given request matches any of the configured mocks. If the request does not match
str_ Returns a copy of the request object.
Context manager to enable or disable the engine. If network is set to True the engine will
str_ Add a new interceptor to the chain.
Remove an interceptor from the list of interceptors. If the interceptor does not exist remove it.
str_ Get a setting from a connection s settings dictionary.
str_ Decrypts the column and returns the SQL statement and the parameters for the decryption.
This method is called before the model is saved. This method is called before the model is
Returns the placeholder for the given value. If the value is not a string it will be
get_col - Get the column name for the given alias and output_field. If
Get the value of the placeholder to be used in the SQL statement. This will be used
base_regression returns the base regression for the given model q. The base regression is
str covinv returns the covariance matrix of the tree rooted at self. tree. root
Recurse through all nonterminals in the tree. If full_matrix is set to
calculate the averages for all nonterminals and clades in the tree
Returns the explained variance of all terminals and nonterminals in the tree.
Returns a dictionary with the explained variance of the model. The values are a dictionary of
str_ Set the t - value of the t - value of the t - value of
calc_branch_count calculates the number of branches in the tree based on the number of
str t_node - t_node + branch_length - length of branch t_
str_ Attaches the merger cost to all clades in the tree.
Normalizes a profile to a normalized vector and returns the normalized vector and the log of the normalized
_gtr - Set the GTR value.
set_gtr - Set the GTR object to use for the GTRs.
seq_len is the length of the sequence in bytes. If l is not None it
Attach sequences to all terminals and clades in the tree. If there are too many
str_ Prepare the tree for insertion into the database. This method is called when the database
_prepare_nodes prepares the nodes for the tree. This is called when the tree is
calc_dist2root calculates the dist2root attribute of all nonterminals in the
Get the mutation matrix for a given branch.
str expanded_sequence Returns the expanded sequence of the given node. If include_additional_
str - > np. ndarray - > np. ndarray - > np. ndarray - >
Returns the length of the sequence in the tree. If pos is not specified the length of
Returns the ancestral likelihood of all clades in the tree. The likelihood is
str_ Returns the length of the branch of the given node in gtr.
Returns the optimal length of the branch of the given node. If the node has no parent
Reconstructs the alignment and returns it as a multipleseqalignment.
Einstein summation of the covariance matrix. This is done by summing the
str_ Constructor for a custom GTR object.
str_ Check if q is valid. If fixed_mu is set to True raise an
Returns the optimal sequence type for a given sequence pair. The sequence pair is compressed according to
Returns the probability of the profile_pair at time t. If ignore_gaps is
evolve a profile at a given time.
str_ Returns the log - likelihood of a sequence.
Set the branch length mode. If the tree is an alignment the branch length mode will be
Plot the root to tip of the treeregression.
Prints the LH values of the sequence and the marginal value of the tree. If joint
Add a coalescent model to the tree.
Find the best root in the tree.
assure that the alignment is a tree and return the tree in the form of a list
Function to create a GTR object from the given model and gtr_params.
Reads a VCF file if it is a VCF file. Returns the aligned sequence reference and fixed
calc_fwhm calculates the fwhm of a 1D distribution.
str - > str - > str - > str - > str - > str - >
assign_dates assigns raw_date_constraint and raw_date_constraint to all cl
Setup the treeregression for the given tree. If covariation is set to True
make_time_tree - Creates a time tree for the model. time_marginal
Calculate the likelihood of the timetree.
Convert clades to dates. This is done by converting the date of each clade to
date uncertainties due to rate
Returns the minimum value of an interpolation object.
str_ Returns the median value of an interpolation object. This function is used to calculate the
str_ returns the year + day of the given datetime. If no datetime is given the
Construct a ClockDetection object from a dictionary of regression values.
Close the connection to the server and reset the connection state to None.
Receive a line of text from the client.
Send data to the server. The data is encoded as UTF - 8 and sent to the
Send an instruction to the remote node.
Convert a unicode string to UTF - 8. If the input is a string it will be
str_ Load an instruction and return an instance of the class. Raises InvalidInstruction if the
str - > str - > str - > str - > str - > str - >
str - encodes the instruction into a string.
Return the URL for the class.
Returns the URL of the instance of the model.
Return the URL for the class.
Download the file to the given path. If no path is given the file will be downloaded
Get the parent object of this job.
Ask for username and password for a given domain. Return the domain name email and password.
Login to the Solvebio API using interactive mode.
Who is the user who is logged in. If no user is logged in prints the
Print the user information in a human - readable format.
Returns a new GenomicSequence object that only contains genomes in the range [ start stop
str_ Returns a new SeqFilter instance with the specified chromosome and position as a filter.
Get a subset of the results that match the specified facets.
_process_filters processes filters and returns a list of filters as a list of dicts.
Returns the next item in the result set. If there are no more items in the result
Execute a query against the Solve API and return the results as a two - tuple.
Creates a migration between this dataset and another dataset.
str_ Main entry point for Solvebio.
Constructs a new instance of the model from a dictionary of values. This is a convenience method
Redirect to the OAuth2 revoke token page.
Retrieve the child object of this task.
Parse the snpeff annotation from the given info dictionary.
str_ Returns the user s credentials or None if the user is not authenticated.
Save the configuration to a file at the given path. The file will be saved in the
Returns a string representation of the given value according to the given type. If the value is
Build a row of cells from a list of cells. The first cell will be padded with
_build_line Builds a single line of text from a list of column widths.
Convert mediawiki cell attributes to a list of mediawiki cell attributes.
Creates a migration between the source dataset and the target dataset. If the target is a dataset
Upload a file or a folder to a vault.
Validate a full path and return a tuple of the full path and the path_parts.
Validate that the given URL is a valid API host URL.
str_ - The name of the method to call. records - The list of records to
Evaluate the expression and return the result as a python object. If the expression is a list
Set the format name to use for this field. If the format_name is not supported
str Register a new output formatter with the given name.
Adapter for tabulate. tabulate. table. table_format can be one of the
str_ Returns the full path to the user s config file.
str_ Returns a list of system config files.
str_ Returns a list of additional files that should be included in the analysis.
Write the default configuration to the user s config file.
Read a list of config files and update the configuration with the values from the config files.
str_ truncates a string to max_width characters. If max_width is not
replace all occurrences of a string in a string s with a list of strings in replace.
str - > None - > None - > None - > None - > None - >
Apply the given option to the given command. If active is True the option will be applied
Initialize the linter options.
Run the command and return the exit code.
Run clean_docs_cmd html_docs_cmd and view_docs_cmd.
str_ Returns a tuple of tuples where each tuple is a tuple of strings with each string
Format a row of data into a single string.
Returns a table with the given data and headers.
Returns a generator that converts the data into a table.
isnum - Check if the type is a number or not.
isbool - Check if the key is a boolean or not.
str - > bool - > string - > int - > float - > float - >
Generate a new key for a given template. The key will be stored in the session s
_generatekeypair - Generate a new keypair for a template. _generatekeypair -
Find all objects in a CK object. template can be a string or a list of strings
Insert a QR Code image into the canvas.
Export a panel to a BED or GEDCOM file.
_first_weekday returns the first day of the given weekday in the given date.
str_ Repeats a day. If no day is given the current day will be
repeat_reverse - Repeats the day between start and end. start and end are
str _biweekly_helper - Repeats self. repeat_biweekly
Handle a single chunk of the event.
Export the variants of a collaborator.
Export a list of variants for a given sample_id into a list of lines.
Add or update a user s roles.
Get a list of variants for a given institute and case.
a wrapper around the sv_variant command.
str_variant returns the variant data for the given institute_id case_name
Send a verification email to the user to verify a variant.
Export CLINVAR data for a given institute. If the request is a POST
str - Returns a list of cancer variants for a given institute_id and
Ajoute un acmg de la lista de la lista de la lista de la
str_ for a given evaluation_id and returns a dict with the evaluation object and the
Get a list of ACMGs for a given criteria.
Upload a new panel to the HGNC.
Download all verified files from the store to the static folder. If the verification fails flash the
Given a list of HGNC IDs return a mapping of HGNC IDs to their
Add incomplete penetrance to the given gene dict.
Send a request to the given url with the given token content_type accept and data.
Get a list of nodes from the MME API.
Get the coordinates of a given position in a given chromosomal.
Returns the subcategory of the given category or svtype depending on the ref_len and
Get the length of a string.
Get the end position of a BND segment.
Parse the coordinates of a variant in a given variant category.
Update a panel s current version.
Export a panel as a PDF.
Edit a gene panel in HGNC. If the user is editing an existing gene the
Load a delivery report from a file.
str_ hpo_terms - returns a dictionary of HPO terms for a given store
List all keys in the whitelist for a given adapter.
Build a dictionary of HPO terms from a HPO term ID.
Returns a dictionary of all the genes in the HGNC store for the given HGN
Convert a gene query to a list of JSON terms.
Display a list of institutes. If the user is an admin and the user is
Show a list of all transcripts for a given build.
day_display returns a list of event objects for a given day of the month.
Retrieve a list of variants for a single variant query.
Retrieve a list of variants for a given institute object and a case object.
Returns information about a single variant in an institute and a case.
Generate the header for the variants export.
Get the predictions from a list of genes.
Find the BAI file for the given BAM file.
Returns a dictionary of observations for a given variant in a given store.
Parse a Gene object into a list of Transcript objects.
Returns a string representation of the given transcript object.
Returns the position of the end of the variant in the variant_obj.
Returns the most common frequency of a variant.
Given a variant object return a generator of clinsig objects in a human readable format.
Return the thousandg link for the given variant object.
Returns the cosmic link for a variant. If the variant doesn t have a cosmic
Generate a beacon link for a variant object.
Returns the ucsc link for the given variant object.
Returns a human readable version of the variant_obj. If the variant_obj contains none
Given a variant object return a list of the expected inheritance for that variant.
Returns a list of calls to the given variant_obj.
Get a list of variants for a given institute and case.
Export CLINVAR data for a given variant_id in a given institute.
Get clinvar submission for a given institute and case.
Retrieve an ACMG object for a variant in an institute and a case.
Post a variant for a given institute in a given case and return the classification.
converts a string to an institute case and acmg_complete_map
Upload a list of HGNC symbols to the HGNC panel.
Export verified variants to an Excel file.
str_ - Export all genes from the given adapter to a file - like object.
Parse a clnsig string into a list of dictionaries.
Parse the compounds from the compound_info and return a list of dictionaries.
Show a list of all genes for a given build.
Get a case by institute_id and case_name.
List all collections in the database.
Load an institute from the given internal_id. If no internal_id is
Returns a file handle for the given file_path. If the file_path ends in
Get the net of the request.
str_ Returns the next and previous numbers for a given net number.
str_ Check if the year is in the range of the current month. If it is
check if a given date is a valid weekday. If reverse is set to True the date
Parse a list of individuals from a Pedigree - formatted list of samples.
Parse Pedigree data from a Pedigree stream.
Build an evaluation object from a variant_id institute_id and case_id
Given a list of acmg_terms return a string representing the ACMG.
Returns a list of variants in a case.
Returns a list of all sanger variants for a given institute ID and case ID
Returns a variant object for the given document_id. If no case_id is given
Returns a list of variants for a gene. If no query is given all variants are returned
Returns a list of variant objects for the given institute_id.
get causatives by institute_id or case_id
Check if causative variants are present in institute. If no causative
Get the other causatives for a given case and variant.
Delete all variants of a given type for a given case.
Returns a list of variants that overlap with the given variant_obj. The variant_obj
Returns a list of all variants evaluated for a given case_id.
Get a list of variants for a given sample.
Get a connection to a MongoDB server.
This function takes a list of variant ids and a dictionary of form fields and returns a list
Returns a dict with the header values for each clinvar in the submission_objs.
Given a list of submission objects and a dict of submission headers return a list of csv lines
Load a panel from a file or directory. If path is none load all panel files.
Build an Exon object from a dictionary.
Delete a GenePanel by its ID and version.
Drop all indexes for all collections in the database.
Delete a user from the database. If the user does not exist it will be created.
Drop genes for a given build.
Drop all exons for a given build.
Delete variants for a case.
List all individuals for a collaborator. If no case_id is specified all individuals are
List all the cases in a collaborator or a specific case.
str user_email - Email of the user to be loaded.
Redirect to the user s login page or redirect to the user s login page if the user
str Builds an institute object from the internal_id display_name sanger
Delete an event from the database. If the event_id is not an objectid it
Return a list of events for a given institute. If a variant_id is
Returns a list of events for a given user. If no user is given all events are
Remove a phenotype from a case. If is_group is True then the phenotype is removed
Parse a list of genotypes from a variant and a dictionary of individual positions.
Check if a position is in a given set of coordinates. Return True if the position is
hpo_terms returns a list of HPO terms that match the given search term.
Show a list of transcripts for a given build.
Fetch and load all the exons for a given build. If there are no exons
Load a region from a HGNC.
Return a list of all events for a given month in a given year.
Get live items.
str_ is the path to the install_requires file. This is a recursive function.
Get the existing gene for a HGNC ID from a panel object.
Update a panel in the given store with the given csv_lines. If the option is
Create a new panel for a given institute_id panel_name display_name
Export a panel to a dictionary.
Returns a dictionary with the archive information for the given archive case in the given database.
migrate a scout database to a scout archive. If dry is set it will print
Show a list of HPO terms or a list of HPO terms.
Configure the extensions with the given app instance.
str_ Register all blueprints.
List all aliases for a given symbol or all aliases for a given build.
Build a panel object from the given panel_info dictionary.
Export the verified variants for a given collaborator.
Get a list of variants for a given document and case.
Get a VCF entry from a variant object.
Run a pymongo server on the given host and port. If livereload is
Generate a md5 key for the given list of arguments.
This method is called when the app is created. It will setup the connection to the database
str_ Set up the class attributes from a database object. This method is called by the
Update or load the indexes of the specified adapter. If update is True the indexes will be
Setup the scout database for the given institute_name user_name and user
This is the demo command. It sets up the scout adapter and sets the demo flag
Setup a connection to a MongoDB database. This is the main entry point for this command.
List all institutes. If no institute_id is specified all instit
parse genetic models from models_info and case_id return a list of genetic
Show a list of gene panels for a given institute.
Method to add an institute to the database.
get institute object by institute_id. Return None if not found.
Match a date string to a valid date string.
Get a datetime object from a date string. If no date string is given the current date
Generate a list of HPO genes based on a list of HPO terms.
Parse the rank score from the rank_score_entry and the case_id.
Add a user to an institute list. If admin is True the user will be
Check if a connection to the server is established. Returns True if connection is established False otherwise
Load the delivery report for a given case_id into the given report_path.
Add a user to the database. If the user already exists in the database it will be
Pileup view for a single sample of a BAM or BAI file.
Load a list of exons from an Ensembl file or a list of lines.
Update the compounds of a case.
Add HGNC and Ensembl links to a Gene object.
List all genes in HGNC for a given HGNC symbol and build.
Parse a list of HGNC lines into a list of HGNC gene objects.
get the open clinvar submission for a given user and institute
Update the given clinvar_id with the given submission_id and return the updated
Get the clinvar id for a given submission id.
This method adds the given objects to the submission_objects collection and returns the updated submission object
Update the status of a clinvar submission. If the status is the same as the
Get a list of clinvar submissions for a given user and institute.
Delete a clinvar object from the database. If the object is a variant it will
Returns a dict of all clinvars submitted in a case.
Parse a list of lines from a HPO file into a list of dicts.
Return a list of genes.
Returns a list of genes for a given HGNC. If no HGNC_
Get a list of genes for a given query.
Get an institute object and a case object. If case_name is not specified
str_ Returns a list of institute ids for the given login_user.
Returns the HGNC ID for the given gene_info. If no HGNC
Update a single gene panel in the database.
Load all diseases from the given API key.
Load disease terms from a list of lines. If no lines are provided the disease
Parse the frequency of a variant from its info_key. If the info_key is
Parse the sv_frequencies from the variant info.
Show a list of all the users in the adapter.
Compare two MimPanel objects and return a list of the ones that are not in the
Update the MIM version for each gene in new_genes with the new version old_
Adds a gene panel to the database. If the panel already exists it will raise an integrity
Get a panel by its id.
Delete a panel from the database.
Returns the gene panel with the given id. If no version is given the panel with the
Returns a list of gene panels. If no panel_id is specified all panels are returned
Returns a dictionary mapping HGNC IDs to the panels of the given case.
Update a panel in the database. If version is not provided the current panel will be updated
Add a pending action to the given panel_obj and hgnc_gene.
Returns a set of clinical symbols in the case_obj.
List all cases in a collaborator or a specific case.
Emits a record to the SMTP server. The record will be formatted according to the format
Load indexes from the database. This will drop any existing indexes and create a new one.
update_indexes - update indexes for all collections in the database with the new indexes in the
Drop all indexes for all collections in the database.
Build a mongo query for a variant.
clinsig_query creates a clnsig query from the given query and mongo_
Filter the query to ensure that the coordinate is in the correct format. If the coordinate is
Filter the query to only include the HGNC symbols and panels if they are present.
wipe database.
Parse a panel file into a list of gene dictionaries.
str load_hgnc_bulk - loads multiple gene objects into the HGNC
str load_transcript_bulk - loads a list of Transcript objects into the database.
Load a list of Exons into the database and return a list of Exons.
Get a single HGNC gene by HGNC identifier. If the HGNC
str_ - > str_ - > str_ - > str_ - > str_
str_ Given a HGNC symbol and a build number return a list of Gene
Get all the genes in the database sorted by build. If build is None return all the
Returns the number of genes in a given build. If no build is given the number of
Drop all genes from the HGNC database.
Drop all transcripts for a given build or all transcripts if no build is given.
Drop all exons for a given build or all exons if no build is given.
get all ensembl transcripts for a given build
str_ - > dict of HGNC symbols to Gene objects for a given build
str_ is the alias of the symbol in the HGNC database. The alias is
Return a mapping of HGNC identifiers to their corresponding HGNC IDs.
get all ensembl genes for a given build
_ to_hgnc returns the HGNC representation of the Gene object.
Add the HGNC ID to each gene in the given list of genes.
Returns a dictionary of coding intervals for the given string.
str_ is the name of the adapter to use for the Omim API. It
Get a list of all cases for a given institute.
Returns a dict with the institute_id and case_name as keys and the
Matchmaker matches for institute_id and case_name.
Match the target to the institute_id and case_name. If the target
Delete a matchmaker by institute_id and case_name.
Generate a PDF report for a given institute_id and case_name.
Diagnosis for a given institute and a case.
Archive or update the status of an institute in a case. If the status is
Assign a user to an institute in a case. If the user is already assigned
Returns a list of HPO terms for a given query.
Mark the validation of a variant for a given institute.
Mark an institute as causative or unmark it as causative.
Get the delivery report for a given institute and case. If no date is given
Share an institute with a case. If revoke_access is True the user will
Rerun an institute with the given case_name from the given institute
Open a research link for the given institute ID and case name.
Send a vcf2cytosure file for a given institute.
Multi - QC for a given institute id and case_name.
Returns a list of lists of all cases in the store. The list is sorted by status
Get a list of clinvar submissions for a given institute.
Generate the Mt CSV files for the given case and store.
Returns a list of diseases for the given HPO IDs. If p_value
Convert a VCF ID to a Cytosure ID.
Return a dict of institute_id and case_name for a given instit
Get sanger unevaluated for a given institute ID and user ID.
mme_delete - Delete a case from the MME server. Returns a list of
mme_matches returns a dictionary of matches for a given case and institute.
mme_match is a helper function to perform a MME match on a case.
Load genes from HGNC and MORIDMAP files for a given build.
Parse the callers of the given variant and return a dictionary of callers to their names.
Build a HGNC transcript object from a dictionary.
Loads an institute from the given internal_id and display_name into the given
parse cadd from a variant and a list of transcripts and return the highest cadd
Load a case from a VCF file.
Update a single variant in the database.
Update the rank of the variants in the case_obj based on the variant_type and
Update all the compounds of a variant. Returns a list of the updated compounds.
Update the compounds for each variant in the given list of variants and return the updated variants
Update compound variants in MongoDB.
Load a single variant from the database.
Insert or update a variant in the database. If the variant already exists in the database it
str_ Load multiple variants into the database. num_ is the number of variants to load
Assign a user to a case and return the updated case.
Share an institute in a case with a collaborator_id.
Function to diagnose an omim from an institute in a case.
Mark a case as checked or unmarked. If unmark is set to true the
Order verification for a given variant.
Returns a list of sanger events ordered by institute_id or user_id
Validate a variant and return the updated variant. If the variant does not exist return None.
Mark a case as causative.
Update a dismiss_variant for a given institute in a case.
Update an acmg in the database. If acmg_str is none update
Parse a list of ids for a given variant.
Parse a simple id from a chrom pos ref and alt.
parse_document_id returns a md5 key for the document ID.
Convert a HGNC panel to a HGNC format.
Get the variant id from a variant object and a family id.
Returns the number of cases for a given institute. If institute_id
Update the dynamic gene list for a given case.
Get a case by id or institute_id or display_name.
Delete a case from the database. If no case_id is provided the case will be
Add a case to the database.
replace the current case with the given case_obj and return the updated case object.
Update a case with a new family_id. If the new family_id is not
Submit an acmg evaluation for a given variant and return the classification of the evaluation.
Get all the evaluations for a given variant.
str_ to parse a list of transcripts from an Ensembl request or list of
parse ensembl gene request from HGNC and return a generator of tuples.
Parse the results of an ensembl transcript request and return a generator of the results.
str_ - Parse a list of lines from an Ensembl file into a list of
Parse an Ensembl file into a list of Exons.
Parse an ensembl exon request and return a dictionary with start and end values.
Initialize a logger with a stream handler and a file handler. If filename is specified the file
Get the phenotypes found in the genemap2 file.
Get a list of genes and a list of phenotypes for a given MORBID
Convert a string to an integer or float. Returns none if the string is not a number
Format a month as a string in the format of YYYY - MM - DD or YYYY -
Format the day and weekday for display in the day_not_today and day_today
Format the month name for display.
Helper function for the popover_helper method. This is the main entry point for the
get_panel_info - Get information about a specific panel from a list of lines.
parse_gene_panel - parse a gene panel from a file or a list of files
List all diseases in the adapter.
Load all HPO terms from the database.
Returns a dictionary of all the users in the store sorted by their event rank.
Parse the conservation of a variant into a dictionary of conservations.
Parse the conservation of a variant.
Get the general case information for a given institute. If slice_query is not
get_case_groups returns a list of groups of cases for a given institute
Render the given context as JSON and return it as an HTTP response.
get_year_and_month get_year_and_month get_month_
Check for cancelled events for a given date.
Return the HPO term with the given HPO_ID.
Returns a list of HPO terms that match the given query text and hpo_term
Returns the disease term with the given disease identifier. If the disease identifier is
Returns a list of all disease terms. If no hgnc_id is provided
Load a disease term into the disease_term_collection.
Generate a list of HGNC gene IDs from a list of HGNC terms.
read_hdf5 - read data from an hdf5 file.
Set up the time axis for the time series. The time axis is the start and stop
Compute the last day of the year of the year of the year of the year of the
Fill the channel with the median of the coarse - grained channel values.
str_ Calculate the extent of the time series.
plot the waterfall data for a given time range. If the time range is less than
Plot the time series of the data.
Write the filterbank to a file. The file must have the same number of bytes as
Calibrate the band pass using the N1 bandpass calibration.
convert data to a coarse - grained mean.
Returns the fracpols of the given string.
Write a list of strings to a file in Polaris format.
Returns the index of the closest value in xarr to val.
rebin d to n_x x n_y n_x x n_y
unpacks a number of bits into a numpy array. nbit is the number of bits
Get the difference between the stokes and the dio cross of a given type.
Plot the calibrated diode using the FoldCalibratedDiode
Calculate the size of the selection in bytes based on the number of channels and the number of
calc_selection_shape calculates the shape of the selection based on the start and stop times
Setup the frequency range based on the channel start and stop indices.
Populate the timestamps from the header of the file. If update_header is set to True
calc_n_coarse_chan calculates the number of channels in the coarse -
calc_n_blobs calculates the number of blobs in the dataset.
bool - True if the selection size exceeds max_data_array_size False otherwise.
Read all data from the file and return as a numpy array. If reverse is set to
Read a row of data from the file and return it as a numpy array.
str_ Read the data from the container and load it into the object.
Update the header with the data from the container. If the header is less than num_
Print information about the current state of the object.
Write the image to a file in a light or heavy fashion.
Write the container to an hdf5 file.
Write the light data to an hdf5 file.
str Returns the dimensions of the blob in chunk_dim for the given chunk_dim.
Get the dimensions of the chunk in the header.
str_ Returns the frequencies and data for a given time range. If no time range is
guppiraw command - line tool to plot histogram and spectrum of a Guppi
str - > dict - > None - > None - > None - > None - >
find_n_data_blocks - Find the number of data blocks in the file.
Print the mean std max min and mean values of the next data block in the file.
Plots a histogram of the next block of data. If filename is specified it will be saved
Generate a filterbank header from the header of the filterbank file and the number of channels
Find the size of the header in a file.
Function to integrate the frequency and frequency of each channel using the foldcal function. This function
get the center frequency of a signal in the range 0 to chan_per_coarse
str_ f_ratios str_ calon_obs str caloff_obs str
Get the time series for the diode. The time series is calculated using the diode
Returns the length of the header of a file.
Check if a file is a filterbank.
generate_sigproc_header generates the signature header string from the header of the file.
calc_n_ints_in_file - calculates the number of ints in a file
Returns a dictionary representation of the traceback.
Make a sub - parser for the given record type with the given arguments and types.
Create a parser for the zonefile command line.
Remove comments from the given text.
Add the default record name to the text if it is not already present in the supported_
str - > list of json_zone_file - > list of json_zone_
str Parse a zone file into a list of dictionaries.
quote_field returns a copy of the data with the given field replaced with a string.
Parse a JSON schema string into a Python object.
Generate a python package from a list of classes.
str_ Convert a record to a JSON compatible dict.
Load a record from a JSON - compatible dictionary.
Deserialize a JSON string into a record object. If the string starts with a valid JSON string
Add a schema to the schema registry.
Returns the schema for the given record name. If the record name is not in the schema
Returns a dict with all of the variables that can be serialized to a string. This is
Get the schema dict for a given record.
get_root_schema_dict - Get the root schema dict for a given record.
str_ reader for MR files. input_stream is a file - like object.
str_ writer to output_stream for job. outputs is a list of job outputs.
str_ Pushes a value onto the front of an ordereddict.
Returns a string containing the search results for the given query parameters.
Get the raw results for the given filters.
str_ Returns a list of all the entities in the collection that include the given attributes.
_get_entity_from_href - Gets an entity from the href of the result
give another quote an error if it is not in the list of quotes.
Returns a string that is safe to be used as a value in an SQL statement.
Returns an elementary rotation matrix for the given axis and rotation angle.
str_ Calculates the vrad errorky average for a given magnitude and spt.
calcparallaxerror - calculation of parallax error.
Returns the magnitude error of a Galaxy number g.
str_ Returns the magnitude erroreom of g.
averagetransitnumber of transits
str_ Returns the angle between two angles phi1 phi2 and theta2.
transform cartesian coordinates to the current rotation matrix and return the result as a tuple of x y
str_ r - > str_ phi - > float theta - > float phi - >
transform a covariance matrix to the Jacobian of the Jacobian of the Jac
str_ Returns the error scaling factor for the given observable and beta.
Unquote a value for use in a SQL query. If the value is a string it
Returns a new collection with the results of applying the given functions to each item in the collection
str_ Exclude all elements in the collection that pass a truth test. If func is not
Returns a new collection with items that match the given filter function. If no filter function is
takewhile returns a new collection with items that pass a truth test.
str_ dropwhile - Return a new collection with items removed while applying func to each item
Returns a new collection with the elements of the first collection containing all of the elements of the
Find the first node that matches any of the given criteria.
Return a tuple of the operating system and file path of the current process.
str_ Builds the minimal runs of the given list of events. The list of events
Print the results to output_file. If output_file is not specified the results are
Print results to output_file. If output_file is not specified output will be printed
clean_code cleans up the given code string and returns it as a string.
str_ round to next base
str_ Returns a list of blocks of size block_size starting from initial_boundary.
Calculate the cache access for the predictor and store it in self. results.
Analyzes the kernel and returns the sum of all the flops in the kernel.
Strips and uncomment the first line of an Assembly file.
Strips unreferenced labels from a list of lines.
Select the best block for the given list of blocks. If there are multiple blocks with the
userselect_increment asks the user for an increment and returns it. If the user
str - > str - > str - > str - > str - > str - >
Generate a sequence of numbers between start and stop inclusive. If endpoint is True the number of
Get the last modified datetime of all files in the given directory.
Check the arguments passed to the function. If they are not passed to the function the function
str_ Main entry point for the command - line tool.
This is the entry point for the update command. It parses the command - line arguments and
Create a symbolic symbol that is positioned as an integer.
Transform multidimensional array declarations to 1d array declarations.
Transform a multidim arrayref to a 1d arrayref.
str_ Find all nodes of type node_type in the AST. Returns a list of
Check that all the variables have the same number of datatypes.
Set the value of a constant. If name is a string it will be converted to an
str_ subs_consts returns expr that is a subexpression of self. constants.
str Returns a dictionary of variable names and their size in bytes. If in_bytes is
Calculate the relative offset for the given variable name and access_dimensions.
str Remove duplicate accesses.
Returns the length of the iteration. If no dimension is given the length of the current iteration
Get the loop stack as a generator.
str_ Returns a list of free symbols in the order they appear in the source and destination
compile_sympy_accesses compiles the accesses of the variables into a
str_ Returns the relative distances between the variable and the given sympy_accesses.
Returns a dictionary mapping variables to indices of the global iterator.
str_ Return the global iterator of the loop stack.
str_ to_global_iterator str_ to_indices str_ to_global_
max_global_iteration returns the maximum number of global iteration in the loop stack.
Print kernel information to output_file in a table format.
Print the variables and their values to the output_file.
Prints constants info to output_file. If output_file is not None it will be
str_ Print the kernel code to output_file. If output_file is not specified
Convert a math_ast to a symbolic symbol.
Get the offsets of an arrayref or c_ast. id or c_ast.
str_ Returns the basename of an ANF.
str_ Returns the index type of the loop_nest statement. If loop_nest is
Build a list of ast. decl for each constant in self. constants. If with_
str - > list of array declarations in the kernel AST.
Get the list of loop nests from the kernel AST.
str _build_array_declarations - Build array declarations.
str_ Find the inner most loop in loop_nest.
Build the initializations for an array.
Build a dummy function call statement for the kernel.
Build a kernel function declaration.
Build a list of scalar declarations from the kernel AST.
get_kernel_code - Get the code for the kernel.
str_ Build a function call to the kernel with the given name. If name is None
get the main code from the template and return it as a string. If as_filename
Analyse a binary file using IACA and return the instrumented binary file.
str_ Returns a unique identifier for this file.
str_ Returns the datetime of the last modification of the file. If the file does not
Returns the compiler and flags for the given compiler or the compiler_flags if none is provided
Parse a perfctr event string into a tuple of parameters.
_enforce_no_overlap - Enforces no overlap in the data.
Get the path to the header file.
Aligns a given iteration with the first - level cacheline boundary. If subtract is True
Returns a list of loads for each cache level in the machine. This is a list of
Get a list of all the hits for each dimension in the machine.
Returns a list of the misses for each cache level in the machine.
Get a list of all the stores in the machine.
Returns a list of evicts for each cache level. The returned list is a list of
Returns a dictionary of infos for each cache level. The keys are the cache names and the
Fixes an environment variable by setting it to value. If value is None the variable is
Configure the argument group for the given parser object.
Parse the description from the README. md file and return it as a string.
Build a purchase item from the given parameters.
Record a purchase in the sailthru client.
_get_course_content gets the content of a course from sailthru.
_get_course_content_from_ecommerce - Get course content from Ecommerce
Update the unenrolled list for a given email. If unenroll is set to
Send a course refund email.
Send offer assignment notification email.
Retry the order if the number of retries is greater than max_fulfillment_retries
Fulfill the order with email_opt_in. If email_opt_in is
Get the sailthru client for the given site_code.
Returns the value associated with the given key or none if the key does not exist.
str_ Set a value in the cache for a given key to the given value and duration
str_ Returns the value of a configuration variable. If the variable is not defined in the
Get the filename from the environment variables.
Returns the value of a dictionary based on the version of OPlus.
Returns the E + version of the system.
_dev_populate_from_json_data - Populate the table with data from a
Get a list of all external files in the database.
str_ Sets the default values for all rows in the schema.
Prepare the extensible information for the field descriptors. The cycle length is the length of
Returns a dictionary of short refs keyed by reference name. The key is the name of the
Get the value of a column based on a filter criteria. If the column does not exist
str update_value update_value update_value update_value update_value update_
_ update_inert _update_hooks _update_links _update_external_
add_fields - add multiple fields to the current object.
str_ Pop a value off the end of the cycle.
str_ Insert a new value at a given index in the list. If the index is
str Delete this record from the database.
Register a record hook that will be called when a new record is added to the schema.
Register a link.
Create a regular expression for the given line and intent_name.
str Returns the remaining duration in seconds between the start and the end of the time interval.
Serialize the object into a dictionary.
Perform an HTTP request to the given URL.
Get a list of endpoints for a given service type.
str_ Attempt to create a directory if it doesn t already exist.
Configure a service in the config file. If the service does not exist it will be created
Register a new CA with the server.
recording_state sends the status of the given recording_id. If the recording is
Update the status of an event in the database.
Update the agent state based on the current status of the service.
Returns the full path to the configuration file. If cfgfile is None returns the full path
Update the configuration file with the given configuration file. If no configuration file is given the default
Check if the config file exists and if so log it. If it does log a warning
Initialize the logger with the appropriate handlers and set the log level to the log level specified in
This is the home page. It displays a preview of upcoming and processed events. It
serve_image - serve an image from the preview directory and the filename of the image.
str_ Runs all modules in parallel.
Parse a VCALENDAR string into a list of events.
Get a list of upcoming events from the VCALENDAR.
control_loop is a long running loop that runs in a separate thread. It runs in
This is the main loop for the control loop. It runs in a separate thread. It
make_error_response returns a JSON response with an error message and a status code.
make_data_response - make a JSON response with a list of data.
Returns the current state of the service as a JSON object.
str_ Return a list of upcoming and recorded events in the database sorted by start date
Get a single event from the database. If the event is not found return an error response
Delete an event from the database. If hard delete is specified delete the event from the directory
Modifies the status of an event in the database.
str start_capture - Start a new capture for the given upcoming_event.
str_ Render the HTML to a fragment and return the result as a string.
Returns a list of all the resources in this resource manager.
Returns a dict representation of the object.
Create a Fragment object from a dict.
str - > None - > None - > None - > None - > None - >
str_ Initialize the JavaScript function.
Returns a string with all the resources in the given placement in HTML format.
Converts a resource object to a HTML string. If the mimetype of the resource is different than
Render a response to a fragment or a standalone response depending on the request. GET or request
Render the given fragment to a standalone HTML response.
Render the given fragment to a standalone HTML fragment.
calculates p - values and q - values for a given p - value and a given
to_one_dim_array converts a list tuple or pd. Series to a numpy
Lookup p s pep and q values from an error table.
Returns a dataframe with the final error values sampled from the cutoff values. The final error values
summary_err_table returns a summary error table for the given qvalues.
Compute the error statistics for the target scores and decoy scores using the pnorm or p
Find the cutoff value for a given FDR and PFDR. The cutoff value is
str_ ipf - Infer peptidoforms from an input file.
str_ Infer peptide sequences from an input file and write them to a output file.
str_ Infer proteins from a file and write them to a. protein file.
str_ Subsample infile to outfile with subsample_ratio.
str_ Reduce infile to outfile using osw. reduce. If outfile is none use infile
str_ Backpropagates the scores of the input file to the output file.
Get a group by its ID.
Create a new group.
Delete the group with the given id. Returns True if the group was deleted False otherwise.
Returns a list of all members of the group with the given id.
Update the members of a group.
Get the effective number of members in a group.
Check if a member is effective in a group.
aes_decrypt - Decrypts a key using AES - 256 CBC or AES - 256
Get the stdin of the process. If the process is running in a sub - command the
Get the stdout of the process.
Get the standard error of the process.
Get the output of the debug command. If the command does not exist it will return the
A context manager that yields the stdin of the process. The context will be closed when the
A context manager that yields the stdout of the process. If stdout is a file it will
A context manager that yields the stdout and stderr of the process.
Context manager to run a debug command in the context of a context manager. The context manager
Write an error message to the given file. If no file is given the error message will
Print the help message of the command - line interface. If the command - line interface is
Print the usage of this option to the given file. If no file is given print the
Print version information to the given file. If no file is given the version information will be
Resolve an option to its value in the given section. If the option already exists it is
Returns a copy of the context object.
Write the headers to the file - like object fp. If mute is set to True
Generate a temporary URL with the given method url object path expiration time and key.
str - > str - > str - > str - > str - > str - >
Get a client from the queue or create a new one if it doesn t exist.
aes_decrypt reads num_ bytes from stdin and decrypts them using AES256 CBC
\ x1b [ 1mNAME \ x1b [ 0m put_account
put_container - Create a new container at the given path.
Get the manifest body to be sent to the server.
Creates a new container with the given path and modification time and size.
Prints a message with the given trans_id with the current time and the given trans_
Returns True if the stream is empty. If the stream is empty returns False. Otherwise returns
str_ Encrypt the given key with AES256CBC and print the result to stdout.
Get the status of a given commit.
Get information about a pull request.
Get a list of pull requests for the given app and repo_config.
Set is_published to True for all the titles in the database.
Returns a queryset of SliderItem objects for the given request. If no amount is given
Render the Hero Slider for the given request.
str _readers _readers_mutex _order_mutex _access_mutex _
str_ Decrement the number of readers and release the access mutex if it is the last
str_ Acquire the mutex for writing to the file. The mutex must be acquired before calling
Remove a task from the queue.
str_ Returns the task with the given id or raises an exception if the task is not
str - Returns a list of all tasks sorted by task_id.
str - > dict
Convert a dictionary to an instance of this class.
Initializes the archive manager if archive_path is not None.
Create an index on the given url. If clean is set to True the index will be
json_encoder is a wrapper around the jsonencoder module. It is a wrapper around the
str - > None - > None - > None - > None - > None - >
str task_id backend category archive_args scheduler_args
Remove a task from the scheduler.
str - > list of items in the storage.
Validate task_id backend category and backend_args.
str_ Parse the archive_args and return a archivingtaskconfig object.
Perform a single job and publish it to the pubsub channel. Returns the result of the job
Schedule a job task to be executed in the given queue with the given arguments. Returns the
Cancels a job task by its task_id. If the task_id is not
This is the main entry point for the event loop. It runs the event loop and logs
Listens for messages from the pubsub channel and calls the appropriate handler for each message.
str_ Schedule the scheduler to be run. If the scheduler is in asynchronous mode start the
str Schedule a task for execution. Returns the job_id of the scheduled task.
Cancel a job task by its id.
Build the job arguments for the given task.
Register a view in the router.
str_ Reverses the given url_name if the current request is not a version
Returns the name of the view. If respect_name is set to True the name will
get_version returns a string representation of the given version. If version is None returns the
str_ resolve a key to a value or raise an error if the key is not found
Get the engine for the given scheme.
Parse the database and schema from the given path.
Parse a database URL into a databaseinfo object.
str Create a new user.
Returns a list of all the user s permissions.
Create a new password for the specified user. The form is validated against the password change form
Add the view s url_name to the field and return a tuple of the field and
Parse a boolean value.
Parse a string into an integer.
Get a parser for a given type.
Returns a dictionary with the given model fields and named_fields. If fields or named_
urlsafe_b64_encode - Base64 - encode a string and translate it to
str_ field_info - dict of field_name to create a field instance.
Create a validator class from a dictionary of data structures.
Returns a list of points that are unique in the given list of explored parameters.
Change the logging options from the given kwargs to the corresponding values in the logging_dict.
str_ Try to make directories if they don t exist. Prints an error message if
Get a list of strings from a list of strings.
Set the logger to use. If no name is given the default logger will be used.
extracts the environment and trajectories from the given trajectories.
Check and replace parser arguments with a rename function. If a rename function is given it will
str io. StringIO from a parser object to a string io. StringIO object.
Find the multiproc options in the given parser and return a nointerpolationparser
Find the multiproc keys in the given dictionary and return them as a dict.
Handle the parsing of the log_config file and return a nointerpolationparser.
Recursive function to handle a dictionary of log files. This function will recursively rename the log files
str_ Create logging handlers and tools for the current process.
Finalize all the tools and close the configuration files. If remove_all_handlers is
Start a new steam with the same name as the current one. If the current st
Write a line of text to the logger.
Returns True if two results are equal. If a and b have the same values returns False
bool_ True if two parameters are equal False otherwise.
Returns a copy of the class with the prefix naming applied to the class.
Add standard and fast access parameters to the trajectories.
Run the network on the given traj.
Euler scheme.
Adds the parameters to the trajectories.
str_ diff_lorenz - Lorenz diff
return a storage_service object and a list of keyword arguments that can be passed to the
storage_factory - factory function for creating a storage service.
Adds the parameters to the trajectories.
diff_roessler returns the diff between a and b.
str_ True if the parameters in the group are explored. False otherwise.
Build the model eqs from the synaptic model and the synaptic model.
str pre_build checks if the model needs to be built and if so builds the model
Build the model from the given trajectories and brian_list and network_
Build a model from a trajectories and a list of brian_list.
Check to see if we need to build the connections in order to make sure the connections are
str_ is the name of the method build_connections is called when the method is called
Add BRIAN parameters to the given Trajectory object.
str_ Compute the Fano factor for a given interval of spikes in a given neur
_compute_mean_fano_factor - Computes the mean fano factor for
Analyse the sub - run and compute the mean - fano - factor.
Add Monitor objects to the network.
str_ Make the folder for the plot.
Plots the result of the celia_neuron.
_print_graphs - Prints the spike monitor and the result of the analysis.
Analyse the sub - run of the brian graph and print the results.
Get the batch number from the command line.
explore a batch of data in the trajectories.
str_ Returns a list of variable names for this node.
str_ Returns the nntreenodefunc for this node.
_rename - rename the name of the object.
str _set_details - Sets the depth branch and run_branch attributes.
str _node_to_msg - Convert a node to a message.
_delete_node - Delete a node from the tree.
Remove a node or a leaf from the tree.
Translate a shortcut name into a boolean and a string.
str_ Returns the type tuple for the given start_node. If the start_node
Create a link between an act_node and an instance. If the act_node is
Check if split names are valid.
_set_details_tree_node - Sets the details of a tree node.
Returns an iterator over the nodes in the tree.
Returns an iterator over the children of the given node. If with_links is True the
recursive_traversal_bfs is a breadth - first traversal of the tree.
search for a key in the tree and return the node and its depth. If the key
_backwards_search - Search for a node with a name that starts with start_
str_ Returns a list of kids for this node.
_add_group_from_storage - add a group to the network from the storage
_add_leaf_from_storage - add a leaf to the network from the storage
str - Returns a list of the directory data for this node.
Returns a debug representation of the tree. This is useful for debugging and debugging debugging purposes.
Returns the parent node of the current node or None if the node is a root node.
Remove a link from the network.
str_ Remove this node from its parent if it exists. If it does not exist it
Returns the value of the named attribute or the default value if the attribute is not found.
f_get_children - Get the children of this node. If copy is set to
f_get_groups - Get the groups.
f_get_leaves - Get a list of the leaves of the node.
f_get_links - Get the links of the object.
f_store - store the trajectory in the group.
f_add_result_group - Add a result group to the network.
f_add_derived_parameter_group - method to add a derived parameter group
f_add_derived_parameter f_add_derived_parameter_group
fadd_config_group - Add a config group to the network.
f_add_config - add a config to the network.
Adds the commit variables to the given Trajectory object.
Make a git commit for the given environment and trajectories.
str_ flattens a nested dictionary into a flat dictionary with keys separated by separator.
str_ nested_dict - nests a flat dictionary into a nested dictionary where the keys
str_ Returns the list of arguments and whether the function uses a starstar or not.
Returns a dict of keyword arguments that match func with kwargs. If func uses a startstar
Format a timestamp as a string.
Convert a port to a TCP address. If no port is given a random port is created
Create a directory if it does not already exist. If it does exist it will be created
str Reset the state of the timer to the initial state of the timer. This should be
Returns the remaining time in seconds for the given index. If the index is greater than the
f_to_dict - returns a copy of self. _dict if copy is True
Remove a key from the dictionary.
convert F - annotation to a string.
Make an ordinary result for the given key. If the key is not present in the
make_shared_result makes a shared result from the given key and the given trajectory.
str _request_data _request_args _request_kwargs _trajectory_name
Get the data node from the storage service. If the storage service is not open a warning
str_ Returns True if item is supported by sharedresult. supported_data.
str_ Create a shared data object for the given item. If no name is given the
maniproc - safe function to store the number of running processes in the results.
Lock a request for a given name. If the request is already locked the lock will be
Send a done message to the client.
str Close the context and the socket if there is one. If there is no context the
Start the socket. If test_connection is set to True then test_ping will be
Retry a request until a response is received or the number of retries has been reached.
Acquires a lock. Returns True if the lock was acquired False if the lock was acquired
Listen for incoming requests and send them to the queue.
str put - puts data to the queue and waits for a response. If block is True
Detects the PID of the current process and sets it to the current PID if necessary.
This function handles the data received from the server and stores it in the storage service.
This is the main loop of the trajectories. It receives data and handles it.
Receive data from the queue and return it. If the queue is empty return None.
_receive_data reads data from the connection and returns it as a string.
str_ This method is used to store data in the storage service. This method acquires
Store a reference to a message in a given trajectory.
str - Stores a dictionary of references to a list of trajectories.
Collect all options from a section and return a dictionary of those options and their values.
Collect all the configuration parameters from the config file and return them as a dictionary.
Interprets the command - line arguments and returns a dictionary of the command - line arguments
Add parameters to the given Trajectory object.
Plot a pattern and save it to a file.
Cellular Automaton algorithm for 1D automata.
signal_update is called when the update signal is received. This function is called by the
Returns the overview group for this object.
srvc_load_several_items is a helper function to load multiple items
check that all the attributes are present in the trajectories in the trajectories.
srvc_store_several_items is a helper function to store multiple items
srvc_closing_routine flushes the file and the file store and closes the file
Extract file information from a list of keyword arguments and store them in self. _filename _
Create a backup of the given trajectory.
_trj_read_out_row - Read out a row of data from a
_trj_prepare_merge is called to prepare a trajectories for merging.
Check if the version is the same as the current python version. If not raise an error
Load exploration parameters from the trajectory group.
Store the explorations for the given trajectories.
Store the given trajectory in the HDF5 file. If only_init is set to True
str_ Create an instance of the leaf class for the given name in the given trajectory.
Helper function for _tree_store_nodes that stores trajectory nodes in DFS order.
Store a parameter or result table entry in the database.
_all_get_or_create_table - Get or create a table from the
Get a node from the HDF5 file by the name of the trajectory.
_all_insert_into_row adds all keys in insert_dict to row.
Cut a string up to a maximum length.
str _create_or_get_group - Create a new group if it doesn t
Create or get all the groups for a given key. If start_hdf5_group
_ann_store_annotations stores the annotations of the given item_with_annotations in
_ann_load_annotations loads annotations from a node.
_grp_store_group stores a group of nodes in the dataset. If recursive is
_grp_load_group loads a group of trajectories into the given group.
Load the trajectories and annotations from the given TrajectoryNode into the given hdf5
Extract missing flags from data_dict and flags_dict.
_prm_meta_add_summary - Add a summary to the rows in the
Add meta info to the given group.
Write data into a shared array. The flag can be one of array carray earray
prm_write_shared_table writes a shared table to the given hdf5_
prm_write_dict_as_table writes a dictionary to a group as a
Write data to a group in a pandas format.
Write data into an array in the same group as the other array in the same group.
Write data into an array in the given group. If the key already exists it will be
Delete a link from the trajectory file.
Get a table column from the given column. The column can be either an integer a string
Return the longest string size in a list of strings.
Read a dictionary from a PRM file and return it as a dictionary.
prm_read_shared_data reads a shared data object from a shared node.
_prm_read_array is a wrapper around _svrc_read_array
load_trajectory - Load a Trajectory object from a file or file - like object
make_set_name returns a set name for the given index. If the index is
f_set_properties - Set properties of the network object.
Adds a list of dynamic imports to the list of dynamic imports to be imported.
Set the default parameter for the given name with the given args and kwargs. If the parameter
Returns True if the run is completed.
Remove all parameters that have been explored. This is done by calling f_delete
Update self. _run_information based on run_information_dict.
Add information about a single run to the run_information dictionary.
f_lock - Lock all the parameters in the model.
f_lock_derived_parameters Lock all derived parameters.
str _finalize _set_is_run _set_crun _store_meta
str_ Load the skeleton of the v_name into the PyPSA model.
make_reversed_wildcards creates a dictionary of translated wildcards for the given number of
f_merge_many merges multiple trajectories into one.
Merge other_trajectory into self.
Renames all wildcards in full_name from other_trajectory to full_trajectory
Merge config from other_trajectory into self. _trajectory.
Merge other_trajectory into this trajectory with rename_dict. Note that rename_dict
Merge results from other_trajectory into rename_dict.
f_restore_default - Restore the default values of all parameters.
str _set_explored_parameters_to_idx - set access to all
make_single_run - Make a single run of the graph.
str - Returns a list of run names. If sort is set to True the names are
f_start_run Starts a new run.
_set_start sets the start time of the crun and updates the run_information
Set the finish timestamp run summary and number of runs in the v_crun.
Constructs an instance of the given constructor. If the constructor is a function it will be called
Returns a dictionary with the values of the parameters in param_dict. If fast_access
Finalize the run by removing all the child nodes and links from the run.
Delete a list of links from a trajectory.
Remove all children that match the given predicate. If recursive is set to True it will recursively
_pool_single_run wrapper for _sigint_handling_single_run.
Freezes a single run of a pool and returns a sigint_handling_single
_configure_pool - Configures the pool with the given kwargs.
_configure_frozen_pool configures the frozen_pool_single_run and niceness
_process_single_run processes a single run of sigint_handling_single_
Run a single scoop command with the given keyword arguments. If the command is not running
str_ The name of the logging manager to use. If extract is True the logging will
Configure the niceness of the process. If the niceness is greater than the number of
sigint_handling_single_run is a wrapper around _single_run. It
wrap logging handler with sigint handling if graceful exit flag is True. If graceful exit flag
Import and return a class from a full class string. The full class string can be a
str_ - class_name dynamic_imports - list of class names to import.
Returns the length of the range.
Returns the value of the function as a string. If the function throws an exception it will
Get the range of the function.
Returns a dictionary with the data and the explored range. If the data is not
Load the data from a dictionary and store it in self. _data and self. _
Load the parameter from a dictionary. If the parameter is an array parameter it will explore
str_ True if val1 and val2 are equal. If val1 and val2
str_ Check if the given data is a supported SPSP matrix.
Build a tuple of names for the given index.
Reconstructs a matrix from a list of data.
Load the data from a dictionary. This method is called when the data is loaded from a
Return a dictionary that stores the current object in pickle format. If the object has a range
Load the parameter from a dictionary.
f_translate_key - translate key to v_name if key is an int or
Returns a string representation of the values in the hdf5 file. The string is truncated if
f_to_dict - returns the data as a dictionary or a copy of the data
f_set_single - set a single item
str - If sparseparameter. _is_supported_matrix returns True. Otherwise returns False
Store the data in a dictionary that can be saved later later to the database.
Load the data from a dictionary into the _data dictionary. The keys are the names of
f_set_single - Function to set a single item in the data dictionary.
str_ store the current state of the object in a dictionary. This is used to store
str_ Load the data from a dictionary.
Merge all files in the current folder.
Create an saga session with the given user_id and user_pass.
Merge the trajectories into a single saga job. This is done by running a
Start all the jobs in the given saga session and wait for them to finish.
multiply trajectories x and y and add result to trajectories f_add
Run the neuron on the given traj. Returns the number of neurons run.
Post - processing of the neuron data.
Add the parameters to the trajectories.
Add an explore to the trajectories in the trajectories.
Extract sub - runs from the given trajectories.
Execute a single network run on the given trajectories. This is the main entry point
Method to add parameters to all components and the network runner.
Run the network on the given trajectories.
Make a filename from the given trajectories explored parameters.
Return the next element in the chain.
Called when a user presses a keyboard interrupt.
str_ Load config from file. If config is None return empty dict. If config is
Request the authorization_code and pin from the API and store it in self. authorization_
Request the access token and refresh token from the API.
Request a new access token and refresh token from the server and save it to the file.
Get the thermostats for the current user. If the user is not authenticated it will
Write the access token refresh token and authorization code to the config file.
Set the hvac mode of thermostat at index to hvac_mode
Set the fan min on time for the thermostat at index to fan_min_
Set the climate hold of the thermostat at the given index.
Delete a vacation from a thermostat.
Resume the thermostat at the given index. If resume_all is set to True
Send a message to the thermostat at the given index.
Generate a random delay between 0 and max_delay_selecting.
gen_timeout_request_renew returns the number of times the request should be renew
gen_renewing_time - Generate a random renewing time.
str_ Returns a copy of the current state of the FSM as a dictionary.
Reset the state of the device to the initial state. If client_mac is not specified
Get the timeout function for a given state and function.
Set the timeout of a function in a given state. If a function is already in the
select an offer from the list and send it to the client.
Send a request to the client.
set timers for renew and rebinding
Process a received packet and log it if it is a NAK. Return True if it
str_ init - Initializes the select loop. This method is called when the select loop
timeout_selecting - Check if the number of offers to collect is less than max_
timeout_requesting - Check if we have reached the maximum number of disovered requests
timeout_request_renewing - Timeout request renewing if request attempts exceeds max_
Timeout the rebinding of a request if the number of attempts exceeds the maximum number of requests
Receive an offer from the server and store it in the self. offers list. If the
Receive an ack requesting packet and raise an exception if the packet is not acknowledged.
Receive a NAK requesting packet.
Receive ack renewing packet. Raise bound exception if ack renewing is not possible.
Receive a NAK renewing packet.
Receive an ACK rebinding packet and raise a bound exception if the packet is not acknowledged
Receive a NAK rebinding packet.
str - > None - > None - > None - > None - > None - >
Returns a copy of the QuerySet with the given name and value set.
Add a parameter to the list of parameters. If a parameter with the same name and value
Returns a new QuerySet with the given name and value removed. If name and value are
get_status - get the status of a supervisor server.
Read the tdms file and return a tuple of the channel names and the data.
tdms2fcs - convert tdms file to fcs file.
Returns True if the left and right nodes are equal to the given cwd. Returns False otherwise
Create a new patch in Quilt and store it in the database.
Delete the next patch in the series.
str Delete a patch from the database. If no patch_name is given the top -
Check if a file exists in the given patch.
_backup_file - Backup a file to the quilt_pc directory.
Add a file to the database. If the file already exists in the database it will be
Run the command and wait for it to finish. If suppress_output is set to True
str_ Create the directory if it doesn t already exist.
str_ Copy this directory to dest. If dest is a directory it will be copied.
str_ Link the file to the given link. link can be either a file object or
str_ Copy this file to another location. If dest is a file it will be copied
Return the directory of the file.
str backup_file - Backup a file to a destination directory.
str unapply_patch unapplies the patch with name patch_name.
str patch_name - Name of the patch to apply. force - Force the patch to
str apply_next_patch - apply the next patch in the series.
str Apply all the patches in the series to the current object.
Read the series file and store the patch lines in self. patchlines and self. patch
Save the series to a. series file. This is done by encoding all the patchlines
str - > None - > None - > None - > None - > None - >
str_ Insert patches into self. patchlines and update self. patch2line.
str_ Add patches to the document. If after is None insert all patches before after.
str Remove a patch from the list of patchlines.
str_ Returns the list of patches after the given patch.
str_ Returns a list of patches before the given patch.
str_ Returns a list of patches until the given patch is found.
str Replace old_patch with new_patch.
str_ Create the directory and version file if it doesn t already exist.
Check that the database version matches the version specified in version_file. Raises an error if
str_ Add this argument group to the given parser.
str_ Add this argument to the given parser.
str_ Create a new parser and add all of the base arguments and sub - parsers.
str_ Set the args and kwargs of the sub - commands.
Add the sub - parsers to the given parser. Sub - parsers will be added to the
Check if a file exists in a given patch.
str_ Check if a file exists in the next patch in the database.
Revert a file to a previous version. If patch_name is provided it will be
str _import_patch - Import a quilt patch from a file or a new name
str_ Import a list of patches into the quilt_patches directory.
str_ Add a way to the list of available ways.
Returns a generator of node ids that are missing from the network.
str_ Add a node to the graph.
Build a route from an osm relation.
Create a long route name from a relation and a short name. If short_name is
Returns the agency id for the given relation.
This function processes the input file and creates the appropriate handlers for them. This is the main
str_ is the type of the relation rel is the relation object rel is the relation object
Takes a list of agencies and returns a generator of agency objects that can be patched
Generate dummy trip stoptimes for a given trip id and a list of stops.
Write the contents of the buffer to a zip file. The file is written to filepath.
Write the contents of the zip file to the given destination.
Build an agency object from a relation and a list of nodes.
extracts stops from a relation and returns them as Stop objects.
Build a shape from a relation and a list of nodes and a list of ways.
Returns a list of supported versions of the device. If the device does not have a supported
This function sends an APDU to the device. The data parameter can be a string or
u2f. authenticate for a list of U2F devices. If check_only
Register a new app with the device and return a tuple of the response and the client data
Authenticates a client with a given app ID and facet. If check_only is
u2f. register - Register device with u2f. params - Device parameters facet
Convert a unicode object to a unicode string.
Class decorator to wrap all methods of a class with a flawless. client. client
str Returns True if filepath matches at least one of self. only_blame_patterns
Returns the email address for the given email. If the email is not valid returns none.
str_ Returns the entry in the entry_tree that corresponds to the given entry.
Convert markdown to rest.
Starts a flawless web server.
url_to_image - Get a URL as a stringio object and return it as
str_ to_image - Convert a string to an image object.
check if the image is big enough to fit the given size and raise an error if not
str Check if width is big enough to fit into the image. Raises imagesizeerror if
str_ Check if height is big enough to fit into the image.
Returns the category object for the given item and source_name. If the category doesn t
parse_totals returns the value of the given item as an integer or num_ if
str_ Get all the items in the source file.
Save an error to the list of errors that occurred during the execution of the function.
str_ Parse the source and save it to the database. If an error occurs it will
Parse a single item into a dictionary of data.
str get_instance - get an instance of the model based on the unique fields in the
str save_item - save_item - save_item - save_item - save
Download a file from url to dest. If the file is gzipped it will be downloaded
Load the source file into memory and set the loaded attribute to true.
str - > list of items from the source file.
allow_network_access - Set whether or not to allow network access.
Add files to the sandbox. If read_only is set to True the files will be
Add a file to the sandbox and rename it to new_filename.
Get a list of all canvasenrollments for a given course.
Get all enrollments for a given SIS course.
Get all canvas enrollments for a section.
Get all enrollments for a section by its sis_id.
Returns a list of CanvasEnrollments for the given regid.
Enroll a user in a course.
Get a list of all roles in an account.
Get a list of roles in an account by its SIS ID.
Returns a list of roles that are effective in the given account.
Get a canvas role for a given account and role ID.
Get a role by its account sis_id and role_id.
Get a single canvascourse given a course id.
Get a single course by its SIS ID.
Returns a list of canvasc courses in the specified account.
Returns a list of courses in the specified SIS account.
get_published_courses_in_account - Returns a list of the courses in the
Get a list of all courses published in a SIS account.
Get all courses for a given regid. Returns list of Canvascourse objects.
Create a new canvascourse for the given account.
Update the SIS ID for a given course.
Get activity by account and term id.
Returns a list of Grade objects for a given term in a given account.
Get the statistics for a given term in a given account.
Get activity by SIS Course ID.
Get assignments by SIS Course ID.
Returns a list of student summaries for a given SIS course.
Get the student activity for the given sis user ID and sis course ID.
Get the student messaging for the given sis course and sis user id.
Get a list of external tools in a given account.
Get a list of external tools in a course.
Create a new external tool in the given context with the given json_data.
Update an external tool in a context.
Deletes an external tool from a context.
Check that the object has all of the required parameters.
Get the user with the given id.
Get a list of users for a given course.
Get a list of users for a given SIS course.
Create a new user in a canvas account.
Get a list of logins for a given user.
Updates a user login. If account_id is None the current canvas account will be used
Get the next page from the response.
_get_resource_url - Get the url of a resource. If auto_page
_get_paged_resource - Get a paginated resource from the given url with the
_get_resource - get a resource from a url with the given params and data_
_put_resource - Send a PUT request to the given url with the given body.
_post_resource - POST a resource to the given url with the given body.
_delete_resource - delete a resource from the database.
get a list of CanvasAdmin objects for a given account_id
Create a new admin for the given user in the given account. The role parameter can be
create admin by sis_account_id user_id and role
Delete an admin from a user s account.
delete admin by sis_account_id user_id and role
Create a new grading standard for a course.
_get_section - Get a single section by id.
Get a single section by its sis_section_id.
Get a list of all sections in a course.
Get a list of sections in a course by its sis id.
Returns a list of sections with students in a given course.
Get a list of Sections with students in a given SIS in a given course
Create a new section in a course.
Updates a section with the given id name and sis_section_id.
Get a list of quizzes for a course.
Get a single account by its ID.
Get a list of sub - accounts for a given account id.
Update an existing account.
Updates the SIS account ID for the given account ID.
Get the canvasssosettings for a given account.
Update the canvassosettings for a given account.
This method returns the term with the given sis_term_id or None if not
Import a CSV file into a canvas account.
Imports a directory of CSV files into the SIS server.
Get the import status of a given SIS import.
build_archive - Build a zip file with the csv_files in the given directory.
get a list of assignments for a given course_id
Updates an existing assignment. Returns the updated assignment object.
Get a list of available report types for a given account.
Get a list of reports of a given type for a given account.
Create a report of a given type for a given account. If term_id is not
Create a course provisioning report.
This interface is used to create an SIS export report for a course.
Create an unused courses report.
Returns a list of report data from the given report object. If the report object is not
Get the status of a report.
Delete a report.
Move all detections in the given label to the given location dx - dx and dy -
hflip detections around the left and right corner of the label.
Returns a dict with all the fields of an object as keys and all the related objects as
get_config - Get the config from the settings and return it as a dict.
Returns the empty_value of the edit or inplaceedit_edit_empty_value if
Create metrics from a list of metricconfigs.
Set up logging for this module.
str Configure self. registry with process collector if include_process_stats is True.
Create a new metric for the given metric configs.
Get the metric with the given name and labels.
Return a response with the home page. If the user has a description the home page will
Returns a response with the metrics in the registry. If a handler is provided it will be
Wolframalpha query.
str_ fix httpmessage. get_content_type http_client. httpmessage.
This method is a wrapper around urllib. request. urlopen to make a request to the API
Returns a list of all pods assumptions and warnings.
Returns a generator of all the pods that have a primary or a title equal to the given
Encodes the data into a request object. If the data is None the request object is returned
Make an HTTP GET request to the given URL and return the result as a Python object.
Make a DELETE request to the given URL and return the response as a dict.
Make a PUT request to the given URL with the given data and files.
Make a POST request to the given url with the given data and files.
str group_length number of sentences in total_nb_sentences into groups of group_
disambiguate_pdf disambiguates a PDF file.
disambiguate_query disambiguates the given query and returns the disambiguation result
Segment a text string into a list of segments.
Get the language of the given text.
Get a single concept by its id and language.
str_ Fits the ensemble and predicts the predicted values for each row in the input
str_ Returns the score of the model.
str_ Fit the model and predict with the given features and class_labels.
Score a set of features with a given set of class labels. If scoring_function is
str - > np. ndarray - > np. ndarray - > np. ndarray - >
str - The score of the MDR matrix for each feature in the feature_map.
Return a vector of members.
Return a vector with the given members.
eval_file - Evaluate a file and return the result as a string.
eval_stream - Evaluate all forms in the given stream and return the last result.
_ eval_str - Evaluate the given string s and return the final result. _ eof
Bootstraps a repl module in the given namespace. The module will be imported in the given
Runs the CLI or STDIN program with the given arguments.
Adds a method to a key in a map. The method will be called when the key
str add_method - Add a method to the multifunction.
Remove a method from a map.
_ remove_method removes the method with the given key from the multifunction.
Returns True if the variable v is a macro.
str_ Returns the line and column number of the input sequence.
Raise a parserexception if the node is a recur.
_assert_recur_is_tail - Asserts that the current node is the
Resolve a bare symbol into a maybeclass or varref.
Resolve a symbol into a maybebeclass maybehostform or varref.
Parse the given readerform as an AST and return the result as a node.
Returns true if warn_on_shadowed_var is set. If it is set
Return a string representation of a list of entries.
Returns a string representation of a sequence of objects.
Return a string representation of an object.
Fixes missing locations in the tree.
Compile and execute the given readerform in the given module with the given wrapped function name.
_incremental_compile_module compiles the given module into the given module object.
str - > None - > None - > None - > None - > None - >
Compile a list of Python bytecode into a module.
Convert an iterable into a sequence of strings. Returns an empty string if the iterable is exhausted
mungeMungeMungeMungeMungeMunge
Returns a fraction of numerator and denominator.
Returns a logging handler with the given level and format.
str - > str - > str - > str - > str - > str - >
Split a collection into n sub - collections of length n.
Read a namespace and name from the reader context.
_read_coll reads a collection from the reader and calls the given function with the collection
Read a list from the reader and return it as a llist. list.
Read a vector from the reader.
Read a lmap. map from the reader.
_read_str reads a string from the current reader context.
Read a symbol from the reader.
Read a keyword from the reader and return it. Raise syntaxerror if a keyword is not
Read an imeta object from the reader and return it as an imeta object.
Read a quoted string from the reader and return it as a list of strings.
Expands a syntax quoted form into a list of strings.
Read a syntax - quoted form from the reader and return it as a readerform.
Read a Dereference form from the input stream and return it as a lispform
Read a single character from the reader.
_read_regex reads a regular expression from the stream and returns it as a pattern object
Read a reader macro.
_read_next_consuming_comment - Read the next consume comment.
Reads the next token from the reader.
Read a string and return an iterable of readerform objects.
Read a file and return an iterable of readerform objects.
Update the location of the current line and column. If c is a newline character update the
Pushes the current index back to the top of the stack.
Returns the next token from the input stream.
_basilisp_bytecode - Build a Basilisp bytecode.
Returns a list of bytecode from the given cache_data. If the cache_data does
_cache_from_source returns the full path to the cache file from the given source
str hook_imports - add basilispimporter to sys. meta_path if
Find a module spec in the given path. If path is none then sys. path is
Execute a cached module with the given fullname and loader_state and path_stats.
Execute a module in the context of the given module loader_state and path_stats.
Execute the given module. If the module has a cached version of the module it will be
Returns a symbol with the given name in the given namespace. If no namespace is given the
str_ - > list of complete keywords in a string. text - > list of complete
Returns the kw_cache or creates a new keyword if it doesn t already exist.
Returns a keyword with the given name in the given namespace or None if it does not exist
_chain_py_ast returns the dependencies and nodes of the given generated pyAST.
_collection_ast returns the AST representation of a collection of nodes in the form.
_ast_with_loc sets the lineno and col_offset attributes of the generated ast
str_ wraps a function to return a generated ast with the line number and column number.
str - > generatedpyast. generatedpyast. with_lineno_and_col
Returns True if the variable is a dynamic variable.
Return True if the variable is redefable.
str - > ast. ast. expr
Expressionize a generated function body into an ast. functiondef with the given name and arguments
str_ Converts a Do node to a Python AST.
Generate a function name from a string or a function name if no string is given.
Convert a function s arguments to a Python AST.
str_ Converts a single - arity function into a generated Python AST.
_fn_to_py_ast - Converts a function call to a Python AST.
Generate a Python AST representation of the body of a if statement.
str_ Convert an invoke node to a generated Python AST.
str_ Converts a quote node to a Python AST.
str_ Converts a loop recur into a Python AST.
Convert a recur to a Python AST.
_set_bang_to_py_ast converts a set bang to a
str _throw_to_py_ast - Convert a Throw node to a Python AST
Convert a try node to a Python AST.
Convert a local symbol to a Python ast.
Find a variable in the given namespace and return it as a generated py AST.
str_ Converts a variable reference to a Python AST.
_interop_prop_to_py_ast - Convert a HostField to a Python
str_ Converts a maybeclass node to a Python AST node.
Convert a maybe_hostform node to a Python AST.
_const_val_to_py_ast - Convert a const value to a Python
Convert a collection literal form to a Python AST.
Generate a Python AST from the given Lisp AST.
Iterate over the imports of the given context.
Return an ast. importFrom node for a module import.
Return an ast. assign node with a namespace variable assigned to py_ns_var.
t - > str - > str - > str - > str - > str - >
Returns a set containing all of the members of the type t.
ast. excepthandler AST node - > ast. excepthandler AST node - > ast.
str_ returns None if the node is not a constant name constant num or str.
str_ Returns a copy of the functiondef node with all dead code removed.
str_ visit a while node and return a new ast. ast. while node.
str_ visit a try node and return a copy of it with all dead code removed.
_new_module creates a new module with the given name and optional docstring.
str_ Returns the first element of the sequence or None if the object is not a sequence
str_ Returns the rest of an iseq. If o is not an iseq returns
Returns the nth item in the collection. If i is greater than the number of items in
Returns the nth element of the collection.
str_ cons cons a list of strings or a sequence of strings.
str - > str - > str - > str - > str - > str - >
Concatenate multiple sequences into a single lseq. sequence object.
assoc returns a new key - value pair in a map or a new key - value pair
str_ conjugate of the conjugate function of the given collection. If the collection is
deref - Dereference an object. If the object is an ideref
str_ if v1 is equal to v2 otherwise returns False.
Divide two numbers and return the result. If x and y are integers return the fraction
Sort the elements of a collection in ascending order. If a function is given it will be
str_ if coll is an iassociative collection return True if k is in the collection
str_ Get a key from a dictionary or a dictionary.
str - > lisp - > lisp - > lisp - > lisp -
str_ Converts an object to a Python object.
Return a string representation of an object.
Collect arguments into a list of iseq. iseq. iseq. iseq.
_basilisp_fn wraps a function so that it can be used as a base
Resolve an alias for a symbol s in a given namespace. If s is already an alias
Resolve the variable name of a symbol s in a namespace or None if no such variable exists
Add a generated Python string to the current namespace. If no namespace is given the current namespace
Returns a new variable with the given name and value in the given namespace. If the variable
Interns an unbound variable in the given namespace. If dynamic is True the variable will be
Find name_sym in namespace ns_sym. Return none if name_sym is not
Find a variable in a namespace.
Find a variable in a namespace. Raise runtimeexception if it is not found.
str If module is a gated import add it to the default_imports list.
Add an alias to the symbol table.
Return the interned name of a variable. If force is set to True the interned
Returns a new map that associates sym with new_var. If new_var is
Find a variable in the symbol table.
str add_import - Add a symbol to the list of imported modules.
Get the imported module for a symbol or None if no such module exists.
Add a reference to a variable. If the variable is not private add it to the list
Returns the reference to the symbol sym. If sym is not a reference it returns None.
Returns a map of references to all variables in other_ns_interns.
str_ Refer to all namespaces in other_ns.
Get or create a namespace in the given namespace map or create a new one if it doesn
Get or create a namespace by name or create it if it doesn t exist.
Get the value of the named symbol. If the symbol is not found None is returned.
Remove a namespace from the namespace map and return it. If no namespace exists return None.
Completes all aliases that start with prefix. If name_in_ns is not None
Completes all imports and aliases that start with prefix. If name_in_module is
Completes all interns that match the given value. If include_private_vars is
Returns a list of all references that match the given value.
Completes the given text and returns a list of complete aliases and interns.
Returns a tuple of the arguments of the function. If the function does not have any varargs
Returns a list of the given members. If meta is not specified only the members are returned
Returns a list of the given members. If no members are given all members are returned.
decrypts the given token and returns the decrypted payload. If the given leeway is
Encrypt a JSON string using the given key store and key purpose.
str_ Delete an item from the cache.
str_ Returns a tuple with the selector comparison and argument.
Parse a FIQL string into a FIQL expression.
str_ Writes a NDB model to a file - like object fp.
str_ object_hook_handler - object_hook_handler - object_hook_
Decode a date string into a datetime object. If the value is a string it will be
str - > str - > str - > str - > str - > str - >
_ndb_type_encoding is the default encoding function for NDB types.
Validate the version of leicacam. Returns the version string or None if the version is
A robust topological sort of the components in a graph.
str_ Set the parent of the fiqlobject.
Returns the parent of the object. Raises fiqlobjectexception if the parent is not
str_ Add an element to the working fragment.
Adds an AND operator to the expression and returns a new expression.
Adds an OR operator to the expression and returns the resulting expression.
str_ + incomming + return a list of message dictionaries from a receive message.
Convert a list of tuples into a dict.
str_ Check if a message is in the list of messages. If not return none.
Prepare a message to be sent to the server.
This method is used to flush the buffer to the socket. It will block until the buffer
Enable a slide in a Well - Well - Well - Well - L
Save a template to a file. If filename is not specified the current template will be saved
Get information about the device. This is useful when you want to get information about the device
Locates the package. json file in the systemjs_package_json_dir setting
str_ Parse the package. json file and return a dictionary.
Handle an API error with a JSON response.
Validates the response from the Yourls API and raises an exception if the response is not
str _homogenize_waves - Homogenize two waves.
Interpolate indep_vector to indep_vector using scipy. interpolate. interp1
_get_indep_vector gets the indep_vector between two Waves.
Verify that two Wavelengths are compatible. If check_dep_units is set to
str_ Load the system. js manifest and return a dict of all bundle files.
Create a named tuple with the name of the callable and the name of the callable module.
Expands a short URL into a list of short URLs.
Shortened URL stats.
This method returns the total number of clicks and total number of links in the database.
This method returns a dictionary with the total number of clicks and total number of links in the
str_ Chunks an iterable into chunks of a given size.
Recursively flattens an iterable into a list of strings. If map2iter is not
str_ - > str_ - > str_ - > str_ - > str_
Create a dummy class with the given name and attributes.
Convert a human - readable string to a number.
Trace a module and return a list of the results. If no_print is set to
defines the links to the dependencies of a module.
Add a common entry to plist.
Make a multi - entry in plist from pkg_pyvers and ver_dict.
str_ to_words returns a string with all of the words in the given item.
Generate chunks of noise data.
Parse the data into chunks based on the given frequency vector and data format. The data is
Bound a waveform to a range of indep_min and indep_max.
Build a list of units based on indep_units dep_units and indep_
Return a copy of the wave with the given operation.
str_ Calculates the running area of a rectangular mesh.
Validate that the min and max indep_min and indep_max are within the
- - - - - - - - i a u A c s - - - -
Calculate the inverse cosine of the dependency vector.
Calculate the arcsine of the dependency vector.
Angle about the horizon of the wavelist.
Return a copy of the wave object with the dep_name and dep_unit set to
Return a group delay for the given wave object. The delay is the phase of the wave
Calculate the logarithm of a waveframe.
Calculate the square root of each unit in the waveframe.
str_ Create a copy of the wave object with complex components converted to complex.
Return a copy of the wave object with the dep_vector converted to float.
Return a copy of the wave object with all integers converted to integers.
Find files in the systemjs_output_dir and return them as a list.
Get the short description from the long_desc string.
str_ Build an expression from a list of tokens.
Returns the next item after pos. Raises runtimeerror if there is no next item after pos
Return a list of functions in the expression.
Parse an expression from the given text and return it as an astroid. Expr object.
Remove consecutive delimiters from a list of strings.
Convert a number into a scientific representation of the number.
Returns a string with the number in the scientific notation. If the number is a
peng_float returns a float based on the suffix of snum. If snum
peng_frac returns the fractional part of a peng number. If the peng
peng_mant returns the peng_mant of the string snum.
bool - True if the app needs to be compiled with a. js extension.
Bundle a JSPM file to a file in the current working directory.
Returns the trace of the given app. If the app is not traced an error is
Returns True if the hashes of the modules in the dep_tree are the same as the
Format a hexdump string into a string that can be written to a file.
Parse a docstring and return a dictionary of parameters and return values.
Returns a list of all valid identifiers in the current context including built - in functions.
Given a string representing a module name and an object return the object that was added to the
_split_line - Split a line of text into a list of strings.
Check if the current context is an interactive context. If so invoke all of the init commands
_builtin_help returns the help text for a built - in function or directory.
str - > None - > None - > None - > None - > None - >
Returns a string listing of all functions and built - ins in the given context.
_is_flag - Check if arg is a flag or not.
Extract the value of an argument from a list of remaining arguments.
Invoke the method on the given line of text. If the line is not a string return
Classify a section name into the appropriate section class.
_classify_line - Classify a single line of text.
Given a list of lines return a list of paragraphs. If use_indent is set to
Convert a value to a given type.
Convert a binary value to the specified type.
Returns the size of the given type. If the type is not found returns 0.
is_known_type - Check if type_name is known in known_types.
Split a type name into its base type boolean and a list of subtypes.
Instantiate a new type with the given base and subtypes. The base type must be registered
Check if the given format is known for the given type. If the type is not known
Loads the types from the given module.
Add a parameter to the function.
str_ Returns the return value of the function as a typed type.
str_ Custom return value to be used in a method call. The default return value is
Match a short name against the list of possible names. Raises an argument error if there are
str_ Returns the type of the parameter with the given name. If the parameter is not
str_ Format the return value of the function.
Convert a positional argument to a string.
str_ Convert an argument to the type specified by the parameter_name. If the parameter
Returns a string representation of the error message.
Returns a dictionary with the message class name and parameters.
_check_and_execute - Check and execute a function with args and kwargs.
Takes a list of validators and returns a list of tuples with the name of the validator and
Find all the objects in the given container and return them as a dictionary. If the object
Returns a tuple with the name and context for the given module. If the module has a
Get the help text for a function.
docannotate is a decorator that adds metadata. load_from_doc to the decorated
Decorate a function so it can be called with an annotated metadata. If name is not
Return the short description of a function.
This function will load all the commands in the project. It will also load all the commands
Installs all tasks in the crontab. Returns the number of tasks installed.
Print the list of tasks in the crontab.
str uninstall kronos crontab
str_ - uri str - local_path str - local_path to create a file
str_ Loads the project configuration from the file system.
Save a list of projects to the project config file.
Returns a dictionary of projects that are dependent on this project. If recursive is set to True
Initialize the given project and return a list of the names of the init_languages failed.
The function that will be called when the function is called. It will raise a NotImplemented
str_ Returns the result of applying the function f to the current state. If pure is
View the fold in the given state. Raise an error if the fold is not a fold
Convert to a list of values.
Return the result of applying the function fn over the current state. If the state is not
Set the value of the expression to the given value. If the expression is not a setter
Iterate over the given iterable and return the result as a new state object.
Return the kind of the optics.
str_ Main entry point for the game. This is the main entry point for the game
step_towards returns self + other where self < = other and other < = self
Handle the input of the game.
str_ Advance robots to the next player and remove any crashes from the list.
End the game. If the game is not running a message will be sent to the user
Moves the player to the given board position.
Play the board and print the winner move.
Make a move of the player at x y. If the player is already in the board
Returns the winner for the given string.
Returns a generator that yields the potential wins in the board. This is a generator that yields
str - Add item to the list of items to be processed and upload if needed.
open_spider - Open a new spider and set its timestamp to the current time.
Upload a single chunk of data to S3.
Make a gzipped file object from the list of items and return it as a bytes object
Returns the state of the account at the given address. The address can be a string or
Get the current state of an asset.
Get the hash of the block at the given block_index.
Get the system fee of the block at the given block_index.
Get the contract state for the given script hash.
Get the raw transaction data for the given transaction hash. If verbose is set to True the
Get the value of a key in the storage of a script.
Get the output of a transaction by its hash and index. The output is returned as a
invokes a script with the given parameters. The script hash is the hash of the
Invoke a function with the given script_hash and operation with the given parameters.
_invoke_script - Invoke a script on the server.
Send a raw transaction to a HextX instance.
Check if an address is valid. Returns a string containing the address or None if the address
Make a request to the remote server and return the response.
is_hash256 returns True if s is a valid hash256 string. If s is
is_hash160 returns true if the string s is a valid hash160 otherwise returns false
Returns a list of contract parameter types that can be used to invoke the contract.
Decode the invocation result for a method invocation.
str - > datetime - > datetime - > datetime - > datetime - > datetime - >
str - > str - > str - > str - > str - > str - >
Render the barcode and return it as a string.
Render the code and return the rendered code.
Command line interface for configfileresolver.
Download a file from S3 to a local location.
Upload local_path to remote_path using s3conf. storages. S3
str_ is the name of the storage storage to be used to store the configuration files.
Show the diff between the local config and the S3 config.
Parse an environment variable and return the key and value. If the value ends in a backslash
Set the username and password to be used for authentication. This is useful when you want to
Set the API key to be used for requests. This is used to set the API key
Returns a generator of JSON objects from the contents of the given folder in JSON format.
Returns a dict of all the schemas in the json_path. The keys are the schema
Get the schema of the model.
str_ Returns a jsonschema. refresolver. Resolver object for this schema.
Validate an object against the schema of this schema.
Returns a list of all valid examples in the schema.
Returns a list of invalid examples in the schema.
Get the URL for the user s authorization page.
Process a user URL and return the auth_code.
auth_get_token - get a new token for the current user. check_scope
Returns the user ID of the current user.
Returns a list of files in the folder specified by folder_id. Optionally limit and offset
Creates a new folder with the given name. If the folder already exists it will be overwritten
Add a comment to an object.
Decode an object into a unicode string. If force is set to True the object will be
str_ Sets the drop_target attribute of the object and all of its children.
Start a drag operation on the menu
str_ Set the default tlw for the designer and inspector.
str_ Return an inspector for the given object.
Migrates a string in the font dictionary to a string in the font dictionary if the string
Load a page from a file or URL. If no location is given the current page is
Sends a message to the user and logs the message to the console.
Create a wellcome tooltip window and display it in a wx. TooltipWindow object.
Handles mouse down events on the notebook. This function is called when the user clicks on a
moves the mouse to the start of the current object or the end of the current object
key press event handler
Delete all objects in the selection and re - render the inspector.
Duplicate all objects in the selection and display them as a new object in the inspector.
str_ Refreshes the current snapshot of the object. This is done by saving the snapshot
Calculates the best position of the tooltip window given a wx. Frame or wx. TextArea
Get the python data for a given item.
Set the data of a specific item in the list. Returns the id of the new item
Find the data for a given py_data and return it. If the py_data
delete an item from the list
delete all items in the list
str_ Clear all columns from the table and remove all columns from the table.
_set_selection sets the selection to the given index. If index is none sets the
Get the selection of a string. If multiselect is set to True return a list of
Set client data for a specific item in the list of items to be displayed on the screen
str_ Append a string to the end of the list
Returns the wx component object with the given name or None if the object does not exist.
Add a child to the sizer
Set the parent of the component.
draws the background of the bitmap in a tile of size w x h
event handler for erasing the background of the bitmap
Draw the label on the wx. Plotter object. This is called when the label is
_get_column_headings - get column headings sorted by column index.
resetview - reset the view to the initial state of the grid object.
Update the values of the view in the given grid object.
update colattrs for each column in self. columns and update colsize and colattr for
Sort the data by the given column. If the column does not exist it will be created
Remove all items from the list and reset the key to the last item in the list.
Creates a combobox with the given id and event handler. The event handler will be called
str - > None - > None - > None - > None - > None - >
Set the selection to the given value. If the value is different from the currently selected value
return True if the key is a shift key and not controldown or altdown.
This method is called when the user presses the start of a string. This method is
str_ Enable all the items in the menu.
str Description of method isenabled
str_ Enable all menus in the menu. value - True to enable all menus in the
str Description of method isenabled This method is used to check if the menu is enabled.
Remove a menu item from the menu list.
Set the object s attributes from the given tag. The object s name is the name of
replace all text nodes in the table with str_.
Returns the appropriate documenter for the given object and parent. If parent is None the dat
mangle_signature - Mangles a signature into a string that can be used as a
Import a module by its name. If the module doesn t exist it will be created.
autolink_role is an autolinking function that creates a role with the
Displays a message in a dialog. If the dialog is scrolled the message will be displayed
Prompt user to enter a text in a text entry dialog. If the user presses enter
select_font - Select a font from a wx. FontDialog
Select a color from the dialog box.
str_ Shows a directory dialog and returns the path of the directory.
str_ Find the text in the user s list of words and return them as a dictionary
str Set whether or not the tree item has children
str _set_icon - sets the icon of the widget
str_ - filename to read and parse.
save rsrc to file with pretty - printing.
Build a window from a dictionary.
Build a component from a dictionary of components.
Convert a property name to a new property name. If the name is already in the map
str_ wx. TextDataObject or wx. BitmapDataobject
str_ Find the autosummary in the docstring of a module.
Load the given object into the tree. If no object is given the root object will be
Inspects an object in the tree and displays a context menu if the object is a child
Activates an item in the tree and loads it into the propeditor and updates the
Update the selected item in the tree. This is called when a new item is added to
shows a context menu for a given item in the tree
Convert a hyperlinkedsorl image to an absolute URL.
Returns True if the current path matches the given path or False if the path does not match
str_ Returns True if there is no current path in the given path otherwise returns False.
Select the current option. If the option is disabled print a warning. If the option is
Returns a webdriver object for the given browser_name.
Returns the XPath representation of the expression. If the expression is an abstractexpression it will be
Switch to a specific frame. If frame is an element switch to that frame. If frame
A context manager to accept a modal alert.
Accept a modal dialog with the given text and optional wait time. If no text is given
Dismisses a modal dialog with the given text and optional wait time.
Accept a modal prompt and wait for it to be accepted.
Dismisses a modal prompt with the given text. If the prompt is already dismis
Save the page to the given path. If no path is given the page will be saved
Save a screenshot of the current page. If no path is provided the screenshot will be saved
str_ If capybara. raise_server_errors is True raise the server
Returns true if the element identified by locator is checked otherwise returns false.
Checks if a radio button is present on the element that is not checked.
Checks if the element has the given locator that is unchecked. If the element does not exist
Checks to see if the element is present on the page with the given locator and is unchecked
Returns True if the document has the given title or False if it doesn t.
has_no_title - Asserts that the page has a given title.
Return the inner content of a node as a string.
Return the inner text of a node as a string.
Normalize a URL so that it can be used as a base URL for a request.
should_catch_error - Check if the error should be caught by the driver.
str_ = count return - 1 if count is less than 0 if count is greater than
str _cache_at_least returns True if the result is at least size bytes.
Returns True if the options dict expects a value that is not None. Otherwise returns False.
Return a failure message based on the given options.
Returns True if the given count matches the given options.
Normalizes a text value into a string with whitespace removed from the beginning and end of the text
Normalizes whitespace in a string.
str_ toregex - convert text to a regular expression. If text is already a regular
Returns True if the current URL matches the expected path.
Resize the window to the given width and height.
Boot the server and wait for it to be ready to accept requests.
str - > str The function to be called when the property is set to a string.
instance_method - Sets the instance method to be called when the instance method is called.
_ class_method - Sets the class method to be called when the class is instantiated.
Returns the full traceback as a string if log_traceback is True. Otherwise returns None.
Returns the source for the object. If the object has a log_object_repr attribute
Returns the logger for the given instance.
_ Set the logger to use. If no logger is provided the default logger is used.
Helper method to call the API with the given parameters and return the response as a dict.
Returns a list of the channels that this user is a member of. If the user is
Get a list of all users in the account.
Make a message from a text and a channel. If the channel does not exist it will
translate user_id to channel_id and update the message with the new message.
Send a message to a slack channel. The message can be a dict or a string.
Read a message from a channel and send it to the appropriate protocol.
Run the Slack API. This is the main entry point for the Slack API. It is
The main entry point for the command line interface. This is the main entry point for the
str_ diff two dictionaries and return a dictionary with the keys that are not the same.
Return a string with the given color prepended to the given message. If no color is specified
str - > bool - > bool - > bool - > bool - > bool - >
v2 playbook on stats
Print the name of the task and the reason of the task that was skipped.
Convert a network prefix to an IP address and a netmask.
Add a model to the list of supported models. If the model is a string it will
load all the filters from the jinja_filters module and return a dict of all the filters
Find a Yang file in the given profile and path. If the file does not exist
http_post - POST request to url with optional data. data can be a dict or
Returns the authorization_uri with the given parameters. If no parameters are given the default response
Get a new access token using the provided code and parameters. If no parameters are provided the
url_query_params - returns a dict of query parameters from a URL.
url_dequery returns a copy of the given url with the query string removed.
str_ Build a URL from a base URL and additional query parameters.
str _handle_exception - Handle exception.
Create a response object from a string body and status_code. If no status_code
Creates a response to redirect to the given redirect_uri with the given error.
Make a JSON response with the given data and headers.
Returns an authorization code for the given client_id and redirect_uri. If the response
This method is used to generate a new access_token and refresh_token based on the
Gets an access token from an authorization code. If the grant_type is not a valid
Get an authorization code from a redirect URI.
Get a token from the post data. If the token is not found in the post data
Returns an authorization object based on the authorization header. If the authorization header is empty returns None
Open a device on the specified bus. If the device is already open it will be closed
Read a byte from the device at the given address.
Read a number of bytes from the device at the given address.
read a single byte from an i2c device.
write bytes to a device. addr is the address of the device to write bytes to.
Write a byte to the device.
write an i2c block of data to the i2c device.
Create a copy of the current object. If target is not specified the copy will be created
Create a local copy of the current object.
Construct a File instance from a dictionary of file_info.
Upload a file - like object to a file - like store. If no store is specified
Returns a list of file CDN URLs for each file in the group.
Construct a Group object from a group_info dictionary.
Create a new group from a list of files.
This is the base opration of the API call. This is the base opration that
Returns a generator that yields the UUIDs of each file in the file sequence.
Returns a list of objects from the given list_class with the given arguments.
Prints a bar of the given number of parts in the given iter_content with the given
Get home mode status.
Get a list of all cameras.
Get information about a set of cameras.
Get a snapshot of a camera.
Get the motion setting for a camera event.
Save a camera event md parameter for a given camera_id.
str - Update camera list and motion settings. str - Update motion settings. str - Update
is_last_li returns True if current_numid is the last item in li
get_single_list_nodes_data - Get data from a single list node.
Get the index of the ilv in li. If the list is empty - 1 is
Get the v_merge attribute of the given tc. If the tc is None return none
Get the grid span from the tc element.
Returns the TD element at the given index.
Returns a boolean indicating whether the style is false. If the style is none returns False.
is_bold returns True if the element is a bold element or False if it is not
is_italics returns a bool_ if the element is an italics element.
Returns a boolean_ indicating whether the given node is underlined in the given namespace.
is_title returns True if p is a title element. If p is a title element
Get text run content data.
Returns a dictionary of relationship information from the given tree. The keys of the dictionary are the
_ Returns the ordered list type for the given meta_data numid and ilvl.
str_ = table meta_data = dict - > list of dict - > list of
get_t_tag_content - Get the content of a T tag.
str_ Remove all elements with the given tag from the given tree.
finds a dataset by its name and URL. If it doesn t exist it will be
Load the MNIST dataset from a pickle file. If flatten is set to True the
Plots an array of images on a matplotlib figure. The images are scaled by the number of
Plots the layers of a weight matrix. If tied_weights is True the weights are
Plot a list of filter images as a grayscale image. This is useful when you want
Returns a list of the encoded characters in txt. The encoded characters are stored in the forward
Add convolution weights to the theano model. The weights are shared between the input and output
str_ Returns the decoded value of the given layer or None if there is no layer.
str_ auto - encodes the input and writes the result to the output file.
Returns the predicted value of the model at the given input. The output of the model is
predict_proba returns the predicted probabilities of x.
Predict the logit of the model at the given input.
str_ Returns a list of all the variables in the model.
Calculate the accuracy of the model based on the predicted target and the weights of the model.
Builds an activation object from a name and a layer.
rng is a random number generator for the reservoir of a list of numbers.
str_ Set the loss of the model.
Trains the model and returns a list of monitors that can be used to train the model
Build a graph of the regularizer graph and the outputs and updates of the regularizer graph
str_ List of input names of all layers in the network.
str_ Returns a list of all variables in the model.
str_ or filename_or_handle save to a pickle file. If filename_or
Load a model from a pickle file or handle. If filename_or_handle is a
str_ Return the loss of the model.
str - > list of updates to be applied to the current state of the model.
Return the output size of the pipeline.
str_ Resolve the input shapes for each layer in the input_shapes dictionary.
resolve_outputs - Resolve the input and output shapes from the configuration.
Log the current state of the activation and its input shapes to the console.
Returns the number of parameters in the model as a log of the shape of each parameter.
Format the given string with the name of the field.
Resolve the shape of a layer given its name and a list of layers.
Find the parameter with the given key or raise an error if the key is not found.
Add a bias parameter to the model.
Returns a dictionary with the form name and activation as the key and the value as the value
loggabor returns the loggabor of a band at a given location.
str_ Returns the image of the loggabor at x_pos y_pos.
str_ Add a new tier to the list of tiers and return the tier object.
remove_tier removes a tier by its name. If name_num is an
Returns the tier with the given name.
Returns an EAF object with the tiers and intervals. If skipempty is
Add a point to the list of intervals. If the tier type is not str raise an
Add an interval to the list of intervals. If check is set to True an exception will
Remove an interval from the list of intervals. If the list does not contain the interval an
Remove a point from the list of intervals. If the list does not contain the point an
Returns a list of all intervals in the time series. If sort is set to True the
Returns a list of all intervals of this rectangle sorted by start and end coordinates. If the
Add indentation to an element and its children. If the element has no children it will be
str_ str_ int_ int_ int_ int_ float_ int_ float_
Add a description for a controlled vocabulary.
Add an external reference to an event.
Add a lexicon reference to a given LR.
Adds a linguistic type to the list of linguistic types.
str_ Add a locale to the list of available locales for the given language code.
Remove all time slots from self. timeslots that are not in self. tiers
extract a subset of the EAF file from a given start and end time range.
Generate an annotation id based on the list of timeslots in self. timeslots
generate_ts_id - Generate a timestamp id. time - Time to generate the timestamp
Returns a list of child tiers for a given tiers id_tier.
Get the full time interval of the time series.
Returns a list of ref annotation data after a given time.
Get the ref annotation data before the given time in the given id_tier.
Returns a list of tier ids for a given linguistic type.
str Removes all annotations from the given tiers from the given tier. If clean is True
remove the description of a given language from a given controlling Vocabularies list.
str_ Remove a license by name or url. If name or url is none remove all
Remove linked files from the list of media descriptors. If file_path or relpath is not
str_ Remove a property by key or value.
remove a reference annotation from a given tiers id_tier and time Returns the number
remove secondary linked files from self. linked_file_descriptors. file_path is
remove_tier - Remove a tier from the list of tiers. If clean
str - Removes tiers from the simulation.
Rename a tier from id_from to id_to.
str_ Returns a tuple of tuples where the first tuple is the name the second tuple is
Print the storage in debug mode. This is useful for debugging. The storage is a dictionary
Get the embedding levels for the given text and store them in the given storage dictionary.
explicit_embed_and_overrides returns an explicit embedding level and a directional override.
Resolve neutral types in the given storage.
Reverses a contiguous sequence of characters.
Reorder the levels of a string in the storage dictionary. This is done by re -
Process the bool command and set the value in the context to the normalised file path.
str_ Add an attribute to an object.
Command - line interface to convert a file or a file to a new format.
_maintain_backwards_compatibility - Maintains backwards compatibility.
Shows the current QGUI. If no QGUI is currently active this function will
str_ Discovers the first GUI in the list of registered guis.
Add to the filemenu if it is not already in the filemenu. If it is
Maintained a selection in the context of a context manager. This context manager is used
maintained_time is a context manager that maintains the current time of the context
Show a messagebox with the registered guis. This is a no - GUI widget.
Returns a generator of the cumulative sum of all the data in the data set.
Get a list of values for a single axis of the given dataset.
Draw a constant line in the graph.
load the transform parameters from the current x - and y - axis to the current y -
Convert a dictionary to a dictionary with keys as keys and values as values as values.
Returns a generator that yields floats in the range [ start stop ) until stop is reached.
str add_data - add data to the list of data to be processed and added to
Burns the graph and returns the graph as a string. If the graph is not
Calculate the left margin of the label.
Calculate the right margin for the right border.
Calculate the top margin of the graph.
Add a popup at x y with the given label at x y. The label will be
Calculate the bottom margin of the border.
Draw the graph of the graph graph_width graph_height graph_width and graph_
Make a text element for a datapoint.
str_ Draw the x - label and x - guidelines if self. show_x
str_ Draw the y labels and guidelines on the y - axis.
Draw x guidelines at the bottom of the graph.
Draw a number of y guidelines at the bottom of the graph.
str_ Draws the title and subtitle of the graph.
Render inline styles into the root node of the document. If css_inline is set to
This method is called when a new SVG element is added to the document. It is called
str_ Returns a list of all stylesheet resources in the project.
str_ Runs bot_class on the given host port nick on the given channel.
Send data to the socket. If the socket is not registered or force is True the data
Connect to the server and return True if successful False if not.
Send a message to a channel or a nick. If no channel is given the message will
dispatch_patterns - Returns a list of patterns that will be called for each of the patterns
Create a new Nick and register it with the server.
handle_ping - Handle a ping message received from the server and send it to the client
handle_registered is called when the server is about to be registered. This is called when
Enter an event loop to read from the socket file and dispatch events to the registered callbacks.
Register with the boss.
This is the main task loop. It runs the task_patterns in the task_queue
Returns a list of command patterns that can be used to run the worker.
str_ This is called when a user is successfully registered in a channel. It will join
This function is called when a worker sends a command to a worker. It is called by
Add a nick to the list of workers and add it to the list of workers.
Send a validation email to the user.
str - Send password reset notification to the current site.
Verify a token and return the user object. Raises a permission_denied_exception if
Delete the user. If the user has no avatar a 404 HTTP response will be returned.
Allow the request to be routed to the given view. If the request method is not
Returns a docker client for the current environment.
str_ Returns a tuple of the TLS certificate and key used to connect to the server.
Returns the name of the service. If the service has a server_name attribute it will
str_ Runs a docker method on the client.
Submits a method to the Docker API.
Poll for a task from the service. If there is no running task return the number of
Stops a running service. If now is set to True the service will be stopped immediately.
Filter the queryset by converting the value to lower case and then converting it to lower case.
Update the password of the given instance. Raises an exception if the password does not match the
Update the password for the given instance. If the password is valid it will be set to
Validate the given email. If the user doesn t exist or the email is not verified an
Create a new token for the given user.
Delete a token from the database. If the token does not exist it will be created.
If the user is not authenticated and the email is not the same as the user s email
Sends a validation email to the user.
str - > int - > int - > bool - > bool - > bool - >
Generate the context to send a password reset email to a user.
Sends an email to the user s email address using the notification s email_subject template and
Email handler for password reset notifications.
This function is called when a notification is sent to the validation email. It sets the email
Authenticates a user based on the request data. Returns a tuple containing the user and
Returns the user and token for the given key. Raises an exception if the token is expired
Publishes the Bokeh notebook content to Bokeh and publishes it to Bokeh.
Process HV plots and return a list of Bokeh plots.
Return a customjs callback for the given change and p_name. The callback will be
str_ Returns the widget for the given param_name. If the widget does not exist
Render an object using the HoloViews renderer.
Create a textinput widget with a string value.
Returns a list of tuples where the first element is the key and the second element is the
str Returns the owner of the given method or None if the method is not a method.
assign auth values to self. _auth_user and self. _auth_password
Sends a ping request to the server and waits for a response. Returns True if the request
Returns information about the server.
Get the health of the server.
bytes_to_readable - Converts a number of bytes into a readable string.
Returns the total load of the CPU in the system and the other CPU in the system.
Returns the size of the memory in bytes. If human_readable is set to True the
Get the network up data from the device. If human_readable is set to True the
Returns a list of all the volumes in the volume group.
Returns the volume with the given id or None if the volume does not exist.
Returns the total size of a volume in bytes. If human_readable is set to True
Returns the percentage used for the given volume. If the volume does not exist returns 0.
volume_disk_temp_avg returns the average disk temperatures for a given volume
volume_disk_temp_max - get the maximum disk temperature for a given volume.
Get a specific disk by its ID.
Login to the server and get the access token. Return True if successful False if not.
Get a URL from the API. If the access token is not available or the session is
Execute a GET request with the given request_url and return the result as a dict.
Update the utilisation and storage objects with the data from the API.
Returns a synphot. synphot. synphot. synphot. synphot. Syn
Returns a synostorage object that can be used to retrieve the contents of the file.
Returns a webhook context for the given request.
Returns the current tenant token. If the token is not set it will be retrieved from the
str_ Builds the HTML attributes of the widget and returns it as a string.
str with_apps - override settings. installed_apps with a list of apps.
str_ Removes apps from settings. installed_apps.
str_ Get the global settings as a dictionary.
Send a GET request to the client. If the request is a redirect the response code is
Change the value of a key in the config file. If the key does not exist it
_migrate_config migrates a config file from oldname to newname.
str_ Start the webserver for the OAuth 2. 0. 0 flow.
wait for the server to return a non - zero response code and then shut down the server
Get a new access token and refresh token from the server.
_check_token_present - Check if the token is present. If it is not
Set the access credentials for the current user.
Creates the manifest table in the given table_name.
Split a full path into bucket and path.
Check if a prefix is a glacier key.
str clean_dict - remove None values from a dictionary.
Add run_id to the manifest of the given table_name in the given DynamoDB table
Returns True if the run_id exists in the manifest. Otherwise returns False.
Extract the schema from a URI.
Fix a schema to include the prefix organization name and model in the schema and return it.
Parse a JSON string and return the schema and inner_data as a list of tuples.
Transform a line of text into a good event.
Returns a JSON object with the enriched fields as keys and the enriched values as values
Get the name of the template used in the given response. If the template is a list
Returns a string representation of the context. The context is a list of Django context objects.
Returns a string representation of the variables in the template. If the variable does not exist in
pformat_sql_html - pformat a SQL string to be used in HTML output
Format a Django object as a pretty - printed HTML string.
pformat_dict_summary_html - Format a dictionary as a summary HTML string.
Style a text string to be used in HTML output.
Returns a string representation of the given object. If an exception is raised it will be wrapped
str_ Format the given object to the given stream with the given indent and allowance.
Returns the token at the given position in the string s starting at the given position.
get_latex_nodes - Get a list of LaTeX nodes from a string.
Convert a LaTeX string into a text string.
Convert a LaTeX string into a text string.
_unascii returns a copy of the string s with all unicode characters converted to unicode.
This method returns the organisation information for the current user. The organisation information includes the
Get a list of boards.
_ Returns a list of members.
Method to update the organisation of the current user s account.
Removes a member from the list of members.
Adds a new member to a group by its id.
Adds a new member to a user s list of members. The member will be added to
This method returns the list information for the current user. The list information is returned as a
add_card - Add a new card to the account and return a Card object.
_ - Returns label information for all labels in the portal.
This method returns a list of all items in the collection.
_update_label_name - Updates the name of a label.
_update_label_dict gets the label dict from the API and updates it with the
get_authorisation_url - get the authorisation url for a given application name and
str_ Returns the card information for the current user or None if the user does not have
Get a board by its id.
This API endpoint returns a list of items that match the given query parameters. This API endpoint
Get a list of checklists that match the given query parameters.
Add a comment to the current user s list of comments. The comment will be added to
Method to add an attachment to a file.
Method to add a new checklist to the current user s account.
Add a label to the list of labels.
Method to add a label from a label class. This method is used to add a label
Method to add a new member to the group. Returns a list of Member objects.
str - Gets information about the current user s members.
Get a list of cards for the current account.
_ Returns a list of organisations for the authenticated user.
Creates a new board with the given query parameters.
Get board information.
This method returns a list of lists that match the given query parameters.
Get a list of labels for the current user.
Gets a card by its id.
Get a list of all checklists for this account.
_ Gets a list of organisations for the authenticated user.
Method to update a board.
Add a list to the current user s list. The list will be returned as a list
Add a label to the list of labels for the current user.
Gets the checklist information for the current user s checklist.
Get the card for the current checklist.
get_item_objects - get a list of checklist items for this checklist.
Update a checklist with the given name. The checklist will be created if it does
Add a new item to the collection.
Removes an item from the inventory.
Update the name of a checklist item.
Update the state of the checklist item.
Add the API key and user_auth_token to the query_params.
raises an exception if the status code is not 200 or if the status code is not
Build a URI from the given path and query_params.
fetch_json - Fetches a JSON response from the server.
Create an organisation from a JSON dict.
Create a new board in Trello with the given board_json.
Create a new label in Trello using the given label_json.
Create a list object from a json dict.
trollo. client. card. CardFactory. create_card creates a new card
Create a new checklist from a json dict.
Create a new member in this Trello cluster.
Get a specific organisation by id or name. If name is not specified it will return
Get a board by its id and name. If name is not specified the board will be
Get a list by id. If name is not specified the list will be created with the
get_card - get a card by id or name
Get a checklist by its id and name. If name is not specified the checklist
get_member - Get a member by id or name.
Given a URL return a new URL with the domain appended to it.
str - > str - > str - > str - > str - > str - >
Set the password for the given service and username.
Split text with the given locations and return a generator of the split results.
str_ This function marks the end of each match in the given text as having been split
str_ This function marks the beginning and end of a given regular expression as split_locations
This is the entry point for the command line tool. This is the entry point for the
Creates an AES cipher for the given password salt and nonce.
Get the mode of the AES key. If mode is none return the list of supported modes
Returns the number of times a job should be executed.
Check if the scheme is correct.
Called when a message is published to the broker.
make a unique id for this object and return it. If the id is not unique it
Connect to the MQTT server and return a Deferred that will be resolved when the connection is
Handle incoming connection acks. Log the error and return the state of the connection.
Encodes a string into a byte array and returns it. If the length of the encoded string
Decode a base64 encoded string into a tuple of bytes and the rest of the encoded string
Convert a 16 - bit integer into a bytearray.
Returns a list of the length of the given value.
Returns the length of the given encoded string. The encoded string is assumed to be a sequence
Returns the header as a byte string.
encodes the header and payload of the message into a byte string and returns it as a
str_ - > None - > None - > None - > None - > None -
str - > bytes - > bytes - > bytes - > bytes - > bytes - >
Decode the packet into the internal data structure and set the session and resultcode fields.
str - > None - > None - > None - > None - > None - >
str - > bytes str - > bytes str - > bytes str - > bytes str -
str - > bytes str - > bytes str - > bytes str - > bytes str -
Decode a packet into this message.
str - > bytes
str - > bytes - > bytearray - > bytes - > bytearray - > bytes - >
str_ - > None - > None - > None - > None - > None -
str - > str - > str - > str - > str - > str - >
Get the URL for the request.
Make a request to the API and return the response as a JSON object.
str_ Refresh self. _blocks from self. comm. rank and self. _blocks
str_ Format the data according to the analytes in self. analytes.
Fits the data to the standard scale and then transforms the data to fit the standard scale
Fits the k - means clustering algorithm to the data and returns the k - means.
Returns a list of predictions for the given data. The data is expected to be in the
map_clusters returns a list of integers representing the cluster indices of the sampled samples.
sorts the clusters by the mean of the clusters in the data. sort_by is
str_ Get the date from a datetime string.
Returns the total number of points in a dictionary.
Returns the total time span of all the data in the dictionary d.
Returns a unit picker for the given array. If the input is an integer it will be
Returns a string with the first element and the rest of the string with the last element.
analyte_2_namemass - convert an analyte string to a namemass
analyte_2_massname - convert an analyte string to a mass name
collate data from in_dir to out_dir. extension can be a string or
Enumerate a boolean array.
str_ - > bool - > bool - > bool - > bool - > bool -
Fast smooth function.
Fast gradient of a numpy array using a rolling window. If win is an even number of
Find the minimum values in x that are less than y.
str_ cluster_meanshift - Estimates the cluster meanshift and returns the
str_ cluster_kmeans returns the k - means of the data in n_clusters
get the defined srms from a srm. txt file
Read the configuration from the latoolscfg file and return it as a dict.
str_ = latoolscfg. txt str_ = latoolscfg. txt
Copy a SRM file to a new location. If destination is not specified it will be
str_ exclude_downhole - Exclude downhole elements from a boolean array.
Autorange plot of the data and the focus of an analyte. If analyte
str_2_indices str_2_indices str_2_indices str_2
Calculates the ratio of the analytes to the standard. If internal_standard is set to
calibrate the data according to the calibrated_ps. If no analytes
str of ablation times for each node in the dataset. This is a dictionary of
Calculate the correlation between two data sets.
Add a new filter to the list of filters.
Returns a dictionary of the parameters of the filter. The keys are the name of the attribute
Plots a histogram of the values in the given data.
Load the reference data for a given GID. If no name is given the reference data
calc_m calculates the m - value of a molecule. The m - value is the
Generate a named tuple of keyword arguments from the given ansicolors and ansistyles.
str_ annihilate predicate to stack.
Deduplicate a stack of strings into a new tuple.
Gaussian Weighted Statistics.
Gaussian distribution.
str_ Returns the standard deviation of an array of NaNs and the standard deviation of the
Get samples from the dataset. If subset is None return all samples in the dataset. If
Ratio the data to the current standard. If internal_standard is not specified the data will
Make a subset of the current set of samples.
apply_classifier applies a classifier to the data and returns the name of the classifier.
filter_nremoved returns a dictionary of tuples with the number of removed and the percentage of
Filter the reports for the given analytes using the given filter string. If no filter string
_minimal_export_traces returns a list of traces for each analytes in
save_log - save the log to a file in the export_dir directory logname
Apply a function to a list of elements and return the result of applying a function to each
str_ bayes_scale - bayes_mvs - bayes
median_scaler returns a scaler for the median of the data. If the data
noise_despike - Do the noise despike on a signal.
expdecay_despike - De - pike a signal with exponential decay decay.
Add a new component to the model.
str_ Remove a component or a set of components from the model. If setn is
str Clears the state of the model.
str_ Remove unused components from self. components and remove them from self. analytes.
Fuzzes the keys of the components in the dictionary and returns the largest key in the
str - > bool - > bool - > bool - > bool - > bool - >
Returns a string representation of the component info.
Write a log file with the given header and file_name and return the path to the
Read a log file and return a dictionary of run arguments.
get_information - get information about the modem server and print it out to stdout.
Send a message to a phone number.
Parse a string or file - like object into a Python object.
Return a link to a NCBI page.
Returns the thumbnail div for this snippet.
str_ code_div returns the code div of the code_example and the snippet.
Returns the code_example attribute of the nb. metadata object. If no code_example
Returns a link to the notebook s URL or None if there is no URL.
Get the name of the output file with the given ending.
Create the. py file from the nb file and write it to self. py_file
Returns the data_download string for the given files. If the number of files is greater
Create a thumbnail from the current pictures. If there is no thumbnail it will be created
Scales an image to fit within max_width and max_height. max_width
Save a thumbnail of the image to the given path. The thumbnail will be scaled to the
Copy the thumbnail figure from the notebook to the output directory.
Get the url for a given nbfile.
Given a field name and a list of db_table_fields return a list of language
Process a thumbnail file according to its size.
pre save method for the model instance. This method is called before the model is saved.
Returns a list of all thumbnails.
Create a new thumbnail of the given size.
Delete the thumbnail of the given size from the image store.
str_ Create a thumbnail of the given source_name with the given size.
str_ Returns a thumbnail of the given source_name with the given size.
str_ Delete a thumbnail from storage and metadata.
str_ Received a message from the server.
Subscribes a callback to a specific number of digits.
Returns a set of all states that have been accepted delivered expired or error.
Send a message to a provider.
str_ Returns a dictionary of receiver blueprints for all registered providers.
_receive_message - Receive a message from the gateway.
Receive a status message from the gateway and send it to the gateway.
forward an incoming message to all clients in parallel.
Convert a transaction dict into an RLP - encoded transaction and a hex - encoded transaction hash
Estimate the gas of a transaction using the ethereum client using the web3 API.
Estimates the gas needed for a transaction. If the transaction is a proxy or web3
Write data to the stream. If await_blocking is True the data will be written to
Read a line from the serial port.
Returns True if the message has bad headers.
str_ Attaches a file to the message.
Register a new service with the service manager. This method will throw an exception if the service
str_ import a module and return a config object.
str_ Register a list of resources to be used in the API.
Returns the value of the given key or raises an error if the key is not present.
Return True if the object is stopped. Otherwise return False. Raise runtimeerror if the object
str_ Sets up the DAL and sets up all services in the DAL.
- - - - - - - - - - - - - - - - - -
_cauchy_equation returns the cauchy equivalent of the given wavelength and
Make a DELETE request to the given endpoint with the given headers. If the response status code
str_ Returns True if path1 and path2 refer to the same file.
Create a symbolic link to a source directory.
Initializes the logger with the given arguments.
Raise an error with the given message if the subparser fails to parse the command line.
str_ Returns a tuple containing the list of file_readers that were unclaim
Get a new column header from a VCF file.
Returns a list of unclaimed reads and a list of VCF readers.
_init_population_stats - initializes the population stats from a vcf file.
str unclaimed_file_readers str unclaimed_file_
Return a list of lines from the given string.
str_ Returns the first line terminator that starts with the given data. If none is found
str_ Returns the line terminator of the given data if it exists. Otherwise returns none.
Seek to the next line in the file. If the next line ends with a line terminator
seek to the beginning of the previous line and return the position of the previous line.
str_ Returns a list of lines from the end of the file. If no lines are
str_ Returns the first lines of the file. If no lines are given returns an empty
Returns a generator that yields each line of the file. If the file reaches the end of
Returns a tuple of unclaimed_readers and vcf_readers.
Parse a single VCF record from a line of text.
Returns a dictionary of sample names and tag values from a list of sample fields.
Returns a list of tags for the VCF record.
_join_info_fields - Join the fields of the info_dict into the info
_format_field - Returns the format field for the sample tag values.
Returns a string representation of the tag values for a given sample.
Return a string representation of the VCF record.
Add a sample tag value to the dictionary of sample tag values.
add_or_replace_filter adds a new filter to the current filter if it is
Returns a list of available categories for the given user. If products is not specified all products
str A form to display a list of products for a given category.
Returns a staff products form for the given user.
add_product_error - Add an error for a given product.
Returns a form class for a model s fields. The form is a multiple choicefield with
Returns a list of items that are pending or purchased.
Send an email using the template_prefix as the email template.
str - > list of model. node model. way model. relation model. relation
Iterate over the notes from the Osm API.
str_ True if the condition passes the pre_filter function. False otherwise.
str - Returns True if the user passes the filter. If the user passes the filter returns
Returns the number of remaining items for the given user. If filtered is set to True the
Filter the queryset to only include products in the user s cart and not in released carts
Filter the queryset to only include products that have been enforced by the given user.
Filter the queryset to make sure that the total number of items is not greater than or equal
This method is called before a user is viewed. It is called before the user is
pre_filter filter to only include users that have been granted access to this model.
str_ Create a new cart for the given user.
Auto extend the reservation duration by adding the latest voucher and product item if there are any
str voucher_code - The code of the voucher to apply to the cart.
Check for errors in the cart and remove any vouchers that are not in the cart.
Recalculates the discounts for all products in the cart.
str_ Yields the rows of the table as a list of strings.
str_ Returns the form to be used for the GET request. If no form_type
Render the given data as a string.
Returns a list of all available reports sorted by name and description.
Returns a report of the items that have been marked as sold and the total income
Returns a report of all the payments in the system.
Display a list of credit notes that have been refunded.
Display a list of the status of the products in the cart.
Display a list of all discount items in the cart with the status of the given discounts
Returns a list of product line items that are related to the products in the given list.
Returns a list of paid invoices ordered by date.
Display a list of credit notes for the current user.
Display a report of all invoices in the system.
Show a list of attendees for a user.
Return a list of registered speaker profiles for the current user.
str Returns a list of missing categories for the given user.
Return the number of available credit notes for the current user.
Returns True if the user is sold out and the attendee has not been completed.
Edit a user s profile. If the form is valid the user will be redirected to the
str _handle_profile - Handle the profile form.
Handle a list of products for a given category.
This function handles the voucher form and applies it to the current cart. If the v
This view shows the manual payment form for the invoice with the given id. If the form
Refunds an invoice.
extend_reservation - Extends a reservation for a user by a number of days.
The invoice_mailout view. This view renders the invoice_mailform and sends the
Show badges for invoices with category and product and status. If the form is valid
Render a badge for a given user.
Returns a list of available discounts for the given user based on the given categories and products
Annotate the queryset with the number of past uses for the given user.
Returns a list of all available products for a user optionally filtered by category and products.
Apply the credit note to an invoice.
Returns the cancellation fee for the given percentage of the credit note. The cancellation fee is calculated
Generate a random access code.
Get the object from the module name and the property name.
str - Returns an invoice for the given cart. If the cart does not have an invoice
Generate a manual invoice for the given user.
_apply_credit_notes - apply creditnotes to invoice
str - True if the user can view the attendee of the invoice.
str Refresh the invoice and cart from the database.
Validate that the invoice is allowed to pay.
update_status - Updates the status of the invoice based on the current status of the invoice
mark the invoice as paid
_invoice_matches_cart - checks if the invoice matches the current cart.
Update the validity of the invoice. If the invoice is unpaid and the cart is valid
Mark the invoice as void. If the invoice is refunded it will release the cart.
Refund the current invoice. If the invoice is void it will be void. Otherwise it will
Send an email to the user of an invoice.
Update this object with the data from the data dictionary.
Flattens a single field into a flat dictionary.
prints the download information for each file in the archive. This is useful for debugging.
Download a file from Gencloud.
Returns a list of all processors. If no name is given all processors are returned.
prints all the inputs of a given processor. This is useful when you want to print
_ Runs data from a string in JSON format and returns a dictionary of the results.
Upload a file to a specific processor. If a file is uploaded it will be uploaded to
Upload a file to the server and return the session_id.
Download a list of data objects from the Gendata API. If the field does not
str - > list of all subclasses of the given class.
Get the repo and project from the user s data and sync the data to the database.
Given a list of variant ids return a generator of evidence and phenotypes that have suggested changes
Given a list of variant ids return all the phenotype with suggested changes merged into a single variant
Update the object with the data from the server. If the request is partial the object will
uniqify returns a list of unique values in the input list.
Authenticates the user using the asana API and the github API. If the user
Select an item from a list.
get_saved_issue_data - Get the saved issue data for the given issue.
Move saved issue data from one namespace to another.
Get the saved task data for a given task.
str_ Returns the ASANA task with the given id or None if not found.
Apply a value to a key. If the key does not exist it will ask the user
str Flushes the queue. If the queue is full the callback will be called with the
Create a task for a missing issue in an ASANA workspace.
str_ Returns a list of all the types of the project s data.
Log EKM data to the log file. If the log level is less than or
Initializes the serial port. Returns True if the port was initialized successfully or False if the port
str max_waits str wait_sleep str
Render the JSON readssince of the given timestamp and meter. The output is a string
Set the context string to be used in the output. If the context string is longer than
calcpf returns the number of digits in the PF. The PF must be
Set the max - demand period of the EKM. If the period is less than
Set the meter password to new_pwd. new_pwd must be a hex string.
str_ Returns the buffer of months in the given direction. If direction is kwhreverse
assigns a schedule to a given period hour minute and tariff. Returns true if the
Assign a season and schedule to the EKM. If the season and schedule are not
assigns a holiday date to a given month and day returns true if the assignment was successful
This function is used to query the EKM for a set of reads. It is
readmonthtariffs - Read monthtariffs from the device.
read the holiday dates from the EKM and return the result as a boolean value.
str_ True if the settings file has all the required fields. False otherwise.
Write a command message to the EKM log.
Sends a password request to the serial port. Returns True if successful False if not.
str_ Update all registered observers with self. m_req.
str_ Request the EKM. Returns True if the request was successful False otherwise.
Request a meter from the meter sensor. Returns the CRC value of the meter read.
Request a single byte from the Meter. Returns the CRC value of the received byte.
make all fields in self. m_blk_a and self. m_bl
Set the display list of LCD items. display_list can be a list of integers
Set the relay status and timeout for a given number of seconds.
This function is called after the serial port has been opened. It writes the context to the
Set the pulseinputratio for a given line of input. If the line is
Set zero reset table kwh.
Set the current LCD items. If the password is not provided the current password will be
Iterate over all fields in a schema.
Iterate over a schema and return a generator of tuples containing the schema the fields and the path
Generate a random string of the specified length.
Returns a string with the timing and the summary of the execution time and the result.
Return a string with ANSI escape codes and reset codes for the given text.
str_ Show the given text in the output stream.
Return a summary of the test result.
Parse the command - line arguments and return a dictionary of the parsed arguments.
str_ Set up ivoire. current_result and ivoire. _manager. result
Run ivoire on the given config.
str_ The name of the script to be run when the script is run. This is
Transform a describe node into an ast. classdef.
str_ Transform the describe body of a describe statement into a list of examples.
Transform an example node into an ast. functiondef.
Transform the body of an example by replacing the context variable with a string.
Returns an ast. arguments object that takes only the self argument.
str_ Register this class as a path finder.
Compile source_bytes into Python code. source_path is the path to the source file
str_ Returns the parsed arguments from the given argument parser. If no options are provided the
str_ Load a module by name. If name is a file it will be loaded from
str_ Load a module from a given path. If the path points to a directory the
str Walks the given directory and returns all files that match the given filter specs.
str_ Remove a file from the places. config directory.
Send a restart message to the specified places. The name is the name of the restart.
Call a function based on a dictionary of results. The dictionary will be passed to the function
makeservice - makeervice - makeervice - makeervice - make
refresh_session refreshes the session for the given node_id. If no node_
Remove nodes that have expired. If node_ids is None remove all expired nodes.
str_ Remove a node from the list of nodes. If no node_id is given
str_ Returns the last time the node was updated. If no node_id is given
Get a list of all the nodes in the cluster.
refresh_session - Refreshes the session.
increments the times_modified_key and expires it if ttl is set to 0
str_ Splits a list of strings into a list of strings with the given delimiter.
str_ Returns a list of bad files in the given path.
Merge the given status with the current status.
Returns a query that returns a boolean indicating whether the given token exists in the database.
Returns a list of identifiers that match the given token. If the token is not a token
Create a multiservice for the given timerservice name. This is used to create
Completely parse the input from the given reader and return the result as a string.
Returns an optionalparser for the given parser. If the parser is a string it will be
Repeats one parser in a repeated fashion.
Returns a repeatedparser for the given parser. If the parser is a string it will be
str_ rep1sep - Repeats parser with a separator between parser and separator.
str_ repsep - Repeats the parser with the given separator and returns a parser
Close the object. If the object is already closed raise an error. If the object is
Check if the stream is valid.
Create a new heart service and set it as the parent of the given master.
str_ wrap heart with taservice. multiservice and maybeadd
Freezes a graph from a checkpoint.
Freezes the graph and writes it to output_file_path.
save_graph_only_from_checkpoint saves a graph only from a checkpoint.
Restore weights from checkpoint and save them to output_path.
Restore a tf. train. MetaGraph from a checkpoint.
Parses the given token and returns an instance of this class.
Render the tag with the given context. This method is not implemented in this module. It
Validates that the given arguments are valid. Raises a templatesyntaxerror if they are not.
Get the context data for this tag. This method is not implemented in the context manager.
Parses the given token and returns an instance of the class with the given tag name and arguments
Get the context data for this tag. If the tag is not allowed remove it from the
Converts a caffe model to a TensorFlow session.
Freezes caffe_def_path caffemodel_path and inputs
Saves a caffe model to a TensorFlow graph and writes it to output_file
str_ num_columns - number of columns in a sequence seq - a list of strings
Returns a generator that yields every item in the iterable.
Remove duplicates from an iterable and return a new iterable with the duplicates removed. If key is
peeks the first element of an iterable and returns it as a tuple and the original
str_ For each callable in callables suppresses any exceptions raised by the callable.
Raise an AssertionError if iterable is not ordered. The iterable must be sorted in ascending order.
Swap the items in partition_result if the item is not present in partition_result.
str_ Get the first n queues from the database.
str_ Reset the state of the iterator and the saved list.
Parses the given token as a variable and returns it and the as_var. If the
Return a public keychain that is a descendant of this keychain in chain_path.
str_ object_iter - > list of node objects for a given object obj - >
Returns True if obj matches the selector. If obj does not match the selector returns False.
Parses a selector string and returns a list of nodes that match the selector. If the selector
str_ Returns a list of nodes that are parents of the given list of nodes.
Returns a list of the siblings of the nodes in the left hand side of the right hand
str_ Returns a list of nodes that match any of the given validators in the given object
Get the body of a request to the given url with the given method headers and data.
Expire all keys in the cache that are older than age seconds.
str - > None - > None - > None - > None - > None - >
str_ Returns the value of the key k or none if the key does not exist.
str_ Returns True if the key exists in the store. If the key does not exist
Returns True if the timestamp is in the chain. If the timestamp is not in the chain
from_json - Create a new instance from a JSON string. Returns none if the input
Create a new instance from an XML string. The XML string is expected to be a valid
Returns rendered content with minified JSTemplateresponse. jsmin.
Get the contents of the log file and call fn with it. If max_lines is
Get the contents of the table as a list of strings. If max_lines is not
Validate the given token. If the token is not valid returns none. If the token is
Return the Fernet engine for the given key. If the key does not exist create it
Validate a token against the supported digest algorithms. If the token is valid it will return the
str_ Create a new secretlink token for the given object id. If expires_at
float - > float - > float - > float - > float - > float - >
float - > float - > float - > float - > float - > float - >
str average_duration returns the average duration of the total_duration and the number of vis
Sets up the sources from the given configuration dict.
str - > None - > None - > None - > None - > None - >
sourcewatchdog is called every time a source changes. This is the time that the source
_parse_format - Parse a format string into a list of subpatterns and names.
Parse an apachelog line into a dictionary.
Validate that field. data is a valid date and is less than or equal to field.
Verify a token from the request and store it in the session. If the token is valid
str_ Returns the name of the browser or the device if it s a mobile device.
Print a warning if the node does not start with str_. If the node does start
str_ Connects all the receivers to all the registered functions.
Create a link to the secret of the specified record.
Sends an accept notification to the sender of the given request.
Send a confirmation notification to the sender and receiver of the recid specified in the request.
Send email validation notification.
Sends a reject notification to the sender of the given request.
_send_notification - Send a notification from a template to a list of recipients.
Create a new secret link and store it in the database. If the token already exists it
Validate a token against the secret link database. Returns True if the token is valid False otherwise
revoke this link
str_ Create a new request for the given recid. If the recid already exists
str_ Get request by receiver user id and request id.
Confirm the email for this request. The email will be sent to the user to confirm the
str_ Create a secret link for this message.
Generate a SHA - 512 hash from the given parameters.
Verify a timestamp against a message hash and a signature. Returns True if the signature is valid
Returns True if the given record is an embargoed record.
Create an access request for the given pid and record.
Confirm an email for a given record.
Get a connection to the SSH server.
Returns the column name in reverse order. If the column is not selected it returns none.
Returns a string representation of the currently selected item.
str_ Returns the items of the query. If the order is set to asc then the
Returns the version of the file. If the file does not exist returns an empty string.
Set the version of the file to new_version. If the file does not exist it
str_ Start the timer and connect to the ssh server if needed.
Context manager to run the event loop. This is a long - lived context manager.
Delete a page of secret links. You can use this to delete a page of secret links
str_ Stop the timer and stop the factory and the connector. This will stop the timer
emptyqueue - Empty the event queue and send it to the client.
str - > None - > None - > None - > None - > None - >
Create the elasticsearch client and start the event loop.
str event - > proto_pb2. event
Encode a list of events into a protobuf message.
Decode a message from a string into a protobuf message. Returns None if the message cannot be
str - > None - > None - > None - > None - > None - >
Generate previews for a given image.
Retrieve a file preview.
This is the main loop of the worker. It is run in a separate thread. It
bool - True if the time has passed since the last hot loop or the time has passed
Abort the SASL connection.
Saslprep does the actual mapping of a character to a SASL string.
Returns the admin footer for the given template tag.
Build the payment parameters for the given amount and client_ref.
Build parameters for registering a credit card.
Create a new payment with an alias. The alias_registration_id can be used to
get_version returns the current version as a string. If no version is provided the current
_postconstruction function called after the QAbstractItemView is instantiated. It sets up
_configureshortcuts configures the shortcuts for the navigating up button.
Called when the user activates an item in the filesystem widget. If the item is not
Event handler for the selection of an item in the list. This is called when the user
str navigates to the item at index. If index is greater than the number of
str_ = resource_path resource_target_path = resource_target_path
fetchchildren - Fetches the children of the current node and returns them as a list.
str_ Returns the icon for the given index in the source model.
Call the given command with the given arguments and return the pid of the child process.
Return the maximum file descriptor allowed for the current process.
str_ close an open file descriptor and raise an error if an error occurs.
_close_open_fds close all open file descriptors that are not in the exclude
str_ Redirects the stream to the given target. If target is none the stream is
Set the attrs of all the widgets in the given form.
Import a module from app_name and return its sub - module or None if the module
str_ Import all project modules with the given module_name from all installed apps.
Includes a template with the given context. If the template is a dynamic include the dynamic include
is_valid_filesys - Check if path is a valid file or directory.
is_valid_s3_url - Check if url is a valid S3 URL
str_ Returns the absolute path of a template file.
Returns a list of objects in the bucket. If full_key_data is set to
Build the worklfow json from the task_template and stage_to_s3
Execute the workflow. If override_wf_json is not specified the current workflow will be
archive a folder to a project archive. If dry_run is True the folder will be
Create a directory if it doesn t already exist.
List files in the project archive.
Move the last N files from folder to folder in proj_archive. If folder is a
str_ Create a new instance of this class with the given access_token and environment.
Gets a list of file names in a folder.
Download a file from Google Cloud Storage and save it to target_path.
Checks to see if a file exists on the server.
Gets the parent entity for the given path.
Creates a new folder at the given path. If the path already exists it will be overwritten
Upload a local file to a local file system.
Delete a file or folder.
Validate the storage path.
Creates a new instance of the StorageClient class with the given access token and environment.
Creates a new instance of this class with the given access_token and environment.
Get the metadata for the given entity_type and entity_id.
Delete a project.
Delete the folder with the given uuid.
Copy the content of a file to a new location. If the file does not exist it
Get the signed URL for the given file_id.
Emits a record to the database. If the record is not a dictionary it will be
Converts a service name and version into a string.
Returns a copy of the request with the given headers.
Returns a copy of the request with the given parameters merged with the current params.
Throws an exception with the given class and whether it should be thrown or not.
Returns a list of field names to display in the list_display attribute of the model.
Add a job to run a map function on the inputs. The function will be run on
Run oncotator on a given VCF.
Sort a list of strings in alphabetical order using a function to sort the strings in alphabet
Return a list of datetime objects.
Load the loadexport. json file in the given folder and return self.
Shifts the data in the array by t. The data will be shifted by t.
Returns the sum of all the values in the dataset.
Function to collect RFX coms for a given device. If no device is given
Create a new user with the given username and password. The password will be prompted for
Get the list of VN results from the VN API and return them as a list
Parse the release results and return them as a list of dicts.
Parse the production staff results and return a list of tuples.
Parses the character results and returns them as a list of dictionaries.
Parse the tag results and return a list of the tags as a list of strings.
Parse the results of a search for users and return them as a list of dicts.
tarballs a list of files into a tar file.
For all files in file_paths and call op for each file in file_paths.
str_ Copy a file from a file store to a local temp directory.
Returns a list of docker parameters that should be added to the host.
str_ Refresh the metadata from the database.
Returns a list of all streams in the database.
str_ is the path to a JSON file in the given directory. If the directory does
parse_search - Parse search results. stype - Type of search to parse. soup -
Reset the API key to the default value and save it to the database. Returns the new
Returns a list of User objects for all users in the database.
str_ is the name of the BWA tool. It is the name of the
connectordb returns a connection object to the server. If the connection object already exists it
Add a stream to the database. If the stream does not exist it will be created.
Add a new stream to the database. If the stream already exists it will be overwritten.
Insert a new value into the stream with the given name. If the stream does not exist
Start synchronizing with the server. This method will block until the server is ready to receive
str_ Stop the timer. This is a blocking call and should not be called directly.
str Download a URL to a local temp directory and write it to the job s filestore
str Upload a file to S3.
str - Shows all labels for a given ontology.
Print the hierarchy of the given ontology.
Get the mean insert size of a BAM file in the work_dir.
Create a new file in the database. If schema is a string it will be converted to
Export the dataset to a JSON file in the specified directory. If the directory does not exist
Return a device object for the current path.
str_ Get a list of all labels for a given ontology.
str_ Returns an iterator over all the Hierarchy objects in the given ontology.
Get an empty config file and remove it from disk. This is useful when you want to
Get the path to the mount point of the current docker container.
Add an option to the argument parser.
Create an argument parser for this command.
Create the pipeline command to run the pipeline in the given workdir_path and config_path
Set the HTTP basic auth for the request and the websocket connection.
handleresult - handleresult - handleresult - handleresult - handleres
Ping the server to see if it is still alive.
str_ Create a new CRUD resource.
str_ Update a resource in a CRUD resource.
Delete a resource from the CRUD.
Subscribes to a stream. The callback will be called when the stream is received.
Return a list of all the devices in the database.
Run a cutadapt tool on two 3pr adapters. If r1_id and r
Run samtools - faidx on a given reference ID.
Run samtools index on a BAM file.
Run sambamba_markdup on the given BAM file.
Run samblaster on the given sam file and store the results in a temporary directory
Run Picard to mark duplicates in a BAM and BAI files.
Run Picard sort on a BAM file.
Run the kallisto tool.
Get the affinity of the users in a test run.
str - > None - > None - > None - > None - > None - >
Subscribe to a stream. If the stream is already subscribed the callback will be called with the
Connect to the server and start a new thread if needed. Returns True if the server is
Start the reconnector thread.
Resubscribes to all of the subscriptions in self. subscriptions and sends them to the
Called when a websocket connection is established.
Called when the WebSocket connection is closed. This is called when the WebSocket connection is closed.
Called when an error occurs in the websocket connection. This is called when the websocket connection is
This function is called when a websocket message is received from the client. It is called by
Check if the connection is alive. If it is it will send a ping to the server
Use GATK to select variants in a GATK file store.
Check if a BAM file exists and if it doesn t return a bool_ value.
Write the configuration to the config_path in JSON format.
str Get the config from the config file. If the config file doesn t exist it will
Get a term from an ontology by its IRI.
Search for an ontology by name. If query_fields is not specified all the query fields
Suggest an ontology by name. If no ontology is given the name will be used.
Iterate over all descendant terms of an ontology.
str _iter_descendants_labels - generator for all descendant labels of an ontology.
str_ Yields all the labels in the given ontology.
iter_hierarchy returns an iterator over all terms in the hierarchy of the given ontology.
Run fastqc on r1_id and r2_id.
Add a stream to the query.
Start a job in the current working directory and return the hostname of the running job.
Start a new Spark container and wait for it to be ready to be started.
Start a new HDFS container with the given job.
Stop the Spark and HDFS container and save it to the given filestore.
Check the status of the container.
lookup_zone looks up a zone by name and returns the zone name or raises zon
Fetch the config from r53 and return it as a list of lxml. etree.
merge multiple r53 config chunks into one r53 config and return a new r53 config
Validate a changeset to make sure it has the correct number of changes rrs and values.
Return a list of all members with the lowest fitness score in the list of members sorted by
str Returns the fitness score of all the processes. If the number of processes is greater than
str - Returns the average cost function value of all the processes in the group.
str - Returns the median cost function value for each member of the group. Returns none if
str Parameters of all the processes in the process group.
Returns a list of the members of the process. If the number of processes is greater than
str Parameter Add a new parameter to the list of parameters to be passed to the function.
Normalizes the keys of a dictionary to make it easier to use the same format as the keys
Returns a generator of all the environment variables in the system. The keys are lowercased.
str_ Throws an exception to a callable.
Transform a list of hits into a list of packages sorted by name.
Convert the result of a query into a string of the given type.
Convert an HTML string to an XHTML string. This is done by prepending the prefix to
Convert an xhtml element to a html string.
Open an XML document in a web browser.
Drops this node from the tree. If the node is the last node in the tree
Drops this tag from its parent. If the tag is a string it will be added
Execute a CSS selector expression on the current node and return the result as a string.
Yields a generator of namedtuples for each member of a logger s log handler.
Get the number of occurrences of the string in the environment. This is used to get the
Returns True if the class is a single class or False if it is a multi - class
Returns True if this is a single module or a single class.
Check that the request is a dict and that it is a list or a dict.
Check that the id is a string and is an integer. If not raise an exception.
Decode a file - like object into a unicode string using the sys. getfilesystemencoding function
Escape all string arguments in an object.
Returns the codec name for the given encoding or none if the encoding is not supported.
Detect the encoding of a UTF - 8 string. If the string is not a UTF -
Returns the remote address for the given forwarded_for list. If the forwarded_for list
Convert an object to a decimal.
Parse an XML string into an Element object. If the element is not an Element it will
Parse an XML file and return an etree. ElementTree.
str_ Converts a Beautifulsoup tree into a list of BeautifulSoup objects.
Returns a traceback object for the current exception.
Return a string representation of the exception that occurred during the execution of the function.
Render the summary of the error.
Generate a plaintext traceback for the exception.
Render the source table and return it as a string.
Search for a match in an egg_info string. If search_name is none return
Sort links by eggs and not by egg fragment.
Get the content - type of the given URL.
Returns an iterator over the links found in the document. The links are returned in the order
Returns True if the request is verifiable. If the request is trusted returns False. Otherwise
Returns a list of files that should be included in the manifest for the given package.
Exclude data files from a list of files based on the exclude_package_data dictionary.
Parse a requirements file and return a generator of requirements.
Given an iterator of lines join each line with a single string. If the line does not
Yields lines from iterator that are not comments.
Raise syntaxerror if the node is not an allowed type.
return an ast. Attribute node as string
Convert a JSON string into a number or return the original string if it s already a number
str _refcnt _app_ctx_stack _push_app_ctx_push
str_ Pop an appcontext from the stack. If exc is not None it will be
Returns a copy of the current instance.
Match the current request against the url adapter and return the url rule and view_args.
str_ Pushes the current request context onto the app context stack and opens a new session
str_ True if the distribution is editable False otherwise.
str_ Register a url value preprocessor function.
str_ Register a function to be called when the URL defaults are not defined.
Get the root path of the given module.
str_ return a loader for the Jinja2 templates. If the template_folder is
Run the completion script for the specified shell.
Returns the cookie domain for the given app. If the cookie domain is not set it will
Return True if the root is a purelib.
Yields the paths of the uninstallation files in the given distribution. This is a generator
Check that the given version is compatible with the current version of the wheel. If it is
Build a single wheel and move it to output_dir. Return the path to the wheel
str_ generator for all symbols in a code object.
Write the delete_marker_message to the pip_delete_marker_filename in the
Returns True if the current process is running under a virtualenv. If the current process is not
str_ Returns the username of the current process.
Generate a distutils scheme for the given distribution name.
Parse the Cache - Control header and return a dictionary with the cache control headers as keys and
Cache the response for the given request and response. If the response has a cache control header
_load_template loads a template from the given dev_path. If dev_path
Save the current state of the file to disk. If the file already exists it will be
Convert the given value to the appropriate type. If the value is a string it will be
str_ = Filterer. name filters = List of filters to be added to filterer
Add handlers to the given logger.
Common configuration for a logger based on a dictionary of configuration values. This method is used to
Execute a script in the given globals with the given locals. If no locals are given the
str_ Override tempfile. tempdir with replacement directory. If the replacement directory does not exist it
get_url_rev returns the url and revision number of the current git repo.
Get an item from an object. If the object does not have the argument it will try
Generate the source code with the given name and filename. If defer_init is set to
Get the default cache path. If the current process is not running in the default cache path
find_eggs_in_zip - Find all eggs in a zip archive.
find_on_path finds all distributions on a given path. If only is set to
Declare a namespace in the context of the current module. If the namespace already exists it
str_ Get the mro of cls. If cls is not a class it will be
Find an adapter in the given registry based on the class name of the given object.
str - > None - > None - > None - > None - > None - >
str_ Returns an iterator over all entry points for a given group. If no name is
str_ True if the given distribution can be added to this distribution.
Evaluate a marker in text and return the result as a string.
Evaluate the given text using the _markerlib library and return the result as a string.
Returns a string representation of the given record. The record is formatted according to the current indentation
Get the decimal quantum of a number with a given precision.
str_ Returns the precision of a decimal number.
Returns the scientific notation elements for the given value and locale. The scientific
Get the unpatched class from the class hierarchy.
Check requirements for distutils setup errors.
Fetch an egg from the dist and install it if it doesn t already exist.
\ x1b [ 1mNAME \ x1b [ 0m dice_
str_ - > priceclass. parse - > priceclass. parse - > priceclass
Creates an attribute that validates that the value of the attribute is an instance of price class.
str Validate a request object.
Get the method from the arguments.
Apply the given method to the given arguments and return the result. If an exception is raised
Returns the blueprint s module name or None if the blueprint is an old module.
Returns the blueprint of the endpoint.
make_abstract_dist - Creates an abstract distribution from a req_to_install.
_walk_req_to_install walks through the requirements to install and returns a
Return a list of all namespace packages in the distribution.
Serialize the given object to JSON and return it as a string. If the object is a
str - > Tokenize the given doc with the given annotation.
html_annotate_merge_annotations - Merge annotations from tokens_old to tokens_
str_ Copy annotations from src to dest.
compress_tokens compresses a list of tokens into a single list of tokens.
str_ Converts a list of tokens into a list of HTML strings.
str_ For each token in the list yield a list of tokens. If equal is True
Locate an unbalanced end from pre_delete and post_delete.
fixup_chunks takes a list of chunks and returns a list of tokens that can be
Flattens an HTML element into a list of tuples.
str_ Splits the given text into a list of words. Returns an empty list if
Return a string representing the start tag of an element.
Return a string representing the end tag of an element.
serialize an etree. Element as an HTML fragment. If skip_outer is True the outer
Fixup ins and del tags.
Returns the cache URL for the given operation and version. The cache URL includes the service domain
Autolink an element and all its children. This function will recursively link the element to
Kill all conditional comments in the given XML document.
str - > Document from html string.
Export the current repository to a file at the given location. If the location already exists it
Returns the revision number of the given location.
Returns the name of the module. If self. import_name is not set it will
Returns True if the exception should be propagated. If the exception should not be propagated returns False
Find the path to the instance in the given package. If the package is not found return
Update the template context with the template_context_processors defined in the blueprint.
handle_http_exception - Handle an HTTP exception. If the exception is not handled by
Handle an exception and return the response. If the exception is a request exception it will be
Raises a routing exception if debug is enabled and request. routing_exception is not a
str Dispatch the current request and return the response. If the request is successful the response will
Makes a default response for OPTIONS requests based on the current request s url_adapter.
Create a URL adapter for the given request. If the request is not None the URL adapter
Injects the default values into the given endpoint.
A generator that yields all unique values in an iterable.
Handle the may_requires key in the pkg_info dictionary.
Converts a Requirement object into a string that can be used as a requirement requirement requirement string.
Convert a pkginfo. txt file into a metadata. txt file.
Returns a generator that yields all the modules in the project. This is a generator that yields
Returns a generator of all classes in the project.
Returns a generator that yields all the method names of the class and the name of the method
str_ True if the given path is a module path False otherwise.
A generator that walks the directory tree starting at basedir and returns the root directories and files
Dump the default values of the keyword arguments to the kwargs dict. This function is used to
Loads the default argument decoder for the given kwargs. If the current app is an instance of
Set multiple keys to a value. Returns true if the key was successfully set False otherwise.
Increment the value of a key by delta. If the key does not exist it will be
Dumps an object to a string.
Build a dictionary of editable options from a request string.
str_ Finds the link for this package.
str_ Creates a source directory if it doesn t already exist and returns it.
Remove the temporary source directory if it exists and the temporary build directory if it exists.
Get the distribution from the egg_info_path and return it as a distribution object.
Returns a list of site - specific config directories for a given app name.
Returns an iterator over all the files in all modules in the system. This is useful for
Restarts the process with a reloader. Returns the exit code of the process or None
to_text converts a string to a text_type. If the string is None it
Returns the path to the CA bundle in the system or None if it can t be found
str_ - > None - > None - > None - > None - > None -
Parse the given stream and return a Document object. The stream can be a string or a
Parse a fragment from the given stream and return the result as a string. If the stream
str - > list of transmissions for a given word
convert argstotokens file to a list of tokens
str Bind the server to the host and port specified in the constructor.
str_ Prints a report message to the console.
Load bytecode from a file - like object.
_stylesheet_param_dict - - - - - - - - - - - -
Run the given command in this process s subprocess.
Get the version of the Python implementation as a string. If not found use sys. version
Returns a list of distribution objects for the given location and basename.
Find all external links in a page and return them as a list of urls.
Open a local file or a URL using urllib2. urlopen if it s a local file
str_ Returns a list of paths that have been removed from sys. path.
_init_pathinfo returns a set of all directories in sys. path.
Add a package to sys. path and return a set of known paths.
Add all packages in the given directory to sys. path and return a list of paths that
Check if enableusersite is enabled on this system.
Alias mbcs for Python 2 and 3.
Set sys. encoding to str_ if possible.
Forces global eggs after local site packages.
Fixes the sys. path so that we don t have to look at the same file
A wrapper around subprocess. Popen that enqueues stdout and stderr for debugging.
have_pyrex returns True if any of the pyrex implementations are installed.
Convert source files from pyx to the language specified in self. language.
Run the application and log it in a traceback. If an exception is raised it will be
Get the content of a file. If the file does not exist it will be created.
Return True if name is a URL.
Unpack a file from a URL to a location. If download_dir is set to True
Download a file from an HTTP link to a temporary directory.
Check if a link is present in the download directory. If so return the path to the
Register a currency formatter with the context.
str_ is the name of the component to be used as the name of the component.
Decode the given data. If decode_content is True it will try to decode the content
The default template context processor is a mapping from the template name to the request and session.
_render renders the template with the given context and sends a template_rendered signal to the
Render a template with the given context. If the template does not exist it will be created
str_ Render a template string with the given context.
Parses a version string into a Python version string.
is_declared returns True if the given name is declared in the context of the function.
Visit a Name node and add it to the list of declared and undeclared identifiers.
visit a FromImport node by writing the template and the name of the template and the name
str_ str_ str_ str_ str_ str_ str_ str_ str_
unicode_urlencode - URL - encode a string or a unicode object to a unicode string
Returns a list of wheels that match the given requirement.
populate_requirement_set populate a requirement set from command line arguments and command line options.
Export the image to a temporary location.
Lookup an item in the specified responsegroup.
iterate_pages - iterate over all pages in the result set.
Returns the closest ancestor of this node or None if there is no such ancestor.
Returns a list of amazonbrowsenode objects representing the children of this node.
_safe_get_element - Get an element from a path without raising an exception.
_safe_get_element_text returns the text of the element at the given path
safe_get_element_text returns the value of an element as a datetime. date
Returns the price and currency from the element. If the element is not present returns None.
Returns the price and the currency of the list. If the list does not contain a price
str_ is the request method. If the request method is str_ is the request method
Build a response from the given response. If from_cache is True the response will be
Convert a string to title case and remove the first letter from the beginning of the string.
str_ Returns True if val1 == val2 False if val1 == val2 False
Verify that the signature of the given key is equal to the signature of the given value.
derive_key - Derives the key from the secret_key and the salt.
Get the signature for a given value.
Signs a value with the current key and returns it as a string. The value is
Verify the signature of a value against a base64 - encoded base64 - encoded signature.
Unsigns a signed value. Raises a BadSignature exception if the signature is invalid.
str_ - Returns the signature of the value with the timestamp and the signature of the timestamp
Validate that signed_value is a valid signed value. Returns True if valid False otherwise.
Dumps the given object to a string using the given salt. If the object is not a
Raises a serviceexception with the given error message for the given request id and error.
Return a generator that yields all packages that are parents of the given list of packages.
str Walks the given base_path and returns a list of relative paths to all subdirectories
Prepare a response for the given request. If the request does not match any of the headers
Unsign a wheelfile.
Unpack a wheelfile to a directory.
str_ Installs the scripts for each of the distributions in the given list of distributions.
arrange all the graphs in the graph and redraw the canvas.
str_ redraws the canvas of the graph.
str_ Returns the node with the given id or None if it doesn t exist.
This method is called when the directed property of a graph has changed. If new is True
Called when an edge is added or removed from the graph.
_component_changed handler for the component change event.
Event handler for the left click of a tool.
This method is called when the diagram canvas is changed. This method is called when the diagram
Clear the current diagram canvas and redraw the viewport.
_domain_model_changed_for_diagram - This is called when the domain
unmap_model unmaps the given model from the current map_element.
map_element - Map an element to its containment_trait and add it to the
Parse the X - OT data into a list of X - OT objects. If the data
Process the FONT token and set the pen. font attribute.
Process an ellipse token and return an ellipse object.
Process a polygon token and return a polygon object.
Process a polyline from a list of tokens. Returns a polyline object.
Process text tokens.
proc_image - Print image tokens to stdout.
render_grid_file - Render a GridFile object to the response.
Save the given object to the. dot file.
_ Loads the. dot file into a Python object and returns it as a string.
Returns True if point_x is inside the rectangle of this rectangle. Point_x and
Draw the bounds of the current object on the canvas context.
Open a new dotgraph wizard.
This method is called at the beginning of the application. It creates a new database connection and
_parse_dot_code_fired - Function to parse dot data.
new_model - Creates a new model if the user wants to confirm the creation of a
Open a file dialog to parse a dot file and store the model in self. model.
Save the model to a file. If the file does not exist it will be created.
Save the model as a file.
Configure the graph of the model. This method is called when the model is initialized.
Configure the nodes view if the model is initialized. This is called when the model is initialized
Configure the edges view in the model.
Shows the godot of the current state of the model.
Adds a new node to the graph.
Add an edge to the graph.
str_ Add a subgraph to the list of subgraphs to be edited.
str_ Add a new cluster to the list of clusters in the graph.
Request a graph from the user. If the user has selected a graph it will be selected
Godot options widget callback.
Configure the dot code.
Called when the application exits. If prompt_on_exit is True asks the user
str Move all components to the origin of the pen.
Save the object to a file - like object.
Load an object from a file - like object or file - like object.
Save the dataset to a file.
Load an object from a file. If no format is specified the file extension will be used
str_ Creates a property that adds an alias to an object and returns a new object.
str_ Parse a text file into a generator of words.
Returns a list of start words in the document.
add_chain - add a chain to the markov chain. If the chain already exists
Remove a chain from the model. If the chain does not exist an error is raised.
str_ Builds a chain from a source file.
Create a dot file with the given program and format. If no program is given the program
Delete a node from the graph.
get_node - get a node by its id or None if it doesn t exist.
str_ Delete an edge from the graph. If no such edge exists None is returned.
Add a subgraph to the graph.
Log a warning if the program is not present or if it is not a file in the
_set_node_lists - method to set the _nodes attribute of each edge.
str_ Parse a dot file into a graph.
Parse a dot file or file path and return a dictionary with the parsed dot data.
Build a top - level graph from a list of tokens.
str_ Returns the time units and multiplier for a given number of seconds.
Format a duration in seconds into a human - readable string.
str Name of the new file and load the graph from the editor input file.
Create and return the UI for the graph tree editor.
A generator that yields windows of a given length. If the length is less than overlap then
get all the children of an object as a list of strings
str_ Append a child to an object.
str_ Inserts a child into an object at a given index.
str_ Delete the child at the given index from the given object.
This method is called when the children of an object have been replaced. The listener will be
This method is called when the children of an object have changed. It is called by the
Return the label of the given object. If the label is empty return the empty string.
Set the label on the given object.
Called when the label of the trait has changed.
str_ Create the edit_traits UI and store it in self. _graph.
Update the editor based on the current state of the widget.
_add_listeners - Add listeners to the node and edge objects of the current object.
str _nodes_replaced Remove old nodes and add new nodes.
_nodes_changed event handler for nodes_changed events.
_add_nodes - add nodes to the graph for a given list of features.
str _edges_replaced - deletes old edges and adds new ones.
str _edges_changed - Changes the edges of the graph.
str _add_edges - add edges for a list of features to the graph.
_parse_xdot_directive - Parse a xdot directive.
This method is called when the user clicks on a drawing button. This method is called when
Returns a node object based on the row_factory_kw. If the row_factory
Returns an edge object for the given row_factory_kw. If str_ is not
str_ Prepare the database connection for use in the template.
parse xdot drawing directive
xdot_label_directive - Parse xdot - style label directive and add it to
_drawing_changed handler for drawing changed events.
Called when the position of the component has changed.
Called when the position of the widget has changed.
normal right down event handler to redraw all the tools on the screen.
Print all the style definitions for a given pygments. style. Style object.
str_ Draw the mainlayer.
is_in - Check if a point lies inside the polygon.
str_ Draws the mainlayer of the pen.
str_ Handle an event by calling each registered engine s method with the given args and kw
str_ Runs the function in the in_queue and puts the result to the out
Get the full url for a given page number.
Render the previous and next links.
str - > str - > str - > str - > str - > str - >
Creates a URL identifier from the given user and password.
str_ Finds all modules in a given directory and returns a list of those found.
rdiscover_modules returns a list of all modules found in the given directory.
rlist_modules returns a list of all modules in the given module. If the module
str_ Creates a directory if it doesn t already exist. Raises oserror if it doesn
Create a blob with the given key and contents. The contents of the blob will be stored
luhn_check - Check if card number is a valid luhn card number
str module_name - The name of the module to load. module_name - The
str_ Add a path to the list of paths to look for.
find_module finds the module with the given name. If the module does not exist it
Split a line of text into two parts. The first part is the first part of the
Remove all namespaces from the root element.
Returns a string describing the consistency of the package. If desired_version is not specified the
from_yaml - Create a new instance of this class from a dictionary of keyword arguments.
Merge the new_dict with the current actions.
Execute all the actions in the list of actions defined in self. actions in the given cwd
Add details to a message to be displayed to the user. This method is called by the
Emit a record and send an email if it is too long to send. If it is
Add the image rendition to the context.
Log an attempt for the given key. If the key is already in the list of attempts
Add a URL to the queue.
Start the workers for the given number of workers_per_task. If workers_per
Set a key to a value in the kvstore.
Get a value from the kvstore. If the key does not exist a KeyError is raised
Recurse through the kvstore and return a dictionary of the keys and their values.
Returns the header value for the given key or None if the key does not exist.
Delete a key from the kvstore. If recursive is True the key will be recursively deleted
plot a heatmap for the feature importance report x and y.
Add months to a timestamp.
Add months to a date.
is_christmas_period - Check if the current period is a christmas
Use the specified music service or create a new one if it doesn t exist.
Use a named storage service. If the service does not exist it will be created.
from_csv - Load data from a CSV file and convert to a dictionary and a list
Returns a list of lists with the last num_ elements in the JSON file.
Write x and y to a JSON file in self. path. If self. gz is
Returns a list of x and y where the label is equal to the reference label.
average by label
str - Restore the data from the session to the data_dict and store it in the
str_ Merges dict b into dict a.
find_blocks finds all blocks in the installed apps and adds them to block_registry.
Verifies that the given block is valid. Raises an exception if the block is not valid.
str Register a block with a given block_type.
Unregisters a block type from the block registry.
Convert a file to mp3 and return the new file name. If the file already exists
Returns a reasonable version for the given desired version. If the desired version is less than the
Check if SSL is enabled for the current request. If it is enabled redirect to the endpoint
Parse a Content - Type string into a contenttype object.
Parse a list of strings into a list of strings.
resize an image to fit the width of dest_w
Download a video from youtube. Returns the filename of the video or None if there is
Connect to the server and get the folder id from the server.
Upload a file to the server and return the path to the file. The file will be
Creates the music folder if it doesn t already exist.
Update the filenames in self. sky_file based on self. input_path and self
str_ + file_name + is the name of the file containing the A - phi
a_phi = a_phi * scale_parameter
This method reads the pure water absorption from a file.
str_ + file_name + is the path to a pure water scattering file.
This function reads the iop from a CSV file. If the file does not exist it
Write an iop to a file.
str_ + scattering_fraction + num_
build_a - Builds the a attribute of the object.
build_c - Builds the c attribute from the current values of a and b.
build_all_iop Builds all IOPs.
str_ Batch parameters.
Read a parameter file and convert it to a dictionary. The file will be read as a
Convert a string to a list of floats.
Set the handler for the given signals. The handler will be called when the signal is received
A pseudo - handler that logs the signal and the frame as a warning to the log.
This is the default signal handler. It is called when the user presses SIGHUP
Pause the process for the specified number of seconds. If the number of seconds is greater than
Aborts the process with the given signal and exits with the given number of exit code.
This is the function that is called when the user presses the status signal. It will
Remove an event from the event list.
fetch_metric returns a dict of metric values sorted by number of values in the metric.
str_ The signature of the function is determined by the signature of the function being called.
str_from_partial sets self. pargl and self. kargl from a
Returns a tuple with the new argv and extra_argv as well as the old argv.
Check if a file is in the list of metainf files that should be ignored.
Returns a key for a file.
Convert a VLQ string to an integer.
Parse the header of the archive.
Convert seconds to a duration in seconds. If the duration is greater than the number of minutes
Print details about the game.
str data - Get the data from the ui and store it in the self. data.
Search for a file result in the file dialog and display the result in the GUI.
Write the current parameters to a file. This is a convenience method to write a batch to
This function is the main entry point for the data_processing method. It takes the data
str Display the connection to the the graphic.
Displays the error message in the ui. error_text_label.
str Hides the error message.
Runs the simulation.
Cancels the current planarrad process.
Ask the user to quit the planarrad process.
Saves the figure to disk.
Open the log file in the uilog text edit window.
Open the documentation in the current working directory and display it in a window.
Set the prerequisites for this widget.
str Click event handler for graphic context menu.
str_ Mouse move event handler
Display the graphic at the given coordinates.
Returns a lockset that signs the given genesis block with the given private key.
Sign the message with a private key.
Return the hash of the message.
str Check if the configuration is valid.
Issue funds for a message sender. Returns true if the transaction was successfully successfully issued.
Return the last lock in the list of rounds.
str - Returns the last voted blockproposal or None if there is no vote.
str_ Returns the last valid lockset. If no valid lockset is found None is
str_ Returns the delay between the round timeout and the round_timeout_factor.
on_proposal - Called when a proposal is received from the hdc server.
mk_privkeys returns a list of privkeys with the given number of colors.
Returns the delay between the sender and receiver based on the bandwidth of the sender and receiver.
Delivers a packet to a sender on the given receiver. The packet will be sent to
str_ to_native_contract_class returns the native contract class corresponding to the given
Update the filter by adding data to the filter list if it is not already in the filter
Convert a VGG image to an image in the form of a 2D numpy array.
str_ - > vgg - > img - > vgg - > img - >
Get the function layer for the given layer_name.
Get the output of a layer. If the layer doesn t exist it will be created.
str_ Returns a dictionary of features for the given input x in the given layers.
Create a new key file at the given path. The file will be created with a random
Returns the exit code of the program. If the program is already finished raises an error.
Release all resources associated with the table. Raise giraffeerror if the table is
Returns a tuple of the table names and the table name as a string. If the table
str_ fix_compile - This function is called by distutils. ccompiler. compile
Returns the home directory of Teradata for the current system.
Get the value of a configuration key. If the key does not exist the default value is
Set a value in the configuration file. If the key does not start with _ it will
table - Prints a line of text if the line is not longer than num_ characters
write the default config to the home file. If conf is none write to home file.
Set the names of the columns to be filtered. If no names are given all columns will
Returns a string representation of the CSV file as a list of strings. If the CSV file
float_with_multiplier extracts a float from a string and returns it as a float.
Returns a dictionary of the gains in the given string. If the string is empty returns
Return a dictionary of device settings from a string.
Wrap text with the specified indent.
Detects the devices and returns a tuple of the list of devices and a string describing the
Set the center frequency of the PSD.
Calculate the frequency and pwr from the Fourier transform of the input PSD state.
Wait for the result of the PSD and return it. If the PSD is full wait for
Update the state of the Welch signal with the data from the given samples_array
Read a pwr_array from a file - like object and return it as a tuple
str_ Write a PWR segment to a file - like object.
Submits a function to be executed in a separate thread. If the queue is full the
time_to_repeats - Convert an integration time to a number of repeated samples.
Create a buffer with the given bins repeats base_buffer_size and max_buffer_
Setup the Fourier transform with the specified number of bins and number of repeats.
str_ Stop writing to the device and close the underlying stream.
run cmake with the given arguments.
Returns a set of datetimes that are within the given time range.
Returns a datetime with the same hour minute second and microsecond as the given datetime.
Convert a datetime to a mask of days in the week. The mask is the same as
str - > Set of datetimes to be deleted.
str_ to_keep returns a set of dates that should be kept.
str_ - > dates_to_delete - > dates_to_delete - >
Returns the SPI control byte for the given read and write command.
Read a single bit from the memory at the given address. If the bit is set to
Write a bit to the specified address. If value is True the bit will be set to
str_ Returns the bit number of the given bit pattern. If the pattern is equal to
Bring the GPIO interrupt pin into the userspace.
Set the gpio interrupt edge to the specified string. If the file doesn t exist it will
Wait until a file exists. Raises a timeout exception if the file doesn t exist.
str Register a callback to be called when a pin is settle.
deregisters a function map for a given pin number and direction. If no pin is
Enable GPIO interrupts on the user s userspace.
Send some bytes to the SPI device and return the bytes sent.
Renders the tab and its child tabs into a HTML string.
str_ True if there are any errors in the form. If there are no errors return
render_link - Render the link to the given form with the given template_pack.
Extract the version of a package from the configuration file. If the package is not found in
Formats the value of str_ in the form kwargs and returns a copy of the kwargs.
Check the status of the response and raise an exception if it is not valid.
Method to make a GET request to the API with the given parameters. If no parameters are
calc_humidity - calculate humidity from temperature and dewpoint
calc_dewpoint - calculate the dewpoint from temperature and humidity
Publish a message to the server.
Calculate the CRC for the given data.
Verify that the data is a valid vprocrc. If the data is valid the function
Unpack a Storm date into a string.
use rev_b_archive to determine whether to use rev_b archive or not.
wakeup function to check if there is an ack in the wake_ack queue.
Send a command to the node and wait for a response.
get new archive fields from dmpaft
Parse the archive into a list of fields. This is the main entry point for the archive
Update a weather station in a list of pub_sites and publish it to the server.
Initialize the syslog and console logging handlers. This is done by adding a syslog handler to the
str get_pub_services - returns a list of pub - services for the given opts
Get the value for a given station and interval. If no value is found return no_
Set the parameters of the Windshield object.
str_ Set the arguments to be passed to the function.
Publish the command - line arguments to the file specified by self. file_name.
str_ Returns True if all of the requirements fulfill the given requirements. If identity is not
Push a new override context onto the stack. If use_parent is True then the override
Pop an override context from the stack.
A context manager that overrides the current value with the given value. If the current value is
str - > None - > None - > None - > None - > None - >
Pops an additional context off the stack and raises an error if the stack is not empty
Context manager that adds additional information to the current context. The context will be pushed onto the
Given a list of field names return a list of field names that are not duplicated.
interpret_stats returns a string representation of the stats in the results object. If the results
Extract query parameters from user_ns and return them as a dict.
Returns a pandas DataFrame with the data in the DataFrame. The DataFrame will contain a list of
Returns a networkx graph of the results in the form of a multidigraph.
Returns a matplotlib. pyplot. Plot object with the data in self. ys.
Returns a CSV representation of the table as a string. If no filename is given returns none
Returns the context data for the widget.
get_widgets_sorted - get all the widgets sorted by their position
get_widgets_that_need_update - Returns a list of widgets that need to
str_ Register a widget to the dashboard. widget_cls must be a subclass of dashboard
str - Unregisters a widget class from the widget registry.
Get the last update date of the widget.
str_ Save a setting to the database. If the setting doesn t exist create it.
bool_ True if the last update should be made.
concatenate two lists of numpy. ndarrays or numpy. ndarrays or numpy.
Check if the given arguments are compatible with the spark context.
Check that the axes argument is a tuple and that it is a valid number of dimensions.
Wrap a function into a boltarraypark.
Aligns the array along the given axes.
str_ - > spark. array. array. tospark. array. tospark.
str_ Return the tordd of the array along the given axis.
Returns the number of chunks for a given plan and shape.
Returns a boolean mask for a given set of indices.
Repartition the RDD into a new RDD with npartitions elements repartition
str_ StackedArray. stack - StackedArray. stack - StackedArray.
Aligns the data to the given axis.
str_ Return the first element of the RDD.
Return the mean of each group along the specified axis.
Return a statistical representation of the variable along the specified axis.
Compute the standard deviation of each group along an axis.
Sum the values along an axis.
Return the maximum value of each element in an array along the specified axis.
Return the minimum value of each group along an axis.
str_ Transpose an array.
swap axis1 and axis2 and return a new array with the same shape.
Reshapes keys and values to the given shape.
_reshapebasic returns the index of the new shape or - 1 if the shape is
Return a new RDD with values converted to the given dtype.
Returns a new RDD with values in the range [ min max ).
Convert to array of the same shape as self. shape. If self. _ordered is
str_ if arg is not a tuple return it as a tuple otherwise return it as is
str - > tuple - > tuple - > list - > ndarray - > str - >
Check that a shape is a valid shape for a given set of axes.
Return True if a and b are all close i. e. a and b are all
Convert a list of integers to a list of floats.
str - > slice - > slice - > slice - > slice - > slice - >
Check if new and old can be transposed.
Raise an error if new is not the same as old.
str_ Concatenate a list of ndarrays to a single array of ndarrays.
iterexpand expands all dimensions of the given array to the given number of extra dimensions.
Lookup a constructor for the given arguments. If no constructor is found a constructlocal is returned
Construct an array of ones with the given shape and dtype.
Create a new array of zeros with the given shape and dtype.
concatenate two or more numpy arrays and return a new BoltArrayLocal object.
Calculate the discrete likelihood of a data set.
Returns the most likely alpha value for a discrete distribution of data.
str_ discrete_alpha_mle Calculates the discrete alpha of the MLE of the
Returns the best alpha for a given set of alpharangemults.
Plot the PMF of the data. If no data is given the data is plotted
prints the lognormal distribution of the data and the likelihood of the model. If d
Sanitizes HTML to only include tags and attributes that are allowed to be turbo.
Configures the Yandex analytics.
Returns a list of tuples of tag names and their string representation.
Returns the MD5 hash of the decoded key.
Returns the SHA256 hash of the key in base64 encoding.
Hash the key using SHA - 512 and base64 encoding.
str_ - > long - > long - > long - > long - > long
decode_key decodes the public key from the given pubkey_content and returns the decoded key
Process the SSH_RSA key.
Process the SSH_DSS message.
Process ECDSA SHA data.
Process ED25516 data.
Parse the keydata and return a key object. If no keydata is provided the key
Returns a list of all the known mechanisms in the system.
str_ Main entry point for the CLI. This is the main entry point for the CLI
str_ is the name of the distribution to be installed.
A context manager to create a wave file.
Returns a link to the static HTML page of the H5BP page. If no version
Returns a normalized version of the Django frontend. If no version is given the default version is
Returns the fontawesome page. If no version is provided the default version is used.
Returns the Django modernizr page. If no version is provided the default version is
Returns the jQuery template for the current Django frontend. If no version is provided the default version
Returns the jQuery UI page for the current Django frontend. If version is None the default version
Returns the Django datatables page.
Returns a link to the Datatables CSS page. If no version is specified the default version
Returns the jQuery datatables themeroller.
Returns a Django jQuery Formset as a string. If no version is given the default version
Returns a jQuery scrollto page.
Returns a jQuery - SmoothScroll view.
Returns a link to the Django Twbs CSS page. If no version is specified the default
Returns a string that can be used as a cookie for Google Analytics. If no account is
Return an iterable of hashes for a given user for a given amount of minutes.
calc_expiry_time calculates the expiry time based on the number of minutes valid.
Returns a user token for the given user purpose and minutes_valid in seconds.
Serialize a User instance into a dictionary.
Update a user s profile.
Raises a meteor error if authentication fails.
Validates a token and returns a validated user object or raises an exception if the token is invalid
Check if the request is secure or not.
Get the username of a user.
Creates a new user and logs it in. Returns a token for the newly created user.
This method is called when a user is logged in. It will create a new sub -
do_logout - logout the current user and remove the user sub - id from the user
Login with a password or resume token.
Authenticates the user with the given username and password. If the user is active the
login_with_resume_token - login a user with a resumed token.
str username of the user that sent the password reset request to get a new password token.
str_ reset_password - Reset password for given token and new_password - New password
str_ Merges two dictionaries into a single dictionary.
Get the meteor id for an object or a model.
Given a list of object_ids return a dictionary of meteor_ids.
Returns the object id for the given meteor_id.
Given a list of meteor_ids return a dictionary of meteor_ids
str_ get_object get_object get_object_id get_object_id
Set the default forwards for a given operation.
Set the default reverse for the meteor_id field in the operation model.
Truncates the database forwards.
Truncates the database backwards from from_state to to_state.
Initialize the options for the build_py. build_py. build_py module.
Finalize the options and set the undefined options to their default values. This method is called
str_ to_dir returns the path to a directory given a list of path arguments.
Randomly seed the random number generator with the given values. If no values are provided random
Returns a dictionary of the current state of the state machine. The dictionary contains the current character
Generate a random string of the given length with the given alphabet.
Iterate over all the API endpoints in the given object.
str _api_path_map_cache - Clears the API path map cache.
Pretty - print a value in the form of a string. This is useful for debugging.
This method is called when the websocket connection is opened. It is called when the websocket connection
Called when the connection is closed. This is called when the connection is closed.
This method is called when a message is received from the client. It is called by the
Takes a message and returns a generator of ddp data frames. The message is expected to
Process a message received from the DDP server.
Dispatch a message to the appropriate handler.
recv_connect is called when a new connection is received. This function is called when a
recv_ping sends a ping message to the client. If id_ is not specified the
recv_sub - Sends a sub message to the server with the given name and parameters
recv_unsub - Unsubscribes from the channel. If id_ is not
Send a request to the server and receive a response to the specified method. The response is
DPP sockjs info response generator.
This is the main entry point for the command - line tool.
str_ Print a message if the verbosity level is greater than or equal to num_.
stops all servers and waits for all threads to finish.
str_ Runs the pgworker and waits for it to finish and then waits for all
The main loop of the psycopg2 command loop.
A greenify function that patches psycogreen and psycogreen.
str - > meteor_random_id
Autodiscover all modules in a string and return an API object that can be used
Returns a dictionary with the error reason and details as well as the keyword arguments passed to the
Get an object from the registry. If the object doesn t exist create it and return it
Emits a log record to the meteor. If the log is enabled it will
_ add_resource_object - Add a resource object to the router.
Send a message to the device.
apns_send_bulk_message - Send a message to multiple registration_ids.
Fetch a list of inactive registration IDs from the APNs server.
Send a GCM message to a given registration_id. The registration_id can be
Send a message to a list of registration ids. The registration ids must be a list of
Send the data to the device and return the result as a JSON object. If ids is
Send the data to the API and return the response as a string.
Get a model class from a module location.
str_ Search the Giphy API with the given search term phrase and limit and rating
str - > unicode - > unicode - > unicode - > unicode - > unicode - >
Search for trending giphy s trending items.
str - > gif - > gif - > gif - > gif - > gif - >
screensaver returns a screensaver object for the given tag.
str_ Upload a file to the Giphy API with the given tags.
Normalizes the values in the data dictionary to integers. If the values are not integers it is
_fetch fetches data from the given endpoint_name with the given params. Raises an exception
Returns a generator of giphyimages that are trending from the server.
Returns a giphyimage object for the specified gif_id. If strict is True
Upload a gif to the Giphy API.
Returns an extension element for the given access_control. If the access_control is private
Authenticates the Youtube API using the provided email password and source. If the Y
Upload a video to Youtube.
Check the upload status of a video.
Update an existing video entry.
Delete a video entry.
Check if a video is available or not.
Returns a video object with the video_id as the key and the video_params as
Returns a list of all videos owned by the authenticated user. If no username is given the
youtube_direct_upload - POST handler for youtube_direct_upload requests.
Upload a youtube video to the current user s account.
Return the url to redirect to when the upload is complete.
Remove a youtube video from the database.
str_ Return the entry of the video as a list of Video objects.
str_ Save the video. If the video already exists it will update it. If the
Delete the video from the server.
Update the metadata of a container.
Update a metadata field.
str_ Update the current item s attributes and return the updated item s data.
Parse a string into a list of nodes.
Returns a string representation of a list of trees.
Load a Python object from a file - like object or file - like object.
Load a yaml file into a Python object.
Parse a node string into a Node object.
str_ Create a new node with the given name length and optional list of descendants.
Return a string with the newick of this node and all of its descendants.
str_ Returns the node with the given label or None if no node with the given label
Remove all descendants from the tree that are not in the given leaves. If inverse is True
Remove all internal names from the nodes in the tree. If the tree is a leaf the
Remove all leaf names from the AST.
Returns a list of json_str with all the characters in json_str disposed.
Raise an exception if the setting does not exist.
Returns a list of all the values of the named argument. If strip is set to True
str_ Async callback.
get_cookie - get a cookie from the cookie_monster. If no cookie is
Clear a cookie from the cookie monster. This is a no - op if the cookie
Redirect the user to the OpenID server using the provided callback URI. If no callback URI is
Gets the authenticated user from the request. If the request is not authenticated a warning will be
_oauth_request_parameters returns the request parameters for an OAuth 2. 0 request.
Redirect to the OpenID server to authorize the user using the given OAuth scope and callback URI.
url_concat concatenates the url with the args. If the url already ends with a
_parse_header parses a line of text into a key and a dictionary of parameters.
Add a value to the header. If the header already exists it will be appended to the
Get a list of header values for the given header name. If the header name does not
Parse a single line of text into a dictionary. If the line starts with a space the
str_ - > HeaderParser
Returns the normalized header name. If the header name is already normalized it will be returned.
Convert a string to UTF - 8. If the string is already UTF - 8 return it
Convert a bytes object to a unicode object.
Convert a bytes object to a string. If the value is already a string it is returned
Recursively convert bytes to unicode.
This method is called by bottle when a plugin is created. It will check that the
Select the best matching policy for the given origin and request method. If no matching policy is
Returns the number of points in the grid that are occupied by the given points.
write a grobox to a grobox file with the given title atoms and box
write a set of atoms to a PDB file. box is a box in the form of
str_ Returns a list of molecules with the numbers relative to the total number of the
Resizes a PBC to fit into lipids. This function is used to resize
Returns an iterator over the contents of a resource file as a unicode string.
str message_user - Add a message to a user s log. level - Optional level
str Message for a list of users.
Get the messages for a given user. If the user is not found None is returned.
Add messages to the response if the user is logged in and the request is logged in.
Check the config file and retrieve the data from the config file and update the config file.
Verify that msg. profile is a valid profile name in cfg. data.
str_ Retrieve data from config file.
retrieve_pwd_from_config extracts the password from the config and updates msg. auth
Update the config data for the given message.
Update the config. pwd dict with the authentication information from the given message.
Function to create a new profile from the user input. If the user acknowledges the profile
Display the required items for a given msg_type.
Get the data from the user for a given message type.
Get the authentication information from the user for a given message type.
Configure a profile with the given data and auth.
str write_data - write data to a profile.
write auth data to config. cfg. cfg. profile_name is the name of the
Send the message to the server. If encoding is not specified the message will be sent as
msg_type can be a string or a tuple of strings. msg_types can be
Validate the input for the given message type and attribute.
Validates that value is a valid twilio phone number or url.
Validates that the value is a valid slack post.
whatsapp is a string or a URL. If value is a string it will be
str_ is a generator that yields a message and sends it to the server. This is
str add_message - add a message to the message queue.
Get the body from a file in a dictionary. If the file does not exist it will
Returns a copy of the keyword arguments with any values removed from the keyword arguments.
Send a message to the client. If the message is a file the message body will be
Get the chat id for the given username.
Send the message to the server.
Send the message to the client.
Returns the server name and port number for the given address or none if the address is not
str generate_email - Generating the email.
Add the message headers to the message dict.
Add the body to the message.
_add_attachments - Add attachments to the message. Returns the number of attachments added.
Returns a SMTP session object. If the port is not specified it will try to get a
Returns an SSL connection to the SMTP server using the default SSL context.
str_ Create a new SMTP session and start TLS on it.
Send the message to the specified recipients using the specified session.
Save the tags to a file. If filename is none the current filename will be used.
str - Unloads the image from the system.
Get a region of the image. The region is defined by the coordinates x1 y1
Validates the dictionary and returns a boolean indicating whether the dictionary is valid or not.
str_ Remove all items from the list.
str_ Read the data from the file and store it in the self. data attribute.
Deletes this chunk from the file and resizes the parent chunk to the size of the file
Resizes the file to the given size.
Insert a new chunk into the file. If the chunk already exists it will be overwritten.
Save the ID3 file to the specified filename. If filename is none the filename will be
str_ Delete a file from the cache. If no filename is given the filename of the
Parse a file and return a list of parsed lines. The first line of the file is
str_ Process a single line of source code.
str_ Add the lines of the source code block to the list of source blocks.
Draw a string in the specified font at the specified position with the specified width and height.
Parse an ISO 8601 time string into a datetime object.
make_html_words returns a string with html_quote the first word and the rest
Make an HTML word from the given word. If the word is a crossref it will
make_html_para generates a paragraph of HTML from a list of words.
Make HTML code from a list of lines.
Make a list of items as HTML code or para strings.
Save the metadata to a file. The filename parameter can be a path to a file.
str_ Update the parents of the given file object with the given delta in the given path
str_ Runs the bacon loop for the given game. If the game is already
str Register a mapping for a given vendor and product.
str_ Get a controller from the registry. Returns none if the controller is not registered.
Returns a base64 - encoded HMAC - SHA256 signature of string_to_sign.
Get the request headers to be sent to the AWS API.
Send a GET request to the API and return the response as a string.
Sends a POST request to the API. Returns the response as a string.
Sends a DELETE request to the API and returns the response as a string.
Convert a value to an object of a certain kind.
Change the resource record sets in the specified hosted zone. If the hosted zone does not exist
str_ size of the header in bytes.
Find the last OggPage with the given serial number.
str_ Set the name of the section to use. If the section does not exist it
str_ Adds markup to self. markups if it exists and self. markup_lines
Processes the content of the file and returns a list of markups.
get a markup by tag_name
Create a writer for a hosted zone.
Lock the given file object. Returns True if the lock was successful False otherwise.
Insert size bytes into a file - like object. The file - like object must be opened
delete num_ bytes from a file - like object. size is the size of the file
Convert data to UTF - 8. If data is bytes it will be decoded to UTF -
Add a change to the list of changes to be made to the route53 record set.
Parses the change_info element and returns a dict with the id status and submitted_at
Measure the width of a string.
str - True if the object has been modified. False - False if the object has not
Delete this hosted zone record set.
Save the current state of the resource record to the hosted zone.
Read size bytes from the file and return them as a string.
Delete all values for a given key. If the key does not exist it will be created
str - > None - > None - > None - > None - > None - >
Update the common parts of the apic list if the version is less than 2. 2
str unloadsound Unloads the sound from memory.
Set the loop points of the voiceloop. The start and end values are the
adobe_glyph_values returns a list of glyphs and their values.
Returns a list of glyph names filtered by a list of names.
Dump a list of strings to a file in the format encoding_name + encoding_list
Dump the contents of an array to a file - like object. The contents of the array
Check if a file exists. If not print a message to stderr and return the number of
make a list of files from a list of files or a list of files to scan.
Parse a hosted zone element and return a hostedzone object.
Parse the delegation set and store the nameservers in the zone.
Write a list of Block objects into a string.
group_padding - Group padding blocks into a single padding block.
str_ Delete all metadata blocks from the file. If filename is none delete all metadata blocks
Save the metadata to a file. If filename is none the current filename will be used.
Parse an rrset alias and return its hosted zone id and dns name.
parse rrset record values from e_resource_records into a list of strings
Parse a Route53 RRSet element and return an instance of the appropriate rrset class.
Internal method to add a record to this hosted zone.
Create a new MXResourceRecordSet with the given name and values. ttl can be a
Create a new nsresourcerecordset record with the given name and values.
Create a new PTR record with the given name and values. If the record already exists
Create a new SPF record with the given name and values. If the record already exists
Create a new server record with the given name and values. ttl is the number of seconds
Get the initial values of a change from a RRSet.
Write a change to an XML file.
Write a ChangeResourceRecordSet object to an XML file.
init_logs initializes the logging system and returns the name of the log file to use.
Return the item with the given alias or None if no item with the given alias exists.
str_ - > tuple of sorted items in a dictionary. Returns a tuple of sorted items
Join HTML attributes into a template and a list of attributes to be used in the template.
init_app is called when the app is initialized. This is called when the app is
str_ This method is called when the widget is initialized. This method is called by the
Bind a Bar instance to the widget. This method is called when the widget is created.
str_ Returns a dictionary of the arguments for this command.
bool_ True if the current request is the same as the current request.
Validate that the metric_class is a valid metric class. Raises an error if the metric
Get a statistic by its name. If the name is not found an exception is raised.
str_ Prints the statistics for the given stat and the given frequencies.
Autodiscover apps from settings. INSTALLED_APPS.
Export a metric to a CSV file.
This method is called when the user clicks on the list_statistics action. It is called
Get an array of values from a GET request. If fail_silently is set to
Returns the value of a GET parameter as a boolean. If the value is not a string
Get the next colour in the list of colours and increment the current colour counter.
Returns a dictionary of request parameters for the Gecko API.
Geckoboard number widget for geckoboard.
geckoboard_rag_widget return a tuple of the latest count and the
geckoboard_line_chart - Geckoboard line chart
Geckoboard Geckometer.
Geckoboard Funnel for Geckoboard.
str_ Returns a list of all active stats for all gadgets in the registry.
str_ Registers a gadget.
Get the context data to be used in the template. The context data is a dictionary of
Print an error message to stderr and exit with the given code.
long_input prints a prompt to the user and returns a string. If maxlines is
Returns a list of lines from the user. If maxitems is not specified maxitems will
Prompt the user for a file to write to. If the file does not exist it will
Returns a pandas DataFrame with the schedule for the given year.
str_ Return the winner or none if there is no winner.
Return the season of the year of the year of the year of the year of the year
Get the surface of the reference.
Get the coin toss from the sportsref. utils. parse_info_table
Returns the weather of the sportsref object as a dictionary. If the sportsref
Return a list of sportsref. utils. parse_info_table from the doc
Returns a pandas DataFrame with the team stats for each month. If kind is str_ then
Get the standings for the given team. The standings are sorted by team_id
Get the team stats table from the main doc for the given selector.
Return a DataFrame with the roy voting data for the given RyVoting.
Returns a pandas dataframe with all the links in the main doc as the first row of the
Return the season of the year in the year - of - month range.
Get the player stats from sportsref. utils. parse_table.
str_ Returns the key of the instance of the class with the given arguments and kwargs.
Calculates the age of a given year month and day from the main doc tag.
Get the stats table for a given table_id. The table_id can be either
Get the stats per game for a given game kind is either summary or summary_per_
Returns a summary of the stats of the data in the data store.
Get statistics for each year per month per year.
Returns statistics about the percentage of results in a table.
Returns a dict of stats for the given kind and summary. If summary is set to True
Statistical information about shooting.
Returns a statistics table as a protobuf object.
Returns a pandas DataFrame of the Gamelog basic data for the given year and kind.
Get the current value from the session and write it to the output file.
Expands the details column of a data frame into a data frame that can be played
Add the team and opp columns to the features dataframe.
Add the team features to the given data frame.
Returns the initial winning probability for a given line. The initial winning probability is the
Returns a pandas DataFrame with the results of the calling function as the first row of the table
Return a list of year awards for a given award id.
Get the name of the team. This is the name of the team in the main doc
Returns a list of box scores for the given year.
Return a pq object for the given keyword in the given year.
Returns a list of the coach IDs and the number of games in the given year.
Returns the schedule for the given year. If the schedule does not exist it will be created
Return the off - coordinator attribute for a given year.
Return the coordinator for a given year.
Return the stadium id for a given year.
Returns the off - scheme for the given year or none if there is no off - scheme
Return the alignment number for a given year.
Returns a dataframe with the off - splits for the given year.
Get the html from the given url. If rate limiting is enabled this function will wait
directly put data directly to the read_queue and return the result as a str.
Get the next item in the write queue without waiting for the next item to arrive.
str Close the connection and put it back on the read and write queues.
get a batch of examples from the HDF5 file at path. If length is not specified
Get the next block of data from the file at the given path and block_size.
str_ get_generator - get a generator of rows from a batched file.
Parse an IFO from a file or file - like object or file - like object.
Dump pb_objs to file - like object of file - like object of file - like
Read a varint from the underlying file - like object.
_get_objs returns an iterator over all the objects in the file. The iterator is
str_ Close the file descriptor and flush the file buffer and close the file descriptor.
str - > None - > None - > None - > None - > None - >
Write all the buffered objects to the output stream.
Returns the game directory. If username is set to True the game directory will be returned.
input_text_with_keyboard_emulation input text with keyboard emulation
Returns a list of traits that should be evaluated. If traits_eager_evaluation
Waits until the condition returns True or the timeout is reached. If the condition returns False the
Waits until all traits are present on the given element. Returns True if all traits are present
str Any exception that should be ignored.
main_volume returns the value of the volume specified by operator. If value is not specified
Returns the main source of an operator.
Send a message to the server. If read_reply is True the message will be read
Get the status of the NAD.
Power off the device. The device will be powered off if it is powered off
Power on the device if the device is not powered on. If the device is power
Set the volume of the device. The volume can be a number or a string.
Select a source from the list of sources. If the source does not exist it will be
Deobfuscate a request by decrypting it with the given key. If juice
str_ - > crc32 - > crc32 - > crc32 - > crc32
Obfuscate value using unfriendly_secret unfriendly_iv and unfriendly_en
Find missing schemas in html and print them to the console.
Get a list of all hrefs from a given HTML page.
Check if the song name is present in the html. If so return a tuple with the
Parse the HTML and return a list of links to the song with the name song_name
Generate a google url from song name and website.
Parse a Google page and return the download url.
str_ to_be_parsed str_ to_be_parsed str_ to_
get_html_response - get the html response from the given url
Download a file using requests.
Download a file using wget.
Returns a list of station codes for a given city name and a given access token.
Get the observation of a location given its latitude and longitude. The token parameter can be used
Parse the observation response from the server.
Returns a list of the compilers registered in the environment.
Returns the mimetype of the file based on the format extension and the compiler mimetype if any.
str_ Returns the mimetype of the first compiler in the list of compilers.
str extension of the compiler file based on the mimetype of the compiler file. If the compiler
str Register a processor for a mimetype. If the mimetype is already registered the processor will be
str - Unregisters a processor for a mimetype.
Returns a list of all paths found in the project. This is a list of paths that
str_ Register the default values for all the registered types preprocessors and postprocessors.
import_qtcore tries to import qtcore from idaapi. ida_sdk
Get the netnode object from the IDA_SETTINGS_ORG and IDA_SETTINGS
str_ Add a plugin name to the netnode meta data.
str_ Remove plugin_name from netnode_plugin_names
Import settings from a QSettings file into a Python dictionary.
_ Export settings to a QSettings object.
str_ Returns the directory of the IDA configuration file.
str_ Returns an iterator over all keys in the IDB directory system and IDB.
A simple error handler that returns a response with a simple status code and a response body.
str_ Returns a Table object for the given table name.
str_ Returns a list of all tables in the DynamoDB table system.
fetch_crates fetch_crates fetch_summary if category == category_crates
metadata_id returns a unique identifier for the given metadata item. If the metadata item is
metadata_updated_on returns the timestamp of the metadata updated on the given item.
Fetch the owner team for a given crate id.
Fetch the owner_user of a crate.
Fetch the versions of a given crate.
Fetch the version_downloads for a given crate_id.
Get a list of crates for the current category.
Get a single crate by ID.
Fetch all the items from the given path and return them as a generator.
Fetch a list of items from a given category. If no offset is given the default offset
Get a list of questions from the Kitsuneclient.
Fetch a list of events from a given category.
metadata_updated_on returns the timestamp of the updated metadata on the given item.
Returns the category of the given metadata item. If the item is an event activity or user
Get a list of items from the remo API.
str - Returns a list of the current buffer list for this IOCB. If the IO
str_ Returns the priority of the IOCB.
str_ Close the context and release any resources associated with it. This is called when the
_Submit a list of IOCBs to be submitted. Returns the number of IOCB
_cancel - Cancels the given block.
Cancel all submitted blocks and return a list of the cancelled blocks.
Fetch a list of events for a given category. If no category is given all events are
Get all the cells from the server.
Parse the feed and return an iterator over the events in the feed. The iterator yields events
Returns a sorted list of export formats for the given pid_type.
Permission factory.
str Default view method. Sends a record_viewed signal to the current object.
Export a record to a JSON file.
str_ Run a callable and record the time it took to run.
Close the socket. If the socket is already closed this method does nothing. If the socket
str remove_client removes a client from the list and closes the connection if the number of
str - > None - > None - > 0 - > 0 - > 0 - >
str Timing for the given metric name and milliseconds. rate can be either num or num
timing_since is a convenience method to add timing information to a metric. It takes
str - > None - > None - > None - > None - > None - >
str - > None - > None - > None - > None - > None - >
Set the value of the metric with the given name to the given value. If rate is
Request data to be sent to the server.
Create a new batch client with the configured host port prefix and batch size. The batch client
str_ client to connect to the unit server.
Send all the pending messages to the remote server.
tcpbatchclient - Create a new TCP batch client. size - Number of batches to be
str_ Flush all the pending messages to the socket.
str_ client to connect to the unit server.
Create a new user with the given password permissions and groups.
Interprets x as an openmath symbol and returns it as an openmath object.
converts a term to an OpenMath string using the given converter. If the term is
str_ Converts an object to a Python object.
Convert an object to an OpenMath object.
This method is called when the app is created.
str - > str - > str - > str - > str - > str - >
Create a value from the given arguments and return it. Raise typeerror if the argument is
str_ Returns the form data and form files for the given form_cls and kwargs.
Returns a string representation of a field s decimal value based on the field s max_digits
Returns a string representation of the given email field.
Return a random date in the format specified by field. input_formats or the default format
Return a random datetime for the given field.
Returns the float data for a float field based on the min and max values of the validators
Returns a string representation of an integer field.
Generate a random time field data for a time field.
Return a random choice from the field s choices. If the field has no choices return a
Returns a random choice from the field s choices. If the field s choices are not valid
Randomly choose num_ items from the queryset of the given field. Raises typeerror if
str_ encodes an object to bytes.
publish a string to sdist build and tag it if it s successful.
Tag the current build with the given version. If the build is successful the tag will be
Load a global variable from a Python module.
str_ decode a byte string into a byte array.
Convert a value to a fixed number with the given precision and return it as a string.
Returns a string representation of the given number. If the number is a string it will be
Convert data to numpy array.
packs an array into a binary string and returns it as a bytes object.
Add a file to the configuration. If the file already exists an error will be raised.
removes a value from the configuration. If the value does not exist raise an error.
Returns a list of all the websockets in the config file.
str_ Return the first ws with the given name. If no ws with the given name
Checks if a repository exists in a workspace. If the workspace does not exist returns False.
Syncs all repositories in a working directory to the local file system. This is done by
Clone a repository from a URL to a local repository.
Check if the current version is the same as the current version.
Convert a numpy array to a numpy array where the values are True or False.
Convert a list of voxels to a numpy array.
str_ Execute the workspace command.
prints the update of the given repository.
str_ Set the console handler. If debug is True set the console level to info.
str_ Execute a command on a given path. If path is not specified the command will
Load an image from a png file and return it as a numpy array.
Save a collection of numpy arrays to a png file.
Print the workspace with the given name. If the workspace does not exist print an error.
Print the status of a repository.
Get the block size for a given token.
Post a cutout without chunking BLOSC.
Load an image from a tiff file.
Save numpy data to tiff file.
str_ Load a multipage image from a tiff file.
Write the configuration to a YAML file in the config. yaml file.
Clone an executable from the given URL.
Get the version of the package from the pkg_resources package.
Takes a name a greeting and a yell flag and prints it to the console.
Decorator to print a greeting for an option. If yell is True the greeting
Reserve a number of ids from a channel. Returns a list of ids.
Merge a list of ids into a channel. If delete is set to True delete the ram
propagate a message to a channel. Returns True if the message has been propagated.
Get a list of projects in a dataset.
Get a dataset by its name. Raises remotedatanotfounderror if the dataset
Returns a list of datasets available on the server. If get_global_public is True
Parse the command - line arguments and return a list of the results.
str Executes the show command.
show_workspace prints a list of all repositories and scms for a given workspace name.
show all the workspaces in the system
Returns the URL for the given endpoint. If the endpoint does not start with str_ it
_guess_format_from_extension tries to guess the format from the file extension.
Open an image file with the specified format.
Convert an input file to another format.
Convert a list of ramons to a dictionary.
_ramon - Get the ramon name for a given type. If the type is
Delete a channel.
nd_json returns a JSON string with the dataset project channel_list and metadata.
dataset_dict returns a dictionary of dataset name image size voxel res offset timerange scalingle
Returns a dictionary that can be used to create a Channel object from the given parameters.
Returns a dictionary with the project name token name and public flag.
Identifies the dimensions of an image of a given image type.
Put data to OO.
find_path finds a path for a given name in the given config. If wson
Get a list of public tokens for the current user.
Get the project information for a given token.
Set the metadata for a given token. The token must be a valid remotedata upload
Make a GET request to the given URL with the user_token as the auth token.
post_url - POST a request to the given url with the given json data and headers
Make a DELETE request to the given URL with the given token. If token is not provided
Load the data layers from an hdf5 file.
Save an array to an hdf5 file.
Infer gaps in a tree given a sequence and a tree. Returns a tree object.
nvim_io_recover returns a new nvimio from a nvimio
Installs gettext translations into the Jingo environment.
Perform a thunk in exclusive mode.
str - > float - > float - > float - > float - > float - >
_get_cache_stats - Get statistics about the cache server.
_get_slabs returns a dict with the server_name as key and the value
str_ Returns a copy of the given data with the site s context. If the request
Display the status of the server.
The dashboard view. This view renders the dashboard in the context of the context of the request
Returns a response with the cache statistics for the specified server.
Returns a list of all the slabs in the given server_name. The list is
Convert bytes to a human readable string.
find_config finds a config object in the children dictionary. If the object is a config
str_ Add a directory or directory to the environment.
apply applicator to self. _fpath if self. _fpath is a string.
str_ Returns the full path to the file. If the file is a child of the
str_ Returns the contents of the file as a unicode string.
str_ Write data to file.
str_ Configure the logger with a file handler. If no logger is specified the default logger
Creates the file if it doesn t already exist.
_apply_config - Apply the applicator to the configuration of this node and all
Returns the full path to the file in which this file is located. This includes the base
Remove the file or directory. If recursive is set to True it will recursively delete the directory
str_ Prepare the environment for this node and all of its children.
clean up this node and all of it s children. If the cleanup flag is set to
path_to returns the full path to the given file or directory.
str_ list of all files in the directory.
str_ Write data to a file.
str_ read a file and return it as a unicode string.
str_ Add a file or list of files to the tree. Returns a file object.
Save the current state of the model to a file. The file is saved in YAML format
Load the yaml file into self. d. If the file does not exist it will be
str_ Remove the file if it exists. If it doesn t exist nothing is done.
str_ Load all the plugins in the given directory and all sub - directories in the given
Return a confignode with the given path as a child.
str_ Get the value of the field.
Apply the configuration to a string.
Build a URL to redirect to when a message is sent to a callback.
Process incoming data from the pyngus socket.
send output to pyngus
Send the request to the server.
Read data from a socket object and process it. Returns the number of input bytes read.
write socket output to socket_obj and return number of output written to socket_obj.
Return a dictionary of remote settling modes for the given PN link.
This method is used to configure the target and source of the link. It is called by
str_ Returns the source address of the PN. If the PN is the sender
str_ Returns the target address of the PN link.
Called when the session is closed. This method is called when the session is closed.
str_ New sender for the given name. If the name already exists it will be replaced
Request a sender link for the given PN link.
str_ Create a new receiver with the given name. Returns the ID of the receiver.
Creates a receiver link for the given receiver name and adds it to the receiver list of the
This method is called when a link is destroyed. It is called when a link is destroyed
_ep_need_close is called when the endpoint needs to be closed.
Process an event from the endpoint state machine.
Add a mark tag to the Markdown parser.
This method is called when the receiver is closed. It closes the receiver link and marks the
Called when a receiver fails to connect. This is called when the receiver fails to connect.
Get host and port from server address.
Connect a socket to a given host and port. If blocking is True the socket will be
server_socket returns a socket for the given host and port. If backlog is not
str - Returns a list of readers writers and timers that need to be processed.
_output_data - Get the next output buffer from the peer. If there are no
Create a sender link.
Reject a link from the sender. If the link has not been created an exception will be
Creates a receiver link to the given target_address. If the receiver already exists it will
Called when the connection has failed to connect to the server. If the error is not None
_ep_active - Called when the endpoint is active.
_ep_need_close is called when the remote connection needs to be closed.
Called when an error occurs while connecting to the remote end of the connection. The error is
Returns a string representation of the color.
Returns a dictionary of font families and their source files.
Set the compression of the file.
_add_object adds a new object to the buffer and returns it. If flag is
Write a string to the buffer. If a page is given it will be appended to the
Put a stream into the output buffer. The stream is written to the underlying output stream.
str Add a new page to the document.
Set the draw fill and text color scheme.
str _set_default_font - Create a default font object and add it to the
str_ Add a new page to the PDF document. If page is none create a new
str_ Set the font size of the font. If the size is the same as the
Adds text to the document.
Add a newline to the current page. If number is an integer it will be added to
Add a pie chart to the current page.
Output a list of pages to the output stream.
str - Returns a list of page indexes that need to be orientation changes.
str Output fonts.
str Output images.
Output the image to the output stream.
Apply a transformation to the current matrix and write the result to the current page.
Get the absolute position of a point in the current matrix.
Set the style of the text. If style is none set the underline flag to False.
str_ Rotate a point by the angle specified by angle_rd and angle_rd.
This method is used to set some basic information about the object. This is useful when you
Set the display mode.
This method is called when the output stream is closed. It is called when the output stream
Write the PDF header to the buffer.
Outputs the document s pages to the output stream.
put a dictionary of resource data to the session. This is used to write a dictionary of
Write information about the object to the session.
Write a trailer to the session buffer.
str - > str - > str - > str - > str - > str - >
naive version of the sequence generator.
Goes through a list of sequences using the gosper algorithm. The first argument f is
Generator that yields all values in seqs that are not equal to the value of the given function
str_ True if the x + test_length is within the x - axis of the
bool True if y + test_length is within the y - axis of the data set
str True if x is greater than test_ordinate. x False if x is equal to
str True if self. y is greater than test_ordinate. y False otherwise.
str_ Return a copy of the current cursor.
str_ Add the x - axis to the x - axis and return the x - axis
str_ Add the y - axis to the y - axis and return the y - axis
str _compile _draw _draw_text _draw_fill _draw_border _
Get a list of all tags.
Returns a list of labels with the given name.
Deletes a tag.
Create a new label with the given id.
Returns a list of all the users in the system.
Returns a list of all tags with the given label.
Get a list of all registered hooks.
Setup the Sage extension.
Returns the path to the themes directory.
Helper method to make a POST request to the API with the given request and params.
Get a list of all the hosts on the server.
Get information about a log set.
Return the duration of the simulation as a float between 0. 0 and 1. 0.
Update the object with the given keyword arguments. If the keyword argument is a boolean it will
str_ Computes the current state of the simulation.
Returns a binary representation of the current state of the limbdark. The output is stored
str_ Frees all memory allocated by DBL.
Receives data from the socket and writes it to the buffer.
Generator that yields each line from the buffer.
Returns the status code and message of the next command line.
Returns a generator for the given code and message. If compressed is True the generator will generate
Returns a string with the given status code and message. If compressed is set to True the
Returns a list of capabilities for the given keyword. If no keyword is given all capabilities are
Return True if the current mode is a reader mode. Otherwise raise nntpreplyerror
Send a quit command to the NNTP server and close the socket.
Return a datetime object representing the date of the current process.
Display the help message for the current command. If the command returns a non - zero exit
Generate new groups for a given timestamp.
Return a list of new news items.
Returns a generator that yields all the active groups. If no pattern is given all active groups
Returns a generator of the active times in the NTP server. The generator yields the name
Generate a generator of newsgroups. If pattern is omitted all newsgroups
Generate a generator for the list_overview_fmt command and return a list of tuples.
Generate a generator of the list of extensions available on the NNTP server.
Returns a generator for the given keyword. Keyword can be one of active_times active_
list returns a list of strings with the given keyword and arg. If keyword or arg is
Send a compressed message header to the server and return a tuple containing the code and the message
Generator for XPAT messages.
XFEATURE_COMPRESS_GZIP XFEATURE_COMPRESS_GZIP XFEATURE
_offset returns the offset of the given value in the range [ 0 num_ ).
Perform a POST request to the given url and return the result as a Python object.
Make an HTTP DELETE request to the given URL.
Perform a GET request to the given url and return the result as a Python object.
Get a list of all scheduled queries for this account.
Get a list of all tags for the account.
Returns a list of tags with the given name or id.
Delete the tag with the given id from the account. This is a no - op if
_create_scheduled_query creates a new scheduled query for the given query change and scope
Delete an alert by tag_id.
Parse a newsgroup line into the low high and status values.
Parse a line of text into a tuple of header name and value. If the line is
Convert a dict of header names and values into a string of header names and values.
Send a POST request to the server and print the headers and the body of the request.
str_ Runs the given tests in the context of the given reporter. If no reporter
Returns a docstring describing the default values of the class.
str - > None - > None - > None - > None - > None - >
Check if value is an instance of self. type_. If value is none raise type
Get the value of the field.
check_type - Check if value is a scalar and if it is convert it to a
symmetric_error returns the symmetric error of the matrix. If the error is a scalar
str_ Set the errors of the object. If errors is none set the errors to None
Set the bounds free errors and value.
import_metrics imports the metrics into self. metrics and adds them to self. update_
Takes a list of metrics and returns a dictionary with the keys as keys and the values as
Filter the metrics based on the filter_expression.
Send the request to the API and get the JSON response.
str_ Return an expression that is the terminal of an expression in the given text.
Return the operator of the given text or None if the text is not an operator.
Add text to the end of the string and return the result as a string.
_init_properties initializes self. _missing and self. _derived from self.
Returns a list of all the parameters in the model. If pnames is None returns all
Return a list of the values of all the parameters in pnames. If pnames is
param_errors returns a numpy array of the errors of all the parameters in pnames.
str_ Clear all derived parameters. This is useful when you want to clear the value of
_method is the name of the method that should be used to determine if the attribute is
Get the email and api_token from the environment variables.
str Call the API and store the result in self. _api_result.
Validate that the sceneinfo is in the satellitesmap. Raises wrongsc
Verify that the given satellite is a valid type product and return a dictionary with the type product
Get the size of a remote file in bytes. If the remote file doesn t exist try
Check that the band list is a valid list of bands and raise an error if not.
Connect to the Earth Explorer and check if the user s password is valid.
Return a copy of the given datetime with the tzinfo set to this timezone. If is_
Join an iterable of strings with an escape character.
Returns a list of the positions of the newline characters in the given text.
Return a list of tuples where the first element is the line number and the second element is
Dump the output of the relay to the console.
Remove metrics control and plugins from self. _relays.
Create a new Fortunes object from a list of Fortunes file paths.
Set the chance of each fortune in a list of files. If equal is True
str_ Main entry point for the command line tool.
Return a rule with the given text. The text must be an identifier or an expression.
Return a token that indicates that the given text should be treated as special handling.
str_ Returns the grammar of the input source. If the grammar is not already parsed this
str_ Returns a list of all rules in the grammar.
str - List of all comments in the grammar.
str - List of all directives in the file or None if there are no directives in the
str - Output source of the compiled code.
Compile the token definition into a string.
Returns a string with the imports of the module. If there are any directives with the same
Returns a string representation of the token type enum.
Get the class definition for this parser.
Get the name of the entry point for the given directive. If the directive is not found
Get the source code for a given rule.
Get the transform for the given rule.
_expression_to_asn - Converts an expression to an AS number.
str_ Returns the AST representation of the given node.
Returns a list of operands that satisfy the predicate pred. If pred returns True the operands are
Remove all grouping groups from an optree and return a new optree with the removed groups
str - > Code for a given AST node. Returns a string representation of the node.
Convert an AST Optree node to a Python code object.
Convert an AST terminal to a list of code blocks.
_ast_option_group_to_code - Converts an AST option group into a
Convert an AST repetition group into a list of code lines.
Convert a special handling AST node into a list of Python code nodes.
_ast_op_alternate_to_code - Convert an AST operator alternative to
Convert an OP_CONCAT operator to a list of code lines.
Convert an OP_EXCLUDE instruction to a list of code lines.
Returns a string representation of an OP_MULTIPLY instruction.
Convert an ast. OpRepeat object to a list of code lines.
str - > list of directives that match pred. pred can be either a function or a
str_ Returns True if child and parent are expressions of the same type.
str_ Prints the result of the API call if the status code is not 200.
Returns a wx. Id object or creates a new one if none is passed.
Remove a key from a control s list of hotkeys.
Add the command line arguments to the command line parser.
Configure logging based on the command line arguments.
Validates the arguments and sets the error message if they are not valid.
str - > str - > str - > str - > str - > str - >
postfix_to_optree - Reduce a list of nodes to an optreenode
reduces a list of nodes to a list of nodes where each node is an operator
str_ Loads the plugin manifest from the given file path.
Returns the number of columns and the maximum length of all the fields in the table.
Get the maximum display and maximum description lengths for all metrics.
Replace all underscores in metrics with their original values.
str_ Output fields in markdown format.
str_ Output the metrics in markdown format.
str generatemarkdown - Generates a markdown file with all the generated metricdefinitions fielddefinitions and dashboard
str_ Parse the given text and return the resulting tree. If the parser encounters a dead
_attempting - Update the most consumed position in the original_text based on the text
Add the command - line arguments to the command - line parser.
str - > datetime - > datetime - > datetime - > datetime - > datetime - >
Output the results in a CSV format.
Output the given text as a JSON formatted string. The output is colored according to the given
Output a raw JSON string to the console.
Output the given text as an XML string. The output will be formatted as an XML string
str_ Returns True if the node is an empty node and the parent node is a terminal
Pretty - print the tree rooted at the root of the tree.
Returns a function that returns a string representing the repetition of a range of characters.
str_ Returns a parsenodetype. terminal node if text starts with value. Otherwise
_get_exclusion - Get the exclusion for the given text. Exclusion can be
Return the index of the first non - whitespace character in text.
_call_extractor calls the extractor with the given text. If the extractor is a string
Returns the position of this node. If the node is a parsenode it will return the
str_ True if all children are empty.
str - > None - > None - > None - > None - > None - >
str_ is_type - Check if value is of type self. node_type.
str - Returns a copy of this parsenode with all of its children flattened according to the
trimmed returns a copy of this parsenode with all children removed. pred is a function
Merge two parsenodes into a single parsenode.
str Return a copy of this parsenode with the new_type removed.
Returns a copy of this parsenode with all values compressed. If new_type is not
Returns the position of the current line and column in the source file.
Returns the position of the maximum position in the line and column of the current line or column
step_next_char - Step to the next character in the string.
Step to the next line.
step_prev_line - Step to the previous line.
Return the last line in the file that is not the end of the file.
incpos returns the index of the next character in the input string. If the input string
Saves the current cursor position in the list of contexts and returns true if the context was saved
Restores the current context and moves the cursor to the next context in the context stack.
Return a formatted string representation of the notification.
str_ Sets the name of the Hilbert Signatures.
Count the number of variables in the HilbertSigs.
Count the number of functions in the HilbertSigs in the HilbertSig
Update the scope with a list of scopes. If the scope is a namespace it will be
Return a new scope that is the union of the current scope and the given scope.
update the scope with the intersection of this scope and the other scope in oset.
Returns a new scope with the intersection of the current scope and the given scope.
str - > scope - > scope - > scope - > scope - > scope - >
str - > scope - > scope - > scope - > scope - > scope - >
str_ Update the scope with the symmetric difference of the two scopes.
symmetric_difference returns a new scope that is the symmetric difference of this scope and the
Add a signature to the scope.
Remove a signature from the scope.
Discards the given signature from the linked scope. Returns True if the signature was removed.
Return the first signature in the signature set.
Return the last signature in the signature set.
Get a scope by its symbol name.
Returns a signature by symbol name. Raises KeyError if there is no signature with that symbol
Returns a new scope with all polymorphic return statements in this scope.
Call the injector with the given old node and translator. If no asttranslatorinjector is defined
Recursively normalize the given AST to be a node. This function is used to make sure that
str - > str - > str - > str - > str - > str - >
Return True if the hit is within the range of min_hit_charge and max_
Returns the compute signature for this type.
Resolve the symbol to its return type. This is done by looking at all of the possible
Return a list of resolved names for a given type name.
str_ Sets the resolved name for the given type_name2solve and type_name
str_ Delete a local file if it exists. If it doesn t exist nothing is done
Delete a file from an S3 bucket.
Delete a file from S3 or local storage. If no storage type and bucket_name
_save_local saves the contents of the temp_file to the file named filename.
saves a file from a temp file to an object in S3.
Save an object to a local or s3 file.
str_ find_by_path_s3 - find by path in s3 bucket
Returns a new enum class with the given sequential values and named values. This is useful for
Set a single object in the chainmap. The thing_name is the name of the
Read an end - of - file from the stream and return true if the end - of
push_rule_nodes - Pushes the rule nodes onto the rule_nodes list.
pop_rule_nodes pops the rule nodes from the stack and returns True if the rule
Return the value of a node.
str_ Parse the content of a stream and add it to the list of streams.
Start a new tag with the given name. The tag is added to the tag cache.
Indicate that the end of a tag is at the end of the stream.
set_rules - Sets the rules for this class.
set_hooks - Sets the hooks for this class.
set_directives - Sets the directives for this namespace. Returns True if the directives were set
Evaluate the given rule and return the result or raise a diagnostic if the rule does not exist
Evaluate a hook and return the result. Raise a diagnostic if the hook is not defined.
Peeks at the next occurrence of the given text. Returns True if the text is found
Return True if there is at least one character. Return False if there are no more characters
Read a single character from the stream.
Read until the end of file is reached or the end of file is reached.
Return True if there are any blanks in the input.
Check that hits. dtype and self. _hit_fields_mapping_inverse are compatible
str Add a rule clause to the given namespace name.
Add a rule to the BNF.
Add a rule to the parser tree.
str_ if sequences is not already a str_ add it to the list of sequences.
str_ add_alt - Add an alternative node to the list of alternatives.
Add a range to the parser tree.
Adds a parser tree to a sequence. Returns True if the tree was added False otherwise.
Add a capture to the given sequence.
Add a binding to the given sequence.
Add a hook to the sequence. The hook will be called with the name and listparam
param_num sets the value of the parameter to n and returns True if the parameter is
param_str sets the value of the parameter to the string s and returns the bool_
Set the value of a parameter to the given character.
Set the i th parameter as the parameter s value and return it as a string.
Hook name.
str hook_param - Add a parameter to the list of parameters to be hooked.
Returns a list of rules for the current stream. If the stream does not contain any rules
Check if the stream is at the beginning of a Cxx character. If it is it
Add a state to the model. If the model already has a state with the same id
Returns a DOT representation of the state.
Write the graph to a. dot file at the given file path.
Write the graph to a PNG file.
Return a string representation of the state machine.
str_ Returns the next state in the given state or None if there is no next state
resetlivingstate - reset the living state to the initial state.
str_ Infer the type of each element of a block.
str_ Infer the type of a subexpression.
Infer a literal from a string literal and return it in the scope of the infer_
Dump the current state of all nodes in the tree. Returns True if all nodes have been
Return an ast. stmt representing the end of the current scope.
str_ Returns a list of ast. statements where the clause is not the current scope.
Return an ast. expression representing a call to the callobject with the given parameters.
Return an ast. expression that evaluates to True if the given node evaluates to True.
Return an ast. expr representing a hook.
Return an ast. expr representing the rule s name.
Return an ast. stmt for a capture node.
Return an ast. stmt or ast. expr for the given scope node.
Return an ast. stmt for the alt statement.
Return an ast. stmt and ast. expr representing a sequence of statements.
Visit repoptional node and return ast. stmt or ast. expr.
Return a REP0N node as an ast. stmt and a list of clauses.
Return a list of ast. statements representing a REP0N node.
concatenate a string with a given number of spaces and a given number of indentation.
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
Echo a list of nodes to the console.
populate from a list of matchexprs into the graph r is the current state sr is
Populate a state register with a list of sequences and return a new edge with the new state
build a state tree from all statements and populate the root_edge attribute of the state tree
Returns True if the value of n is equal to val. If val is an integer it
Create a grammar from a BNF string.
Build a grammar from a file. If the file does not exist an exception is raised.
str - > parsing. node - > parsing. node - > parsing. node - >
Parse the given file and return the parsed node. If entry is not specified the parsed node
set_node sets the value of the node dst to the value of src. If src
Set the value of dst to the value of src and return the result as an integer.
Get a sub - node from the expression and add it to the destination node.
Dump a deposition object to a dictionary.
Get the list of recids from invenio 1. 0 to 1. 0.
Get the list of recids from invenio. legacy. dbquery.
get_check returns a tuple of the check and the list of ids of the check.
Dump a Token object to a JSON string.
str_ Get the number of users and all users in invenio_accounts.
Dump a User object to a JSON - ready dict.
Return a set of modified recids from INVENIO 1. 0 to 1.
Return a set of record IDs that have been modified since from_date.
Returns a list of restrictions for a given collection. If the collection does not exist it will
Get a list of revisions for a given record.
get_record_collections - get all collections of a record and all the restricted collections for
Dump a MARCXML file as a JSON string.
Returns a list of modified BibDoc recids and a list of modified BibDoc
Dump a record from a given date to a JSON file or a list of files.
Dump a ResourceAuthority object to a JSON - serializable dict.
str_ Loads a model from the given data dictionary and adds it to the database.
Collect things from all entry points.
init_app_context - Initialize the app context.
str_ Returns the run_sql module if available otherwise returns the legacy dbquery module.
Get a list of actions for a given query.
Dumps a RemoteToken object to a JSON - serializable dict.
Load a token from the given data dictionary. If the data is a string it will be
Import a single record into the database.
str_ import config_var_imp from app. config and return it or default.
str_ Dump a client object to a dictionary.
Get users from Invenio 1. 0. 0 - > 1. 0 - >
_get_users_invenio2 - get number of users in invenio
Dump a User object to a dictionary.
str_ load_deposit - Load deposit data into the database.
Create a new deposit record and a persistent identifier for it.
str_ Loads a record from a dump of a record_dump into the database.
Load records from a list of sources. If recid is not specified all records are loaded
Get profiling statistics as a list of dicts. Sort is the name of the property to sort
str_ Main entry point for the tornadoprofiler module.
Dump profiling statistics to a file.
Delete the current profile. This is called when the user deletes the profile from the system.
str Delete the current profiler. This is called when the profiler is no longer being used.
Get the status of the running process.
str_ calc_translations_parallel - parallel calculation of translation for each image in images.
stitch a list of images into a single image and return the stitched image.
_add_ones_dim - Add ones dim to an array.
Create a new record from the given dump object. If the record already exists it will be
Create a new record from the given dump.
str update_record - Update the given record with the given list of revisions created and updated
Create persistent identifiers for the given pids.
delete a record from the database and update the persistentidentifier table with a status of deleted.
Create a file in a bucket with a list of file_versions.
Delete all buckets in a record.
Returns a list of all pids that are missing from the persistent identifier store.
sort files by file name and sort by file name. sort by file name. sort by
str_ Returns a list of pids from the revisions in self. revisions.
Returns True if any column in the record is deleted. If record is None returns the last
This function loads a community from the database and saves it to the logos_dir.
str_ = id_community id_featured = id_community start_date =
Dumps a thing to a file in JSON format.
Check a thing.
str_ Delete the widget from the event handlers list.
str_ Returns the magnitude of the vector v.
str_ normalize a vector to the magnitude of the vector. The magnitude of the vector is
transform the texcoords of the data to the new texcoords of the original data.
Ensure that the bones are present in the data dictionary.
Set the length of the symbol in the given data dictionary.
str_ Sets the parent of this bones.
str_ Returns the point on the pivot point of the data.
Start a new animation on the given data object.
Set the current state of the GL object.
Unsets the state of the GL object. This is called when the GL object is destroyed
Set the state of the bone.
unset the rotation state of the bone
Ensure that modeldata exist for the given object. If it does not create it.
redraws the vertices and tex coordinates of the modeldata of the given object.
Draw the modeldata for the given object. If the object has a modeldata
str_ Set the model to use for this instance. If the model has already been set
write a report to the file at relative_path. Returns the path to the file.
str_ Add a menu to the menu list.
redraw the label
redraw the label
Draw the window and all the widgets in the canvas. This is called when the canvas is
str_ Delete a widget from the widget list. If the widget is a basicwidget it
Redraw the label.
registereventhandlers - Register mouse motion and drag event handlers - Register mouse drag and
Register crouch down and jump down keybinds.
str_ label_main - label_main string to be displayed in the main window.
Exit the dialog. This is called when the user clicks on the exit button. This is
Update the progress bar with the current number of items and the percentage of the progress bar.
str_ Render all the actors in the group. If no view is provided render all actors
str_ Render the staticworld to a 3D view.
str_ True if a resource with the given name and extension exists in the local filesystem.
Add a category to the image.
Returns a pyglet. image. Image object representing the missing texture.
Get the model object for a given name. If the name is already cached it will be
Load a model and store it in the modelobjcache and return the model object.
getmodeldata - get modeldata for a given model name. If the model
str addwidget - Add a widget to the list of widgets to be displayed.
str_ Draws the sub - menu if it is visible and if it is not a
redraws the background and stencil of the canvas
redraw the scrollable container
mouse_aabb returns True if the mouse is inside the aabb of the given size
Returns the p - value of the number of points in the range [ min max ).
addlayer adds a layer to the graph. If z is - 1 the layer is added
Add an action to the list of actions that will be called when a request is made.
str_ - The name of the action to be performed. If the name is not defined
Register a new name to the registry. If force_id is not specified a new id
str_ Add a layer to the graph. If z_index is not specified the layer
str_ Draw the layeredwidget and all of its layers.
str_ Delete the layeredwidget and all of it s layers.
str - Returns the border of the widget.
str_ Returns the offset of the widget relative to the widget s current position and size.
Returns the size of the widget in pixels and the size of the border of the widget.
Read a mesh from an hdf5 file.
Make a connection matrix for the given shape.
str_ Set the fields of the object. If fields is not specified all fields will be
str_ add_fields - add fields to the list of fields to be added to the
Check that all elements are present in the list of allowed types. If not raise an error
Return a list of space characters for each element in the list.
Compute the edges of the data.
Returns a pandas DataFrame of the centroid angles and edges of the mesh.
Add an element set to the node set.
node_set_to_surface converts a node set tag to a surface element set.
Convert a surface tag to a list of element sets.
Returns a pandas DataFrame with the metadata for all the fields in the model. The metadata is
Returns a pandas. Series containing the metadata of the current step.
str_ Create the directory structure for the working directory if it doesn t already exist.
Run the GMSH and read the mesh from the file specified in self. file_
Read a history report from a CSV file. If x_name is specified it will be
Read a field report from a text file and return it as a dictionary.
Convert a list of strings to a string of a certain width.
Returns a string representation of the equation.
Convert a DataFrame to an unsorted set of labels.
Parse the response from the API and return the payload. If the response is invalid raise an
Helper method to make a GET request to the MusicBrainz API.
str - > str - > str - > str - > str - > str - >
Returns the error message for the field.
Returns True if the exception was thrown by a descriptor or False if it was not thrown by
_set_data sets x and y variables based on the data attribute of the class.
Returns the mode of the given axis. If the axis is a timevariable then the mode
Set the axis mode to the axis mode of the plot. The axis mode of the plot
Create a class with the given name and function and attributes.
Polls datafeeds and processes them. Draws the notifications on the screen.
try to convert a value to a float or bool.
str_to_num - convert a string to an integer or float.
Plot a graph with the given attributes.
Convert a string to unicode if it s not already unicodedammit. If it s
str - Returns True if mime_type matches any of the include_mime_types.
Clean up a domain name from a raw string.
Returns a list of strings representing the left part of the domain name.
Returns a tuple of the token and the hash of the token. If the hash is document
collect_words - Collects all words from a Si object and returns a dictionary of
Index a stream item in the index table. If clean_visible is set to False the
Return a list of hash keywords that match the given hash.
str - > str - > str - > str - > str - > str - >
lookup_tf returns a generator of tuples of stream_ids and values for the given hash
_make_stream_items - make a list of items from a file - like object
_read_varint reads a varint from the stream and returns the number of bytes read
Read an object from the file and return it as a str_ object.
serialize si_key into a string that can be used as a key for an Si
str_ str_ str_ str_ str_ str_ str_ str_ str_
Temporarily change the current working directory to the given path.
Strips a prefix from a string. If strict is True raises wimpyerror.
Strips a suffix from a string. If strict is True raises wimpyerror.
is_subsequence - Check if needle is a subsequence of haystack.
Run the server in a background thread. This is the main entry point for the server.
str_ Shutdowns the server and closes the connection to the server. If the server is
Returns a function that can be used to determine if the response is an error page. If
Add a route for a given method and pattern. The callback will be called when the route
str_ Returns a tuple of a route and a list of parameters for the given method and
str _resolve_non_literal_route - Resolve a non - literal route.
Normalizes a pattern to match against regexroute and wildcardroute. Returns the pattern type and the
Return the response as a list of bytes.
str_ If value is not None add it to the list of headers. If value is
Set a cookie with the given name to the given value. The cookie will be added to
Returns a string with the status code and the phrase of the response.
Returns the content - type of the response.
rmtree - recursively removes a directory and its contents. If followlinks is set to true
Returns a list of open file descriptors for the current process. If verbose is set to True
Attempt to fetch a file from the server and return the number of available streams clean_visible
str_ Get a list of lines from a file.
_random_adjspecies_pair - Generate a pair of species and describer.
random_adjspecies_pair returns a random pair of adjacent species. If maxlen is specified
Morph a sentence into a single word.
Get the similarity of a query pair and a request. If json_flag is True return
Perform Hiragana analysis on a given sentence.
Get a list of entities from a Goolabs sentence file.
Generate a shortsum of a list of review files.
Show the keywords for a given app.
chronology for a given sentence in a Goolabs app.
_init_all_stages - Initialize all stages and return them as a tuple.
Run the writers and return a list of output paths.
Run an incremental transform on the given streamitem.
replace a sub - module in the pipeline with a new sub - module in the given config
Returns True if target_mentions is a member of chain_mentions False otherwise.
str_ True if any of the names in target_mentions is in chain_ment
Match multiple tokens in a stream_item with the given aligner_data.
Make a NER file from the given clean_visible_path and ner_xml
Shuts down the child process if it is running. If the child process is not running
multiply p by n and return the result as a string. n must be an integer
Yields the start end and text for each sentence in the string.
make the label index based on the annotator_id of the given stream_item.
Returns a list of sentences for the given stream_item. If the stream_item is
Make a temporary cleansed file for a given chunk of data. This is done by writing
Make an NER file from a file in a temporary directory. The pipeline_root is
Strips punctuation and whitespace from a span string.
Instantiates a pipeline configuration from the given config dictionary.
generate_john_smith_chunk - Generate a John Smith chunk from
Make a clean_visible file from a chunk of Si objects.
Strips whitespace punctuation and penn treebanks from a span string.
This is the main entry point for the script. This is the main entry point for the
try to load a function from a given module and add it to the self.
Load external stages from a file and update the stages list with the loaded stages.
str_ Creates a new instance of the stage with the given name and configuration.
Read from a byte stream and return a tuple of the index value and the next byte.
Filter the given href according to the config. If the href does not match any of the
Make a list of labels based on the current offset type and the given clean_html.
str_ Returns a generator of all the paths in input_dir.
Returns a generator that yields all of the tasks in the database. If the key_prefix
Get a random item from the available data.
str - > list of lingpipe sentences from ner_dom - > list of
Verify the MD5 checksum of the given data against the given md5_expected.
Get an S3 bucket from a configuration dict.
Decode data into a streamcorpus or streamcorpus. chunk or streamcorpus.
Get a single chunk of data from a given bucket and key. If the key does not
Convert a stream ID into a key for the KVLayer.
Convert a kvlayer key to a stream id.
str_ for a stream item returns a tuple with the hash of the stream item and the
The main entry point for the command - line tool.
Build an argument parser with the given arguments.
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
str Add an element to the tag list. If the tag is already a textelement then
Returns an xpath string representing the piece of the last element in the document. The piece is
Returns the index of the first text element in the list of tags.
str - > list of all descendants of the given element.
str_ Returns a list of all elements in source that are an instance of element.
str_ Select all elements with the given name from the given source.
str_ Select all elements whose name matches the given pattern.
str_ Returns an iterator over the siblings of elem following elem.
str Call Inkscape with args_strings. args_strings is a list of strings
Export an input file to an output file using the Inkscape library.
Convert an SVG file to a PDF file.
Convert an SVG file to a PNG file using Inkscape.
Returns a Jinja2 environment for the given file path. If the file does not exist
str _setup_template_file _setup_template_env _template
Fill the file_content_ attribute with the contents of the doc_contents.
Save the content of the object to a file. If the file_content_ attribute is
Create a Document from a template file.
str_ Fills the SVG document with the given doc_contents.
Render svg to pdf or copy to file_path. file_type can be SVG or
Render the template to the given file_path. The file will be saved to file_
Parse an XML string and return an expat. parser. ExpatParser instance.
str - > str - > str - > str - > str - > str - >
str Insert text at the end of the document. If insertbefore is set to True insert
insert node before refnode
clonenode returns a copy of the node s xml_name with all of the attributes
Return a string representation of a node. If outermost is True return the string representation of
str_ Insert a child at the given index. If index is - 1 insert the child
Parse the config file and return a dictionary of config data. If the config file does not
get_google_credentials - Get the Google credentials from the user s config file.
Create a dictionary of datetimes to be used in an event.
Create a new event for a given calendar.
str_ Main entry point for the command line interface.
Get the extension of a file. If check_if_exists is set to True the
Add extension to filepath if it doesn t already exist. If check_if_exists is
str_ Returns a temporary file with the given suffix. If dirpath is None returns the current
Remove all files with the given extension from the given workdir.
csv_to_json - Convert a CSV file to a JSON file.
replace old content with new. max is the maximum number of characters that should be replaced.
Parses the HTML and returns a list of tokens.
Check if the next sibling of the given tag is a link. If so add it to
Create italic tag if it doesn t already exist in style tag.
Create strong tag if it doesn t already exist. If it doesn t exist it will be
Add underline to the given tag if it doesn t already have it.
str _parse_attrs - Parse attributes from tag. attrs.
Remove line breaks from a tag and return it as a string.
Parse the href and return the value of the query parameter. If no query parameter is found
Parse the value of an attribute. If the value is an href it will be converted to
str_ - > str_ - > str_ - > str_ - > str_
Returns a JSON string representation of the object.
str_ Find all files in a folder that match a regular expression.
Concatenate multiple strings into a single string.
Yields True if full starts with part.
Yields True if part is contained in full.
Generate a boolean value from the given object. If the object is already a boolean it is
Yields the results of executing expr for each item in seq. If seq is a string
Given a sequence of strings return the values associated with the given key in the given table.
Replace all the characters in the svg_content with their corresponding unicode entities.
Check if the input is a valid SVG file. If it s a string return it.
Merge multiple PDF files into a single PDF file.
_embed_font_to_svg embeds a font file to an SVG document.
Embed a font file into an SVG file.
Check that all inputs are of the correct type.
Check that the function is callable and has the correct number of arguments.
str_ Recurses through the inputs and outputs the result of the function.
Create an input string from a jinja2 template and a list of options.
str_ Recurses through the inputs and adds them to self. _options.
Convert an object to a string.
Convert an object to a number. If the object is a literalwrapper it will be converted
Convert an object to a boolean. If the object is a literalwrapper it will be converted
Serialize an AST into a list of strings.
Change the encoding of the XML file at filepath with src_enc and dst_enc.
Save text into QR Code.
Launch an option in melody and return the result. If the option successfully launches
Calls a command with the given arguments and returns its return code. If the command cannot be
Convert a Tex file to a PDF file.
Returns a list of options for each loop in the given psy.
Transform a geometry to a spatial reference.
Return an OGR geometry object from a JSON or GML geometry string or a WK
str_ expands the range of this range to the range of the given other string.
str_ - > Intersects with another str_ - > Intersects with the
str_ Return True if this rectangle intersects with the other rectangle.
str_ Return the polygon of the linearring.
from_znm - Create a new instance from a z - n - m index and
Write the Dataframe to a file.
str_ Select rows from the table that satisfy the given condition.
Returns a table with the rows at the given nuclei.
Returns the intersection of this table and the given table.
return a new table with the rows not in self. df
Returns a new Series with odd and even elements removed from the original.
Returns a new Series with even and odd values.
Returns a new Series with only the even numbers in each column.
str_ relative_to = str_ relative_to = str_ relative_to =
Returns the binding energy of the model in the form of a table in the form of a
s2n - Derivative of the Dijkstra s - > N
s1n - S1 n - S1 n - S1 n - S1
s2p - Derivative of the Daugther - to - P matrix
- - - - - - - i a u S 1 p - - - - -
Returns a table with the values derived from the given formula and relative coordinates. The relative coordinates
_uses_db checks if the session is initialized and if so executes the given function.
Derive a key from a master password.
Bootstraps the database from the given path or URI.
Search for domains whose name matches the given query string.
Modify a domain. If new_salt is set to True the domain s salt will be
Creates a new domain with the given name. If the domain already exists it will be replaced
Extract HBS messages from a file object and return them as a list of tuples.
vsiprefix returns a path with the vsi scheme and file extension removed.
Returns the SRID of the EPSG. If the EPSG is invalid returns
Entry point for the command line tool. This is the entry point for the command line tool
Download a file from a URL and update it with the contents of the file.
str_ Returns a dictionary of all available driver names and their metadata.
Returns an imagedriver for the given path. If no driver is found none is returned
Convert a shapely geometry to an array of numpy. ndarrays.
Create a raster from a layer and a raster raster object. The raster object is returned.
Open a GDAL raster from a file - like object or file - like object.
Create a raster from a byte array.
Copy a raster from source to dest. If source is a raster it will be copied.
Returns a dictionary of options for the list of choices. If the list does not contain any
Create a raster of the image at the given path. The raster will be stored in the
str_ Set the geospatial transform of the dataset.
Read an array from the dataset. The envelope parameter can be used to specify the offset of
str_ The envelope of the raster.
str_ Returns the driver used to connect to the database. If the database is not connected
Return a new raster band with the given size and affine. If no size is given the
str_ Create a masked array from the current envelope and the given geometry. If geometry is
Returns the nodata value of the node.
Read a raster from the underlying dataset.
Resample the image to a new image with the given size and interpolation.
Save the image to a file. If driver is not specified it will be used.
str_ Set the projection of the dataset. If sref is not a spatialreference object
Warp the image to a spatial reference. If dest is not specified it will be w
calc_chunklen calculates the chunk length and the length of alph_len.
lookup_alphabet returns the alphabet for the given charset. If the charset is not supported
str - encodes a single chunk of data at a given index into a long - encoded string
Convert a chunk to a long value.
Get a chunk of data from a given index and return it as a string.
Return a compiled regular expression for the given resource filename.
normalize a date format to be compatible with pandas. datetools. normalize_date_
_detect_timezone detects the timezone of the current locale and returns it as a string
Returns a dict representation of the object s swagger_types. If the object is a list
handle_jobs - handle jobs from a given host and port using the given job handler.
str_ worker_main - Main function for the worker.
run_worker_pool runs the job_handler in a worker pool. max_workers
Sets the classification of the object.
str msg - Message to be sent to the server.
Turn on a light.
Turn on switch.
Turn on with the given brightness.
Turn off the device with the given name in the given device_id.
str_ Send all messages in the queue to the client.
Send a message to the LWLink and return True if the message was successfully sent.
Set the nature of the rule. Valid values are 1 2 3 and so on.
str_ Set the config files to be used.
str_ Yields all the options and their values.
str_ Create the config file at the given index. If index is greater than the number
str_ Update all sections in the config file with the values in conf_dict.
str_ Read configuration from a TOML file. If the file does not exist return None
str_ Read the config files and return the content of each section and a list of fault
Return a list of option names for the given section and option. If the option is a
str_ Returns a list of sections for the given command. If no command is given returns
Build the argument parser for the command.
str_ Parse the command line arguments and store the result in the _conf dict.
Returns a list of strings for a bash comprehension of the given command.
Bash completion function. Prints out the completion of a command and its sub - commands
Starts a new master.
Called when the connection to the server has been established.
Called when a line is received from the client. Decode the line and send it to the
Called when the connection to the server has been lost. This is called when the connection to
_job_loaded is called when a job is loaded. This method is called when the
This method is called when a response is received from the server. It is called by the
Close the job.
Run a list of jobs in the queue.
closes the connection to the server and the manager. This is a no - op if
str_ Change the result of all waiters.
str_ Add a result to the end of the result set.
wait_changed - Wait for the future to complete. If the future is complete it will
str _load_job loads next job from self. _jobs and updates self. _
str _done - Complete the job and notify all waiters that the job is done.
str Add a result to the result queue. If the queue is full the result will be
str Cancels all currently running jobs.
wait_done waits for all active jobs to finish.
str Distributes jobs from the active job source to the job_sources dictionary.
str_ Add a list of jobs to the job queue and return a jobsethandle.
str_ Get a job from the queue and call the given callback when it is available.
str return_job - Return a job back to the pool. If the pool is closed
str_ Add the result of a job to the job_sources list.
job_set_done is called when a job set is done. This function is called
str Close the event loop and cancel the active event loop. This method is called when the
uniquify a list of strings and return a list of all the strings in the list
Returns True if the object matches the given regular expression. If the object is a string it
Returns the region of the current environment. If no environment is specified the environment will be used
str_ Filter a list of entries based on a list of filters and a list of exclude
Get the public dns name of an EC2 host.
Create a new instance from a dictionary.
_get_attrib - Get an attribute from the object. If convert_to_str
Creates an instance from a boto. ec2. Instance object.
Return True if the object matches the given filter string.
Returns a string representation of the IP address. If the name is a string it will be
Add a timestamp to the event_dict.
Returns a structlog logger with the given name. If output is a string the logger will
Create a celery application with the given title output and timezone. If no timezone is provided
Revoke the terminate flag for the given worker_id. If the worker_id does not
config_conf_section returns a list of config sections.
config_cmd_handler - Command handler for config creation and editing.
Takes a list of rows and converts them to strings. If the number of columns in the
Get a color from a string. The hash is calculated based on the hash of the string
Return a random color string.
str_ Check if username and password are valid. Returns None if no user is found.
str_ Check if the given token is valid and return the user object. If not return
Check if a process is running. Returns bool_ if the process is running False otherwise.
Dynamically import an object from a module.
Returns the self IP address. If public is set to True the self IP will be returned
Make a REST API request to the given URL using the given method. The method can be
Prepare the post parameters to be sent to the API.
Serve a DNA server.
Render the template with the given name and value and return the result as a string.
str_ stream_command_dicts - Stream a list of command dictionaries to the console.
Returns a list of network days between from_date and to_date in the given locale
Get the path of a given command.
Build the SSH command to send to a remote host.
Create a Profile object from the command line arguments.
str_ Creates a new relationship for the given part and adds it to the list of relationships
Return a list of related packages of a given type.
_load_rels - Load relationships from data source.
str_ Add a Content - Type part to the Content - Type. If override is True
Load a part of a given rel_type from the given data and store it in the
find_for - Find a file by name or extension. If no file is found return
Create an instance from an XML element.
str_ - > str_ - > str_ - > str_ - > str_
Build the JWT.
Assign a force field to all atoms in the AMPAL object.
Finds the maximum distance between the rad and npnp parameters in the Fourier domain.
make a dictionary of forcefield parameters from a dictionary of forcefield atoms and their values.
str_ - > bytesio. bytesio. bytesio. str - > bytesio
str_ Get all the segments that start with the given name from the given file - like
Returns a list of all filenames in a directory.
Returns a list of all directories in a given directory.
Create a prefix for a given directory.
str_ Delete a file from the bucket.
Ensures that the user is logged in and that it is logged in with a valid token.
Returns the loud version of the current language. If no language is specified the english version
Returns the home URL.
str - Returns a list of all hotspots in the tree.
Get a keeper token from the given host and username and password. Raises a Keeper
Upload a build to Amazon Travis.
Check if the event should be skipped based on the environment variable on_travis_
Confirms a build by sending a PUT request to the given build_url with the
str_ deep_update takes a dict and a mapping and recursively updates it with the values
This is the entry point for the keeper command line tool. It creates a stream handler
part_edit_cmd - Edit a part. xml file.
pack_dir_cmd - Packs the contents of a directory into a list of files
Split a path into a list of drive and path components.
Get the editor for the given file path.
Process a module node and check if it matches the file header. If not add a message
Generate an HTML chart for the given data object.
Returns the HTML for a chart object. If filepath is specified it will be written to the
Serialize a data object into a matplotlib chart.
patch the json data with the str_ key and remove the str_ key from the json
Convert JSON data to HTML.
_dict_to_df converts a dictionary to a Pandas DataFrame.
str_ is the slug of the file to be written to and the html is the html
_chart_class returns a chart class based on chart_type. If chart_type
str_ - > xencode yencode - > yencode xfield - > xfield
Infer the URL of the tarball from the app. json file.
Create a new app in a given environment.
Delete an app from HAPPY. If app_name is not specified it will be
Generate a random binary string of the given length.
Generate a random IPv4 address.
str_ to_date str_ to_date str_ to_date str_ to
Returns a session object with the current auth token and trust_env flag set to True.
This method is used to make a request to the API and return the response as a dict
Function to create a new build from a tarball.
Check the status of a build.
Generate a sequence of strings starting with the given prefix.
str Register all sub - commands for this command with the given parser.
str_ Return the root argparser for this command.
get_description returns the description of the object. If the object has no description it will
Get the help text of the command.
str_ Run the command and return its exit code.
str_ = > encodedata str_ = > encodedata str_ = > encodedata
Get a list of all the athletes.
Get the last n activities.
Request the list of activities for a given athlete.
Request the activity data for a given athlete and filename.
Returns the endpoint for the given athlete.
Returns the URL for an activity file.
Get a request to the Goldencheetah API. Raises an exception if the
Create a new build from a tarball.
url_with_auth is a wrapper around django. contrib. auth. url. url
Generate a random title from a list of languages and genders. If no languages are provided
Generate a random person title first_name last_name gender_female and gender
Returns a random last name in a list of languages. If no languages are provided the last
Render all options into a single string. This is useful when you want to render multiple options
str_ The dataset to use for the plot. If no data is provided the plot will
Render the chart to a string. The string will be encoded according to the encoding and size
Check if a type is valid. If it is return it. Otherwise raise an exception.
Returns the URL of the resource.
Open the current page in a web browser and return the result as a string.
Saves the file to the specified file name. If fname is none the current file name is
A wrapper around urllib2. urlopen that catches errors and prints them to the console.
Return a PIL Image object from the response.
str - > file - > file - > file - > file - > file - >
Return the SHA - 1 checksum of the file. This is the SHA - 1 checksum of
Return a random amount between min and max with decimal_places decimal_places.
str unprotected_and_protected_claims - returns the unprotected and protected claims.
Return the signing keys as a list of JWKs.
str_ unpacks a metadata statement into a clientmetadatastatement object or raises an exception.
Packs a metadata statement into a string that can be sent to the server.
evaluates the metadata statement and returns a list of lessorequal. lessorequal.
check if the federation_usage is correct for all messages in the metadata and return the
extend_with_ms is a helper method to extend a request with a list of sms
Parse the command - line arguments and return them as a list of argparse. Argument objects.
Add the command line arguments to the argument parser.
str_ Apply logging options to a set of log levels and a set of log files.
str_ log message with verbose level.
_letter_map - returns a dictionary mapping letters to their numbers.
Returns anagrams in a word in the range [ start end ). If sow
Returns a tuple of the class and the name of the class as well as the name of
Transform timeseries data from start to end. If end is not specified all points are returned.
Get the last value from a timeseries.
Validate a page number. Raises an exception if it s not an integer or if it s
str get_page_of_iterator get_page_of_iterator get_page
Change the mode of a file or directory in the current working directory. If recursive is True
str - Creates an internalsigning service from the given config and entity_id.
make_signing_service creates a signing service based on the given config and entity_id
Signs a request and returns the signed response.
Create a new resource. Returns the resource id or None if the resource doesn t exist.
update_metadata_statement - update a metadata statement at a given location
Update the signature for a given location. Returns a dict with the updated signature.
Yields the contents of a bundle from the given data. If the data is a list
Create a bundle from the given data.
str_ Returns a list of urls for the given asset_type.
Returns a string of HTML tags for the given asset type.
Returns a string of HTML tags for each of the available asset types.
Protocolise a URL if it doesn t have a scheme. If it doesn t have a
Find links to a given url and return them as a list of strings.
Return a listening endpoint for the given client.
Get a list of all the modules in the project. This is a list of all the
Import all the modules that have been specified in the config file.
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
print cursor for CSV or JSON format.
Output the result of the cursor as a string. If no fields are provided the result is
str Get a list of tasks from a list of do_tasks and a dependency graph.
str Add default department for a project to the department list. This is done by
Add default dependencies default types and sequences to a Project object after the save event is triggered.
Create shot for a sequence after it s been saved. This method is called after the sequence
create all the tasks for a given element
_ Get the value of a key in a section. The return_type can be either
Add a factory to the registry. The factory will be started at the start of the identifier
Remove a factory from the registry. Returns the removed factory or None if the factory is not
Connect to the given protocol factory and return a tuple of the identifier of the protocol.
str - > None - > None - > None - > None - > None - >
Disconnect a protocol from the given connection.
Call a remote command and return the result as a str.
This method is called when the connection has been established. It is called when the connection is
Called when a multiplexed connection is established.
This function is called when data is received from the client. It will write the data to
_senddata - Send data to the server.
Called when the connection to the server has been lost. This will remove the protocol from the
str_ Returns the local protocol for the given connectionidentifier or raises a nosuchconnection exception
Called when a message is received from a remote node.
Disconnects a connection from the server.
str_ centered a string on the left and right of the terminal. If linewidth is none
Print a string on the right with the current time in localtime. This is useful when
Returns a string representation of a version number.
Identifies the unit framework for the given unit object.
Assert that the given value is convertible to the given target_unit using the given unit
str_ pads data_to_pad to block_size block_size is the
str_ padded_data is padded to block_size bytes block_size is the number
Signs a request with the self_signer. Returns a new request with the signed
gather_metadata_statements returns a dictionary of metadata statements for a given context. If
Prints the input_word and anagrams in a human - readable format. By default
Parse command - line arguments and return a dictionary of command - line options.
str_ Prints anagrams for each word in a list of words.
str datareceived - Enqueues received data to be processed and dispatches to the appropriate handler
on_unregistered_type is called when a type is unregistered. This is called when
Create a function stub for the given URL.
check if the call is in the local list and log a warning if it is not.
Return a tuple of command regex and completers for this command.
Parse an AMPL value from a string using the given AMPL protocol.
Returns a string representation of an object in the given proto.
Verify that the metadata statement is valid. If the key jar is not present in the metadata
Parse the response from the remote server.
Return a list of all the database names in the database specified by username password host and port
str_ Syncs a folder with S3.
Build a CLI from a list of modules.
str_ Create a read - only Fridge object and close it.
str_ Load data from a JSON file into a dictionary. If the file does not exist
Generate a self - signed JWT from the given keyjar using the given iss and kid.
Returns a JWT signed by the given keyjar. If the keyjar does not contain the
descovery walks the test directory and loads all the modules in the test directory.
Main entry point for librarian tests.
Returns the score of the given letter. If the letter is not found an exception is raised
Returns the score of a word given a list of input letters and a number of questions.
Get a list of words from a wordfile.
valid_scrabble_word - Check if a word is a valid scrabble
Called when a string is received from the client.
Get the command and responder from the remote boxreceiver and return the command and responder function.
str_ Parses the values of the arguments of the given command into the request object.
_writeresponse - Write the response to the transport.
Called when the connection to the remote machine has been closed.
Return a jsonampdialectreceiver for the given address.
str_ - > keyjar
str_ Loads keyjar information from a JSON string.
Nova - Custom Event Process.
cinder_customer_process - Cinder customer process.
Neutron customer process.
glance_process processes the given body and message.
Process a message based on swift_customer_process and swift_customer_process_wildcard
keystone_customer_process - Process an incoming message.
heat_process - Process an event.
Serve the application. If no server is given a simple server will be created for the application
str_ pout prints msg to sys. stdout. log_func is a logging function
str_ Print msg to sys. stderr and log to log. error if log is not
Register a command subclass as a command. The command subclass must be a subclass of Command.
Register a command subclass with the given class.
Convert the value to a string. If the value is not a string it will be converted
Convert a string to an argument and check that the value is valid. If the value is
Update the completers dictionary with the values in cdict.
str_ Works on the Ternya server.
init_mq creates a MQ connection and inits the consumer. Returns the MQ connection.
init_modules - Initialize the modules from the config file.
init_nova_consumer - init Nova MQ consumer
init_cinder_consumer - init cinder consumer
init_neutron_consumer creates a consumer for the neutron component
init glance consumer
init_heat_consumer initalizes the consumer for the heat component
Enable notification for a given OpenStack component.
Get information about a music song.
Download a song in a separate thread. If thread_num is less than num_ then
str - > None - > None - > None - > None - > None - >
Returns the value of a global variable. If the variable is not in the globals it will
Call a function on the top of the stack. If the function is a built - in
Dump a MySQL database to a file in a temporary directory.
_atexit_func is called when the process exits. This is called when the process
str_ - The command to run. args_list - The list of command line arguments
str_ Change the current working directory and restore the previous working directory after the context exits.
str_ Copy a directory and all its contents to a new directory.
This is the main function for the debugger. It is called when the debugger is started.
str_ Get the modification time of a file. If the file doesn t exist it will
Check if a file has changed since the last time it was last read.
str_ Syncs all files in the directory to the database. If the file has changed
str_ Delete all files in the directory. If the directory does not exist it will be
Scrapes a feed from a given URL.
Download an image from the server and save it to the cache directory.
has_changed - Check if the image has been modified since the last time it was last
Returns the filename line number and name of the caller. If stack_info is set to
Returns the defining component of the given PE object. If the PE object is not a
This is the main entry point for the ooaofooa command line tool. It
str_ Find a symbol in the stack with the given name and kind.
str_ is_contained_in - Check if the given PE is contained in the
is_global - Check if a PE is a global PE. If it is a global
_get_data_type_name - Get the name of the data type.
get related attributes from r_rgo and r_rto
mk_enum creates a named tuple of the enum names of the given SEDT.
str_ Make a bridge function from an SBRG object.
str_ bridges in s_ee str_lett returns a named tuple of
str_ str_ str_ str_ str_ str_ str_ str_ str_
Make a constant from cnst_syc. cnst_lfsc cnst_
Make a classmethod for an operation.
mk_derived_attribute creates a property for a derived attribute of the given metaclass
mk_simple_association creates a simple association between a model and a model instance.
Make an association from a model instance and a relationship class.
Create a component from a BP model.
str_ task_id uuid4_bytes uuid4_bytes uuid4_bytes uuid
Accept a reply from the server.
Reject a reply from a call. The reply will be sent to the reply_socket.
str_ Send a reply to reply_socket with an exception raised by exc_info.
call_wait waits for a call to be sent and returns True if the call was successfully
Establish a connection to a worker and return a list of results. If limit is reached
Dispatch a reply to the appropriate result object.
Guess the type name from the given value.
Deserialize a string value into a value of the given type.
Get a feature from the index for a given content_id. If no feature is found
Put a list of features into the index.
str_ Delete the document with the given content_id. If the document does not exist
Delete all mappings of this type from the index.
str_ Delete the index if it exists. If it doesn t exist it will create it
Scan for DIDs that start with prefix.
Returns a generator that yields the IDs of all features with the given prefix.
index_scan_ids returns a generator that yields the ids of the items in the index
Convert a list of feature names to a string.
Returns a list of filters for the given key ranges. The key ranges must be strings.
Get a mapping from indexed_features to fulltext_indexed_features.
Get the list of field types for a given field type.
Return a list of index names that are disjunction of fname in query_fc.
Returns the number of bytes of the features in the dictionary fc_dict.
Count the number of bytes matched by the given filter_preds. Filter_preds
Returns a string representation of a feature counter.
Process the command line options.
Return a string with HTML - escaped form encoding and escaping. This is the default formatter for
Returns a string representation of the given instance with the given link.
Returns a string representation of a unique identifier for the given instance.
Check uniqueness constraint for the given metaclass. If no kind is given all metaclasses are
Check integrity of a link.
Check the integrity of a subtype with a given relation id.
Convert an integer to a string.
str Delete all data from the database.
Internal implementation of _index_scan_prefix_impl. Returns an iterator over the keys
_index_put - Put an index entry to the kvl.
Put a raw value into the index table.
Return a generator of the keys for the given index name and content ids.
Return the index object for the given name.
Add a direction to a string.
Get the name of the type in s_dt. If s_dt has a core
get_refered_attribute - Get the refered attribute of o_attr.
Build a core type from a core type definition. The core type is defined by the name
Build an enum type from an EDT.
build_struct_type - Build an et. Element representing a struct type.
Build a user type element from a UDT.
str - > str - > str - > str - > str - > str - >
Build a class element from an object. The class element is a subelement of the class
Build a component element from the given component object.
Build an XML schema from a marshmallow model and c_c.
Return a pretty - printed version of the given XML string.
Fetch bikes from XSRF and return them as a list of dicts.
str_ Set node position info from lexer. lexdata and p. lexer. lexdata
Create a queue with the given name. The queue is created with the object_name property
Delete the queue with the given name. Returns the content and the method_properties of the
Returns a list of all queues and their query properties.
Returns a list of all the exchanges that have been made to the current user s account
Purges the queue with the given name and returns the content and the method_properties.
Create a MIME message from the given parameters.
Read the image from the tesseract server and return it as a string.
Returns True if the text is visible in the file. If the text is not visible returns
This is the main entry point for the ooaofooa command line tool. It
Serialize a value into a string for the given type.
Serialize an association into a string.
Serialize a class into a string suitable for use in an XMML file.
This is the entry point for the command - line tool. It parses the command - line
Partition a collection into two lists where the first list contains the elements that pass the condition.
Returns extra context to be used in a bidi view.
_find_link finds a link between two models based on a relation id and a phrase
Returns a key that can be used as a lookup key for the given object.
Compute the index key for the given object.
str_ attribute_name - Name of the attribute to get the type of the attribute.
Create a new instance of the class and add it to the storage.
str_ Returns a generator of all the instances of all the metaclasses in the registry.
defines a new metaclass and adds it to the metamodel s metaclasses dict.
str_ Send a message to a given socket.
recv a message from a socket and return it as a list of message objects.
Exit if there are too many dead code in the source code.
parse emails from a list of strings or a list of strings to a list of lists of
Returns a function that runs f in the context of the current context. If f is a
str Table of RPC specs for the given app.
Normalizes the postcode in the request. match_info. If the postcode is not
Return the next value in the stream.
str - > None
accept a C or C - like object
accept an EP_PKG or EPP_PKG or EPP_PKG
Get the brightness of the image. This is the average of the brightness of the image.
Match this expression against a list of arguments.
str_ Find the position of the first occurrence of a character in the text edit.
_selection_for_character returns a extraselection object for the character at the given
_cursor_position_changed This is called when the cursor position has been changed.
Get the exception info. If the exception is a string exception it will be converted to a
Returns an instance of the class with the given name. If no instance with the given name
executes the history console widget and adds the history to the history buffer if it is not
_up_pressed This is called when the up button is pressed. If shift_modifier
_down_pressed This is called when the down button is pressed. If shift_modifier
history_previous - Find the previous occurrence of substring in the history. If as_prefix
Returns True if the next occurrence of substring in the history. If as_prefix is True
Handle the reply from the execute request.
str_ Returns True if history_lock is held and the input_buffer is not the
str_ Returns the edited history at the given index or an empty string if the index is
str _set_history - Set the history to be displayed in the history_edits
_store_edits stores the current input buffer in the history_edits dictionary.
Function called when the user closes the connection. This function cleans up any open consoles
Convert a collection of records to a pandas DataFrame.
str_ Set all the attributes of the object.
Subscribes to all topics in self. topics. If a topic is already subscribed it
Log a message to the logger. The raw message is a tuple with the topic and message
Returns an iterator over the results of a remote command.
Convert a notebook to this notebook format.
str_ Get the importer for a given path_item.
A wrapper around cstringio. stringio. stringio. stringio. str_
Returns true if the setuptools requirement overrides the setuptools version.
Parse a string and return an instance of this class. If the string is not a valid
str_ parses the pkg_info attribute and returns it. If the attribute is not present
collapses leading ws into a single line. If header is a string it will collapse
str Hides the completion widget and disconnects the text edit signal.
str Show event handler for completion widget
Return the current text cursor.
Update the current item based on the current text cursor selection.
str Register all models in the admin site for the given app name.
str - > list of partition objects for all disk partitions in the system.
str - > tuple of cputimes. cputimes. cputimes_nt
Get the system per CPU times as a list of strings.
Get raw data from the stdin without blocking. This method is intended to be called from the
_stdin_raw_block reads a block of data from the standard input and returns it
update_tab_bar_visibility - Update tab bar visibility.
Create a tab with the current kernel.
Adds a new tab with a frontend. If no name is given the next kernel ID will
Populate the all_magic_menu with a list of magic numbers.
Close event handler for the tab window.
Check if hashed_passphrase matches passphrase.
Returns an indented short title for the given item.
has_change_permission checks if the user has permission to change the tree editor object.
Returns True if the user has the permission to delete the given object. If the tree editor
add all the children of a given node to the graph at a given level.
Make a bintree from a list of levels.
str_ Submits the given jobs to each node in the graph g in topological order
str_ Check that all nodes in the tree are in the same order as those in the
str_ Create a color table from the color templates in color_templates.
str_ Returns a copy of this colorscheme. If name is None returns the name of
Add a new color scheme to the registry.
Set the active scheme for the given scheme. If the scheme is not in the scheme list
Returns the absolute path to the library in the given home directory.
handle_iopub is the main loop of the iopub handler. It is
Wait for the kernel to be running.
str_ Set the style of the chart. If style is a string it will be converted
_get_format - Get the format for a given token. If the token is not
Get the format of the given token from the given document and return it as a string.
_get_format_from_style - Get the character format for a given token and
find_command finds a command in a list of paths. If no paths are given the
str_ Normalizes a path to make it absolute and normalizes it to lower case.
Check that value is a list of strings. If it is a list of strings it will
str_ Check if the value is a valid entry point map.
Return True if the last line of src ends with a blank line.
Return True if the source string ends with a blank line.
Transform a system assignment line into a system assignment line. If the line contains a system assignment
Transform assign_magic into a string that can be used to assign a value to a command
str - > str - > str - > str - > str - > str - >
str - > str - > str - > str - > str - > str - >
Returns the number of spaces and whether the line should be indented or not.
str_ store the lines in the buffer. If buffer is none the current buffer is used
str_ str_ str_ str_ str_ str_ str_ str_ str_
Handle cell magic.
_line_mode_cell_append - Append lines to the end of a cell.
str - > str - > str - > str - > str - > str - >
Post a notification to all registered observers.
_observers_for_notification - Returns a set of observers for a given notification.
str_ Add an observer to be called when a message is received from a specific sender.
update_status - Update the status of the running jobs based on the status of the running
Print a group of jobs to the console.
Remove all jobs from the group and print the group name and return True if the group was
_status_new returns True if there is a new status and False if there is a
prints the status of the running completion and dead tasks. If verbose is set to True
Initializes the background job base object. This method is called when the background job is created.
str_ Insert a value at a given index in the list. The list is rebuilt
str_ Returns a copy of the object.
_declare_special - Declares a special type.
str_ Declare a list variable with the given name and separator. The separator can be
str_ Declare a set variable.
str - > None - > None - > None - > None - > None - >
move to a random position in the route. state can be none or the current state.
Returns the energy of the given state. If no state is given the current state is returned
str_ Returns a dictionary of default values for the given keys. If keys is none returns
Check if the table exists and has the correct keys and types. If the table does not
Render a check into a list of expressions to be passed to the check function.
Converts a list of rows into a table.
str_ - > html. tag - > str_ - > html. tag - >
Returns a javascript file from a URL. If the URL is relative it will be relative to
Returns a CSS file from a URL. If the URL is relative it will be relative to
str_ Create an img tag with the given url. If the url starts with _ and
str - - - - - - - - - - - - - - - - -
multiply a value by an integer or a scalar.
divide value by arg and return the result as a string. If value and arg are
Returns the modulo of value with arg. If value is not a number it will return the
Returns the verbose name of a modelform or model object.
Split a line from the user input into the pre esc ifun and the rest of the
str_ str_ str_ str_ str_ str_ str_ str_ str_
Deactivate all built - in functions and remove them from the registry.
Find the url_name in the index_url. If the url_name is not
Return a generator of links that have an explicit rel attribute. If rels is not a list
Split a string into a list of strings. If the string is empty return none.
str_ The main entry point for the coveragescript script. This is the entry point
Add an action to a dash dash dashdash and action_code. The action_code
appends the action code of the given option to the list of actions for the given parser
prints the help message of the covpkg. If error or topic is provided print the
do_help - Runs the help_fn depending on the command line options and the
args_ok - Check if args are allowed and help_fn is called based on the
Execute a python script in the context of a module or a file. If the script is
do_debug - print the coverage information for debugging purposes. args - list of strings to
str_ Unserialize an object from a list of buffers and return the object and a list
str_ Set sys. displayhook to self. hook.
Call the function f and log any exceptions that occur during the execution.
is_url - Check if url is a valid URL. Returns True if url is valid
Check that the given URL is valid.
validate_url_container - Validate a container as a string or a dict of dicts.
Pulls a value from the user s namespace.
Select a number of random ports and return them as a list.
str - > str - > str - > str - > str - > str - >
Get the last n lines from the readline history.
Set auto - indenting. If value is set to True then auto - indenting is
Initialize the logstart magic string based on self. logappend self. logfile and self.
Save sys. modules to self. _orig_sys_module_state.
str_ Restore the sys. modules from the original state.
Register a function to be called after the command is executed. The function must be callable.
str_ new_main_module - returns the name of the module to be used for
Initialize the user namespace. This function is called by the user when the user starts up.
str_ Returns a list of all namespaces referenced by the current user.
str_ Reset the state of the manager. If new_session is True the session count
Delete a variable from the displayhook. If by_name is True the variable will be
Reset all selective variables that match a given regular expression. If no regular expression is given
_ofind_property is a helper function for ofinding a property on an object
_object_find - Find an object by name.
Returns a string representation of a method on an object. If the method is a magic method
str Create a history manager and add it to self. configurables.
Prints the traceback of an exception. If the exception is a syntaxerror or usageerror the
str_ Prints the traceback of an interactivetb to the standard output.
str_ Prints the traceback of a syntaxerror. If filename is specified the traceback will
str_ indents the current line and inserts the next input into the readline.
set_custom_completer - Sets a custom completer.
str_ Sets the namespace and global namespace of the completer.
Run a magic function on the given line. If the function is not found an error is
find_magic finds a magic by its name and returns it. If no magic is found
Define a macro in the user namespace. If it s a string it will be converted to
Run a system command in the current user namespace.
Auto - rewrite the input by printing it to stdout if the user wants to do so.
str_ Returns a dictionary of the user variables with the values of the given names.
str_ Converts a dictionary of user expressions into a dictionary of strings.
str_ Return the value of the expression expr in the context of the current user namespace.
safe_execfile_ipy will try to open the file fname and run it in the
run_cached_cell_magic - Runs a magic on the current cell and returns
var_expand expands the variables in the given command using the given number of arguments.
mktempfile creates a temporary file and adds it to the self. tempfiles list.
str This method is called at the end of the process. It is called when the process
Broadcast a message from sender to dest_name. If dest_name is none the message
Returns a list of profiles in a given directory.
Returns a list of all profiles that are bundled in the current IPython package.
Find a distribution by its key. If no distribution is found raise a VersionConflict exception.
Returns the full path to a file or None if the file does not exist.
Read the next line and return it as a string. If the end of the line is
str_ Send a string to the child process. Returns the number of bytes written.
send an interrupt to the child process.
Returns a compiled regex pattern for the given pattern. If the pattern is a unicode string it
str_ - > re. compile p. pattern - > re. compile p. pattern
Search for a string in the string set and return the index of the first occurrence of the
str_ Search for the best match in the buffer and return the index of the match.
Unpacks a directory into a directory specified by extract_dir. If progress_filter is
Return the last error in the log. If there are no errors raise runtimeerror.
Execute a command and return its output. If the command fails raise an exception.
Try to find the source of the given filename. If the file does not exist it will
str_ Returns a list of the arcs executed in the file.
Returns a list of arcs that are not executed and are not in the no_branch branch
arcs_unpredicted - Returns a list of the arcs that were unpredicted
Return a list of branch lines with the maximum number of exit lines in the parser.
str - > int - > int - > int - > int - > int - >
str_ Returns a dict of the arcs that are missing from the current branch.
str_ Returns a dictionary of branch numbers and the number of exits and the number of missing
str_ Set the precision of the number of digits to use for the number of digits.
str_ Returns the number of statements covered by each branch or None if there are no statements
Returns a string representation of the PC covered by the function. The precision of the string is
Highlights needles in haystack and returns the result as a string. If no needles
str_ highlights the given string with the given keywords. If no keywords are given the
Highlight words in a string using a list of keywords. If keywords is empty string is returned
str_ Runs the given function in the context of the current thread. If the function
unquote_ends unquotes the ends of a string and returns the original string.
Returns a marquee of the specified width with the specified mark. If no text is
Format a string for display in the screen. This is done by replacing all par characters with
Remove leading and trailing spaces from a string and return a new string with the dedented text
Return a list of text paragraphs wrapped with the given number of columns.
Returns the optimal number of columns and the number of rows in rlist. If there are
str_ Returns the i th item in the list or the default if the i is out
Build the kernel arguments to pass to the frontend. If argv is none the current argv is
init_ssh - Initialize the SSH connection to the kernel. If sshkey is not specified
Returns a pretty - printed representation of the given object. If verbose is set to True the
str_ Prints a Python object to stdout.
Get the mro of obj_class. If obj_class is not a string it
Default printing function for Python 2. x.
prints the super class of the given object to the given printer. The cycle parameter is
Pretty - print a re pattern.
Prints the type of an object to the given printer.
Print a function s name in a nice way.
Pretty - prints an exception.
str_ Returns a function that will be called when the given type is printed.
str_ Registers a function to be called when a type of a given name has been
Write a text object to the output. If the buffer is full the text is appended to
Add a line break to the current group. If the current group does not have a line
end_group - Close the current group and remove it from the list of breakables.
str_ Write all buffered data to self. output and reset self. buffer_width.
Returns a pretty - printed representation of the given object.
write a row of data into an ODS file.
Get the current text from the clipboard.
osx_clipboard_get - Get the contents of the clipboard.
Get the contents of the clipboard as a string.
Returns the build prefix for the current user.
rekey a dictionary to make sure the keys are in the same order as the keys in
str_ Extract dates from a string or dict of datetime objects and convert to datetime objects.
str_ - Squashes dates in a dict - like object into a string - like
date_default returns the string representation of obj. If obj is not an instance of datetime
Checks if the current installation is a site directory. If it is it checks if it is
str_ Write contents to a script in the install_dir.
This function will sleep for t seconds and return the number of seconds and the number of seconds
Creates an argument parser for the given prog_name and subcommand.
Example of how to disambiguate a topic from a reg_url to an iop
str Builds a packagefinder object from the given options.
_log_level_changed - Callback for logging. setlevel and logging. setlevel
Creates a default logger with the specified log level and log format.
_flags_changed is called when the flags are changed. It asserts that the values are
prints the help for the aliases of the classes in the class hierarchy.
str_ - Prints the help for all the flags in the command - line.
prints the subcommands of the command.
prints the help of the command and its sub - commands and options. if classes is
Prints the examples of the model.
str_ Update the config with the new config.
Initialize a sub - command.
Flattens the flags dictionary into a single dictionary. The keys of the dictionary are the
Parse the given command line and update the configuration.
Load a config file into the config object. If the file does not exist it will be
Generate the config file for this class.
Downsamples k elements from the array and returns them as a new array.
Format a list of labels and data into a list of strings. This is useful for debugging
Write a message to the output stream if the condition is met. If the condition is met
This method is called when the config is changed. It is called when the config is changed
class_get_help - Get help text for this class and its traits.
class_get_trait_help returns the help text for a given trait.
str_ Clears all instances of this class from the _instance attribute of all subclasses.
Return a tuple of the failure code and exception details for the given test and the traceback.
Lite crash handler. Prints a message to stderr if interactiveshell is not
str flush - Flushes the queue and processe events to the QCoreApplication.
str_ Override start_channels to emit the started_channels signal.
Read data from a file - like object and return the data as a list of dicts.
Read a string from a file - like object without raising an exception if an interrupt occurs.
Split a string into a list of tokens. If posix is set to True it will split
compress_dhist compresses a dhist array into a list of lists of num_
record_magic adds a function to a dictionary of magic_kind and magic_name.
lsmagic_docs returns a dictionary of all the documentation for all the magics in the
format a string in LaTeX format
Add a default option to the options table. If the option does not exist an error is
str_s str_s str_s str_s str_s str_s
task_with_callable creates a task object with the given callable. The callable can be
str taskinfo_with_label - Returns the task s function info with the given label
Get the callable object from the function info.
calc_next_run calculates the next run based on the current time and the schedule.
Submits this task to the run_task_channel with the given timestamp.
This method runs the task with the given message. The message will be sent to the channel
str_ run_asap - run asap
str - > None - > None - > None - > None - > None - >
Runs the given callable only once. If the callable returns True the callable will be run immediately
find_url_file find_url_file returns the full path to the url file
bind_kernel binds the kernel to the engine and the session to the ipkernel app.
Create an interrupt event. The event is created by calling the kernel32. createeventa
Run the main loop. This is a blocking call that will wait for the process to exit
Filter a namespace by name and type. If name_pattern and type_pattern are specified
List all objects in a namespace that match a given filter.
mutex_opts takes a dict of mutex options and a list of ex_op and raises
Draw the current figure if interactive. If the current figure is not a string it will be
str_ Flush all currently active figures and send them to the canvas.
Send a figure to the user. The figure will be formatted according to the format of the
Load an IPython extension from the given module_str. If the module_str is not
str_ Unloads an IPython extension.
random_ports returns a generator of n random ports from port 0 to port n - 1
init_webapp initializes the notebook web application and the http server for the web application.
sigint handler for signal. sigint and signal. SIGQUIT.
Confirm the exit of the program. If the user presses Ctrl - C the program will
Cleanup kernels that are no longer needed. This is done by calling shutdown_kernel on
Generates a stock price for a given number of options.
Replace all occurrences of the keys in dict with their corresponding values in text.
Render the prompt with the given name.
Create a new zip file in the given directory.
fix_version - Fixes the version of the Python interpreter to match the given context.
Returns True if obj is a mappable object.
str_ return a partition of seq by p and q. p is the index of the
run a single file and return the output. If interact is set to True the file will
Run the given source with the child process. The source can be a list of strings or
Download a file from the FTP server. If the file does not exist it will be created
reduce a frequency list to a full frequency list.
Compute n - digit frequencies for a file.
Returns a generator of digits from a text file.
Returns the frequency of a given set of one - digit digits.
Given a sequence of two - digit numbers return a numpy array of two - digit frequencies.
Calculate the frequency of n digits from a sequence of digits.
Plots the two - digit frequency spectrum of a frequency spectrum. The frequency spectrum is plotted
Plots a frequency spectrum of one digit frequency spectrum. The frequency spectrum is plotted as a
debugx prints expr in the current frame with the name of the function and the value of
str_ is a string that can be used as a query parameter for a URL. It
Returns True if prefix is a private part of base.
str_ - > str_ - > str_ - > str_ - > str_
str_ Create a temporary script and run it. If pm is True run the script in
str - Prints a debug script in a module. name - The name of the script
Returns a dict of all hashes in the hashmap with the contents of the given hashroot
Remove all files with the same hash from the cache and store the result in the cache.
str_ Returns a list of all keys in the directory. If no globpat is specified
bool_ True if the record is allowed to be sent to the server. False otherwise.
str_ Format an error and add it to the test s captured logging.
Embed an interactive shell into the current shell.
str_ Get new csv writers.
Prepare the locale directories for the given languages and return a list of strings.
Write po entries to po_files for each language. If msgstrs is a string it
_write_header - Write header to PO file.
Subscribes to a user.
Initialize the command line parser and return the options and args.
Import a python module and run it with the given arguments. If the module is not found
run_python_file runs a python file with the given arguments. If the filename ends
make_code_from_py makes a compiled code from a Python source file.
make_code_from_pyc makes a Python code object from a Python code file
Returns an HTML table with the items in item_matrix as rows and columns as columns.
str _current - Current position of the slider. value - Current position of the slider.
Cancels the completion of the current tab.
Select the index of a given row and column in the array.
Update the sliding interval and fill the console buffer with the list of justified items.
str_ Returns a dictionary of word frequencies for the given text. If is_filename is
prints the n most frequent words in a word frequency dictionary.
Returns a string representation of the XML document.
Write the document to a file. The file will be created with the contents of the document
str - Validate a PIN string.
Send a shared pin to a list of topics.
Delete a shared pin. The pin must already exist. If the pin does not exist it
Send a pin to a user.
Delete a pin from a user s pin list.
Subscribe to a topic.
Get a list of all subscriptions for a given user_token.
Start a new progress bar.
str_ Start a new task with the given total number of tasks and then finish the task
A context manager for a subtask. This is a context manager that can be used to
Update the progress of the progress bar with the given number of units and optionally a message.
Create a new progress monitor and register it as a sub - monitor.
Update the progress bar to the total number of work items done. If no message is provided
Move the build directory to the correct location.
str_ Loads a list of pyconfig files into a config object.
str_ Loads the config file and converts it to a dictionary and returns it.
_load_flag - Load config from a dict or config object. cfg can be a
str_ - > list of str - > list of unicode - > list of str -
str_ Loads the configuration from the command line.
Convert parsed_data to config and merge it with self. config and self. extra_
str_ Find a module by name. If name is none return none. If path is
on_stop - Add a function to be called when a stop signal is received.
Notify that the start of the loop has been reached. The data is stored in the start
notify_stop - Notify all stop callbacks that the data is about to be sent to the
Interrupts the process then kills it after delay seconds.
Find the command line arguments for the current program.
str_ Start the mpilauncher with the given number of times.
Send a local file to a remote server using scp.
Fetch a file from a remote server and copy it to a local location.
Count the number of engines in the database.
Start a number of launchers. The number of launchers can be specified as a tuple
Start a job with the given number of jobs. Returns the job_id of the job
Return a dictionary with the default values for the context.
Parse the output of the launcher and return the job_id.
str_ Write a batch script to the batch_template_file and the batch_file
str Start the batch script and wait for it to finish and return the job_id.
Create a context menu for the given cursor position.
str _append_jpg - append a jpg to the list of jpg files to
str _append_png - Append a png string to the end of the line.
str _append_svg - Append SVG to current prompt.
str_ Add an image to the document and return a QTextimageformat object.
_copy_image - Copy an image to the clipboard.
str_ Get the image for the given name from the current document.
Insert an image into the editor.
_insert_svg inserts a SVG string into the document.
Save an image to a file in a given format.
exit_now_changed event handler. This is called when the exit_now_changed
Initialize the environment variables and install the payload page. This is done by setting the str_
Re - write the input string to the payload manager and write it to the payload manager.
Asks for the user to exit. If the user does not exit the process will be
Set the next input to be sent to the client.
Read configuration from a file and return it as a dict.
Get the value of an option as a list of strings.
Returns a list of line numbers for the given section and option. If the option does not
Set the timid from the given environment variable.
str_ From keyword arguments.
This method reads a config file and parses it into self. config_files and self.
Set an attribute from a config file s section and option.
Set the delimiter to use for the SQL statement.
Split a line of text into a list of strings. If cursor_pos is not None
Returns a list of all the words in the text that are not in the global namespace.
Returns a list of strings that match the given text.
str If new is True set the greedy delimiter. If new is False set the gre
Returns a list of aliases that match the given text. If the text does not start with
Returns a list of matches for the given text. If the given text ends with a string
This function is called when the user presses Ctrl - C or Ctrl - D. It
str _match_one returns True if at least one key in rec matches the tests.
str_ Returns a list of records that match the given check dict.
extracts a subdict from a dict and returns it as a copy of the dict.
Returns True if the prompt is quiet False if it is not quiet.
Write the output of the shell prompt manager to the standard output.
Write format_dict to stdout. If format_dict does not contain the string str_
Log the output to the logger.
Raise an exception if the object is not freezed.
mysql_timestamp_converter converts a timestamp string to a datetime object or None if the string
Add a timeout to the event loop to enter the event loop when the event loop is changed
str Do one iteration of the loop.
Publish a PyIN message to the iopub socket.
Aborts a request by sending it to the client. If the request is aborted it will
Send a clear request to the given stream and idents. The idents is a list
Convert a topic to a byte string.
Send the shutdown message to the iopub socket and flush the shell streams.
This method is called before the context is loaded.
Remove all modules from the stack and add them to sys. modules. This is called after
str_ Returns an absolute path if it is a directory. Otherwise returns none.
Return True if name is a file - like object.
str_ Returns True if obj is a class False if it is a subclass of type.
ispackage - Check if path is a package or not.
Returns a string with the given label padded with zeros if necessary.
str_ Creates a transplant class with the given module and class name.
str - > str - > str - > str - > str - > str - >
str Get the command line for the current process.
str_ Returns a list of open file tuples for the current process.
Returns a list of nt_connection objects for the current process. If kind is not specified
str user_has_group - Check if user has a group.
Resolve a class from a fully qualified class path. The class path can contain a module path
str percent of used and total usage in percent. _round can be a float or a
str_ Login to the GData API.
Get the key from the query string.
str_ Ensure that the temp path exists. If it doesn t it will create it.
str Clears the temporary files.
upload file to gdoc
Synchronize the trans and meta data from the gdocs to the local and po files.
str Downloads the trans and meta. csv files from the gdocs directory.
str_ Upload the po files to the ODS file store in self. temp_path
Generate empty file and upload it to the gdoc.
Create a new Qt console connection to the kernel.
Check if a URL is accessibility or not.
str_ Returns True if the URL has the given contents or False if it doesn t.
Get the response code from the given url.
str Compare the content type of a URL to a given content type.
str_ compare response code of a url to a given response code. Returns True if the
Validate the data for the given source and data. Raises an error if the data is not
Clear the output of the command. If stdout and stderr are specified they will be printed to
Create a list of code units from a list of Morf objects.
Return the flat rootname of the module.
Returns a stringio object for the source of the coverage report. If the file does not
Returns True if the file should be converted to a Python object.
str - > float - > float - > float - > float - > float - >
Get the result or raise an exception if the timeout is reached. If the timeout is reached
wait for all the messages to complete and return the result or exception if there is an error
Get a dictionary of engine ids and their results.
Aborts the batch of messages in this batch. The batch will be aborted if the batch
Returns the elapsed time in seconds since the last submitted message was submitted.
Wait for interactive output to be ready. If timeout is not specified the output will be cleared
Re - publish the display_pub with the given content and eid.
Wait for all outputs to be sent to the iopub. If timeout is greater than
wait for all outstanding messages to be ready or until timeout is reached or timeout is reached.
str_ Returns the absolute path of the given file.
Given a list of patterns return a list of absolute paths to the patterns. If the pattern
Returns the separator of the string s. If the string does not contain a separator os.
Find all python files in a directory and return them as a generator.
str_ Returns the filename with the relative_dir removed if it starts with the relative_
str_ Returns the canonical filename for the given filename. If the filename is already absolute it
Get the data from a zip file.
str Return True if fpath matches any of the directories in self. dirs.
str_ True if fpath matches any of the patterns in self. pats False otherwise.
str - > str - > str - > str - > str - > str - >
The main loop of the QT4 kernel. This is the main loop of the kernel
str_ loop_gtk Starts the gtk embed loop.
Enable a GUI. If the kernel is not already enabled a runtime error will be raised.
goe returns the goe of the number n in the range [ 0 n ).
Calculate the difference between the center eigenvalue and the eigenvalue of the matrix.
str - > np. ndarray of the differences between the ensemble and the center eigenvalue.
Create a new instance of the class and initialize it with the given context and step address.
Load the config file if it exists. If it does not exist it will try to load
Write the file to disk. If the file does not exist it will be created.
str_ Erase all lines and arcs from the file. If use_file is True
str_ Returns a dictionary of line names to line data sorted by line name.
str_ Returns a dictionary of all arc names and their values sorted by their names.
Write the data to a file in pickle format.
str_ Read the data from a file and store it in self. lines and self.
Read the raw data from a pickle file and return it as a Python object.
Read a file and return the lines and arcs as a two - tuple. If the file
Combine all the data files in the data directory into a single data file.
str Add line data to the file.
str Add a list of arc data to the arc data dictionary.
str - > str - > str - > str - > str - > str - >
Returns a summary of the contents of the file. If fullpath is set to True then the
get_pasted_lines is a generator that yields lines until the sentinel is reached
This is the main loop for interacting with the keyboard. This is the main loop that
Replace the line history with a multiline version of source_raw with hlen_before_
raw_input - Prompt user for input and return the input as a unicode string.
str edit_syntax_error - Edit the last syntax error in the syntaxtb.
Ask the user if the user wants to exit. If the user wants to exit asks
Get the URL and revision number from self. url. If self. url is empty return
Create a new frontend master.
Initialize the colors of the widget.
str_ Returns a tuple with the identity url pub_url and location.
rconverter - Convert a numpy array to a numpy. rec. rec. fromarrays.
str_ Set the active color scheme and set the color scheme to the color scheme table.
Toggles the active color scheme in the color scheme table.
str_ Text representation of a structured traceback.
Returns a structured traceback as a list of strings.
Format a list of extracted lines into a list of colors. The list is sorted by filename
Show the exception only message for the given event type and exception value in the output stream.
str_ Set the mode to use. If no mode is given the current mode is set
ensure that mod is a module and that all items in fromlist are present in buf.
add a line to the code. indent_amount is the amount of indentation before the line
str_ Create a new section and add it to the code. Returns the new section.
get_function - get a function by name from the source code.
expr_code returns the code for the given expression.
str_ Render the template with the given context. If no context is provided the context will
Return value with dot notation. If value is an object it will be converted to a string
Render a template with the given context. If the template is not found an exception is raised
str_ Default formatter for all formats.
str_ Create a new printer for a given type and return the old one.
Called when the precision of a float value has been changed.
str_ Returns a list of all user - defined config files.
Configure the logging system. This method is called from the command line interface to configure the logging
Configure the working directory and test names to be run from a list of paths.
page_dumb prints a string strng at the end of screen_lines lines.
Page the contents of a file. If the file does not exist it will be created.
Returns the pager command to use. If no pager command is specified the default is returned.
Get the start string for a pager. If the pager is not one of the pager s
snip_print prints a string to the screen and returns the number of characters snip
Print basic unicode string.
Convert a LaTeX object to a PNG object.
Convert a LaTeX string to a PNG string.
Returns True if the object can be printed in LaTeX.
Returns a string representation of a LaTeX object or None if the object is not latex
add_options adds the options to the given parser. If no environment is given the environment
Validate that a list of strings is a list of strings and that each item in the list
Validate that all keys and values in a dictionary are strings.
run_loop runs the ioloop in a loop until the ioloop is stopped
Receive a message from the server and call the appropriate handlers.
Completes the given text in the given line and cursor position. If the text is not
Get information about an object.
Send a shutdown message to the server. If restart is set to True the shutdown will be
str_ Flushes the queue until the queue is empty. num_ is the number of
Input a string and send it to the client. The string will be sent to the client
str Start all the channels.
str This method stops all the channels that are running. This method should be called when the
str_ True if any of the channels are running. False otherwise.
Load the connection information from the connection_file property.
Launch a kernel on the local machine.
Shut down the kernel. If the kernel is not running kill it. If restart is
kills the kernel if it is running. If the kernel is not running kills the
Interrupts the kernel.
Send a signal to the kernel. If the kernel doesn t exist raise a runtime error.
Returns a boolean indicating if the connection is still alive. If the connection is not alive returns
str_ Returns the shell channel for this connection.
str_ Returns the sub - channel object for this channel.
str_ Returns the HB channel for this connection. If the connection has not been established
Binds a kernel to the current instance of ipython. parallel. apps. ipengine
str_ Print a debug message if debug level is greater than or equal to the given level
str _get_extension_classes - returns a list of extension classes sorted by priority.
This function is called before a step. It calls the pre_step method of each extension
walks an egg_dir and returns a generator of bdf objects.
Scan a module and return a boolean indicating if the module should be included in the stubs
Launch a new instance of the ipcontroller app.
Save a connection dictionary to a file in the security directory. If the file does not exist
Load config from json file.
Load the secondary configuration from the JSON file if it is not already loaded. If it is
enable autopx on the current shell run_cell and restore the original run_cell
Disable autopx on the current run cell. This is done by setting the run_
pxrun_cell runs the given cell. If the cell is a string it will be
Check if the message is a heartbeat. If it is run the task. If it is
run_task - Run a task with the given message. If the task is not running
Remove a task from the queue.
Patch a property on an object if it doesn t exist.
str - > None - > None - > True - > True - > False - >
Rejects the connection with the given reason. If reason is none the connection will be rejected
Get a proxy agent with the given reactor and context factory.
str form_valid - validates the form and saves the object to the database and returns a
str_ Delete the object and return a redirect to the success_url.
If the user is logged in update the user field of the given instance with the logged in
check if all modules have been compiled and if so reload them. If check_all is
Open a file in the editor. If the file does not exist it will be created.
Get the current text from the clipboard.
str_ Add a function to the chain.
str_ Get the metadata for a given path or module. If the path or module is
str_ Configures the plugin with the given options and conf.
Import an item from a package or module name.
Try to connect to a remote server using a passwordless SSH key. If paramiko is
Try to connect to a passwordless openssh server. Return True if successful False otherwise.
str_ if paramiko is none try to connect to server using passwordless paramiko.
Open a tunnel connection to the given server and connect it to the given address using the given
Open a tunnel to a remote server.
_stop_scheduling_tasks closes the scheduling task socket and logs a warning if there
Unwraps an exception and stores it in the exception s engine_info dict.
Register a new engine in the list of registered engines.
Unregisters an engine from the scheduler. This is called when a message is received from a
Handle an execute reply message.
Flush all notifications from the notification_socket to the session. If there is an exception it
Flushes the results from the session to the client.
flush_control flushes the control message to the socket.
str Flush ignored control replies to the control socket. This is done by reading the control socket
Flushes all iopubs from the socket to the session and updates the metadata.
str This method will spin every interval seconds. If stop_spinning is set it will
str_ Stop the spinning thread.
str spin - Runs all the commands that have been performed on the server. This is
Sends an apply request to the given socket.
Query the hub history from the server.
Query the database and return the results as a list of dictionaries. The keys parameter can be
_opcode_set - returns a set of all of the given opcode names.
str_ Returns a byteparser object for this file.
str - > list of lines matching regexes
Returns the first line of the given line.
Returns a set of the first lines in a list of lines ignoring any lines in ignore.
str_ parse the source file and return a tuple of lines and the list of excluded lines
str_ Returns a list of all arcs in the file sorted by first line.
Returns a list of byteparser objects for each child of this parser.
str - > bytes - > line - > line - > line - > byte - >
str_ Yields all the statements found in the parser s child_parsers.
Return a string representation of the block stack.
Check that all the chunks are within the range num_ and all exits are within the range
str - > list of tuples of line number and exit code.
str_ Splits all child parsers into chunks and returns them as a list.
str_ Returns a list of all the arcs in this parser and all its sub - parsers
Start the coverer. This is the entry point for the start of the coverer.
str_ Prints the coverage report to the given stream. The stream will be closed when
Returns True if the file should be included in the cover or False if it should be excluded
Interprets a distribution name and returns a generator of distribution objects.
Open a URL with an authentication header and return a file - like object that can be used
Get the parent of an object.
Returns the root topic of the engine. If the engine is an integer it will return the
str_ Render a template with the given content and context.
str conf - Configuration string. conf - Configuration string. options - Configuration options. capture -
strerror - test function to format an error and return it as a tuple of the error
Split data by num characters and return a list of strings. num is the number of characters
Convert the nbformat to this nbformat. The nbformat_minor and nbformat_
hex_to_rgb - convert hex color to rgb.
Returns a dictionary of colors for the given stylename. If the stylename is not found
_ Get the font for a given font family. If the font is not available fallback to
Handle the reply to the EXECUTE command.
Handle the history reply from the user.
Handle a pyout message from the user.
Handle the display data message from the client.
Called when the ipythonwidget is started. This method loads the guiref magic file
Execute a file with the given path. The path can be relative to the working directory.
Process an ExecuteError message and append it to self. _append_plain_text.
Process a single execute payload. If a handler is registered it will be called otherwise it will
Set the default style sheet and syntax style.
Edit a file or line in the editor. If no editor is specified the file will be
Make a prompt for the user to enter a given number.
Make a continuation prompt from the beginning of the prompt and the end of the prompt.
str This method is called when the style sheet of the widget has been changed.
str _syntax_style_changed This is called when the syntax style of the editor has
_transform_data takes a dict and transforms it into a dict if it is a dict
str - Returns information about the virtual memory in bytes.
str - > tuple of user nice system idle and irq times.
Get the UIDs of the processes in the system.
Returns a list of gids for the current process. This is a list of gids
_psutil_bsd. get_process_threads
str - Returns a list of open file descriptors for the current process.
Returns the commit hash of the given pkg_path or None if there is no commit hash
Returns a dictionary of information about the given package.
Return the number of CPUs on Mac OS X.
Returns the number of CPU cores on the current system.
Return the next set of results. If there are no results return none. If there are
fetch a single row from the result set return None if there are no more rows.
str fetch many rows from the result set and return them as a list. If size is
fetch all rows from the result set and return them as a list.
str_ Connects to a peer tree.
Reads a notebook from a JSON string and returns it as a Python object.
Read a Python string and return a Jupyter Notebook object.
Read data from a string in JSON or Python format.
Writes the nb to a file in the specified format.
Write nb to fp in the format specified by format. Returns the number of bytes written.
converts nb files to metadata and writes them to a file in the same directory as nb
str_ Load a value from a dictionary.
str_ Returns True if the given name matches any of the include and exclude patterns.
Returns True if the given class is a subclass of the testcase and False if it is
Returns True if the given directory should be included in the result. If the directory is a
Returns True if the file should be included in pysrc or False if it should be ignored
Returns True if the function should be included in the result. If the function does not have
Returns True if the given method should be called. If the method does not have an attribute
Returns True if the module should be included in the list. If the module does not have
str_ Returns a list of lines from a file.
List all lines in a pydb file. This command is used to list all lines in
prints a list of lines from a file in a list of lines.
\ x1b [ 1mNAME \ x1b [ 0m pdef -
Returns the conversion factor between from_symbol and to_symbol at the given date.
Convert a currency value from one currency to another.
Computes the return value for a given date range. The return value is the percentage of the
Returns the encoding of the given stream. If the stream does not have an encoding attribute return
Returns the default encoding of the current process.
str Write the connection file to the security directory.
init_heartbeat initializes the heartbeat with the given ip and port and starts the heartbeat thread.
Initializes the session with the given config. This is done by setting the session. session attribute
init_io initializes sys. stdout sys. stderr and sys. displayhook.
str_ import the kernel_class and initialize it with the given config and ports.
html_to_text - convert html content to text.
str_ markdown - > text
Convert a domain name into a fully qualified domain name.
Add nose - exclude options to the given parser.
Configure the noseexclude plugin.
bool True if dirname is in self. exclude_dirs False otherwise.
Returns True if the extension links to a dynamic version of the given extension False otherwise.
Call each function in the list and return the result.
Call each function in the list in reverse order. Returns the result of the first function call
Append a function to the end of the list.
Insert a function at the given index. The function will be called with the given arguments.
Format the usage message.
Write the current process id to a file in the profile_dir. pid_dir.
Remove the pid file from the profile_dir. pid_dir if it exists.
Get the PID from a file in the profile_dir. pid_dir.
Construct a magic argument parser from a magic function.
Return the real name of a magic function.
str_ Highlights the current block of text.
rehighlightblock re - highlights the given block.
Set the format for the given range of text. The start position is relative to the current
Copy the text from the cursor to the clipboard.
Execute a command from the shell channel.
str This method is called when the prompt is finished processing. It resets the input splitter and
_tab_pressed - Check if tab is pressed.
str _context_menu_make - Override to add copy raw actions to the context menu
Filter console keypress events.
Insert a continuation prompt at the current cursor position.
Handle a complete reply.
Handle the reply to the execute request.
Handle kernel die.
Handle a reply to an object info request.
Handle pyout messages. This is called when a message is received from the user.
Handle a stream message.
Handle a shutdown reply.
Execute a file in the context of the current context.
Interrupts the kernel. If the kernel manager has no kernel the kernel will be interrupt
Reset the interpreter to the beginning of a new request. If clear is set to True the
Prompt the user to restart the kernel. If the user asks the user to confirm the
Request a calltip for the current cursor position. Returns True if the request was successful.
Completes the current request. This is called when the user presses the enter key.
Process an execute error message. If the message contains a traceback the traceback is appended to the
Process the execute_ok message. If any of the payload is invalid print a warning.
Called when the document contents of the editor changes. This function is called when the cursor is
Add a plugin to the list of plugins. If the plugin has a method with the same
Chain a list of arguments to the method and call all the plugins in the order they were
str_ Generate a list of results from all plugins in the order they were registered.
str_ Runs all plugins in the order they were registered. Returns the result of the
This method is called to configure the plugin with the given options and configuration. It is called
loadplugins - load plugins from the entry_points and add them to the plugin manager.
str_ Loads all builtin plugins into the plugin manager.
Convert a LaTeX string to a PNG string.
latex_to_html - Convert a LaTeX string to an HTML string.
check_if_exists - Check if a package already exists in pkg_resources. If
Returns a dictionary with the attributes as keys and the value as the value. If attrs is
Returns the name of the process.
Get the percentage of CPU running on the system. If interval is not specified the current CPU
Returns the percent of memory used by the system.
get_memory_maps - returns a list of memory maps that can be used by the
bool - True if the process is running. False otherwise.
Suspends the current process. If the process is not running raises nosuchprocess.
Resumes the process. If the process is not running this will raise a nosuchprocess
Kills the process. If the process is not running raises nosuchprocess. If the
Waits for the process to finish or until the timeout is reached or the timeout is reached.
str _wire_kernel - Wires the gtk_main and gtk_main_quit
Returns True if the given identifier is shadowed in the user namespace or in the global namespace
str Register a new transformer.
str - Unregisters a transformer.
str_ Register a checker to be called when a new checker is added to the list of
str_ Unregisters a checker.
str Register a handler for the given name and list of esc_strings.
str_ Unregisters a handler for the given esc_strings. If the esc_strings
Given a line_info return a pre - filtered version of the line_info.
Find a handler for the given line_info. If no handler is found None is returned
str_ Transform a line according to the registered transformers.
Returns a prefiltered version of the given line. If continue_prompt is set to True
prefilter_lines returns a string with the prefiltered lines. If the number of
Check if the given line_info is an ipyautocall. If it is
Check if the line is a multi - line special string and if so return a prefilter
Check if the line is a prefilter or not. If it is a prefilter return
Check if the given line_info is a pre - filter handler. If it is return
Handle a line_info and return the line as a string. If autoindent is enabled
Transform the ifun and the rest of the line into a string that can be passed to
Handle a single line of text. If the line starts with an escape sequence then escape the
Handle a single line from the command line.
Handle a single line of text.
Handle a single line of input and return the result. If the line is not a command
hides the calltip widget when the user presses enter or leave the calltip.
Called when the user enters a calltip event. This method stops the hide timer.
str_ This method is called when the user clicks on the Panel. It draws the Panel
show_call_info - Show the call info in the tip of the function.
Called when the cursor position has changed. Hides the widget if the cursor is at the
str_ Returns a canonicalized path given the current working directory and the given path.
str - > list of masked values.
bool_ True if we are running in a virtualenv that does not have a global variable.
Calculates the frequency of each word in a list of filenames.
Returns a list of the default aliases for the current platform.
Define an alias with the given name and command. If the alias already exists it will be
Define an alias for a command.
Validates that the given alias is valid and returns the number of arguments to the command.
str_ - The alias to call. alias - The alias to call. rest - The
Transform an alias into a command string.
Expands a line of text into a list of aliases. The first line is the name
Parse the auto - help directive and return a list of nodes. Node objects.
Resets the SVR color to none and sets the foreground and background colors to none.
str - > qtgui. qcolor - > None - > none - > num_
str_ Returns a QTextCharformat object that can be used to format the text.
Generate a new token with the given secret age and optional payload. If no payload is provided
Remove expired JWTs that are older than self. age seconds since the last time it was
str - > bool - > bool - > bool - > bool - > bool - >
Check if the given token is valid. If it is raise a jwtfailed exception.
str - > str - > str - > str - > str - > str - >
Return the size hint for the splitter.
Return True if the cursor can be cut.
str Return True if the clipboard can be pasted.
str Clear the input buffer. If keep_input is True the input buffer will be kept
str_ cuts the cursor to the end of the current line. If the cursor is
Get the input buffer from the user.
str _set_input_buffer Set the input buffer to the given string.
_set_font - Sets the font for the tab completion widget and page control.
str_ Prints the control to stdout. If no printer is provided a default printer is
str _prompt_to_top - Move the cursor to the top of the prompt list
Reset the font to the current font family and size.
_append_custom - Append a custom input to the text cursor. Inserts the input
str _append_html - Append HTML to the prompt.
str _append_html_fetching_plain_text - Append HTML fetching plain text
str _append_plain_text - Append plain text to the prompt.
Clear the temporary buffer.
str completion with the given list of items.
Fills the temporary buffer with the given text. If html is set to True the text will
Returns a boolean indicating whether the control key is down or not depending on the operating system.
Create a QPlainTextEdit or QPlainTextEdit depending on the current kind.
Create a QTextEdit for the current page. If a custom_page_control is
Filter page keypress events.
Return the plain text of the given block.
Get the cursor at the end of the text.
Returns the column number of the cursor in the input buffer or - 1 if there is no
Returns the line of the input buffer cursor. If there is no input buffer cursor returns none
Get the current prompt cursor. The cursor is set to the current position of the prompt.
Get the text cursor for the selection between start and end.
str_ Inserts the continuation prompt into the cursor.
Insert the html into the cursor.
str_ Inserting HTML fetching plain text.
Insert plain text into the cursor.
Keep the cursor in the buffer if the buffer is empty. Return True if the cursor was
_keyboard_quit is called when the user presses the keyboard. This is called when
Page the given text into the control widget. If the text is not a page it will
Called when the prompt is opened. This is called when the user presses enter.
_readline - Read a line of text from the console. If callback is not None
str _continuation_prompt str _continuation_prompt_html
str_ Set the cursor to the top of the scroll bar.
str_ Adjusts the vertical scrollbar to match the number of lines in the current document.
The main entry point for the command - line tool.
Copy a config file to the project location. If the file already exists it will be overwritten
Create a profile directory from a given path and name. If the path is not a directory
Find a profile directory by its name in the given ipython_dir.
Returns the contents of a file as a string. The file is opened with open and closed
Create a temporary file and write src to it and return the name of the file and the
str_ Close the output stream and close the underlying file.
str_ Write data to the file and write to the output stream.
str_ Add a new heart handler to be called when a new heart is added
str_ Add a heart failure handler to be called when a heart fails.
Handle a PING message. If the message is the same as the last_pong
str_ batch_size - batch_size of the input sequence. mod - batch size
Returns the path and filename from the given pathfile. If the given pathfile does not
prints the total elapsed average and estimated time for a given number of loops and the number
Returns a tuple with the time unit of elapsed average and est_end as a tuple.
extracts a wininst config file from a given dist_filename. Returns none if the
str_ Uncaches the zip directory cache for the given path.
This function takes an argument of type str and returns a string that can be used as a
Check if there are any conflicts with the given distribution. If there are any return the distribution
_set_fetcher_options sets the fetch options in the config file.
Create the home directory if it doesn t already exist.
Check if the file name is a valid archive file.
Creates a new heading cell.
str_ Create a new metadata object from the given parameters.
str_ Create a new notebooknode with a name email affiliation and url.
str_ Check if path is a directory and is writable.
unquote a filename to be safe for use with os. path. basename.
Get the full path to a Python file.
Returns the absolute path to the XDG directory if it exists or None if it doesn
Get the path to the IPython project directory.
str_ Returns the path to the ipython package.
Returns the path to the given module in the IPython package.
str_ Returns the number of times the target is newer than any of the dependencies.
Returns the md5 hash of the file at the given path.
Check if there is an old config in ipython_dir. If so remove it.
update_suggestions_dictionary - Update the suggestions dictionary for the given object.
get suggestions with a given size for a given object
get_suggestions - Get the suggestions for a given object.
Return the relative path to the current working directory.
Returns a list of files that match the given pattern in this directory.
Read and return the md5 hash of the given file. If the file does not exist
str_ Creates a new profile file and starts the hotshot process. If the profile file
str_ Prints the profiling results to the given stream. If restrict is set to True
str_ Finalizes the object.
disable wx event loop
disable_qt4 disables the event loop for QT4 and clears the inputhook.
str_ enable the GTK interactive mode and enable the GUI mode if it is available.
str_ Enable the Tk application. If none is passed it will create a new tk
str_ enable pyglet.
str_ wave_saver u x y t - number of seconds t - number of
init_db initializes the database for the hist_file.
Run a SQL query and return the result as a list of tuples. If output is True
Get information about a given session. If session is greater than or equal to num_ get
Get the last n rows from the database. If include_latest is True return the latest
get_range_by_str - Get a range from a string.
Get the full path to the hist file.
Create a new session with the given name and the current session number in the database.
Reset the history. If new_session is set to True the history will end a new
Get a range session from the input_hist_raw or self. input_hist_
str - > None - > None - > None - > None - > None - >
writeout_cache writes the input and output cache to the database. If no connection is
str stop_now bool stop_loop bool stop_loop_now bool stop_loop
Get the number of CPUs in the system. This is the number of CPUs in
Get the system per cpu times as a list of numpy. cputimes.
Returns a list of tuples describing the partitions on the system. If all is set to True
Get a list of all the process IDs in the system.
Return a nice string representation of a pair.
Format a list of statements and lines into a human - readable string.
Returns a string representation of the stack of the calling function. This is useful for debugging.
join a list of regexes into a single string. If the list is shorter than num_
str_ Remove a file from the filesystem and raise an exception if it is not eno
Update the md5 hash with the contents of the given object.
Update the profiles with the data from the current IPython and CWDU.
Stop a running cluster in a given profile. If the cluster is running it will be stopped
Tries to find a command in the current working directory. Returns None if the command is not
Print stdout and stderr to standard out and wait for it to finish.
find the code units based on the given Morfs. If no Morfs is
Run the given report_fn for each code unit in the Morfs.
str_ Set the trace of the current frame of the Python interpreter.
init_extensions - Loads all the extensions in self. extensions and adds them to self
str init_code - Start up the shell and run the command line code and module.
Run the exec_lines in the shell. If there is an error print the error and
_run_startup_files - Runs all the startup files in the profile_dir
Run all of the files specified in self. exec_files.
_run_cmd_line_code - Run the code_to_run in the
str_ Runs the module specified in self. module_to_run.
str_ Returns the full path to a file in the static_path. If the file
str_ Returns the contents of the data file at the given fname.
Escapes special characters in a string to make it safe to use in a template. This is
str_ Runs the coverage report. Returns the number of pc covered in the report.
str This method copies the static report files into the directory specified by self. static_files
Write html to file.
str_ Returns the hash of the source code and the coverage object.
Generate the index. html file and write it to self. directory.
Read the status file from the given directory. If the status file does not exist or the
Write the coverage information to a file.
sort_compare - Sorts two lists of strings and returns True if they are equal.
str_ - > str_ - > str_ - > str_ - > str_
Chops a string into chunks of size size.
Read the contents of the manifest file into a list of ignore and ignore_regexps.
Convert a glob pattern to a regular expression.
str_ Returns True if filename matches any of the patterns.
Get a list of all versioned files in the current working directory.
Creates a kernel manager and starts it. Returns the identifier of the new kernel.
Shuts down the kernel with the given id.
kill kernel by id
Get the kernel with the given ID.
Returns a dict of the port numbers of a kernel.
str - Returns the notebook id for the given kernel_id or None if there is no
Start a kernel for the given notebook_id. If the kernel is already running it will
Shuts down a kernel and deletes all mappings for that kernel.
Interrupts the kernel identified by kernel_id.
restart a kernel and return the new kernel_id.
str Create an iopub stream for the given kernel.
str Create a shell stream for a kernel.
str Create a new HB stream for the given kernel_id.
Reset all onetime properties to their default values.
Export html to a file in XHTML format. If image_tag is None the default image
Fix empty p at the end of the html string.
get_unique_or_none - Get a unique object from the database or return none
Given a list of tokenized terms and a list of search_fields return a query that includes
get_text_query - Get a text query from a query string and a list of
get a date_greater_query for a given number of days and date_field
get date_less_query returns a date_field with a date_field less than
get_null_or_blank_query get_null_or_blank_query
Adds the case insensitive fields to the given fields_dict.
str_ str_ str_ str_ str_ str_ str_ str_ str_
Returns True if any attribute matches the given method. If no attribute matches none is returned.
bool - True if method is a method of the correct class. False - False if method
Rotate the ring.
Returns the websocket URL for the current request.
Reserialize a list of messages into a JSON - serializable reply.
Injects a cookie message into the request.
str _really_start_hb Starts the periodic callback if it is not already
str_ Stop the heartbeat loop.
open the file and close it if it is already open. If src is a string it
str_ Return the index of the block. If index is none return the block_index
str seeks to the given block index. If index is out of range seeks to
str - > None - > None - > None - > None - > None - >
Show the block at the specified index in the Marquee. If no index is
Print all the source blocks in the marquee to stdout. If silent is True print
str_ Runs a function in a thread and returns the results.
Return a tuple of lines and index of the traceback s source code in the given context.
Returns a list of lines that can be inspected from the given position in the given list
Return a countdown tag with the given name description id start and granularity. If progress bar
This function cleans up the controller and all of the engines. This is done by sending
str_ save_ids save_msg_ids save_msg_ids save_msg
str_ Syncs the results of a function with the current client and the outstanding ones.
Returns the result of the function f after spinning. If the function returns a string it
get_msgs - Get a list of all the messages in the message queue.
Get a message from the queue. If the queue is empty return None. If the queue
Parse a URL into a dictionary.
Get a list of the root modules in the sys. path.
Returns a list of module names for the given line. If the line is a module name
Completer for magic - run commands.
_quoteattr - Quotes a string for use in an XML attribute.
Configure the plugin with the given options and config. This method is called when the plugin is
Write a report to the error report file and write it to the output stream.
Add an error to the list of errors for a given test. If the test is a
Add a failure to the report.
Add a successful test to the stats.
Returns a random number between a and b where a and b are the same length as the
return a random index in the list of loads weighted by the number of samples in the list
str Register an engine in the graph. This is called when a new engine is created.
str_ Unregisters an engine from the queue.
Handle the stranded tasks in the pending queue.
Audits task timeouts for depending jobs. This is done by checking for unreachable jobs.
Fail unreachable job.
save_unmet save the unmet job to the dependent graph
Submits a task to the engine. If no indices are given all tasks are submitted.
dispatch_result dispatches a result message to the appropriate target based on the message s header
Handle the result of a command.
Handle an unmet dependency.
update_graph - Update the graph of dependent jobs. Dep_id is the id of
Print the current state of the log file.
str_ line_ori str_log line_mod str_log line_or
Write data to the log. If the log is active and the log_output flag is
Close the log file and set the active flag to False. If no log file is open
str_ new_worksheet - Create a new Worksheet object with the given name and
Add a string to the command chain.
str - > str - > str - > str - > str - > str - >
Returns a generator for the given key. If the key does not exist it returns None.
Yields the flat matches for the given key. The flat matches are returned in the order
Create a new directory if it doesn t already exist.
Returns a list of all notebooks in the notebook directory. Notebooks are sorted by name
new_notebook_id creates a new notebook id and adds it to the mapping and returns
Delete a notebook id from the mapping and rev_mapping.
str Returns True if the notebook with the given id exists. If the notebook does not exist
find_path finds the path to the notebook with the given notebook_id.
Get the path to a notebook file by its name.
Get a notebook with the given id. Returns the last modified name and the notebook data.
Returns a notebook object with the given id. If the notebook does not exist an error is
Save a new notebook to the notebook store. Returns the notebook id. Raises web. http
Save a notebook to the notebook store.
Save a notebook object to the notebook store.
Delete the notebook with the given id. Raises web. httperror if the notebook does not
Creates a new notebook and writes it to the current notebook file. Returns the notebook id.
Copy a notebook to the notebook directory.
Takes a list of tokens and returns a generator of the tokens that are physically valid.
str_ Loads the default config file. If the config file is not found the default
str_ Default interactiveshell application classes.
Parse the command line and return a dictionary with the parsed arguments. If argv is None the
str_ Initialize the terminal ipython app.
str_ Initialize the terminal interactiveshell instance and add this configurables to
str_ This method is called to initialize the banner. This method is called when the user
Return a string representation of the given object.
Parse the name of a notifier into a list of strings. If the name is a string
class_traits - returns a dict of class traits based on the given metadata.
Get the metadata for a given trait name and key.
Validate that value is a subclass of self. klass. If value is not a subclass of
Return the default value of the field.
str_ Check if the result is a subset of the completed set or if the result is
str - True if the task is unreachable.
str_ Returns a dictionary with all dependencies as keys and all dependencies as values.
Returns the depth of the node n in the tree.
prints a bintree
str_ Disambiguates the given URL from the given location. If the location is not
Returns the result of applying the function f to each element of value. If flat is True
Validate targets. If targets is None return the list of ids. If targets is an integer
dispatch_monitor_traffic dispatches the traffic of a monitor switch to the appropriate handler.
Dispatch a query message to the appropriate handler.
Handle a new heart. If the heart is not in the list of incoming he
handle_heart_failure - Handle a heart failure.
Save a task request to the database.
Save an iopub message to the database.
This method is called when a client sends a connection request. It is called by the client
Unregisters an engine from the queue.
finish_registration is called when a new registration is received from the server.
Send a shutdown request to the server.
Purges the results of a query from the database. This is called when a query is
Extract the content and buffers from a record.
get the history of a message from the database and send it to the client.
db_query sends a query to the database and returns a list of records that match the
Temporarily change the current working directory to newdir and then restore the previous working directory
Decode a completed command s stdout and stderr into a parsedcompletedcommand object.
Run a command under the current working directory. If catched is True the command will be
Dispatches a message to the appropriate handler.
Returns True if the message is from the current session.
str Report a Morfologic Morfologic Morfologic
Returns the installed version of the given module name or None if the module is not installed.
Squashes all unicode values in an object and converts them to str.
Extract a message header from a message or header dict. If the message is not a message
Check that the packers are correct. If they are not raise an exception. If they
Creates a message of the given type with the given content parent and subheader.
Signs a list of messages with the current auth key. If no auth key is set
Sends a list of messages to the given stream with the given flags.
recv a message from a socket and return a tuple containing the message idents and the message
Save a SVG string to a file.
Convert a SVG string to a QClipboard and save it to the QApplication clipboard.
Convert a SVG string to a QImage.
object_info - Returns a dictionary of information about the object. This is useful for debugging
str_ Get the docstring of an object. If the object has no docstring None is returned
Returns the source code of an object or None if the object is not a Python object.
Get the signature of a function or method. The signature is determined by inspect. getargspec
try to find the absolute file name of an object or a wrapped object. If the object
find_source_lines finds the source line number of an object or a wrapped object.
_getdef returns a string representation of the object s method signature.
Return a string with the head of the color table with the given number of colors.
noinfo prints the message and oname if oname is None print the oname
pdef prints the function definition of an object. If the object is a class print the
psource prints the source of an object to the screen. If the object is not a
pfile prints the source code of an object to the screen. If the object is not
Format a list of fields into a string with a title and content. If the number of
Search for namespaces matching a pattern in a namespace table. If no namespaces are found an error
str_ returns the current reactor and a thread that can be run in a separate thread.
str_ Returns a string representation of the document. If indent is set to True the string
str - > str
Load all modules in a set of packages and return a list of module names.
invert the keys of the dictionary to the values of the keys in the dictionary.
str_ Converts an object to a primitive type.
Returns a list of figure objects for the given fig_nums. If no fig_nums
str_ - Prints a figure to the screen. fmt - Format string to be used
Select the format to use for the figure output.
Find the GUI and backend to use for the plotted data. If no backend is specified
activate matplotlib backend
Configure inline support for the given backend.
str_ Start the debugger.
Stop the current thread. If the current thread is the same as the current thread it will
str_ Start a new tracer and return a function that will be called when the tracer is
str_ Installation trace
Start the collector. This method will be called when the collector is started. This method will
str_ Stop the collector and remove it from the list of collected tracers.
Pause all the running tracers and print the current stats.
str_ Resumes all tracers and sets the current installation trace.
str_ Returns the line data as a dictionary. If this is a branch the data is
collect_exceptions - Collect remote errors and raise them as a compositeerror. If there are
Render the traceback as a list of lines. If excid is None the traceback will be
Process the startup of the coverage process.
Returns the canonical directory of a MARC file.
Returns the source code for the given filename.
should_trace_with_reason returns True if the given filename and frame should be trace
Check if the trace should be written to the debug log.
Add a warning message to the list of warnings to print to stderr.
check for packages in source_pkgs and add them to self. source and self. source
Start the collector. This method should be called at the beginning of the run. It will
str_ This method is called when the process exits. This method is called when the process
str_ to be used as a regular expression to exclude a value from a list of values
Save the harvest data to disk. If the data_suffix is bool the harvest
Combine all the files in the config into a single file. This is done by combining the
_harvest_data - Harvest the data from the collector and store it in
Returns the analysis of the Morf object as a tuple of f s m and mf
Analyzes the given iterator and returns an analysis object. If it is a codeunit
str Report the results of the harvest and return a list of strings representing the results.
str_ Runs the harvest and annotatereporters and reports the results.
Generate an XML report of the results of the harvest. If no morfs is provided
Reloads the data from the file or url.
Find the path to the given command.
Run a command in a child process and wait for it to finish.
Forward events from a file descriptor to a pull socket. The return value is a pull socket
Run the loop. This is the main function that will be called when the loop is started
Find a launcher class in the given class name. If kind is specified it will be
Check if the process is running. If it is it will kill it. If it is
Build a launcher from the given class name and kind. If kind is none the launcher will
Start the event loop. This is called by the event loop when the event loop is started
Start the main loop. If the process is already running exit with code already_started.
Returns a wx. pysimpleapp instance if available otherwise creates a new wx. pysimple
is_event_loop_running_wx returns True if the event loop is running.
str_ Start the event loop for the wx application. If the event loop is not running
Get a QApplication instance for QT4. If the QApplication instance is not yet
is_event_loop_running_qt4 returns True if the event loop is running
Starts the event loop. If the event loop is not running it starts the event loop.
blank_canvas - Create a new blank canvas with the given width and height.
Draw a cross - section of the image at a given position with a given color.
Draw a line from pos1 to pos2 with the given color.
Convert a grayscale image to an annotated image.
str_ uuid - > uuid1 uuid4 uuid1 uuid2 uuid3 uuid4 uuid
Get a unique key from a get dict.
Get the domain name from a URL.
Get url arguments as a dictionary.