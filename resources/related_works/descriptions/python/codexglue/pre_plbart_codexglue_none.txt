Convert sina_xml to url list
Download dailymotion data.
Download Sa data.
Pretty - print text with colors.
Print text to stderr with colors.
Prints a message and exits with an optional exit code.
Prints a message and exits with an optional exit code.
Detects os and returns it as a string.
Gets the information of a ckplayer by parsing its XML.
Get the Mgtv real url for a given URL.
legitimize the given string.
Download the content of a URL to the platform.
Match all instances of pattern in text.
Attempt to parse a query parameter from a URL. If the parameter cannot be parsed return none
Parses a host into a tuple of hostname and port.
Gets the first part of the title from the topic part of the json content.
Downloads data by course - specific data.
Downloads data from a course s topic part.
Returns True if task_instance is in queued_tasks or if it is not in running
Return the event buffer for the specified dag_ids.
Returns a connection to the device.
Get AWS credentials.
Returns the value of a field if it exists otherwise the default.
Copies the sql to the specified file. If the file does not exist it is
Dump all rows of a table to a temporary file.
Upload this file to Google Cloud Storage.
Shows the current state of a task.
Returns a boto3 client.
Get a single instance.
Create a new instance and wait for operation to complete.
Delete instance and wait for operation to complete.
Create a new database for an instance.
Delete a database for an instance.
Starts the SQL proxy process.
Stop the SQL proxy process.
Returns the version of the SQL proxy if needed. Otherwise returns none.
Creates a new connection to the database.
Retrieves the connection from the database if it exists.
Delete a connection from the db
Gets the Cloudsqlproxy runner object.
Returns the database hook to use.
Cleans up the database hook.
Reserve a free TCP port.
Normalize the string representation of amlengine job id.
Get the error code from the given exception.
Delete all dag runs in the database.
Delete all the task instances associated with this task instance
Sets thepaused state of a dag model to is_paused.
Prints some statistics about the task instance.
Checks the status of the job.
Create the given path in the given mode if it doesn t already exist.
Convert string s to float if possible otherwise return s
Convert a value to a timezone aware version of it.
Make the value naive.
Returns a datetime. datetime instance.
Returns a druid broker connection
Gets a requests session.
Run the request and check the status of the request.
Checks the response and raises an exception if it fails.
Run a prepped request and check the response.
Create a session and commit the commit if an exception is raised.
Drop all data in the database.
Returns the pretty message of an exception.
Returns a list of records from the database.
Returns a pandas dataframe with the data from the database.
Run the query and return the result.
Insert rows into a table.
Get the cosmos client
Determine if a collection already exists
Creates a collection of the specified name in the specified database. If collection_name is none
Determine if the database already exists.
Creates a database with the specified name. If database_name is none then raisebadbad
Delete a database. If database_name is none raise an badrequest.
Deletes a collection in the specified database.
Inserts a list of documents
Deletes a document in the specified database or collection. document_id can be either a
Get a document by its document id
Returns a list of documents in the specified collection.
Returns the function object associated with the given name.
Creates a new function at the specified location with the specified body.
Update function in KE - chain.
Uploads the function zip to the specified location.
Deletes the function with the specified name.
Get the statuses of the dependencies of this ti in the given session.
Returns True if this node is in the context of this node.
Gets the reason for the failure of the dependency.
Parses the s3 config file.
Gets all available credentials for the given session.
Creates a connection to the database.
Flush the buffer to the logger.
Checks if the file is in a zip archive and corrects it if it is.
Constructs a task instance for this task instance.
Starts the workflow.
Terminate the Dagparsingsignal process.
Exits the process if the process exits successfully.
Starts the workflow.
Starts the dag parsing process in asynchronous mode.
Starts the dag parsing process in sync mode.
refresh self. _dag_directory self. _file_paths self. _file_
Print the stats to the console if it s time to do so.
Clears the non exist import errors.
Log the processing statistics of a file.
Sets the list of new file paths to use for processing
Waits until all the files have been finished running.
Kill the processes that are currently running.
Get SSH connection to remote host.
Creates a new transfer job.
Returns the status of a transfer job.
Returns a list of transfer jobs matching the filter
Updates an existing transfer job.
Cancel a transfer operation.
Pauses a transfer operation.
Resumes a transfer operation.
Wait until a transfer job is done and return its time to sleep.
Finds for a task instance in the database.
Returns the number of open slots in the pool
Runs a command and returns its output.
Allocate ids for a given set of keys.
Begins a transaction on the project. Returns the transaction ID.
Commits the transaction.
lookup keys by project id
Rollback the transaction.
Runs the query and returns the response.
Get an operation from the project.
Delete an operation in the project.
poll an operation until it is done
Returns the hostname of the given callable.
Gets the connection to the API server.
Get a list of template fields from a module.
Link to a template field.
Remove the engine global session and if engine is None remove the engine global session.
Prepares the classpath for the application.
Check the status of the target task.
Returns the contents of the configuration variable as a string.
Convert an object to a dict.
Yield successive chunks of a given size.
Reduces the given function into num_ chunks.
chain two or more tasks together.
Render the filename template for a log file.
Builds and returns a new HTTP connection to the API server.
Perform a dataproc operation and wait for it to finish.
Coerce string values to their string representation.
Handle a data type operator execution
Runs the command - line interface.
Fetch the state of a celery task.
Returns the number of tasks that can be sent to this process.
Returns the maximum number of tasks that can be fetched per fetch process.
Builds a new HTTP connection.
Gets the job with the given job_id
Wait until a job is done.
Create a new version of a model.
Set the default version of a model.
List versions of a model.
Delete a version of a model.
Create a new model in the specified project.
Get model by its name
Write the given items to the DynamoDB.
Add executors plugins to sys. modules.
Get the default executor.
Gets the executor object given the executor name.
Log segment error and raise an exception.
Returns a connection to the database.
Trigger a dag by its id.
Delete a dag by its id
Gets information about a task.
Get one or more pools.
Create a new pool.
Create or update a container in a container group.
Get the current state of the named instance and its exit code.
Get the messages associated with a named instance.
List the logs of a named container.
Delete a container from a resource group.
Check if a container exists in a resource group.
Constructs a ingest query for the given static path and columns.
Push a message to the Xcom context.
Returns a list of task instances in this task instance.
Gets the task instance for the given task id.
Get the previous dagrun of this task.
Gets the previous scheduled dagrun.
Verifies the integrity of the task instance.
Takes a request and returns the response body and headers.
Converts a Context object to a dictionary ofairflow variables.
Pretty print the payload of a dag_run_obj.
Query the metric for a given query
Get a dag by its dag id
Kill a list of zombies.
Given a dag and a parent dag bag it and all subdags.
Collects a list of DAGs from a given file.
Prints the dagbag statistics in a human - readable format.
Add a number of days to a datetime object
Return a list of files that match the regex
Return True if the result is a file and False otherwise.
Clears the task instances in the given list of tis.
Try number.
Returns the current state of the task instance.
Overrides the default error method to merge the failed state with the passed session.
Fetches the task instance from the database. If lock_for_update is True then
Clears the data associated with this task from the Xcom database.
Return the key used to store the execution date and try number.
Returns True if this task is done.
Returns the next retry datetime for this task.
Returns True if this retry is ready for retry and False otherwise.
Check if the pool is full.
Get the dagrun for this task.
Adds a key - value pair to the X com task.
Initializes the run context.
Close the upload if it exists and delete the local copy if it doesn t.
Builds and returns the connection to the API server.
Start the instance associated with the given resource_id and project_id.
Returns the instance template for the specified instance.
Wait for the operation to complete.
Check to see if the bucket exists.
Create a new bucket in S3.
Check if the bucket_name s prefix is in the list of bucket_name s prefixes
Returns a list of prefixes for the given bucket prefix and delimiter.
Returns a list of keys in the bucket.
Check to see if the given key is in the bucket.
Returns the object identified by the given key. If bucket_name is specified then the bucket
Read the contents of a key.
Checks to see if a bucket_name or delimiter is set for a wildcard key.
Returns the key associated with the bucket_name or wildcard_key if bucket_name is
Query the cube query using the hook.
Convert a user - defined type to a user - defined type.
Get connection to speech API.
Execute the Spark SQL query in the specified context.
Loads entry point plugins.
Check if plugin_obj is a valid plugin.
Marks one or more tasks in the execution date as skipped.
Creates a connection to the adls filesystem service.
Returns the number of files that match the given file path.
Returns a list of files or directories in the specified path.
Execute the query.
Uncompress a file with the specified file extension.
Execute the sql query and return the cursor
Builds the metrics for the given function and namespace.
Creates a cgroup in the tree at the specified path.
Delete a cgroup in the tree at the specified path.
Generic method to handle API calls.
Returns a connection object for the instance.
Make a query to the database and return the query results.
Describe an object
Returns a list of the available fields for the given object
Returns the object from the field list of the object and the field list of the object.
Convert a column to a timestamp.
Get a mongo collection
Check if a mail has an attachment with the given name.
Returns a list of attachments by the given name.
Get the file name and payload
Send a batch of records to a Firehose instance.
Gets the statuses of the dep in the dep_context
Send email using the specified backend.
Send email using SMTP
Convert the value to UTC.
Check if a blob exists.
Checks the number of blobs in a container that match the given prefix.
Create a blob from a string.
Reads the contents of a file - like object.
Delete a file from a container.
Gets the ftp connection.
List the files in the directory specified by path
Store a file in the remote storage
Get the time of a file or directory
Execute the webhook.
Get connection to fileservice service.
Checks if a share is available for the given directory. Returns a boolean indicating whether the
Checks if a file exists on the specified share.
Returns a list of directories and files in the specified share.
Creates a new directory in the specified share.
Creates a new file from the specified file path.
Create a file from a string.
Gets the connection to the HMC.
Download an object from S3
Uploads a file to an object
Check if the given object exists in the bucket.
Check if the object is updated after ts
Delete an object in the bucket.
Get the size of an object in the bucket
Calculates the CRC32 checksum of a blob
Get the MD5 hash of a blob
Check if the secondary training status has changed.
Returns the string message of secondary training status.
Upload a tar and upload it to S3.
Configures the s3 resources based on the given configuration.
Check if the S3 URL is valid.
Returns a boto3 connection to the log service.
Executes the dataflow job.
Run database migrations in offline mode.
Run migrations online.
Delete an instance.
Delete a table.
Update a cluster.
Prepare the CLI command to run the service.
Takes a dict of strings and returns a list of strings.
Returns True if the table exists in the database or False otherwise.
Returns a connection to the Hiveserver2 service.
Get the results of a particular query.
Returns a list of records from the query.
Returns a pandas dataframe with the results from get_results
Gets the productsearchclient.
Gets the endpoint from the http_conn_id and raises an exception if the token
Bind the parameters of an operation to the given operation.
Escape a string.
Helper function to cast string_field to bq_type.
Validate that the value is a string of the expected type.
Returns a BigQueryconnection object for the service and project.
Build the service and return it.
Check if a table exists.
Cancels the running job if no other job is running.
Deletes the specified table from the deletion dataset.
Upsert a table in a dataset.
Get a specific dataset by dataset_id or project_id.
Executes the given operation with the given parameters.
Executes the given operation with the given seq_of_parameters.
Returns the next page of results.
Runs the sql query against postgres and returns the cursor.
Makes all intermediate directories and sets the remote_directory to str_ if remote_directory
Create a subprocess and run it with self. _command.
If the config file is present run it as a user and remove it from the config file
Main function for the command line interface.
Adds the htmlheader to self. htmlheader.
Builds the javascript for the series
Create a new X axis
Create a new y axis
Returns a connection to the sqlite database.
Get the last dagrun in the database.
Sends the message to SharQ hook and logs the result.
Returns a JSON response object.
Open a file with the name of f if it is a zipfile or a file with the
Make a cache key for a given request.
Gets the connection to the viceclient.
Gets the API key from the http_conn_id. Raises an exception if
Gets the HTTP connection to the HTTP server.
Execute the API request and return the response.
Build the payload of the opsgenie.
Execute this alert using an opsgeniealerthook
Gets the client type and returns it.
Starts a query execution. Returns the query execution ID.
Check the status of the query execution.
Checks the status of a query execution id and returns the final state of the query execution
Returns a pysftp. connection to the remote host and port.
Handle rate limit exception.
Get a table from the database
Get the location of a table in a database.
Get cluster status
Delete a cluster
Returns a list of the cluster snapshots in the specified cluster
Restores a cluster from a snapshot
Create a snapshot of a cluster
Execute slack API call
Create a job flow
Filter a list of strings for filesize.
Return a list of extensions that match the ignored_ext.
Execute the query in MongoDB using the provided context
Get a pool by name. Raise an exception if the pool is not found.
Create a pool if it doesn t already exist
Delete a pool by name
Converts a dict to a proto object.
Waits for an operation to complete.
Get an operation for this zone.
Appends a label to the cluster_proto.
Returns the webhook endpoint for the http_conn_id or the http_conn_id
Build the message to send to the bot.
Sends the request to the webhook endpoint.
Encrypts the provided plaintext using the specified key.
Gets the Texttospeech API client.
Close the upload if it exists.
Returns a dictionary of environment variables and their values.
Returns a list of worker secrets.
Returns a string with the number of times the user is allowed to run.
Get the url for the extra links to the given operator
Starts the dagfileprocessor.
Returns True if the task is done False otherwise.
Exits the process if the process is running.
Updates the session with the import errors from the given dagbag.
Gets all the task instances in the given dag and adds them to the queue.
Get the currency maps for a given list of states.
Changes the state of one or more task instances to the given acceptable states.
Enqueues a list of simple_task instances to the scheduler and adds a task instance that
Updates the state of the tasks that failed to be executed.
Process the executor events for the given simple_dag_bag.
Updates the task counters to reflect the new state of the task.
Get the state of the executor and update the database.
Get or create a dagrun for the given run date.
Get the list of task instances associated with a dag run.
Updates the state of all dag runs that are not finished.
Synchronously terminate the task_runner if it is running.
Creates a client for the given project and credentials.
Get instance by instance ID.
Delete an instance.
Deletes a database for an instance.
Check if the mail attachment is present in the mail folder.
Prepares additional parameters for the web detection.
Gets the connection to the database.
Checks if a table exists in the cluster
Checks if a record with the given keys exists in the given table.
Builds the command to track the driver status.
Submits a Spark application to the cluster.
Process a Spark submit log line and update self. _yarn_application_id and
Process the Spark status log and update self. _driver_status.
Get the task runner for the given task job.
Wait until the task has finished.
Execute the mysql query and return the cursor.
Create and configure a CSV file with the given schema.
Writes the local schema file to disk.
Get the column type dict
Map a MySQL type to a string.
return the extra data in a json object
Scale the given time_seconds array to the given unit.
Return the number of days between n and today.
Initializes a role by adding it to the menu if it doesn t already exist
Delete a role from the database
Returns a list of user s roles.
Returns all user s permissions views
Returns True if user has role in role_name_or_list otherwise False.
Returns True if self has permission_name and view_menu_name
Clean permissions from the database.
merge permission with view menu
Update the admin s permissions view menu.
Create a permission VM for all dag VMs in the environment.
Get the fernet from the configuration.
Check if the given string is in the table.
poke the messages from the queue and push them to the xcom_push context.
Returns an HAClient object for the given connection string. If effective_user is not
Get a web hdfs connection
Checks the status of the hdfs path
Returns a pinot_broker_conn
Returns the URI for this connection.
Convert a datetime. date object to a dictionary.
Convert a time object to a dictionary.
Returns a redis connection
Returns a pandas dataframe from the SQL query
Execute the given SQL string or list of SQL strings.
Sets the autocommit on the given connection.
Return the string representation of the cell.
Check the health of the scheduler.
Get a connection to the cloudant API.
Execute the message on the Slack Webhook.
Returns a google. oauth2. service_account. credentials. ServiceAccountInfo object for
Authorizes the request and returns the authed http object.
Returns the list of unfinished tasks.
Prepares the command to execute.
Normalize a tensor by mean and std.
Crop an image.
Flip an image to the left and right of a PIL image.
Transform an image s origin from startpoints to endpoint points.
Flip the image to the top and bottom of the image.
Adjust the brightness of an image.
Adjusts the contrast of an image by a factor.
Adjusts the saturation of an image.
Convert an image tograyscale
Save an image of a tensor to a file.
Find classes in a directory.
Reads an info file and returns a list of labels.
Reads matches files into a torch. longtensor.
Computes the accuracy of the given label and output.
Download a file from a URL.
Returns a list of all the directories in the directory tree.
Return a list of all files in the directory root with the specified suffix.
Download a file from google drive.
Gets a random image parameters.
Gets a random set of parameters for a distortion.
Determine the params to use for an image based on the aspect ratio of the image.
Get parameters to apply to the image.
Get parameters for random angle translations scale and shears.
Download the tar. tar. gz or tar. tar. gz file.
Downloads the image and saves it to the processed folder.
Returns the name of the current theme from the request s args.
Returns a list of installed themes.
Returns a string representation of the response
Call tfd. independent and re - interpret the results.
Computes and returns the log probability of the model joint given the mean and standard deviation
Helper function to build a random variable.
Compute the max non finite value along an axis.
Compute the event size.
Same as self. _eval_all_one_hot.
Converts an identifier to a tensor function.
Gets the size of the parameters for a batch of components.
Builds an input pipeline for use with tf. data. make_one shot_iterator
Check that the map values are valid.
Call the function with the given arguments.
Call the given function with the given args and return the result and the gradient of the function
Recursively packs from_structure into to_structure if num_ is the same length
Performs a single step of thelefrog step.
Mropolis Hastings step.
Construct from a tfp config dictionary.
Converts x into a tensor with the given name and dtype.
Expands x to the rank of the event shape.
Computes the cat_probs from the log_probs.
Ensure that tensorflow is installed.
Logistic regression.
Covertype of features and labels.
Makes a tensor of positive axis.
squeeze or reshape x along axis.
Inverse of self. scale.
Inverse of z.
Computes the transition matrix of the semmdal linear trend transition matrix.
Create a multivariatenormaldiagdiag from the state of the multivari
Return an array of True values where num_ is not less than num_.
Convert a tf. dtype to a numpy dtype and set the eps attribute.
Compute the inner bisection of a line search.
Converts a list of values to a string and prints it.
Check if the given parameter is a quadrature parameter.
Interpolate at specified location.
Interpolate between num_ and - num_.
Concatenate a list of vectors.
Computes the log vector matrix.
Computes the log matrix vector corresponding to the input_tensor ms and vs.
Computes the sum of the vector matrix vs.
Extracts the log probability of the given states from the given distribution.
Helper function to choose random direction.
Helper function to call a function if the result of the function is None.
Helper function to build a trainable posterior.
Computes the moments of the unmasked time series.
The initial value of the unmasked time series tensor.
mixture of the posterior draws of the means with the given variances.
Get the range of the variable.
Resolve the distribution names from dist_fn_args dist_names and leaf_name.
Adds the _dist_fn_wrapped and _dist_fn_args to the
Calculate the entropy of the distribution.
Summarize strings of sequences into a single image summary.
Visualize a reconstructed image.
Visualize qualitative analysis.
Summarize the distribution parameters.
Summarize the mean value in the nats and bits.
Remove the diagonal diagonal element of the matrix.
Returns the zero state and the h0 and c0.
Reshapes inputs to the correct shape.
Samples from the static prior distribution.
The shape of the batch of the parameters.
Calculate the shape of the batch for all parameters.
Calculate the size of a vector of size d.
Return the argsort of the values along the given axis.
Sort an array.
Ntr - tr of x.
Log - Ntr asymptotic series.
Inverse of the inverse of x.
Log - probability of joint text messages.
Returns True if marginal value is univariate.
Get the list of index points.
Computes the outer squared difference between x and y.
Calculates the value and the batch jacobian of a function.
Splits a covariance into marginals.
Returns a textual representation of a numpy tensor.
The shape of the sample.
Returns the shape of the sample.
Returns the value of the tensor if it exists otherwise None.
Returns the value as a numpy array.
uniform unit norm.
Log normalization.
Returns the common dtype for all the arguments in args_list.
broadcasts a list of tensors to a list of zeros.
PDF of the peak at the low peak
Calculate the effective sample size for a single state.
Reduction for the POTentialscale reduction on a single state.
Returns the size of x along the given axis.
If the name is a list of secondary_arg return that list. Otherwise raise valueerror
Return a new mapping where x and y values are removed.
Merge old with new and raise valueerror if new is not equal.
Recursively convert a list or tuple into a deep tuple.
Given a function and a set of src_kwargs return the function s inputs.
Vgg conv block.
Returns True if the dot product of two states has no u turn.
A helper function for theleapf cfn.
Computes the log joint probability for the current target.
Helper function for random samples from the BNulli dataset.
Convert a nested structure to a tensor.
Get the attributes of a tensor - like object.
Make a mixture prior matrix for the given latent size.
Pack images into a single batch of images.
Downloads the given file to the specified directory if it doesn t already exist.
Call volatility function and compute gradients.
Add an zeros to the array of volatility values.
Reshapes x s output by the given function.
Call the function and reshape the output.
Computes the BDS divergence between k and n.
Samples from the root distribution of the root distribution.
Return a numpy array of strings for each topic in topics_words.
Add control dependencies to the vector quantizer.
Saves nimgs of x to fname.
Convert a tf dtype to a numpy dtype.
Returns the base dtype of a given dtype.
Returns True if dtype is a string type.
Return True if dtype is a complex dtype.
Returns the maximum value of a given dtype.
Returns a string representation of a dtype.
Returns the size of a given dtype.
Assert that all items have the same base type.
Return a function to accept reflected objective values.
Return the expansion function for objective_function.
Shrink towards the best vertex of a simplex.
Replace the value at the specified index with replacement.
Helper function for _prepare_args_with_initial_simplex.
Prepare the arguments to pass to objective_function with initial_vertex.
Builds the fake data for MNIST dataset.
Get the configuration of the module.
Instantiate from config dict.
Multiply two matrices.
Computes the mean and standard deviation of each column.
Helper function to pick scalar condition.
Update the log_prob for a single f their event if self. _is_maybe
Finish the probability of a one function.
rotation of x if rotate_right is True and rotate_right is False.
Ensure that the layer is valid.
Converts a dictionary of params from a slice event into a dictionary of params.
Helper function to apply a single step to dist.
Applies a sequence of slice overrides to the distribution.
Returns the number of columns in x.
Get the static predicate value.
Returns a function to rank from a shape tensor function.
Checks that the scale is a diagonal scale.
Pad the dimensions of x according to the mixture distribution.
embeds a check that the value is a non negative integer.
Try to get the static value of x if x is none or dtype is None. If
Determine if a tensor is unsigned by its dtype.
Returns a string indicating if the given tensor is signed by the given dtype.
Returns the largest integer value of a given dtype.
Returns the smallest integer value of dt.
Returns True if dt is an integer or False otherwise.
Generate a new seed with the specified salt.
Returns the dimension size of x along axis.
Helper function to validate the right mosttransposed value of a tensor.
Helper function to validate perm with validate_args.
Calculate the shape of the event from self. perm to shape.
Returns a list of all the dimensions of x.
Build a backward pass step function for the backward smoothing update of the given timestep.
Propagate mean and covariance of a transition matrix to the Kalman transition matrix.
Propagate mean.
Propagate a linop to a covariance matrix.
Calculate the joint mean.
Calculate joint covarianceariances.
Extracts latent means and observationcovs from the latent means and latent covariance
Log normalization.
The mode corresponding to the mean and mean direction.
Rotate the given samples according to the current mean direction.
Sample a set of samples from the batch.
Copies a function into a new function type.
Remove all keys in dict_ where value is not val
Recursively replace dictionary values with their pretty representation.
Get samples z from dist.
Returns True if x is a namedtuple - like object otherwise False.
Chooses a named tuple from the given accepted and rejected objects.
Call the given function if it exists and return the result and the gradients.
Helper function to check shape and validate_args.
Returns whether at least one input tensor converged or failed.
Update the position and gradient of the next position.
Check whether the two objective is converged.
broadcasts value to target.
Computes the harmonic number of x.
Helper function to get a field from the kernel results.
Computes the variance scale term.
val_where cond on tval and fval.
Checks that the first and second are finite and that val_1 and val_2 are not
Return the kernel kernel results.
Resnet block.
deep exponential family.
Initialize parameters.
Determine the KL function that is registered between type_a and type_b.
Read an image from a file and convert it to a float32.
Downloads and unzips the zip file.
Create a single character from a two - dimensional matrix.
Create the sequence of frames for the given action.
Create a random sequence.
Flatten a list of sumkernels into a single list of kernels.
Flatten a multiplicand list of kernels.
Builds the fake data.
Inserts all the dimensions of x into the given axis.
Make a list of static values for a non - negative axis.
Sort a tensor by its number.
Raises valueerror if x is not a static or dynamic array.
Batch gather with broadcasting.
broadcasts event and samples to event and samples.
Checks that the inv_hessian is positive definite and that the input tensor is
Transpose all elements of a batch.
Compute the sum of x along the rightmost axis preserving the shape of x.
If all of the values in arg_list are of the common dtype return the common dtype
Get the initial state of the optimizer.
Calculate a mask of eigenvalues of a PSD.
Get initial arguments for an objective function.
Find the best value in a population.
Check whether the value and x values of a population are converged.
Ensure that a tensor or list is a list of lists.
Returns the tol.
Builds an input pipeline for training.
Plot the generated images.
Converts a list of productions to a string.
Call the prediction function.
Call the encoder function on inputs.
Returns thehat i. e. the relative to the power of x.
Computes the inverse of x.
Compute the assertions of alu solve.
Concatenates the values of sp_a along axis with the diagonal elements of sp_
Helper function to validate a matrix.
Generate slices of the input and output blocks.
Generate a mask from a number of blocks and a number of slices.
Create an input order of the given size.
Create a set of masks from a list of degrees.
Create a zero - dimensional multivariatenormaldiag.
params_to_weights is a helper function to convert from params to weights.
Connects the _prob_chain_rule_flatten into the given model.
Builds a seasonal transition matrix.
Builds the seasonal transition noise for a given scale and number of seasons.
Constrained seasonal transition noise.
Validate the observation data.
Add this parameter to the simulation.
Calls bigdlfunc to set the checkpoint at checkpoint_path.
Set the gradclip const.
Call the optimize function on the model.
Calls bigdlfunc to set training summary
Calls bigdlfunc to set the summary of the value
Set thetraindata of the network.
Downloads and returns a list of texts in the news20 dataset.
Download and parse the Glove W2V file.
Compile loss to bigdl function.
Evaluate the model.
Predict the class label for x.
Loads mnist dataset.
Preprocess MNIST dataset.
Returns the end trigger if the options. endtriggernum == str_ or if the options
Validates the given optimizer.
Returns the value of the field as a string.
Call a bigdl function
Convert an object RDD to an object RDD.
Convert Python object to JSON string.
Get activation by its name.
Get the label of the node.
Read a distributed imageframe from a file.
Writes a part of a bigdl to a file.
Get the image from the image frame.
Returns a list of images.
Returns the label of the tensor.
Returns a list of class labels and a dict of class labels.
Predict the value of x.
Calls the bigdl function to transform this string to another string.
Save a keras model definition to a json file.
build and configure keras model
Predicts a class based on the distribution of the class.
Returns a list of tensor weights
Calls the training function.
Loads a torch layer from a file at the specified path.
Loads a keras model from a json file or hdf5 file.
Returns a new criterion with a given value and a bigdl_type.
Loads weights from a json file.
Loads animdb dataset
Build a keras model
Get shape of input.
Get the shape of the output string.
Reads the MNIST data set at the specified location.
Read data sets from a zip file.
Returns the path to the bigdl jar.
Checks if the current Spark version is below 2. 2. 0
Export a checkpoint to a file.
Save a variable bigdl to a file at target_path.
Returns an expanded array with num_ times and num_ times along the specified axis.
Simple attention layer.
Apply attention to the inputs.
Get the log file for the agent.
Log the given utterance to the log file.
Computes the gradient updates of the gradients of the variables and updates norm of the gradients
Read data by config dict.
Interact with analice and return the response and the number of messages in the response
Convert labels to one - hot format.
Convert one - hot labels to one - hot labels.
Create a tf. session from a string.
Loads the configuration from the local network.
Get the momentum variable of the optimizer
Updates the graph variables
Round the predicted value to the average F1 function.
Process a word.
Drop out the variational layer of units.
Builds the network.
Build basic LSTM network.
Train the model on a batch of data and labels.
Predict on batch of objects.
Constructs a vector of words that are sent by the user.
Convert the tags to a vector of strings.
Computes the BLEU measure of the sentence with the smoothing function.
Verifies that the given URL is a valid URL.
Extract X509 certificates from text.
Verifies the signature of an X509 certificate.
Verifies that the certificate is valid and that the certificate is valid.
Return the json representation of the controls.
ms_bot_ framework of all controls in this group.
Return a list of Telegram controls.
Return the alexa of all controls.
Computes the accuracy between y_true and y_predicted.
Round the accuracy of y_true to the accuracy of y_predicted.
Reads the given data_path and returns its contents as a dictionary.
Creates a default agent for ameanbot.
Convert x into one - hot encoded one - hot encoded one - hot encoded one - hot
Takes a list of tuple of strings and returns a dict of the values of those strings
Loads the model from disk.
Save the model to disk.
Compute a train op based on loss.
Returns a list of strings that match the given word in the dictionary d.
Start the timer.
Handle the given request.
Returns the response from the agent of the given utterance.
Generate a response based on the response template and the request template.
Handle the intents in the request.
Handles the launch request and generate the response.
Handle the request which is not supported by the server.
pretty print self.
Converts an elmo loss toppl.
Builds a model from a given configuration.
Builds a model and interacts with it.
Predict on the given configuration on the given stream.
Reads an answer from a file.
Given a string representing a function return the corresponding callable.
Get a metric function by its name.
Convert string to decay type.
Get the best value of values and losses.
Encode a list of tokens into a word vector.
Read requirements and links from a requirements. txt file.
Computes the log loss function for the labels.
Returns the string representation of the item_data dictionary.
Builds an agent based on the configuration file and returns it.
Runs the ms_bot. framework server.
Download a file from source_url to dest_file_paths.
Extracts the tar file at file_path to extract_folder if extract_folder is
Recursively update a dictionary.
Set the MD5 hash of a URL path.
Set a query parameter in a URL.
The alexa response
The JSON representation of the control.
ms_bot_framework card action
JSON representation of the control.
ms_bot_ framework
Computes the Squad V2 F1.
Calculates the recall at k.
Check if GPU is available.
Recursively parse the value of a config property.
Parse a configuration from a JSON file.
Expand the expanduser and expand the given path.
Run the request and put the response to the output queue.
Delete a specific conversation.
Refresh the cache of the valid certificates.
Verifies the request signature.
Handle a single request.
Returns a class from its string name.
Get model by its name.
Get the glm regularization path for a model
Make a GLM model from a dictionary of coefficients.
Converts a list of key - value pairs into aocluster object.
Sends a prompt to the server and closes the connection.
Returns True if the local server is running False otherwise.
Returns a list of the jobs in the table.
Return the list of timezones associated with the given string.
Internal helper to fill properties with information from a H2ocluster object.
Stabilize execution of the given test_func.
Get the summary of a table.
Delete a single frame from the device.
Get the builders of the model.
Validate the model parameters.
Compute model metrics.
Delete a model by its key.
Run the specified number of EC2 instances.
Terminate the given instances
Stop the instances in the given region
Start the instances in the given region
Reboot one or more instances
Wait until we have ssh_live running on the specified ips
Get the full name of a function s method.
Get the string representation of the function s arguments.
Wrap text at num_ by wrap_at
Wait for the job to finish and resolve the model.
Trains the model using the specified parameters.
Returns a dictionary with the parameter names and values as keys and values.
This function handles all signal handlers.
Delete the g_output_dir if it exists
Remove a sandbox from the system.
Scans the port from the stdout and prints it to the terminal.
Determine the size of the given nodes_per_cloud and print it to stdout.
Terminate the child if the pid is greater than num_
Stop one or more nodes.
Get the current IP address of the node.
Returns the port number of the node.
Determine the size of the vector.
Calculate the H2O mean absolute error.
Calculate the mean squared error between y_actual and y_predicted.
H2O median absolute error
Compute theexplained variance score of a prediction.
Raise an AssertionError if the variable is of the expected type.
Raise an error if the value matches the regex.
Raises an error if the value of the variable is not equal to the value of the
Check if the var is a valid type.
Returns a human - readable string representation of a type.
Check if a variable is a member of this collection.
Check if the variable is an enum constant.
Returns the configuration as a string.
Read the configuration from the candidate log files.
Yields the candidate log files.
Store the model progress and check the next poll interval.
Helper function to recalculate model parameters.
Estimate the completion time of the current progress.
Guess next poll interval.
Compute the progress at time t
Computes the time at which x_target s progress is at a given progress.
Draws text to stdout.
Computes the total size of all the widgets in the progressbar.
Get the terminal size
Sets the encoding of the strings in the file.
Fit the response node to the given frame.
Force a refresh of the cache.
Return the type of the column.
Print the summary of the object. If return_data is True then print the contents of
Prints a summary of the current frame.
Return the first row of the DataFrame.
Return a new node of type matrix that is the mult of the given matrix.
Return a list of levels that contain the specified string.
Return the number of levels of the node.
Set the level of the expression.
Set the levels of this node.
Renames columns.
Set the column names
Set the name of the specified column.
Check if an item is in the list or tuple.
Return themodule k - fold column of the table.
Get the stratified kfolding of a column.
Print the structure of the H2O object.
Removes and returns the column at the specified position.
Concat the given frames into one or more frames.
Return a new expression that is the same as the given data.
Return a new expression that is the sum of the values in the given list of frames.
Group by a given value.
Fill missing values with string values.
Return a new string node that represents the relevel of the current node.
Inserts missing values in the underlying frame.
Return a new expression that represents this object as a factor.
Split the string into multiple rows based on the pattern.
Return a copy of this table with the lstrip str_ at the beginning of the row and
Return the entropy of the string.
Return the number of valid strings in a sequence of words.
Create a new table node based on the given data2 argument.
Return a new expression that is a sub of the current expression.
Return a new expression that is the toupper of this string.
Return the naomit of the expression.
Return the difference between the column and the current column.
Return a new expression that is True if the string is itself itself.
Return a new expression that represents the minute part of the expression.
Return a new expression that is the current value of this node.
Applies the function to this node.
Tokenize text into code.
Parse a text file into a code object.
Move this range to a new location.
Removes the current token from the token stream.
Computes the centers of the model.
Computes the standard deviation of the centers of the model.
Send a request to the H2Oconn API
Checks if the version number is different from the build number.
Performs a lazy import of the given path with the given pattern.
Returns a h2oframe object that represents a string representation of the setup.
Make a deep copy of data and its children.
Get a model by its ID
Resolve a single H2ogrid search into a grid by grid_id.
Returns the frame with the given ID.
Downloads a model from a file. Returns the file path or None if the file does
Downloads the given data object to a CSV file.
Assert that a demos object is a demos object.
Loads the given path into the h2ovalue dataset specified by relative_path.
Makes metrics from the predicted and actual data.
Helper function to create a new key from a file.
Check if frame_id is a valid frame_id.
Return human - readable string of given size.
Normalize a slice to a specified number of parts.
Returns True if the slice is normalized False otherwise.
Wait for the job to finish.
Returns a dict of model_id - > model. model_id
Prints the summary of the model and its cell values.
Prints out a h2otwodimtable table.
Returns a list of the hyperparams with the given id. If display is True it will
Returns a dictionary of the model parameters associated with the given hyper parameter id. If display is
Returns the list of archetypes in the given test data.
Make a scree plot of the model and cell values.
Translate a human - readable name into something more human - readable.
Remove the indenting from the beginning of text.
main entry point for g_test_root_dir and g_temp_filename.
Close the session.
Get the session id.
Starts logging into the specified destination.
Prepare the data payload to be passed to the API.
Prepare a file payload for h2ovalue processing.
Log the start of a transaction.
Log the end of a transaction.
Log a message to the logging destination.
print a message if self. _verbose else print a message if self. _verbose ==
Get an automl by project_name
Download the PPO file for the project.
Download a genmodel at the specified path.
Fit the model to the given x and y values.
Return the transform applied to the given x and y.
Inverse of transform
Extracts true string from string_content.
find a node name in the temp_func_list
Finds the build timeout in the temp_func_list and sets it in the g
Finds a build failure in temp_func_list and sets the g_failure_
Finds a build id in the temp_func_list and adds it to the g
function to extract the details of a job build URL.
Grab the message from the text file and associate it with the current test.
Save the test failure information to a pickle file.
Updates the summary file to reflect the passed tests.
Writes the content of a file to a new file.
Writes a message to text_file.
Loads the message list from the message. pickle file. If the file does not exist
Normalizes enum constant.
Finds synonyms of a word
Check the status of the current job.
Writes this object to a. po file.
Fit the model to the given frame.
Returns a dict of parameters and their default values.
Returns the actual parameters of the query
Get the deep features of a given layer.
Returns a data frame containing the scoring history.
Show the model for this job.
Calculates the variance of the cell
Returns the residual degrees of freedom.
The coef of the model.
Downloads the genmodel jar from the repository at the specified path.
Downloads the specified genmodel into the specified path.
Saves model details.
Checks the length of the y_actual y_predicted and raises a valueerror
Gets the cross validation models for a given H2O model.
Wait for stdin to return a character then return the result.
Return the cell as a pandas dataframe.
Print the contents of the table.
Finds the jar in the list of search paths.
Yields the absolute paths of the jar
Returns a csv. Dictwriter for a file - like object.
Convert a relative path to a URI path.
Discovers and returns a list of module URIs in self. package_uri.
Write API documentation to the specified output directory.
Returns a list of the values of the cell.
Loads the message dict into the global object g_load_grid_message_filename
Adds a new message to the global g_new_messages_to_exclude and
Save the current state of the global object as a pickle file.
Print a dictionary of errors to the screen.
Parses command - line arguments.
print usage of global g_script_name
Locate all files in a directory.
Find the cell cell magic in a file.
Locate all files in the root_dir.
Evaluate the transform on the given data.
global g_summary_dict_allfiles = allfiles in the test root directory that
Extracts the saveintermittens from the summary. csv file.
Plot the metric.
Check if the h2o API is available
Trim the data back to the given monthtokeep.
Returns a dict of endpoint - > list of endpoint - > string - > list of endpoint
Update site forward
Returns the data in JSON format.
Get the comments for a user. If the user does not have comments return the comments for
Gets the credentials from the input file.
Like a user.
Like the givenhashtag and return the like value. If amount is None return the
Check if the user is not a bot.
Reads a list of strings from a file.
Set the schedule time for this optimizer.
Change the bool_ of the message in - place.
Try to guess the service info from a path.
Returns the URI for the given request.
Creates a requestsconnection object for the given request.
Perform the request and return the response.
Get the authorization server value.
Validate the request URI
Returns the CLI profile from the global config folder if it exists otherwise None.
Opens a request to the URL with the given method and URL.
Sets the timeout for this HTTP request.
Set the value of a request header.
Get all the HTTP response headers.
Send the given request.
Returns the HTTP status of the request.
Get the status text of the http request.
Returns the response body as a string.
Set the client certificate for this window.
Make a PUT request to the specified URL with the specified method and URI.
Set the value of a request header.
Sends the request with the given request_body. If the request_body is empty
Retrieve the response from the HTTP request.
Helper function to get a readable id from a name.
Get the element name for the element name.
Get the properties of an XML entry that include a specific node.
Get the children of a node from a path.
Finds all the attributes of a child that are defined in the given namespace.
Get the servicebus namespace from the XML string.
Return a servicebusregion object from the xml string.
Return the namespace availability of the given XML string.
Returns a servicebusmetrics object given an XML string and the object type.
Update a kb.
Builds a package from a given pr_number.
Replace word alterations.
Gets the storage account properties for a storage service.
Gets the storage account keys for a service.
Regenerate the keys for a storage account.
Delete the storage account for the given service.
Checks the availability of a storage account for a service.
Gets the properties of a hosted service.
Deletes a hosted service.
Deletes a deployment for the given service and deployment_name.
Swaps the specified deployment to the specified production and source deployment.
Updates the status of a deployment for a given service and deployment.
Walks an upgrade domain for a given service and deployment.
Reboots the specified role instance.
Deletes the specified role instances for the specified service and deployment.
Checks the availability of a service for this subscription.
Get a list of the certificates associated with a service.
Get the certificate associated with a particular service.
Adds a service certificate to this subscription.
Delete a service certificate.
Get the management certificate for this subscription.
Adds a management certificate to this subscription.
Delete management certificate.
Gets the properties of aff group.
Creates an aff binary group with the specified name label and location.
Deletes a together together with its subscription ID and subscription ID.
Gets a list of all subscription operations in the current user s account.
Deletes a reserved IP address.
Associate a reserved IP address to a service.
disassociates a reserved IP address to a service.
Gets the reserved IP address for the specified node.
Gets a persistent VM role associated with a service and deployment.
Deletes the specified role from the specified service and deployment with the specified name.
Starts a role for the given service and deployment.
Starts the specified roles for the given service.
Restarts the specified role.
Adds a DNS server to a service.
Updates a DNS server for the specified service and deployment.
Deletes a DNS server for the specified service and deployment.
List the versions of a resource extension.
Unreplicates a VM image.
Shares a VM image.
Deletes a VM image.
Gets the list of VM images.
Deletes an OS image.
Gets the data disk associated with the service and role.
Deletes the data disk associated with the specified service and role.
Updates a disk.
Deletes the specified disk.
Build the receiver.
Create a service object from a connection string.
Returns a list of the subscriptions for the given topic.
Parse the response headers for asynchronous operations.
Perform an HTTP GET request for the given path.
Perform a PUT request.
Get the current operation status of a request.
Updates the management header of the request.
Builds a new package from the environment variable and checks if it s in omitted_release
Gets a list of all the regions in the servicebus object.
Gets a list of all namespaces.
Gets the namespace corresponding to the specified name.
Creates a new namespace.
Deletes a namespace.
Checks the namespace availability of a service.
Gets a list of all the topics with the given name.
Get a list of notification hubs associated with a service name.
Get a list of relays for a given name.
Get a specific metric rollup from a queue.
Gets the metrics rollups for a specific topic.
Gets the metrics rollup notification for the specified hub.
Gets the metrics rollup relay for a service bus relay.
Create an environment directory.
Yields a virtualenv with the given packages as the prefix of the virtualenv.
Creates a SQL Server.
Sets the admin password for a SQL Server.
Returns a list of all service resources associated with a given server.
Deletes a firewall rule.
Get a list of firewall rules associated with a service.
Get a list of service level objectives associated with a given server.
Delete a database from a server.
Returns a list of databases in the named service.
Get the session state of the service.
Set session state.
Validate the challenge string.
This is a helper function to handle errors
Creates a queue with the specified name.
Deletes a queue.
Gets the information about a queue.
Creates a topic.
Gets the specified topic.
Creates a new rule for a topic and subscription.
Gets the specified rule for the specified topic and subscription.
Gets the list of rules for a given topic and subscription.
Creates a subscription for the specified topic and subscription.
Gets the details of a topic s subscription.
Returns a list of all the subscriptions for the specified topic.
Sends a message to a topic.
Unlocks a message for a topic and sequence.
Sends a batch of messages to a queue.
Unlocks a message in a queue.
Receive a message from a queue.
Receive a message from the specified topic subscription.
Creates an event hub.
Updates the specified event hub.
Gets the specified Event hub.
Sends an event to a service hub.
Updates the servicebus header for the given request.
Gets the authorization string for the given request. Returns the authorization string.
Returns True if token is expired False otherwise.
Get a token for the given scope.
Updates the URI query of a request.
Deletes the message from the queue or subscription.
Unlock the servicebus lock.
Updates the lock on the queue or subscription message. If the queue or subscription message is
Adds the headers to the request.
Return the batch body as a dict.
A general error handler for the given http_error.
Handle the redirect event. Set self. _thread_local. auth_attempted to
Change the profile of this instance.
Deletes a queue.
Deletes the specified topic.
Construct a shared access key from a connection string.
Returns the properties of the entity.
Return whether the lock is expired or not.
Handle the output of the results_queue.
Task collection thread handler.
Build a config dict.
Create a message from the response object.
Converts the given etree element to the rule element.
Convert an etree element to a queue.
Converts an etree element to a topic.
Converts an XML subscription element to a subscription object.
Parse the HTTP response body of an enum results list.
Gets the properties of the entry element.
Returns a list of the queue clients associated with this service.
Returns a list of the topics associated with this service.
Gets the details of a particular site.
Deletes a site from a webspace.
Updates an existing website.
Restart a webspace from a website.
Get historical usage metrics for a webspace and website.
Get metric definitions for a webspace and website.
Get publish profile XML for a webspace and website.
Get the publish profile for a webspace and website.
Creates a new cloud service.
Checks the name of a job collection.
Gets the details of a specific job collection.
Cancel scheduled messages.
Reopen the connection and wait for pending messages to be reconnected.
Get a certificate from a publish settings file.
Loads all the cookies from the cache.
Returns the terminal width of the given string.
Returns the cut prefix of the value if it is longer than max_len.
print a message to terminal inplace.
Format the file size.
Returns a string representation of the elapsed time.
Returns the status line of the terminal.
Prints a status line to stderr if the terminal width is greater than num_.
Returns a list of the segment numbers for this object.
Returns a generator of segment objects for this representation.
Block until a specified time is available or until the specified time is reached.
Puts the current fetch into the specified segment.
Put value into queue_ and block until the queue is full or the queue is full.
Returns a list of the PV params to be passed to the PV API.
Extract the nonce from the http_result.
Find the vpid for the given url and parse it.
Tries to parse the provided data as JSON. Raises a valueerror if the data
Parses XML data.
Parses a value from a QSD string.
Search a dictionary for a specific key.
Yields HTML tags and attributes that match the given tag.
Determine the json encoding of a sample of bytes.
Parse a JSON response.
Parse the XML response.
Parses the given cookies object.
Parse the response headers.
Parses a set of query parameters from the given cookies.
Returns the formatted message if self. args is set otherwise returns the original message.
Return a log record for the specified name.
login to the login page
Load a support plugin plugin module.
Update an existing query string from a URL.
Yields the chunks of data from the flv file.
Returns an iterator over the requirements of the named argument.
Check if the file output exists and if not force ask the user for the file output.
Check if output is a file or a file - like object.
create an http server
Yields http requests.
Output a stream passthrough to a file.
Opens the given stream and returns its content and the prebuffer.
Open and read the output of the given plugin to the given stream.
Reads data from the given stream and writes it to output.
Handle a single stream.
Fetches streams for the given plugin.
Fetch one or more streams at a given interval and retry count times.
Resolve a stream name from a dictionary of streams.
Print the list of available plugins to the console.
Authenticate to twitch OAuth
Loads all plugins in the specified directories.
Sets up the http session
Loads all plugins in the given directory if they exist.
Log the current versions of the socket.
Extracts the stream ID from the provided text.
Search text for an element in the response and return the corresponding element in the response.
Returns the value of the given option for the given key.
Set the value of a plugin option.
Returns the value of the plugin option with the given key.
Resolve the given URL using the registered plugins.
Loads all plugins in the specified package.
Returns a string representation of the number of minutes seconds in a number.
Find the player s URL in the response text.
Parses the given data using the specified parser.
Returns the name of the command that is supported by this environment.
Gets the stream id from the html response.
Extracts the stream info from the HTML response.
login via the HTTP login method
Applies a function to the map.
Call the crunchlapi API.
Starts a new API session.
Gets information about a media.
Create the API object.
Format a single character to a string.
Read n number of bytes. Raises valueerror on error.
Return the value of the bitstring.
Get the explanation of this error.
Set the decodtable to the string representation of this object.
Sets the min length and max length of the data.
Reads a tuple of specified length from the specified stream.
Return the explanation of the instance at the given index.
Return the value of the string at the specified index.
Return the span of the value at the given index.
Returns the value at the specified index with the specified extra.
Returns the mnemonic for the symbol at the specified index.
Returns the formatted string for the given index.
Return a list of strings representing the actions in self. actionlist
Evaluate the given action in the context of the given w and return its result.
Return the hex data at the given position in the stream.
True if the length of the metablock is metablock else False.
Returns a boolean indicating if the stream is gzip compressed or not compressed.
Calculate the number of block types for a particular kind.
Pop and insert a value into the mtf.
Read the prefixcodes for a given kind and number of degrees.
Patch a function to make it available in the hidden data.
Adds virtual columns to proper motion2vperpendicular distance and pm_long
This is the application that should be used for the application.
Opens many files and returns a pandas. dataframe.
Create a ~astropy. table. Table object from an astropy. table. Table
Create a ~astropy. table. Table instance from an astropy. table. Table
Convenience function to create an array from a dictionary of scalar values.
Load data from a CSV file or buffer.
Returns the serverrest of the given URL.
Yields a random zeldovichiometric distribution.
Concatenates two sets of strings
Create a column virtual range.
Opens the given file or creates a new one if it doesn t already exist.
Evaluate the given expression in this dataset.
Returns a set of all of the columns in the current selection depending on the values of the
Sort the matrix by a certain number of columns.
Wait for the plot to happen.
Open a document in the operating system.
Write a file to a given mode.
Split and combine the mask arrays.
Calculate the median approximations of an expression.
Plot a 2D widget of the given dataset.
Plot a 3d volume
Evaluate a string expression and return the result s dtype.
Returns the path to the private directory of the server.
Removes the virtual meta file for this instance.
Write the virtual metadata to a. json or. yaml file.
Write the metadata to a JSON or YAML file.
Set the value of a variable in the configuration.
Evaluate a variable in the expression_namespace.
Evaluates the given selection mask.
Return a dictionary representation of the table.
Copy the metadata to a new DataFrame.
Return a string representation of the data in the arrow table.
Create an astropy. table. Table object from this data
Add a column to the model
Rename a column in the table.
Adds a virtual columns cartesian to the polar system.
Adds virtual columns cartesianvelocities to polar.
Adds the virtual columns polar azimuth and v azimuth to the cartesian
Add a virtual columns rotation.
Adds virtual columns in spherical to cartesian space.
Adds a virtual columns from cartesian to spherical coordinates.
Add a virtual column to the table.
Delete the virtual column with the given name. emit the signal_column_changed signal.
Adds a new variable to the model
Delete a variable from the model
Return the last n characters.
Displays the head and tail of the table.
Displays the contents of the table as an HTML table.
Set the current row to the given value.
Trim any non - ndarray or ndarray columns from the start and end of the DataFrame.
Take a subset of the current DataFrame with given indices.
Extract the first occurrence of this string in a list of strings.
Raise the signal selection_changed in the context of the given name.
Emit the signal selection changed.
Returns True if selection can be Redo.
Select a rectangle
Selects a circle around x and y in the circle.
Creates a new selection of the given name.
Find a valid name for the table.
Return a graphviz string representation of the graph.
Add a category to the plot.
Encode one or more strings into a new string column.
return the datas as a string
Return the number of elements in the sequence.
Add the names of the columns of another HStack to the name of this HStack.
Concatenates self and other into the dfs.
Add a new column to the dataframe.
Patch a dataframe with a given function.
Fills value in ar if ar is a string column.
Convert an array to str_ if it is a string and its sum is equal to the
Return a numpy. recarray of the length of the record.
Write a series of properties to a file - like object.
Write a comment to a file handle.
Write a property to a file - like object.
Replace all newlines with their own str_ in a file - like object.
Shows the current version of the module and its dependencies.
Rename a keyword argument.
Set the default FFTlib.
Use librosa to print the track of the beats and times
Adjusts the tuning of the effects of the harmonic harm to the value
Convert HZ to mel.
Converts a list of Mels into a list of Mels.
Generate a string representing the frequencies of the Fourier transform.
Apply a cqt filter to a Fourier transform.
Trim the stack of cqt_resp so that it has a certain number of bins
Computes the complex power spectral response of the Fourier transform of the time series
Compute the downsample count.
Downsample the audio
Create a random transition matrix.
Sets the current image
Check if the axes parameter is an instance of matplotlib. pyplot.
Helper function for scale_axes.
Compute the Fourier transform of the Fourier transform of a Fourier domain.
Return the Mel - Mel - hocentric coordinate system.
Return the cqt frequencies for the x - axis.
Return a numpy. linspace with num_ values between 0 and n + num_.
Return a str containing the time of the first n frames in the time series.
Compute the time stretch of a time series.
This function prints the beats and the effects of each channel to a csv file.
internal function to perform nearest neighbors filtering
Calculate the bandwidth of a window.
Apply a window -SS fill step to a time - domain waveform.
Calculates the Jaccard representation of the intersection between int_a and int_
Match an interval over a list of candidates. Return the index of the best match interval.
Compute the distance between two time intervals.
Load an audio file.
Convert audio to mono.
Returns a set of all files in the given directory that match the given extensions.
Stretch the duration of the duration given by speed and write a wav file.
Process the command line arguments.
Reads a HW file and writes the output of the HW into a wav file
Trim the beats to the local version of the BPM.
Calculate the local score of an event set.
Calculates the cumulative score of the metric for a given period anddtype of the metric
Returns the value of the median of the values in the cumulative score that are greater than the
Runs librosa onset_detect and prints the results to the console.
Return x if it is a valid int.
Reads the contents of the image. Returns True if the image was read False otherwise.
Get an image frame by frame ID.
Writes frames to file in frame_dir.
Call func and track the progress of the given tasks.
Flip the image in the specified direction.
Rotate an image by angle.
Clips a set of bboxes into a set of bounding boxes.
Return a string of bounding boxes scaled by scale.
impad a given image to a given shape.
impad to multiple h and w
Scale a size and return a new size and a new scale.
Resize image by specified size.
Resize an image to a new image.
Register a file handler.
Get priority value.
quantize an array of values between min_val and max_val.
Calls cv2. imshow with the input image.
Helper function to dequantize a flow
Loads checkpoint from filename.
weights to cpu
Save model checkpoint to file.
Initializes an optimizer object.
Initializes the logger and adds a file handler to it.
Returns the current learning rate for the optimizer.
Registers a new hook.
Runs the given workflow in a specified number of epochs.
Register all training hooks for the optimizer and checkpoint.
Cut video from in_file to out_file.
Concats a list of video files into a single video file.
Reads a list of strings from a file.
Read a mapping from a file.
2x3 convolution.
read image from file if flag is str or np. ndarray
Decode image from byte string or numpy array.
Wrapper for cv2. imwrite.
Converts a color image to a color image with black color. keepdim = True means
Convert white color to black color.
Converts inputs to dst_type.
Check if a sequence is of a specific type.
Slice a list into parts of a given length.
Calculate the average of the values in the history.
Scatter function.
Returns the value of a color.
Returns the time since the timer was started or None if timer_id is not present.
Start the simulation.
Return the time since the start of the timer.
Returns the elapsed time since the last check.
Show the flow in a window.
Make a color wheel from a color array.
Computes the accuracy of a model.
Scatter function for inputs and kwargs.
Fetch the data from the API.
Return the JSON representation of the object.
Return the raw text representation of the message.
Handle a callback and return the result.
Make multiple request to one or more urls.
Make a HTTP request.
Start all the worker nodes in the master.
Normalize the result of a task in the v2 format.
Returns the distribution name for the wheel.
Get the basename of the archive.
Add additional requirements to the package metadata.
Create a message activity with the specified text.
Create a new activity with the same type as the input hints.
Create an attachment activity.
Create an activity containing a list of attachments.
Create an attachment with content_url.
Setter for _telemetry_client field.
Reads the specified keys from the container.
Writes the given changes dict to the given storeitem. If the storeitem already exists
Delete a document by the given keys.
Create a storeitem from a dict.
Create a dict of the non - magic attributes of a storeitem
Sanitize the given key.
Creates the database and container.
Get or create the database with the given id.
Gets or creates a container in the database.
Fills the results from the QNA service into the event data.
Gets a conversation reference for the given activity.
Get the name of the step at the given index.
Checks if a channel supportssuggested actions.
Check if the channel supports card actions.
Get the channel_id of the activity.
Returns a boolean token if it is from an Emulator.
Returns the attachment of the card as a string.
if value is a classical register or if val is a classical register. If val
Make a copy of this object.
Returns string in QASF format.
Returns the QASM of the model.
Runs the circuit in the working list.
pass pass method of pass method
Returns a list of strings of all passes in the working list.
Return a list of strings that represents the dependencies of this flow controller.
Factory method for the controller class.
ubase function
Returns the parameters of a single - gate.
Returns the matrix representation of a single - gate gate.
Converts a circuit to a DAG circuit.
Exponential fit function
Fits the element - wise element - wise as a function of the element - wise as
function to plot the coefficients of an exp_str and qubit.
Calculate the mean and std of the rb data.
function to plot data and survival probabilities
Compose u3 - u1 - u2 Compose u3 - u1 -
quaternion from Yzy to Zyz
Validate input quantum state.
Trim the image to the same mode and size as the background.
Return the gate span of the instruction from the list of qregs.
Run the dag and update the property_set with the new layout.
Add one or more qubits to the circuit.
Process the bit id of the node.
Process a single gate node.
Check if the node is not the same as the one in its children.
Applies the measure to the file.
Process if condition.
Creates an op class based on the given name and params.
Return the number of timeslots in the given channel.
Return the start time of the channel.
Get the stop time of a channel.
Returns an iterable of instructions for the node and its children at the specified time.
Dump the additional data from the valid_data to the original_data.
Load additional data.
Validate the given instance.
Return a dict representation of the data in this instance.
Create an instance from a dict.
Fourier transform.
Chop the real or imaginary part of an array.
Computes the outer dot product of two vectors.
Computes the concurrence of a state matrix.
Calculate the Shannon entropy of a state
The mutual information of a state.
Returns the entanglement of the information given by state d0 and d1.
Shannon entropy of the EOF qubit.
Flatten a schedule component.
Shift a schedule component by a given time.
Insert a child into a schedule.
Append a child component to a parent component.
u3 - quasi - quasi - quasi - quasi
Return the current status of this backend.
Starts the simulation for a given number of iterations.
Returns the current time remaining in completed_iter as a string.
Disassemble a QObject.
Computes the hamming distance between two strings.
Create a quaternion from an axis and a rotation matrix.
Create a quaternion from Euler angles.
Normalize the data in the quaternion.
Return a numpy array with the data in self. data
Euler angles in radians.
Takes a list of strings and returns a new dictionary with the most common string to keep
Check if the value is a collection.
Check if j is a valid range.
Check if a matrix is a square matrix.
Determines if a matrix is a diagonal matrix.
Determines if a matrix is a symmetric matrix.
Determines if a matrix is a Hermitian matrix.
Determines if a matrix is a positivesemidefinite matrix.
Determines if a matrix is an identity matrix.
Determines if a matrix is a unitary matrix.
Wrapper for _to_choi and _from_ operator.
Convert to superop of str_ to str if rep == str_ : from_operator
Convert a string representation of a Kraus operator to a Kraus operator.
Convert tochoi operator orchoi operator.
Convert a string operator toptm.
Converts a string representation of a Kraus operator to a Kraus operator.
Convert a string representation of a Kraus operator to a Kraus operator.
Helper function for _from_operator.
Helper function to convert a tensor to an operator.
Convert a superop tochoi.
Convertchoi to superop.
Convert a Kraus dataset tochoi.
Convertschoi to Kraus.
Converts a list of stine tensor to a kraus tensor.
Helper function to convert a STine - L and STine - L tochoi.
Converts a sequence of Kraus vectors into a sequence of stine vectors.
Computes the superop of the Kraus operator.
Transform an array of qubits tochoi.
Convertchoi to Choi.
This helper function will take two sets of matrices and split them into one with the same shape
Transforms the elements of the element - vectors using the Pauli algorithm.
Check if the number of qubits is the same as input_dim.
Hides the tick lines and labels of an axis.
Set the label convention for the plot.
Clear the plot.
Appends vectors to self. vectors.
Renders the object to a 3D figure.
Plot the front of the sphere.
Renders the plot and shows it.
Get the top layer s contents as a string.
Mid string representation of the layer.
bot of the layer
Returns the length of this interval as a string.
Returns the parameters for a label instruction.
Returns the label for the given instruction.
Return a LaTeX representation of the node.
Add a deprecation filter to the warnings.
Returns system and memory usage of this machine as a string.
Returns True if the server has a connection to the specified host and port.
A helper function to check the status of a job variable.
Return the constant of the given times array and amp.
Computes the square of the given times.
Computes the triangle of times
Return the cos of the given times using the given amplitude and phase.
Derivative of a gaussian.
Compute a piecewise Gaussian of the given times array.
Create a default pass manager.
Create a default pass manager based on a set of basis gates.
Check if the register is in the cregs list
Returns a copy of this instance with the same name but mirrored.
Inverse of the instance.
Append an instruction to the parameter table.
Make sure that the qubit bit count is the same as the qubit count.
Check if all arguments are valid
Check if all arguments are valid.
Check if the cregs are compatible with the rhs.
Returns the ASM for this instruction.
Returns the number of gates in the data.
Returns the total string width of all cregs.
Counts the number of instructions in the instruction data.
Returns a new circuit with all the parameters binded to the current circuit s parameter table.
Bind a parameter to a value.
Map a set of gates into a set of gates based on a layout.
Calculate the distance between a set of gates and a layout.
Return the score of the step.
Copy metadata from the given circuit to the target circuit.
Helper function to transform a gate to a layout.
Returns a dagnode representing the swap gate from an edge in the layout.
Runs the circuit on the given dag.
Adds a physical qubit to the graph.
Add an edge between two qubits.
Return the subgraph of the given list of nodes.
Returns the list of physical qubits in the graph.
Returns True if the graph is weakly connected False otherwise.
Computes the distance matrix for each node in the network.
Compute and return the distance between two qubits.
Convenience function to add a CNF 1 gate to the end of the sequence.
Returns the inverse instruction of the instruction at the given index.
Return the string corresponding to the contents of the gate if any of the arguments are given.
Returns the string corresponding to the If - then - then - else value of this node.
Subscribes a callback to the given event.
Dispatch the given event to all subscribers.
Remove a callback from the subscribers of an event.
Publish an event.
Initialize the register at the current state and append it to this register.
Initialize the circuit.
Computes the uncompute gates of the circuit.
Returns the bloch angle in radians between a_complex and b_complex.
Computes a multiplexN - qubit multiplexN - qubit multiplex
Returns True if the value is virtual.
Make a copy of this layout
Combine this layout into another layout.
Appends two strings to the end of the sequence.
Inserts a job into this schedule.
Check if the given name is in the object and raise an access error if it is not
Convert a list of gates to a list of indices.
Run the mapper on the given dag.
Group pauli operations by a certain number of qubits.
Create a quasi - label matrix from a label matrix.
Initialize self. _z self. _x self. _z and self. _x
Computes the Sgn of the product of p1 and p2.
Convert this operator to an operator object.
Returns an instruction for this circuit.
Update self. _z with z if indices is none or a list of indices is given
Update self. _x with x if indices is none or a list of indices is given
Append an paulis or a paulis to this node.
Delete qubits at specified indices
Generate a random boolean array.
Construct a pauli operator from a single pauli label.
Returns the string and probabilities of the marginal likelihood of the current state of a qubit
Generate a sample of measure_params and add it to the list of samples.
Add a unitary measure of a qubit to self. _classical_memory and
Add a unitary single qubit to the unitary if outcome == str_
Checks that the initial state vector has the required number of qubits and raises basica
Initializes the state vector
Returns the state vector and its imaginary parts.
Make sure that measure_flag is True and that measure_flag is False.
_run_job - internal method to run a single job.
Validate the given QObject.
Validate the initial unitary of the basicaer.
Initializes the unitary matrix.
Returns the unitary of the unitary.
Run a single job and return the result as a dict.
Validate a basicaer qobj.
Returns True if the value is a boolean and False otherwise.
Generate property_set for the given string in the given dag.
Check if this interval overlap with another interval.
Shift the interval by time.
Shift the interval and channel by the given time.
Return the start time of the given channels.
Get the number of stop times for one or more channels.
Returns whether the timeslots are mergeable with the given timeslots.
Return a new times slotcollection merged with the current timeslots.
Shift the times slot collection by the given time.
Report a commit on the issue.
Plot the state inpaulivec.
append the rzz gate at theta from qubit1 to qubit2
Prepend two cells to the end of the string.
Create the program graph.
Select the next edge in the pending_program_edges list.
Select the best remaining job from the list of candidates.
Selects the best remaining qubit for the given prog_qubit.
Return the instruction list of the instruction.
Inverse of the data.
Return a str with the same data but only if there are any of the given quas
Change the c_if value of the classicalicalical to val.
Determines if the matrix is unitary.
element - wise conjugate of the element
Returns a new operator that transposed the input and output dimensions.
Applies the power operator to the input and output dimensions.
Returns a tuple of output_dims and input_dims.
Convert an instruction to an operator.
Swap the i - th mapping layer to the one specified in layer_list with the
Separate a bitstring into a different bitstring.
Format memory as a level 0 memory array.
Format memory as a level 1 memory array.
Format a level 2 memory list.
Format a dictionary of counts to a string.
Format the state vector into a complex one.
Format the unitary of a matrix.
Submit the job to the scheduler.
Get the current status of the job.
Return whether this interval includes the given frequency.
Plot a multivector iplot
Substitute nodes with dags.
Returns the k choose from n if n is equal to num_ otherwise returns the k choose
Return the index of the lexicographical element of a list of strings.
Returns a list of all unique hardware backends.
str - > str
Generate a constant sinusoid of the given duration and amp.
Generate a zero - valued sequence of the given duration.
Generate a samplepulse of the square of the given amp.
Sawtooth sampling with the given amplitude.
Sample a triangle.
Generate a cos wave with the given duration amp and phase.
Sample sin with the given duration amp and phase.
Generate a samplepulse of a gaussian.
Derivative of a gaussian samplepulse.
Returns a string representation of the node.
Given a backend_cls return an instance of backend_cls. Raises qiskiter
Removes all operations named by opname.
Add a quantum register to the circuit.
Adds creg to the wire.
Adds a wire to the graph.
Checks the condition of a program.
Returns all the bits in the given condition.
Add an operation node to the MultiGraph.
Applies an operation back to the multi - graph.
Check the validity of a wiremap.
Map the condition to the wire map.
Compose the graph and extend the graph back to the given edge map.
Check the size of the wires.
Returns a map of num_ to the labels of the predsuccs in the multi
Returns a map of values for pred_map to pred_map andsucc_map
Return the topological nodes of the multi - graph.
Returns an iterator over the edges in the multi - graph.
Get all nodes of the multi - graph which call the given op.
Returns a list of nodes corresponding to the gate nodes of this node.
Returns a list of named nodes in the multi_graph.
Returns the list of two - qubit gates.
Returns the predecessors of a node.
Returns the predecessors of a node that are quantum predecessors of the node
Returns the ancestors of the given node.
Returns a list of successors of the given node.
Removes an operation node from the graph.
Removes all ancestors of the given node.
Removes all descendants of a node from the multi_graph.
Remove all non - ancestors of a node.
Remove a node from the multi_graph that is not a member of this node.
Yields the serial layers of the circuit.
Yields the multigraph layers of the input map.
Given a wire yield all the nodes that match the given wire.
Counts the number of operations in this graph.
Get a summary of the properties of the tensor.
Convenience function for creating a tomography basis from a given basis.
str_meas_gates is defined as str_ num_ and qreg.
Computes the data associated with a given tomography.
Perform a projector operation on a basis.
Calculate the linear inverse of the given freqs.
Hermitian bayesian projection of the bayesian system.
Calculate the Wigner data.
Measure a gate of a circuit at the given qreg with a given operator.
A helper function to check the status of a string and print it to the console.
Displays the HTML - based status of the job. If monitor_async is True the
Simplify a single u gate.
Applies the layout to the given dag.
Build a tab to display the history of the job.
Convenience function to append a CN3 gate.
Builds a bell circuit.
Transpile circuit according to the passed - in configuration.
Get the current drive.
Get or set the control channel.
Get the current measure.
Acquire the lock.
Inverse of the input state.
Removes all logging handlers from the Qiskit logger.
Render an iplot state hint for a given state.
Parse the input and store the result in self. data.
Pop a line from the stack.
Push a new line to the lexer.
Returns the bound method of the instruction.
Convert an acquire instruction into a Qobj.
Convert a frame change instruction to a QObject.
Convert persistent value.
Convert a drive instruction to a QObject.
Convert a snapshot to a QObject.
Update the annotations of the given callable.
Convert a DAG to a circuit.
Takes a matrix of observable values and returns a dictionary of values where the values are the
Update the current symtab.
Verifies that the variable is a boolean variable.
Recursively verify the list of children of the given object.
Verifies if obj is a gate.
Make sure the register name is valid.
Verifies that all the children of an object are of the same type.
Find the current column in the input string.
parse debug value
Parses the input string and returns a QASM instance.
Parses the given data and returns a string representation of it.
Parses the binary file.
Adds a crz gate to this str.
basis_state = num_ where num_ is the number of bits in str_state
Return the density matrix of the element of the element of the element of the element if flatten
Calculates the plasticity of a state
Computes property_set for each node in the graph.
Runs the DAG for a given string.
Returns the Qiskit backend with the given name or None if no such backend exists.
The shape of the bipartite layer.
Yields register names and their max value.
Truncate a float from a regex match.
Build a LaTeX representation of the image.
Returns the number of columns and the number of columns required to create the image.
Determine the beam page size and aspect ratio.
Load a JSON schema from a file.
Loads all defined schemas and validators.
Generate a unitary random matrix.
Generate a random matrix with given size.
Generate a random density matrix for the Hermitian basis.
Generate a random density matrix from the bures of the current unitary distribution.
Returns the list of calls of this node s type and its children s name.
Calculate the power of the matrix.
Compose this subsystem with another subsystem.
Convert an instruction to a superop.
Run the circuit.
Applies the operation to each node in the graph.
Defines the definition of the qubit if num_qubits == num_.
Check the type of the value.
Checks the type of the value.
Set atol.
Determine the Rock Ridge operator depending on the dtype of the underlying array.
Residualize the input and output dimensions.
Returns the input dimensions.
Returns the output dimensions.
Make a copy of the current object.
power n.
Automatic product of the given dimensions and size.
Deserializes the given value into a string.
Tries to serialize the value of the key to an object. Raises validationerror if
Check if the value is a valid type for this field.
Computes the SVD of a matrix by applying a function to a matrix.
Return the inverse string representation of the current state.
Set the label of the Dataset.
Determines if the tensor is unitary.
Convert this matrix to a binary operator.
Convert this Kraus operator to an instruction.
Init the transformer for the given data.
patch imp. find_module to patch calendar module
Checks if a list of tokens are valid.
Split a string into a list of tokens.
Returns a datetime. time object for the given date_string using the settings specified in settings
Checks if the given date_string is valid. If strip_timezone is True then
Translate the given date_string according to the given settings.
Parse a string with one or more date formats.
Returns the number of exc in param1 if success is True else returns the number of exc
helper function to convert exception to http
Compose the config from the list of streams
get the current status of the result
Log the stdout and stderr to the log.
expands the time in str_time with the unit specified in default_unit
Read the configuration from the option file.
Reads the cached options from the si file and returns them as a stepperinfo object
Write the cached options to the si file.
Creates the stepper file and writes it to disk.
Creates a schedule in the form of a composite schedule.
Returns the rps at a given time.
Executes the given command and returns the exit code.
Decode the monitoring data into a list of points.
Returns a list of label points for a label for a given label.
Publish a key - value pair.
Counts the total number of matched codes in codes_dict
Stops the thread and closes the feeder.
feed the plan to the queue
Adds user - defined options to self. options.
Configures the application with the given options.
Collect the data from the cache and notify listeners.
Calls on_aggregated_data method of all registered listeners.
Discover the UDP port of the current process.
Terminate the subprocess.
Reads the data from the log file.
Returns a criterion instance based on the specified string.
Parse the XML file and return a list of host_config objects.
Create a config file with the startup and shutdown commands.
Checks disk free space and raises a runtimeerror if it s not enough.
Raise runtimeerror if memory size is less than self. mem_limit
Gets the right line from widget_output and returns it.
Add a info widget to the plot.
Fills the given list of lines to fill the rectangle.
Return the length of the line in the markup.
Adds a new info widget to the screen.
Makes a request to the writer url and returns the writer response.
Loads all registered plugins
Returns the plugin instance of plugin_class. Raises keyerror if no plugin matches.
Returns a list of plugins of a given type.
Collects a file into the build artifacts directory.
Adds filename as an artifact file to this repository. If keep_original is True then
Create a temporary file with the specified suffix and prefix.
Loads the configuration files into the config object.
Flush the config to the specified file.
Returns a list of the options in the config
Returns a list of sections that start with prefix.
Decode the statistics data from the given chunk.
Prepares the client for execution.
Check for new data to be received and send it to the reader agent.
Sends the monitoring data to all listeners.
Detects the current configuration
Handle data items
Subscribe to the given list of channels.
Connects to the event loop and runs the event loop forever.
Close the websocket and polygon.
Performs one request retrying if an error occurs.
Submit an order for a client.
Gets the current position of a symbol
Returns a list of assets.
Returns obj if obj is a dict else if it is a string.
Check if an object is a dict parameter and if it is a string return it as a
Constructs an event logger from a callback function.
Constructs a JSON event logger from a JSON file.
Read the configuration from a file.
Gets a pipeline by its name.
Returns a list of all defined pipelines.
Get the next event in the queue.
Execute a pipeline through a queue.
Waits until all of the processes are running.
Create a config field for a given config type.
Builds a new execution plan for the given pipeline definition.
Returns the solid name for the given name.
Construct the publish_comands string.
Set the current version to the given value and commit the new version.
Wrap each line of text into a new block with an initial_indent and subsequent_indent
Download the contents of a file from S3.
Upload a file to S3.
A context manager that wraps a user code execution error and raises it.
Create a new directory if it doesn t exist.
A context manager for the user code execution error.
Create a context - free log.
Returns True if any step is successful.
True if all step events have been skipped.
Get the transformed values.
step failure data.
Check if the config_value is a valid dataset.
Returns True if config_value is a valid table name.
Coalesce the execution steps of a execution plan.
Gets the connection parameters from the settings_dict.
Creates a new connection and returns it
Creates a new cursor.
Close the connection to the database.
Makes a model from a model_dict.
Converts a value to a list of model instances.
Overrides django. contrib. admin. Field. get_default_strings to include the
Converts the given value to a model instance.
Apply core_filters to the queryset.
Computes the probability density function for a uniform distribution of counts for a set of sizes
Computes the real part of the nfp_real function for the given counts and
Computes the set of partitions to select based on counts and num_part.
Calculate the c - value of a1 a2 r1 r2
Initializes slot attributes based on hashvalues.
Returns the size of this array as a string.
Merge this configuration with another.
Create a new instance of the same class as the union of two or more tables.
Query the index for the given hash and size. Returns an iterator over the keys in the
Calculate the minimum hash value for a given set of values.
Removes a key from the set if it exists. Raises valueerror if no such
Counts the number of elements in the log - normal distribution.
Merges another instance of this class.
Clear the register.
Computes the fraction of the values of the predicted vs the actual vs the predicted.
Computes the mean of the predicted values based on the mean of the predicted values.
Sorts the list of hashtables by their index.
Query the set of keys in the set that match the minhash. Returns a list of
Close the cache.
Get the user from the JWT.
Overrides the get_ social_login method to update the state of the social login.
Selects a single string from the given text. If the text is a string of text
Parse a scoped selector into a scope and a selector list.
Parse a statement.
Parse the value of the config.
Advance the current line by one line.
Parse the reference of the current token if it is a string.
Method to be called after a new session is created.
Ensures that the wrapped function is a function.
Format the value if it s a string and return the literal if it s a value.
Clears the configuration.
Finds a function or class that has the specified parameter.
Get the cached argument spec of the given function.
Given a function and a list of arguments return the names of the function s arguments.
Parse a config file and return the configuration as a string.
Parses a config value.
Recursively iterate over the values of a nested value.
Recursively iterate all of the configuration s references.
Creates a constant from an enum.
Returns a list of matches for the given partial selector.
Returns the minimal selector for the given string.
Transform the values of a sp search query.
Returns the number of seconds after the response header retrying after the given number of seconds.
Validate value with metadata.
Returns the resource as a property description.
Validate and set the value.
Return the thing at the given index or none if it is not a thing
Initializes the object with the given things and hosts.
Sets the default headers
Check the request headers to see if the host is set and if not raise a tornado.
get the details of the thing
Post a thing to the server.
Delete a thing.
Start the service.
Return the action as a string.
Starts the thing and perform the action notifying and finish the thing.
Notify user that the task has been completed.
Returns a string representation of the event.
Get the IP of the current node.
Returns a list of IPv4 and IPv6 addresses.
Set the value of the field and notify of external update.
notify of external update of new value
Returns a string representation of the thing.
Set the href prefix for all actions in this object.
Returns a dict of property names to property description.
Returns a list of human readable action descriptions.
Returns a list of event descriptions for the specified event name. If event_name is none
Adds a property to this object.
Remove property from this object.
Gets the value of the property named property_name. If the property does not exist
Returns a dictionary of properties.
Set the value of a property.
Get an action by name and ID.
Adds an event to this group.
Add an available event to the list of available events.
Performs the given action and adds it to the list of available actions.
Remove the action with the given name and id
Adds an available action to the list of available actions.
Removes a subscriber from the list of available events.
Adds a ws as an event subscriber to the list of available events.
Remove an event subscriber from the list of available events.
Notify subscribers of a property changed.
Notify subscribers of an action.
Notify the client of an event.
Annotate fields with annotations.
Perform an update on the model with the specified fields. Returns the number of rows updated.
Insert one or more fields.
Creates a new insert and gets the value of the field if conflict_target is set and
Builds a postgres insert compiler for the given list of rows.
Returns True if the field is a magical field.
Sends signals when a new model instance is saved.
Sends signals for model delete.
Resolve the expression of the expression
Return SQL for this query.
Return a clone of the object with the same alias and hstore key as the alias.
Adds join conditions to the join condition.
Checks if a field is a hstore field.
Create a new required constraint for a field in a table.
Rename a column in a table that has a required value.
Drops a required field from a table in the hstore if the field is not present
Generate a constraint name based on the given field and key.
Creates the sql statement and index statement for the given model based on the current version of Django
Retrieves the database backend base class.
Prepares the database.
Prepare value to be used by field in database.
Returns the name of the form that will be used for returning the form.
Returns a list of SQL queries that can be used to execute this query.
Retrieve the value of the conflict action in the insert or update operation. If return_id
Returns the SQL for the insert and update statement.
Returns the SQL string that was used when the insert was successful and the returning value was provided
Get a field from the query model.
Format the field name.
Formats the value of a field and returns it as a string.
Create a unique constraint for a field in a model with a list of keys.
Changes the unique constraint name between old_table_name and new_field for new_
Drops unique keys from the hstore for a given field.
Generate a unique constraint name for a given set of keys.
Compose the uniqueness of the keys for a given field.
Adds a new condition to the request.
Returns the SQL code and parameters for this query.
Returns the number of t_dist_95_conf levels for a given level.
Calculates the variance of two samples.
Calculate the T - score between two samples.
Determine if two samples are significant.
toposort a list of nodes in topological order.
Yields the n -queens of the input columns.
Selects a random part of the unexplored part of the unexplored
Make a random playout.
Given a list of benchmarks remove the benchmarks that are not in the list of benchmark
Recursively expand a benchmark name from the benchmarks in the benchmarks in the benchmarks
Initializes a list of benchmarks.
Returns the domain of the curve.
Fetch items of a given category
Parse a list of posts from raw_posts.
Returns the user object for the specified user. If the user is not found None is returned
Fetch entries for a given category
Fetch all the items for a given category
Setup the command parser for the backend.
Fetch category = category_bug from_date = from_date
Call the Bug API for the given bug.
Make a call to the comments API endpoint
Call the history API for the given bug_ids
Make a call to the attachment API
Fetch merge requests from the gitlab client.
Get a list of the merge requests for this project.
Merge this merge into a repository.
Fetch merge versions for a merge.
Fetch the merge version for the given merge ID and version ID.
Fetches the user s notes for a given item.
Fetches items of a certain type of item_type.
Fetch a list of items associated with a note.
Calculates the time to reset the rate limit.
Fetch the items for the given path in the repository.
Fetch rate limit and update repository.
Setup the command parser.
Fetch the latest message for a specific category
Returns the metadata id for a given item.
Get the number of members of a conversation.
Fetches channel information for a given channel.
Fetch user for the specified user_id.
Setup the command parser.
Return the timestamp of the metadata updated on the given item.
Parse the raw_csv of the buglist.
Yields bug details from given XML raw_xml.
Logs out the user.
Calls the API and returns the metadata as a dictionary.
Calls the buglist API
Calls the API for the given bug_ids and returns the response.
Calls the bug activity API for the given bug_id
Fetch events for a specific category
Fetch items for a given category
Fetch events for a given group
Fetch comments for an event.
Fetches the list of revents for a given group and event_id.
Fetch html question and parse number of html pages
Fetch comments for a given question
Builds question object from html question and comments.
Gets the API and returns the results in a generator
Get the html question with the given question_id.
Get the comments for a given post_id.
Parses the question s container and returns a dictionary of information about the container.
Returns the number of html pages in the question.
Parse user_info from update_info table.
Fetches all the items in a given category.
Returns a list of all theviews in the raw_data
Fetch the gerr28 representation of the current state of the user s gerr28 service
Returns the version number of the server.
Get thevalue of the last_item in the gerrit query.
Return the next retrieve group item.
Executes the given command from the archive.
Executes the given command from the remote host.
Setup the command parser.
Fetch issue data
Fetch attachments for given issue.
Fetch messages for given issue.
Fetch activities for given issue.
Fetch the user data
Get a user by user_name. If the user is not found an error is raised
Request an issue and return the response text.
Fetches the items for the given issue and collection.
Fetches items from the given path and returns them in a generator.
Get the user s subscriptions
Find the group id by looking at all subscriptions of this user
wrapper for requests. get
Setup the command parser for this class.
Finds all backends in a given package.
Fetch metadata from an archive
Remove classified data from an item.
Parse the command line arguments.
Adds the arguments to the parser if basic_auth is True and token_auth is
Adds the command line arguments for the archive command.
Sets the arguments group for the output command.
Run the main entry point.
Initialize archive manager
Return the timestamp of the metadata updated on the given item.
Yield message dict from mbox file.
Fetch a list of messages and parse them.
Copies the mbox into a temporary file and returns the path to the new file
Validate the message for this field.
Convert a casedict to a dictionary.
Returns a message from the file at the specified location.
Fetch the latest items of a given category from the repository.
Parse git log from a file.
pre - initialize git path
Setup the command parser.
Parse the log stream.
Creates a new instance of this class with the specified command and arguments.
Counts the number of objects in this repository.
Returns True if the git repo is already cached False otherwise.
Updates the git repository.
Fetch and update references from pack_name.
Returns a list of commits from the given packet name.
Updates references in the git repo.
Find the references to the remote git repository.
Update a git ref
Executes the specified command in a new thread and returns the lines of stdout and stderr.
Read the stderr of the subprocess.
Wrapper for subprocess. Popen.
Fetch items from a category.
Setup the command parser.
Fetch a set of hits for a given category
Fetches hits for a given category
Parse the HIT and return a dict of the number of hits
Returns the hits response from Google Search API.
Returns the timestamp of the last metadata updated on the given item.
Determine the category to use for metadata.
YieldpullRequest objects for the given date range.
Fetch repo info
Get reactions for a given issue comment.
Get a list of the requested reviewers for a particular pull request.
Get the pull commits for a project.
Get a list of Reactions from a review comment.
get user by login
Fetch reactions for a given issue.
Fetch the issues for this project.
Fetch pull requests for all issues in the repository.
Pull a list of the requested reviewers from the pull request.
Fetch the items for the given commit.
Fetches reactions for a review comment.
Get a user by login.
Returns the list of user orgs associated with login.
Get the number of tokens in the rate limit for a given token.
Gets the tokens rate limit for each token.
Update the current API token with the best available one.
Check if the number of tokens need to be checked.
Fetch the given url and update the current rate limit.
Initialize the metadata for this archive.
Stores the payload and headers in the archive table.
Retrieves an archive of the given payload and headers.
Create the archive at archive_path.
Verify that the archive exists and has the correct number of entries and metadata.
Loads the metadata from the archive file.
Counts the number of rows in a table. Returns the number of rows in the table
Create the archive
Removes the archive at archive_path
Search for archives matching origin backend_name category and archived_after.
Search all files in self. dirpath.
Generate a list of months between two dates.
Removes illegal xml characters from raw_xml. Returns a purged_xml string.
Yields an iterator of issues from the raw_json string.
Get a list of the issues that have been added to this project.
Gets the details of an existing issue.
Returns the user for the specified user_id
Makes the actual API call and returns the response text.
Fetch dockerhub data
Fetches the items for a given category
Fetches the repository for the specified owner and repository name.
Filter a list of fields based on boolean values.
Yield a generator of issues from the raw_page.
Yields the number of items for a given URL
Get a list of issues for this version.
Get the comments for the given issue
Fetch the url and return the fields as a string
Fetch all items for a given category
Returns the build details for the specified job.
Yields a list of question objects from the raw_page.
Yields a generator of the question objects from the API.
Setup the command parser.
Fetches the items for a given category.
Gets the maximum date in the given list of annotations.
1. 7 url generator
Calls the get_pages method of the API using the specified namespace and ap continue parameter
Returns a list of the most recent pages in the given namespaces.
Parse a message from a JSON string.
Filter a message by the chats in chats.
Calls the updates_method with the specified parameters and returns the response.
Fetch the items of a given category
Update metadata of an item.
Parse the article from an email address and return it as a dict. Raises parseerror
Fetches data from the remote server.
Fetch a single article and return its data
Fetch article from remote nnttpclient.
Call the archive s retrieve method and return the data or raise an exception.
Creates a requests. Session object for the HTTP API.
Sets up the rate limit handler.
sleep for rate limit if self. sleep_for_rate > self. min_rate
Updates self. rate_limit if self. rate_limit_reset_ts is
Parse a Supybot log file.
Returns a list of archive files from a given date.
Returns a list of the supybot archives.
Parse a supybot stream.
Fetch the items for a given category
Parse topics page
Get the details of a topic.
Get information about a post.
Yields the number of items in a category
Parse a list of tasks from a JSON string.
Parse the raw_json into a list of users.
Returns a generator of all tasks in the project.
Returns a list of transactions associated with the specified list of PIDs.
Get a list of phab_users for one or more phids.
Get a list of phids for a given list of phids.
Makes a call to the API and returns the response text
Get the metadata id for a given item.
Parse the summary of the contents of a JSON object.
Get the contents of the dataset.
Returns historical content.
Parses the result of the measurement.
Returns the capabilities URL for the given service_url.
Read the contents of a URL.
Read an XML string from the file - like object st.
Parse the result string and store it in self. result.
Builds the url from the url_query_string and the url_query_string
Construct a gml schema from a set of elements.
Constructs adescribeftype URL
Run a complex data input with reference to the output of a webprocessing service.
Gets the movie list for the specified movie.
Gets a list of files associated with the given path and sets its attributes to values.
Gets the info for the resource specified by the specified path and sets its attributes to values
Gets the alternative titles for the object with the given id.
Gets the requested object and sets its attributes to values.
Gets the external IDs of a resource.
Gets the list of keywords associated with the given string.
Gets the response object for the specified id path and sets its attributes to values.
Returns a list of release dates associated with the given release id.
Gets a list of releases associated with this application.
Gets the translations of a message.
Gets the values of the attributes of the object similar to the given string.
Returns a response object with the specified path and attributes set to values.
Gets the upcoming object for the specified path and sets its attributes to values.
Gets the currently playing game.
Returns a response object with the requested data.
Gets the top -rated resources of the resource specified by the specified path and sets the
Returns a list of account states associated with this account.
Creates a new rating.
Get information about a movie.
Returns a response object with the requested path and attributes set to values.
Gets information for the resource specified by the specified path. If the resource does not exist
Gets a list of the entities in the collection.
Gets information about this session.
Gets the watchlist for a given watchlist.
Creates a new token.
Validates that the user is authenticated with login.
Creates a new session.
Creates a new guest session.
Returns a list of the guest session attributes that were rated.
Get the status of a specific item.
Creates a list of the objects in the collection.
Removes an item from the collection.
Clears a list of session IDs associated with a given session.
Gets the rating of the content.
Returns a list of attributes that have the same value.
Gets and sets the values of the attributes on theair response.
Returns information about the requested season number.
Gets the requested season number.
Gets the series id season number and other attributes of the requested season number.
Gets information about a particular season and episode number.
Gets the season and episode number of a series.
Gets the external ids of a series and episode.
Set attributes to values.
Gets the collection resource for the specified path.
Gets the specified company resource.
Gets the value of a specific keyword in a resource.
Gets a resource by its path and sets its attributes to a list of values.
Normalize a string.
Counts n - grams of each reference in refs.
Return a cooked set of n - grams from a reference string.
Return the value of x in erfcc with respect to num_.
Return a list of aligned strings between the source and target blocks.
Recursively get descriptors in a module.
Register objects from JSON.
Register a descriptor to this registry.
Print the string s to the terminal if self is not defined.
Returns True if desc is a descriptor class.
Returns a JSON representation of the object.
Return the coordinate of the node.
Calculate the atomic Sle for an atom with index i.
Returns the surface area of the surface.
Create a str from a molecule.
Converts the JSON representation of an object into a mordred. descriptor. descriptor.
Fill missing values with value.
Drop missing values from the molecule.
Return a tuple of the keys and values of the record as a list of strings.
Return a dict representation of the collection.
Get the name of the underlying array as a string.
Print a progress message if not in a tty.
Prints a message to stdout.
Convenience function to exit with an error message if an exception is raised.
Gets a random file and adds it to temp_files list.
Set a tempfile to a given target.
Clean up temporary files.
Returns the fixed path of the file.
Returns a list of the params to use for a given method.
Merge the parameter values of an option with the value of another option.
Add command - line options.
Terminate the task queue.
Add a task to the queue.
Joins all the tasks and workers.
progress bar for tasks that have been processed
Get s3 keys from environment variables.
Get the s3 keys from the command line options.
Get the s3 keys from the option s s s s s3cfg
Initializes the s3 keys from the given option or from the env or s3cfg
Connect to the botoclient.
Walks a directory tree and returns a list of local files.
Expand a list of S3 source strings into a list of strings.
Upload a single file from the source path to the target path.
Put files from source to target using threadpool.
Create a new bucket
Update an existing object s permissions to the specified target.
Prints the contents of a list of files.
Download a single file from S3.
Returns a list of files from the source directory to the target directory.
Copies a single file from source to target.
Copies a list of files from source to target using threadpool.
Delete a set of files from an S3 source
Recursively walk a directory and return all relative paths
Sync a set of files from source to target.
Calculate the MD5 hash of a file.
Returns the MD5 hash of the file.
Make the target directory if it doesn t exist.
Check if the remote md5 is the same as the local md5
Match a path with a pattern.
Given a URL walk through the S3 bucket and return a list of objects.
Return a conditional if the object is between the last_modified_before and last_modified
Returns the oct of the file at the specified path.
Fetch object by S3 URL.
Read a chunk of data from a file.
Verifies that the downloaded file is the size of the object.
Write a chunk to a file.
Run the command with the given arguments.
Check if format is valid.
List buckets and walks.
Handle the s3 create_bucket command.
Handler for put_files.
Returns a list of S3 files that match the specified arguments.
Handle the cat command.
Handle the dsync command.
Call the s3 cp_files function
Copies the specified source file to the specified target file.
Delete a file from S3
S3 handler to display the contents of a file.
Handler for the total size message.
Match the given string s date to the given value.
Returns the time of the value if it matches the regex. Otherwise returns the time of the
Match delta.
Check if the value is a dict
Get a message from the hub.
Push data to the pusher.
Encrypts the token with AES - CBC and returns the private key.
This function is called when an exception is raised during the execution of a job.
Create a stream handler if it doesn t already exist.
Returns the request object in a human readable format.
Report a message to the log.
Creates a log file handler for the given string.
Build person data.
Add data to the current Lambda context.
Add the request data to the data dict.
Returns True if frame_num is equal to total_frames and if frame_num is
Build request data.
Builds the server data from the current process and settings.
Builds a payload from a dictionary of settings.
The entry point of the rollbar script.
Compose a character.
Decomposes a Unicode string into a Unicode string.
Check if the first letter is a jong unhangules.
Attach the first letter of the last letter of the given word to the next letter of the
Check if the current node is inside an except node.
Check if the node is inside a lambda function.
Recursively get all elements of the given node.
Return a tuple of bool and None for an except node.
Check if the given node is a super node.
Return True if the given node is a raise node.
Check if the node is a function decorator.
Check if node is an ancestor name.
Return the parent of the given node.
Given a format_string return an iterable of all string fields.
Get the argument name from a call node.
Return true if the node is not part of the standard exception module.
Check if the function is decorated with a property decorator.
Check if func is decorated with the given qnames.
Find the try except wrapper node.
Check if the given node is a from - fallback block.
Return the exception handlers of the given node.
Check if the given node should ignore the given exception.
Check if the node is an abstract method.
Return a safe infer value for the given node.
Return the type of the given node.
Check if the postponed evaluation is enabled.
Returns a list of the qualified names of a module.
Get the absolute name of the given import node and module name.
Helper function for _repr_tree_defs.
Construct a dependency graph for the given filename and dep_info.
Check if the given node is an imported module.
Check if the given node is an imported module.
Add a message for the first non - imported node.
Add an import node to the stack.
Check if the given import is relative to the given module node.
Add an imported module to the internal import graph.
Check if the module is in the deprecated module.
Check if the given module path is in the list of preferred modules.
Report the external dependencies of this dependency.
Filter internal and internal packages in the dependency graph.
Get the default options from the rcfile.
Inserts the default options into sys. argv.
Returns True if the given node has no visible attribute.
Get the callbacks for a specific node.
visit a string node by returning a none node
Check the consistency of this checker.
Check function call.
Check if the node is a datetime.
Check if the given node is an open mode.
Adds a message to self. messages.
Returns the title for the given node.
Sets options based on the default values.
Return True if the given node is a built - in node.
add class node to classdiagram
Get the ancestors of a node at the specified level.
Return the number of nodes associated with the given class at the given level.
Extracts classes from a node in the class diagram.
Return a tuple containing the packages and class diagram of the specified node.
visit an ImportFrom node by adding it to the packagediagram if needed
Classdiagram is a classdiagram of the specified class. The classdiagram is
Returns diagrams of the project s diadef diagrams.
Check if the owner has any of the ignored_classes.
Return a list of possible node names that are similar to the given attribute.
Emit a no - member AST node.
Check if the node has a parent of the given type.
Returns True if the name is used as a varidimension of the given name.
Check if the node is not in the context of a given vari isdigit.
Check if the given node represents an assignment.
Check if the function is uninferable.
Add type error message for unaryop AST node.
Yield all the interfaces of the given node.
Converts a list of file paths into a project.
Set the uid for the package for this node.
Set the type of the function definition.
Set the value of the node s name to a list of values.
Handle AssignattrType nodes.
Visit an import node.
visit an ImportFrom node by finding the module part of its name
Computes the number of modules in the project that match the given module path.
Imports a module from the given node and adds it to the module s depends list.
Register the report functions.
Handle a message.
Handles a message.
Writes the graph attributes to the open file.
Writes an edge to the XML file.
Process a non - raw string token.
Increments the number of children of this section.
Append the number of children of this section to the end of the evaluation section.
Parse the content of a table in a given layout.
Add arenamed message.
Register messages from a checker.
Register a message.
Check for the duplicate message ID for the specified symbol.
Raises an invalidmessage error with a duplicate symbol.
Raise an invalidmessageerror with a duplicate message id.
Initialize the builder.
Returns the number of CPU cores on the current machine.
Process the messages stats and append it to the list of nodes.
Fix sys. path by adding the new path to sys. path.
Load plugin modules
Loads the configuration of the dynamic plugins
Set the value of an option.
Register a checker.
Checks that the 3 - porting mode of the configuration is set. If it is
Returns a list of checkers that are not self.
Returns a list of the names of the current checkers.
Returns a list of the checkers that are enabled.
Takes a list of modules and expands them.
Set the name of the current module.
Check if the given node is a module.
Evaluate the evaluation and display the results.
Exit on error.
Prints the full documentation and exits.
Handle the list_messages option.
Print the names of the groups and exit.
Normalizes the given text.
Get the module and frameid of the given node.
Decode a line to the given encoding or lookuperror.
Return the basename of a file if it is in a blacklist.
Register all plugins in the specified directory.
Create a comment from a string.
Recursively format option value.
Format a section in INI format.
Format a list of options and print it to stream.
Inserts a new child at the specified index.
Append a child node to this node.
Returns the list of parents of this node.
Format this text with the given layout using the given stream.
Compute the content of a table.
Compute the content of the given layout and yield it as a string.
Collect the line numbers of all the blocks in the module.
Handle an ignored message.
Register a report with the report checker.
Add new stats to self. stats.
Gets the name of the setter property of the given node.
Gets the setters property of a node.
Return True if the return value of the function is True and the return value of the function
Return a list of possible exception types for the given node.
Processes a module and adds a message to the module s list of managed messages.
Process a module and check its encoding.
Process the tokens of the token stream.
Check if the given name is from a future import.
Return True if the statement is in a for else branch.
Return the overridden method of the given method name.
Get the extra information for an infered node.
Check if the assigned name is local.
Mark a node as consumed.
Check if a function is in the upper function scope.
Check if the given node is anunpacking node.
Recursively check if all class definitions are used.
Recursively get all the packages in a directory with the given prefix.
Copies the contents of the install_lib into the current install directory.
Create a table of similarities between old_stats and new_stats.
Runs the parser and exits with an error if any of the options are not specified.
Appends the given stream to the end of the source code.
Computes the set of simulations of the sequences.
Displays the nb_lignes and nb_total_lignes in the
Find the common lines between lineset1 and lineset2.
Iterate over all simulated lines in the corpus.
Like enumerate_stripped but preserves the offset of the first num_ lines.
Create a dict of the index of the str.
Check if the attr_name of node_a is equal to attr_name of node
Determine if a overridden overridden has different parameters.
Safely return the value of the call result of a function call.
Add a node to the scope that is accessed by this scope.
Check class definition.
Check if the given node is an instance of the same class as this one.
Checks the bases of the node s base classes.
leave functiondef node
Check if the node is in the slots of the current class.
Check if the first attribute of the node is the same as the last attribute of the node
Check if the node is a mandatory method parameter.
Check if the body israising.
Check if the node s cause is not None.
Displays the report in the given layout.
Check if the node is a typing namedtuple.
Check if the node is an enum class.
Check if the given node is a dataclass.
Check if the class definition is too large.
Leaves a classdef node. Returns True if the node is not a dataclass or
Increments if if statements are true.
Check if the number of boolean expressions is greater than the maximum value of the booleanop node
Check the docstring of the given node.
Returns a formatted string representation of the template.
Check if the given node is the actual elif.
Check if the current node is the same as the actual if node.
Check if a stopiteration should be made inside a generator.
Returns True if any of the class in the given exception is inherited from the stopiteration.
Check if any nested blocks are in the function definition.
Check if the given node is an instance type.
Check that the node is not the same as the one in the list of class names.
Return True if the current node is and or its value is a string and the value is
Check if the given node has the same value as the explicit returns.
Check if graphviz is available and exit.
Calls the project_from_files function. Returns the number of project files created.
Write packages to diagram.
Write the class diagrams.
Set self. printer and self. file_name.
Open the printer graph and set the printer emit_node and emit_edge attributes.
Returns a boolean indicating whether or not this package may be emitted.
Format the help message.
Get the current environment as a dict.
Recursively find all cycles in the graph and append them to the result.
Generates the dot graph.
Pretty - print a section and its options.
Disable a managed message.
Enable or disable a managed message.
Return the symbol for the specified message.
Check if a message is enabled.
Add a message to the graph.
Gets the indentation length of the line.
Helper function for _get_indent_hint_message.
Calculates the line indent required to indent the token at the given index.
Handle line start.
Get a tuple of valid_indentations and a dictionary of valid_continuation_strings
Return the next - indent level after a bracket.
Return a function that calls acontinuation function inside the bracket at the given position.
Pushes a token at the specified position.
Creates a new line.
Check if the token at i is a valid type annotation.
Check if the token at index i is a valid type annotation or not.
Check if the token is surrounded by a space.
Check if the given node is a statement or not.
Check the line number of a multi - statement statement.
Checks if the level of the string matches the expected indent level.
Check if the given function is in an iterator context.
Return True if the node is a conditional import.
Check if the name is a function name.
Check if the subscript is an instance of a subscript.
Check if the value of the attribute is an instance attribute.
Check value of raise node.
Returns the absolute path to the pylintrc file.
Validates the given value against the optdict. Returns the value if valid or None if
Registers a new option provider.
Set the value of the provider option.
Sets the value of an option in the global config.
Generates a config from the options provider.
Loads the configuration file into the global config object.
Load the configuration from the command line.
Adds an option section to the cmdline_parser with the specified title description and level.
Set the output level of the help command.
Loads default values for all the options.
get the name of an option
Returns the value of the option with the given opt. Raises an optionerror if the
Yields all the options associated with a particular section in the configuration.
Return True if func is a method call.
Check if the given node is a string in a complex format.
Imports all logging modules that are part of the given logging module.
visit an ImportFrom node by adding its module name to self. _from_imports
Add logging names for all modules in logging_modules.
Check if the format_arg is a string or not.
Check if the node is in a loop.
Get the parent node of a break loop node.
Does the loop contain a break loop?
Returns a set of property classes and a list of property names.
Determine function name type.
Calculates the percentage of a node s stats and report it to the user.
Return True if the call is a function call and the number of its arguments is equal to
Handle starred calls.
Check if the call of the function is abstract.
Check if the else statement is on a loop.
Check if the node is in a loop.
Open the linter.
visit an expression node by returning a message if the expr is a string
Check if node. fail is not None and its length is equal to num_.
visit a dict node by returning a list of keys
Check if node is not in breaker_classes.
Check if the argument is a reversed function.
Check the docstring of a function.
Check if the given literal is a comparison of the given node.
Create a subgraph of node and append it to self. graphs.
Parse the subgraph of the given node.
visit a module node by applying a preorder traversal of its children
Walk the current AST tree.
Add a relationship to the collection of relationships.
Get the relationship for the given object and relation type.
Get the names of the attributes of the given node.
Adds an object to the diagram entity.
Return a list of class names for the given nodes.
Return objects that are classes.
Returns the class instance corresponding to the node with the given name. Raises keyerror if
Returns a list of modules in this node.
Returns the module corresponding to the given name. Raises keyerror if the module is not
Returns the module corresponding to the given module name and node. Raises keyerror if the
Add a from depend node to the list of dependencies of the given module.
Delete the object from the cache.
Returns the query string of the model.
Get a user by username and password.
Get the first token by either an access_token or a refresh_token.
Set a token for a client.
Set a grant for a client.
Get a client by its id and code.
Prepares a request to be sent to the server.
Initializes the extension for the given app.
Create a remote oauth remote app.
Redirect to authorize URL with the user s access token.
Handle the response of the OAuth1 access token.
Handles the response of the OAuth2 access token request.
Returns the response to the authorized user.
Hash a token.
Make a client with a token.
Creates a client for the given token.
Yields the insecure transport as a context manager.
Try to confirm the authorization request.
Gets the client secret from the request.
Returns the request token s secret or none if there is no request token.
Get the secret from the request access token.
Returns a list of realms for the given request and token.
Returns the redirect URI for the given token and request.
Get request. client. RSA_key
Validate the client key.
Validate the request token.
Validate an access token.
Validate the timestamp and the nonce.
Validate the redirect URI.
Validate the realms of a token.
Validate theverifier for a given request.
Verifies the request token.
Verifies that the given token is valid for the given realms and request.
Attempt to confirm the authorization request.
Authenticate the client and update the request. client attribute with the client id and secret.
Authenticates a client id.
Gets the original scopes of the refresh token.
Returns True if the refresh_token has the specified scopes.
Gets the default redirect URI for a client.
Returns a list of the default scopes for the given client.
Invalidates an authorization code for a client.
Saves an authorization code for a client.
Saves a newbearer token.
Validate a bearer token.
Validate client id.
Validate the code for a given client.
Validate the grant type.
Validate a refresh token for a client.
Checks if the response_type is in the client s allowed_response_types list
Validate the scopes for a given client.
Validate the username and password.
Revokes the given token for the given request.
Updates the data dictionary for a qq_app_id from the API request.
Converts all string keys in a dictionary to their string representation.
Change the header of the request if it is present in the request headers.
Register a user to this Oauth instance.
Create a new remote application.
Extract parameters from a request object.
Convert text to bytes if text is not already bytes_type.
Decode a base64 string.
Create a response object with the specified headers body and status code.
Get the cached clients for the current application.
Adds a remote app to the client.
Add a remote application.
Check the public key if any exception is raised
Make sure all the keys in the certificate are all the small ones
Checks that the load_privatekey callback is called each time a new private key is
Check if the private key callback was successful.
Check if the load_privatekey callback is wrong type.
Checks that the certificate revoked after a given number of iterations.
Check the revoked X509 revoked certificate.
Create a certificate request
Create a certificate.
Use the specified X. 509 certificate chain file.
Use a X. 509 certificate.
Use the given X509 certificate.
Add an extra chain certificate to the SSL context.
Configure the ssl_ctx to use a private key file.
Use the given private key for this SSL context.
Load the client CA from a file.
Set theverify depth for this SSL context.
Load a temporary certificate file.
Set the list of cipher list for this SSL context.
Set the client CA list for this SSL context.
Add a client CA certificate to this SSL context.
Sets the use of the TLS session on the given profiles.
Set the npn_select callback for this SSL context.
Set all of the protos for this SSL context to the given protos.
Set the ssl_ctx_set_alpn_select callback.
Sets the callback helper and data.
Set the SSL context.
Returns the string representation of the server name.
Set thetlsext host name.
Receive data from the underlying SSL socket.
Reads data from the socket and returns it as a buffer.
Determine whether or not the SSL renegotiate is pending.
Shuts down the SSL connection.
Returns a list of all of the cipher strings associated with this SSL connection.
Returns a list of client ca names.
Set the shutdown state of the SSL connection.
Return a random server.
Return a random client.
Return the master key for this SSL session.
Export the keying material of a given key.
Return the underlying SSL session.
Returns the current cipher name.
Get the number of bits in the current cipher.
Return the version of the current cipher.
Returns the protocol version name of the SSL connection.
Get the next negotiated proto.
Set the protos for this SSL connection.
Returns the underlying underlying SSLv2 message if the underlying SSLv2 is negotiated
Convert a bio to a string.
Set theAS1 time in the specified time range.
Convert a timestamp to an ASN1 time string.
Get an elliptic curve by name.
Dumps a public key in PEM or asn1 public key.
Load a public key from a buffer.
Sign data with a private key.
Verifies the signature of the data with the specified digest.
Dumps a X509 certificate into a string.
Returns the cryptography key associated with this instance.
Check if the key is valid.
Load the elptic curve curves from the lib.
Get the elliptic curves from the specified lib.
Convert this curve to an EC key.
Returns a string representation of the x509 name.
Returns a list of component names and their value.
Returns the short name of the extension.
Return the data associated with this extension.
Convert this certificate to a cryptography object.
Set the public key for this certificate.
Return the public key associated with this certificate.
Get the name of the subject.
Add a list of extensions to this X509.
Return a list of extensions.
Verifies that the private key is valid. Raises an error if the private key is
Convert this x509 certificate to a cryptography object.
Set the version of the x509 object.
Get the public key of this x509 object.
Set the public key on this x509 object.
Sign the digest with the private key.
Returns the digest of the x509 object with the specified digest_name.
Set the serial number of the certificate.
Returns the serial number of the certificate.
Make sure we are not after the given amount. If amount is not an int raise a
Make sure this certificate is not before the given amount. If amount is not an int raise
Returns True if the time after which this job has expired.
Get the name of the issuer.
Set the issuer name.
Get the name of the subject.
Set the subject for this certificate.
Add one or more extensions to the x509 object.
Return the extension with the given index.
Add a certificate to the store. Raises typeerror if the certificate is already in the
Add a certificaterl to the store.
Set the time of this certificate.
Initializes the x509 store context and raises an error if the store was not initialized.
Return an exception for this x509 store context.
Verifies that this certificate is valid.
Set the serial number of the certificate.
Returns the serial number of this certificate.
Set the reason for the certificate.
Return the reason for the certificate as a string.
Set the revocation date of the certificate.
Return a cryptography string representation of the certificate.
Return the revoked state of the certificate.
Get the name of the issuer associated with this certificate.
Sign the certificate with the given key and digest.
Export a certificate to a key.
Returns the type name of the object.
Set the list of CA certificates
Sign the digest with the private key.
Verifies that the given key is valid.
Returns a b64_encode of the string encoded.
Get the public key of this space s private key.
Set the public key for this space s private key.
Return an exception of the given type from the error queue.
Returns a dictionary of metadata for the service.
Returns a generator of issues for each card in the board.
Build annotations for a card.
Returns a generator of board objects
Returns a list of lists for a given board.
Returns a generator of the cards in the specified list.
Get comments for a card.
Returns the API URL for the specified path.
Gets the JSON representation of a given URL.
Convert a string field to a dict.
Returns a list of issues matching the given query.
Gets all of the operations with the specified tag.
aggregate issues from the set of main_section and main_section.
Get a config value or return default if it doesn t exist.
Return True if the issue should be included
Make a reST table from a list of lists
Runs a command and returns its stdout and stderr as a string.
Returns the int value of the option in the section. If the section option is not a
Pull the latest issue.
Gets data from a given URL and returns it as a JSON string.
Yields a collection of values from a given URL.
Parse a sprint string and return a dict of the fields and the number of entries.
Gets credentials from file and creates a new one if needed.
P - values correction pvals - values to be corrected by the ecdffactor
Compute the z - score of a 2d array along an axis.
Adjust the spines for a particular axis.
Prepare the argumentparser.
Adds the enrichr argument parser to subparsers.
Compute the G sea p - value.
Returns a pandas series of the available mart names and descriptions.
Return a dataframe of the available datasets.
Returns a dataframe of the attributes of the dataset.
Returns a dataframe with the filters applied for the given dataset.
Set the number of cores to use.
Loads a GMT string for a list of genes.
Get the list of libraries in a database.
Downloads the libraries from the enrichr server.
Determine the heat matrix of the data.
Loads the data into a pandas. dataframe.
Run samplespermu function.
Save the resultson samples to a CSV file.
Parse the enrichr genesets from the enrichr library.
Send gene_list and descriptions to url.
Returns the sum of the genes in the user s list of user s gene_list
Transform a cube script
Applies a text layer to a script that has a certain radius and subdivisions.
Create a set of hires for a cube.
Returns a tuple of the red green and blue values for a given color.
Check that var is a list of num_terms and exit.
Make a list of strings.
Writes a filter XML document to the script.
Merges a script with averted one.
Splits a script intoverts andverts based on the number of displacement ratio
Translates the given value with the given script.
Rotate a script by angle.
Scale a script by a given value.
Calculates the Correlation Co between two functions in a script.
Wrap a script to a cylinder function.
Compute the curve function from the deformation of a script.
Writes a script to a. tex file.
Writes a mesh2fc filter script to the file - like object script.
Voronoi algorithm.
Applies a filter to the script and returns none.
Writes a script to create averted version of the script.
vert a script to a cylindrical mesh.
Computes the sphericalvert of a mesh.
Renames a script.
Change the active layer in the script.
Creates a copy of the current or new layer.
Delete a script lower - cased.
Inserts a new layer into the script file.
Adds a new layer to the stack.
Save the current state of the script to a file.
Applies a filter to a script and returns the result as an XML string.
Measure the topology of a filter script.
Parse the hausdorff log file.
mp_atan2 - mp_atan. txt
Computes the cross product between two vectors.
Computes the dot product of two vectors.
Writes a filter script in depth mode.
Sort a polylinesort file by element
Measure all features in an mlx file.
Lower case of file extension.
Get the configuration of this upload.
Returns the URL for the given file.
Returns the full path to the specified file.
Check if the given extension is allowed.
Resolves an existing file with a name and extension that already exists in the target folder
Returns the version number of the vprof file.
Remove duplicate objects preserving the seen set.
Returns the difference between the objects in objs1 and objs2.
Takes a dictionary of objects and formats them into a human - readable list of strings.
Returns the trace memory usage of the given frame.
Return the list of code events associated with the function.
Return the number of times the object is overhead.
Compute the memoryoverhead of the process.
Run the profile package for the given run object.
Profile the given module.
Run profile function.
Run profile and return the result.
Returns a list of all the module names in a package.
Run a function in a separate process and join its output.
Takes a string and returns the type of the run object.
Initializes the profile module for the given run object.
Initializes the profile and args for this run_object.
Initializes self. profile_function self. _run_object self. _run_
Replace self. _run_args with a list of strings.
Sample a given signal.
Insert a stack of samples into the call_tree.
Returns the total sample count for a node and its children.
Recursively format the tree.
Return a call tree.
Profile the given package.
Profile a module.
A profile function that calls this object s function.
Transform the statistics from a profiling object into a sorted list of strings.
Profile package for the given profile.
Profile the module of the profile.
Run the profile function and return the result.
Show the guestbook.
Adds a new entry to the database.
Starts statsserver.
Returns the content and the content of the profile. html file at the root of the project
Handle other files like. res_filename and. res_filename.
\ x1b [ 1mNAME \ x1b [ 0m GET - Get
\ x1b [ 1mNAME \ x1b [ 0m do_post
Sends the given http_code and message if headers are provided.
Check if a string is in the standard library directory.
Record the line number of the line that generated the event.
Yields lines without standard library.
Calculates theheatmap of the runtime of the module at lineno and adds it to
skip_map is a map of line numbers to strings. skip_map is a map
Returns a profile of the package that is used in the profile.
Format a heatmap for execution.
Profile a module.
profile the function and return the result
Run a Profiler for the given run object and return a dictionary of statistics.
Runs the given function with the given options and returns the result.
Return probability estimates of each element of x.
Return the log probability estimates of the given x.
Fit the model to the given spmatrix.
Count the number of documents in the corpus with the specified vocabulary.
Sorts features according to the vocabulary.
Remove terms that are in the features in x that are not in the vocabulary.
Transform a Z matrix using its fit method.
Transform a Z matrix by calling transform on each element of the Z matrix.
Return a string representation of the distribution.
Fit a Spark model to the data.
Predict the class of x using the Spark predict method.
Fits a sparklinear regression.
Fit the model to the given data.
Fit the model to a new data set and then transform it.
Calculate the score of the current layer.
Compute the score of an estimator.
Trains k - means clustering.
Predict the class label for x.
Predicts class label for input x.
Check the type of an RDD s columns and values.
Fit model to z and transform the data.
Apply a transform to the given element of z.
Collect the elements of an iterator into a block collection.
Yields the elements of the iterator in a tuple with the elements of the iterator in
Return a block from the first element of the RDD.
Apply a function to each RDD in this RDD.
Return the shape of the array.
Convert the RDD to a numpy array.
Return the bitperm of perm and pos.
only write to root write
Reads the config file and prints it.
Parses the config from the file.
Runs a command as a command and returns the output as a list of strings.
Wrapper for subprocess. Popen.
Execute a command over SSH.
Check if the config is valid.
Returns a dict of headers for this request.
Returns the URL to this assistant s configuration.
Returns the URL for this configuration.
Returns the text representation of the packet.
Prints the discovery message to the console.
Discovers all devices with the specified interface.
Executes this command.
Send the message to the confirmation channel.
Function called when a new device is added to the queue.
Executes the specified device.
Scan devices and settings for a given string.
Returns the absolute path to the ledger file in the environment or none if the ledger
Installs the given session and runs tests in it.
Convert a textio. Text object to a textio. Text object.
Returns an iterable of the supported characters in the VUans font.
Encodes the given iterable of characters with the given encoding.
Calculate the mapping from character to length.
Writes a JSON file with the mean statistics of the characters in the text.
Convolve a 2d gaussian kernel with a 1d kernel.
Get the kernel of a gaussian.
Convert an image to agrayscale.
main entry point.
returns the value of the ssim image
Compute the Sim value between two images
Remove the instance from the database.
Set the new code version.
Get the status of the project
Log the current status to the console.
Returns the node associated with the given connection.
Check if the node is ready to bind and if not raise transportnotreadyerror.
Called when a new incoming connection is received.
Callback function to be called when a command fails.
Determines whether or not the node should be connected.
Connect if necessary for a single node.
Callback function that is called when the node is connected to the given connection.
Callback function that is called when the node is connected to the other side of the connection.
Removes a connection from the connection pool.
Add a node to this syncobj.
Remove a node from the topology.
Send a message to a specific node.
Adds an item to the queue. Returns the new string if the queue is too large
Put an item into the heap.
Get the next item in the queue. If the queue contains no such item return the default
Try to acquire the given lock.
Returns True if the lock is acquired False otherwise.
Release the lock with the given lockid.
Creates a new connection to the specified host.
Create indexes with given names.
Migrates the number of existing indexes to new ones.
Strip the metadata from the report.
Save one or more aggregate reports to kafka
Extract XML from a file - like object.
Parses the aggregate report XML file and returns the result as a dict.
Parses a list of forecastic reports into a CSV file.
Parse the aggregate report file.
Returns a list of strings representing the Imap server s capabilities.
Saves forensic reports to splunk
Decode a base64 encoded string.
Get the reverse DNS record associated with an IP address.
Converts a human - readable timestamp to a datetime.
Get IP address info.
Converts the given message bytes into an email formatted string.
Convert a string to a list of strings.
Parse a report file and return the results.
Drain the internal state of the client.
Publish a message to a subject.
Publish a request to the errconnection.
Publish a reply to a subject.
Subscribes to a subject asynchronously.
Unsubscribe from the subscription list for a specified configuration.
Send the ping and wait for it to finish.
Try to select the next server.
Process the err message.
Process the error of an operation.
Returns the command to connect to the server.
Process the incomingpong.
Process a message from the client.
Process the given info string.
A flusher that reads the pending data until the flusher is complete.
Read loop.
Loads a set of features from a numpy array.
Load features from images.
Correlation function for Pearson Correlation Coefficient.
Computes the dot product of the feature images.
Selects a subset of features based on a regular expression or a feature selection of a feature
Get feature order of a dataset.
Classify a dataset x y using a classifier method.
Method to fit the classifier.
class_weight can either be str_ or none.
Fits a cross validation of the feature selection using grid search.
Fit the classifier to the given dataset.
Get random voxels from an image.
Get top num_top_words from a model and return them as a list of string
Compute the Pearson correlation coefficient
Calculate the Fourier transform of a 2D array.
Load activations from a file.
create the image table
Returns the feature names of the given features or if features is none returns the feature names of
Returns a dictionary of feature counts at a given threshold.
Loads a previously saved dataset.
Save the feature table to a file.
Returns the ordered list of column names for the given features.
Returns a list of features that match the search string
Return a list of ids matching a given expression.
Convert the SDF to a sparse matrix.
Transform a 2D Foci matrix to a 2D Foci matrix.
Converts xyz_to_mat from foci with specified dimensions.
Applies the given function to the given foci.
Get a mask of the image.
Load images using a masker.
Save image data to file.
Set the logging level.
Parse an address into an address object.
Convert a dict to an object.
Get the price of a ticker.
Gets a file or a list of files from the server.
Performs a request and returns the response.
Get information about the bearer.
Make a request to the service and return the response.
Fetch album tracks
Get a single artist.
Get the album of an artist.
Fetch top tracks for a single artist.
Get information about the artist related to the given spotify.
This API endpoint allows you to query the API for the provided spotify IDs.
Fetches a category by category_id.
Returns a list of playlists for a given category.
Returns a list of user s categories.
Get the featured playlists.
Send a request to create new releases.
Send a request to retrieve the following of a list of users or a list of users.
Get the albums for this artist.
Get all albums in an artist.
Get the total number ofalbums in this artist.
Gets the currently playing game.
Gets the current player.
Get available devices.
Returns a list of recently played events.
Replace one or more tracks with a playlist.
Create a new playlist.
Get a list of playlists belonging to this playlist.
Gets the tracks associated with this album.
Get all tracks for this user.
Generate an OAuth2 URL.
Get album by its identifier.
Get an artist by its identifier.
Get a single track by its identifier.
Get a user by its identifier.
Get album by their ids and market.
Fetches artist data for a list of strings.
Convert a string to an id.
Create a client object from an existing client.
Generate an OAuth2 URL.
Return a dict of the attributes to be sent to the client.
Returns a string representation of the parameters of the model.
Build a playlist track.
Gets all the tracks of this playlist.
transfer a device to the player.
A helper method for making HTTP requests to the HREF endpoint.
Get the whois data.
Converts a string to a month or a month name.
Updates the URLS for the code in the pyfunceble directory.
Check if the current version is greater than the version in version_yaml.
Checks if the current version of the git repository is the dev version of the git repository
Returns True if the current version is newer than the version in the version yaml.
backup the log file
Restore the backup content
Returns a list of strings that should be ignored.
Takes a list of options and returns a list of options.
Extract the url s base from the element.
Recursively format the data in to_format.
A helper function to check if the request has the required HTTP status code.
Get the value of the http_code field if it exists else return none.
Check if the domain is valid.
Checks if the given domain is a subdomain of the current configuration. Returns none if
Check if an IP address is valid
Checks if the ip is a valid IPv4 range
Check if URL syntax is valid.
Load the configuration from the current directory.
Prints a random number to the terminal if it doesn t exist and if it doesn t exist
Download entry management URL.
URL to the entry management file.
Print the header if it exists otherwise print the header.
Process a specific file that has a certain status.
Print the domain and status of the function.
Returns the URL to the function.
colorify the logo
Returns the extracted domain if it starts with the given string. Otherwise returns the extracted domain.
Returns a list of domain names found in the domain file.
Return a list of the file to be read.
Returns a list of the url of the file
Get the next task for the given string if the expiration_date and the status of the
Returns the status file of thefunceble.
Get and update structure from configuration.
Create the given directory.
Remove the needed entries from the data structure.
Set the path to the configuration file.
Install the production config.
Install the iana configuration.
Install the PSL configuration.
Download and install the directory structure file.
Merge self. new_config with self. upstream_config and self. new_config
Loads the configuration from the config file.
Split version into digits and non - digits.
Check if the local version is a member of the upstream.
Check if the file or directory iscloned.
Handle a non existant index.
Returns the path to the output parent directory of the funceble module.
This method prints the unified file.
Returns a unified file of the status of the task.
Determine if the file is not present and if it is not in the pyfunce
Adds the line extension to the public_suffix_db
Load the contents of this object as a JSON string.
Returns the standard regex for the given element.
Load the data from the database
Returns if the referer is associated with the specified extension or none if the referer is
Yields the extensions found in the upstream lines.
Updates the configuration
Mine the request.
Retrieve the configuration from the file.
backup the file
Add new elements to the list
Remove an entry from thefunceble configuration
Returns a list of the mined elements of thefunceble configuration
Process the configuration of thefunceble.
Get the content of a file.
Writes the content of the configuration to a JSON file.
Calculates the whois for the given record and writes the content to the output directory
Gets the expiration date and writes it to the output directory.
Function called when the genome is not found
Generate the header of the function before the function is called.
Constructs the header data from a list of strings.
constructor method for the data_constructor
Takes a dict of headers and returns a list of the size in bytes of the header
Takes the data and returns the new string with the appropriate color.
Return JSON representation of the data to be printed.
Returns a string representation of the data to be printed.
Calculate the time difference between start and end.
Returns a string representation of the execution time for the specified time range.
Returns a list of files to delete from the funceble output directory.
Get the list of databases to delete
Deletes every instance of this class and all of its databases.
Calculate the hash of a file.
Generate a hash of the data using the specified algorithm.
Get the hash data.
Executes the command and returns its output.
Removes the specified key from the main dictionary.
Renames a key in the main dictionary.
Recursively merge two dictionaries.
Writes the main_dictionnary to a JSON file.
Writes the main_dictionnary to a yaml file.
fix_path will split the path into directory names and split the path into directory names.
Writes the given data to the file.
Reads the contents of the file as a string.
Returns a sorted list of main list.
Recursively merge the elements of the list into a new list.
Returns a list of elements not matching the regular expression.
Match self. data with self. regex.
If self. replace_with is True return self. data else if self. replace_
Counts the number of times the object was created.
Calculates the percentages of the string.
Check if the URL is valid.
Check if the domain is valid
Returns True if the current node is a subdomain of the given domain.
Get the syntax status for the given string.
Re - format historical formating error
Retrieve the configuration from the data store.
backup the configuration of thefunceble
Return the timestamp of the function.
Returns the content of the function.
Check if the function is present in the pyfunceble configuration
Retrieve whois data from the database.
backup the state of the object to a json file
Checks if the user is in the database
Checks if the time of this user is older than the time of the database
Returns the expiration date of the object
Returns the permissions of the build directory for travis.
Runs the function travis command
Attempt to lookup the namespace of thefunceble socket by its address. If the address
Sends a whois request and returns the response.
Get the value of the class.
Get the configuration of the domain extension
Find the current object and return it. Raises runtimeerror if object is not found.
Yields the paths of the standard library paths.
Yields a list of standard package names.
Yield the line numbers of the unused import message.
Yields the line number of the unused import module name.
Yields the line numbers of the import used by the given messages.
Yields the line number and module name of the starusage message.
Yield the line numbers of the unused variable.
Yields the lineno of each message in the list of messages that has the same key
Check if source is a string and if not return a list of error messages.
Extracts the package name from the line
Determine whether the line is a multiline import.
Return the string representation of a multi - statement statement.
Filter out unused_module imports.
Splits the line into lines that start with the import then returns the new line with the
Given a list of message objects return a list of message objects corresponding to a particular line.
Remove star import names from the line.
Given a line and the marked_line_numbers and the source line and the marked_
Check if a dict entry has a key.
Returns True if the value is a literal or a name
Yields the line numbers of the source of a pass.
Filter lines that don t have a line numbers in the source.
Returns the indentation of the line.
Returns the last non_whitespace character of the line.
Removes unused variables from the source code and returns the filtered source code.
Splits a string by comma separated values. Returns a set of strings.
Returns a boolean if the file is a file.
Returns a boolean indicating if a file should be considered an exclude file.
Reads a KMIP message from the input stream.
Write this obtainleaseresbuilder payload to the given stream.
Writes this message to the given stream.
Reads the response from the KMIP input stream.
Create a new name for the given name value and type.
Read the component s value from the given stream and validate it.
Calculates the MD5 hash value and writes it to the specified file - like object
Read the application specific information from the given stream.
Write the application specific information to the stream.
Create application specific information.
Reads KMIP derivationparameters from the input stream.
Write the KMIP data to a file - like object output_stream.
Reads the KMIP message from the input stream.
Writes this key to the given file - like object stream.
Reads the KMIP payload from the input stream.
Write the message to the given stream.
Writes this KMIP message to the given stream.
Reads the KMIP message from the input stream.
Builds an error response batch item.
Process a template attribute into a dictionary of template attributes.
Returns a list of attributes retrieved from the given managed object.
Sets the attributes on a managed object.
Sets the attribute on a managed object based on the specified attribute.
Returns whether or not the given operation is allowed for the given policy.
Writes the message payload to the given stream.
Create a secret value according to a type.
Set setting.
Loads the settings from the specified configuration file.
Return the bitstring corresponding to the value of the parameter passed in.
Convert the result value to a cryptographicusagemask.
Read the value from the given file - like object stream.
Writes this integer to the underlying file - like object.
Validates that the value is an integer.
Reads a biginteger from the given stream.
Writes a biginteger to hexadecimal.
Validates that the value is an integer and that the value is a string.
Checks that the value is an instance of enumeration. enummeta and that the value is
Reads a value from the specified stream.
Writes the value to the message.
Writes a boolean value to the KMIP file.
Validate that the value is a boolean.
Read the interval from the specified stream.
Validates the value of the interval.
Validate the cryptographic value.
Checks that the value is a string and validates that it matches the specified data type
Check that the value is a string and that the value is a valid opaqued
Convert an attribute name to a tag.
Convert an attribute tag to a name.
Returns a bit mask from an enumerations string.
Returns an array of enumerations from a bit mask.
Check if the value of an enumeration is a bit mask.
Writes a Jmipfile - like object to the given buffer.
Reads a KMIP response payload from the input stream.
Writes this key pair response payload to the specified output buffer.
Reads the message payload from the input buffer.
Writes the message payload to the given buffer.
Writes this response payload to the given buffer.
Returns a list of json files in the directory p
Runs the scan_policies thread.
Get the certificate from a connection.
Get the extended key usage of a certificate.
Return a list of common names from a certificate.
Get the client identity from a certificate.
Reads and returns a KMIP message from the input buffer.
Write the object to a file - like object.
Reads and returns a KMIP payload from the input buffer.
Writes the object to a file - like object.
Returns the string representation of an object.
Reads the message payload from the input stream.
Writes the object to the output buffer.
Returns True if the given attribute is supported by this rule set.
Returns True if the given attribute is deprecated in the current version otherwise False.
Returns True if the attribute is applicable to the given object type.
Returns True if the attribute has multiple instances permitted otherwise False.
Reads a KMIP message from the input stream.
Writes this check response payload to the specified file - like object.
Reads an attribute from the KMIP input.
Writes the object to the given buffer.
Reads an attribute value from the KMIP input stream.
Writes the attributes to the KMIP file - like object.
Reads the content of the nonce from the input stream.
Writes this nonce to the given stream.
Reads the user s password credential from the input stream.
Writes the user s password to the given stream.
Writes this devicecredential to the specified file - like object.
Reads the credential from the config stream.
Writes the credential to the given stream.
Reads KMIP key information from the specified stream.
Writes this MACSignature key information to the specified file - like object.
Writes this KMIP message to the given stream.
Reads KMIP message from the input stream.
Writes this keywrappingspecification to the specified stream.
Read the extension information from the specified file - like object.
Write this extension information to the specified file - like object.
Reads revocation reason data from a stream.
Writes the revocation code and message to the stream.
Validate revocation code and message.
Reads an object from the KMIP input.
Writes the object to the given buffer.
Writes a JMIP file to the specified output buffer.
Reads a component component component component component component from the input buffer.
Writes profile information to the file - like object.
Writes a message to the KMIP file.
Shuts down the socket and the policy monitor.
Writes the object to the specified file - like object.
Reads the locatereser payload from the specified file - like object.
Write the message to the given buffer.
Create an RSA private key from the given bytes. Returns the private key if the private key
Reads the message payload from the given stream.
Writes this message payload to the given stream.
Reads the usage allocation request payload from the given stream.
Converts a protocol_version value to amipversion value.
Reads the message body from the given stream.
Writes this component to the specified file - like object output_stream.
Reads the authentication from the given stream.
Writes this authentication to the given stream.
Reads a poll request payload from the given stream.
Reads the certificate value from the given stream.
Write the certificate to the X. 509 certificate type and length.
Reads the KMIP message from the input stream.
Write the message payload to the given stream.
Performs the handshake and handle message loop.
Reads a KMIP response payload from the input stream.
Checks if a profile is supported by the authentication suite.
Get one or more attributes from the server.
Gets the attribute list of the specified record.
Query the database.
Opens the connection to the proxy.
Closes the connection to the server.
Register a managed object to the proxy.
Gets all the attributes of a result set by the specified uid or attribute_names.
Activates the result of the operation.
Builds the cryptographic parameters from the given value.
Builds the encryption key information from the value.
Builds the MAC signature key information from the given value.
Builds a cobjects. keywrappingspecification.
Builds the list of common attributes for a given operation policy.
Builds the name of the attribute for this type.
Read a query request payload from the input buffer.
Writes the message to the given buffer.
Reads the attributes response from the KMIP input.
Writes this message to a file - like object.
Get a single entrypoint by name.
Get a specific group by its name.
Get a list of all entries for a specific group.
Load the object from the specified module.
Create an entry point from an entry point string.
Generate a controller file.
Re - copy src_file to dst_file with project_name.
Check if the URL is the same as the input field.
Encode something as a URL - encoded string.
Decode something if it s a bad signature.
Returns the absolute URL for the given endpoint.
Signin a user to the session.
Returns the current user if it exists in the session else returns none
Create a new Flask application.
Writes a pandas dataframe to a CSV file.
Reads a pandas dataframe from a CSV file.
Serializes a dataframe according to the given data type.
Deserialize a string into a Pandas DataFrame.
URL to download the contents of the file.
Return the contents of the intermediate dataset in the workspace.
Read the intermediate dataset contents as binary.
Read the intermediate dataset contents as text.
Deserializes the data into a Pandas DataFrame.
Get the intermediatedat dataset.
Get the list of experiments in a workspace.
Fetch datasets in a workspace.
Get a specific dataset in a workspace.
Find the names of the global variables in the given code
Make a copy of this element
Look up the color in the color repository and print it to stderr.
Draw the object to the screen.
C cubic b cubic b cubic b cubic b cubic b cubic
Compute the cubic Bubnstein distance between p0 p1 p2 p
Build the choices for the tree.
Initializes the cache for the given string.
empty the cache
Returns the value of the cache entry named entry_name. If the entry does not exist
Updates the value of an entry in the cache.
Set the value of an existing entry in the cache.
Init the page context
Resolve a tree alias.
Check if the current app is admin
Calculates the depth of the given item.
Get the current item of a tree by its alias.
Resolve a URL for a model tree item.
Initialize the tree with the current request. If the current request is the same as the current
Get the attribute of the current page in the tree.
Returns the ancestor level of the current item s parent.
Checks if the current request user has access to the given item.
Return the items of the tree as str_
Render the children of the given navigation type.
Get the children of the given item.
Update the has_children property of the tree items.
Filter a list of items according to the given navigation type.
Returns the parent of the given item relative to the given base item.
Handles the climbering of base_item to tree_alias.
Resolve a variable to a string.
Parse the template tag tree using the given parser.
Parse the children of a tree item.
Uses the template tag parser to parse the template breadcrumbs.
Render the content of the given context using the specified template.
Compile the template for the given preposition.
Return the model URL name for a given page.
Remove the tree admin from the site if it is not registered.
Handler function for the redirects module.
Handles the response after a successful redirect.
Return the response after adding the object.
Redirect to the change view for the given object.
Overrides the get_form of the treeitem admin form to provide the default values for
Gets the tree for the given tree_id. If tree_id is none then
Move the given item to the given direction
Saves the given model instance to the tree.
Returns the admin urls for the tree admin.
Dump a tree item to a file.
Imports the app s sitetree module and returns none if it doesn t exist.
Gets the model class from a settings. py file. If the model is not found
Create a new configuration from a given mapping.
Create an object from a Python file.
Loads the model from a TOML file.
Create an instance from a type and instance string.
Create http headers for a new span.
Get the current context of the root span.
Start the service.
Stop the trace. If do_pop_attrs is set do the pop_zipkin
Updates the specified binary annotations with the specified extra_annotations.
Add a SaaS binary annotation to the client.
Override span name.
Copies an endpoint object with a new service name.
Build a v1 span from this instance.
Encodes a list of spans into a protobuf string.
Convert a span to the protobuf protobuf format.
Converts a hex string to bytes.
Returns the span of the given kind.
Convert zipkin endpoint to protobuf endpoint.
Convert annotations to zipkin_pb2. annotation.
Create an annotation string.
Create a binary annotation.
Create a zipkin_core. endpoint.
Create a new endpoint with the same ipv4 and port but service_name.
Build a list of annotations.
Build a list of binary annotations.
Create a span.
Returns the content of the given span as a byte string.
Encodes the given list of binary objects into a byte string.
Detects the span version and encoding of the given message.
Convert a list of spans from one encoding to another.
Push zipkin attributes to threadlocalstack
Encodes the given Span object to a byte string. Returns the encoded span object.
Create the json endpoint for the given endpoint.
Encode a single span into a protobuf message.
Decode the list of spans.
Converts the given Thrift endpoint to an endpoint object.
Decode the org. jsonschema. annotations.annotations.annotations. Schema. annotations.
Converts the passed array of binary annotations to strings.
Helper method to decode a Thrift span into a protobuf span.
Convert trace_id to a string.
Convert unsigned long to lower hex
Writes a long integer to the specified field in hex data at the specified position.
Pre - processor function for date -fixup.
Set the unique integer value of a tag in a list of transactions.
Given a tag and a tag_dict return the tag_dict with the matching tag s
Given a tag and a tag_dict return the tag_dict with the set of tags
Join the lines of a string.
If the response is a text response return it. If the response contains a text response return
Prints a warning message after the specified time until the specified time.
Get information about a bot.
Get bots.
Reads the next packet and decodes it.
Encode the message and write it to the output file.
Decodes a string and returns the term and the unused data.
Encodes the specified term.
Adds a source address to the control socket.
Send the pending messages and refresh the queue.
Set the configuration parameters for theremoteservicehelloc callback.
Stops the server.
Clear all local services
Return a list of services that match the specified filter criteria.
Returns the correct message to create the correct action depending on the environment.
Discover the loglevel of the given scope.
Returns the tagged item manager for this instance.
Get all child relations of a given model.
Get all child m2m relations of a model.
Saves the clusterable model to the database.
Returns a list of errors for each field in the row.
Returns True if all formsets have changed.
Generate a new address with a valid checksum.
Generate the checksum of the address.
Prompt the user to input a new string for seed.
Returns the key associated with a given index and number of iterations.
Returns the key associated with the given address.
Create a random iterator for the map.
Create a sponge instance with the given index
In - place absorption of a list of trits.
Add one or more trits to the end of the string.
Transforms the state according to the truth table.
Adds two str of the same length to the left and right str of the same length
Convert an integer to a list of trits.
Adds the left and right strands to the left and right strands.
Adds two str_trits to each of the two str_trits
Prints the given seed to standard output.
Finds the transactions for the provided bundles and addresses.
Convert a transaction to a promotetransaction command.
Resolve a URI to a base adapter.
Sends the given payload to this node.
Log a message to the internal logger if self. _logger is set.
Send an http request to the given URL with the given data.
Interpret the response.
Add a digest to this node.
Returns a multisigaddress.
Create an iterator that yields a range of random keys.
Create an address from a digest.
Generate an address from the given iterator.
Returns a list of transaction objects.
Finds the addresses that are used at the given address start. If security_level is
Returns a list of bundle objects corresponding to the transaction hashes.
Check if the given encoding is a supported codec.
Get codec info.
Encode input to bytes.
Decode input.
Find addresses in the network.
Add a route for a specific command.
Construct a tryte object from the given tryte string.
Returns a dict of properties that can be used as a JSON string.
Returns the validationtrytes of this object.
Set the flag new_is_confirmed for all transactions in this transaction. new_is
Returns a list of messages from the transaction.
Return the list of transaction groups that have the last transaction associated with this transaction.
Discovers all commands in the given package.
Executes the specified request.
Applies a filter to the value.
Returns the URL for the given job_id.
Returns the list of valid errors.
Validates the given validator. Returns True if valid False if not.
Validates that the bundle contains a certain number of grouped transactions.
Get bundle signature errors
Get the error message for a group s signature.
Traverse the bundle of the given transaction.
Start an interactive python interpreter.
Generate a random string of the specified length.
Return the digest of this fragment
Sign the input transactions.
Returns a pretty representation of the object.
In - place absorption of the given trits.
Adds the context of an exception to the exception s context.
The security level of the address.
Increments the legacy tag.
Return the tag of the transaction.
Adds a transaction to the list of transactions.
Finalize the transaction.
Sign the inputs of the transaction with the given key generator.
Creates input transactions for the given addy.
Convert a value to a standard unit.
Decompress a G1 compressed value.
prime_field_inv function. Returns the result of prime_field_inv if a
Create an instance from a JSON file.
Splits the description into a list of strings
Return the list of categories of the object.
Returns a random string from the given component.
Load the builtin timescale of the given name.
Create a new decor instance from an image.
Returns a string representation of the table in CSV format.
Returns the maximum number of rows in the list or None if the list is empty.
Returns a decor instance corresponding to the specified component.
Plot the contents of the list.
Convenience function for creating a docker - like component.
Process a row of text into a dict of values.
Parse a string representation of Canstrat into a dict.
Return unique entries in the table.
Computes the interval values from the Tops in the list of components.
Clean longitudinal data.
Read the longitudinal data from a PaloMNL - formatted file.
Read a interval from a Canstrat file.
Return a copy of the striplog.
Writes the list to a CSV file.
Export the object to a. las3 file.
Finds all incongruities where the given bool is greater than or equal to
Finds allgaps in the corpus.
Returns a copy of the str with the striploger options removed.
The anneal of this str str str
Fills this component with the specified gaps. If component is not specified then this component is
Return the string of the union of the elements of other.
Return the intersection of the strings in self and other.
Merge the str_ overlaps from this segment into a new segment.
Invert the entries in this list.
Crop the region to the given extent.
Run a series of tests and return a list of results.
Override default formatter to catch keyerror and indexerror
Returns a list of the currently running jobs.
Parses a HCL string into a Python object.
Update an existing token.
Returns a list ofallocations that match the provided prefix.
fail the deployment with the given id
Pauses a deployment by the given id.
Drain a node.
Drain a node with the given spec.
Get the details of a node identified by id
Returns a list of files.
Return the stream of the contents of the specified object.
stat a file or a directory
Returns the result of join_agent for the given address.
Updates the status code of one or more servers.
Force the node to be removed.
Returns a list of nodes with the given prefix.
Gets the list of Evalues that match the given prefix. Returns a list of eval
Returns a list of namespace names that match the given prefix.
Register a new job.
Get information about a plan job.
dispatch a job by id
Revert a job to a previous version.
Revert the JSON representation of a stable job.
Deregisters a job with the given id.
Get the current configuration
Delete a peer.
Returns a list of deployments that match the given prefix.
Returns a random object of the specified type.
Returns a random mutator for an object of a specified type.
Get a random string from a polyg slot.
Joins all the bytes in buf with each character in buf and returns a new string.
static_file returns the static file at the specified path
Yields the fuzzed response to the client.
Spawn a subprocess and finish the process.
Gets the output of the command.
Starts a new thread that waits for the process to finish and returns its return code.
Terminate the subprocess.
Starts a new pjf worker.
Executes the command. Returns the output of the command.
Returns the random string of the string.
Build the string representation of the current values.
Returns the string representation of the query.
Generates a random value to be used in the template.
Override default build method to raise errors. optgram if pre is none.
Build a string of the current ref and return it.
Build the optgram string.
Shuts down and sends a test case.
Spawn a new process and monitor it.
Start the monitor.
Generate a random float between a and b.
Return the fuzzed string
Returns the fuzzed string of the object
Handler for SIGTERM.
Quits the command - line interface.
Pause cli command.
Resume a paused command.
Stop a running command
Restarts the process if it is running.
Returns a list of skypeevent objects
Set the m-% of the user.
Set a user s avatar image
Fetches metadata for a URL.
Retrieve a contact by id from skype and merge it with this contact.
Retrieve a skype user by id
Returns a list of skypebotuser objects for this user.
Get a skypebot by id
Returns a list of skypeuser objects matching the given query.
Returns a list of skype requests
Create a new object from raw data.
Merge this configuration with another.
Merge an object into the cache. If the object already exists in the cache the object is
Read the token from the tokenfile
Writes the token to the token file
Verifies an authentication token.
Refresh the skypetoken.
Get user id
Verifies and sync the skyping token
Sync the endpoints of this client with the other endpoints of the same type.
Check if user is a member of this type
Authenticate and return a token.
Connect to the msgshost with the given name and return the config dictionary.
Ping this host
Retrieve the most recent chats from the skype host. Returns a list of skype
Use this method to merge a group chat into a single chat.
Create a chat
Returns the usertoid of the URL if it exists otherwise none.
Extract the chattoid from a URL.
Decode and replace str_ with str_.
Detect format of text.
Parse the given text using the specified format handler.
Return a dictionary representation of the metadata.
Loads a yaml file - like object from the given file - like object fm.
Export a YAML document to a string.
Export the metadata to a file.
Match self. string if self. pattern matches self. pattern else if self. string ==
Return a list of all items in the string regular expression.
Return a list of sublists where i is the index of the sublists that match the
Convert the given starting position to a new starting position.
Return the list of arguments to pass to the function.
Returns a list of lists of arguments that match the pattern.
plant a list of strings into a trie.
Generate a pattern from the given trie.
Raise indexerror if key is not a valid index.
Insert string at index.
Partitions a character into two parts. The first part is the character and the second is
Returns a list of subspans of the given type.
Shrink an update to the end of a string.
Insert a new index into the end of the list of spans.
Finds the current level of this object. Returns the current level of the object.
Extract the shadow from the span string and store it in the self. _ shadow_cache
Compute the shadow of the string of the external link.
Convert type to spans.
Pretty - print the object.
Returns a list of all of the parameter names in the input string.
Returns a list of parser functions for the input string.
Returns a list of template strings corresponding to the type of the str.
Returns a list of wikilink objects for the element.
Returns a list of comment objects for the input string.
Return the external links of theink.
Return the list of tables in the database.
Subspans of a given type.
Returns the list of ancestors of the specified type.
Returns the parent of type_ if it exists otherwise none.
Returns the mode of a list of elements.
Returns the argument with the given name from the given iterable.
Remove the name of the first argument of this function s list of its arguments.
Get the argument with the given name.
Returns the string representation of the argument with the given name and value.
Delete the argument with the given name.
Returns the string representation of a CRS code.
Find an ellips in the list of items that match the name of the crstype
Reads a string from a URL and returns it as a CRS object.
Reads a string from a file.
Converts a CRS code into a CRS object.
Returns a CRS object from an ESRI code
Converts a CRS code into a CRS object.
Determine the CRS from a text string.
Writes the record to the given file - like object out.
Reads avlr from a stream.
Returns a list of geotiff keys from avlrs list.
Returns a list of geotiff keys.
Returns the signedness value for the extra dimension of the type at type_index.
Get the id for the extra dimension type.
Create a new record from another point record.
Copy fields from another record.
Appends zeros to the array if they are too small.
Returns a frozenset containing the names of all dimensions in the array.
Create an instance of this class with zeros data and point count.
Create a Point from a file - like object stream.
Create a point from a compressed buffer.
str containing the x - axis of the image.
str containing the y - axis of the image.
str - > scale_dimension
Add an extra dimension to the data_data struct.
Writes the points data to the given file - like object out_stream.
Writes the sequence to a file.
Convert point format format strings to numpy dtype strings.
Builds the ndarrays of the ndarrays of the point formats.
Convert a numpy dtype to a point format string.
Returns the minimum file version for a given point format.
Returns True if the point format is compatible with the file version.
Extracts the specifiedvlrs from the collection ofvlrs of the specified type.
Reads data from the data stream and returns a list of VlrList.
Check if the list of las_files have the same point format id.
Returns the number of las_files have the same dtype.
Raise a pylaser error if the file signature is different from the signature of the
Reads the next header from the input stream.
Reads thevlrs from the stream.
Read points data from the packed point record.
Reads point data from the compressed file.
Reads the internal waveform packet
Reads the evlr list from the event stream.
Warn if the stream is not at the expected position.
Create a lasdata object from a header.
Merge one or more las into a single las.
Writes a las to a file then reads it.
Returns a datetime. date object
Set the day of the year and the day of the year of the day of the year
Returns an array of the min value of each point in the mesh.
Set the min value.
Returns the maximum value of the mesh.
Set the maximum value of the bounding box.
Returns a numpy array of scale values for the scale of the time series.
offsets of the mesh.
Tries to read the major and minor version from the specified file - like object stream.
Convert the old header string to a new header string.
Unpack a bitstring into a bitstring.
Return a list of the dimensions that have been lost.
sub_fields is a dictionary with the name of the sub_fields as keys and the
Returns the total number of extra bytes in the array.
Returns True if this dimension has a waveform packet.
Main method of the demo script.
Calculate the checksum of a command.
Prints the data in hex format.
Verify the format of a response string and strip any exception from it.
Returns a list of set bits in r.
Generates the query string to be sent to the server.
Connects to the specified server and starts the demo loop.
Connect to the remote host.
Start monitoring the device.
Disarm a query.
Clear the alarm.
Set the output of a mode.
Send a query to keep the connection alive.
Monitor the status of the device.
Close the writer.
Purge all user data from the database.
Guess the type of a path based on its extension.
Get the file id for a given file path.
Get a notebook from the database.
Build a notebook model from a record and content.
Gets a directory and returns it as a directory model.
Converts a list of file records to the appropriate file model.
Returns the directory model for the given record and content.
Create a file model from a record in the database.
Save the notebook model to the database.
Saves the model to the file at the specified path.
Renames a file or directory.
Delete a file or directory.
Given a user ID ensure that the user is not already in the database.
Purge files directories and users from the database.
Create a new directory in the database.
Check if a user is in a directory.
Delete a directory. Returns the number of rows deleted.
Check if a directory exists in the database.
Return the list of files in a user s directory.
Return the list of files in a user s directory.
Given a path and a user_id find the files that match the path.
Query for a single file.
Returns the default fields of the file.
Retrieve a file and decrypt it.
Retrieve a file.
Get a file by its ID.
Check if a file exists in the database.
Renames a directory in the database.
Save a file to the database.
Purges the remote checkpoints for a given user.
Re - encrypt the content of a row.
Re - encrypts the content of a user.
Derive a singlefernet key from a password and user_id.
Gets the name of a column like clause.
Returns a dict of the fields and row with the content of the row.
Convert a row to a dictionary with the content of a row.
Create a checkpoint from notebook and save it as a file.
Creates a checkpoint on the remote side of the file.
Delete a checkpoint.
Get the content of a checkpoint.
Returns a list of remote checkpoints for a given path.
Rename all checkpoints in the remote database.
Delete all checkpoints for a given path.
Purge all checkpoints from the database.
Resolves a path to a manager and returns the manager and the path itself.
Applies a prefix to a model.
Called when manager names has changed.
Get the content of a directory or a file.
Normalize API path.
Splits a file path into its component name and its dirname.
Returns a base64 - encoded base64 - encoded string of the writes.
Read a base64 - encoded string from a file - like object.
Decode a string from a base64 - encoded string.
Decode a base64 content to text.
Returns a list of all the directories in the given path that have the given path prefix.
Create a user checkpoints.
Splits the list of models into a list of model names and a list of files.
Walks a list of directories in a given hierarchy.
Walks a directory tree yielding all file names.
Walks a directory tree yielding content of all files.
Re - encrypt a single user s content using the old_crypto and new_crypto.
Un Encrypts all users in the specified engine.
Un - encrypt a single user
Context manager that writes alembic. ini file with the location of the database.
Upgrade the database at the given revision.
Sanitize a block by converting it to internal value.
Queue a new instance of a certain type.
Loads instances of the specified embed type and stores them in self. instances.
Inserts an instance into the embed type.
Loads the data into memory.
Validates the given data. Returns the data as a string.
Renders the admin page for the given request.
Returns the JSON representation of the object.
Removes all authenticated fields from the meta. str_
Returns a list of excluded fields from the context.
if version is not None and preview_id is not None then update version and preview_
Returns the publishable queryset.
Filter the queryset according to the request query params.
Returns the value of the boolean attribute of the field.
Validate a widget.
Validate a zone object.
Returns a boolean if the value is a valid uuid
Returns the list of permissions for this user.
Add or remove a group from the user s groups.
Validates that all strings in data are in a list of strings and that each string is
Save a zone to the zonemodel.
Returns the data in the form of a dictionary.
Prepares the data for this object and returns it as a dictionary.
Render the data using the template.
Get the settings of the integration.
integration callback method
Get integration settings
Updates the current settings of the integration.
Signup form.
Create a MPTag string from a list of contents.
Render zone widget
save a new featured image
Saves a sub - section to the article.
Get the extension of the image.
Returns the media url for this domain and name.
Saves the thumbnail if is_new is True.
Save a thumbnail of an image.
Connect to mysql database.
Returns a string that represents a bandwidth limited stream for a given file - like object.
Read a given number of bytes.
Consume a message from the queue.
Process a scheduled consumer of the given token.
Calculates the exponential moving average rate.
Calculates the exponential moving average rate for a given consumption.
Wait for the result of a transfer.
Get callbacks for a transfer_future.
Returns a new dict where whitelisted keys are the whitelisted values
Remove the given number of characters from the queue.
Finalize the callback function.
Check if a file is a special file.
Acquire a new noresources available for the given tag.
Release the tag and acquire token.
Adjusts the chunk size for a given number of parts.
Queue a task that writes the given data to the specified offset in the file object fileobj.
Returns the download manager class that is compatible with the given transferfuture.
Appends the data at the specified offset to the contents of the file - like object fileobj
Request Writes with the given data at the given offset.
Returns a seekable version of a file - like object.
Shuts down the device.
Cancel all tracked transfer requests.
Waits until all tracked transfer costdouts are done or an exception is raised.
Wrap data into a file - like object and return a file - like object.
Return the input manager class that is compatible with the transfer future.
Sets the exception to be raised when the task is done.
Set the result and status of the operation.
Set the result of the future as the given exception.
Wait for the done event to complete and return the result.
cancel the announce and set the exception message to the given string if the announce is done.
Submit a task to the transfer executor.
Adds a done callback function to the list of done callbacks.
Add a function to be run when a test fails due to a failure.
Runs the done callback for the task if the task is done.
Upload a file to a bucket.
Download a file from Google Cloud Storage.
Converts a step decorator into a step decorator.
Refactor a step by moving parameters from old_text to new_text.
Converts a step decorator into a step decorator.
Refactor a step function by moving parameters from old_text to new_text.
Update an existing membership.
Delete an existing membership by ID.
Get the cat fact from the cat fact endpoint.
Posts a new message to the room.
Delete an existing membership
Check if the given URL is a valid URL.
Checks if the given string is a web URL.
Opens a local file and returns a file - like object.
Check if o is one of the acceptable types.
dict_from_items_with_values - > dict_from_items_with
Checks the expected_response_code and raises an apierror if it doesn t match
Convert json_data to a dict if json_data is a dict or raise typeerror
Parse a webexteams datetime string using the specified format.
Create a new team.
Update an existing room.
Delete a room.
Get a list of items.
Returns the created date of the object or none if the object was not created.
Gets the access token from the environment variable if available otherwise uses the legacy environment variable.
Update a webhook.
Delete a webhook.
Sets the wait_on_rate_limit property.
Update the headers of the request
Returns the absolute url of the given URL.
Performs a GET request and returns the response.
Get pages from a given URL.
Make a PUT request to the specified URL and return the response.
Performs a HTTP DELETE request for the specified URL.
Create a new JWT token.
Delete a message.
Get a person by ID.
Delete a person by ID
Returns an object of the specified type.
Get a list of items.
Create a new object.
Update a team.
Delete a team.
Recursively serializes a dictionary into a list of tuples.
The datetime of the last activity of the object.
Posts a new event to the events service.
Gets a tunnel public url. Returns the tunnel public url if it exists otherwise returns none
Delete webhooks with specified name.
Creates a Nredirect webhook for an api. webhooks. api. webhooks.
Delete webhooks with name webhook_name
Reads telegram from serial.
Reads the Telegram from the given serial connection and adds it to the given queue.
Create a telegram protocol function.
Create a serial connection to a DSMR reader.
Create a TCP connection to the DSMR server.
Called by Telegram when data is received.
Called when the connection is lost.
Calls the telegram callback.
Parses the given telegram data.
Get the version from a file.
Ensures that the version_info part of the string is one of the values in the
Finds all the packages in the specified top directory.
Wrapper for subprocess. check_call.
Returns a list of data files matching the provided data specs.
Get the package data.
Compile a glob pattern to a regular expression.
Yields all nodes in a path.
Translate a glob into a human - readable string.
Join a list of translated parts into a string.
Translate the glob part to the right part of a string.
truncate the given table. If serial_key_sql is set execute the serial_key
Writes a table to the database.
Write all indexes to a table.
Write triggers to a table.
Write all of the constraints to a table.
Writes the contents of a table to a file.
Writes the indexes for the given table to the output file.
Writes the constraints for the given table to the output file.
Writes the triggers of a table to the file.
Returns the number of items in the queue.
Enqueue the provided data to the table.
Starts a new task handler in the queue.
Builds the extra predicate for the query.
Returns an ISO8601 - formatted string representation of an object.
Connects to the MySQL server and closes the connection.
Query the database and return the first row or None if there are no results.
Creates a connection to the specified database.
Runs the benchmark and prints the results.
Connect to pool if not already connected.
Looks up the globals object for the specified errno and prints it.
Returns the total size of all connections in the pool.
potential connection failure
Create a simple string expression with parameters.
Updates the given fields with the given string.
Connects to the specified database and returns a connection object.
Remove this table from the database.
Starts a step by name.
Stop a step by step_name.
Loads the steps from the raw_steps. txt file.
Close the socket and wait for it to finish.
Close the socket if the connected socket is closed.
Connect to websocket.
Called when a message is received from the websocket.
Stop the timer.
Send a ping to the Pong socket.
Check if pong has been received or reconnect.
Send a message to the websocket.
Removes the paused task and resubutes it if soft = True.
Handles system events.
Generic error handler.
Handles data being passed to the client.
Resuble the channel.
Handle an authentication event
Handle configuration data.
Update the last timestamp of a channel.
Reset the connection to the remote server.
Returns the candles for the specified pair.
Configure bitfinex.
Subscribes to a ticker pair.
Unsubscribe from a ticker pair.
Subscribe to the orderbook specified by pair.
Unsubscribe from an orderbook pair.
Subscribe to the orderbook given by pair.
Unsubscribe from the raw orderbook
Subscribe to a pair of trades.
Unsubscribe from a pair of trades.
Subscribes to the specified pair of candles.
Unsubscribe from candles pair.
Authenticate using the API key and secret.
Cancel an order.
Invoked by pahom client when a command is received.
Function called when a device is installed.
Called when a notification is received.
Create a new devicetype
Update a device
Finds the client status of the client.
Returns a list of the records associated with the given URL.
Creates a new entry
Update an existing schema
Disconnects the client and logs it out.
Invoked when the client connects to the broker.
Callback function called when the client has received a message that is a supported message.
Sends a device event to the client and calls the deviceeventcallback function.
Respond to a devicest status callback.
Invoked by the client when the appstatus callback is invoked.
Get the last event for the specified device and event ID
Returns a list of the last events of the given deviceuid
Gets the API response and raises an exception if num_ is set.
Initiate a request.
Get the status of a request.
Close the stream. If the stream has already been created then raise a ioerror.
Get the lower and upper bounds of the index.
Load byte array from specified page.
Check the return value of the given function.
Loads the application from the self. application. If self. application is a string then
Serve the app in a specified number of workers or a specified number of workers.
Return the native representation of the value.
Crop and save an image
Process an image.
Process an image and save it to a file.
Converts the image data to a file - like object.
The name of the placeholder image to be used when creating the image.
Overrides the save method to update theppoi field.
Updates the value of theppoi field. If the field is not present in the
Override django. contrib. admin. widgets. sizedimagecenterpointclickermoadminfield
Returns the value of the field as a string.
Auto - discover INSTALLED_APPS. py modules and fail silently when not present.
Unregisters an existingizer.
Unregisters a filter by attribute name.
Returns the URL of the image associated with this field.
Build the filters and sizers for this field.
Returns the root folder of the image
Returns the path to the root folder of the image.
Returns the path of the filtered sized root folder.
Delete matching files from the storage.
Preprocess and save a gzip image.
Preprocess thejpeg string.
Retrieves an image file from the storage.
Save an image to the storage.
Returns a string representation of the Palois Palois Palois
Creates a resized image from the given image and saves it on the storage system.
Render the value to a string.
Get the context for the clearablefileinput with image preview.
Build a dictionary of attributes for this node.
Returns the path to the resized file.
Returns a path filtered by filename_key and storage.
Validates a list of sizes and raises valueerror if the list is invalid.
Gets the URL from an image key.
Returns a list of image sizes for a given image key
Format the instruction.
Format the function body as a string.
Decode a bytecode to a sequence of instructions.
Decode a module into a list of sections.
Connects to the server and returns a task that will run when the connection is made.
Read and parse the result of an AMI query.
Parses line into agi_code_check object
Check agi code response.
Resets the generator of all instances of this class.
Returns a list of class name prefix and uid
Get the system data for the specified path.
Get the primary keys of a model
Deserializes a value into related model.
get existing instance of instance
Return the declared fields for the given model and inherited fields.
Load the given data into the model instance.
Split model kwargs and association attributes.
List available snapshots.
Restore the application to its latest state.
Reset the indexes.
Preprocess the given string and strips all of the boolean values.
Applies a function to data in parallel.
Process the text using the process_text_constructor and append_indicators methods.
Process text in parallel.
Compute the doc length stats for each document in the histogram.
Returns a pandas dataframe of word counts.
Map a parameter type to a specific string type.
Parse a list of interfaces into a dict of methods and types.
Inverse of the instance.
Update the state of the state with a rollback.
Make a copy of this object.
Make a copy of the current instance.
True if two strings are equal in the same order.
Return the inverse of arg.
Clears thewdm and nxt and prv.
Moves a node to the end of a key.
Writes text to a temporary file and returns the name of the temporary file.
Merge args into config.
Yields an iterable of address book objects for each name in names.
Create a new contact for the selected address book or modify an existing contact if needed.
Subcommand of vcard_list to get a list of strings of the year month day
subcommand for phone numbers
Subcommand of vcard_list.
Modify a sub - command.
Remove a subcommand of a vCard
Calls the source sub command in the editor.
Subcommand of vcard_list from selected_address_books to target_uid.
Returns the action associated with the given alias.
Create a new contact object.
Create an address from a file.
Constructs a contact from a user input.
Creates a new contact from an existing contact with a new user input.
Returns a list of the names of the given part of the names.
Adds the given categories to the vcard.
Helper function to parse a type value.
Convert a list of lists to a string using the specified delimiter.
Attempts to convert a string to a datetime. date object.
Calculates the difference between uid1 and uid2
Searches for all contacts that match the given regular expression.
Searches through all contacts that match a regular expression
Searches for a user - id in the contacts dictionary that starts with the given query.
Searches the database using the specified search method.
Returns a dictionary of uids for each item in the collection.
Returns the short UIDs of a given UIDs.
Find files in the vcard directory.
Loads a card into the database. Returns the card s name and number of errors.
Returns the abook with the given name.
Return the available architectures.
Return the available architectures.
Attempt to guess the type of the given kwargs.
Replace the current query with a new string.
Returns the first entry in the result set or None if there is no result.
Delete the records in the database.
Returns thelua of a prefix of a given index.
Estimate a worklua for a given index and prefix.
Counts the number of elements in the zset
Connects the given object to the database.
Returns a sorted list of strings
Add an object to the known set.
Returns the value of the field pk or None if pk is not set.
Writes a single entity to redis.
Save the object to the database.
Delete this object
Get a list of instances by their ids
Opens a sem_open with the specified name with the specified value. Returns the handle
Send the result of work_id to the result_queue.
Adds work_id to the call_queue. If the call_queue is empty
Ensures that the executor is running.
Start the server.
Perform a duplicate of a file descriptor.
Wait until all pending work items have completed.
Prepares data to be passed to process. current_process.
Close all the open file descriptors in the given string.
Terminate process withoutpsutil.
Recursively kill the process.
Returns a string representation of the exit codes of the given processes.
Takes a list of exitcodes and formats them into a human - readable string.
Ensure the process is running.
Return an event processor that prints the line number and filename.
Split a string into a list of arguments.
Get the stack of frame and line number of the traceback in a given frame t and b
Run a list of hooks and return a boolean value if the first hook returns a boolean.
Forget the previous stack frame
Evaluate the given argument and return the result as an integer or None if the argument is not
Runs all the commands in the command loop.
Adds the startfile of the command file to the queue.
Finds the next token in the string at the given position. Returns the position of the
self. msg ( msg ) self. msg ( msg ) if abort_on_error
Reads the next line of the command and returns it.
Close input and output files.
Disassemble a message into a section of code.
Count the number of frames in a given frame.
Returns the name of the function that is called at the given frame.
Print a stack trace of the given proc_obj s stack. count is the number of
Returns the value associated with the subcmd_prefix if it exists and if it doesn t
Short help for a given subcmd.
Adds a sub - command to the command list.
Run a defined sub - command.
Show the commands associated with a given category.
Return True if answer was found else False.
Find the frame where the function is debugging.
Evaluate arg and return its value as an int. Raise valueerror if cmdname is
Set a boolean value in the object s debugger settings
Set the int value of the variable. If the variable does not exist it is created.
Show the value of show_onoff in obj. debugger. settings.
Show the value of the int variable in the debugger.
Show the value of the variable with the given name.
Return True if line is a definition statement.
Return True if line is a class definition.
Re - raise the debugger when the thread is quit
Returns the default background color.
Returns True if color matches a dark rgb color.
Return the name filename and firstlineno of the given frame.
Returns a list of strings for all values in self. list.
return a string representation of the display.
read a message from the socket
Prints a debug message to the console.
Calls find_and_set_debugged_frame.
Pretty - print an array.
lookup the name of a signal by its number
Looks up a user - defined class attribute for the specified signal name.
Return the name of a canonic signal.
Set a boolean signal replacement.
Check if the signature is valid and adjust it to the value of theighs method.
Returns a boolean indicating whether or not the specified signal is present in the log file.
Handle the action specified in the argument.
Handles the print event of a signal. If set_print is True then the print
self. print_method self. print_stack self. print_method self. print
Convert a file name to a module name.
Search for a file in a list of directories.
try to find a file in the system
Returns a list of caller. py file names for a given caller.
Appends a string to the output if it already exists.
Runs the mainfile and returns the error message.
Takes a list of strings and returns a list of strings
Close the connection.
Send the given message to the TCP socket.
Completes the identifier of the current function.
Adds a string to the queue of commands to be run
Adds the specified frames or frames to the ignore filter.
Determine if the given filename is a canonic file.
Returns the file name for the given filename.
Determine if the tracer has been started.
Check if the given event is a stop step.
Sets the next frame in the stack.
Prints a stack trace of the given function and f. f_back pass.
Delete a breakpoint
delete a breakpoint by number
Enables or disables all breakpoints
Enables or disables a breakpoint by number.
Delete a line number from the list of breakpoints by filename and line number.
Opens the input.
Read a line from the input and return it.
Prompt the user for confirmation.
Return the query as a future.
Restore the original login.
Loads a module given a string path.
Yields num_docs from a given client.
Writes JSON or CSV to a temporary file and returns the number of rows in the file
Normalize the data in a stream.
Converts the given string to a float.
Detect file encoding.
Yields lines of JSON from a file.
Converts a transcode file to UTF8.
Opens a CSV file and returns its contents as a string.
Yields rows from reader with the given header and encode_fn applied to each row
Applies the command line interface to the application.
Save a token for a specific domain.
Wrapper for requests. request method.
Perform an HTTP DELETE request.
Get the root url of a URL.
Save a new token to a file.
Perform the request and return the JSON response.
Perform an HTTP POST request for the given path with the given data and content_type.
Get documentation for a given string.
Perform the request and return the raw text of the response.
Print the result as a CSV.
Helper function to read params from input_file and json_body.
Simplify a document.
Create a project with docs.
Create a project and upload its documentation to the given language.
Upload a stream of documents to a project.
Upload a file to an account
The main function of the command line interface.
Create a token from a username and password.
Performs the login via HTTP POST.
Perform a post login page with the given data.
Fetch the data for a given time period and store it in the internal data dict.
Prepares the page s view to be rendered.
Initializes the view.
Handle GET request.
Called when a message is received. Returns the node if the message is a change to the
Updates the list of menu links and links for this page based on the change in the
Returns a list of urls for the static files and pages.
When a message is received return a node. If the message is a JSON - encoded string
Function called when DOM is modified
Create the subelement of the widget associated with this declaration.
Initializes the str widget.
Delete this webcomponent and remove it from the cache
Add a child to this webcomponent. If child. widget is not none insert it into
Remove a child from this webcomponent.
Returns a generator of all widgets associated with this node and its children.
Set an attribute of the widget to the given value.
Updates the proxy according to the given change dict.
Notify about the document being modified.
Returns a list of nodes matching the xpath query.
Initialize the widget if needed.
Clear the widget and extend the html.
Called when the user changes the mode of this node.
set the parent of the block to the passed string
Moves the children of this block to new_children according to the change dict.
Read the contents of the specified file.
Print an error message to stderr and exit.
Prints error message and flushes to stderr and exits with an error code.
Returns the product with the given name or None if no such product exists.
Creates a new session and updates the session header with the new session.
Resets the session store for the request.
Gets a search term from the store store store store store store store store store table.
Set a delivery system for a store.
Gets the menu for the given store
Adds the given item to the given variant.
Adds a pvalue to an item.
Adds a side to an existing item
Remove an item from a collection.
Set a payment method for a payment.
This method handles the payment request and returns the payment response.
make a GET request
Makes a POST request
Calls the given URL with the given path and raises an apierror if the response code
Append an item to the screen.
Adds the exit item to the end of the list of items.
Draw the menu items to screen.
Go to the next character and select it.
Select selected item
Takes the old menu data and returns a new menu object with the old menu data.
Convert a string column to a datetime.
Convert a datetime column to a string.
Apply a basic math operation between two columns.
Cumulative sum the values of a column of a dataframe.
Cleans up old cache entries for a given cachedir. Returns the number of cache entries
Adds the given offset to the given dateobj with the given sign and unit.
Get optimizer learning updates.
Returns list of training parameters.
Computes the optimization updates for the given parameters and gradients.
Compute the firstglimpse sensor.
Prepares the network for training.
Compute the tensor of x and register the monitoringmonitors.
Apply a function to each element in the Dataset.
Vectorize the target string of a dataset.
Log training validation and test sets.
Train the network.
Samples from input.
Compute alignments from precomputed values.
Computes the context vector for the given inputs.
Concatenates variables along an axis.
Pad the dataset with given side and length.
Calculates the RMSprop metric for a set of parameters and gradients.
Prints the time to stdout.
Computes the objective function and returns the output variables.
Runs the model and updates the checkpoint if needed.
Build the loop variables for the network.
For each new step in the network replace the outputs of the variables with the ones in the
Returns a list of free parameters and a list of free parameters.
str_ if training_flag then_branch else_branch.
Sets the number of batches to skip and the number ofepochs to skip.
Loads parameters from file.
Train the network.
Runs one training step of the network.
Runs a valid epoch. Returns True if the given epoch is within the patience of
Print a message to stdout with the current epoch and the new best score.
Splits the input string into training validation set and test set.
Applies a function to self. tensor and returns the output_dim.
Print the report to the logger.
Creates a new deepy. tensor. var object
Create variables from data.
Construct a shared array.
stack the encoding layers and append them to self. encoding_layes
stack decoders and extend them to the end of the stack
Encodes x into the network.
Decodes a single dimension of x from the network.
Create a 2d Gaussian
Registers a layer into the model.
Adds the mean value of each layer s output to the training_monitors list.
Returns a list of all of the parameters in the configuration.
Sets up the input and test variables.
Compute the output of the function with the given arguments.
Save the parameters of the network to a file.
Loads parameters from the specified file.
Log information about the model.
Registers the given updates.
Register new training updates.
Register one or more monitors.
Computes the vector norm of multiple l2 norms of a list of tensors.
Dumps one element to a pickle file.
Load a string from a file - like object.
Load the parameters of this block from a file.
Decode a user - defined state string.
This is a helper function for the x_credentials_parser.
Helper method to remove the request elements for an access_token_request_type.
Log in the user using the specified provider.
Normalizes a dict so that the keys and values are of the same type.
Convert a list of items to a dict.
Parses the body of a query string using the elementtree parser.
Resolve a class to a provider class.
Creates a new cookie.
Save the session data to the adapter.
Returns the cookie value or None if the cookie doesn t exist.
Returns the data as a string.
Generate the signature for the given parts of the request.
Serialize the value to a string.
Returns True if the expiration time is greater than the current time otherwise False.
Returns True if the expiration time is greater than the given number of seconds.
Return a string representation of the provider and its type.
Return True if content is a binary string.
Returns the content of the response as a string.
Fetch user info from bitbucket using user_email_url.
Log in to Gae if the user is not a member of the group.
Returns the session key for the given key.
Sets the session value for the specified key.
Generate a pseudo - random md5 hash of the given secret string.
Log a message to the global authomatic. core. logger.
Check if the HTTP status is in the given category.
Split a URL into a base and query string.
Set CORS headers on the given request.
Returns a dict with the values of the app instance s kwargs as keys and their values as
Return a readable string representation of an object.
Ensure inst is iterable.
Returns True if a and b are close enough
Deserializes a binary string into an audiosegment.
Create an audiosegment from a file.
Create an audiosegment from a numpy array.
reduce self and others to string
Returns a string representation of the object.
Choose the front id from the candidate_offset_front_ids and offset_front_
Get the offset front id after the given onset sample idx.
Get the offset front id after the onset front.
Tries to match a list of onset_fronts and offset_fronts to
Returns a list of consecutivemethod_of_front and a list of overlapping_offset_
Return the index of the front id based on the index of the front.
Yields the list of front IDs that have been yielded at a time.
Get the corresponding offsets for a given frontend and onsets.
Remove overlap in segmentation_mask from fronts.
Remove fronts that are too small.
Merge adjacent segments
Convert a 1D array of binary masks into a 1D array of binary masks.
Downsample one or the other part of a mask.
_ a_ a_a_task is a task to take one or more masks and
butterworth bandpass filter
Apply a lowpass filter to data.
Converts a list of data rows to a tf_input matrix and outcomes one -
Expand a set of rows and standardize the dataset.
Return a list of elements not in a but in the order of the elements in b.
Load the list of confusion matrices from the audit. json file.
Converts a list of data rows totf_input.
Update the index url from the pip config files.
Checks for invalid files in the requirements file and adds them to self. filenames.
Raise an exception when an error occurs.
Return information about the stream.
Open the LSL stream and handle an error.
Return a child element with the given name.
Return the next sibling of the element with the given name.
Return the previous sibling of this element.
Set the name of the element. Returns True if the name was changed False otherwise.
Set the value of the field. Returns True if the field was updated False otherwise.
Append a child element to this element.
Prepend a child to the end of this element.
Append a new xmlelement to this element.
Prepend an xmlelement to this element.
Remove a child from this node.
Return a list of the results of the resolver.
Takes a word and returns a list of tokens in the form of a list of tokens
Process the input string s and print the results to the console.
Returns a list of edge n - grams from token.
Yields the values of the processors in a pipeline.
Makes an iterator over the items in an iterable in a pre - ordered manner.
Make a fuzzy string.
Processes a word and prints it.
Perform the Fuzzy Index on a word.
extend results extrapoling relations with their common values
Prints the help for the specified command.
Display the information of the database
Do a dbkey command
Perform geohash on a latitude and longitude
Print the details of the document with the given _id.
Return the best score of word.
Sends a request and returns the response.
Applies a function to a list of requests.
Extract bits from an array of words.
Convert a single bit array to a sequence of bits.
Convert a slice to a slice.
Yields all files that match the pattern in the given directory.
Test if each element in iterable is a member of sigorval.
static method that calls bodyfn for each item in items.
Returns an int if x is a number or a float if x is a number.
Returns True if num is a power of num_.
Create a case endpoint.
Set the default value of the node.
Registers the interfaces of obj in the vcd writer parent.
Register the component interfaces and their Remainingsignals before the simulated unit.
Log that a change has occurred
Process the hwprocess.
Returns a list of autoadd agents for the specified unit.
Returns the current instance of the parent class or the current instance of the parent class.
Yields the elements in an iterable that do not contain any elements in the given iterable
Applies a function to each item in collection grouped by key.
Flatten an iterable.
Merge nested if condition from nested else statement.
Removes all unconnected signals from a netlist
check ifistoo simple assignment
Try to merge two HDL procca and procb. Raise incompatibles
Reduces the number of processes in a list of str_ processes.
Add a request to the list of requests.
Returns the name of the output of a process and Mark outputs.
Cut off driver of a signal.
Synthesize an entity.
Get the maximum ID for a given assignment or waitstm.
Get the maximum ID of the statements that contain the given statement.
Write the data to the interface.
get the interface name
Loads the declarations from the interface.
Returns a list of signals for the given interface.
Returns the physical name of the entityport.
Return the number of bits of each interface.
Return the sensitivity of the specified operation.
Convert a sigorval to a specific type.
Interpret bits in hstructt as a string.
Return the number of words inside a word within the word width of the specified range.
groupby the word index of a transaction based on the word width of the word.
Pack the data into a string.
Internal method to clean the signal metadata.
Discover enclosures for a list of INDRA Statements.
Given a sequence of signals find and extend the casualslower of those signals.
Get the context of the inputs and outputs.
Collect the results of the reduce operation.
Adds the information from the other node to the current node.
Determine if a list of stmsa and stmsb are merged or not.
Merge a list of INDRA Statements into a new list of INDRA State
Merge two lists of strings.
Reduces a list of statements.
On parent event dependent callback.
Sets the parent Stm for this node.
Registers the given list of INDRA Statements into the given list of IN
Destroy this node by removing it from all its inputs and outputs.
Connects all the interfaces and private interfaces to the entity and calls the _clean method.
Recursively walk over all of the fields of sigorval.
Convert self to signed if self. signed == signed otherwise return self.
Adds a class of sensitivity to the given process.
Return a tuple of bool_ and a tuple of bool_ for which a boolean is True
Import connect from a unit to another unit
Convert a string to a number of bits.
Process a hwprocess.
Evaluate a parameter.
Set the value of this column.
Convert an interfacemap to a struct
Finalize the object.
Get the index of the current driver
Create a string from a Python value.
auto cast a sigorval to the specified type
Cast the signal or value to the specified type.
Walks the specified interface and all its sub - interface parameters.
Connect a single - bit interface to another interface.
packintf - packs an interface into a string
Yields the actual Tortl instances for the target platform.
Registers the specified interface in the context.
Tryreduce and return the same value if the value is a full version of the sig.
Try toreducexor the given array - val if the array - val is the
Get a new namescope with the same level and keywords as the current namescope
Serializes the specified object into the specified serializedclasses for the specified units.
Get the base condition of a node.
Computes the simbitst of a given width and signed value.
Get a name for a value and cache it.
Returns a string for the driver to cut off the specified signal. If the signal is not
Load from an array.
Load this node from the given hdltype. bitaddr is the address of the node
Load from the given dtype.
Get the width of the array.
Walk the structure and its children in a stream.
Sign a value with a fixed width.
Return the current indentation level.
Check if an attribute of an object has a given name and has a given value
Register a parameter with this node.
Update this object s parameters from another object.
Register a unit as a parent of this parent
Adds the specified interface to the list of interfaces.
Register an array of items as a child of this array.
Get the single driver driver.
Evaluate the staticeval of each operands and store the result in self. result.
Add a withres operator.
Adds an indent to the context with an optional number of spaces.
Connects to the specified module if the specified module doesn t exist or if the specified module
Connect the clk to each of the units in obj. _units.
Moves the clk rst_n connection between each unit in obj. _units and
Propagate through the clk rst and all the units in obj.
Connects to each unit of a RST object and returns the number of connections to each
Connects all the units of an object to the RST representation of the object.
Return an iterator over the bits in a given signal.
Serialize exclude_eval.
Helper function for serializeonce_eval.
Serialize params unQ_eval.
Get the full name of the object
A convenience method that calls the _make_association method for each object in the collection
Return the model of the given unit.
Retrieve the reconnect unitsignalstomodel of a model class.
Compute the unit V cd value of a set of simulated units.
Initialize the default ontmodel callback.
Connect this signal to another signal.
Register a signal for this source and destination.
Connect this direction to another driver.
Returns the direction signature for this node.
Determine if the given process is the isev dependent on the given process.
Adds a new process to the queue.
Adds a procs to the scheduler if it s not dependent on the given trigger.
schedule the combupdated oneev to wake the cud and return the cud.
Applies the sequence values to the scheduler if not already applied.
Helper function to handle the conflict between the old value and the new value.
Runs all the child processes of the given component.
Run the sequence processes.
Applies the appropriate values to the schedule if necessary.
Return the value of the signal as a string.
Applies a value to a simsignal.
Adds a new process to the queue.
Simulate a unit until the given time.
Return a list of if statements that contain the given operator and operands.
Computes the distance between two hash strings.
Calculate the average hash of an image
Calculate the distance between the image and the other image.
Setup viziodevice.
Update the volume level of the device.
Mutes the volume of the device.
volume up by the current volume step.
volume down.
Set the volume level.
Resets the board.
Creates a piece at the given square.
Remove piece at the given square.
Sets a piece at the given square.
Check if a move is asuicide or check bydropping a pawn.
Returns True if the game was suicide.
Checks if the game is over.
Checks if the game is checkmate.
Determine if a repetition is open or not.
Pops a piece from the move stack and removes it.
Return the sfen of the piece.
Push a move into the move stack and return it.
Generate a zobbg hash of the piece s state.
Returns the symbol of the piece.
Instantiate a piece from its symbol.
Returns the name of the piece.
Create a piece from an usi.
Given a string of commits return a generator of parsed commits.
Parses the commit line into a dictionary.
Executes a command from the given command line with the given configuration.
Generates a YAML configuration file.
Cast a string to an attribute of this object.
Returns a list of dates between first_date and last_date.
Attempt to parse a string representation of a date into a datetime. date object.
Loads the content of a file into the currency object
Set the missing value to none for the given currency.
Get the rate for a currency at a specific date.
Generate frames of text and print it to stdout.
Reads a record of n bytes from the file and returns it as a string.
Write a single record to the file.
Map words from start to end.
Returns the comments as a string
Close the DAF file.
Generate a sequence of positions from this position generator.
Close the DAF file.
Loads the coefficients from the DAF file.
Check if function call is within logging statement.
Check if the operation is within the logging statement and its argument.
Check if the keys and values are whitelisted.
Check if a value is within the logging statement or if any of its values is within the
Check if the keyword is in the whitelist.
return an astroid. excepthandler node as string
Try to detect the logging level of the given function.
Get the name of the except handler.
Returns the value s id attribute if it exists else returns the value s id
Return True if the node is an exception and it s not in the current except_names
Check if an exception is in the context of the given node.
Deletes the file if the instance already exists or if the instance already exists and the file
Render PDF from template.
Render the template to a response.
Encode or decode a string according to an HTTP - quote.
Create a configuration for the specified module or if no module is specified a new one is created
Converts a string to an underscore - separated string.
Create a new index for each document in the collection.
Load and parse a file into a pricemodel.
Load the content of a file.
Parse a line into a pricemodel.
Translates the specified symbol to the specified in_symbol. If in_symbol is
Loads the symbol maps from the repository
Gets the current session
Import prices from CSV file
Returns the latest price of the security symbol
Download prices.
Prune the security symbol and print it.
Get the default session for the price database.
Adds a new map to the outgoing database
List available symbol maps
Get a symbolmap by its identifier.
Reads the content of a CSV file and returns it as a list of lines.
Map entity to pricemodel.
Map a model to a price entity.
Reads the config from the specified file.
Returns the absolute path to the config template file.
Create the user config file.
Get the user s config file path.
Gets the content of the file.
Set an option in the configuration.
Get an option from the configuration.
Save the configuration to a file.
Parses a symbol into its parts.
Add price to entity
Downloads the price of the currency and agent
Gets the session to use.
Returns a list of price entities in the repository with the specified date and currency.
Get the latest prices on a particular date and symbol
Prune all items that have been deleted. Returns the number of items deleted.
Delete all prices of a security symbol
Downloads a price from the market.
Fetch securities in the repository.
Return a partial state of the state of the object.
Updates this function s arguments to reflect the child calls of the current function.
Yields all child objects of this object.
Check if the student has the correct option.
Return the list of items that are not empty.
Returns the appropriate instance of the specified parser and extension attribute for the specified tree.
Test if the given state is in the correct context loop.
Check if the specified context is in the context with the specified name.
Check if a student part is a child of another.
Check if a student part is part of a particular student part.
Determine true anex of the time domain
Initializes the application with the LDAP3 login manager.
Adds an LDAP server to the server pool.
Decontextualise the specified LDAP connection.
Tear down the context and remove the main connection from the ldap3_manager.
Authenticate the given credentials using the search service.
Perform a direct bind to the LDAP database and return the authentication response.
Get a list of groups the user belongs to
Get the user info for the specified object.
Get the user object for the given username.
Get an object by name and attributes
Get the connection to the LDAP manager.
Make a new connection to the IRC server.
Constructs an ldap3 connection
Remove the specified connection.
Searches the index using the provided query or search args.
Search all entries in the database.
search all the jobs in a collection
Speak the database.
Annualize the message if command is not specified.
update self. _secrets and update self. _base
update the headers of the request
Check if the client has any of the specified secrets.
Download a URL to a temporary file.
stream for a given URL. If stream_to is specified return the stream to stream_
update the token in the headers
Gets or creates a folder.
Reads a response field from the response.
get bucket by name or create it if it doesn t already exist
Updates self. secrets and self. base if needed.
Initializes the client.
Loads the user s data from the API.
Print the logs of the results.
List the logs of the bot.
create a folder for an endpoint
Initializes the transfer client
return a list of matches for all the URIs in the log
Print the current status of a client.
add a new client secrets variable
Remove a variable from the settings
Activate the specified backend.
Delete a backend from the settings
Update the base of the image.
Create a basic auth header with the given username and password.
Generate the signature of the payload and secret.
Generate a header signature for a request.
Make a HTTP DELETE request to the specified URL.
Shortcut for requests. head
Gets a list of results from the given url until the specified start_page is reached
If disable_ssl_check is a boolean this function will return True if the socket is
remove an image
Returns a dictionary with the version lookup for the given version string.
Returns a list of requirements for the specified module.
get the singularity version
check_install will return True if the software is installed or False if the version is installed
Returns the absolute path of the installdir
Gets the thumbnail file path.
Runs a command and returns its output as a string.
Get the metadata for an image file.
Updates self. dbx and self. account
print the response to the specified file. If output_file is specified the file will be
Terminate the current process if the number of commands specified is greater than the number of commands
List the logs of a container.
Returns a list of the collections in the account
update self. _secrets
Yields a string representation of the command.
get manifests from a repository
Get the manifest of a repository.
Get the download cache for the specified subfolder.
Extract environment variables from config file.
update self. base and self. artifacts and self. job
Update self. token and self. headers.
Get the metadata for the job.
Gets the client s settings from the settings file if client_name is not specified and
get and update a setting if it is not already set
Update a client setting.
Generate a signature for a request.
List all of the Builders in a specified zone.
Load a bot s templates by name.
Get an IPv4 or IPv6 address for a given network name.
Builds a new instance.
Return a list of containers that match the given string.
Returns a list of lists of all the containers and metadata for the given bucket name.
This is the main function of the command line parser and subparser.
Shares the client s images with a subparser.
Initialize the database for the bot.
return a build template if it exists or if it doesn t exist
list all the endpoints of a given type
list endpoint.
share a message
Reads client secrets from the client secrets file and writes it to the client secrets file.
Gets the Google Cloud Storage service and computes it.
Deletes an object from a bucket.
Delete an object from the bucket.
Delete one instance by name
Returns a dictionary of subparsers for the given parser.
Generate a string of the form descriptor noun and numbers.
Returns the path to a temporary directory with the specified prefix.
Extract a tar archive into a folder.
Extract a tar archive into a folder.
Returns a hash of the contents of a file.
Read the content of a file.
Read a JSON file.
Remove files from the system if they exist.
Push an image to S3.
Get the collection with the given name or create it if it doesn t exist
Get a collection by name
Get a container by name and collection_id.
list all images in a container
Inspects a container and returns its fields.
rename an image
mv an image
Remove an image from the container if it exists
Parses the header of a recipe and returns the parsed header.
Find a single recipe by filename and pattern.
create a build package from a list of files
Update the metadata associated with the given blob.
Format a container name.
Return a boolean indicating whether or not this terminal should colorize.
Return the string representation of an error message if level is set to abort error or warning.
Writes the given message to the given stream.
Print a table of rows.
push an image
Get a template by name.
Get the manifest for a specific image
get a build template
read secrets from the client and update self. secrets
A context manager to catch and report errors in the response of an S3 request.
Creates a new proxy that uses a temporary file.
Returns the grav transition URL for the given user or email address.
Returns the grav transition url for the given email.
Returns True if the user has a grav transition to the given email. Returns False otherwise
Get the grav transition profile url.
Yields the chimera blocks of length m.
group blocks into chimera blocks
Given a list of smiles return a list of all Resonance smiles.
Returns a list of all resonance molecule results.
Apply a transform rule to a molecule.
Cannonicalize a molecule to its canonical form.
Validate a list of smiles
standardize a list of smiles
Enumerate tautomers from a list of smiles.
canonicalize a list of smiles to beutomer
Return the parent of the tautomer of the parent of the molecule.
Return the parent fragment of the molecule.
Get the parent of the stereo chemical entity.
Set the isotope number to the parent of the molecule.
charge parent fragment
Main function for the command line tool.
Remove fragments from the molecule.
Choose one or more fragments from the molecule.
Integrates the term term term term term term term term term term term term term term term
Gets the number of members of the current org and adds them to the members_json
Prints the number of teams in the organization.
Get the total number of repos for a given type and organization.
Get the total number of authors in a repository.
Get Open and closed pull requests for a given repo.
Gets the list of closed issues for a given repo.
Returns the readme of the repo.
Get the license for the given repo.
Returns the number of commits in the specified repo.
Writes a json file for the given organization and date.
Writes the total count of the workout to a file.
Writes the list of languages to a file.
Creates a directory if it doesn t exist
Removes the date from the specified file.
Returns a list of the available orgs for a given GO ID.
Create a GitHub session.
Helper function to check the API rate limit.
Connect to GH.
Yields repo objects for given orgs and repos.
Gets the user s organization name
Writes the stargazers to a file.
Build a new project object from a gitlab. V4 repository.
Returns the obj if the license is not found in the string.
Gets all the data for each organization and repo in the organization.
Get releases for a given repo
Get referrers for a given URL.
Gets the data from a given URL and stores it in the data dict_to_
Writes a JSON file with the content of the dict_to_write.
Writes referrers views and clones to file.
Checks the data redundancy of a CSV file. Returns the number of entries in
Writes data to a file.
Writes referrers to a file.
Process a JSON file.
Process a URL and return a list of records.
Process a file or URL.
Authenticate to GitHub.
Get all the members of the organization.
Writes the logins to a file.
Creates a stashy session and logs it to the stashy logger.
Connect to a gitlab server and return a gitlab session.
Query repos in the gl_session.
Compute the number of labor hours in a person s month.
Remove all non - string values from a dictionary where the value is a string.
Reads a GQL file and returns it as a string.
A helper function to await the reset time and print the reset time.
Print the waittime and the number of remaining jobs to be processed.
Loads the data from the specified file. If the file does not exist an error is
Saves the data to the specified file.
Creates a tfs connection
Create a project analysis client
Create the tfs core client for a given URL
Create a tfs connection and return the git client
Create a tfvc client
Get a list of Git repositories for a project.
Get a list of branches for a project
Gets the total number of commits in a year
Calculates the total commits of all the commits in commits_dict_list starting from
Writes the commits to a file.
Log stat and value.
Log a histogram of the given stat and value.
roll up the leader and return the time it takes to do so. If now < next
Returns the enum value corresponding to the value passed in.
Returns the string representation of the value.
Prepare value for database storage.
Recursively resolve the given path.
Returns a dictionary of lists of lists of lists of symbols that are used to project a dictionary
Returns the mean value of the counter.
Marks the given value as being used in the metric.
Returns the mean rate of the current timer.
Mark the value of the last time since the last value.
Serialize a metric and send it to the backend.
Returns a list of string representations of the metric.
Format a metric string.
Send a single metric and update the batch count if the batch_count has been reached.
Override default get to catch nooptionerror and raise missingsetting.
Decode str_ if str_ is an instance of str_ raise valueerror if it s
Get or set the default value of an option. Returns the value if it doesn t exist
Returns a map of ledger codes to a set ofguids
Returns a dictionary of choices and current divisions
Map an exact invoice number to a one - to - one mapping of that invoice number to
Returns a view representation of the request.
Returns a view of the form.
Returns a view of http methods for the given request handler.
Return a view of the current API.
Creates a view for a given generic API view.
Returns a viewset of the given model viewset.
Create an asyncio stream from a file descriptor.
Read until the connection is ready to send data.
Close the connection and pause the reading thread.
Add a new watch to the watchlist.
Remove an alias from the watchlist.
Setup a new watch for the given path and flags.
Setup the IO loop for this IO loop.
Gets the next event in the stream.
touch event.
Update the interval and update the short_interval and long_interval fields.
Update the interval that will trigger the short_interval long_interval and update the long_
Close all open connections.
Connect to annsqd instance.
Query lookupd endpoint
Set the max_in_ flight state of this node.
Log a warning.
Add a callback to the list of listeners.
Remove a callback from the specified listener.
Trigger a named event.
Publish a message to a topic.
Set feature transform of the Dataset.
prediction function.
Clean up unpaired fastq files.
Reads a depth file and returns a dictionary of the number of reads at each position.
Sets the path of the template to use.
Set the names of the main channel names
Render a template with the given context.
Render the template using the given context.
Updates self. main_forks.
Updates the attributes of this object.
Sets the secondary inputs for the given channel.
Parses the assembly file into a set of contigs.
Calculate the content of a sequence based on the gc count.
Returns the total number of assembly length.
Writes the assembly to a file.
Writes the report to a file.
Removes the forks from the given text.
Returns a list of insanity checks for a pipeline string.
Returns the lane of a pipeline in a fork process.
Returns a list of lanes from the given lanes string.
Creates a linear connection with the given plist.
Adds unique identifiers to a pipeline string.
Removes unique identifiers from a list of pipeline links.
Check that the required files exist.
Convert a header string to a mapping of column names to column names.
Returns the HMS of a string.
Covert the size of a string to a float.
Gets the list of pipeline processes from the log_file.
Clears the inspect of the current process.
Updates the current status of the current status of the worker.
Retrieve the log of the specified file if it exists.
assess the resource warnings.
Updates log_parser and trace_parser.
Display overview screen.
Move the cursor in the specified direction.
Move the screen right left in the given direction.
Get the last n lines of the log file.
Prepares the static info files for the pipeline.
Reads the dag file and returns it as a dict.
Compute the md5 hash of the run of the pipeline.
Returns the path to the nextflow
Main function that reads a file and writes it to a file.
Returns the pipeline string for the given input_processes. If no input_processes are given
Lists all recipe classes in the recipe package.
Check if the pipeline_string is a valid pipeline string.
Builds an upstream task pipeline for a given set of tasks.
Builds adownstream for a given task.
Constructs and builds the pipeline string for the given set of tasks and returns the pipeline string
Returns the string representation of the component.
Writes the report to a file.
main function to parse log files and write them to log file system.
Fix the contig names in the contig file.
Remove the trailing realpath of the fastq file.
Parses a list of files
Parses the log file.
returns contig_id from contig_str if contig_str is not found
Writes the plot and table data to a json file.
Parse assembly file into dictionary.
Calculate summary statistics for each contig and print to output_csv.
Get window labels for each contig.
Calculate the gc of a string.
Get the gc_sliding of the current contigs in a window.
Run fastq clean up and clean up if it doesn t already exist.
Writes a json report of quality stats between two samples.
Parse the bowtie log
Parse process name and directives.
Adds a dependency to the pipeline.
Search the tree forwardwards.
Adds the header to the template
Adds the footer to the template.
Sets the parameters of the init process to self. processes
Sets the secondary channels to the values in the secondary_channels dictionary
Sets the status_channels to the report_inst s status and report_inst s status
Returns the manifest string for the config file.
Set configuration values.
Writes a DAG to a file.
Writes the configuration to a JSON file.
Export params to json.
Export the directives to a JSON file.
Builds the project and prints it to the console.
if kmer_opt is a string or split it into a list return the list of
Gets the report id from the log file.
Update the trace_watch in the trace_file.
Update the log file to reflect the current pipeline status.
Send a live report to the broadcast address of the given report_id.
Initializes the live reports for the given report_id.
Close connection to the broadcast address.
Converts adapter fasta to adapter fasta
Computes the hash statistics from the Mash output file.
Print msg to stdout with color_label except keyerror.
Processes the process_map and exits with an error.
Get the range of values in a qual string.
Filter an assembly file based on coverage info.
Get the assembly size and the number of contigs in the assembly file.
Filter and apply coverage analysis to an assembly file.
Convert camel case to snake case.
Collects a process map from a package and its components.
main function for Dendropy. tree. get
map a vq array to the corresponding data array
Apply a median filter to a 2D array.
Computes a gaussian signal with m - num_.
Computes the square root of x using the square root of x.
Compute nc based on g
Apply a gaussian filter to a 1D array.
Computes the number of samples from a feature vector.
Shortcut function for circular shift
Residualize the embedded space of a matrix.
Helper function to plot formatting.
Plot the boundaries of an est file.
Plot the labels of the given est_file.
Given a feature vector and a set of indices return a list of feature segments corresponding to the
Convert a list of 1D feature segments to a list of 2D feature segments.
Fits self. scatter_range_ = self. scatter_within_ = self.
Reads reference information from the given audio file in the ds_config. references_dir
Finds the estimation of an annotation given a set of parameters. Returns the estimation
Returns a list of all boundary algorithm IDs
Get the configuration of a given feature and labels.
Returns a list of all the files in the dataset.
Reads the hier references in the given jams file.
Returns the duration in seconds of the features file.
Write a Mirex file.
Get the path to the dataset file with the given extension.
aligns a segmentation to a song using librosa. util. match_inter
Estimate the beats and frames of the audio.
Read the times and frames of theann beats from the reference file.
Compute the beatsync features of the framesyncs at the given times.
Returns a list of the names of all parameters.
Compute framesync times.
Return the times of thebeatsynced features.
features of the object.
Preprocess the features before returning it.
Preprocess and update the est_idxs and est_labels.
main function.
Print the mean of the results.
Computes the information gain.
Process a track file and compute thegt results.
Get the name of the results file.
Computes the features of the given audio file.
Compute features in a dataset.
Calculate the cost of a gaussian function.
Return a log - normalised version of f.
Normalize a string to the minimum and maximum of a number.
Create an array of time frames from the given durations and anal.
Remove intervals and labels where the number of segments is less than the number of labels
Sonify clicks.
Compute the median label - median label - median label - median label - median label - median
Process a segmentation level.
Align the end of each hier in hier1 to hier2.
Compute the distance between each index.
Estimate k -knee
Get the clustered data.
Compute the k - means
Compute the Bayesian Information Correlation Coefficient.
Return the magnitude of a number
Convert a segment json file to a segment bounds array.
Reads a json file and returns a numpy array with the bounds of each segment in the
Converts a segment in a JSON file to a numpy array of labels.
Reads a JSON file to a list of beats
Compute the 2D Fourier transform of x.
Computes the labels of x according to the given rank and bound_idxs.
Filter a matrix g according to the activation of r.
Returns the module object of the given boundaries ID.
Get the module corresponding to labels_id.
Runs the segmenter on the given audio file.
Run an audio file as a flat segmenter.
The main entry point for the spool script.
Sets a new task to be run by the given translator.
Spool out the words in the given iterable.
Reads lines from inputstream and sends them to the target. Returns the number of lines
Returns the translation table for a language in a JSON file.
Prints a translation table for a given language.
Remove nodes and edges from network.
Save a network to a pandas. HDF5 file.
Create a network from a pandas. HDF5 file.
Process a node e.
Makes a query to the OSM API and returns the response.
Returns the query string for a node.
Returns True if the value is a regex
Compares a string value with a given expectation.
Compare the strings in the expression to the given value.
Trigger a set of methods from an instance.
Returns the matcher corresponding to the given name or None if no matcher with the given name is
Returns a valueerror if the name doesn t match.
If body is a string decode it and set self. _body.
Set the response body as JSON.
Set the value of a key to a list of values.
Append function to target.
Raises typeerror if request is not a valid request.
Add a matcher to the request s headers.
Determine if the header name is present in the request.
Determine whether or not headers are present in the response.
Adds a set of params to the request URL.
Update the body of the request.
Adds a matcher to the request s json.
Update the request s xml.
Reads the file at the specified path and returns the contents of the file.
Saves the current state of the object to the persistent store.
Set the error string.
Return a response object with the specified status.
Match a request.
Set a mock engine
Instantiates a mock instance and adds it to this mock instance
Remove a mock from this object.
Activate the mock engine.
Disable the mock engine.
Returns True if the network should be used for this request.
Returns True if the request matches any of the filters. Returns False otherwise.
Make a copy of this request.
Activate and disable the global engine
Adds one or more interceptors to the list of interceptors.
Removes the specified interceptors from the list of interceptors that match the specified name.
Returns the value of the setting for the given key if it exists else returns the value of
Returns the SQL for this column and itscast_sql.
Override the pre_save method to replace the original value with the new value.
Returns the placeholder value if value is none or value is a string. If compiler or connection
Returns the specified column or if alias is different from the model s db_table or if
Returns the placeholder string for the given value.
base regression function
Inverse of the covariance matrix.
Recursively recurse into the leaves of the tree.
Recomputes the averages of the nonterminals in the tree.
Calculates the variance of the tip value of all nonterminals in the tree.
Calculates the regression of the time series.
interp1d and calc_integral_merger_rate
Calculates the number of branches in the tree.
Calculate the merger cost of a node.
Attach clades to the tree.
Normalize a profile by the sum of its components.
Set self. _gtr
Set self. _gtr and self. _gtr_site_ specific logger.
If l is an int then log the length of the sequence. Otherwise log the length of
Attach sequences to nodes.
Prepare the entire tree.
Calculate distance between internal and non - terminal nodes and update _internal_node_count.
Calculate the dist2root of all clades in the tree.
Calculates the mutation matrix for a given node.
Returns the string representation of the new sequence.
Get the fitch state of a node at the given position.
Inferancestral sequences.
Computes the ancestral likelihood of the tree.
Convert a node s branch length to its GTR representation.
optimal branch length
Reconstructed alignment from the tree
Computes the sum of the diagonal elements of the matrix.
Convenience method for creating a new Gtr with custom values.
Ensure that the sum of the values in the matrix is the sum of the values of the
Computes the optimal - t coordinate for a given sequence pair.
Computes the probability of the t - profiles.
Computes the log - normal distribution of the log - normal distribution at the given time
Computes the log - likelihood of the sequence seq.
Set branch length mode
Plot the root to tip.
Print the likelihood of the marginal likelihood.
Adds a coalescent model to the tree
Find the root of the tree and return the root of the best root of the tree.
assure the tree of the model.
Creates a Gtr object from a set of parameters.
Read if VCF file.
Calculate the FWHM for a given distribution.
Create a str_ distribution with a weight parameter.
Assigns the appropriate number of dates in the tree.
Setup tre Registers for the tree.
Creates the time tree.
Return the likelihood of the tree.
Converts the node s date and time to a string.
Returns the date uncertainty due to the node s num_date_rate variation.
Get the minimum value of a linear interpolation.
Calculate the median value of a linear interpolation.
Returns the numeric date in the specified datetime or none if the datetime is none.
Creates a class based on the given regression model and returns a new instance of this class.
Closes the connection to the server.
Receive a line of text.
Sends the given data to the client.
Sends an instruction.
Returns unicode_str encoded as str_ if unicode_str is a unicode string.
Decodes an instruction and returns a instructions instance.
Encode an argument to a string.
Encode this instruction into a string.
Returns the URL for this class.
Returns the URL to an instance of this model.
Returns the URL for this class.
Download the file at the specified path.
Retrieve the parent object of the job.
Prompts the user for credentials and returns the domain email and password.
Performs an interactive login for the given domain and password.
Prints the user s who hostname if user is not specified otherwise prints the user.
Prints a user to the console.
Return a range of genomic strings matching the specified chromosome.
Return a copy of this str with only the specified position.
Fetches the list of facets for this query.
Recursively process a list of filters
Return the next item in the buffer. Raise stopiteration if there is no more data
Execute the request and return the response.
Create a migration for this client.
This is the entry point for the solvebio CLI.
Construct an instance from a dict of values.
Logs out the user.
Retrieve the child object of this task.
Parse snpeff output
Returns a tuple containing the user and password for the given netrc path or None if the
Save the configuration to a file.
Returns the formatted string representation of a value of type valtype using float or string format.
Given a list of string cells and a padding and the end of the row build the row
Given a list of column widths and padding build a row of text.
Add alignment attributes to row and column of mediawiki cell.
Create a migration for this source to target.
Uploads a file to a vault
Validates that a path is a valid Vault path.
Check if the given URL is a valid API host URL.
Annotating a list of records.
Evaluate the current expression.
Set the format name to use.
Register a new format handler for format_name.
Create a tabulate iterator for the given data and headers.
Path to the user config file.
Return a list of system configuration files.
Returns a list of the additional file names for this project.
Writes the default configuration file to the user config file.
Read configuration files and update config values if valid or not.
Truncate a string to a maximum width.
Replace all instances of replace in string s with string replace.
Calls a list of commands in a sequence and exits.
Applies an option to the command.
Initializes the options.
Run the command.
Call self. call_in_sequence with self. clean_docs_cmd and self
Truncate a list of rows and column headers to a maximum length of max_field_
Format a row of a table into a string.
adapter for vertical_table
Generate a table with the given data and headers.
Return a bool if the value is a number.
Return the string representation of a boolean.
Returns True if type is a binary type.
Generate a new key using the given template.
Generate a new public and private key pair.
Find and return a list of all the objects in the object that match the template string.
Inserts an image into the icon
Export genes from panel.
Returns the first weekday of the given datetime object.
Return the number of times the given day is repeated. If no day is given return the
Re - repeat the date in the specified time range.
A helper function that creates a biweekly report.
Handle a single chunk event
Return a generator of variants in the database.
Export the variants in a Mt - VCF document.
Creates or updates a user
Return a dict of the variants for a given case.
Show the information for a variant in a case.
Get the str_variant data for a variant.
Verify a variant.
Export a variant and redirect to the URL associated with it.
Return whether the institute_id cancer variants for a case.
Mark a variant as acmg and redirect to the URL associated with it.
Redirects to the evaluation view for the given evaluation_id.
Gets the acmg for a given criteria.
Upload a panel to a specific case.
Downloads the verified Excel for the current user.
Given a gene mapping HGNC symbol and gene HGNC symbol return a dict of
Add in - completepenetrance of a set of HGNCs.
Makes a request to the matchmaker api and returns the json response.
Mme base url and token
Get the coordinate of a cytoband.
Determine sub - category based on alt_len ref_len and category.
Calculate the length of a string.
Get the end of the alternative string in the specified region.
Given a variant and a category parse the coordinates.
Update a panel.
Export a panel as a PDF.
Edit a single gene.
Get a delivery report.
Return the terms of the HPO query
List all whitelisted devices.
Builds a phenotype object
Add gene links and transcripts to hgnc_id.
Return a list of gene terms that match the given gene query in the hgnc store
Displays the list of institutes for the current user. If the user is an
List all transcripts in the database.
Display the events for a given day.
Parse variants from a variants query.
Get a list of strings of variants for a case or variants query.
Make a variant for a given variant and store it for a given case.
Returns the header for a variants export case.
Get predictions for a set of genes.
Find the BAI file in the given string.
Get the observations from the loqusdb and add them to the obs_data dict
parse a gene into a set of transcripts
Returns a change string for a given transcript object.
Get the end of the variant s position relative to the variant s position.
Returns the most common frequency for a variant.
Return a variant clinsig object with human - readable string representation of the variant.
Returns a link to the url_template for the given variant object.
Get the cosmic link for a variant
Return a link to the url_template for a variant.
Returns a link to the URL for the given variant object.
Returns the human - readable string representation of the given variant.
Returns a list of strings for each gene in variant_obj that is expected to be manual
Returns a list of all the calls for a particular category in a variant object.
Cancer variants in a case.
Return a dict of the data needed to export a variant to the store.
Gets the clinvar submission for a variant and a case.
Return the acmg for a variant in the store.
Given an instance of a variant and a case find the variant and submit the evaluation.
Computes the evaluation of the given evaluation object in the given store.
Uploads a stream to the hgnc_genes field for a particular case.
Export the verified variants of an Excel file.
Export all gene objects in the database.
Parse the clnsig into a list of accessions and transcripts.
Parse the compounds in a variant.
Returns a list of all the gene objects in the database.
Return a single case.
List all registered collections.
Load a institute adapter.
Returns a file handle for the given file path.
get the network number
Get the next and previous of a network.
Check if year is in year month month and if not add a new year month error_
Returns the weekday number of the given date.
Returns a list of individuals
Parses the PED file and returns a tuple of the family ID and a list of
Builds an evaluation object for a variant.
Determine whether a prediction is a pathogenic or not.
Returns a list of the variants in a case.
Find variant in the sanger database by institute_id or case_id.
Find a single variant and add it to the gene_panels field.
Finds the number of gene variants in the variant collection
Verifies that a variant is verified by a given institute.
Get the causatives of a case.
Returns a list of variant instances that match the institute_obj or if none is
Yields the other_causatives of a variant in a particular case.
Delete one or more variants in a case.
Find all variants that overlap a variant with a given string.
Return all evaluated variants for a case.
Query the variant collection for a given set of variants
Get a connection to a MongoDB instance.
Return a list of casedata objects based on the variant_ids and form_fields
Return a casedata_header for a list of submission objects.
Returns a list of strings representing the lines of a submission csv file.
Load a panel.
Build an exon from the exon_info dictionary.
Delete panel with panel_id and version.
Drop all indexes
Delete user.
drop the genes in the object if build is set
drop the exons of a build
Delete a case and its variants.
Get the individuals of a specific case.
List cases or variants in the context.
Loads a user from the store. If the user is not found the user is returned
Perform the user login.
Builds an institute object
Delete event by event id
Find events in a variant or a case.
Finds all user events for the specified user. If user_obj is not specified then
Remove a phenotype from a case.
Parse the genotypes for a variant
Check if the coordinates are in the correct order.
Fetch terms from HPO.
Export all transcripts in the database.
drop and update the exons
Load the region of a case.
Return a queryset of all month events in a particular month.
Return QuerySet of QuerySet of Query instances live between now and now.
Parses requirements from the requirements. txt file at req_path.
Get the gene for the given HGNC ID.
Update a gene panel.
Make a new gene panel and add it to the store.
Export a panel into a JSON file.
Get archive information.
Migrate a case to an archive.
HPO - related terms
Configure the extensions for the given application.
Registers all blueprints in the app.
Get the aliases for a specific symbol.
Build a panel for a specific gene.
Export verified variants.
Export variants in a VCF file.
Returns a vcf entry for the given variant object.
Serve a MongoDB instance.
Generate an MD5 key for a list of arguments.
Initializes the application.
Sets up the collections for the database
Create or update an index in the database.
Create a Scout database.
Sets up a demo report.
Setup a new instance of MongoDB
Get institutes of a institute or a list of institute objects.
Parse the genetic models of a case.
Show gene panel information.
Adds an institute to the collection
Gets an institute by its ID
Match the given string date to a boolean if the string matches the regular expression date_pattern
Returns a datetime. datetime instance from the given string.
Display a list of HPO gene names for a single gene.
Parse the rank score entry for a case.
Adds a user to an institute.
Checks the server connection to the specified host and port. If username and password are specified
Load a delivery report from the given report path.
Adds the specified user object to the collection if it doesn t already exist
Renders a pileup template from the request arguments.
Load a list of exon lines from the HGNC database.
Update case compounds.
Adds links to a gene object
Show HGNC gene information.
Parse HGGNC genes from lines of text.
Get openclinvar submission for a user.
Update an existingclinvar id for a given submission id.
Gets the clinvar id of a submission.
Adds one or more variables to a submission. Returns the updated submission.
Update a specificclinvar submission by its id and status.
Returns a list of submissions belonging to the given user and institute_id
Delete a clinvar object
Return the submitted variables for a case as a dict.
Parse a HPO line into a term dict
redirect to the HGNC database for a single gene
redirect to the HGNC gene page with the specified HGNC symbol or to the
Returns a JSON object of the genes that match the query.
flash an institute and a case.
Return the institutes of the login_user.
Get the HGNC ID for a given HGNC symbol.
Update a gene panel.
Returns a list of disease terms from the disease_term_collection
Loads the disease terms from the hpo disease lines.
Parse the frequency of a variant.
Parses the dictionary of sv_frequencies from a variant
list of users
Compare two mim_panels.
Update mim version in new_panel
Adds a gene panel to the collection. Returns the gene panel ID.
Get panel by panel ID
Delete panel object
Query the gene panel by panel_id. If version is not specified return the gene panel
Find gene panels by either panel ID or institute ID.
Converts a case gene to a dictionary of panel names and IDs.
Update a panel in the collection.
Add a new pending action to the panel and return the updated panel.
Returns a set of all panel symbols in a case.
Return a list of cases.
Sends the given record to the SMTP server.
Populates the indexes from the database
Updates the number of indexes associated with the given string.
Drops all indexes from the database.
Builds a new variant query
Given a mongo_query dict and a boolean query dict return a mongo query string
Add coordinate to query if chromosome and coordinate are available
Filter gene query by gene and hgnc_symbols
wipe a database
Parse the panel information from a CSV stream.
Load a list of gene objects into the hgnc collection
Loads a list of transcript objects into the transcript collection.
Loads multiple exon objects into the database.
Get the gene object associated with the given HGNC identifier.
Find and return the HGNC ID associated with the given HGNC symbol and build
Find a HGNC symbol by its HGNC symbol.
Returns a list of all genes in the HGNC database.
Returns the number of genes in the HGNC database
Drop all genes in the HGNC database.
Drop all transcripts in the transcript collection.
Drops exons from the database.
Get the ensembl transcripts in the transcript collection
Fetch gene data from HGNC.
Find gene by its alias.
Get genes by its alias.
Get all the ensembl gene objects in the HGNC database
Return the HGNC symbol corresponding to the given HGNC symbol.
Add hgnc id to gene dict.
Returns a list of interval values for all coding intervals in the HGNCs dataset.
Loads an Omim panel using the provided api_key and institute name
Gets the cases associated with the given institute.
Return a case with the specified institute_id and case_name.
Check if the institute_id and case_name matchmaker matches the user s
flashs out the matchmaker for the given institute_id and case_name
Delete a case and update its category.
Render the PDF of a case report.
Redirect the user to the URL for a case.
Update the status of a case.
Assign an institute to a case.
Returns a list of hpoterms.
Mark validation for a variant.
Marks a variant as causative.
Get the delivery report of a case and save it to a file.
Shares an institute.
Rerun a case and redirect the user to the URL associated with it.
Redirect the user to the URL of the institute and open the case.
Send a vcf2cytosure to the individual in a case.
Send a case to a multiqc file.
Return a list of cases from a case query.
Get the list of submissions for a given user and institute.
Export the mt_excel files to temp_excel_dir.
Returns a list of HPO diseases matching the given set of HPO ids.
Convert a vcf to a cytosure.
Return the multiqc entry for a given institute_id and case_name
Returns a list of the unevaluated variants from the sanger in the store.
Returns the delete case string for the provided mme base url and the mme token.
Return the matches for the given mme in the given case.
match_type = match_type in the case object mme_base_url =
Fetch HGNC genes for a given build and api_key.
Parse a variant into a dictionary of callers.
Build a Transcript object from a dictionary of information.
Loads an institute.
Parse the cadd string for a variant in a list of transcripts.
Load a case from a VCF file.
Update a variant in the variant collection
Update the rank of a variant in the variant collection.
Update the list of variant compounds in a variant
Update the variant collection with the values in the variants dict.
Update one or more compound variants in MongoDB
Loads a variant into the variant collection
Insert or update a variant in the variant collection
Load a variant into the variant collection.
Create a new case and update it in the case collection.
Shares a case with another one.
Create a new diagsalt case.
Marks a case as checked.
Places a variant in the variant collection for the given institute and in the case
Return a list of sanger ordered by institute_id and user_id.
Validate a variant
Mark a variant as causative.
Update a variant in the collection
Update a variant from the variant collection.
Parse the ids of a variant from a variant at the given position.
Parse a simple ID.
Return the md5 key for the variant_type and case_id.
Convert to HGNC format.
Given a variant object and a family ID return the new variant ID.
Returns the number of cases in the database.
Update the dynamic gene list for a case.
Get a case by it s id or display_name.
Delete a case by it s id or display_name.
Adds a case object to the collection.
Replace a case with a new one.
Update a caseid in the database.
Submit a evaluation for a variant and user.
Returns a list of all eval holdings for a variant
parse transcripts from a list of transcript lines
Parse the result of an ensembl gene request and return a generator of ensembl
Parse the ensembl transcript request response and yield results
Parse the lines of an ensemble file into a generator.
Parse the lines of an Ensembl file and return a list of exon information.
Parse the result of an ensembl exon request and return a dictionary of ensemb
Initializes the console logger with the specified template and loglevel.
Returns a set of all mim phenotypes found in the given file.
Handles the command line interface for the phenotypes command line interface.
Convert string to int float or float.
Format the month theyear themonth and return the formatted month as a string.
Format the day according to the weekday.
Format the month name.
A helper method that updates the query string based on the data in the event s location.
Get information about a panel.
Parse a single gene panel.
Display the number of diseases in the adapter.
drop the existing HPO terms
Return the number of users in the given store.
Parse a variant into a dictionary of conservations
Returns a list of strings representing the conservation of a variant.
Gets the general case information for a given adapter.
Gets the groups of the cases in the case collection.
Returns a JSON response.
Get the year and month from the request.
Updates the title of all events that have been cancelled by d.
Returns the hpo term by its id
Search the HPO database for terms that match a given query or search term.
Finds a disease term by its identifier
Returns a list of disease terms.
Loads a disease term into the disease_term_collection
Generate a list of genes given a list of hpo terms.
Read the hdf5 file
Setup the time axis
Computes the list of coordinates for a given string.
Returns a new array of zeros with the median of the data at n_coarse_
Calculate the extent of the plot.
Plot the value of the water scene.
Plot the time series.
Writes the data to a filterbank file.
Calibration for each band pass N1.
Convert an array of data into a coarse - format array.
Computes the fracpolecule of a str.
Writes a polfil to a file given by str_i.
Find the index of the closest value in xarr that is closest to val
Rbin a array or array into a new array.
Unpack a single bit of data according to the given nbit.
Get the difference between two waters
Plot the calibrated diode.
Calculates the number of bytes needed to select the given str.
Calculates the shape of the selection
Sets the start and stop frequencies based on the number of samples in the FCS file.
Populates the timestamps of the time series.
Calculates the number of channels to be coarse.
Determine the number of blobs.
Return True if the data array isheavy.
Read all the data in the file.
Read a single row from the file.
Reads data from the container and loads it into memory.
Update the header of the timeseries.
Print information about the file.
Write data to a file
Write the object to an HDF5 file.
Writes the data to an HDF5 light file.
Calculates the size of the blob dimension based on the given chunk_dim.
Gets the chunk dimension based on the number of samples.
Grab the data and plot it.
Run a command - line tool.
Reads the first header of the file.
Finds the number of data blocks in the file
Print some statistics to the console.
Plot the histogram of the next data block.
Generate filterbank header.
Finds the size of the header in a file.
Integrate a water calibration into a channel.
Get the center of a frequency array.
Integrate and integrate the ratios.
Calculate the time domain model for a spectral model.
Return the index of the end of the header string in a file.
Check if a file is a filterbank.
Generates a string that can be used to process the header of a processed file.
Calculates the number of integers in a file.
Returns a dict representation of the traceback object.
Make a subparser of rec_type in subparsers.
Make the argument parser.
Remove comments from a string.
Adds a default name to the list of supported records.
Parse the record lines in a zone file into a dict.
Parse a zone file into a zone file.
Replace a field in a string with its value.
Parse a schema string into an object.
Builds a package from a list of classes and returns it.
Convert a record to a JSON compatible string.
Load a JSON record from a given dictionary.
Decode a JSON string into a record.
Add a schema record.
Returns the schema for a given record name.
Represent the variables of this object as a string.
Get a schema dict for the given record.
Returns a root schema dict for the given record.
Yields lines of text from the input_stream.
Writes job outputs to output_stream.
Push a new value at the front of a dict
Search the API for a string matching the query string.
Perform a raw filter on the resource.
Return a list of entities that include the specified attributes.
Create entity from HREF result.
Return a value error if the value is different from q.
Escape a string.
Return the elementary rotation matrix for a given axis and rotation angle.
Calculate the vraderrorskyavg for a given time frame
Calculates the value of the parameter error and prints it to the console.
Calculates the G magnitude error
Calculate the G magnitudeerroreom s magnitude.
Calculates the averagename of the transits in the given beta.
Returns the angle in radians between two points on the unit sphere.
Transform cartesian coordinates to cartesian coordinates
Computes the cartesian coordinates of the origin and target coordinates for a given sky position
Jacobian for transform covariance matrix.
Compute the errorscaling factor for a given observable in the given beta.
Convert a Unicode string to a Unicode string.
Return a collection of elements that match the given functions.
Exclude elements from this collection.
Return a collection of items filtered by a function.
Return a collection of items after applying a function to each item in the collection.
Return a collection of items drop while func is True.
Return a collection of elements from each of the elements in self and each of the others.
Find nodes matching the given criteria.
Return the absolute path of the serach file.
Given a list of events build a list of the number of events that are scheduled to run
Writes the results to the specified output file.
Prints the results to the specified file.
Clean the given code.
Round x to the next number in base.
Returns a list of blocks starting from the given indices. The initial_boundary and block_
Calculates the cache access.
Calculates the cache access count and stores it in the results dict.
Strip the uncomment from each instruction line and return it.
Strip unreferenced labels from the instruction lines.
Select the best block from the given list of blocks.
userselect the number of times a value is selected
Insert markers between the start and end line.
Generate integers in space between start and stop.
Get the datetime of the last modified file.
Check if arguments are valid.
Entry point for the command line tool.
Loads a mapping from the source file and dumps it into the destination file.
symbol_pos_int returns the position of the integer in the symbol.
Transform decl from multidim decl to 1d decl.
Transform a multidim reference to a 1d reference.
Find the nodes of a specific type in an AST.
Checks that all variables have the same names.
Set the constant value for the symbol named name.
Substitutes constant values with their value.
Calculates the sizes of all the variables and applications in the array.
Calculates the relative offset for a variable.
Removes duplicate accesses from the log file.
Returns the total length of the iteration.
Get the loop stack.
Return the index order of the sequence of free symbols.
Create a dict of all possible sympy accesses for the variables in the model.
Compute the relative distances between each variable and its value.
Converts a global iterator to an iterator of indices.
An iterator for the global iterator.
Converts a indices to a global iterator.
Gets the maximum number of global iteration in the loop stack.
Prints the kernel information.
Prints a table of variables names and their values.
Prints a table of constants with their names and values.
Prints the kernel code.
Convert an AST expression to a symmetric integer.
Get the offsets of an expression.
Get the basename of an aref.
Get the index type of the type of the input loop.
Builds the decls of the constants in the expression.
Returns a list of array declarations in the AST.
Determine the number of kernel loop elements in the kernel.
Returns a copy of the array declarations and a copy of the array dictionary.
Find the innermost loop in the given list of loop_nest.
Build the initial state of the array constructor.
Builds a list of function calls that are not defined in the kernel.
Builds the kernel function declaration for the function.
Build a list of scalar declarations for the type.
Get the kernel code.
Builds an ast. funccall node for a kernel function.
Returns the main code for the module.
Perform the iaca analysis.
Returns a unique identifier for the object.
Returns the datetime of the last modification of the file or None if the file was not modified
Returns a compiler and a list of flags.
Parse the str of the str of an event string in the form of an event string.
Enforce num_ into the end of self. data with num_ < = start_
Returns the absolute path to the header file.
Aligns the iteration with the cl_ boundary.
Returns the loads of the model for the given string.
Returns the number of hits for each cache_level in the machine.
Returns the mean of all missing values.
Returns the mean and standard deviation of all of the stores in the machine.
Returns the evicts of the machine.
Returns a list of infos for each cache level.
Replace an environment variable with a value and restore the original value.
Configures the argument parser for the arggroup command
Parse the description from the README. txt file.
Helper function to build the item to be passed to the course API.
A helper function to record an item in the Sailthru API.
Gets the content of a course from the Sailthru API
Returns the content for a course
Helper function to update the unstats list for a given email and course_url.
Sends an email to the Sailthru about the refund.
Send an email to the offer assignment notification email.
Retry the request in a specified order.
Fulfill the order specified by order_number.
Get a sailthru client
Get the value for a given key. If the key is not in the cache it is
Set the cache object with the given key to the given value.
Get the configuration value for the specified variable.
Returns the filename of the environment variable or raises an environmenterror if the variable is not defined
Returns the value associated with a version in a dictionary.
Returns the version of the eplus - version.
Populates this device from the JSON data.
Returns a list of external file names for all tables in the database.
Set the default values for all registered tables.
Prepares the descriptor to beextensible.
Return a dictionary of naive short references in the external data files.
Get the value of a particular column.
Update the value inert of the field at the specified index.
Update the device and activate hooks links and external files.
Add one or more fields to the end of the record.
Removes and returns the value at the specified index.
Insert value at specified index.
Remove this record from the device.
Register a record hook.
Registers link.
Create a regular expression to match the line and intent name.
Return the number of seconds remaining in the time range.
Returns a dictionary representation of the object.
Make an http request to the given url and return the response.
Get a list of all of the services for a given service type and endpoint.
Try to create a directory. If it doesn t exist raise an error.
Configure a service
Registers a request to the pycurl server.
Get the recording state by recording id and status.
Update the status of an event.
Update the agent state.
Returns a string representation of the configuration file.
Update the configuration with a new string from a configuration file.
Checks the configuration file for a warning if it exists and if it doesn t do do
Initializes the logging module.
Render the home page
Serve an image
Runs all the modules in the specified list of processes.
Parses the vcal string and returns a list of events
Get the schedule for an upcoming event.
control loop to check if the service is running or not.
control loop for the service
Makes an error response.
Makes a data response.
Returns the internal state of the service
Return the list of upcoming events.
Returns an error response for the specified event.
Delete an event.
Modify an event.
Start capture of an upcoming event.
Renders the test page to a fragment.
Returns a list of all resources in the model.
Returns a dict representation of the object.
Create a fragment from a dictionary of pods.
Adds the given content to the content buffer.
Initializes the JavaScript object with the given js_func and json_args.
Returns a html string of the resources in this collection with the specified placement.
Convert a resource to an HTML string.
Handle GET requests.
Renders a standalone version of the report in standalone mode.
Render the fragment to standalone html.
Calculates p - values for a specific label and returns a dataframe of p - values
Convert values to one dimension array.
Given an error table and the data in the err_df lookup the values of the nearest
Returns a sampled df where the cutoff values are the nearest matches of the given number of cut
Compute a summary error table for a given dataframe.
Computes the error statistics between target and dec streamed data.
Find the cutoff.
Infer the Pepticalforms output for a given IFO. If outfile is
Infer peptide information from a given file.
infer_proteins is a helper function for infer_proteins and infer_
Subsample a file with subsample_ratio.
Reduces the output of infile to outfile.
backpropagate file if outfile is None or outfile is an open file if outfile is None
Get a Group by its ID
Create a group and return a Resource for it.
Delete a group.
Get group members
Update the specified members of a group.
Get the group s effective member count
Returns True if group_id is an effective member of netid otherwise False
Decrypts the given key in the given context.
get the stdin and stdout
Get the stdout of this command.
Get the stderr of this process.
Get the output of the debug command.
Yields the sub - commands that will run on the stdin.
Run the sub - command with stdout.
Yields the output of the command with stderr.
Run the command with self. debug.
Writes the error message to the specified file.
Prints the help for this option.
Prints the usage of this option parser to the given file.
Prints the version of the option parser to the given file.
Resolve an option to a configuration variable.
Make a copy of the current context
Write headers to the given file - like object.
Generate a temporary URL.
quote a value if it s not a string
Returns the client instance. If the client doesn t exist yet create one and return it.
Decrypt data from stdin with AES - CBC key.
Create an account on the CLI.
Uploads a container to a KMS instance.
Builds the manifest body for the given path2info and put headers.
Creates a new context with the same input_ = none headers query = none container with the
Prints a message to stdout for the given x_trans_id.
Returns a boolean if the buffer is empty.
Encrypts the contents of an AES key.
Get the status of a GitHub repository.
Get a pull request.
Get a list of pull requests for a given app and repo_config.
Saves the published title to the database.
Returns the published items of the given type
Render published documents.
Recompute the number of reads in the reader.
Release the reader from the shared memory.
Acquire the ordering of the writer and release the underlyingmutex.
Remove a task from the scheduler.
Get a task by task ID.
Returns a list of all the tasks in the group.
Returns a dictionary of configuration properties.
Instantiate an object from a dictionary.
Initializes the archive manager for the given archive path.
create an index if it doesn t exist
Encodes the content of a JSON object using the JSON encoder.
Write items from the generator to the writer.
Adds a task to the schedule
Removes a task from the scheduler. Returns a boolean indicating whether or not the task was
items in the queue
Validate the arguments passed to the backend function.
Parse archive args and return a archiving taskconfig.
Perform a job and publish the result.
Schedule a task to be executed in the scheduler. Returns the job id.
Cancels the specified task.
Runs the server in the event of an error.
Listen for events from the pubsub and handle them
Schedule the scheduler to start. If async_mode is True then the listener will start immediately
Schedule a task to be executed by the scheduler.
Cancels a running task.
Builds the arguments to pass to a queue job.
Register a view to the admin.
Wrapper for the get_url_name and get_url_name method.
Get the view name.
Returns a string representation of the given version.
Resolve a value to an alias.
Resolve and return an engine based on a scheme.
Parse a database and schema from a string path.
Parse a database URL and return a databaseinfo object.
Create a new user.
Returns a list of objects associated with the given request.
Creates a new password based on the request data.
Add the url_name to the context.
Parses a boolean value and returns it as a string.
Parses a string value and returns an int. If the value starts with a string return
Returns the appropriate parser for the given type.
Create a new instance from a model with the specified fields.
urlsafe_b64encode and translate str_ to first_pass.
Creates a new field of the specified type.
Create a validator from a dictionary of datastructs.
Finds unique points in a list of parameter ranges.
Change the default values of the keyword arguments for the logging module.
Try to make the directories of a given file.
Return a list of strings in the AST.
Set self. _logger.
Extracts replacements from the given string.
Checks the arguments of an option and replaces them with new strings.
Writes the given parser to a stringio.
Find the set of multiproc options in the given parser.
Finds a multiprororororodict in the dictionary. Returns a dictionary where
Handle the parsing of the config file.
Recursively handle a log_config dictionary.
Create the logging handlers and tools.
Finalize the application.
Starts the stream.
Writes the given buf to the stderr stream.
Returns a boolean if two objects have the same v_is_parameter and v_is
Return a string indicating if two values have the same value.
A decorator for class methods that sets a property to be used as a prefix - separated string
Adds parameters to a trajectory.
Run a neuron in a neurongroup
Calculates the Euler scheme.
Adds parameters to a function trajectory.
Computes the difference between two values
Creates a storage service and trajectory.
Factory function for creating storage objects.
Adds new parameters to the function trajectory.
Computes the difference between two values of a and c.
Determine if the parameters in the group areexplored.
Builds the equation dictionary for the model.
Set self. _pre_build if self. _pre_build is set to True
Builds the network from the given trajectory.
Builds the neurongroup model for a given trajectory and a list of b
Set self. _pre_build and self. _pre_connections.
Builds the network from the given bridges list and network dict.
Add parameters to the parameter trajectory.
Compute and return spike factor of the spike in a neuron.
Computes the mean faker factor of neuron_ids
Computes the mean fools factor of the neuron in the subrun of the
Add monitors to network
Make the folder where output files are stored.
Plot the result of the function.
Prints the information of the spike_monitor.
Make plots if needed.
get the batch number of objects in optlist
Given a trajectory and a batch number of elements in the trajectory return a list of
Returns the set of variables in the environment as a string.
Returns the function to execute.
Changes the name of the object to the given string.
Sets self. _depth self. _branch and self. _run_branch attributes.
Convert a node to a message string.
Delete a node and all its children.
Remove a node or leaf from this branch.
Translate a shortcut name into a boolean value.
Determine the node types.
Creates a link of the given act_node with the given name and returns the linked instance
Checks the names of the parts of the name.
Sets the details of the given tree node.
Returns an iterator over the nodes in the graph.
Create an iterator for the children of a node.
Recursively traverse a node in a breadth - first traversal starting at a certain depth.
Perform a fast search on the given node and return the result.
Backwards search function.
Get the kids of this node as a string.
Adds a group from the storage.
Adds a leaf from the storage.
Returns the directory data
debug representation of the v_annotations v_comment and v_groups.
Get the parent of the node.
Remove a link from the network
Remove the child of this object
Get the default value of a field.
Get the children of the node.
get the groups of the function
Get the leaves of the path.
Returns the links in the form of a string.
Stores this object to the storage service.
Adds a result group to the network.
Add a derived parameter group.
Add a derived parameter.
Adds a config group to the network.
Adds a new config group to the network.
Adds git commit variables to the traj config.
Make a git commit
Flatten a dictionary where the keys are separated by separator and the values are separated by separator
Takes a dictionary of strings and nests them into a nested dictionary of strings.
Get the argument specification of a function.
Given a function and a dictionary of keyword arguments return a dictionary of the matching kwargs.
Returns a string representation of the given timestamp.
Converts a port number to a random port number and bind to it.
A helper function to racedirs in a given path.
Reset the timeseries to the given value.
Returns the remaining time in seconds of the object.
Return the value of the function argument as a dict.
Removes the specified key from the dictionary. Raises an attributeerror if the key is
Return the string representation of the annotation data.
Make aordinary result.
Make shared result.
Store the request data in the storage service.
Get the data node from the open storage service.
Check if the item is supported in the sharedresult. supported_data
Create shared data.
Set the name of the process to be process - safe.
Lock the given lock for the given request name for the given client_id and request_
Send the done message to the zmq server.
Finalize the connection to the socket.
Start the socket. If test_connection is True then the socket will be started in a
Re - send request and then receive a response after a specified number of times.
Acquire the lock.
Listen for incoming requests.
put data to the queue
Detects the current PID of the current process.
Handle a data message.
Runs the trajectory processing loop.
Receive data from the queue.
Reads data from the connection and returns it.
Stores the object in the storage service.
Stores a message and stores it in self. references.
Stores references to the storage service.
Returns a dict of the values in a section if it exists. Otherwise raises an exception.
Returns a dict of config options.
Interpret self. kwargs.
Adds parameters to the configuration.
Plot a given pattern for a given rule.
cellular Automaton 1d.
signal a new update to the logger.
Returns the overview group associated with the given string if it exists otherwise None.
Wrapper around the load method to ensure that the items in iterable are of the same length.
Checks the class properties of the class to determine what attributes are defined in the hdf5
Store the items in iterable if the number of items is greater than the number of items in
Handles closing of the underlying HDF5 file.
Extracts information about the file.
Create a backup of the trajectory.
Read out colnames from row and return the result as a dict.
Prepares a new trajectory object to be merged into the original traj.
Checks if the current version of the PEX is the same as the specified version.
Loads parameter values from a trajectory.
Stores the explanation in the given trajectory.
Store a single trajectory object.
Creates a new leaf instance for the tree identified by the given name in the given trajectory
Store the nodes of a tree in the parenthdf5 file.
All store parameter or result table entry.
Get a table or create it if it doesn t already exist.
Fetches a node from the HDF5 file by its name.
Applies the values in the dictionary of insert dict to row and logs a warning if any
Cuts the string if it is longer than max_length.
Create a new group if it doesn t already exist or return it.
All create or get groups for a given key in the trajectory group.
Store the annotations of the given item with the given annotated node.
Load annotations from the item with the annotated attribute.
Store the group for the given traj_group.
Loads a group of data into a trajectory.
Loads all the attributes of the given traj_node as attributes of the given group
Extract missing flags from data_dict.
Handles the adding of the summary of a table to the datastore.
Adds the metadata information of the instance to the given group. If overwrite is True the
Writes shared array data into the HDF5 file.
Write a shared table in the given hdf5 group.
Write a dictionary of data to an HDF5 file in a group.
Write pandas data
Write data into the other array.
Write the data into an array in the HDF5 file.
Delete the link with the given name.
Get a column from the table.
Get the length of the longest string in a list of strings.
Reads a dictionary from the prm file and converts it to a dictionary.
Reads shared data and returns it.
Reads the specified array and returns it as a native python data type.
Loads a single trajectory object.
Create a dummy set name for the specified index.
Sets the properties of the object.
f_add_to_ dynamic_imports
Used to set the default value of the preset function.
Returns True if name_or_id is not None otherwise False.
Removes all components from the explored model that are already stored in the database.
Updates the run information dictionary.
Add information about a single run.
Acquire the f_lock for all of the parameters.
Acquire the f_lock of thederived parameters.
Finalize the stored data.
Load the value of the load method.
Generates the reversed wildcards for the specified wildcard functions. The old_length argument is
self. f_merge_many = True self. f_merge = False self.
Merge information from another trajectory into this one.
Rename full_name with wildcard from other_trajectory.
Merges config from another trajectory
Merges another trajectory into this one.
Merge results of other_trajectory with the results of other_trajectory.
Restore the default value of the parameter.
Set the explored parameters to the given index.
Create a single run of nodes and links.
Return a list of run names
Start a new run.
Sets the start time of the run.
Sets the values of the run information dictionary to the finish time of the run.
Wrapper around self. _construct_instance that calls self. _construct_instance.
helper function for _return_item_dictionary
Finalize the run in the v_crun.
Deletes the links in iterator_of_links.
Remove all children from this node.
Calls _pool_single_run and frees references.
Returns the frozen pool of a single run.
Call method to configure the pool - single - run.
Configure the frozen pool.
Processes a single run of a BED.
A single run of the Scoop instance.
Configures and calls the appropriate logging handlers and tools.
Configures the niceness of the process.
This function handles the sigint handling of a single run.
Wrap the logging of a logging handler.
Loads a class from a string.
Creates a new class based on the given class name and dynamic imports.
Returns the length of the field.
Returns a string representation of the value of the function call.
Returns a range of values that have been stored in self. f_get_range.
Store the object in the object table.
Loads the values from the load_dict.
Loads the data from the load_dict
Returns True if the values in val1 == val2.
Returns True if data is a supported matrix.
Build a list of sparse parameter names.
Returns a spsp. spsp_matrix object for the given data list.
Loads the sparseparameter data from a dictionary.
Method to store the object to the store dict.
Method to load the values from a dictionary.
Translates a key to a string.
Returns a string representation of the value of the underlying data object.
Return a dictionary representation of the data.
Set a single item in the container.
Check if the item is supported by the sparser.
Stores the stored values in a dictionary.
Load parameters from a dictionary.
set a single item in the container
Serialize the stored values into a dictionary.
Tries to load values from load_dict.
merge all files in folder
Creates a new session with the specified user_id and password.
Merge two trajectories.
Starts all the jobs in a given session.
Multiply x and y by z.
Run a single neuron.
Process the rates of the neuron after each run.
Adds new parameters to the function traj.
Computes the cartesian product of the given trajectory and prints it.
Extract a list of subruns in the given trajectory.
Adds all subruns to the network and executes them.
Adds parameters to components and network runner.
Builds and runs the network
Make a filename based on the parameters of a trajectory.
Returns the next string in the chain.
Handles keyboard interrupts.
Reads the configuration from the specified file.
Method to request the pin from the api_key and pin the authorization code.
Request the access_token and refresh_token and write them to file.
Refresh the access_token and write the refresh_token to file.
Gets the list ofthermostats from a given URL. Returns a list of th
Writes self. config to self. config_filename.
Set the Vault mode of a log.
Set the fan min on time for a specific log entry.
Set a climate hold.
Delete a entry in the collection.
Resumes a program at the specified index.
Sends a message to the log at the specified index.
Generate a random delay selection
Generate the time left after the lease rebinding time.
Generates a random renewing time based on the lease time and the elapsed time.
Return a dictionary of the object s attributes.
Reset the client configuration to its initial state.
Get the timeout for a specific function in the specified state.
Sets a new timeout for a specific function state.
Select a offer to send to the client.
Send a request.
Sets thetimers in the object.
Log the received Nak packet.
Sets the current state to the initial state.
Check if the current state is within the timeout range. Raise an error if it is
Raises an exception if there are enough disover_requests.
Raises an exception if the current state of the timeout request is older than max_attempts
Rebinding the timeout request.
Receive a offer from the client.
Receive an ack request from the connection. Raise an exception if the connection is not bound
Receive a NakRequest and raise an exception if the request was successful.
Receive an ack renewing packet. Raise an exception if the packet was not received
Handle received Nak renewing.
Receive an ack rebinding from the connection. Raise an exception if the connection is not
Process receivednak rebinding.
Invoked by pika when it is renewing a lease.
Set the value of the field.
Add a new key - value pair to this query.
Returns a copy of this query set without the specified name and value removed.
Get the status of the XML - RPC response.
Reads a tdms file and returns a list of chn and a list of ch
Convert a tdms file to FCS file.
Returns True if the two jobs have the same name and returns False otherwise.
Create a new patch for a given patch name.
Delete the next patch.
Delete a patch from the database.
Check if a file exists in a patch
Backup a file.
Add a file to the patch cache. If patch_name is specified the file will be
Run the command and return the exit code.
Create the directory if it doesn t exist.
Copies this directory to dest.
Link to a file or a link.
Copies the file to dest.
Returns the directory of the file or none if the file does not exist.
Backup the specified file to the specified destination directory.
Unapply a patch.
Applies a patch to the series.
Applies the next patch to the series.
Applies all the patches in the series.
read self. patchlines and self. patch2line
Save the series to a file.
Adds the given patch to the patchline
Insert a list of patches into the patch2line dict.
Adds a list of patches to the current patchline.
Remove the given patch from this patchline.
Returns a list of the patches after the given patch.
Returns a list of the patches before the given patch.
Returns a list of the patches in the file after the given patch.
Replace an existing patch line with a new one.
Create the version file if it doesn t exist.
Check that the version_file is well - formed. Raise an exception if it is
Add the arguments to the argument parser.
Adds the given arguments to the given parser.
Add the arguments and defaults to the argument parser.
Sets the subparsers_args and subparsers_kwargs
Adds subparsers to the given parser.
Check if a file exists in a patch.
Find the next patch in the list of patches.
Revert a file.
Import a patch from a patch file.
Import a list of patches into a directory.
Add a way to this node if it doesn t already exist
Returns the node ids that are not present in the graph.
Adds a node to the graph if it doesn t already exist
Build a route from a relation
Given a string representation of a relation and a string representation of a route return the route name
Get the id of a relation based on its name.
Process the file.
Add a relation to this instance.
Given an iterable of agencies return an agency object for each agency in the list
Yields a dummy trips for the given trip and stops.
Writes all the buffers to a zipfile.
Writes the contents of this template to the given destination.
Build an agency for a given relation and nodes.
Yields stop objects for the given relation and nodes.
Build a shape from a relation and a list of ways
Returns a list of supported version strings
Send an ADU to the device.
Authenticate to a list of devices.
Registers a new client with the specified facet.
Authenticate using a facet.
Registers the given facet on the devices and returns the number of devices that have been
Convert unicode to str
Wraps the given class with a custom error decorator.
Returns a boolean that matches the filepath pattern.
Get the email address from the remap dict.
Finds the entry in the entry_tree that matches the given entry. Returns the entry
Converts markdown to the rest of the text.
Serve the service.
Gets an image from a URL and converts it to a string.
Convert a string to an image.
Check if the image is big enough.
Check if the given width is big enough for the image.
Check if the given height is big enough for the image.
Returns the category object if the field_name is present in the category_map. If
Parses the value of the field named source_name and returns it as an int.
Yields all the items in the source.
Saves the given error to the list of errors.
Parses the XML data into the model and loads it into the model.
Parses the given item and returns it as a dict.
Returns an instance based on the provided data.
Save an item to the database.
Downloads a file from a URL to a destination.
Loads the specified source file into this object.
Yields all headers and values from the CSV file.
Set the value of allow_network_access
Adds a set of files to the sandbox.
Add a new file to the working directory and rename it.
Gets a list of canvas enrollments for the given course. Returns a list of canvas
Gets a list of allensments for a given SIS course.
Get a list of canvas enrollments associated with a section.
Gets a list of all meshments associated with a SIS section.
Returns a list of enrollment objects associated with a regid.
Enroll a user for a course.
Get the canvas roles in an account.
Gets the list of roles associated with a SIS account.
Returns a list of all course roles in a account that have the base_role_type
Get a canvas role by its id.
Get a role by account sis id
Get a course by its id
Get a course by sis_id
Get the list of courses in an account
Gets the list of courses in a SIS account by the ID passed in.
Returns True if the user has published a course in the account.
Gets the list of publishedcourses in a SIS account with the provided SIS ID
Returns a list of courses for the given regid
Create a course for the given account.
Update a course s id
Gets the activity associated with a given account and term.
Get a list of grades belonging to a given account and term.
Get the statistics associated with a given account and term.
Gets the activity by the sis_id
Gets the list of assignments from a SIS course.
Gets the student summaries for the given sis_course_id
Gets the student activity for the sis_id and sis_user_id
Gets the student callback for the given sis_id and sis_user_
Get the external tools in an account
Gets the external tools in a course
Create an external tool for a specific context.
Update an external tool.
internal method to delete an external tool
Check if an object has all of the required parameters and if not raise a designerror.
Get a user by its ID
Get the users for a course. Returns a list of canvasuser objects.
Get all users for a SIS course.
Create a canvas user.
Get logins for a user.
Update a user login.
Returns the next page from the response header.
Gets the resource url and returns the response. If auto_page and data_key
Gets a paginated resource based on the specified parameters.
Wrapper around the _get_resource_url method.
Adds the given resource to the given URL and returns the response object.
Performs a POST request to the specified URL with the given body.
A helper method to delete a resource. Returns the response object.
Get a list of canvas admins.
Create a canvas admin.
Create an admin by sis_id
Delete an admin from a user s account.
Delete an admin by sis_id
Create grading standard for a course.
Get a specific section by its id.
Get a section by SIS Id
Get all the sections in a course
Gets a list of uw_sws. models. Section objects in a course
Returns a list of uw_sws. models. Section objects for the given course
Gets a list of uw_sws. models. Sections associated with a
Creates a new section with the given name and sis_section_id.
Update a section with a given name and sis_section_id.
Gets a list of all the qukves associated with a particular course.
Get a canvas account by its ID
Get the sub - accounts of the given account.
Update a canvas account.
Update a sis_id for a canvas account
Get the auth settings for the given account.
Update the auth settings for an account.
Gets a term by its sis_term_id
Imports a string from a CSV file.
Imports CSVs from a directory.
Get the status of an import.
Builds a zip file from a list of csv files.
Returns a list of assignment objects associated with the course.
Updates an assignment for the current user.
Get a list of the report types available for the given account.
Get a list of reports of a given type in an account.
Create a report.
Create a course provisioning report.
Create a course s is_export report
Create the unusedcourses report.
Get report data.
Get the status of a report.
Delete a report.
Moves detections from a label to a new location.
Flip detections in label with value w.
Returns a dict of the values from the given object.
Returns the configuration dictionary for this instance.
Returns the value of the config as a unicode string.
Create new metrics for the registry.
Sets up the logging for this class.
If include_process_stats is True then this method calls the registry. register_additional
Create the metrics from the given iterable of configs.
Get the metric with the given name with the given labels.
The default handler for the home view.
Handle the metrics request.
Return the content of a message.
Fix the http message for py3.
Make a request to the app and return the response.
Return a list of the pods and warnings from the parsed data.
list of pods that have either primary or title equal to str_
Encode the given data as JSON.
wrapper for call_api
wrapper for call_api
Make a PUT request to the specified URL and return the response object.
Make an HTTP POST request to the specified URL.
Group sentences by total_nb_sentences. If the total_nb_sentences
Disambiguate a PDF from a file.
Disambiguate a query.
segment text into segments
Get the language of the user.
Get a concept by its id
Fit the model to the given features and classes.
Calculate accuracy of the given features using the ensemble if scoring_function is none then return accuracy
Fits and predicts the class labels for the given features and class_labels.
Return accuracy score of features.
Transforms the features to a new feature matrix.
Computes the LM score of the given features and targets.
Create a vector from an iterable of strings.
Convert a sequence of strings to a vector of strings.
Evaluate a file and return the last form.
Evaluate the given stream and return the last form.
Evaluate a string s and return its form.
Finds and imports a class in the runtime namespace of the specified type.
Evaluates the given code and prints it to the console.
Add a method to the map.
Add a method to the multifunction.
Removes a method from a map.
Remove a method from the multifunction.
Determine if a variable is a macro.
Return the location of the line and column.
Raise a parserexception if the operation is not recur.
Assert that the last node is a tail node.
Resolve a bare symbol.
Resolve a symbol.
Parse an AST and return the first part of it as a node.
Return a warning on shadowed variable.
Yields a string representation of the entries of a given function.
Returns a string representation of an iterable.
A fallback implementation of the repr function that calls _lrepr_fallback for the given object
Recursively fix missing locations in this node and its children.
Compiles the given form into the given module and executes it.
Compiles a module from the given optimizer.
Compiles the given iterable of module forms into the given module.
Compiles the given code with the given optimizer and module.
Create a sequence from a string.
Munge a string s into a new string.
Returns a fraction.
Gets a new handler for the given logging level and formatter.
Map a sequence of strings into a new sequence of strings.
Partition a collection into n parts.
Reads a namespace - separated list of names and returns them as a tuple of strings.
Reads a collection from the specified reader context.
Reads a list.
Reads a vector from the specified context.
Reads a list of mutablemapping.
Reads a string from the specified reader context.
Reads a symbol from the specified context.
Read a keyword from the specified context.
Reads the meta from the reader and returns the corresponding imeta.
Read a quoted list.
Expands the quoted form of the element in form into an expanded list of strings.
Reads the syntax_quoted form of the next consumption of the comment.
Reads aderef and returns it as a list.
Reads a character from the specified context.
Reads a regex pattern from the input.
Reads a reader macro.
Read the next consume comment.
Reads the next token and returns it.
Reads a string from a file - like object.
Read a file into a string.
Update the location of the line in the current column.
Pushback at the end of the array.
Read the next token and append it to the buffer.
Return the byte string representation of the codetype.
A helper function to get the error message from a basis set Raise the appropriate exception if
Determine the cache file name from the source file name.
If any of the modules in sys. meta_path are imported insert them into sys.
Find a spec for the specified module.
Execute the cached module.
Execute a module and cache it.
Executes the module specified in the loader_state and returns the module object.
Create a new symbol with the specified name and namespace.
Returns a list of strings that start with the given prefix and end with the given prefix and
Gets or creates a new keyword in the kw_cache.
Returns the value of a keyword in the atom. atom. atom with the specified name and
Return a tuple of pyaststream and pyaststream nodes for the given genned node
Return the AST for a collection of nodes.
Return py_ast with the location of the node in the given environment.
Decorator to create an AST with the location of the function s source code.
Decorator to add the location of the source code in the generated AST to the function s
Check if a variable is a dynamic variable.
Returns a boolean if the variable is redefable.
Convert an exception into an ast. expr object.
Converts a function definition to an expression.
Convert a do node into a python AST.
Generates a new name for a function.
Converts function arguments to Python source code AST.
Convert a single contract function to a Python AST.
Converts the given function into a Python AST.
Converts the if body to a python representation.
Convert an invoke node into a Python AST.
Convert a quote operator to a Python AST.
Convert a loop recur into a Python AST.
Convert a recur to a Python AST.
Converts a set bang function into a Python AST.
Converts the given exception into a generatedpyast.
Converts a try node into a Python AST.
Converts a local operator to an ast expression.
Finds a variable in a namespace and returns it as a string.
Converts a variable into an AST that can be used in a function call.
Converts an InteropInfo node to a Python AST.
Return an AST node corresponding to the maybe_class operator.
Convert an maybehostform operator to a pyast node.
Converts a constant value into an AST node.
Converts a collection literal to a corresponding Python source code AST.
Return the AST corresponding to the given node.
Returns an iterable of ast. import nodes for the given module.
Create ast. importfrom from module.
Create an ast. assign node for a variable.
Convert a list of strings to a set of strings.
Converts a sequence of strings to a set of strings.
Return an ast. excepthandler node.
Return node s value if node is a constant and its name and its num is a string
Return an ast. functiondef node as ast. FunctionDef node.
Return an ast. while node as string.
Return an ast. try node as ast. location.
Create a new module with the specified name.
Return the first character of an object.
Return the rest of an object.
Remove the ith rest of a collection.
Returns the nth item in a collection.
cons cons function.
Convert an object to a sequence.
Concatenate a sequence of sequences into a single sequence.
Associate a string - like object with another string - like object.
Convenience function to conj the elements of a collection.
Convert an IDeref object to a string. If an IDeref object is passed
Return True if v1 == v2 False otherwise.
Return x / y if x and y are integers.
Sort a collection.
Return True if coll contains k.
Returns the value of the field named by k or default if the field does not exist.
Converts a dict frozenset list set or tuple into a string that can be used as a
Converts the given object to a Python object.
Return a human - readable string representation of o.
Return a list of strings if args is a tuple or list of strings otherwise raise typeerror
Function decorator for _fn_with_meta and _fn_with_meta functions.
Resolves a symbol. symbol by its name and returns the corresponding sym. symbol.
Resolve an alias to a variable in a namespace.
Add a new generated variable to the current namespace.
Creates a new variable with the given name and value in the given namespace.
Get an unbound variable in a symbol namespace.
Find a symbol by its name in a namespace.
Find a variable in a namespace.
Finds the value of the ns_qualified_sym if it exists or raises a runtime
Adds module as a default import.
Add an alias to the symbol.
Interprets a variable as a string and returns its value.
Associate new_var with sym. symbol if var is none or force.
Find the current value of a symbol in the context of the given sym. symbol.
Adds an import from sym to the specified module.
Returns the imported module for the given sym. symbol.
Add a new var as a reference to sym. symbol.
Get the refer to the given sym. symbol.
Returns the refer to all the symbols in other_ns that are private.
refer to the same namespace as another namespace.
Get or create a new namespace.
Get or create a symbol by its name.
Get a symbol by its name.
Remove the specified symbol from the lmap.
Returns an iterable of strings that match the given prefix.
Returns the complete imports and aliases for the given prefix.
Returns the complete interns of the value.
Returns a list of strings that match the completion of the given value.
Returns an iterable of completion strings.
Returns a tuple of the final arguments of the function.
Return a list of properties as a list of properties.
Returns a list of plist with the specified members.
Decrypts a JWthelper token and returns the payload.
Encrypts the JSON payload with the given key_purpose using the JWthel
Delete the key from the cache if it exists.
Return a string representation of this comparison.
Parse the given fiql string and return a expression.
Serialize an datastore model to a file - like object.
JSON serialization of the object.
Decode a string representation of a date into a datetime.
Decode a JSON string into a python object.
Default JSON encoder function.
Returns the version of the leicacam instance if it exists or if it doesn t
Compute a robust topological sort of a graph.
Set the parent of the object.
Return the object s parent.
Add an element to the list.
Apply the logical AND operator to each element in the expression
Applies the or operator to the elements of the expression.
Returns a list of bytes for each message in the incomming string.
Convert a list of tuples into a dict.
Returns the first message that matches the specified cmd or none if no matching message is found.
Prepares send string.
Waits until buffer_size bytes are read or the socket is closed.
Enable a slide and wellx and field.
Save a template to a file.
Get information about the server.
Locate the package. json file in the specified directory.
Parse the JSON representation of the package.
A helper function for handling API errors with json exceptions.
Check if the response is a valid LS API response. If it is a valid L
homogenize two waves
Computes the linear interpolation between the dep_vector and the indep_vector.
Get the indep range between two wave_a and wave_b.
A helper function to verify the compatibility of two wave objects.
Loads the manifest from the systemjs manifest.
Create a namedtuple for trace of the parameters of a module.
Expand a URL or action.
Get stats for a given URL.
Returns a list of links and statistics.
Get statistics about the database.
Splits an iterable into chunks of size chunksize.
Flatten an iterable.
Print a table of records to stdout as a tab - separated string.
Create a dummy type with the given name and attributes.
Converts a human - readable string to an instance of this class.
Returns the trace of a module callable.
Returns a list of links from a json file
Appends a common version string to the plist.
Appends version information to plist.
Converts a string of ops to words.
Generate the noise for a chunk of data.
Yields the parameter vector for each chunk in the data matrix.
Compute thebound waveform at the given indep_min and indep_max
Build indep_units from dep_units and op.
Helper function to set the dep_units and dep_name attributes.
Computes the running area of dep_vector relative to indep_vector.
Validate the indep_min and indep_max in a wave.
Calculate the acos of a given wavelength.
Calculate the acos of a given wavelength.
A version of the asin operation.
Calculate the arctanh of a wave.
A helper function to add anex to a wave and update the dep_units and dep
Gives the delay of the dep_name associated with the wave in the form of a
Perform a log - likelihood operation.
Calculate the square root of a operation.
Convert a complex wave into a string
Return a copy of the wave in - place and change the dep_vector to a float
Return a copy of the input wave where the input is a signed int.
Find the directory containing the given path.
Returns the short description of long_desc if found else str_
Build an expression from a list of tokens.
Remove the item at position pos and return it.
Returns a list of the functions in the expression.
Parse an expression in the form of a string.
Remove the consecutive Delims from each element of the list of strings in the input string.
Convert number toeng tuple.
Convert number to a string if the number is less than exp and if the number is not
Convert a string to a float.
Returns the Peng fraction of a snum.
Returns Peng Mant number from snum.
Returns the name and extension of the module if it s not there in the app.
Executes the jspm command and returns the result.
Returns a trace of the application.
Returns True if the md5 of the dep_tree matches the md5 of the module
Format the hexdump of the argument.
Parses a docstring into a section and a return section.
Returns a list of valid identifiers.
Return the deferred add function for add_action if it exists otherwise raise argumenterror.
Split a line into a list of parts.
Check if any of the contexts are in the init_commands dictionary.
Returns the help text for the built - in function.
Find a function in a context
Returns a string listing of all available functions in the specified context.
Returns True if arg is a flag.
Extract the value of an argument.
Invoke the function with the specified line. Returns a boolean value if the line contains a string
Returns a section class for the given name.
Returns a classify of the line.
Join the lines into paragraphs.
Convert the value to the specified type.
Convert a binary value to the specified type.
Returns the size of a type.
Returns True if type_name is in known_types otherwise False.
Split a type into a base bool and a sub - type.
Instantiate a type with a set of sub - types.
Return a boolean if format is a known format for the type.
Loads the type object from the specified module.
Add a parameter to an annotated parameter.
Creates a string representation of the return value of the specified type.
Custom return value.
Returns the value of the first argument that starts with the given short_name.
Returns the type of the specified parameter.
Format the return value of the function.
Convert a positional argument to an actual value.
Converts an argument value to the type specified by arg_name. If type_name
Returns a string representation of the message.
Returns a dictionary representation of this object.
Check if the given function has been executed and execute it.
Given a list of valid values raise a validationerror if the list is larger than the number
Find all strings in a container.
Find all the strings in a module and replace them with their annotated context names.
Returns the help text of the given function.
Annotate a function with its metadata.
Annotates a function by its name.
Get the short description of a function.
Attempts to import the project module and load its command classes.
Load and install kronos into the crontab.
Prints the contents of the crontab
Remove kronos from the crontab.
Create a handler for the given URI and local path.
Loads all the projects from the project configuration file.
Save the project to the project config file.
Returns a dictionary of projects that this project is dependent on.
Initialize the project at the specified path with the specified status.
Calls the function f with the given state with the given state.
Applies the function f to the state.
Returns the view function of the given state.
Applies the function to the list of elements in the given state.
Applies a function to each element in the sequence.
Applies the function to the given state.
Apply the function to each element of an iterable.
Return optics whose kind is a string.
Main function that prints a message when the game is running.
Returns the stepowards between self and other.
Handles the input of the player.
Advance robots by this player.
Ends a game and returns the state of the game.
Moves a player to the given position.
Prints a random move to stdout.
Make a move to the player.
Returns the string of the team s win for the potential win.
Yields the potential wins of the board.
Adds a new item to the list of items to be uploaded.
Sets self. ts and self. ts
Uploads a single chunk of items to S3.
Make a file - like object of the items.
Get the state of an account.
Get the asset state for an asset.
Get the block hash at the specified block index.
Get the current block sys fee.
Get the state of a contract.
Get the raw value of a transaction.
Get a value from the storage associated with the given script hash and key.
Get the value of the transaction s out field at the given hash and index.
Calls the jsonrpc methods. invoke method for the specified script hash with the specified params
Invoke a function using the JSON - RPC interface.
Invoke a script on the RPC server.
Send a raw transaction.
Calls jsonrpc methods. validate_address. value and returns the result.
Makes a request to the API and returns the response.
Returns True if s is a hash256 string
Returns True if s is a string that is a hashable string.
Encodes a list of contractparametertypes. values into a string.
Decodes the result of an invocation call.
Applies the filter to a datetimetm with the given timezone.
Render and save the template to a file.
Render the QR code using the provided writer options.
Renders the provided string to the specified color.
CLI entry point.
Download a file from S3
Uploads the given path to the given storage path.
Downsyncs the config to the local config folder.
Show the difference between the local config and the global config.
Parse an environment variable value into its key and value.
Set the username and password to none.
Add the API key to the config.
Yields the content of the JSON file in the given folder.
Get all schemas in a JSON file.
Returns the schema in JSON format.
Return a jsonschema. refresolver object for this schema
Validates the given object against the schema.
Returns a list of valid examples.
Returns a list of invalid examples for the given string.
Constructs the auth_url_user and auth_redirect_uri for this request.
Process the URL for the user s auth code.
Get the access token for the current user.
Returns the user id of the object.
Returns a list of files and directories in the specified folder.
Create a folder.
Add a comment.
Decode an object if it is unicode.
Set the drop target of an object.
Start dragopperation event handler
Sets the default TLW for this object.
Inspect an object
Replace str_ in font if str_ is a string in font and if str_ is
Loads the page at the specified location
Sends an alert message to the input field and sets the focus.
wellcome tip
handle mouse down event
handle mouse move
Handles key press events
Delete all objects in the selection and store them in the selection list.
Creates a copy of the current selection and sets the selection to the new selection.
Refresh the snapshot of the object.
Calculates the best position for the given widget.
Get the py_data for the given item
set item data and return py_data
Find the data that corresponds to the string py_data at the specified location in the wx
Delete an item in the list
Delete all items in the list
Clear all data in the table.
Private method to set the selection of the control.
Returns the selected string
Set client data
Appends a string to the end of the wx_obj.
Gets an object by its name and wx parent or None if no such object is found
Adds a child to the sizer
Sets the parent of the str_ component to the given new_parent. If init is
Draws the background of the tile
erases the background
Draws the text to the label
Returns the column headings.
Reset the view of the given grid
Updates the values in the grid
Updates the column attributes of the grid.
Sort the values of a column in the table.
Clears the grid
Creates a new combobox
Begined it - Clear the widget widget widget widget widget widget widget widget widget widget widget
Update the start value if the value is different from the value in the start value
Return true if key is accepted
handle key selection
Enables or disables the given value in all menu items
Return a boolean indicating whether or not the item is enabled.
Enable or disable the menu.
Returns a boolean indicating whether or not this menu is enabled.
Removes the specified menu item from the menu list.
Set object tag.
Strip whitespace from the end of a table node and replace it with the new text.
Return the documenter class for the given object and parent.
Mangle a signature into a more human - readable form.
Import a module by its name.
Link to the role of the autolink.
Shows an alert message
Prompts the user to input a string
Selects a font to display
Return accepted color.
Chooses a directory dialog with the specified message and path. Returns the path of the
Returns the searchtext in the case - insensitive case - insensitive case - insensitive case - insensitive
Sets the has children status
set the icon
Parses a string from a file and returns it as a python object.
Save a string to a file.
build a window from a dictionary of strings
Recursively build a component from a dictionary of strings.
Convert a card name to a string.
set text or bitmap data
Returns a list of the lines that match the given name in the docstring of the object.
Load an object into the tree
Inspect an object in the tree
Activates the given child item
Updates the selected item in the tree.
show context menu
Returns the representation of the image.
Returns True if the path is in the current context or False if it is not in the
Returns True if path is not in the current context or if it is in the current context
Select option.
Returns a new instance of the specified webdriver instance.
Evaluate the xpath expression of this node
Switch to a specific frame.
Accepts an alert.
Accepts the provided text as a confirmation. Returns the content of the confirmation as a str
Prompts the user to confirm the operation.
Accepts a prompt and returns the response.
Send a prompt with the specified text and wait for the response.
Save the page to the specified path.
Save a screenshot.
Raise the server error.
Wrapper for has_checked_field that checks if a field is checked.
Returns True if the field is not checked.
Returns True if the element has the specified locator field.
Wrapper around has_no_selector.
Returns True if the object has the specified title False otherwise.
Returns True if the object has the specified title False otherwise.
Get the string representation of the inner content of a node.
Get the inner text of a node.
Converts a URL into a normalized form.
Determine if the specified error should be catched.
Compare the number of results returned by the query to the number of results returned by the query
Return a string of at least size number of elements from the result iterator.
Returns True if options has at least one option set. Otherwise returns False.
Returns a failure message based on the specified options.
Returns True if count matches options.
Normalizes the value if it is a byte string or if it is a string it is
Strip whitespace from the given string.
Convert text to a regular expression.
Resolve the actual URL to the expected URL.
Resize the window to the specified size.
boots the capybara server
Set thefcget attribute of this str
Set the instance method of this object.
Set the class method to use.
Returns the full traceback of the current exception.
Returns the string representation of the log object.
Returns the logger for the given instance.
Set the logger to use.
Calls the API and returns the response.
Returns the list of channel names associated with the given string.
Returns a list of user objects associated with the specified user.
Build a message from text and channel.
Translate user and channel to string.
Sends a message to a specific channel.
Read a channel from the channel layer.
Run the task.
Imports and runs the client.
Return a dict of the values of the keys that differ from the keys in the two dictionaries
Colorize a message with the specified color.
v2 playbook on task start
Prints a v2 playbook of the stats to the terminal.
Print the result of the runner.
Convert a prefix to an addressmask.
Adds a model to this element
load all string filters from jinja2. filters
Find a file in a Yang module.
Make an HTTP POST request to the specified URL.
Returns the authorization code URI.
Retrieves a new access token based on the provided code and params.
Returns a dictionary of query parameters for the given URL.
Turn a URL into a query string.
Builds a URL from a given base url.
Handle the given exception.
Returns a response object with the specified body headers and status code.
Returns a redirect error response.
Makes a JSON response with the specified data and headers.
Gets the authorization code for a client.
Obtain an access token using the refresh token.
Get an access token.
Gets the authorization code from the given URI.
Get a new token from post data.
Gets the authorization header and validates the access token.
Opens the device with the specified bus.
Read a single byte from the device.
Reads the specified number of bytes from the specified device.
Reads byte data from the device.
Write bytes to the device.
Write byte data to the device.
Write i2c block data.
Create a new copy of this object.
Create a new local copy of this object.
Construct a FileInfo instance from a file_info dict.
Uploads the given file_obj to the given store.
Returns a list of the CDN urls for the file.
Construct from a group_info dict.
Create an upload request from a list of files.
Base operationration for the given request method.
Returns a generator of uuid strings for each of the file - like objects in the input sequence
Creates a list instance of the api_list_class using the argument namespace as the starting
Prints a bar plot of iter_content.
Get the home mode status of the user.
Get a list of camera objects for this stream.
Get camera information for camera_ids.
Get a snapshot of a camera.
camera event motionsetting.
Save a parameter for a camera event.
Get a list of all camera events and their motion settings.
Returns True if the element in li is the last element of meta_data.
Get the data for a single list of nodes.
Get the integer value of the namespace of the logical volume in li.
Get the v merge from a tc.
Get the grid span of a cell.
Get thetd element at the given index
Returns True if style is not defined in the current namespace.
Returns True if text is bold False otherwise.
Returns True if the given string is anitalics string False otherwise.
Returns True if the style is underlines False otherwise.
Returns True if the element is the title of the element
Yields the text content of a run in r.
Get the relationship information for a given tree and media and image sizes.
Returns the list type for a given number in the meta_data. numbering_dict
Given a table and meta data build the table element.
Get the content of a t tag.
Remove all the elements with the specified tag from the tree.
Find and create a file for a given dataset.
Load MNIST dataset.
Plot images at location loc.
Plot the images of a list of layers.
Plot the image filters.
Encode a string into a list of words.
Add a convolution weights to the model.
Decode z into a regularizers.
Calculate the score of x using the encoder.
Predict the class label for x.
Predict class probabilities.
Predict logit.
Returns the list of variables in the graph.
Computes the accuracy of the given outputs.
Build a new activation from a given name and layer.
Rservoir s algorithm
Adds a loss function to the loss function.
Calls itertrain and returns the result.
Build a graph from the regularizers.
Returns a list of input strings for each layer s input.
Returns the set of variables in the network.
Save the object to a pickle file.
Loads a model from the given filename or handle. If filename_or_handle is
Computes the loss of the network.
Build the graph of the updates of the regularizers.
The size of the output of this node.
Resolves the input shapes for the given layers.
Resolves the output shape for this node.
Log the activate and parameters to the log file.
Computes the logarithm of the parameters.
Returns the formatted string for the node.
Resolve the output shape of a set of layers.
Find a parameter by its name.
Add a bias to the model.
Returns a dict of the model parameters to be passed to the model constructor.
Return the loggabor of the environment relative to x_pos y_pos.
Loggabor image
Add a tier to the container.
Remove one or more tiers.
Returns the tiers with the given name.
Convert this instance to an EAF string.
Adds a point to the rule. If check is True an exception is raised if the
Add an interval to the list of intervals.
Removes the specified interval from the list of intervals that are at the specified time.
Remove a point from the time interval.
Get intervals of the time series.
Returns a list of all of the interval values that should be used in the plot.
In - place indent.
Add an annotation to the current tier.
Adds acv description.
Adds an external reference of the specified type.
Add a lexicon reference
Adds a lingistic type to the container.
Add a locale.
Clean the timeslots from the current state of the simulation.
Extract the annotation data for a given time range.
Generate an annotation id based on the timeslots.
Generate a timeslots id.
Returns a list of child tiers for the given id_tier.
Returns a string representation of the full time interval.
Get reference annotation data between time.
Get reference annotation data between time.
Returns the list of tiers that have the given ling_type and the given parent
Remove all annotations from a tier.
Removes the cv_description from the Dataset.
Removes a license from the list of licenses.
Remove the files linked to the given file path and mimetype.
Remove a property from this node.
Remove a reference annotation.
Remove the files linked to the given file.
Remove a tier from the container.
Remove one or more tiers.
Renames aier to new id_from and id_to
Shift the annotations by a given time.
Writes a debug message to the given storage.
Gets the embedding levels for the given text.
In - place embedding and overrides.
Resolves neutral types.
Reversecontiguous sequence of characters.
Reorder the levels of the lines in the current line according to the order of the levels
normalises the current file in the context
Adds a new value to the object at the end of the list of added values.
Command line interface.
Makes it backwards compatible with the current version of the binding.
Show the GUI for the given object name.
Finds and imports the gui from the registered guis and returns it.
Adds an entry to the filemenu
A context manager that changes the current selection to a new list of bools.
Context manager to return the current time of the command.
Show the messagebox without GUI.
Yields the cumulative data of the data.
Get the values of a single axis in a dataset.
Draw a constant line.
Loads the current transform parameters for the font.
Reverse a mapping of values to keys.
Yields a range of float values between start and stop.
Validate and append data to self. data.
Renders the graph and returns the graph.
Calculates the left margin of the plot.
Calculates the margin of the right side of the text.
Calculates the top margin of the graph.
Adds a popup with the specified label.
Calculates the bottom margin of the widget.
Draw the whole graph element.
Make text at x and y of a datapoint.
Draw x - axis labels if show_x_labels is True.
Draw the y - axis labels if necessary.
Draws the x guidelines at the specified height.
Draws lines between the y - axis of the label with the given height.
Draws the titles of the graph.
Render inline styles in the document.
Start svg element.
Returns a list of all the stylesheet resources
Run a bot instance.
Sends the given data to the socket. If the socket is already registered or force is
Connects to the server and creates the socket. Returns True if the socket was created False
Respond to a message.
Return a tuple of all the patterns used to dispatch the message.
Make a new nick and handle it.
Handle a PING message.
Handle the registered client.
Read until the socket is closed and call the callback function.
Register with the node and wait for it to be registered.
task runner loop
Return a tuple of the command patterns that should be executed.
Register a successful command.
Handles the worker of a task.
Add a new nick to the queue.
Sends a validation email for this user.
Send a password reset notification for the current user.
Verifies the user s token.
Update the user s avatar.
Determine if the request is allowed to view.
The client string for this node.
Return the TLS client if it exists else none.
service_name if available else server_name
Wrapper for client. client. method
Executes the given method as a Docker container.
Check if the service is running
Stop the Docker container.
Filter the queryset to ensure that the value is a valid email address.
Updates the password field of the given instance.
Updates the password field for the given instance and returns the updated instance.
Given an email address validate that the user associated with the email address exists and that the user
Creates a new token for the user if the user is logged in.
Deletes a specific token. If the token does not exist then the user will be logged
Overrides the initial method to raise a permissiondenied exception if the user is not logged
Sends a validation email if the data is not valid.
Update the expiration date of the object.
Returns the password reset email context for a notification.
Handler for email notification.
Handler for password reset email notification.
Handler function for validation email notification.
Returns the user and token associated with the specified key or None if authtoken does not
Authenticate the user and token using the given key.
Show a notebook.
Converts a list of Bokeh plots into a list of HV plots.
Generates a customjs callback that will send the data to the plot when the plot is
Returns the widget associated with the specified parameter.
Render the function that is passed to the holoviews module.
A wrapper for textwidget. Textinput.
Returns a list of named objects in objlist.
Returns the owner of a method.
Assigns user and password values to the _auth_user_ and _auth_password
Perform a ping request and return a boolean value.
Performs a request with the given parameters and raises an exception.
Returns the health status and data of the node.
Convert a number of bytes to a human readable string.
Get the total load of the CPU
Get the memory size of the object.
Return the network up by synoformathelper.
Returns a list of volumes in this container.
Get a volume by its ID.
Returns the volume size in bytes.
Returns the percentage of the volume used
Calculate the average disk temperature of a volume.
Returns the maximum disk temperature for the given volume.
Returns the disk with the specified ID.
Login to the API. Returns True if successful False if not successful.
Calls the requests module to fetch the given URL.
Executes an HTTP GET request for the given request_url.
Update the current storage with the current values
Get a synoutilization object
Get the storage for this instance.
Generate a context object for a request.
Get the tenant token.
Call widget. build_attrs with self. attrs and return self. attrs.
Override settings. installed_apps with a list of apps.
Returns the list of apps that are not in settings. installed_apps.
Returns a dict of global settings.
Handles the HTTP GET request.
Change the value of a config option.
Migrate the config to a new location.
Start the OAuth 2. 0 authorization server.
Waits for the server to return a response.
Get the new access information from the OAuth server.
Check if the token is present.
Use the configkey_scope and configkey_refresh_token to set the access credentials
Create the table in the DynamoDB manifest.
Split a full path into bucket and prefix.
Check if a bucket is a GLACier.
Returns a copy of the given dict if it is not none.
Adds the given run_id to the manifest for the given table.
Check if the given run id is in the manifest.
Extracts the schema from a URI.
Convert schema to snake case.
Parse unstruct string into a dict
Transform a line into a JSON string.
Converts an event to a dictionary that has all the fields in the event.
Returns the name of the template to use for the response.
Print the context in a human - readable format.
Returns a string representation of the variables in the context.
Format the SQL string to HTML.
Pretty - format a Django context html string.
Format a summary of a dictionary as HTML.
Replace str_ and str_ replace it with str_ and replace it with str_proxy
Returns the formatted string representation of the given object.
Tries to pretty - print the given object to the given stream.
Get the next token from the token stream at the given position.
Return a list of La nodes from a LaTeX string.
Get the text nodes of a LaTeX node.
Return the LaTeX representation of the node.
Convert an ASCII - encoded string to an ASCII - encoded string.
Fetches information for organisation.
Gets a list of board objects.
Gets the list of users and their associated members. Returns a list of user objects.
Update an existing organisation.
Removes a member from the collection.
Adds a member to a group by its ID.
Adds a member to a group.
Gets the list of information for the current user.
Adds a card to this object.
Gets the label information for the current user.
Returns a list of items in the collection.
Updates a label s name
Updates the label object with the given query_params and returns the label object.
Builds and returns the authorisation URL.
Returns the card information for the current user.
Get a single board.
Fetches a list of datasets from the server.
Get a list of checklist objects from the server.
Add a comment to the current user.
Adds an attachment to this request.
Adds a checklist to the checklist endpoint.
Add a label from a dictionary.
Adds a label from a class.
Adds a member to a group.
Gets the member information for the current user.
Fetches a list of cards from the API and returns them as a list of card objects
Gets the list of organisations associated with this client.
Creates a new board and returns it.
Gets the board information for the current user.
Returns a list of lists.
Fetches a list of labels from the label service.
Fetches a card by its ID and returns a card object.
Returns a list of checklist objects
Retrieves a new organisation based on the specified search params and returns a new organisation
Update the board for this user.
Adds a list of resources to this client.
Adds a label to this endpoint.
Gets the checklist information for the current user.
Returns card object by card_id.
Returns a list of checklistitem objects for this card.
Update a checklist.
Adds a new item to the collection.
Remove an item from the server
Update a checklistitem s name
Update the state of this checklistitem
Adds the authorisation parameter to the query_params.
Checks for errors in the given response.
Builds the URI from the path and query_params.
Fetch the JSON response of the specified path.
Create anorganisation.
Creates a board.
Create a label.
Create a list for a given trolly list.
Create a card.
Create a checklist.
Create a member and return a trolly. member. member object
Gets an organisation by ID or name.
Create aboard with the specified parameters.
Gets a list by ID or name.
Create a card with the given id and name.
Get a single checklist.
Shortcut to create a new member.
Extracts a domain name from a URL.
Convert a raw text string to Markupless.
Set the password for a user.
Split the text into locations based on the decision of should_split.
Mark a regular expression as split.
Mark the regex at the start and end of the text.
Shortcut for running a command.
Create an AES cipher.
Return the AES mode to use.
Returns the number of modules that should be imported and the number of modules that should be imported
Check if the scheme is in the config. If not raise a valueerror.
Called when a publish message is received.
Make self. id + num_.
Return a deferred that will fire when the connection to the broker is lost.
Handle the response of the connection attempt.
Encode a string into a int.
Decodes a string.
Encodes an int to a string.
Encode a value into a human - readable string.
decodelengths a given encoded string
Encodes the message header.
Encode the variable header and payload
Decodes the packet.
Encodes the header of the resultcode into a string.
Decode the packet and update self. encoded.
Decode the packet to self. encoded
Encodes the header of the message.
Encode the message header.
Decode the packet and store it in self. encoded.
Encode the VCF header.
Encode this message as a string.
Decode the packet and store the result in self. encoded.
Decode the packet and store the flags.
Returns the URL for this request.
Send a request to the API and return the JSON response.
refresh self. _blocks
Format the data.
Fit data to data and return the transformed data.
Fits k - means clustering.
Predicts the class for a given data set.
Map a set of samples to new clusters.
Sort the clusters according to the mean of the data.
Returns the string representation of a datetime object.
Returns the total number of points in a dictionary
Returns the total time span of the data dictionary.
Convert a list of numeric values into a string of units.
Prettify an element in a string.
Convert a string to a namemass.
Converts a string to a massname.
Writes the data to out_dir if it doesn t already exist.
Given an array of bools return an array of indices corresponding to the indices of the bool
Convert a list of tuples to boolean array.
fast smooth op.
Calculates the gradient of an array using a rolling window.
Finds the minimum value of x and y in a 2D array.
cluster meanshift
K - means clustering.
Reads the defined srm file and returns a numpy array of the names of the sr
Read the configuration from the latoolscfg file.
Read thelatoolscfg config file.
Copies the srm file to the specified destination.
Exclude elements from a boolean filter that are above a certain threshold.
Make a plot of the data.
Determine the indices of the log likelihoods in the time domain.
Calculates the ratio of the text to the given standard standard.
Calculate the calibration for a given string.
Compute the relative ablation times of the time series.
Calculate the correlation between two time series
Create a new filter
Get the parameters of the filter.
Plot a histogram of the data.
Load reference data.
Calculates the molecule of a string.
Generates a tuple of keyword values from a set of ansicolors and ansicolors
Annihilate a tuple.
Dedup the stack into a tuple of strings.
Gauss - weighted stats.
Gaussian function.
Compute the stderr of a vector.
Returns the list of samples in the specified subset or raises a keyerror if the subset is
Calculates the ratio of the current stage to the given standard.
Make a new subset of the set of samples.
Applies a new classifier to the data.
Filter the minfo with the number of files that have been removed in the minfo.
Run filter_report on the data.
Exports the data of the analysis to a CSV file.
Save the log to a file.
Applies a function to each element of a sequence and folds the elements of the sequence
Calculate the bayes scale from a string.
Calculate the median value of a string.
Remove noise - despike kernel from a signal.
exp decay - despike algorithm
Add a filter to the index.
Remove the specified name from this analysis.
Clear the components of the graph.
Remove components that are not used in the analysis.
Determine if the fuzz key of this component matches the value of the fuzzkey.
Grab the index of the component in the given analyte
Returns a string representation of the information for this component.
Writes a log file with the specified header and file_name.
Read a log file and parse its contents.
Get information about the modem
Sends a message to modem
Parses the given file or string. If file_or_string is a file or
Determine the domain and path of the viewer link.
Returns the div tag for the thumbnail.
Returns the code for the element. If code_example is none the code for the element
Get the code example of the node.
URL of the viewer.
Returns the path of the output file.
Create the nbconvert. py file.
Downloads the given list of files and returns the downloaded file.
Create a thumbnail for the image.
scale_image will scale the image to max_width and max_height and save it
Saves the thumbnail of the image to the file specified by image_path.
Copies the thumbnail figure from the notebook to the file
Get the URL for a given nbfile
Yield the language codes of all fields in the database that have changed in the field_
Process a thumbnail file.
Save the image to disk if resize_source_to is set.
Returns all thumbnails in the cache.
Create a new thumbnail for this image.
Delete an image.
Create a thumbnail of a source image.
Get a thumbnail by source name and size.
Delete an image.
Receive a message from this connection.
Subscribes to a number.
Returns a set of strings representing the state of this service.
Send a message to a specific provider.
Get the receiver s blueprints.
Receive a message from the gateway.
Receive a status from the gateway.
Forward an object to the appropriate client.
Signs a web3 transaction.
Estimate the gas for a given address using the web3 interface.
Estimate the number of gas used to call a safe address.
Writes the given bytes to the stream if await_blocking is True.
Read a line from the serial instance.
Return a bool indicating whether this message has bad headers.
Add an attachment to this request.
Registers the given services.
Load a configuration from a module.
Registers the given resources.
Returns a value error if the value is not a string. Raises a valueerror if
Exits the given object with the specified error traceback. If type is none then raise the
Sets up the data manager for this service.
Calculate the ng of a given wavelength.
Calculates the Cauchyequation of a wavelength and a list of
Returns the response of a HTTP DELETE request.
Check if two files are the same
Create a file or directory link_name. Create the link if it doesn t already exist
Initializes the global logger.
Raise usage error.
Returns a tuple of unclaimed vcf_readers and a list of vcf
Get the new column header from the input vcf_reader.
Return a tuple of unclaimed and unclaimed VCFs for a set of
Computes the mean and standard deviation of the population.
Add the translated calls to the unclaimed_file_readers list.
Splits the input string into a list of lines.
Return the lineterminator that starts with data or None if the data starts with data.
Return the lineterminator that ends with the given data.
seek to the next line in the file. Returns the position of the new line in the
seek to the previous line in the file.
Returns the last num_ lines of the file.
Returns the first num_ lines of the file.
Traverse the file until the next line is reached.
Return the list of unclaimed readers and the vcf_readers in the
Parse a vcf record into a VCFRecord.
Return the sample tag values in a vcfrecord.
Return the set of tags in the VCF record.
Join the info fields into a string.
Returns a string representation of the format field.
Returns the string representation of the sample field.
Return the string representation of the VCF.
Add a sample tag value.
Add or replace the filter with new_filter.
Returns a list of the available categories for a given user and products.
Creates a productsform for a given category and all the products in a specific category.
Constructs a staff products form.
Add a product error
Returns a model fields form for a Django model.
Return the items in the cart that are pending orpurchased.
Shortcut for send_email.
Parse an OSM file and return a tuple of nodes ways and relations.
Yields a generator yielding notes in order of time interval.
Returns True if the filter passes the condition for the given user.
Returns True if the user has passed the filter and False otherwise.
Returns the number of remaining quantity of a user in the condition.
Filter the queryset for a given user in commerce. cart.
Filter the queryset for a given user in the commerce cart.
Pre - filter the queryset for the given user.
Filter the queryset to the given user using pre - filtering.
Returns a pre - filter for the given conditions and user.
Create a commerce cart for the specified user if it doesn t already exist.
Compute and extend the reservation time of the commerce items and the product items in the cart
Adds a v '\ x1b [ 1mNAME \ x1b [ 0
Fix simple validation errors for product items that are not available in the cart.
Recalculates the discounts for all items in the cart.
Returns an iterator over the rows of a given content type.
Determine if the form is valid.
Render the given data.
Returns a list of reports.
Gets the old items of the invoice.
Return a queryset of all payments in the invoice.
Returns a querysetreport of the credit note and its refunded notes.
Show the status of all products and categories for a given product.
Return a list of the items that have a discounted status.
Return all product line items in the cart
Returns a list of payments ordered by time when the invoice is at a certain date.
Returns the credit notes for the given form.
Returns a report of all the Invoices in the invoice ordered by str_.
Shows a list of people with the most common to the most common to the most common
Return the number of presentations of a speaker in the commerce.
Returns the set of categories that are available for the given user.
Returns the available credit for the given context.
Determine if a user is sold out and unregistered.
Handle the edit profile form and redirect the user to the profile page.
Handle the speaker s profile field.
Handle the products form.
Handle the v predictable code for the current user.
Render and update the manual payment form.
Refund an invoice.
Extend areservation for a user in the cart.
Sends email notification of invoice.
Handle badges.
Render a badge for a user.
Return the discounts for the given user and categories for the given products.
Annotate a queryset with the amount of items that have been used for the given user.
Return a list of the available products for a user in a specific category.
Applies the credit note to the invoice
Calculates the cancellation fee for this invoice.
Generates a random access code.
Get an object from a property name in a module.
Return the invoice for the given cart.
Generate a manual invoice for a user with due_delta and description_price_pairs.
Applies the credit notes to the invoice if any are unclaimed.
Returns whether the user can view the invoice.
Refresh the invoice and cart from the DB.
Validate if the invoice is allowed to pay
Updates the status of the invoice.
Save the state of the invoice in the cart.
Returns True if the invoice is in the cart otherwise False.
Update the validity of the invoice
This method is called when the invoice is done. It is called when the total payments
Refund the invoice.
Sends an email to the user associated with the invoice.
Update the annotation with the given data.
Flatten a field into a single field.
Prints the downloads for the current annotation.
Download the file associated with this object.
Get a specific processor by name or return the processor object if processor_name is none.
Prints the names of the processors and their types.
Remove an item from the server.
Upload files to project.
Upload a file to the session.
Download the data for a specific field in a list of data objects.
Recursively get all subclasses of a class.
Get repo and project from app. data.
Yields a variant and a list of phenotypes with suggested changes.
Given a variant_id_list of a variant return the variant phenotypes with
Update the field value of this object.
Remove duplicates from a sequence while preserving the order.
Authenticate using GitHub API
Prompt user to select an item from a list.
Returns the saved issue data for the given issue and namespace.
Moves the saved issue data from this namespace to another namespace.
Get the saved task data for the given task.
Get an asana task by task id.
Applies the given key to the given value.
Flush all items in the queue. If the callback is specified the function will be called with
Create a missing task in the named workspace.
Return a list of the data types of this project.
Log a string of the EKMeters with a specific log level.
Init the serial port
Set the value of the polling parameters.
Render the reads of the given meter.
Set the context of the log
Calculates the cost function for a given pf.
Set the maxdemand period.
Set the user s password to the specified value. If the password is different from the specified
Get the monthsbuffer for the given direction.
Assign a new schedule
Assigns a new season schedule
Assign a holiday date to a given holiday.
Calculates the state of all of the schedules for the given tableset.
Read one or more month tariffs.
Returns a boolean indicating whether or not the value of the label is the same as the value
Read settings.
Writes the message to the log and sets self. m_command_msg
Tries to write a password to the serial port. Returns True if successful False otherwise.
Update the list of observer
request the return value and send it to the send_terminator if send_terminator
Read the meter data and update the work context.
Returns the CRC of the requestb.
Make a dictionary with the name of each field in self. m_bar_a and
Shortcut to set the LCD to a list of items. If the display list is
Set relay status.
Appends the string to the m_serial_port.
Setpulseinput ratio.
Set the context to the zerooreset tablekwh.
Set the LCD status of the device.
Iterate over the given fields in a given schema.
Iterate over a given schema.
Generate random text.
Return a string representation of the execution statistics.
Returns text in specified color.
Prints text to the terminal and flushes the stream.
Returns a human - readable summary of the test result.
Parses argv and returns a list of arguments.
Setup ivoire. result and ivoire. current_result
Performs the actual setup.
transform a configuration to a user - defined location.
Transform the describe function into an ast. ClassDef node.
Transform the body of the describe function to an example node.
Transform an example node.
Transform the body of an example to a string.
Return an ast. arguments object for this function.
Registers this class as a file - basedfinder.
Transform a byte string to a python code.
Applies the given argument parser to the given options and options.
Loads a module by its name. If the module does not exist it is created.
Load a Python script from the given path.
Discovers all spec files in a directory.
Remove a configuration file.
Restart a message with a specific name.
Calls the function with the given results.
Make aservicenamed service.
Refresh the session with the given node_id. If node_id is none the session
Remove expired nodes
Remove a node from the hash.
Get the last time the node was updated. If node_id is not specified get the
Returns a list of all nodes.
Remove all expired nodes from the session and refresh the session.
Increments the number of modified times
Deletes a list of values with a delimiter. Returns a list of values separated by the
Return the basename of a path s children starting at start.
Merges the given state with the given one.
Return True if value exists in token table False otherwise.
return a query for the given value
Make a timer service.
Parses the input from the reader and returns a result of success or failure.
Create an optional parser.
Create a repeatedonce parser.
Create a new parser for the given input.
Replaces the separator in the input with the parser s representation of the given sequence.
Replace the separator in the given sequence with the actual value of the given parser.
Close the connection.
Check if the URL is well - formed.
Get the information from maybeaddheart.
Returns the wrapheart of the given service.
Freeze the graph from a checkpoint.
Freeze a model from a checkpoint.
Save a graph only from a checkpoint.
Save weights from a checkpoint.
Restore from checkpoint.
Parse the given template tag using the given parser and token.
Render a template tag using the given context.
Validates the arguments passed to the function and raises an error if they are invalid.
Raise notimplemented error.
Parse the template tag using the given parser and token.
Returns a context data dictionary that can be used to render this template.
Converts the given caffemodel to a tensorflow session.
Freeze a model from a checkpoint.
Save a caffemodel to a file.
Make the specified number of rows and columns from a sequence of strings.
Yields every other string from the given iterable.
Remove duplicates from an iterable.
Takes an iterable and returns the first one that is not in the iterable.
Takes a list of callables and suppresses any exceptions raised by those callables.
Assert that an iterable is ordered by the given key.
Swap the item from before to after.
Get the first n queues
Reset the iterator and save the saved values.
Pops the end of the string as_var and returns it without the rest of the
Return a descendant public keychain at the given path.
Yield nodes of an object.
Returns True if obj matches the given selector. Returns False otherwise.
Parse a selector and return the result.
Returns the list of nodes that have parent in lhs and rhs.
Returns the list of the siblings of the node with the parent of the lhs and rhs.
Match nodes in given object using given validators.
Make a request with the given url and return the response body.
Expire the cache to a certain age.
Set a key - value pair and persist it to the persistent store.
Get a value from the store.
Returns True if the key is in the store False otherwise.
Check if the given timestamp is a chain check.
Create a new instance from a JSON string.
Create a new instance from an XML string.
Resolve the template name and return the rendered content.
Returns a list of lines of the file fn.
Returns a list of rows.
Validate a token and return the token if it matches the expected_data. If the token
Construct the fernet engine for the given string.
Validate a token using the supported digest algorithm. Returns the token if valid or None if not
Create a new token.
Computes the counter32 of a - b. delta is a number between 0 and
Computes the counter64 - base64 number between a and b.
Return the average duration in seconds.
Sets up the list of source files for the given configuration.
Sends the specified events to the specified source.
Starts a sourcewatchdog for each source in the list of sources.
Parse a format string.
Parses a log line into a data dictionary.
Validates that the value of the field s accept is less than or equal to the value
Verifies that the token is valid and sets the session key if valid.
device or browser name.
Log a warning node.
Connects thereceivers to the notifications.
Create a new secret link for the given request.
Sends an accept notification for the given request.
Send notifications for the currently selected record.
Send email validation notification.
Sends a reject notification for the given request.
Send a notification.
Create a new secret link.
Validates a given token and returns a boolean if the token is valid.
Revoke this link.
Create a new record.
Get the request object by receiver and user.
Send email confirmation email.
Create a new secret link.
Generate a hash of the given version.
Verifies the signature of a message hash.
Returns True if the record is a record with the string_ and the timestamp is greater than
Create an access request.
Marks the specified record as confirm with the specified template.
Creates a new connection to the SSH server.
Returns the string representation of the specified column or none if the specified column is not selected.
Get the list of selected rows.
Return all the items in the query.
Returns the version number of the file.
Sets the version of the file to new_version
Start the timer.
tick the service if sync is set
Show the list of links.
Stop the connection and disconnect from the broker.
Empty the queue of events.
Adds new events to the list of received events.
create elasticsearch client
Encodes an event into a protobuf. proto_pb2. event message.
Encode the list of events as a string and return it.
Decode a string representation of a message into a message.
Sends a list of events to the device.
Generate a file from a URL.
Retrieve a file previews.
message loop
True if the time delta is less than the log_interval.
Abort the current block and return its result.
Performs the stringprep. in_table_c12 and in_table_b
Add a footer to the admin footernode.
Build payment parameters.
Build the Register credit card parameters.
Make a pay with an alias to the given amount.
Returns a string representation of the version number.
Calls when the window title changes.
Create and configure the shortcuts for the given str.
Activate the item at the given index.
Callback function that gets called when the user selects an item in the filesystem widget.
Set the location of the item at the given index.
Joins the path and the resource target path.
Fetch the children of this node.
Return the icon of the source at the specified index.
Calls the process with the given arguments. Returns the pid of the process.
Get the maximum file descriptor
Close a file descriptor and raise an error if it fails.
Close all open file descriptors.
Redirect the specified stream to the specified target.
Set widgets attributes of a form s widgets.
Imports a module from an application module.
Imports a module from all installed apps.
Renders a template to include the given template with the given parser.
Returns True if path is a valid file system.
Check if a URL is a valid S3 URL.
Returns the absolute path to a template file.
Returns a list of all objects in the bucket.
Builds a JSON representation of the worklfow.
Executes the operation of the resource
Create a new project archive in the given folder.
create a directory if it doesn t exist
List the files matching the glob pattern.
Restore the project to the specified folder
Create a new API client.
Gets a list of files in a given storage path.
Downloads the file at the specified path to the specified target path.
Checks if the storage path exists
Gets the parent entity associated with the given path.
Creates a folder.
Uploads a file to the specified path.
Delete a file or folder.
Validate storage path.
Creates a new environment with an access token.
Create a new service instance.
Gets the metadata for an entity.
Delete a project.
Deletes the specified folder.
Copies the content of a file.
Gets the URL for a file signed by the authenticated user.
Emit a log record.
Return a copy of this object with the specified service and version.
Return a new request with the specified HTTP headers.
Return a copy of this query with the specified parameters.
Returns a copy of this object with the specified exception.
Returns a list of field names to be used in the list_display field.
Adds a function to a map job.
Runs the oncotator on the given vcf.
Sorts the list by a given function.
Return a list of datetime objects
Loads data from a JSON file and returns it.
Shift the string t by t and return the new string.
Returns the sum of all the strings in the sequence.
get the rfxcom configuration for the given device or if device is none print the device
Create a new user with the given username and password.
Returns a list of vns
Parses release results from soup and returns a list of string releases
Parse productstaff results.
Finds all characters in soup and returns them as a list of strings
Find all tags with class str_ in soup and return a list of them
parse user results from soup
Create a tar file from a list of files.
Apply op to all files in file_paths.
Copy a file to the output_dir.
Returns the docker parameters for this image as a list of strings.
Refresh the metadata from the database.
Returns a list of streams in this collection.
Exports the stream to a directory.
parse search results
Resets the API key and returns the new one.
Returns a list of users in the database.
Run a bwa index on the given ref_id.
Connects to the cdb server and returns the connection.
Add a new stream to the graph if it doesn t already exist.
Add a stream to the cache.
Inserts a new value into a stream.
Start the syncthread. Returns the syncthread. If the synct
Stop the read thread.
Download a URL job.
Uploads a file to S3.
Prints the labels of an ontology to a file.
Prints a tree of parent - child elements of an ontology.
Get the size of the mean insert in a bam.
Create a new document in the remote database.
Exports the object to a JSON file.
Returns a device object for the given path.
Get labels for an ontology
Gets a list of ols for an ontology
Reads the config file and returns it without contents.
Get the mount path of the container.
Add an option to the arg_parser.
Create the argument parser.
Create a command to run the pipeline.
auth = user_or_apikey user_password
handleresults a previously raised authenticationerror or servererror.
Ping the URL and return the response text.
Creates a crud resource at the specified path.
Updates the object at the specified path with the specified data.
Performs a DELETE request for the specified path. Returns the response object.
Subscribe to a stream.
Returns a list of devices from the database.
Runs the cutadapt tool
Run samtoolsfaidx on the given ref_id
Run a samtools index file from an input bam.
Run a Sambambamba Markdup job on the given bam.
Run a Samblaster and return the path to the output file.
Marks duplicates in a Bai bam and bai with validation_stringency = str
Sort a bam by name.
Downloads a kallisto tarball from the Kallisto index and writes it
Create a DataFrame of users and save it in the df_test_users table.
Sends a command to the websocket.
Subscribes to a stream.
Connects to the websocket. Returns True if the websocket connection is successful otherwise False.
Connects to the reconnector.
Resub Hub Hub Hub Hub Hub Hub Hub Hub
Callback when the websocket connection is opened.
Callback function that gets called when the websocket connection is closed.
Callback function that gets called when an error occurs in the websocket connection.
Called when a message is received from the websocket.
Ensures the websocket connection is alive.
Select variants in a VCF file.
Quick check for the existence of a BAM file.
Writes the given configuration to the config file.
Get the configuration from the config file.
Returns the term for the specified ontology.
Search ontology by name.
Gives a list of ontology names or an empty list if ontology is not specified.
Returns an iterator over the descendant terms of a given ontology.
Yields the ontology s descendant labels.
Yields the labels of the ontology.
Iterates over the terms of a ontology and returns a list of terms under that ontology.
Runs fastqc in the context of r1_id and r2_id.
Add a new stream to the query
Starts a spark job.
Starts a Spark job.
Starts a hdfs container.
Stops the job.
Check the status of this job.
Looks up a zone and returns its full zone name. Raises zonenotfound
Fetches the configuration from the specified zone using the specified connection.
Merge a list of configuration chunks into a single XML document.
Validate the given changeset and return a list of errors.
Given a list of members with fitness scores minimize the number of members that have the fitness score
Returns the fitness of the group.
Returns the value of the cost function.
Returns the value of the cost function.
Returns a dict of the number of parameters of the model.
Returns the list of member names if the number of processes is greater than the specified number of
Adds a parameter to the configuration.
Normalizes the keys in a list of strings.
Yields all environment variables and their values.
Returns True if the given callable has any of the given exceptions raised by the given callable.
Transform a list of hits into a package list.
Transform a result to a string if the result is an instance of the given type.
Converts an HTML string to the namespace of the element.
Converts the givenxml document to HTML.
Open a document in a web browser.
Remove this node from the tree.
Remove the tag from this element.
Apply css selector to expr and return the result.
Yields loghandler members.
Get the number of environment variables and environment variables.
Check if a string is a single class.
Check if a module is a single module.
Ensures that the input is a list of dicts and that the input is a list of
Validates that the given request has a valid integer ID.
Decode a file system path.
Escape a string in an object s argument list.
Returns the codecname for the given encoding.
Return the character encoding of the string.
Returns the remote address for a given value.
Returns obj if obj is a string int float or decimal. Otherwise raise valueerror.
Parses a string into an element tree.
Parses an XML file and returns an elementtree.
Converts a BeautifulSoup tree to HTML.
Get the current traceback of the given exc_type and exc_value.
Returns a string representation of the exception.
Render the summary.
Generate the plaintext representation of the stack trace of the exception.
Render the source table.
Returns a string if the egg_info string matches the search name and the link string if
Sort a list of links by egg fragment.
Retrieve the content type of a URL.
Yields a generator of links in this URL.
Return the version of the object as a boolean.
Return the list of files in src_dir that match package s data.
Given a list of files in src_dir and a list of files in the package exclude
Parse a requirements file.
Join lines from iterator.
Removes comments from the iterator and strips them.
Visit the node and raise a syntaxerror if the node is not allowed.
visit an attribute node by returning a new location for it
Coerce a string to a number.
Push the application context onto the stack.
Removes the current app context stack and passes back the app context stack.
Return a copy of this request.
Match self. request. url_rule with self. url_adapter. match.
Push the current request into the request context stack.
Returns True if dist is editable False otherwise.
Add a url_value_preprocessor function to the app. url_value_pre
Add a function to URL defaults.
Get the root path of a module.
Loads the jinja template loader.
Run the completion script.
Get the domain of the cookie.
Return True if the root of the wheeldir is a Purelib distribution.
Yields a list of possible uninstallation paths for a given package distribution.
Check if the given version is compatible with the given name.
Build one wheel and move it to output_dir.
Yields the names and consts of a code object.
Write the delete marker message to a marker file.
Returns True if sys is running under sys. prefix else False.
Gets the username of the current user.
Create a scheme for an distutils distribution
Parse the Cache - Control header.
Cache the response in the cache.
Load a template from a device path.
Save the object to the filesystem.
Convert a value to the appropriate type.
Add the given filters to the given filterer.
Adds the given handlers to the given logger.
common_logger_config is used to add handlers and filters to a logger.
Execute a python script from a file.
Override tempfile. tempdir with replacement.
Returns the URL and revision for the URL of the git repository.
Given an object and an argument try to get the argument and return it. If the argument
Generates a file from the given source file.
Get the default cache directory.
Yield distribution objects fromeggs_in_zip.
Yields a distribution from a file or a location on the given path.
Declare a namespace for the given packagename.
Returns the MRO of the given class.
Find an adapter for ob in registry
Ensure directory exists.
Yield the entry points of a given entry group.
Return True if this distribution can be added.
Evaluate the marker.
Interpret the text in the markerlib environment.
Format the log record.
Returns a decimal. decimal. decimal instance with a given precision.
Returns the precision of the given number.
Converts the given value to the number of significant elements of the given locale.
Returns a class that is unpatched.
Check that value is a valid requirements string. Raises distutilssetuperror
Fetch the build_egg for this distribution using the package_index. to_scan option
Displays the rolls of aice
Converts a price string to an instance of the class.
Calculate the price of the object.
Validate the given request.
Returns the method associated with the given args.
Applies the given method to the given arguments. Returns the result if an exception is raised
The module name of the blueprint.
Returns the blueprint name of the URL rule.
Make an abstract dist from a req_to_install.
Walk through the requirements of the given handler and apply them to the requirements of the given
Returns a list of all of the namespace packages in the distribution s namespace_packages or all
Encodes the object into a JSON string.
Tokenize a document into a list of tokens.
Annotates the merge annotations of the old and new annotations.
Copy annotations from src to dest.
Recursively compress a list of tokens.
Serialize a list of tokens using markup func.
Expand a list of tokens into their HTML representation.
Locate the end of the un balanced string.
Fix up the chunks of a string.
Flatten an element and yield its sub - elements.
Splits a string into a list of words.
Return the HTML start tag for the specified element.
Return the tag of the end of the element.
Returns a string representation of the html fragment. If skip_ outer is set to True then
Remove tags from doc that are not inside a block level tag.
Returns the cache url for this service.
Generate an autolink for el.
Kill conditional comments.
Create a document from a string.
Export a URL to a location.
Get the revision of a location.
Returns the name of the module.
Propagate exceptions according to the current configuration.
Find the full path to the instance of this class.
Update the given template context.
Handle an http exception.
Handle an exception and log it.
Raise request. routing_exception.
Calls preprocess_request and handle_user_exception and process_response functions.
Return the default options response based on the current request context stack.
Create a URL adapter for the given request.
Injects the default URL functions for the given endpoint with the given values.
Yields unique values in the given iterable preserving the order.
Process the list of package metadata entries for the package with the given key in pkg_info
Convert a requirement to a requires_dist string.
Converts a package s metadata file to a metadata dictionary.
Import and insert the module into the sys. path.
Yields all classes in the module.
Yields the names of all methods of this class and its sub classes.
Check if the path is a module path.
Walk a file system and yield the root directory and subdirectories of the file system.
Set default values for dump_arg.
If current_app is current_app then set the json_decoder to the current app
Returns True if all keys in mapping are set to the same value. Returns False otherwise.
Increments the value of a key by delta.
Dumps an object into a string.
Builds a list of options that match the regular expression req and raise an exception if they
Populates self. link with the given finder.
If self. source_dir is none then return the parent directory of parent_dir.
Removes the temporary build source.
Returns a pkg_resources. distribution object for the given string.
Returns a list of site - config directories for the specified application.
Yields all of the module files in sys. modules.
Restart the environment with a reloader.
Convert a string to text type.
Try to find the CA bundle for the given string.
Parse an HTML document using the specified treebuilder instance.
Parse the HTML document into a DOM tree.
Parse a fragment from a stream.
Transforms a word and returns a sorted list of its keys and their values.
Converts an argument to a list of tokens.
Bind HTTPServer instance to given host and port.
Print the report to stdout.
Load the code from a pickle file.
Takes a dictionary of parameters and a dictionary of keyword arguments and returns a new dictionary where
Wrapper for call_subprocess.
Returns the current version of the Python implementation.
Returns a list of distribution objects corresponding to the specified distribution basename.
Find external links in a page.
Open a local file or URL.
Return a list of all the directories in sys. path that have been removed from sys.
Return a list of all the directories in sys. path.
Add a package to the system.
Add a package to the system site - packages.
Check if the current user site is the same as the one passed in.
Adds the current locale to the aliases dict if the current locale is the same as the
Set the default encoding to str_ if num_ is set.
force_global_eggs_after_local_site_packages to be called before
Fix the location of sys. path by adding it to sys. path.
Wrapper for subprocess. popen.
return True if any of theimpls in the list of py point to str_ else
Converts the sources of the target to the language.
Run the application and log the stack trace to the console.
Returns a file - like object that represents a resource.
Checks if a scheme is a URL
Unpack a file from a link.
Helper function to download an http link.
Check if a file is in the download directory.
Convenience function to register the format action in the context
Registers a new exchange action.
Decodes the data using the specified content and flush decoder.
Default template context processor.
Render the given template with the given context and send it to the given app.
Render a template with the given context.
Render the template source with the given context.
Parse a version string into the global parse_version function.
Returns True if the given name is declared in this scope.
Add the name of the function as a parameter or local variable.
visit a from import node by returning a string
Run the given service and serve the report_message forever.
Encode a string to a URL with the given character set.
Returns a list of strings that match the given requirement.
Populates a requirement set.
Exports the given location to a temporary directory.
Lookup and parse the response from the API.
iterate pages of query
Get the element s ancestor
children of the node
Get an element from a string path.
Returns the element text if it exists otherwise returns none.
safe get element date
Calculate the price and currency.
Get the price of the list.
Send a request and return the response.
Build a cached response for the given request and response.
Converts a string to title case - insensitive.
Compare the constant time in val1 and val2.
Verifies that the signature is correct for the given key and value.
Derive the secret key from this key.
Returns the signature of the given value.
Return the signature of the given value.
Verifies whether the signature is correct.
Validate and unsign a signed value.
Returns the signature of the given value.
Validate a signed value and return a boolean if it is valid.
Dumps the given object into a string.
Helper function to raise a server error.
Yields a list of packages that require a parent of a given package.
Yield the relative path relative to all the directories in a given path.
Prepare the response for the given request.
Unsign the given wheelfile. Raises wheelerror if the file already exists.
Unpacks the given wheelfile into the specified destination.
Install the scripts for the given distributions.
Redraw the graph on the x - axis using godot. dot_data_
Redraw the canvas for this component using the xdotattr parser.
Returns the node with the specified ID or none if the node with the specified ID does not
If new is a node in the graph set the conn to the new string.
When a node is added the new node is added to the object.
Called when the component is changed
Handles the normal left mouse button clicked event.
Called when diagram canvas has changed.
Clear the canvas of the diagram.
Map the new model to the old one.
Removes the model from the collection of nodes.
Map an element to a diagram.
Returns a list of xdot data.
Process the font of the tokens.
Process an ellipse component.
Process a polygon component.
Process a polyline from a list of tokens.
Process a text component.
Process image tokens.
Render a grid file.
Save an object to the dot file.
Loads the dot file and returns it as an object.
Check if a point is within this region.
Draw the bounds of the stroke context
Creates a newdotgraph wizard and sets its finished flag to True.
Creates an engine for the given URI in the given context.
Parses the dot code and sets self. model
Create a new model.
Opens a file dialog and sets the model.
Save the dot language model to a file.
Saves the model to a file.
Configures the UI for the given info.
Configures the node labels
Configures the edges in the UI.
Shortcut to edit traits with kind = str_ in the about_view
Add a node to the control.
Adds an edge to the control graph. Returns the number of nodes added and the number
Add a subgraph to the cluster.
Add a cluster to the UI.
Request a new graph if it s not already selected and return the new graph if it s
edit options for a godot instance
Configures the dot code
Shortcut to be used when the user exits the application.
Moves the component to the origin of its components.
Save the object to a file - like object or raise a valueerror if the object is
Load from a file like object.
Save the collection to a file.
Load an object from a file.
Create a new property with an alias function.
Parse a text file into a list of words.
list of start words
Adds a chain to the model.
Remove the chain with the given name. If the name does not exist raise a valueerror
Recursively walk the source tree and build the chain.
Create a new dot program and save it in a file.
Deletes a node from the node store. If node_or_id is a node
Returns the node with the given id or none if no node with the given id exists.
Delete an edge between two nodes.
Adds a subgraph to the current subgraph.
log a warning if the program has changed
Sets the list of node strings for each edge in the graph.
Parse a graph from a dot file.
Parses a dot file.
Build a top graph from a list of tokens.
Get the time units and multiplier for a given number of seconds.
Format a duration in seconds with the given units.
Change name and load graph.
Create the UI for the tab.
Splits an iterable into windows of the specified length.
Get the children of an object.
Append a child node to the subgraph.
Inserts a child node into the subgraph.
Delete a child from the subgraph at the given index.
Called when the children of the given object are replaced.
when the children of the object change.
Returns the label for the given object.
Set the label for the given object.
when the label of the object changed.
Init the instance of the UI object.
Update the editor editor.
Add listeners to the canvas.
Replaces the old and new nodes of a node.
Node collection has changed
Adds the given features to the graph if graph is not none.
Replaces old and new edges.
Internal method to handle edges that have been removed and added
Adds edges to the graph if graph is not none.
Parse the xdot directive.
Called when a drawing is done
Return a new node instance for the given string.
Create an edge from a godot graph.
Create a mongoengineproxy instance and add it to the context.
Parse xdot drawing directive.
Parse xdot label directive.
Called by component when drawing changes
Update the position of the component.
Called when the component s position has changed.
normal_right_down handler
Prints the highlight information.
Draw the mainlayer of the line.
Check if a point is inside this polygon.
Draw the mainlayer of the stroke.
Handle an event.
Runs the loop until the stopper is set or a typeerror is raised.
Returns the full url for the given page number.
Render the previous and next links.
Render the previous and next links if the total number of pages is equal to the number of
Create a URL identifier from the user and password.
Discovers all modules in a directory.
Discovers all the modules in the given directory.
Returns a list of modules that match mname. mname can be a module name or
Creates a directory if it doesn t exist.
Create a blob from a text string.
Checks a card number to see if it is a number with a certain number of digits
Loads the module specified by module_name.
Adds the given path to the list of paths.
Find a module in the search path.
Split a line into two lines of length min_line_length and max_line_
Removes any namespaces from the XML tree.
Return the consistency of this version to the desired version.
Create a new object from a YAML string.
Merges this object with a new dictionary.
Executes all the actions in self. actions in the current working directory.
Adds the details to the message.
Sends the email.
Adds the context to the string context.
Adds a new attempt to the log.
Add a URL to the queue.
Starts the list of workers for download and upload
Set the value of a key in the kvstore
Get a key from the kvstore.
Recursively retrieve a key from kvstore.
Get the index of a URL.
Delete a key from the kvstore.
Plot a heatmap of the feature importance report.
Add months to the given timestamp.
Add months to date.
Checks if the current day is a christmas period
use service_name as service_name for soundcloud if service_name == str_
use a storage service
Reads the CSV file and returns a list of column names and their values.
Loads data from a JSON file.
Save the data to a JSON file.
Return a list of x y where the reference label is the same as ref_label.
Return the average by label.
Restore the data dictionary from the session.
Recursively merge dictionary b into dictionary a.
Finds all the blocks in installed_apps.
Verifies that the block is registered.
Register a new block of the specified type.
Unregisters the given block type.
This function converts a file tomp3 format.
Get the reasonable version of the desired_version.
Handle SSL redirect.
Parses a content type.
Parse a string into a list of strings.
Resizes an image to fit its width and height.
Downloads the given url and returns the filename of the downloaded file.
Connect to the server.
Uploads the given file to the given folder. Returns the name of the uploaded file.
Connects to the service and creates the needed folder if it doesn t already exist.
Update the filenames of the dataset.
Reads the iop information from a file.
Apply a scale to the AEAD.
Reads the Pure water absorption from a file.
Reads the Pure water scattering from a file.
Interpret the iop from a CSV file.
Writes the given iop to a file.
build b = b_b + b_ water / num_.
build the a string
build the C matrix by adding a + b.
Builds the iop.
Sets the list of parameters to be passed to the constructor.
Read a parameter file to a dictionary
Convert a string to a list of floats.
Set a handler for a list of signals.
Log a warning when a pseudo - signal is received.
Default handler for all signals.
Pauses the execution of the given signal by a certain number of seconds.
Abort the process with the given signum.
Process the current status of the process by calling the status callbacks.
Removes an event from the event_list. Raises keyerror if the event is
Fetches a sorted list of metric names. Returns a list of sorted metric names.
Convert a function into a function signature.
Extract the signature from a partial instance
Return a new sys. argv and new_kargs.
Returns a list of strings that should be ignored by metainf_files
Returns a tuple of the file name and the file path as a string.
Convert a VLQ string to an int.
Parses the user_data_header and updates the header dict with the user_data
Gets the duration of the time in seconds.
Prints the details of the game.
Gets the data from the ui
Opens the file dialog to find the result of the specified file.
Writes the data to a file.
Method to perform the data processing.
Display the graphic connection.
Displays the error message.
Shows the error message.
Runs the display of the graphic.
Cancel the current planarrad.
quit the application
Saves the figure.
Opens the log file
Opens the documentation for the given string
hide the error message and reset the UI
mouse click event handler
Moves the mouse to the normal mode.
Displays the graphic at the specified location.
Returns a lockset with the given genesis and the given privkey.
Sign this message with a private key.
Create a hash of the object.
Check if the configuration is valid.
Update the issue funds.
Returns the last global lock for all the processes in the loop.
Returns the last vote block in the lock if the lock is in the blockhash.
Returns the last valid lockset
Get the timeout time of the consensus network.
Set the state of the proposal to be active for the given protocol.
Make a list of num_colors private keys.
Calculate delay.
Adds a round_timeout to the list of received consensus messages.
Converts an address to a native contract class.
Update the filter with the given data.
Computes img_from_vgg.
VGG string to be used in VGG string.
Returns the f_layer function for layer with name layer_name.
Returns the output of a layer.
Returns a dictionary of features for the given input and set of layers.
Create a new key file in the given path.
Mark the state as finished.
Release the underlying database table.
Returns a list of the tables in the database.
Calls the _fix_compile function for each object in the list of remove_flags
Find the latestteradata version.
Gets a configuration value by its key. If the key doesn t exist or if it
Set a configuration value.
Implements the table magic
Writes the default configuration to the specified file.
Set the name of the filter to use.
Returns the string representation of the object.
Parse string into float or float with multiplier.
Returns a dictionary with all the gain values in the string
Returns a dict of device settings from a string.
Wraps the given text with an optional initial_indent and subsequent_indent.
Call simplesoapy. detect_devices and return a tuple of devices and a string
Set the center frequency of the PSD.
Calculate the Fourier transform of the given PSD
Wait for the result of a state to be available.
Update the psd_state with the new values from samples_array.
Read a pwr array from a file - like object.
Writes the p wr_array to the file - like object f.
Submit a task to the work queue.
Return the integration time to be repeats.
Create a buffer of the given size.
Create the internal buffer and buffer objects.
Stops the stream.
Runs the CMake executable with the specified arguments.
Return a list of datetime objects that match the given number.
Return the string representation of a datetime replace hour minute second and microsecond with the specified number of
Return a new datetime with the same weekday as the given datetime.
Convert a datetimes to a list of strings to be deleted.
Takes a list of datetime. date objects and returns a list of datetime. date objects
Convert a list of dates to a list of dates to be deleted.
Gets the read_write_write_cmd pattern.
Read the bit value at the specified address. Returns the number of bits in the value if
Writes a boolean bit to the specified memory address.
Get the number of bits that match the given bit pattern.
Try to write a gpio interrupt into userspace.
Sets a gpio interrupt edge.
Waits until a file with the specified name exists.
Register a callback for a pin.
Deregisters the specified pin.
Enables gpio interrupts into the userspace and sets the gpio interrupt edge.
Returns the string message to send to the device.
Render a form to a string.
Does this form contain any errors?
Render a link to the form.
Extract the version of a package from project_dir.
Returns the keyword arguments for the form.
Check the status of the response and raise appropriate exceptions.
Send a GET request to the API and return the JSON response.
Calculates the temperature humidity based on the given dewpoint.
Calculates the dewpoint from Fahren data.
Publish this command.
Calculate the CRC for the given data.
Check if the data is valid.
Unpack an integer into a string representation of its value.
Determine whether or not we should use the rev_b_archive flag.
log the wake_ack and raise an exception
Send a command to the node and wait for it to finish.
Get the new archive fields from the dmpaft command.
Parses the archive fields into a dict.
Update the weather for a given station on a list of pub_sites.
Initialize the logging configuration.
Returns a list of the pub services
get the value of a station by interval
Update the str_ argument with the values passed in.
Set the function arguments.
Publish this configuration to a file.
Fulfill a set of requirements.
Push the override context stack onto the current context stack.
Pops the current context stack and raises a runtimeerror if the stack is empty.
Overrides the current string.
Push an additional context stack into the context stack.
Pops the top of the context stack and raises a runtimeerror if the context stack is
Push an additional string into the current string and pop it off the stack.
Removes duplicate field names from a list of field names.
Interpret the results.
Extracts user - defined params from a query.
Returns a pandas dataframe
Returns a multigraph from the results of the query.
Plot the data
Returns a CSV representation of the table.
Add the context data to the context.
Returns a list of widgets sorted by their name and position.
Returns a list of widgets that should be updated if should_update is True
Registers a widget of a given class.
Unregisters the widget of the given class.
Get the last update for this dashboard widget.
Saves a setting for this dashboard widget. Returns a dashboardwidgetsettings object if the setting
Determine if the last update time has passed since the last update.
Concatenates a list of arrays along an axis.
Check if the passed args and kwargs match.
Format axes.
Wrap a function in a Spark array.
Align self along axes with axes.
Convert this array to a Spark array.
Derive the labels along an axis from the labels.
Split the plan into n chunks of the given shape.
Create boolean array mask.
Repartition a list of npartitions.
Return a stack of the stack of the array.
Align the array to the specified axis.
Return the first element in the RDD.
Reduction along axes with mean values.
Compute the variance along an axis.
Compute standard deviation along specified axes.
Reduction along axes with sum operation.
Return the maximum value along an axis.
Return the minimum value along an axis.
Transpose the array along axes
Swap the axes of two axes
Reshapes the array to the specified shape.
Returns the index of the new array based on the shape of the array.
Return a new DStream in which each RDD contains the values cast to the specified type.
Return a new DStream in which the values are within the specified range.
Return the elements of the RDD as a numpy array.
Converts arg to a tuple.
Packs a list or iterable into a tuple.
Validate that all axes are within the given shape.
Determine if two arrays are equal.
Convert a list of strings into a list of integers.
Convert a slice or an integer into a slice of one or more dimensions.
Make sure that new and old are strings.
Check if new is shapeable by old.
Concatenate allstacked elements.
Expand an arbitrary number of dimensions to one extra dimension.
Returns a local instance of the constructor that matches the specified arguments.
Create a new array of given shape and type filled with ones.
Create a new array of given shape and type filled with zeros.
Concatenates a list of arrays along a given axis.
Computes the log likelihood of the discrete variables.
Returns the value of the most likely alpha.
Computes discrete alpha mle.
Computes the alpha of the discrete variables.
Plot the PF on the x - axis.
Calculate the lognormal likelihood using scipy. stats. lognorm. fit and then print the
Sanitize a Turbo document.
Adds an instance of the zipfile to the config if it doesn t already exist.
Returns a list of strings for all tags.
Compute the MD5 hash of the file.
Compute the sha256 hash of the current value of the field.
Compute the sha512 hash of the current object.
Parses a string containing a long.
Decode a public key from a string.
Process SSH public key data.
Process SSH DSS data.
Process the ECDSA signature and update the ecdsa key.
Processeded25516 encoded data.
Parses the string representation of a YubiKey.
Returns themechs.
Shortcut for the main function.
Initializes a new setup. py for the specified version.
Create a file from the given string.
Formats the h5bp css for the page.
Format the dj - frontend HTML with the static URL and the given version.
Format the djfrontend font.
Render the django template with the djfrontend modern backend s static URL.
Render the django template with the given django version.
format_html with settings. static_url and settings. static_url
Returns the HTML template for the django - dj frontend with the specified version.
Returns the css for the django - djfrontend tag with the specified version.
Returns the HTML for the django - dj frontend themeroller.
Render the template of the Django Form s formset.
Returns the HTML template with the class djfrontend bulk scrollto specified in settings. py
Returns the HTML template with the django - djfrontend smoothscroll flag applied if version is
Returns the CSS for the djfrontend_twbs tag with the specified version.
Returns the domain and domain of the backend backend backend backend backend backend backend backend backend backend backend
Generate the authentication hashes for the given user and purpose.
Calculates the expiry time for a given number of minutes.
Returns a user token for the given user and purpose.
Returns the serialized data for the given user.
Update a profile.
Sends an error indicating that a user login failed.
Returns a user if the username is present in the token else None.
Check if the request is secure and raise an error if it s not.
Returns the username of a user.
Send a create_user request and return a user token.
Do the actual login of the user.
Remove the user from the group.
login with password or resume token
Authenticate a user with a password. Returns a user token if the user is not active
login with resume token
Sends a password reset email to the user if the user does not exist.
Resets the password of a user.
Recursively merge a dictionary into a new dictionary.
Get the value of alea_unique_field s primary key if obj_pk
Returns a dictionary of the object IDs for a given list of objects.
get object id by content type and alea field name
get object ids by content type and alea_unique_fields
get object by its id
Set the default value of the boolean field for a given operation in a apps. py file
Set the default reverse for a given operation in apps. py.
Truncate the database.
truncate app_label from_state to_state. truncate_backwards
Initializes build options.
Finalize the options for the build.
Converts a path to a directory.
Seed a set of values.
Returns the current state of the parser as a dictionary.
Generates a random string of given length using the given alphabet.
Yields the api_endpoints of an object.
Clears the API path map cache.
Pretty print function.
This method is called when the connection is opened.
Delete the connection from pgworker and send a requestfinished signal.
Calls process_ddp on a message.
Yield frames from a message.
Process the data and print the error message.
Dispatch a message to the appropriate handler.
Receive a connection to the websocket.
Send ping message.
Recieve a sub - command.
Send a unsub command or reply with the given string if id_ is specified.
Call a remote API method.
generate randomsockjs info for environ and start_response
Main function for django.
Print the message only if self. verbosity > num_.
stop the thread for each server in the list of servers and threads
start the thread and wait for it to finish
The main function of the psycopg2 client.
Returns a green version of the psycopg2cffi module.
Get a random id for a stream.
Autodiscover a dddp. api. api. api. api. api
Return the error as a dict.
Get an instance of the given factory.
Emit a log record.
Add a resource object to the app.
Send a message to this registration.
Send an alert to one or more registration IDs.
Get the list of inactive IDs from the apns create socket.
Sends a message to the gcm.
Sends a message to a group of users.
Sends the object to the gcmpush device and returns the result as JSON.
Sends the data to the API.
Returns the model class for the module at module_location
Search the API using the Giphy API.
Translate a Giphy search term using the Giphy API.
Convenience wrapper around giphy s trending API.
Return a Giphy object by its ID.
Return a new Giphy instance with the specified tag and api_key.
Upload tags to a Giphy instance.
Normalizes the values in the dictionary.
Fetch data from the API endpoint.
Fetch trending giphyimage data.
Fetch and return a giphy image object.
Upload a file to the Giphy API.
A helper method for creating an access_control.
Authenticates the user using the provided email and password.
Upload a new video.
Checks the upload status of a video. Returns a boolean indicating whether or not the video
Update a video.
Deletes a video.
Check the availability of a video.
Check the upload status of a video
Returns a list of videos.
direct upload of a video
Uploads a video.
Sends a signal that a video is uploaded.
Removes a video by video_id.
Fetches the video entry for this video and returns it.
Saves the video to the database.
Delete video by video_id
Update the metadata for this project.
Update the value of a metadata field.
Update this object s data
Parse a C - style string into a list of nodes.
String representation of a list of trees.
Load a file - like object from the file - like object fp.
Read a file and return its contents as a string.
Parse a string representation of a node.
Create a new str node.
Create a newick string for this object.
Returns the node with the given label.
Prune the tree by removing the given leaves.
Removes all internal names.
Removes leaf names from the node.
Return a list of strings that represent bools in json_str.
Raises an exception if the feature is not defined in the settings.
Returns a list of all the values of the argument with the given name.
Create a callback function for use as an asynchronous callback.
Get a cookie by name or return the default if the cookie doesn t exist.
Clear a cookie.
Perform a redirect to the OpenID authentication endpoint.
Get authenticated user by callback
Returns a dict of parameters to be used for OAuth requests.
Redirect to redirect the user to this endpoint using the callback_uri or callback_uri provided
Concatenate url and args.
Parse a header line into a dictionary.
Add a new header value.
Returns a list of values associated with the given name.
Parse a line of text.
Parses the HTTP response headers.
Normalizes a header name.
Encode a string as utf8.
Converts the given value to a unicode string.
Convert a value to a str.
Recursively convert all strings in an object to unicode.
Sets up the auth plugin for the given app.
Select a policy based on the specified request method and request method.
Calculate the occupancy of a grid of points.
Write a box of atoms to a gro file.
Write a PDB file with the given title and atoms.
Determine the molecules numbers based on the relative and absolute weights.
Resizepbc for a set oflipids.
Yield lines of text from a resource file.
Add a message to a user.
Message a list of users.
Returns a list of user messages that have been stored in the cache. Returns none if the
Adds a message to the response if the user is logged and the request is authenticated.
Checks that the config file is valid.
Verifies that the profile name is in the configuration. Raises unknownprofileerror if the
Given a message and a configuration object retrieve the data from the config object.
Retrieves the username and password from a configuration object.
Update config data.
Updates the value of the config with the given message.
Create a new config profile
Displays the required items for a given message type.
Get data from config from user.
Returns a list of the auth values for the specified message type from the config file.
Configures the profile with the given data and auth.
Write a message of the specified type to the configuration.
Write a message of the specified type to the configuration.
Sends the message to the server.
Factory function for message types.
Validate a string input for a message type.
Check if the value is a twilio number.
Check if the value is a Slack post.
Check if value is a validwhatsapp string.
Context manager for sending coroutines to poolexecutor.
Adds a message to the queue.
Read the body from a file.
Remove arguments that are not in the kwargs dictionary.
Send a message of the specified type.
Get a chat id by username
Sends the content of the response to the specified method.
Constructs and sends the message.
Tries to return a server with the specified domain and if it doesn t one returns an
Generates the email message.
Add the header to the message
Add the body of the message to the message
Attach the attachments to the message. Returns the number of attached attachments.
Returns a SSL or TLS session.
Returns an SSL connection to the server.
Creates a TLS session and returns the session object.
Generate the email and send it.
Save the metric to a file.
Unload the image.
Get the region of the image at x1 y1 and y2.
Return a boolean if the value is a string.
Clears the internal representation of the object.
Reads the contents of the file.
Delete this chunk from its parent chunk.
resize the file to the specified data size
Inserts a new chunk into the file.
Save ID3v2 data to filename.
Delete the file specified by filename or if filename is none delete the file specified by filename.
Parses a file and sets self. lines and self. lines.
Process a normal line in re_source_block_formats.
Add a block of code lines.
Draw a string to a glyph.
Parse ISO8601 time string.
Make html words from a list of words
Return html - quote of word.
\ Creates the html paragraph of the given words.
Adds html_quote and html_quote to each line.
Returns the html for a list of items.
Save a metadata to a file.
Update the parent of the atom in the file.
Run the game and return the callback function.
Register a mapping for a product.
Get a controller by product_id.
Returns the HMAC - SHA256 digest of the given string to sign.
Returns the request headers to send to AWS.
Send a GET request to the API endpoint and return the response text.
Sends a POST request to the API endpoint. Returns the response text.
Sends a HTTP DELETE request to the specified endpoint. Returns the response text.
Convert value to string if kind is text or external.
Send a change_set_request to update the hosted_zone.
Returns the total size of the packet.
Try to find the last page of a given serial in a file.
Sets the specified section. If section does not exist it is created.
Adds the markup to the end of the document if it s not already there.
Process the content of the text.
Returns the markup with the specified tag name or none if no markup with the specified tag name
Create a hosted zone writer.
Try to lock the given file.
Insert a number of bytes into a file - like object.
Delete a number of bytes from a file - like object.
Convert a string to a byte string or raise a typeerror.
Add a change to the change list.
Parses the change info element and returns it as a dict.
Measure the length of the given string.
Returns True if any of the properties of this object have been modified False otherwise.
Delete this resource and all its records associated with it.
Saves the current changeset to the given hosted zone.
Read up to size bytes and return it.
Delete all keys in this collection.
Add a tag to the list of loaded frames.
Updates the list of pics that are common to both v2. 7 and v
Unloads the object from memory.
Set the number of loop points in the Voicelooppoints sensor.
Returns a list of glyphs and a list of values.
Count glyph names in a given string that are not in the given string.
Dump a list of strings to a file.
Dump the array to a text file.
Returns the number of times a file with the specified pathname exists. If the file does not
Returns a list of all files in the current sys. argv or sys. argv.
Parses a hosted_zone element and returns a hostedzone object
Parse the content of a delimited zone set of nameservers into a zone object.
\ Writes the blocks of data into a string.
Add padding to each of the blocks.
Deletes the metadata blocks from the VCFlaC dictionary.
Save the metadata blocks to a file.
Parses an RRSet alias element and returns its id and DNS name.
Parserrset record values into a list of strings.
Parses an RRSet and returns a RRset subclass.
Add a record to this zone.
Create a mx record.
Create a new namespace record.
Create a newptr record.
Create a spf record.
Creates a record of the specified name with the specified values. Returns the newly created record.
Returns a dictionary of values for a given change.
Write a change document.
Write a change set of resource records.
Create a log file with the current version of nanoplot.
Return the item associated with the given alias.
Freeze a dictionary of string - valued key - value pairs.
Join HTML attributes into a template and a list of attributes.
Connects the initialize_bars signal to the app. add_template_global signal.
Calls each bar s initialize methods.
Bind a bar to the application.
Returns the function arguments as a dictionary.
Returns True if the current request has the same endpoint and args as this view.
Validate a metric class.
Returns a statistic model by its name
Calculate statistics for a list of frequencies.
Auto - discover installed apps. py modules and fail silently when not present.
Returns a csv dump of the metric and its cumulative count.
Handles the statistics.
Get array of values from request as string.
Returns the value of the request get variable var_name as a string if the value is
Gets the next colour to use.
Returns a dictionary with the parameters needed to pass to the statistic_frequency_daily chart function
widget for geckoboard number statistics
Returns a tuple of the most recent counts for the user in the geckoboard
Make a geckoboard line chart
Returns the latest count of the geckoboard with the given request.
Returns a list of geckoboard - frequency metrics for a given statistic frequency.
Returns a list of active stats.
Registers a gservice into the registry. Raises an exception if the gservice
Returns a dictionary with the current context data.
Print an error message and exit with the given code.
Prompt the user for a long input until maxlines is reached.
Prompt the user to input a list of strings.
Prompt the user to input a file with a given extension.
Return the schedule for a given year.
Returns either the home or the away team depending on their score.
Returns the season of the year.
Return the surface of the interface.
Returns the coin toss for the given string.
Returns a dictionary with the weather information
Returns the sports reference information table for this interface.
Compute the number ofreg games for each month of the year.
Returns a pandas dataframe of all of the standings in the str
Parses the main doc and sets the index of the team stats
Returns the Ryvoting table.
Returns a pandas dataframe with the main document and the number of links and the number of lines
Returns the season of the year.
Returns a pandas DataFrame with the player stats.
Returns a unique key for all instances of cls in args and kwargs.
Calculates the age of a year month day of the year month and day number.
Parse the main doc to get stats for a particular table.
Returns statistics for a single game.
Returns the stats table for the given string.
Returns the per - column statistics table associated with the given string.
Returns the per - 100 stats table associated with the given string.
Returns the statistics table associated with the given string.
Returns a string summary of the stats table.
Returns a protobuf for the stats table.
Gamelog table for a given year.
get the value from the session
expands a df with the given detail col in the df
Adds the team columns to the features dataframe
Adds team features to the main dataframe
Returns the initial winprob of a line.
Parse and return the pass table.
Return a list of simple year reward
Returns the name of the team.
Return a list of box scores for a year.
Return the value of a given keyword in the year document.
Return the list of coachids of year by game.
Compute the schedule for a given year
Return the attribute of the component of the year if it s off.
Returns the coorning information for the given year if it exists otherwise none.
Retrieve the URL of an anchor for a given year.
Return the off scheme for the given year.
Return the alignment of the year in the scheme text.
Returns a dataframe of the str_ values for each of the tables in the given year.
Gets the html from the given url and returns the html.
Return a guard for put_direct and put_idx.
Returns a guard for the write_queue and the arys of the given read_idx
Close the stream and put it in the queue.
Get a batch of given length from the file.
Gets a batch of strings from the file at the specified location.
Returns a generator for the given path.
Parse an input file into a pb_obj of the given pb_cls.
Writes the objects to a file or a file - like object.
Reads a varint from the underlying file and decodes it. Returns the varint
Yields all the objects in the file.
Flush the underlying file and close the underlying file.
Write the object to the output buffer.
Flush the write buffer. Returns the number of bytes written.
Returns the game directory.
Prompts the user to input text with keyboard emulation.
Evaluates thetraits of the object and returns a list of the trait description.
Return the result of the condition until the condition returns True.
Return until the element withtraits is present.
Adds the given ignored exceptions to this collection.
Get the value of an operator in the main volume
Returns the value of the specified operator in the specified value. If the operator does not exist
Send the message to the connected socket and wait for a reply.
Get the current status of the volume power and source.
Power off the power off command.
Power on command.
Set the volume of the server.
Set the status of the specified source.
Decrypts a URL and returns a HTTPresponsenotfound response.
Calculates the CRC32 of the provided plaintext.
Ensures that the value is serialized and returns it in the correct format. If ju
make sure that the song_name in the html document is not in the song_name
Returns a list of all the links in the page
Check if the song s name is in the html.
parse the response of a file_download link
Constructs a Google URL for the given song_name and website.
Parses a Google Download URL from the provided html string. Returns the Google Download URL.
Parses a Google song and returns its URL.
Get html response by url and print html content.
download a file using requests
download file from url using wget
Finds station codes by city name and token
Get a location observation by its latitude and longitude
Parse the JSON response of an observation response.
Returns the list of compiler extensions.
Returns the mimetype of the file.
Returns the mimetype of the specified compiler.
Returns the compiler format extension.
Register a new processor for a given mimetype.
Unregisters a previously registered processor for a given mimetype.
A list of all paths in this collection of finders.
Registers the default values of the environment variables preprocessors and postprocessors.
Imports the Qt core module from the idaapi package.
Get the meta netnode of the node.
Adds a networknode plugin name to the meta node of the specified node. Returns the
Deletes a network node plugin name
Import settings from config_path.
Export settings from config_path to config_path.
Returns the directory of the config file if it is loaded from the config directory or if the
Iterate over the keys in the environment.
simple error handler
Get a DynamoDB table.
Return a list of DynamoDB tables.
Fetch the items for a given category
Get the metadata id for a given item.
Returns the timestamp of the last updated metadata for the given item.
Fetch the owner team for a given crate.
Fetches the owner user for a given crate.
Fetches the version downloads for a given crate.
Fetches the version downloads for a given crate.
Fetch the crates for the current user.
Fetches a single crate by its id
Fetches data from the API.
Fetch the data for this category and return it as a dict.
Gets the list of questions in the kitsuneclient.
Fetch events for a specific category.
Return the timestamp of the updated metadata item.
Determine the category to use for metadata.
Get all the items in a specified category.
Get the current buffer list.
The priority of the iocb.
Close this context and remove it from the queue.
Submit a list of blocks to the iocb. Returns the number of submitted blocks.
Cancel the given block.
Cancel all pending jobs.
Fetch events for a specific category
Fetch and return the raw text of the cells.
Yields the number of cells in the feed
Export the available data formats for a given pid_type.
Returns the permission factory for the given string.
The default view method for a record view.
Export a record using the specified template.
Calculate the time since the given target is callable.
Close the socket.
Removes a client from the client list.
Increments a metric by name.
Send a timing metric if should_send_metric is set.
timing a name since start_time with the given rate. If start_time is a
Send a gauge metric.
Set the delta for the gauge metric.
Set a metric value for a given request.
Performs the request and writes the data to the file.
Configures and configure a batch client.
Return a unit client.
Send all pending messages to the remote socket.
Configures and configure a batch client.
Send all pending messages to the socket. Returns the message that was sent.
Configure a TCP client for the unit.
Returns the specified user with the specified set of permissions and groups.
Interpret an object as an Openmath object.
Converts a string term to an Openmath object.
Convert the given object to the appropriate class.
Converts the given object to openmath.
Initializes the application with self. app and sets self. app to app.
Yields the valid choices for a given list of choices.
Create a value from the registry.
Returns the default form data and form files for the given form_cls.
Returns a string representation of the data in a decimal field.
Returns the string representation of the data for the email field.
Returns a random date field data string
Returns a random datetime field data.
Returns a string representation of the field s float field data.
Returns a string representation of the data contained in field s validators.
Returns a random time value for a given field.
Returns a random choice of the field s choices.
Returns a random choice of the field s choices.
Returns a random choice of the field s queryset.
Encode a Python object as a byte string.
Publish the given message to the build if it s successful.
Tag the current build with the specified version.
Load a module and return its value.
Decode a string of bytes to a byte string.
Returns a fixed value with the given precision.
Format number using self. format.
Unpacks the given data into a numpy array.
Packs the given array as a string and returns it. Raises valueerror if the
Adds a new config entry to the config file.
Remove a config entry.
Returns a list of dictionaries with the values of the ws_list
Returns the value associated with name if it exists else none.
Check if a repository exists in the workspace.
Synchronize the configuration with the ws_name.
Clone a git or hg repository.
Checks if the current version of the server is the same as the one passed in.
Returns the list of voxels in the input array.
Create a numpy array from a list of voxels.
Print a workspace or all workspace depending on the specified arguments.
Print the update of a repository.
Set the console handler to use the specified format.
Executes the given command and returns the process object.
Load png file into numpy array.
Save a collection of numpy data to PNG files.
Prints the status of the workspace with the given name.
Print repo status
Get the block size for a given token
Performs a post cutout without chunking blosc.
Load image from tiff file and return as numpy array.
Save numpy data to png file.
Load the multipage data from the tiff file and return it as a numpy array.
Write configuration to file.
Clone this URL and return the new URL.
Returns the version number of the installed package.
mix and match a name
A function to add an option to the command line.
Reserve a specified number of messages from a channel.
Merge a list of ids into a channel.
Propagate the given token to the given channel.
Returns a list of the projects in the dataset with the given name.
Get a dataset by its name
Get a list of datasets.
Creates a subparser and adds it to the argument parser.
Show a workspace or all workspace.
Show a workspace with the given name
Shows all the workspace and prints it.
Returns the full URL to the specified endpoint.
Try to guess the format from a file extension.
Opens an image.
Convert a file to a different format.
Converts a list oframons to a dict of string representation.
Returns theramon representation of the given type.
Delete a channel from a project and dataset.
Returns a JSON string that can be used to serialize a dataset and project to a file.
Create a dictionary for the data set.
Get the channel dictionary for a given channel
project_dict is a dictionary that maps project name to project token name and public to project
Identify the dimensions of an image.
Calls requests. post with the provided data and prints the response. Raises oser
Find the path of the given name in the workspace.
Returns public tokens for this token.
Get information about this project
Set the metadata for a given remotedata token
Perform a GET request to the given URL and return the response.
A wrapper for requests. post
Sends a HTTP DELETE request to the specified URL with the specified token. Returns the response
Loads and returns a numpy array of the layer names in the given hdf5 file.
Saves the array to an hdf5 file.
Infer gaps in a phylo tree given a dataframe.
Returns the value of the term in the term of the given io.
Installs the translations for the jinja2 translation system.
Execute the given thunk in the given guard and return the result of the thunk in
Calculates the percent of the total.
Get the cached statistics for a given server.
Get the cache slabs for a given server.
Takes a dictionary of context data and returns a dictionary of context data.
Renders the server status response.
Returns a dashboard response.
Returns the server statistics.
Returns a list of slabs for the given server_name.
Returns human - readable bytes representation of a number.
Recursively find the config of the given children.
Add one or more configuration parameters to the configuration.
Applies the given applicator to this configuration.
Returns the absolute path to the file.
Reads the file and returns the contents of it as a string.
Writes the given data to the file in the given mode.
Adds a file handler to the root logger.
Creates a new file in the directory specified by self. path. If the path already exists
Applies the given applicator to this configuration.
Returns the full path to this file.
Removes the directory from the filesystem.
Prepare the environment for execution.
Cleans up references to the children of this node.
Joins self and path with path.
Returns a list of files in the directory.
Writes the given data to the specified file.
Read the contents of the specified file.
Add one or more files.
Save the configuration to a file.
Loads the configuration from the given file if it exists.
Remove the file from disk if exists.
Loads all plugins in the specified directory
Returns a confignode at the specified path.
Get the value of the field.
Applies the config to a string.
Build the callback URL.
Read the socket and process the input.
Send socket output to Nygus and process the output.
Send a message to the sender.
Reads a number of bytes from the socket_obj. Returns the number of bytes read
Write data to a socket and return the number of data written.
Get the settle modes of a proton link
Configures the PN link with the given properties.
The address of the source of the client.
Returns the target address of the PN link.
Process the session closed by proton.
Create a new sender with the given name.
Request a sender link.
Create a new receiver with the given name.
Request a receiver link.
free the connection to the link
If any of the links in the session need to be closed we need to create a new
process the endpoint event and update the internal state
Add the Markdown inline pattern to the md. inlinepatterns.
Check if the receiver is closed.
Called when receiver failed.
Returns the host and port of a server address.
Connects a socket to a host and port.
Create a socket and bind it to the given host and port.
Check if there is enough data to process.
Returns the data that has been written to the transport. Returns none if the transport has not
Create a new sender and configure it with the specified properties.
reject the sender of the link with pn_condition
Create a receiver
Called when the connection has failed to be established.
active connection
Check if the connection need to be closed.
Adds an error message to the error log.
Returns a string representation of the color.
Returns a dictionary of font names found in the directory search_path
Set the compression value.
Add an object to the PDF.
Appends the string to the output stream. If page is not specified the current page is
Adds the given stream to the output file.
Add a new page to the document.
Set the color scheme.
Set the default font.
Adds a page to the PDF.
Set the font size.
Add text to PDF.
Add a newline.
Adds a chart to the PDF.
Output pages to the output stream.
Gets the list of pages that have been orientation changes
Output all the fonts in the session.
Output all the images to the session.
Output the image data to the GDSII session.
Transform a point on the current page to a new point on the screen.
Return the absolute position of the cursor.
Sets the style to the specified string.
Rotate the given point to the unit of the unit of the unit of the unit of
Set information about the object.
Set display mode for zoom and layout options.
Prepares the output to be written to the output file.
Adds the pdf header to the session.
Adds new pages to the document.
Add resource dict to the document.
Adds information to the database.
Create a cross reference to the object that has the same attributes as self. session. buffer
Applies a function f to each element of a sequence.
Convert a sequence of sequences into a sequence of strings.
Perform a Gosper operation on a sequence of strings.
Return a bconted version of seqs.
Determine if x is within test_length of self. xmax or if self. x
Determine if y is within test_length
Returns True if x is greater than the test. x.
Returns True if the y is greater than the test y.
Make a copy of the current cursor.
Adds x + dx to self. x if dx is none then self. x +=
y = self. y + dy
Draw the text.
Returns a list of tags associated with the resource.
Returns a list of labels with the given name.
Delete a specific object.
Create a new label for a given label.
Returns a list of actions associated with this action.
Returns a list of label tags associated with label_sn.
Get list of hooks
Sets up the extension for the given application.
Returns the absolute path to the themes file.
Makes a POST request to the API endpoint. Returns the JSON response.
Returns a list of the log entries.
Send a GET request to the server and return the JSON response.
Computes the duration in seconds.
Updates the internal settings with the given parameters.
Computes the error.
bin the data into a string and raise an error if the data is invalid.
Frees all of the data arrays.
Receive up to size bytes from the socket.
Yields a single line from the stream.
Return the status and message of the error.
Generate info message.
Return info string.
Return a list of capabilities.
Returns True if code == num_.
Runs the command and closes the socket.
Returns a datetime object with the specified error code and message.
Handle a help message.
Yields newsgroups for the given timestamp.
Generate a list of all new snapshots of the given pattern at the given timestamp.
List active groups.
Yields a list of the names of the active nntpdata instances.
Yields the name and description of the newsgroups.
Yields a list of error messages for each of the messages in the message.
A generator that yields the command and message of the installed extensions.
Return a list of names associated with the given keyword.
Generate a list of elements.
Show information about a given XZ header.
Generate info lines.
Compress with gzip - compressed Xfeature.
Convert a string representation of a number to an offset.
Makes a POST request to the given URL and returns the JSON response.
Wrapper around requests. delete which raises an exception if the request was not ok.
Wrapper around requests. get which raises an exception if the request was not ok.
Returns a list of all scheduled queries.
Returns a list of all tags in the account.
Returns a list of tags with the given name or id.
Delete a tag
Creates a scheduled query for the given scope unit and scope count.
Delete an alert tag by tag_id
Parse the newsgroup line.
Parse a header line into name and value.
Removes all non - parseable headers from the request headers.
\ x1b [ 1mNAME \ x1b [ 0m do_post
Runs the passed list of tests.
Returns the defaults docstring for this class.
Set the value of the field.
Check if the value is a valid type.
Return the value of the field as a string.
Check if the value is a scalar.
The number of non - scalar errors that occur in the symmetric of the errors.
Set the errors.
set a value for a given string
Update or create the metric definition based on the current values of the fields in self. metrics
Extract a dictionary of metrics from the input string
Filter the metrics according to the filter_expression
Calls the RPC API.
Return the expression terminal.
Return the operator used in the input text
Adds text to the current terminal. Returns a new terminal object of type op_add
Init properties that need to be passed to the constructor.
Returns a list of parameter names
Returns a list of the parameter values in the parameter space.
Returns the parameter errors.
Clear all parameters that are derived from this instance.
Set the method to use.
Gets the environment variables
Calls the API method and sets self. _api_result and self. _data
Check if the scene info is in the satellites map. Raise an error if
Verify the type of product in valider.
Get the size of a remote file
Validates a list of bands and raises an error if they are not in the list.
Connects toearthexbases and checks if the username and password are valid.
Return a string version of the given datetime.
Join each element of an iterable with the given delimiter using the given delimiter.
Get the newline positions in a string.
Converts a point to a source string.
Dump the results in text format.
Remove metrics and plugins from relays
Load from a list of files
Calculate the chance of a given list of files.
main entry point.
Return the rule of the expression.
Return the special handling of the text.
Returns the grammar of the input source.
Returns the list of rules in the grammar.
The list of comments of the token type.
Returns all directives in the configuration as a list of strings.
Returns the source code for the output of the function.
Returns the formatted representation of the class.
Returns a string with all the directives that have the name equal to str_.
Returns a string representation of the token type enum.
Returns the class definition string.
Returns the name of the entry point of the rule.
Returns the source code for the given rule.
Returns the transform string for the given rule.
Convert an expression to an ASN.
Convert a node into an ASN object.
Helper function to handle the left hand side of the expression pred. Returns a list of the
Remove grouping groups from the optree.
Convert an AST node to code.
Convert an AST node to code.
Converts an AST terminal to code.
Convert an option group into code.
Converts an AST repetition group to code.
Convert the special handling of an AST node to a code string.
Return an AST code for an operator alternative.
Convert an AST operation to code.
Return the source code of an opr including its operands.
Convert an AST operator to code.
Return the code for the repeat_op operation.
Find all directives that have a name equal to pred.
Return true if child is a type node and parent is a type node.
Handle the results of the API call.
Gets the given id or creates a new one if it doesn t exist
remove a key from a wx. evt_hotkey
Adds the command line arguments to the parser.
Configures the logging module based on the args. loglevel.
Returns a boolean of whether the arguments passed to the constructor are valid.
Infix nodes to postfix operator.
Returns an optree from the given list of nodes.
Reduces the left and right nodes of a binary operator.
Loads the manifest from the specified file.
Get the number of components of each column in the table.
Get the display length and desclen of the metrics
Escape all underscores in the metrics
Returns a string with the maximum length of f and the maximum value of d.
Prints out the metrics in the format that is passed to the metricmarkdown command.
Generate markdown for the current object.
Parse the given string and return the root node of the tree.
Determine the amount of time that the original string was consumed.
Adds the arguments to the command line parser.
Parse time and date from string
Prints the text to the console in CSV format.
Output a text representation of the metric to a JSON string.
Output the raw data as a JSON string.
Output the metrics in XML format.
Returns True if the node is not empty or if it is a terminal type.
Pretty - print the root.
partial of _get_repetition and _get_repetition.
Helper function to get the terminal of a parameter.
Gets the exclusion from the text.
Count leading whitespace.
Calls the appropriate extractor function for the given text.
Return the current position of this parameter if any and its children.
Return True if all of the children are empty.
Adds the specified ignored string to the current ignored string
Returns True if node_type == value else False.
Returns the flattened representation of this node.
Returns a new pars node with the given pred.
Return a new pars node with the children of another pars node merged.
Return a new chunk of type new_type.
Return a new pars node with the compressed value of this node.
Return the current position of the line and column.
Return the position of the maximum number of lines and columns that are currently being read.
Move to the next character after the current one.
Move to the next line.
Move to the previous line.
Returns the last line in the document that is at the end of the document.
Increments the cursor position by length characters.
Save the current context.
Restore the current context to its previous state.
Returns a formatted string representation of the type.
Set the name of this Hig
Counts the number of variables in the Hig
Count the number of functions in the Higgs.
Update a scope.
Return a scope corresponding to the union of the current scope.
Update the Hilbert space with the intersection of another scope.
Return a new scope where the new scope is the intersection of the existing scope with the new
Update the current scope with the values in oset that are not in oset.
Return a scope corresponding to the difference between the current scope and the given scope.
Update the dictionary oset with the symmetric difference of the two sets.
Return a new scope with the symmetric difference of the current signature.
Adds the given statescope to this statescope.
Remove a signature.
Remove the signature from it.
Returns the first signature in the Hig
Return the last signature in the list.
Gets a scope by its name.
Get a subscope s signature by its symbol name.
Return a scope containing all the return values of this statescope.
Calls the given translator function from this node.
Normalizes a node in an AST.
Set this node s attributes from another node.
Returns True if the HIT is OK False otherwise.
Computes the signature of the function
Resolve the signature to its target
Returns a list of resolved names for the given type.
Set the resolved name of a solve.
Delete a file from the local filesystem.
Delete a file from S3
Delete a file from S3.
Saves the object to the local temp file and returns the filename.
Save a temp file to S3.
S3 save the object to the temp file
Finds a list of files in the given path in the s3 bucket.
Create a new enum for the given type.
Adds one callobject to the chainmap.
Reads the end of the stream.
Push self. rule_nodes into self. rule_nodes.
Populates the list of rule nodes.
Return the value associated with the node n.
Parse given content as a stream.
Create a new tag for the node with the given name.
Mark the end of a tag.
Set the rules for this model.
Set the hooks for this object.
Set all the directives in the meta file.
Evaluate a named rule and return the corresponding node.
Evaluates the hook with the given name. Raises a typeerror if the hook
Return True if the next character is the given text.
Return True if the stream has at least one character.
Read a character and validate it.
Read until the stream is closed.
Checks the stream to see if there are any blanks in the input.
Check if the hits data structure is correct and raise an error if not.
Add a rule clause name.
Add rules r to the parser tree.
Add a new rule to the parser.
Adds sequences to the parser tree.
Add a alt node to the parser_tree.
Add a range to the parser_tree.
Add a new Rpt node to the parser tree.
Adds a capture value to the sequence.
Add a bind value to the parser_tree.
Adds a new hook to the parser tree of this object.
Set the value of a parameter to an int.
Convert a string parameter into a string parameter.
Converts a parameter character to a string and adds it to the param. pair attribute.
Returns a string that represents the parameter value at index i.
Set the name of a hook.
Appends a parameter to the list of parameters to be passed to the hook.
Evaluate the rule and return the result.
Return a boolean value indicating whether the stream should ignore the C ++ character.
Adds the specified state to the container.
Returns a string in dot language.
Writes the graph to a dot file.
Writes the graph to a PNG file.
Return a formatted string representation of the | infos| object.
Return the next state of the given state.
Reset thelivingstate of the node.
Infer a block of code.
Infer a Subexpr node.
Infer the value of a literal.
Print the set of nodes to stdout.
Return an AST. stmt corresponding to the end of the function body.
Return the clause of the parsing tree.
Return an ast. Call node as string.
Create function for Calltrue AST node.
Return the expression of the given parsing. hook node.
Return node s name as string.
visit the capture nodes by returning a list of nodes.
Return the name of the scope of the current function.
Return node s representation as alt operation.
Return node s state as sequence expression.
Return an optional node corresponding to the representation of the expression in node. pt.
Return node s representation as rep0n.
Return node s representation as representation of rep1n statement.
Concatenate strings that are at the end of the source string.
Make indentable and non - indentable list items.
Convert a list to a string.
Returns a string with the text of the nodes in rest
Populates values from a sequence.
Populates a state register from a list of sequences.
Build the state tree.
pred_eq - Returns True if the value of val is equal to the value of val
Builds a grammar from a tuple of strings.
Build a grammar from a file.
Parse this node from the given source.
Parse a file and return a parse node.
Sets the value of a node from one node to another. Returns True if the node was
Set the value of a node as an int. Returns a boolean indicating whether the node was
Get the subnode of the node that is a boolean.
Dump a deposition to a dictionary.
Return a generator of the recids invenio12.
Returns a generator of the IDs of the records in the database invenio2 format.
get the check from the dbquery module
Dump a Token object as a JSON - formatted string.
Return the number of records that have been added to the database.
Dump a User to a JSON - formatted string.
Retrieve the modified recids invenio12.
Return the list of modified records invenio2.
Get collectionrestrictions
Get the list of revision information for a given record.
Get the collection of a record.
Return a JSON representation of the record.
Get the full record ids for a given query.
Dump a record to a given record.
Dump a client to a JSON - formatted string.
Loads a single common model from the given data.
Collect things from entry points in a group.
Initializes the app with the current test request context.
Gets the run_sql module from the import invenio. dbquery. If
Returns a list of actions with the given query.
Dump the token to a JSON - formatted string.
Load token by ISO2dt or none.
Import a record into the database.
Get config imp from app. config or return default.
Returns a JSON string representation of the object.
Retrieve users from Invenio12.
Invenio2 implementation of get_users_invenio2.
Dumps a user into a string.
Create a deposit record and save it to the db.
Create a record and a PID.
Load a record from the record dump.
Load a set of records from a JSON file.
Returns a list of the statistics of the profiling.
Start the server.
Dump the profile to a file.
Delete the profiling statistics.
Delete the profiling state.
Writes the current status to the output file.
Calculate the translations for a list of images.
Stitch images into one - dimensional array.
Helper function to add a 1D array to the end of an array.
Creates a new record for the given dump.
Create a record for the given dump.
Update a record in the database.
Create one or more PIDs.
Delete a persistent identifier record.
Create a new file instance.
Delete the buckets associated with a record.
Return a list of persistent identifiers that are missing from the persistent identifier.
Prepares the list of files for processing.
Prepares the list of PIDs for parsing.
Returns True if the revision is deleted.
Load a community from the database.
Loads a featured community.
Dump a thing to a file.
Check a thing in the app context.
Deletes the widget and actions
Computes the magnitude of a vector.
Normalize a vector.
Transform the coordinates of the input image to the new coordinates of the output image.
If self. name is not in data ensure that self. name is not in data.
Set the bones and length of the string.
Set the parent of the node.
Get the pivotpoint
Calculate the start time of the task.
Translate the object to the new state of the scene.
Removes the state at the specified x y and z position.
Set the state of the region to glenable.
Unset the state of this gldisable.
Create a new object if it doesn t already exist.
Redraw the region of the object.
Renders the batch of 3D data.
Set the model to use.
Writes the report in XML format to the specified path.
Adds a menu to this str
Redraw the label.
Redraw the label.
Draws the widget to the window.
Delete a widget from this widget list.
Redraw the label.
Calls the world s registerevent handlers.
Registers the actor s configuration and event handlers.
Adds the label main to the widget.
Exits the main changesub menu.
Updates the progressbar to reflect the new value of the progress bar.
Render all the actor render to a view in 3d.
Render the world in 3d.
Checks if a resource exists in the resourcenametopath
Add a category to the texture
Returns the missing texture if it exists otherwise self. missing texture
Returns the model object with the specified name if it exists otherwise loads it from the cache.
load a model by name
Returns the model data for a given model name if it exists in the model cache else loads
Add a widget to the container if it doesn t already exist.
Draw this scissor to container if visible.
Redraw the selected vertices
Redraw the content.
return true if the mouse is over the part of the part of the mpos of the
Return the P - value of the parameter.
Add a layer to the end of the list.
Add an action to the actions list.
Call the function with the given action.
Registers a new name in the registry.
Add a layer to the layer list. If z_index is none then z_index
Draw the layers.
Delete the layeredwidget widget and all its layers.
The border of the widget.
The offset of the widget.
Returns the size of the widget.
Read a mesh from hdf5 file
Make the pattern connection matrix.
Set the fields of this object.
Add one or more fields to the query.
Checks the types of the elements of this type and raises a valueerror if there are
The space of the elements of the type.
Returns a new index of the edges along str_ where each value is a column of the
Returns the centroids and volumes of each str as a pandas. DataFrame.
Convert an element set to a node set.
Convert a node set to a surface dataframe.
Converts a surface tag to a list of element sets that have the sum of all elements
Returns the metadata of the fields as a list of strings.
Returns the metadata as a pandas series.
Make all the directories in the configuration if they don t already exist.
Runs GMsh and reads mesh from file.
Reads the history report from a text file.
Reads field report from text file
Convert a list of strings to a string.
Create a string representation of the equation
Convert a list of labels to a string with the index values.
Parses the response and returns the payload.
Make a GET request to the API and return the response.
Write the xy data from the history to a file.
Returns a string representation of the error message.
Returns True if traceback. traceback. traceback. exc_info matches the descriptor of the traceback
Convenience method to set the data.
Return the string representation of the axis mode.
Updates self. _options dict with the options of the plot.
Make a class with the name of the function and the attributes of the class.
Process the data feed and draw the notifications.
Try to convert the value to a float if it s not already convertible.
Convert str to int float or int.
Plot a graph.
Force the raw string to be unicode.
Returns True if the mime type is a matching of the list of include_mime_types
Clean domain name.
Returns the left cuts of a domain.
Return a hash code for the given token.
Counts the words in the si s body sentences.
Return hash counts for the given stream.
Invert a string based on its hash.
Get document frequencies by a list of hashes.
lookup_tf - > lookup_tf - > lookup_tf - > lookup_tf
Return an iterator of items from a file - like object.
Read variable - length integer
Read the next block and return the object.
Serializes the given key into a string. Raises valueerror if the key is invalid
Return the key and data for a streamitem.
Change to the current working directory.
Strip a prefix from a string.
Strip the suffix from a string.
Determine if a string is a subsequence of another string.
Start a simple HTTP server and serve requests forever.
Shuts down and closes the server.
Returns the error page callback function to handle the response.
Add a wildcard or regex route.
Resolve a route to a non - literal route.
Resolve a non - literal route.
Normalize a pattern to match a regular expression or wildcard pattern.
Return the response body as a string.
Add a response header.
Set a cookie value.
Return the status line of the response.
The content type of the response.
Remove a file or directory.
Returns a list of open files in the current process.
Attempts to fetch a file from the given work unit.
Returns a list of lines from a file.
Generate a random adjspecies pair.
Generate a randomadjspecies pair.
Morph a sentence to a specific app.
Get the similarity of an app.
Show the hiragana output for the given app and sentence.
Displays a list of entities associated with a given app and sentence.
Show the shortsum of an app and review list.
Show the score of a keyword for an app.
Change a sentence from one sentence file to another.
Returns a tuple of init_stages for all components.
Runs the writers and returns a list of paths to log.
Runs the given transforms in the given stream.
Replace a config with a new one.
Returns the list of allmentions in target_mentions and chain_mentions.
Determine if at least one of target_mentions is in chain_mentions.
Match a stream item with a list of tokens.
Make a file from the tagger XML file.
Terminate the child process.
multimodal function.
Return a generator of start end and the string of sentences that are part of the label.
Create the label index for the given stream item.
Create a list of sentences for the given stream item.
Make a file with the cleansed content of the i_chunk.
Make thener file for a given tagger ID and output it.
Convert a string to lower case strip punctuation and convert to lowercase.
Instantiate a pipeline config.
Generate asmith chunk of text.
Make a clean visible file from the i_chunk and the clean_visible_path.
Clean up a span by removing punctuation and whitespace.
Reads html and writes it to stdout.
Attempt to load a stage function from the given module.
Loads the external stage files for this module from the given path.
Init a stage by name and config.
Read the next bytes to read and return the index and the next bytes to read.
Returns a boolean if href is in the config else returns a boolean if href is not in
Return a list of str offset objects corresponding to the href and value of the label.
Yields the absolute path of all the files in the input_dir.
Yields all the tasks in the database.
Get random available available data.
Gets a list of sentences from the ner_dom
Verify the md5 hash of the data.
Get a bucket from an s3 configuration.
Decode a streamcorpus chunk.
Get a single chunk of data from a bucket.
Convert a stream_id to a key for akvlayer.
Converts a key to a stream identifier.
Compute the md5 hash of a stream item.
Entry point for iotile - cli.
Build an argument parser.
Convert sentences to character tokens.
Convert a list of tokens to a list of character offsets.
Add an element with the specified tag. If tag is textelement and self. last_
XPath - return last piece of text element.
Return the index of the current text element.
Yields all descendants of element.
Selects elements from source if source is an element.
Select only the elements with the given name in the source.
Select elements that match the regular expression pat.
return the following siblings of elem
Calls a command in theinkpkpkpkpkpkpkpkpkpkpkpk
Exports a given input file to an output file.
Export an svg file to a PDF.
Export an svg file to png.
Returns the jinja environment for the given file path.
Sets up the template file and environment based on the path of the template file.
Renders the template and returns the filled document.
Saves the content of the field to the file specified by file_path.
Create a Document from a template file.
Replace characters in svg code.
Render the svg to a file.
Render the template to a file.
Parse the given XML source using the specified handler.
markup the fragment of an HTML document. Returns the fragment of the HTML document.
Insert text data before or after node.
Insert a reference node before the given node.
Return a new element with the same name and attributes as this element.
Return the string value of the given node.
Insert a new child at the specified index.
Parses the config and returns the config data.
Gets credentials from Google. If options. get_google_credentials is set it will
Create event datetimes.
Create an event.
Parse command line options and create event.
Get the extension of a file
Add a new file extension if needed.
get_temp_dir will return a tempfile. namedtemporaryfile with the given suffix
Remove files with the given extension from the working directory.
Exports a CSV file to a JSON file.
Replace the content of a file with a new string.
Parses the HTML document.
Check the next sibling of a tag to see if it has the same name as the next
Create aitalic tag.
Creates a plain tag with the given string in the given tag if it doesn t already exist
Create an underline for the given tag.
Recursively parse the attributes of a tag.
Cleans the line breaks from a tag.
Parse HREF from the query string.
Parses the value of an attribute. Returns the value if the value is a string and
Translate a dictionary of keys to their values.
Returns a JSON string representation of the object.
Find files that match the regex in folder_path
Concatenate a list of strings.
Yields strings starting with part.
Yields all strings that contain part in full.
if obj is a string in ctx then it will be converted into a boolean
Yields each element of seq as a sequence of unicode strings.
Looks up the values associated with a given key in a sequence of strings.
Replace characters in svg_content with their character references.
Checks if svg_file is a valid svg file or raises exception if svg_file
Merges a list of PDFs into a single PDF file.
embeds font to svg
embed a set of font files into an svg file.
Check if all the input elements are of the same type. Raises a runtimeerror if
Checks the function to see if it s a function and if not raises a runtimeerror
Recurse through the input list and output the result of the function.
Create a template from an option list and render the template with the content of the option.
Recurses through the list of options and outputs.
Convert an object to a string.
Convert an object to a float or list of strings.
Convert an object to a boolean.
Yields token strings in the input token token stream.
Change the encoding of an XML file.
Save text to a file with the given color.
Launch an option and return the result.
Calls the given command with the given arguments. If cmd_name is an absolute path
Moves a. tex file to a PDF file.
Returns a list of options for the current object.
Transform a geometry to another reference.
Create a geometry object from a JSON string or a string.
Expand the given string to the range of its components.
Intersect two strings.
Returns True if this rectangle intersect with other.
return a polygon
Construct a Series from a zn m z string.
Writes the main dataframe to a file.
Return a table containing only rows that match the given condition.
Returns a table containing information about a given nuclei.
Return the intersection of two tables.
Return a table where rows are not in self. df.
Select elements where the number is greater than or equal to num_.
Select elements even lower than num_.
Select even even evenly evenly evenly evenly evenly evenly evenly even
Calculate the error of the time series relative to a given relative to the current time series.
Calculates the binding energy of the table.
Computes the second child number of the str.
Computes the first child s1n - child s1n - child s1
s2p - > m_p - > m_p - > m_p
Computes the first child s1p - child s1p - child s1
Returns a table of values derived from self. df relative_coords relative_coords and formula
Calls the function and commit the transaction and then closes the session.
Derive a master password and a master password from this key.
Initialize the database.
Search the domain with a given query.
Modify a domain.
Creates a new domain.
Extract HBs from a file - like object.
Returns a VSI file name for the given path.
Returns the epsg_id if the epsg_id is valid or if the ep
Entry point for iotile - build.
Update a file from a URL.
Get a dictionary of the driver names and metadata for each driver
Determine the imagemagnet driver for a given path.
Convert a GeoJSON object to a numpy array.
rasterize a layer using a rasterizelayer
Open a raster from a file.
Create a raster from a byte array.
Copies the raster from one raster to another.
Get the option options in the info. xml file.
Create a raster of the specified size and bandtype
Set the geotransform of the Dataset
Return the contents of the array as a string.
Computes the envelope of the region.
Returns the driver string of the dataset
Creates a new raster of the specified size.
masked array by the given geometry
Returns the value of the nodata attribute of the node.
Read a single raster from the dataset
Resample the raster to a new raster.
Save the object to the specified path using the specified driver.
Set the projection of this dataset
warps a raster to a specific location
Calculates the chunk length for a given alph and enclen.
Returns the character set associated with the given character set.
Encode a single chunk of data at the specified index.
Convert a single chunk to a long string.
Returns the chunk at the given index.
Returns a compiled regular expression for the given file.
Normalizes the string representation of a date.
Determine the timezone from the current locale.
Returns a dictionary representation of the resource.
Handles jobs by calling the job_handler and writing the response to the writer.
The worker main function that handles the jobs.
Runs a job in a worker pool.
Set the classification of the Dataset.
Sends a message to the message queue in a new thread.
Turn on light.
Turn on a switch.
Turn on with brightness.
Turn off a device with a given name.
Send the next message in the queue.
Send a message to the service and wait for a response.
Raise a valueerror if the value is not one of the allowed values.
Sets the list of configuration files to be read.
Yields the options and values for each option in the configuration.
Create the configuration file at the specified index.
Update the configuration with the values in conf_dict.
Reads the config file and returns the configuration as a dictionary.
Read the configuration files.
Returns the names of the option in the specified section.
Returns a list of sections for the specified command.
Build the argument parser for the bare command.
Parse the command line arguments.
self. _ bash_comp_command. _ bash_comp_command_parser.
Prints the completion of bash commands in a bcf file.
Start the master.
Create a worker when the connection is made.
Receive a response from the client.
Called when the connection to the worker is lost.
When the job has been loaded return the job object.
Handle the response received by the client.
Close the job if it has been created.
Adds the given list of jobs to the job set.
Close the server and all the workers.
Change in the list of waiters and set the result to none.
Add a result to the list of results.
Block until all waiters have changed.
Loads the next job from self. _jobs.
Mark the job as done.
Adds a result to the list of results.
Cancels the current job.
Block until all active jobs are done.
Distribute a set of jobs that are ready to be run.
Add a list of jobs to the queue.
Gets the job that is currently running. If the job is currently running the callback will
Returns a job from the ready callback list.
Add a result to a job.
This function is called when the job set is done.
Close this window.
Remove duplicate elements from a list while preserving the order.
Returns True if the object is a list of strings that match the regex. Otherwise returns False
Returns the region name from the environment variable or raises a valueerror if the region is not
Filter a list of entries based on a set of filters and an exclude list.
Get a host s public_dns_name
Constructs an entry from a dictionary.
Get an attribute of this object.
Creates a CloudFormation instance from a boto instance object.
Returns True if the value matches the filter
Returns the public IP address of the node.
Adds the timestamp to the event dictionary for a specific log method.
A wrapper for structlog s logger.
Sets up a celery task configuration.
Delete a job.
Return the configuration section of the configuration file as a dict.
Handler for config command.
Prepares a list of rows to be used as a table.
Get a color based on the hash of the string.
Return a random color between _min and _max.
Checks a username and password against the database and returns the user if it exists or None
Checks if the user associated with the given API key exists and if so returns the user
Determine if a process is running.
Imports a module and returns the module object or None if the module can t be imported
Returns the current IP address of the remote host.
Make a request to the API.
Prepare the post parameters.
Serve the application.
Render the template with the given name and value.
Stream a list of dicts of commands in a thread.
Yields a list of workdays between two dates in the given locale.
Get the full path of the given command.
Builds the SSH command string.
Create a lsiprofile instance from command arguments.
Creates a relationship between this part and another part.
Get the related parts of a certain type.
Load relationships for this object from the given source file.
Adds a part to this content type.
Load part by content type name and data.
Find a value for the given name.
Create a content type instance from an element.
Parses input_string and returns a chatl.
Builds the request payload.
Assign force field to an AMPAL object.
Find the maximum rad and npnpnpnpnpnp in the force field.
Makes a dict of force field parameters
Return a stream containing the contents of this object.
Yields the segments that match the given name in the archive.
Returns a list of all filenames in a given directory.
Returns a list of the names of all subdirectories in a given directory.
Create a new prefix for the given path.
Delete a file from the bucket.
Ensures that the login is successful.
Returns the loud of a lang
Returns the URL of the home namespace.
Return the hotspots of the data.
Get a keeper token for a given host username and password. Returns the keeper token
Uploads a build to a Travis - CI environment.
Determine if we should skip a travis event.
confirm the build is up - to - date.
Recursively update a dictionary with new values.
main command line interface for iotile.
Edit a part.
Packs the contents of a directory.
Splits a path into a list of all the paths in the head and tail of the
Returns the default editor for the specified file.
Process a module node.
Generate html for a chart.
Returns the html for a chart.
Serializes the given dataobj to the given xfield and yfield.
self. json_data = self. json_data
Converts a JSON object to a html string.
Convert a dictionary to a pandas dataframe.
Writes the given html to the folderpath if it doesn t exist.
str - > chart class
Encode one or more fields
Infer the tarball URL from a given configuration file.
Create or update an app in the tarball.
Delete an application.
Generate random binary string of specified length.
Return a string representation of the ipaddress.
Generate a random date between start and end
Creates a session object with the str_ as the key and the str_ as the value
Make a request to the API endpoint using the provided data.
Create a new build.
Check the status of a build.
Yields a sequence of strings starting from prefix.
Registers the sub - commands of the given parser.
Returns an instance of arg_parse_class with description and formatter_class set to the
Returns the description of this object as a string.
Returns the help string of this command.
Run the sub - command.
Encodes the data into a series and returns it as a string.
Get a list of theathletes for the given host.
Returns the last n most recent activities
Request activity list for athlete and parse it into a dataframe.
Retrieve activity data from the activity endpoint.
Generate theathlete endpoint.
Generate the activity endpoint.
Get a request from the endpoint and raise an exception if it doesn t exist.
Creates a new tarball and returns its data.
Creates a url using API auth for the given view and kwargs.
Returns a random title for the given languages.
Return a random name for the person.
Return a random name for the given list of languages.
Renders the data into a string based on the specified option and the number of values.
Set the dataset and series for this object
Render the dataset.
Returns the string representation of type if type is in types and if type is not in types
Returns the full url of the resource.
Show the contents of this element in a web browser.
Saves the object to the specified file. If fname is specified the name of the file
Perform an HTTP request and print the response.
return an image of the string
Write a URL to a file - like object.
Return the checksum of the current state s state.
Converts a number between min and max into a decimal. decimal. decimal. decimal.
Returns the unprotected and protectedclaims of the le.
Returns the list of signing keys as JWks
Unpacks a client metadata statement.
Packs a metadata statement into a signed metadata string.
Evaluate the given metadata statement.
Calculates the correct usage for a given federation usage string
Extends a request with a SMS message with another SMS message.
Parses the command line arguments.
Add command - line arguments to arg_parser.
Applies the logging levels and handlers to the given log_levels and log_files.
Logs msg % args with severity verbose.
A helper function to create a map of letter to the number of times a letter occurs in
Yields the anagrams in a word.
Turn the class name into an uppercased string.
Transform timeseries data from start to end
Returns the last value in a timeseries
Ensure that the number is a valid pagenotan integer.
Get page of iterator.
Create a file or directory with the specified mode and optionally recursive mode.
Create an internal signing service for an entity.
Create a websigning service.
Sign a request.
Creates a new object based on the specified request and returns the response.
Updates the metadata statement for the specified location using the specified request.
Update the signature for a given location.
Yields the contents of the bundle.
Create a bundle for the given data.
Returns the urls for the given asset type
Render HTML tags for the given asset type.
Returns the HTML tags for the asset type.
Tries to protocolise the given URL.
Finds the links in a given URL. Returns a list of hrefs.
Create a listening endpoint to listen on the given client.
Returns a list of module names for all the modules in the project.
Imports all the modules in the configuration
Select one or more fields from a document.
Formats a document according to a list of datemap_list.
Return the number of rows returned by the cursor.
Prints the cursor to the screen.
Given a list of do_tasks and a dep_graph return a list of nodes in
Add default dependencies
Adds the default values when the project is saved.
seq_post_save signal handler creates shot object when seq is saved
Create and save all tasks associated with an element
Get a config value by its name.
Add a new factory for the given identifier.
Removes the specified factory from the list offactories and returns it.
Connect to the given factory.
Called by the underlying protocol when data is received.
Disconnects a connection from this protocol.
Wrapper for the factory. remote. callremote method.
Calls the remote connection callback and adds the callback to the multiplexed connection made.
Handle the new connection made by the multiplexed protocol.
Log the received data.
Send data to the remote end of the connection.
Remove the connection from the protocol.
Returns the protocol for the given connectionidentifier.
Handle a remotedatareceived message.
Disconnect a connection
Returns a new string that is centered on the current line.
Prints the string to the terminal on the right.
Returns a string representation of the version number.
Identify a unit framework
Assert that value is unit convertability between target_unit and unit_ framework.
Pad data_to_pad with block_size
Remove padding from a block of data.
Create a self - sign request using self - signer.
Gather all the metadata statements from a given context.
Pretty print the input_word using the given anagrams.
Create an argument parser for nagaram.
Main function for word pretty printing.
Process the data received from the packet.
Unregisters the type key in the packet and logs a warning.
Create a new RPC function stub for the given URL.
Ping a peer to the local logger.
Returns a tuple of strings representing the regular expression of the command.
Parses the specified proto string and returns the result.
Returns the proto string for this object.
Verifies that the specified metadata statement is valid.
Parse the response from the remote JWS service.
Returns a list of the databases the user is connected to.
Syncs all local files in a folder to the given path.
Builds the specified package from the specified path.
Instantiate a new instance of this class and close the fridge.
Load the configuration from the specified file.
Creates a self - signed JWK for the given key jar with the given iss and
Builds a request signed bysigning keys.
A helper function to descovery a module.
The main entry point for the command line tool.
Return the score of a given letter.
Calculate the score of a word based on the input letters.
Yields a list of words in a word file.
Determine if a string is a valid scrab word.
Process a string received by the client.
Returns the command and responder function for the specified command.
Parse the values of the arguments of a request.
Writes the response to the transport.
Return True if the connection is lost False otherwise.
Builds the JSONampding protocol for the given address.
Converts a JSON - encoded JWK string to a key jar.
Deserializes the given JWK string.
Process the message.
Process the customer process message.
Process an neutron process message.
Process an event type and process the message.
Process an event for a certain type of process.
Process process event in keystone.
Process the process of the message.
Serve this application.
Prints a message to stdout with optional log_func.
Print msg to sys. stderr and optionally to log. error if log else none.
Register a command subclass.
Register a command subclass.
Returns a string representation of the value.
fromstring a string and check constraints.
Update the completer dictionary.
Perform the actual work
Init the connection and init the consumer and return the connection object.
Initializes the modules configuration
Initialize the neutron consumer.
Initializes a correlation between the consumer and the consumer queue.
Initialize the neutron consumer.
Initializes the neutron consumer.
Initialize the heat consumer.
Generate a string mapping of all component notification to the appropriate one.
Get information about a song
Downloads a song in a specified thread.
Executes the instruction.
Load an attribute from the globals dictionary.
Calls the function c in the current stack.
Dump a database to a file.
_atexit_func - called when the process exits.
Runs the application.
Change the current working directory.
Copies the contents of src to dst.
A helper function to post - mortem into the debugger.
Get the modification time of a file.
Check if the item has changed since the last check.
sync the cache to the local file system
Delete all the files in the file system.
Scrape a feed
Downloads the image and writes it to the cache directory
Check if the image has changed
Finds the caller stack. Returns the filename line number and the name of the caller.
Get the defining component of a pe_pe
Entry point for the xtuml CLI.
Find a handle to a symbol in the current stack.
Check if a pe_pe is contained in the corresponding entry point.
Determine if a pe_pe is a global entry
Get the name of a data type.
Returns a list of related attributes for the given r_rgo and r_to.
Create a new enum based on one of the enum names.
Returns a function that creates a bridge from a s_brg.
Generates an external entity from a s_ee.
Create a function for the sync class.
Make constant value according to cnst_lfsc and cnst_lfsc
Create a function that calls the corresponding operation in o_tfr.
Create a property that points to thederived attribute of an object.
Make a simple association between source and target.
Makes a new relationship of type r_rel into a new object of type r_
Make a component domain.
Perform a single task.
Accept the reply from the reply_socket and send it to the given channel.
reject a call from the reply socket
Raise the given exception and send a reply to the given socket.
Send a RPC call and wait for it to finish.
Establish a call to the worker and return its result.
Dispatch a reply to the result queue.
Try to guess the type name of the value.
Deserialize string value according to uty
Returns the feature object associated with the content_id.
Update a set of items in the index database.
Delete a document by content_id.
Delete all documents in the index.
Delete the index if it exists.
Scan a prefix for features and sub - features in a collection of feature names.
Scan a list of prefix ids for a prefix.
Scan the index and return the ids associated with a given value.
Return a list of feature names for the source of the features.
Returns a list of str_ filters for a list of key_ranges
Get mapping between feature names and their properties.
Get the types of the field
Determine the disjunctive index names from a query.
Returns the number of bytes required to encode the features in fc_dict.
Count the number of bytes that match the filter.
Make a pretty string from a dictionary of features.
Process the docopts.
Returns formencode. htmlfill. escape_formatter
Return a string representation of an instance of link.
Returns a string representation of a unique identifier.
Checks the uniqueness constraint of a model.
Checks the integrity of the link in link. to_link function.
Check if the rel_id is an integer of a certain super_kind
transform a value to a string if the value is an int then it will be converted to
Delete all records in the table and index table.
a function to scan the index table for a prefix of a string
Create a new index in the kvl and store it in the index table.
Create a new entry in the index table with the given content_id and index name.
Yield the unique index keys for a given index name and content id.
Get an index by its name. Raise keyerror if it doesn t exist.
Adds a direction to a string.
Get the name of a type
Returns the attribute that is referenced by the object. If the attribute is referenced by the object
Build a new mapped type from a string.
Builds an enum type from a string representation of the enum type.
Build a struct type from s_sdt
Builds a user - type element.
Builds a type from a string
Build a subelement class for the given object.
Builds a component from an element c_c.
Build the schema for the given model.
Returns a pretty - printed version of the XML string.
Fetch bikes.
Set the positional information of the node.
Create a queue for this service.
Delete the queue content and properties of the method.
Get content and query properties of all queues.
Get content and properties of the exchanges.
Purges the content and properties of a queue.
Create a message from the given subject and message html.
Reads the image from the connection and returns it as a string.
Return True if text is visible.
The main entry point for the bridgepoint CLI.
Serialize value to string.
Serialize anassociation ass to a string.
Return a string representation of the class
main function.
Partition a collection into success and fail.
Returns the bidi for the given request.
Find link between inst1 and inst2 based on the link phrase.
Compute the lookup key for the given instance.
Compute the index key for the given instance.
Return the type of the specified attribute.
Creates a new object and returns it
Yields all instances of the metaclass in the storage.
Define a class for the given kind with the given attributes.
Send a message to a ZMQ socket.
Receive a number of messages from a ZMQ socket.
Runs a pip command and prints only the lines that are not in the pip environment that
Returns a list of email addresses in a string
Call a function or function as a RPC function.
Get the table of values in app. conf. rpc_spec.
Normalize the postcode middleware.
Returns the next value in the stream.
accept_s_sys method accept_s_sys is a wrapper for accept_s
accept - c - c - c - c inst - c - c inst - c inst
Accepts a single pe_pkg and all its children.
Get the brightness of the image.
Match this key with the given set of arguments.
Finds a match in the document at the given position.
Moves the cursor to the next character in the text edit.
Updates the text edit widget when the cursor position changes.
Return the details of the exception.
Returns the instance of the class with the given name.
Execute the history console widget.
Return True if the prompt is pressed up to shift_modifier.
Return True if the user has pressed the down key.
Get the previous character in the history by substring.
Go through the history until a substring is found or if as_prefix and substring is not
Handle aexecute reply message. Update self. _max_session_history and self.
Return True if the history is locked False otherwise.
Returns the string representation of the history item at the specified index. If the index is not
Set the history of the object.
Store the current value in the input buffer if the history index is different from the current value
This function is called when the timer window is closed.
Concatenate a collection of records into a pandas dataframe.
Set the attributes of the object.
Subscribes the socket to one of the topics or all topics
Log a message to the log.
An iterator that yields a value from a remote view.
Converts a notebook to the current notebook format.
Get an importer for a given path item.
global stringio function
Override this req with a new one if it s not the same as the old one.
Parse a string as a requirement.
Returns the pkg_info if it exists else None.
Collapse the leading whitespace from the header so that each line starts with a whitespace character.
Override hide event to disconnect the cursor position changed signal and remove eventfilter.
Connects the cursor position changed signal to the current edit widget s installeventfilter
Return the current text cursor.
Update the current item of the text cursor.
Register a model in the admin site.
Returns a list of disk partitions
Get the CPU time of the specified user and system.
Get the system per CPU time
Read from stdin and print non - blocking characters.
Read raw input from stdin and replace it with string_.
Updates the tab bar visibility
Create a tab with the current kernel
Adds a frontend as a tab and updates the tab bar visibility
Populates all the magic menu
Close tab event.
Returns True if hashed_passphrase matches the hashed passphrase.
Returns a indented string of the title of the given item.
Returns True if the user has permission to change the object otherwise False.
Returns True if the user has the permission to delete the given object otherwise False.
Add a new level to the graph.
Make a bintree.
Submit a set of jobs to the graph g.
Validate the given tree.
Create a color table from a class.
Make a copy of this colors.
Add a new color scheme.
Set the active scheme.
Returns the path to the lib directory of the user s home directory.
Handle the iopub message until the message is ready.
Waits for the kernel to stop
Set a new style string.
Returns the format corresponding to the token.
Get the format of the document.
Get format for token from style
Find a command in the system
Returns a normalized path from the user s home directory.
Check that the value is a list of strings. Raises distutilssetuper
Check if value is a valid entry point.
Return True if the last blank in src is a whitespace or a whitespace.
Returns True if the src is the last two last two blank lines.
Transform a line that contains an assignment system.
Transform the line where theassign magic is found.
Transform a classic prompt string to a classic prompt string.
Transform an input line into anipy prompt if possible.
Finds the indent space and the rest of the indent space.
Stores the lines into the store.
Reset the source raw data and return the raw data.
Handle cell magic.
Appends the given lines to the end of the line_mode cell.
Transform a single cell to a new string. Return the new string.
Sends a notification to all senders of a specified type.
Returns the set of all observer keys for a notification.
Add an observer callback for a specific type and sender.
Update the status of the jobs in the running list.
Print the name of a job in a group.
Prints the string of the group to the console. Returns True if the group was created False
Update the status of the report based on the current status of the report.
Get the current status of the job.
Initializes the thread s status and result attributes.
Insert a string value at index.
Make a copy of the current object.
Private method to declare a special variable.
Declare a list variable.
Declare a set variable.
Set the cwd.
Move to a different state.
Calculates the energy of the strain
Returns a copy of the object with the specified keys.
Returns True if the table exists otherwise False.
Render a check as a string.
Takes a list of rows and returns a table
Renders an HTML link with the given text.
Returns the js file for the specified URL.
Returns the css file for the given URL.
Add an img tag to an URL.
Subtract value from arg.
Multiply value by arg and return it as a string.
Divide value by arg.
try to return value % arg except valueerror and typeerror
Returns the verbose name of a model.
Split user input line into ifun and the rest.
Adds an option for the given parser and environment.
Deactivate self. remove_builtin and clear self. _ orig_builtin.
Find the URL name for the URL in the index_url.
Yields links in self. parsed with self. base_url and self. link
Splits a string into a list of strings
Shortcut for running a program.
Add an action to the configuration.
Appends the action code to the values. actions attribute.
Prints the help for this command.
Returns the boolean value of the help option of the command.
Check if the given arguments are ok.
Executes the given command.
Print coverage information.
Unserialize an object from a string or list of objects.
Set the current sys. displayhook
Log any errors raised by this function.
Check if a string represents a URL
Check if url is a valid URL.
Recursively validate a URL in a container.
Pull a value out of the global namespace.
Selects n random port numbers from the socket.
Removes a list of sequences from the internal list of sequences.
Return a list of the last n lines
Set self. autoindent.
If self. logappend and self. logstart are defined in self. logappend self
Save the state of the sys module.
Restores the original sys module state to the main module.
Register a function to be run after the function has been executed.
Create a new main module.
Initializes the user namespace
Return a list of all main namespace references.
Reset the execution count and update the global namespace if new_session is True.
Delete a variable from the display hook.
Resets the selective namespace references to their default value.
Wrapper for struct. _ofind which calls struct. _ofind oname.
Find an object by name.
Return the string representation of a registered method in the current object.
Initialize the history manager.
Show the traceback of the given exc_tuple.
Show the traceback of the specified event type and stb.
Shows the stack trace of the specified error.
Moves the indentation before the next line.
Add a custom completer at the specified position.
Sets the namespace of the completer to use.
Runs the magic at the given line and returns the result.
Find a magnetic object for a given magic name.
Define a user - defined macro.
Perform a system command and store it in self. user_ns.
Use the prompt to print a command to the user.
Return a dictionary of user - defined variables.
Return a string representation of the user expressions.
Evaluate an expression in the context of the current node.
Runs a file in the current Python interpreter. Returns the path to the file.
Runs the cached cell magic and sets the current_cell_magic_body to none
Expand the current namespace of the given command with the specified number of local variables.
Creates a temporary file and writes the data to it.
Delete temporary files and reset the session.
broadcasts a message from one client to another.
Returns a list of the names of the profiles in the given path.
Returns a list of all bundled profiles
Find dist associated with req by key. Raise versionconflict if dist is not found.
Returns the full path to the specified file or none if the file is not found.
Read the next line and return it.
Send a string to the child.
Send the current terminal character to child_fd.
Prepares a regular expression pattern.
Prepare a regular expression pattern.
Search the buffer for a string of freshlen and return the index of the best match.
Search the buffer for a string of freshlen and return the index of the best match.
Unpack filename into extract_dir.
Returns the last error in the log or raises a runtimeerror.
Execute a command and return the output.
Find the source code for filename and return the filename and the source code.
Return the executed arcs of the test cases.
Returns the arc missing values.
Returns the unpredicted arc probabilitys of the executed executed executed executed executed.
Return a list of branch lines that have a maximum of num_.
Returns the total number of branches in the parser.
Return the missing branch arcs for each branch.
Return a dict of the branch stats and the number of missing branch ARcs.
Set the precision of the number.
Calculate the pc_cov of the run.
Get the string representation of the pc up to 100 decimal places.
Highlights the text in needles using the class_name.
Highlights the given string with the specified keywords.
Return a string with the specified list of keywords highlight it using the specified cls_name.
Runs the function and returns the result.
Remove trailing whitespace from the end of a string.
Returns a string of the given string with the specified number of characters and the specified mark.
Format the screen name.
Removes the dedent from the string if it exists.
Wrap paragraphs at the end of the text if they are at the beginning and the end of
Finds an optimal display width for a list of rows.
Returns the element at the given index or the default if it is not present.
Build the kernel argument list for this module.
Initialize ssh connection
Returns a pretty - printed string representation of an object.
Pretty print an object.
Returns the mro of the given object class.
Defaultpprint function.
Pretty - print the super class of the object.
Pretty - print the pattern of a re. pattern object.
Pretty - print a type object.
Presents the function call to the console.
Pretty print an exception class object.
old func for a given type
Decorator to replace a function for a specific type in a type module by its name.
Writes the given object to the output buffer and adjusts the buffer width according to the
Writes a line breakable by sep and width.
Remove the end of a group.
Flush the buffer to the output and clear the buffer.
Returns the pretty printed representation of the given object.
Writes a row into an ods object.
Gets a string from the win32clipboard
get the OSx clipboard
Gets the current contents of the clipboard
Get the path to the build prefix.
Return a copy of the dictionary dikt with its keys removed
Recursively extracts datetime objects from a string.
Updates dates in a given object by stripping them out of its keys and values.
If obj is a datetime raise a typeerror. Otherwise raise a typeerror.
Check if the site dir is in the system s site - packages directory.
Write a script to the install directory.
sleep until count times t
Creates an argument parser for the given prog_name and subcommand.
main function that reads a file and performs the disambiguation.
Builds a packagefinder based on options.
Called when the log level of the instance has changed.
Default logging configuration.
Called when flags has changed.
Prints the help of the aliases of the current class.
Print help for each flag.
Returns the list of subcommands of this command.
Prints the help for this command.
Prints the specified examples to standard output.
Update config with new config.
Initializes a subcommand.
Flatten the flags.
Parse the command line.
Load the configuration from a file.
Generates a config file for this class.
Downsample an array by k.
Format a list of info tuples into a human - readable string.
Writes the given string to the output if the current process is running in this context.
Called when the configuration of this object has changed.
Returns a help string for this class.
Return the help string for a trait class.
Clears the instance of this class.
Format the stack trace failure as a string.
A helper function that prints a crash message when an exception is raised.
Flush the socket to the Qcore application.
Emit start_channels signal.
Read data from a file - like object.
Read the next byte and ignore the e - mail interrupt.
Split a string into a list of tokens.
Compress a histogram of data.
Add a new magic function to the dictionary.
Return the documentation for all of the registered magics.
Format a LaTeX string.
Set the default value of an option for a given function.
Create a page page with the gui_reference as the gui_reference.
Return a task object with the_callable as properties.
Returns task info with label.
get the callable from the info dict
Calculates the next run of the scheduler. If the next run is in the scheduler
Submit the task to run_task_channel with timestamp.
Runs the callable with the given message.
Runs the AsAP.
Runs the number of iterations of the_callable.
Runs a single iteration of the callable.
Find the URL file for this profile.
Bind kernel to ipkernelapp instance
Create the interrupt event.
Run winapi in a thread.
Filter a namespace and return a dict of key - value pairs where the key matches a pattern
List a namespace based on a pattern.
Adds common options to the dict.
Draw the currently active figure if interactive.
Try to flush the figure to the display if it exists or if it doesn t try to
Send the figure to the console.
Loads the specified module as an extension.
Unload an extension.
Yields random port numbers between - num_ and n.
Initializes the HTTP server.
Handles signals of the main thread.
Confirm the process exits with a critical error.
Shuts down the kernels that are running in this process.
Computes the price of the options.
Replace multiple occurrences of a string in a dictionary.
Render the prompt.
Copy a zipfile to a new location.
Fix the version number in the source code.
Returns True if obj can be converted to a string or a list of strings.
returns the partition of seq at p and q
Convenience function that calls run_source for a file and returns the output of the
Run the given source code.
Downloads a file from an ftp server or if the file doesn t exist returns None
Reduces a list of frequency strings into a single string.
Computes the frequency of each digit in a file.
Yields the type of each line in a txt file that is not a string.
Calculates one digit frequency for a list of digits.
Calculates the frequency of the last two digit in a list of digits.
Calculates the number of digit frequencies for a given number of digits.
Plot a 2 - digit frequency matrix.
function to plot the frequency of one digit.
Prints the string representation of the expression.
Reverse a URL using django. utils. http. urlencode if available.
Check if a string is a private prefix.
Helper function for debug_script.
Helper function to debug a Python script.
Runs the tests in the specified module with the given name.
Returns a dict of all the files in the hashroot.
Compress the hashroot with the contents of all of the h files in the hashroot
Return a list of all the keys in the directory.
Returns True if the user is allowed to access the given record.
Format the error and record the error in the test.
embeds the shell in an embedded shell
Create a new CSV writer and a new meta writer.
Prepare the locale directories.
Writes a new. po entry for each language.
Writes the po header
Subscribes a user to this collection.
Init the argument parser.
Imports a module and runs it.
A helper function to run a Python file.
Returns the source code of the given python file.
Load code from a. pyc file.
Returns an HTML table version of an item matrix.
Set the value of the current position in the string.
Cancel the completion for this slice.
Select the index of the specified row and column.
Update the list.
Get the frequency of each word in text.
Print n words from a dictionary of frequencies.
return a string representation of the element.
Writes the object to a file.
Validate PIN.
Send a shared PIN to one or more topics.
Delete a shared pin.
Sends a PIN to the API using the provided user token and pin.
Delete a pin with the specified user_token and pin_id.
Subscribes to a topic.
Get a list of all subscriptions for a given user_token.
Mark the beginning of the message.
Start a new task.
A context manager for the given units. Submonitors the total value of the given units
Update the number of units and update the message.
Create a submonitor and add a listener for the submonitor.
Update the done message with the total units and the total number of units.
Make the new build location correct for this install.
Load config from a list of config files.
Reads the configuration file and returns it as a config object.
Load a single config from a string.
Decode the passed arguments using the given enc.
Loads the configuration from the command line.
Loads the config from the parsed_data dictionary into self. config.
Try to find a module by name. If name is none try to find a module by
Calls the stop callback function if self. state == str_
notify the user of the start of the task
Calls stop callbacks
Interrupt the event then kill the killer.
Find the arguments to pass to the program.
start a new interval. n is the number of interval to use. n is the number
Copy file from local to remote location.
Fetch a remote file from the remote host.
Return the number of engine instances.
Starts n instances of the specified engine and returns a list of n instances of them.
Start a new job n times.
Returns the default context for the cluster.
Parses the output of the job_id_regex and sets self. job_id
Write n lines of batch script to file. n is the number of lines to write.
Start a new job. n is the number of jobs that will be started.
Make context menu
Call self. _insert_jpg before_prompt if before_prompt is True.
Appends png to the prompt.
Appends svg to the prompt.
Add an image to the text edit.
Copies the image to the clipboard
Get image resource by name.
Insert image into cursor
Insert svg to cursor.
Saves an image to a file.
exit now changed.
Initializes the environment variables
Use the prompt_manager to generate a new string and write it to the payload_manager
Prompt the user to exit.
Sets the next input in the payload.
Read a config file.
Returns a list of the values of an option in a config file.
Get a list of strings.
Set timid from environment variable.
Set the value of this parameter from the given keyword arguments.
Reads the config from the given file.
Set an attribute from a config option.
Change the delims in the string
Splits a line into a list of words.
Return a list of words that match text.
Return a list of words that match the given text attribute.
Replace greedy delims with greedy delims.
Return a list of aliases that match the given text.
Returns a list of strings that match the given string.
tab completion function for rlcomplete
Returns True if at least one test in the record is True otherwise False.
Match a check to a set of records.
Extract a subdict from a record.
Returns a boolean indicating whether the command is quiet or not.
Render the prompt and write it to io. stdout.
Writes format_dict to stdout.
Log the output of a command.
Raise an exception if the operation is freezed.
Take a string and convert it to a MySQL timestamp.
Called when the event loop has changed. Add a timeout to the ioloop iol
Performs one iteration of the pollin loop.
Publish a PyIn code to the iopub socket
Send an abort request to the client.
Clear the status of a request.
Returns the string representation of the topic.
Sends a shutdown message to the iopub socket
Adds the module to the stack before the current context.
Remove modules from sys. modules that are not in the current context.
Returns the absolute path of the given path.
Return True if the name is a file - like object.
Returns True if the object is a class.
Determine if the path is a package.
Add a label to the end of a string.
Decorator to transplant a class to a module.
Get CPU times for the current platform.
Returns the process command name for this process.
Return a list of open files in the process.
Returns a list of nt_connection instances for the current process and its families and types
Check if a user has a given group.
Resolve a class from a module.
Calculate the usage percent.
login to the service
Get the gdocs key from the URL.
Ensure that the temp path exists.
Clears the temp files.
Uploads a file to a gdoc.
Synchronize the gdocs and po files to local and global metadata.
Downloads CSVs from Gdocs and metadata files to po files.
Uploads the localods to the podocser. gdoc database.
Delete the document and upload it to a gdoc.
Connects a new Qt console to the kernel.
Check if the URL has the required accessibility.
Check if a URL has a string of contents.
Get the response code of a given URL.
Compares the content type of a URL.
Compares the response code of a given URL.
Validate the input data.
Clears the output of the process.
Create a list of code unit objects from the given Morfs.
Returns the flat rootname of the module.
Return the source file of the coverage report.
Determine if the file should be considered to be a file based on its extension.
Returns the total seconds of a timedelta object.
Wait until the task is ready and return the result or raise a timeout error.
Block until all messages have been received or until timeout is reached.
Get a dictionary of metadata.
Abort this message.
Returns elapsed time since since the start of the job.
wait for interactive mode and print the result to stdout.
Replace the displaypub of an entry with a new one.
Wait until num_ outputs have been received and flush the iopub if necessary.
Waits until all results have been received or until timeout is reached.
Returns the absolute path of a file.
Prepare a list of patterns to be used for pre - processing.
Extract the separator from a string
Yields all files in a directory.
Returns the relative filename of the given file.
Return the canonical filename for filename.
Returns a string containing the data in a zip file.
Returns True if the specified file path is a member of this directory.
Returns a boolean indicating whether or not the specified file matches the specified pattern.
Applies the aliases to the given path and returns the new path.
Run a Qt4 kernel in the main event loop.
Loops a Gtk kernel in the event loop.
Enable gui in loop_map.
Return the goe of n.
Computes the eigenvalue difference between the center and the eigenvalue of a matrix.
Computes the ensemble differentials between num and n.
Initializes this step.
Load the configuration file.
Writes the file to disk.
Erase the contents of the file.
Returns a dictionary of line data
Returns the arc data.
Writes the data to a pickle file.
Read and parse a file.
Returns the data stored in a pickle file.
Read a file and return a list of lines and arc lines.
Combine the parallel data in the data directory.
Update the line data for a given file.
Add arc data to the arc mapping.
Adds the contents of a file to a hash.
Return a string summary of the table.
Yields lines that have the specified sentinel from the input.
Interact with the user.
Replace the previous line history item with a multiline history item. Return the number of lines
Prompts the user for raw input.
Edit a syntax error.
Prompt the user to exit.
Get the revision from the URL.
Create a new frontend master
Initializes the colors for the widget
Return a string representation of the info object.
Convert a string representation of an object to a numpy array.
Set the color scheme to the active colors if the color scheme is active and pdb is not
toggle the color scheme
Return the text representation of the exception traceback.
Format the traceback of a given exception type and value.
Format a list of extracted strings.
Shows the exception only of the specified type and value.
Sets self. mode to self. mode
Recursively imports values from a list of strings in a module.
Add a new line to the code
Adds a new section to the code. Returns the new section.
Return the function with name fn_name.
Return the code for the given expr.
Render the application using the specified context.
Converts value to dot notation.
Render a template with the given context.
Return a dict of format classes with default values.
Set a callback function for a given type.
When float precision has changed we need to set float_format.
Returns a list of config files that exist in the user s home directory.
Configures self. loggingconfig with self. loggingconfig.
Configures the test environment using the given list of absolute paths.
Dumbs a page.
Page a file using the pager.
Returns thepager command to execute.
Returns the start string of a pager.
Return the snip of the given string if print_full == num_ and header ==
pretty print the string of an object if it s in one of the strings in o.
Returns a PNG representation of an object.
Returns a PNG representation of an object.
Return True if o can be printed in LaTeX.
Return a string representation of an object in LaTeX.
Adds this option to the given parser and environment.
Validate a list of strings.
Validate string keys and values in a dict.
Run the ioloop in a new loop.
Handle incoming message. feed identities and call handlers
Send a completion message to the server and return the response.
Get information about an object.
Shuts down the queue and returns the message from the server.
Send all pending messages to ioloop.
Send a string as input to the queue.
Start the channels.
Stops all open channels
Check if the channels are running.
Loads the configuration of the connection from a file.
Launch a new kernel connection to the remote host.
Shuts down the kernel.
Kills the kernel.
Interrupts the kernel.
Sends a signal to the kernel and raises a runtimeerror if it doesn t exist.
Returns a boolean indicating whether the HB channel is still alive.
Get the shell channel for this node.
Get the sub - channel for this connection.
Get an instance of HB Channel.
Bind a kernel to the application instance.
Print a debug message at the specified level if self. _debug > level.
Returns a list of the available extension classes for the given entry.
Return True if the step was successful and False otherwise.
Walk an egg_dir and yield all sub - directories and files.
Scan a module name for its dependencies.
Launch a new instance of the application.
Save a connection dict to a file.
Load the configuration from a JSON file.
Load the secondary configuration.
Enable autopx feature.
Disable the autopx flag and print the result.
Execute a single cell
Runs the task and checks if the now is older than the tick_freq. If
Run a task if allow_overlap is True.
Removes a task from the task table.
Patch an object s attribute with a given method if it doesn t exist.
Accept a new connection.
rejects the pending pending connection. If reason is none the reason will be used.
Returns a proxy agent that calls self. endpoint with the given reactor and contextfactory.
Method called when the form is valid. Saves the object and pre_save and post
Delete the object and return the success url.
If the user is logged in then set the user s field to the request user.
Check the module cache. If check_all is True then only check if the module cache
Runs a editor for the specified line.
Get the text from the clipboard.
Add a new function to the chain.
Get the metadata object for the given module and version.
Configures the plugin.
Import an item from a module.
try passwordless SSH
Try a passwordless Openssh session.
Try passwordless SSH connection.
Connect to a tunnel socket.
Open a tunnel to a remote host.
Send a warning to the task_socket and close the self. _task_socket.
Unwrap the exception and update the engine_info dict.
Register a new engine for the given message.
Unregisters the given engine.
Handle an execute reply message.
Send a notification to the notification socket
Send a message to the queue and flush the results.
Flush some control on the socket.
Flush pending ignored control messages to the server.
Flush the iopub message from the socket
Spawn a thread every interval seconds.
Stops the spin thread and waits for it to finish.
Send notification and results to iopub.
Send anapplyRequest message to the specified socket.
Hub the history of the query socket
Query the database using the given query string.
return a set of opcode objects for the given names
Get the byte parser.
Return a set of line numbers that match a regular expression.
Return the first line of a line.
Return the set of first lines in a list of lines that should be ignored.
Parse the source code of the token stream.
Return a list of the arc numbers in the file.
Returns a list of child parser objects.
Yields the number of lines in the code.
Finds all the statements in the parser.
Returns a string representation of the current block stack.
Validate the chunks of the input.
Yields the ARcs of the file.
Returns a list of all the child chunks of this node.
Return the set of all arc numbers of all subparsers.
Start the covering process.
Print the report to the given stream.
Return True if file is a file in the list of coverpackages or if package is not
Interpret a distribution name.
Opens a URL with authentication. Returns a file - like object.
Returns the parent of the given object.
Returns the root topic of the message.
Render a template with the given context.
Configures the plugin.
Format a test error.
Splits a string into num parts.
Convert a notebook to the format specified in nbformat_minor.
Converts a hex color to an RGB color.
Returns a dict of the colors of the given token s text.
Get the current font for a given family or the fallback one if the family is not the
Handle a reply message from the client.
Handle a history reply message.
Handle a response from the user to the pyout prompt.
Handle display data.
history of started channels
Execute a file.
Process the execute error message and update the HTML or plain text with the traceback.
Process the command payload for the given item.
Set the default syntax style.
Calls the editor function. If self. editor_line is set then calls self.
Makes the in_prompt string with the specified number and typeerror.
Makes a prompt that has a blank space after the prompt.
Called when the style sheet has changed.
Updates the current syntax style to the new value of self. syntax_style
Transform a data dictionary to a standard format.
Get information about the virtual memory of the VM.
Get CPU time information for the current platform.
Get the UIDs of the current process.
Get the GIDs of the current process.
Get the list of threads in the process
Returns a list of open files for this process.
Determine the hash of the commit hash of a package.
Return information about a package.
Returns the number of CPU cores forarwin.
Determine the number of CPufuncs for the current platform.
Fetch the next set of results.
Fetch the next row and return it.
Fetch up to size rows.
Fetch all the rows in the result set.
Connect to the tree at the pub_url and root_id
Convert a notebook from JSON string s to one or more notebooks.
Read a notebook from a string and return it as a notebook.
Return the reads of string s in the specified format.
A convenience wrapper for the native writes function that calls the native writes_json or writes_
Writes a string to a file - like object.
Converts the input file to a metadata object.
Load the value of this parameter from a dict.
Return True if the name matches the filter.
Determine if the given class is want to use this plugin.
Determine whether or not the specified directory is wanted.
Check if the specified file should be ignored.
Check if the given function is the function of this plugin. Returns True if the function is
Check if the given method matches the current state of the plugin. Returns True if the method
Determine if a module is want or not.
Return a list of lines from a file.
Parse a list command and print it in pydb format.
Print a list of lines to stdout.
Define a variable in the shell.
Calculates the conversion factor between from_symbol to to to_symbol. Returns the
Converts a value from one currency to another.
Computes the price of a currency between start_date and end_date.
Returns the value of stream. encoding or the default if stream. encoding is not a string
Gets the preferred encoding for stdin or sys. getpreferredencoding
Writes the connection file to disk.
Init the heartbeat
Initialize a session with the config and username.
Initializes the iopub_socket and sys. stdout and sys. stderr streams.
Initializes the kernel
Converts HTML to text.
Converts Markdown and HTML to plain text.
Returns the FQN for the given domain.
Add command line options.
Configures the plugin.
Determine if a directory is want to be included.
Returns True if this extension links to the dynamic library of the given extension.
Calls each function in a list of functions.
Calls the given list of functions with the given arguments. Returns an empty string if the
Appends a function to the end of the function.
Wrap a function to insert a new index into this collection.
Format the given usage string.
Writes the PID to the pid file.
Remove the pid file from the profile directory.
Get the PID from the pid file.
Construct a magic argument parser.
Get the real name of a magic function.
Highlight the current block.
Rehighlight the block and replace it with a new one.
Set the specified range of lines to the specified format.
Copy text to the clipboard.
Sends a message to the shell channel and executes the message.
Resets the prompt for finished processing.
Returns True if the tab is pressed False otherwise.
Insert the copy raw action into the context menu.
Override event filter_console to request kernel if no kernel is selected.
Overrides the inserttext method of the frontend widget to insert acontinuation prompt.
Handle a completion reply from the request.
Handle a reply message related to the operation of the widget.
Handle the kerneldied since the last heartbeat.
Handle a reply from a request of the object s info
Appends text to the output of the pyout command.
Handles stream messages.
Handler for the shutdown reply message
Executes a file and returns its output.
Interrupts the kernel.
Reset the shell to its initial state.
restart the kernel
Calltip request message
Completes the shell context.
Process an error message and emit a plain text message.
Process a message that has been executed by the client.
Callback for document contents change.
Add a plugin to the list of plugins.
chain the call to the wrapped method and add the result to the arg.
Runs each plugin in the list of registered plugins with the given arguments.
Calls the registered plugins method with the specified arguments and keyword arguments if the result is not
Configures the plugin.
Load plugins from entrypoint plugin manager.
Add plugins to this manager.
Convert a LaTeX string to a PNG string.
Return the PNG representation of s in html format.
Check if the distribution exists and if not raise an installation error.
Return a dict representation of the object.
The process name.
Get the CPU percent of the current process.
Returns memory percent of the current process.
Returns a list of memory maps in the platform.
Check if the current process is running.
Suspends the current process.
Resumes the current process.
Kills the current process.
Wait for the current process to finish.
wire the main kernel into the main kernel
Returns true if the given identifier is shadowed in the global namespace or in the global namespace
Register a new transformer.
Unregisters an existing transformer.
Register a checker.
Unregisters a checker.
Register a handler for a string name.
Unregisters an event handler.
Prefilter the line_info before processing it.
Finds a handler for the given string.
Transform a single line.
Pre - filter the line before the prompt is applied.
Prefilter a list of lines and replace them with their new lines.
Returns the handler associated with the given line_info.
Checks the line_info and returns the handler to handle it.
Checks if the command string is valid.
Checks if the given line is part of the shell s alias manager or if it is
Process line_info. line_info. continue_prompt if autoindent is enabled and
Converts aliases to their pre - whitespace.
Method to handle line_info.
Process a line of input and return a string representation of the command.
Processes the input line and returns the appropriate object.
Handle line_info.
Filter text edit event.
Overrides enterevent to stop the hide timer.
Draw the primitive for the calltip widget.
Show the function call information.
Handle if the cursor position has changed.
Returns the absolute path of the given path relative to the current working directory.
Return masked attributes of the masked object.
Returns True if virtualenv is running under virtualenv and no global file is present.
Calculate the frequency of each word in each target word.
Return a list of the default aliases for the current os.
Adds an alias to the function if it doesn t already exist.
Add an alias to the alias table.
Validate an alias for a command.
Calls an alias and returns its exit code.
Transform an alias to a new command.
Expand aliases and expand aliases.
directive for autohelp.
Resets the intensity and foreground color.
Get a color by its number and intensity.
Get the current format
Generate a JWT.
Remove jwts that are older than the current age.
Return whether a token is already used.
Check if the token is valid.
Return the common prefix of the given list of strings.
sizehint for str
Return true if the text cursor is in the buffer and can be cut.
Return True if the clipboard contains text.
Clear the input buffer and show the prompt or if keep_input is True clear the input
Cut the text.
Return the input buffer of the prompt.
Set the input buffer to the given string.
Set the font of the completion widget. emit the font_changed signal.
Print the current widget to the printer if printer is specified. If printer is not specified print
Moves the prompt cursor to the top of the screen.
Resets the font to the default value.
Call insert with custom text before prompt if before_prompt is True then insert text before prompt
Call this method to append html to the prompt.
Appends the html Fetching plain text to the prompt.
Appends a plain text string to the prompt.
Clears the temporary buffer of the prompt.
Update the completion widget with the given items.
Fills the text into the text buffer of the cursor.
Return whether the key is down in the given modifiers.
Create custom Qplaintext edit or QText edit
Create the page control
Filter the page selection event.
Returns the plain text of the block
Returns the end of the text cursor.
Get the number of characters before the prompt.
Get the line number of the prompt before the cursor.
Gets the prompt s current position.
Gets the text cursor position.
Inserts acontinuation prompt.
Insert html at cursor.
Inserts the plain text text at the given cursor position.
Inserts the plain text into the text edit block at the cursor.
Keep the cursor in the buffer.
The keyboard key to quit the task.
Page text.
Update the prompt state.
Read line by line and show prompt.
Sets self. _continuation_prompt_html and self. _continuation_prompt
Sets the cursor to the top of the window.
Adjusts the scrollbars value according to the viewport height.
Entry point for the download_url command.
Copies the config file to the specified location.
Create a new profile directory by name.
Find the directory containing the given name.
Read and return the contents of a file.
Creates a temporary file with the specified extension and writes it to the specified file. Returns the
Flush and close the file.
Writes the given data to the file.
Add a new heartbeat handler.
Adds a failure handler.
Handle apong message.
Batches a list of strings into batches of size batch_size.
Converts a string path to a filename
Display the elapsed time left off screen and right off screen.
Return the timeunit of the elapsed time.
Extract wininst config from a. dist file.
Uncache the zipdir at path.
Return the argument in the n - quote form of the argument.
Check if there are any conflicts in the install_dir and all_site_dirs
Sets fetcher options.
Creates the home path for the user if it doesn t already exist.
Check if a file is an archive file
Create a new heading cell.
Create a new metadata entry.
Create a new author object.
Check if the given path is a directory and is readable.
Remove the filename from the end of a string.
Get a Python file name.
Get the user s XDG home directory.
Get the system s default or user s home directory.
Returns the directory of the igraph package.
Get the path to a module.
Returns the number of dependencies of target that are older than target_time.
Compute the md5 hash of a file.
Check if the old configuration is the same as the one passed in.
Updates the dictionary of suggestions for the given object.
Returns a list of suggestions for the given object with the given size.
Returns a list of suggestions for the given object.
Return the relative path relative to the current working directory.
Return a list of strings that match the pattern.
Read the MD5 hash of a file.
Create the pfile and profile it.
report the profile statistics to the given stream
finalize for the profile
Disable the wx widget if it exists and clear the input hook.
Disable the Qt4 event loop.
Enable event loop integration with gtk.
Enables the current GUI for this application. If app is none the default GUI is used
Enable event loop integration with pyglet.
Calculates the wave scalar version of the wave scalar version of the wave scalar version of
Init the sqlite3 database connection.
Helper function to run SQL. Returns a tuple of cur. cur. cur. cur.
Returns the session number and the number of the current session.
Returns the last n rows of the result set.
Get a range of lines from a string.
Get the name of thehist file for the given profile.
Get the session ID for a given session name.
Reset the history of the history of the CWL.
Get a range session.
Stores the output of a particular line in the output cache.
Writes the session number and the session number to the cache.
Stop the thread and join the history manager.
Gets the number of CPUs in the input file.
Get the system per CPU time from the log file.
Returns a list of disk partitions on the machine.
Returns a list of all PIDs in the given string.
Make a nice string for a pair of strings.
Format a list of statements and a list of lines.
Returns a string representation of the stack trace of the function call.
Join a list of regular expressions into a single string.
Remove the given file if it exists and raise an error if it doesn t.
Recursively updates the md5 hash of a value.
Update the profiles in the CWL for the given path.
Stop the cluster associated with profile.
try to find cmd in path
Print the system body of the process to stdout and wait for it to finish.
Find the code units for the given factor files.
report_fn for each file in the code_units in the coverage report_fn.
Sets stdout and stdout to pdb. set_trace.
Initializes the list of available extensions
Runs the main code of the shell.
run lines from self. exec_lines
Runs the startup files for the given str_ in the startup_dir.
Executes the list of files in self. exec_files and returns a list of the
Runs a line of code from the shell. If code_to_run is specified
Run the module in the shell.
Returns the filename of the static data file if it exists otherwise raises coverage exception.
Reads data from a file and returns it as a string.
Escape a string.
Report the coverage report.
Copies static and extra css files from self. static_files to self. directory
Writes the html to a file.
Return the hash of the file in the coverage data.
Renders and writes the index. html file.
Reads the current coverage status from the status file.
Writes the coverage report to a file.
Compare two lists of strings and return True if the elements of the first list are the same
Get a slice from a sequence of strings.
chop a sequence into chunks of a certain size
Reads the manifest from the str_ if it exists and returns its contents.
Convert a glob pattern to a regular expression.
Does this filename match any of the patterns?
Returns a list of all versioned files in the current directory.
Start a new kernel
Shuts down the specified kernel.
Kills a kernel by its ID
Returns the kernel with the specified ID or raises a keyerror if the kernel is not found
Get the ports of a kernel.
Returns the notebook with kernel_id or none if no notebook with kernel_id exists.
Start a kernel for the given notebook. If kernel_id is specified kwargs are passed to
Remove the mapping for the kernel specified by kernel_id.
Interrupt the kernel specified by kernel_id
Restart a kernel
Create the iopub stream for a kernel.
Create the shell stream for the kernel with kernel_id.
Creates the kernel stream for the given kernel_id.
Remove all onetimeproperty values from this object.
Export html to html with image_tag or default_image_tag.
Remove str_ at offset of html and replace it with empty_p_re.
Try to get a unique object or none if it doesn t exist.
Build a query based on the term values in the tokenized_terms and search_fields
Returns a text query based on the search_fields and the include_terms and exclude_
Builds a query for YYYYMMDD YYYYMMDD YYYY
Builds a dateless query based on the days and date_field.
get_null_or_blank_query - Get the query if the field is not
Appends the string_ to the field in model. case_insprocessed_fields.
Add an option for the given parser and environment.
Validates that the value of the attribute matches the value of the attribute.
Check if the given method is a method of the given class.
Rotate the text cursor to the previous yank.
Returns the websocket url of the request.
Re - serialize a reply message.
Injects a cookie message into the request.
Start the HB callback.
Stop the HB receiver.
Open the file for reading or close the file if it is not already open.
Returns the string representation of the given index.
seek to a given block index.
Edit the src block at the specified index.
Prints the current block to stdout.
Shows all the src_blocks in the terminal.
Run a function in a thread.
Return the source code of the traceback traceback tb.
Return the inspectable lines to inspect at the given position.
Creates an HTML tag with the specified content and progress bar.
Cleans up controller and kills it after a given number of engines have been created.
Save a function to the client s history.
Sync the results of a function to the client. Returns a string with the results of the
Spins after a function is called. Returns the result of the function.
get the complete list of messages
Get the message from the input queue.
Parse a URL into a dict.
Returns a list of the root modules
Returns a list of completion modules
A completer for magic_run_completer
Returns the XML - safe string of an attribute.
Configures the plugin.
Writes the error report to the given stream.
Adds an error to the error list.
Add a test failure.
Add a success test to the error list.
Return a random number between num_ and n - num_
Calculates a random value weighted by the number of values in the input array.
Register a new engine.
Unregisters the engine with the given uid.
Handle the stranded tasks for a particular engine.
audit the timeout of the depending jobs
Send a fail message to the dependents of a message and update the dependency graph.
Saves a job that is unmet.
Submit a task to the scheduler.
Handle the result of a task.
Handle a result message from the client.
Handles a dependency that has been unmet.
Update the dependency graph.
Print the current state of the log.
Log a line to the log file.
Writes the given data to the log file.
set self. logfile to none or set self. log_active to True.
Create a new worksheet with the specified name and optional cells.
Adds an object to the chain.
Adds an object to the chain.
Recursively match a given key.
Returns a generator yielding all elements that match the given key.
Called when the notebook s directory changes.
List all notebooks in the notebook directory.
Create a new notebook id for the given notebook name.
Delete notebook with notebook_id.
Check if notebook with notebook_id exists.
Find notebook path by notebook id.
Get the absolute path to a file with the given name.
Get a notebook by its ID.
Get a notebook object by its id.
Save new notebook and return notebook id.
Saves a notebook to the notebook identified by notebook_id with the given data.
Save notebook object to file.
Delete notebook with notebook_id.
Creates a new notebook at the specified path and returns its id.
Copies the notebook to the notebook object given by notebook_id. Returns notebook id
Yield tokens that match the type of the token.
Load the default configuration from the config file.
Return a list of default classes.
Parses the command line and returns a terminali.
Initializes the terminali app if it s not already initialized.
Initializes the shell instance and adds it to self. shell. configurables.
Initialize the banner if necessary.
Returns a human - readable representation of the type of an object.
Returns a list of strings corresponding to the given parameter name.
Returns a dict of all trait instances of the specified class with the specified metadata.
Get the metadata associated with the trait with the given key.
Check if value is an instance of self. klass and if it is an instance of self
Returns the default value of the field.
Check if this message is in the expected state.
Determine whether this message is a reachable against a particular against.
Returns a dict representation of this result.
Returns the depth of n in the tree
print a bintree in a nice way
Disambiguates a DNS URL to a host.
Reduces the result of each element of the sequence f and returns a new sequence of
Validate the targets list.
Dispatches the message to the monitor_handlers dictionary.
Sends a query to the appropriate query handler.
Handle a new incoming heartbeat.
Handle a heart failure.
Save a task request message to the database.
Saves a message to the database
Handle a connection request.
Unregisters an engine.
Marks the given registration as finished.
Send a shutdown request to a client.
Purges the results of a message from the database.
Extract content and buffers from a record.
Get the history of a message for a client.
Send a query to the database.
Change the current working directory to newdir.
Decode the stdout and stderr of a completed command.
Run a command under the root of the working directory.
Dispatch a message to the appropriate handler.
Returns True if the message s session is equal to the current session.
Generate a report of the annotations of the given object files in the specified directory.
Determine the installed version of the specified executable.
Replaces all keys and values in a dict that are not unicode.
Extract a header from a message or header dict.
Check message packers.
Create a message of the specified type.
Signs a message list.
Send a list of raw messages.
recv a message from a socket
Save svg string.
Copies the svg string to the clipboard
Render svg string to image
Return a dict of info fields for a given object.
Get the docstring of an object.
Recursively gets the source code of an object.
inspect. getargspec - like function or method.
Find the absolute file path of an object.
Returns the line number of the source code of the given object.
Return the string representation of the definition of an object.
Returns the header and normal of the color table.
print a line of text with the oname if oname is None then print a string
Print the definition of an object. If the object is a class print it to stdout.
Return the source code of the given object as a page.
Returns the line number of the source file of the given object. If the object does not
Format a list of fields.
do a psearch search for a pattern in a namespace table
Runs the reactor in a new thread. Returns the reactor and the thread that created the
Returns a pretty - printed string representation of the XML document.
Returns the XML representation of the document.
Loads all modules in packages.
Inverts the string values in the dictionary.
Converts an object to a primitive string.
Returns a list of matplotlib figure objects.
Print the figure and return the data.
Select the figure format.
Finds the gui and the backend for the given gui. Returns the gui and the backend
Activate the matplotlib backend.
Configure the inline support for the specified backend.
Starts the trace and returns the current thread.
Stop the current thread and print a warning if the current thread is the current thread.
Start a new Tracer instance.
Return the trace function.
Starts the thread and sets the trace of the current thread.
Stop the pause and resume the collectors.
Pauses execution of the given tracer.
Resumes the installation trace.
Returns the data for the line.
Recursively collect all exceptions in rdict_or_list.
Render the traceback of an exception.
Processes the startup of the project.
Return the canonical directory name for the given codeunit.
Returns the source code for a given file.
Determine if the given filename should be traced with the given frame.
Determine if the debug should be traced.
Print a warning message to stderr and record it in self. _warnings.
Check if source packages match self. source_pkgs.
Start the collector.
If we have created a new entry this function will stop it and save it.
Returns instance of self. _exclude_re
Save the data to the data file.
Combine the configuration with a new configuration.
harvest the arc data and touch the file if needed.
Return the analysis of the object.
Return an analysis object for the input it.
Create a summary reporter for this object and write it to a file.
Annotates this object using the specified configuration.
Generate an XML report of the coverage report.
Reloads the data from the server.
Runs a command and returns its output as a string.
Run a command and return the return value of the return code.
Forward read events from a file descriptor.
Sends a line to the socket and closes the socket.
Finds a class by class name and returns it.
Start the daemon.
Build and return an instance of the specified clustering class.
Start the daemonized event loop.
Start the service.
return the wx. pysimpleapp object if the app is not None
Determine if the app is in the event loop or not.
Start the event loop for the wx application.
Returns the Qt4 application instance associated with the kernel.
Returns True if app is in the event loop otherwise False.
Start a Qt4 event loop.
Return a copy of the given canvas view with the given width and height.
Draw the cross of the specified position in the specified color.
Draws a line between two points.
Create an annotated image from a Grayscale image.
Get a random uuid
Returns a unique key for a get dict.
Returns the domain name of a URL.
Parses a URL and returns a dictionary of query - string arguments.