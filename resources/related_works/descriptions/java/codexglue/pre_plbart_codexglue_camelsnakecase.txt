Emit the specified value with the specified delay error and disposable.
Wrap an observable.
Return an observable that is sorted according to the given sort function.
Adds an observable to a connectable and sets its properties on the given scheduler.
Create a new unicast processor with a given capacity.
Create a new processor with a given capacity hint.
Perform a scalar function on the given publisher and subscribe to the given subscriber.
Return a flowable value using the specified function for the specified value and the specified publisher for
Resets all properties to their default values.
if the source is not null will throw an exception
return a maybe from a single source
Retries at most the specified number of times for a given predicate.
Throws an exception when the given object is null.
Warns about the use of the identity function.
Returns a callable with the given value.
Creates a function with just the given value.
Create a function that casts to the class of the target.
Create a new unicast subject with the current buffer size and bool flag.
Create a new unicast subject with the given capacity hint.
Create a new unicast subject with a given capacity hint and a runnable on terminate.
Create a new unicast subject with the current buffer size and a delay of error.
Waits until an error occurs or an exception is thrown.
Gets an error from the pool waiting up to the specified time unit if necessary.
Waits until at least one thread is interrupted or the specified time unit is interrupted.
Runs the code until the maximum number of elements in the given queue is reached. If
Submits a subscription to the server for at least the given number of bytes.
Completes the Future with a single value.
Get the value of this property as a non - null non - error value.
Gets the error value or null if the value is not an error.
Perform double subscription between two disposed objects.
Sets the value of the given object only if it is disposed.
Validate the given subscription against the upstream object and the next object.
Sets the value of the given subscription only once.
Returns the maximum of the addition of the two long values if they are not equal. Otherwise
Returns the largest common multiple of a and b.
Adds the specified value to the current value returning the updated value.
Converts a throwable to a npe.
Adds an object to this set.
Shuts down the executor pool and removes it from the pool.
Creates a new scheduled executor service.
Set the subscription associated with this object.
Iterates over the elements of the array and adds them to the end of the list.
Wraps the provided error into a runtime exception. If the error is a runtime exception
Flatten a throwable into a list of throwable objects.
Wraps the throwable if it is an exception and returns it. If it is an
Clears the set of resources.
Returns the number of resources currently in the set.
Perform a scalar function on the given observable and register the result with the given observer.
Register an observable with a function that returns a single value.
Accepts all non - null elements from the head of the array and subscriber.
Adds an observer to the head of the queue. If the queue is full the observer
Starts the array queue.
Starts a new unbounded spsc linked array.
Adds the specified element to the queue. If the queue is full the method will return
Gets the current disposable. If the current disposable is not disposed the current
Completes this observer with the given value.
Called when an error occurs.
Completes this task.
Waits for the specified number of items to be received.
Subclasses may wish to override this method to perform additional processing on the returned subscription.
Adds a new disposable instance to the set.
Removes the specified element from the list.
Create a replayable viewable from a flowable and a scheduler.
Parse the annotations of a service method.
Sets the delay to the specified amount.
Returns a response object for an error response.
Calculates the delay for the given time unit.
Samples data.
Returns the value of the given HTTP method.
Search for a user by username.
Returns a hash of the given password.
Checks whether the given password matches the given password.
Checks to see if the current spring version is lower than the given spring version.
Helper method to disable checks.
Get the current spring version.
Exchange the provided attribute name with a pattern.
Get the OAuth2 client.
Use the current context as the context for the OAuth2 resource server.
Compares the specified object with the specified attribute on the specified dn with the specified value.
Gets an entry from the naming context.
Search for values of a single attribute.
Perform a search for a single entry.
Builds the controls for the given search object.
Find all of the existing primary keys.
Build the web authentication details.
Create bean definition for embedded server.
create servlet api filter bean reference
Create a jaas api filter.
whitelist a type resolver builder.
Add a spring security filter chain to the web application context.
get token for series
Returns a list of granted authority based on a collection of attributes.
Returns a new cipher instance for the specified algorithm.
Override after properties set.
This method is called by the framework before the request is handled. If the request requires authentication
Check if principal changed.
Implementation of the authentication process.
Check content length.
Maps a collection of authority objects to a collection of authority objects.
Logs in to the given URL processing url.
Update authentication defaults.
Add access defaults to the access defaults.
This method maps the supplied object to the specified password if it is not already a string.
Extracts the value of the specified cookie from the request.
Encode cookie.
Set a cookie based on the given tokens.
Resolves the method argument.
Extract the artifact query string from the request and replace it with the provided pattern.
Returns the port for the service URL. If the port is not defined returns the default port
Gets the principal from the security context.
Logout request.
Returns the authentication object for the given authentication token or null if the authentication token is not a
Set the context environment properties.
Returns the redirect URL for this request.
End tag.
Service the user details.
Get user details service.
Adds the key - value pairs to the additional parameters map.
Return true if the request requires authentication false if the request is not a service ticket request.
Perform a ticket request.
proxy ticket request.
Checks if the current authentication token is already authenticated.
Checks if the configured proxy matches the given request.
Create a new security expression root object.
Retrieve the jwk set.
URL - encode a string using UTF - 8 encoding.
Get a collection of groups based on the granted authorities of the web sphere.
Load user details by assertion.
Get the pre authenticated principal.
Concatenates the given arrays.
Returns a subarray of given array.
Returns a list of granted authority objects for the given collection of attributes.
Creates a hash map from the given map. The key is the string and the collection of
Returns a collection of authority objects with the specified value.
Adds a granted authority collection to the result.
Get the pre authenticated principal from the http request.
Returns the shared object of the given type.
build https redirect url for request
Intercepts the Join point and makes an object returned by the proceeding.
Adds the role to the string if the string does not already have the role.
Appends the specified string to the specified string array and returns the specified string array.
On login success.
Attempt to switch the current user.
Attempts to exit the user with credentials from the http servlet request.
Set the exit user url.
Displays a single contact.
This method will chain the spring security filters. It will first check if the current context has
Decodes the given token and creates the jwt if it does not already exist.
Called to authorize the current request using an access expression.
Checks if the current user is allowed to access the given url.
Converts jwt to authority list.
Generates a new token for the given request.
Display admin page.
Displays the specified page for the specified contact.
Add a new permission.
Gets the role with the specified prefix.
Create user details bean from string.
Returns the attribute values for the given attribute name.
Get the first attribute value for the given name.
Encode a character sequence into a byte array.
Decode bytes to string.
Look up parameter names for a given parameter.
Adds a new contact.
Find all configuration attributes that match the specified method against the specified target class.
Add a secure method to the config.
Get a collection of all config attributes.
Returns true if the method name starts with the specified string and ends with the specified string.
Perform a any request against the server.
Handle bind exception.
Returns a random contact.
Removes authentication attributes from the session.
Returns a field declared with given name from the given class. If the field does not exist
Create service url string.
Create redirect url.
Extract the prefix of the passed string.
Sends a forbidden error to the client.
Check for duplicates in the current stack.
Gets the registered types.
Extracts the cause of the throwable.
register a bean definition and return a bean id.
Return a new hash set containing all of the user authorities in the given collection.
Compares two byte arrays for equality.
Set default failure url.
Resolve hidden inputs with the given function.
Builds a request URL from the servlet path context path and path info and query string.
Returns true if the string is an absolute url.
Creates an attribute list for the given identifier.
Retrieves the serializable identifier from the result set. If the identifier is not a valid class
Create entries in the table.
create or retrieve class primary key for an object
Update object identity
Saves a request if the request matches the pattern. If the request is not a match
Create exchange matcher for given method and path patterns.
Matches a server web exchange.
Create a text encryptor using the given password and salt.
Create a text encryptor for the given password with the given salt.
Create a text encryptor with a given password and a salt.
Writes the allow and mode headers to the response. If the mode is not the same
Determines the target URL for the given request and response.
Determines the target URL for the given request.
Set the target url parameter.
Retrieves a directory with immediate parent populated.
Build a distinguished name with the given username.
Create shared objects.
Create a new JAAS instance and configure it.
Gets the current date in the format.
Internal parse date.
Adds an object to the cache.
Set the details for the current request.
Get the security name of the subject.
Get web sphere groups.
Build a distinguished name for the specified group.
Throws an exception for the given list of sessions.
Copy the details of an authentication token to another authentication token.
Returns the filters for the given request.
Returns a list of filters for the specified URL.
Retrieves the application context for the given page context.
Get the full distinguished name for a given context.
mock session attributes update strategy
Create an authentication scheme with the given user name and password.
Add a list of filters.
Adds a filter to the service. If the filter is not null the filter will be
Create a new authentication scheme with the given user name and password.
Create authentication scheme.
Create an authentication scheme with the given parameters.
Adds proxy specification to uri.
Prints response body to string.
Create a new config with the given redirect config.
config a encoder with default content charset
object mapper config default object mapper type
Configures the object mapper factory for a given jaxb object mapper factory.
Create a rest assured config with the given log config.
Return a rest assured config with the given session config and the current config.
Create a new configuration object using the specified object mapper.
Make a new configuration for the given json config.
Create a rest assured config for xml config.
Create a new configuration with the same configuration as this configuration but a different configuration.
Create a rest assured config with a header config.
Create a mock config with the specified async config.
Make a new configuration with the same configuration as the current configuration.
Make a new configuration for a multi part config.
Make a new configuration with the same configuration as this one.
Create a new configuration with a matcher matcher that matches the supplied configuration.
certificate auth settings allow all hostnames
Declares a list of namespaces to declare.
xml path config declared namespace.
Sends a request to the server with the given HTTP method and optionally a body object.
Sets the request headers.
Set the proxy scheme to use for http requests.
Set control name.
Adds a header to the multi part spec.
Obtain basic authentication information for the given host port user and pass.
Generate a new NTLM authentication scope for the specified host port user pass work section and domain
Create a new headers object.
Resets the state of the mock server.
Set header to given value.
Build the response object and return it.
Matches a string with the given matcher value.
Matches a string with a comment matcher.
Matches a cookie by a given matcher and returns a detailed match by a matching expiry date.
Matches a cookie by its domain.
Matches a cookie by its path matcher.
Matches a cookie by a matched matcher.
Returns a detailed cookie matcher that matches only http only.
Returns a detailed version matcher that matches the specified version.
Matches a cookie by its max age matcher.
Expect a particular header to be present in the response.
Adds a header to the response that does not match the provided header name and value.
Adds a cookie to the response that matches the provided cookie name and expected value.
Create a proxy specification for the given host.
config number return type if type number return type string return type object
Configures the object mapper to use the given parser type. The default parser type will be
Prints configuration to the given print stream.
Enable logging of request and response if validation fails.
Create http request from http method.
Configures the multi - part file upload with the default control name default file name and default
Adds a mock attribute to the request spec.
Adds a header to the request.
Add multi part.
Add result handlers.
add a parameter to the http client config.
add params to http client config.
config http client factory with multipart mode should reuse http client instance
config http client with multipart mode http client instance
Obtains the result of an assertion at the given path.
Get the int value for a given path.
Get byte at given path.
Get the short associated with the given path.
Get the float value associated with a path.
Get the double value for the given path. If the path does not exist the default value
Get long for path.
Gets a list of generic values at the given path.
Get a map from the context.
Gets the object at the given path and casts to the given type.
Adds a body object to the request.
Add a cookie to the request.
Adds a parameter to the request spec.
Adds a parameter to the request spec.
mock exact param config form params update strategy boolean.
Filter the response to see if the provided matcher matches the provided print stream.
Create new cookies object.
Removes all objects from the source map that are not in the given set.
Inserts explicit bindings into the multimap.
Returns the binding for the given key. If no binding is found an exception is thrown.
Converts a string key into a constant string key.
Cleans up any non - injectable dependencies.
Remove a failed binding.
Obtain the internal dependencies of the given impl.
Creates an uninitialized binding.
Returns an array with all the values of the given parameter injector.
Binds the specified injector to the provider instance.
Binds the specified logger instance to the specified injector.
Checks for a misplaced binding annotation for the given member.
Returns true if method a overrides method b.
Initializes the delegate injector with the given members.
Returns the type of the literal.
Resolves all literal types in the given array of types.
Returns a canonical version of the given type literal.
A utility method to allow the converters to be applied to the built in objects.
Canonicalize a class loader.
Return true if the class loader has the same version as the specified class.
Returns true if the given member is publicly callable.
Returns the key with the annotations attached.
Initializes the t instance and the binding that provides it with the injection points.
Validates all pending injections.
Creates a new instance of the target class.
Creates a scope with the given key and injector.
Returns the current instance of the specified annotation in the specified injector.
Normalize a path.
Returns the unchecked annotation of the given type.
Returns true if annotation is retained at runtime.
Returns the scope annotation of the given type.
Returns the key for the given binding.
Returns the name of the given key.
Initialize the delegate provider.
Add a direct type binding.
Returns the injector for the given injection point.
Checks if the current interceptor class has a scope annotation.
Makes a real map binder that maps the key value type and annotation to the value type
Get the key for a new value.
Throws an exception if the object is not in the expected state.
Replaces all errors in the source object with a string. If the source object is immutable
Returns the module for the given module.
Returns the ass data of the method of the given collection. If the method does not exist
Checks if is type not specified.
Returns true if the constructor has matching parameters.
Returns the set of dependencies for the given constructor point and implementation.
Returns an immutable set with the given dependencies removed.
Returns whether the given factory is valid for the given set of dependencies.
Return the current binding from a new injector.
Overrides the default implementation of the proxy method.
Returns a hint for the missing implementation.
Create a real multibinder with the specified key.
Gets the key for a new item.
Finds the next filter matching the given request.
Returns true if the constructor has at least one inject.
Gets the constructor injection point.
Returns the set of internal dependencies for this injection point.
Returns a module for the given module and annotated method scanner.
Get the annotation for the given method.
Returns the line number for the given member.
Initializes the processor with the given errors.
Validates and canonicalizes a value.
suppress warning for given string
Creates an injector with all the listeners associated with the given type.
Returns an immutable list of the injectors for the given injection points.
Returns a key with the given type and annotation strategy.
Returns a annotation strategy for the given annotation.
Returns an annotation strategy for the given annotation type.
Prunes the stack trace of the given throwable if it is one of the internal classes
Gets the current binding as a string.
Creates a message with the given format and arguments.
Convenience factory method to create a message with a immutable message format and arguments.
Creates a message with the given message format and arguments.
Convert an object to its underlying object type.
Determines whether the given class should be skipped.
Get the object from the module class names.
The main entry point for this example.
Adds the given dependency to the internal state.
Push the state of the given key to the given object.
Returns a new instance of t.
Throws an exception if the dependency of the provider is not null and the construction is not
Process a connection event.
Add a processor to the list of processors for a given type.
get future task result
Throws a throwable if t is a runtime exception or if t is an error.
Register processor for command code
Register a default processor.
Get the processor for a command code.
Attempts to get a url from the url table. Returns null if the table doesn t
Decodes the protocol code from the given byte buffer.
Get all connections from the pool manager.
Scans all connections in the pool. If the current time is greater than the supplied time
Overrides the get and create methods to handle the interrupted and the creation of a connection.
Overrides the default implementation to create a connection and heal.
Remove a task from the pool.
The connection pool needs to have a unique key for it to be healed.
Create a new connection.
Closes the connection to the given address.
Called when the connection is closed.
Closes the channel.
Set an object attribute.
Register a user processor.
Register a user processor.
dispatch to user processor
deserialize and send response if necessary
pre process remoting context
Sends a log message for a specific remote address.
This method is used to log the remote address of an rpc request and the current timestamp.
Process the message using the specified executor. If no executor is specified the default executor will be
Called when a command is received from the remote server.
Convert a bit set to a byte
Create a bit set from an integer.
Adds a reconnect task.
This method is used to send a remote command request to the server.
Filter connections by service status.
Close current select connection and add it to list of connections to service off.
Gets a system property boolean value.
Log a formatted string at info level.
Check if request timeout or not.
Get user processor by class name.
Returns a random connection from a list of connections.
Get a context property or a default if not found.
Returns the value of a property.
Resolves the response object.
Converts a RPC response to an object.
Converts a RPC response to a throwable.
detail error msg from rpc response get error msg from client
create server exception
Prints the current connection information to the trace logger.
Create a new event loop group.
Returns the remote address as a string.
Returns the local address of the channel as a string.
Returns the remote ip address of the given channel or empty string if the channel does not have
Returns the remote host name of the given channel.
Returns the local ip address of the given channel or empty string if the channel does not have
Returns the remote port of the given channel or - 1 if the channel does not have a
Returns the local port of the given channel or - 1 if the channel does not have a
Returns the inet address of the given socket address as a string or empty if the socket address
Adds a connection to this connection group.
Remove and try to close a connection.
Registers a custom serializer for the given class name.
Returns the custom serializer for the given class name. Returns null if the class does not exist
Register custom serializer.
Returns the custom serializer for the given code.
Returns true if the remote address is connected.
Add a write buffer with high and low water mark to the channel.
Returns a frame representing the specified opcode.
Sends a batch of messages to the given channel.
Set the status code.
Set the payload position to the end of the string and set the reason as UTF - 8
Update the payload.
Checks if the handshake state contains the requested protocol.
Check the length of the string and throw an exception if the length exceeds the maximum.
Check the packet size and throw an exception if the packet size exceeds the max packet size.
Generate a unique key for the specified string.
Processes a frame that is either a continuous or not. If the frame is not fin
Process a binary frame.
Log runtime exception.
Process a text frame. If the frame contains invalid data an exception is thrown.
Processes the current control frame. If the current control frame is not valid it is added
Processes a frame and adds it to the buffer.
Process the closing frame.
Check the maximum size of the buffer and throw an exception if the limit exceeded.
Gets the payload from the byte buffer list.
Get the total size of all the buffers in the list.
Creates a handshake builder for a http server.
Creates a handshake builder for http client.
Decode the frames from the given buffer.
Close connection due to wrong handshake.
Close connection due to internal server error.
Generate byte buffer for http response due to error.
Sends a text message to the server.
Resets the context so it can be used again.
Starts a new read thread.
Returns the port of the request. If the scheme is not present returns the default wss
Sends the handshake request.
Set the connection lost timeout.
Stop the websocket connection lost timer.
Start the websocket connection lost timer.
restarts the connection lost timer.
Execute connection lost detection.
Cancel the current connection lost timer.
This method is called when a websocket handshake request is received as a server.
Sends a ping frame to the websocket connection.
Stop the thread and wait for it to stop. If the thread is interrupted while waiting for
Returns the port number of this server or the local port if the server is running on a
Reads more data from the socket.
Accepts a new connection.
Reads a single key from the queue.
Writes a single selection key to this channel.
Start the selector and the server thread.
Return whether or not a single thread should be closed.
Shut down the server.
Returns the socket associated with the given connection.
Broadcasts a data packet to a collection of clients.
Broadcasts a text message to a collection of clients.
Broadcasts a data object to all clients.
Fills the frames map with data from string data and byte buffer b data.
Transfers from one buffer to another. Returns the number of bytes left to the first.
Starts the jpa.
Returns the entity manager for the given name.
Starts a transaction with the specified consumer.
Converts a list of objects to aSeq.
Wraps the arguments to a list if needed.
Get the message for the specified language and key.
Get a message from a list of strings.
Is the language at the specified key?
Convenience method to provide a preferred message for a collection of language components.
Returns a message that matches the specified request header.
Set the language of the given result.
A convenience method for building a bindings object from a collection of modules.
Add bindings to this service.
Add the given bindings to this service.
Return a builder that overrides this method for the given modules.
Return a self - overrides set of modules for this play instance.
Return a self - overrides instance that includes the provided bindings.
Disables given module classes.
Calls a completion stage for the given request.
Get an existing file.
Returns a binding that is declared in the given scope.
Returns a tuple containing the given values.
Creates a 5 - element HList.
Convert an execution context to an executor.
Creates a jpa persistence unit with the given parameters.
Returns a jpa representation of the given strings.
Creates a new jpa from the given map.
Create a string flow instance with the given string as callback and not used as a string.
Create a flow that returns a byte - string representation of the given json node.
Adds a mapped validator for the specified key.
Returns a new instance of the specified constraint.
Gets a method matching an accessible method name and parameter types.
Override this method to handle a client error.
A bad request stage.
Displays a forbidden error message for the current request.
Override this method to handle a not found response
A future that completes when the server has encountered an error
Log a server error.
Returns a useful exception for the given throwable.
Shows a specific error message for a dev server.
Shows an internal server error message.
Build doc handler from resources.
Builds a documentation handler from a directory.
Build doc handler from directory and jar file.
Builds documentation handler from a directory and a jar file
Build documentation handler from a jar file
Consumes the data of the stream as a string.
Create http entity from content object.
Construct a strict http entity from a string content.
Create a chunked object from the given data and content type.
Set the status code of the given json node and write the content to the given status code
Send status code of given json node to server.
Set the response status code and content.
Send HTTP response status code with stream content.
Returns the status code of the given content and file.
Finds a user by id.
Returns the preferred language of the given collection of language components.
Call the unique method
Make a call with a fragment.
Returns the absolute URL for the given request.
Converts a http. request to a web socket URL.
Create an abstract function that returns the boxed unit of a connection.
Create an abstract function that returns a single value.
Create a new http server for the given mode port and function.
Converts object to json.
Convert a JSON node to a value
Parse json node from string.
Parse json node from stream.
Create a relative path from start and target string.
Returns the canonical path of the given URL.
Returns displayable constraint for given set of constraints.
Returns the displayable constraint for the given constraint.
Timeout the completion of the specified stage by the specified amount and time unit.
Parses a given cron expression and returns the next valid date.
Returns next cron interval for given date
Creates a ws client with the given configuration and a http cache.
Returns a guice application builder based on the provided application context.
Displays a todo view.
Sets the value of the given key in the session context.
Adds a string value to flash.
Add an instance to the binding key.
Adds an annotation to the binding key.
Converts the wrapped object to a binding of the given class.
Returns a binding that has the same type as the supplied provider.
Create a binding from a supplier.
Returns the value to which the specified key is mapped or null if the key is not mapped
Create a binding from the underlying class to the provider class.
Gets a list of available langs for the application.
Create a language sequence from a list of available langs.
Create a new evolutions reader from a map of string to a list of evolution
Get a reader for the provided evolutions using a default reader.
Remove all the evolutions with the given schema from the database.
A guice application builder that uses a custom configuration loader.
guice application builder with module loader
Create a guice application based on a set of modules.
Create a guice application based on the provided modules.
Build a guice application based on the provided modules.
Load the application builder with the given bindings.
Build a guice application builder.
Encodes the cookie value into a base64 string. If the cookie value is null or
Gets the entity manager.
Get the stack of entities for the current thread.
Push or pop an em onto the stack. If the stack is empty an exception is thrown
bypass with function.
Create a bypass strategy with a single flow.
Convert error message arguments to a list of objects.
Fill a field with the specified value.
Returns a list of validation errors.
json node errors as json.
Returns an optional value with the specified key.
Create a dynamic form with the data from the request and the values from the map.
Converts a string into an object of the given class.
Converts a string to a type.
Print a string.
Prints a string representation of the given field.
Print a string value.
Registers a converter that converts string to a generic type.
Registers a formatter for the given type.
Encode the cookie as a string.
Given a path and an object node return a list containing all the nodes matching the path and
Convert a java. util. List to a slice.
Converts an array to a immutable list.
Wraps an array in a safe varargs form.
mapped web socket acceptor to json.
Create a new web socket that has either a result or a flow.
Get the primitive promotion cost of the two classes.
Returns the total transformation cost of the given executable and its parameter types.
Get object transformation cost for the src class and dest class.
Gets the message at the specified key.
Gets the message at the specified key.
Create a database with the given driver and url parameters.
Creates a parallel sorter for an array of objects.
Sorts the elements in the specified range [ lo hi ) using the given comparator.
Sorts the elements in the specified range [ lo hi ) using the given comparator.
Invokes the method.
Loads a single argument.
Visits a field of the specified type.
Push a zero or null to the stack.
Unbox the label or null.
Generate code to process an array.
Generate code to represent a null value.
Resolves all class reader found.
Filter the constructors of the class sc and return true if they are present.
Set the class to be the superclass of the specified class.
Returns the value of a field with the specified names.
Adds the signature and exception types of a method.
Returns the cardinality of this set.
Set naming policy.
Finds all methods with the given names and descriptors on the given type.
Resolves a string to a path.
Reads a string from a file.
Sets the host header. Overwrites existing header.
Creates a new http request object with the given method and destination URL.
Create a http request to connect to a given destination.
Make a http request to a given destination.
Make a http request to a given destination.
Make a http put request.
Makes a PATCH request to the given destination URL.
Make a http request to delete a resource.
Make a http request to a given destination.
Make a http request for a trace request.
Create http request options with destination string.
Make a http request for a given path
Makes a http request for a number of cookies.
Adds a query parameter.
Adds a map of query parameters to a http request.
Makes a http request that contains a string representation of this request.
Returns a string representation of the given query string.
Returns the host part of the URL.
Set the authentication header with the given username and password.
Set the value of the host header to the value of the default.
This implementation overrides the buffer implementation in order to perform a full request.
Remove a range of values in the given handler.
Returns the number of exceptions in the exception table.
Collects all action interceptors.
Collects all filters.
Collect all action results.
Collect all mappings from all mappings.
Set a simple property on the bean.
Retrieve the property with the specified name from the specified object.
Extract this reference.
Return the print writer.
Adds an object reference.
Get object reference.
Looks up an object by its reference.
Gets the descriptor for the given table.
Finds a descriptor by column ref.
Returns the alias for the specified table.
Register a table reference.
Lookup a descriptor for a table.
Registers a hint.
Overrides the default serialization method to add a value to the json context if the value is
Inject attribute values to the supplied targets.
Inject parameters from the request to the target.
Injects uploaded files to specified targets.
Convert a property name to a column name.
Convert column name to property name.
Apply to column name.
Converts an object value to the type specified by the parameter index in the prepared statement.
Returns the first non - null value converted to the destination type.
Gets all the values of the wrappers.
Resolves a wrapper class by its name.
Create a new instance of the wrapper class.
Converts windows path separators to unix path separators.
Gets the path.
Splits a filename into its parts.
Construct a relative path from the given target string and base path.
Registers a component to the web app.
Registers a custom action config consumer in the web app.
Starts the web app.
Registers all components.
Exclude one or more jars from scanning.
Include one or more jars to the scanner.
Includes entries from the list of included entries.
Excludes the specified entries from the excluded list.
Scans a jar file for resources and classes.
Scan class path.
Gets the bytecode signature of a class.
Scans a list of files and adds them to the list of files to be scanned.
Scans all jar files and classes files.
Override this method to create a new jtx transaction.
Returns the default scope or the request scope if the scope class is null.
Returns the madvoc scope of the given type or creates one if none found.
Registers a madvoc scope consumer for the given scope type.
Convenience method to prepare a token for use in a session.
Assure the size of the given token set is at least the number of entries in the
Checks if the specified string is in the session s attributes.
Creates a copy of bean from source object.
Makes a copy of this bean.
Overrides the visitor to set a property on the destination object.
Override the init method in order to register the entity and the table to the template data.
Resolves a scope for the given type.
Register a bean definition with the current wiring mode or the default wiring mode.
Register a bean definition.
Removes a bean from the context.
Resolves bean names for the given class type.
Register a constructor injection point for a bean type.
Register a property injection point for a bean definition.
Register a set injection point with an existing bean definition.
Register a method for injection.
Registers init methods for a bean type.
Register destroy methods.
Register a provider.
Register a provider.
Iterate for each bean type and invoke consumer for each.
Adds the parameters from the given map to the configuration.
Intercepts an action request and returns the result.
Resolves the platform version.
Push an int onto the stack.
Throw an exception if the argument index is out of bounds.
Gives the field name of the given string with the given index.
Returns a method name for a given method index.
A convenience method to load method arguments.
Loads method arguments from the method visitor.
Loads method arguments from the method visitor.
Loads the method argument of the given method by the given visitor.
Store the argument of a method.
Generate code to store a value on a local variable by calling the appropriate visit method.
Create a new key for the given method name description and class name.
Makes a new array of the given component type.
Stores the contents of an array of the given component type into the given visitor.
Extract encoding from content type. If no encoding is specified the default encoding is returned.
Gets whether or not the specified flags are empty.
Resolves the auth bearer token from the request.
Request authentication for the given realm.
Download a file and add it to the response.
Set the content type and size of the response.
Get all cookies with the given name.
Read the request body into a string.
Read the request body from the input stream and return it as a string.
Stores a context path in a page context and a context path variable.
Stores a context path variable in a servlet context.
Gets the value of a parameter of a http servlet request.
Prepare parameters.
Copy params to attributes.
Invokes the fragment body throwing an exception if an exception occurs.
Render the body of a jsp fragment to a char array.
Render the supplied jsp fragment as a string.
Invoke all init methods of the bean definition with the specified invocation strategy.
Call all destroy methods of this bean.
Creates a new bean instance.
Inject params if implicit param is true.
Rewrite a request for a specific action path and HTTP method.
Adds a header to the header list. If the header list is empty it is added
Put a property into the properties map.
Set the base property of this PropertyMap.
Add a property to the profile. If the profile already contains a property with the same name
Get a property from a profile.
Resolves a macro with the given value and profiles.
Extract the target map from the list of profiles and the given wildcard patterns. If the target
Returns the index of the streamtoword of the specified number of bytes from the specified
Hashes the given password using the given salt.
Check whether the plaintext string is equal to the hashed one or not.
Copies all data from the input stream to the given output stream.
Copies the specified number of bytes from the input stream to the specified output stream.
Parses the action definition for the given action method and action definition.
Resolves the configuration for the given action annotation values.
Detect and register alias.
Read action interceptors.
Read action filters.
read package action path.
Read action path string array.
Returns the alias of the method from the annotation values.
Creates an action instance.
Commits the last modified time of the request if the header is present in the last
Returns the result of applying a before or after a given class to a target class.
Inject target into proxy.
Visits an annotation of the given type.
Resolves the real name of the given JSON object.
Resolve the real name to the real name
Looks up the type data for the given class.
Looks up the type data for the given class.
Find subclass type data.
Resolves a json name for the given class type.
Resolves the real name of a class.
Returns the content of the file.
Copy bootstrap methods
Set the major version and class name.
Puts a constant pool into the output.
Put the bootstrap methods into the given byte vector.
Adds a constant field ref to the symbol table.
Adds constant reference to the symbol table.
Adds a constant to the constant pool for the given tag and name.
Adds a new constant reference to the constant pool.
Adds a constant value to the constant pool of the specified tag. If the value is
Adds a new constant element to the hash table if it is not already present.
Adds a long or double to the constant pool.
Adds a new entry to the hash table if the value is a long or double.
Adds a constant of the given name and type to the constant pool and returns the index
Adds a constant name and type to the symbol table.
add a string to the constant pool
Adds a string constant to the symbol table.
Adds a new constant method to the symbol table.
Adds a dynamic reference to the symbol table.
Adds a bootstrap method to the symbol table.
Adds a dynamic reference to the constant pool.
Adds a dynamic reference to the class.
Adds a string to the constant pool.
Adds a string reference to the constant pool.
Registers a bootstrap method.
Adds a merged type to the set.
Returns the hash code of the specified string.
Remove all entries from the queue.
Get all values with the given name.
Returns an iterator over the elements in this list.
Returns a list with all the key - value pairs in this map.
Grows the buffer by a given amount.
Appends a range of characters to the specified buffer.
Visits an annotation of the specified type.
Called when the end of the method has been called.
Creates the first chain delegate.
Create the first chain of methods for a given target method data tmd.
Parse a string representation of a path.
Add a field to the current path.
Configure servlet context.
Execute the method and return the proxy object.
Returns a field descriptor array with all the fields sorted by name.
Override this method to provide a custom bean definition.
Convert jtx transaction mode to db transaction mode.
Reads a property from the given object.
Put all the objects in the specified map.
Appends the contents of the given buffer to this buffer.
Write the object list to writer.
Copy all objects to the output stream.
Writes the content to an output stream.
Returns the string mapped to the given key. Returns null if the key does not exist in
Returns the integer value for the given key.
Returns the value associated with the given key as a long.
Get the double value associated with a key.
Returns the float value associated with the key.
Get a value from the map. If the map does not exist a json object is created
Adds a string value to the object under the given key.
Use folder.
Retrieves messages matching the supplied filter from storage and executes consumer with the filtered set of flags
Sets the flags for the received email based on the received message number.
Closes the given folder if it is opened.
Look up a named parameter by name.
Validates this action against the given profiles.
Adds a violation.
Set mime type and extension for data.
Use this method to specify download file name and mime type.
Set target object for input stream.
Set the target class.
Set the target class.
If the input stream is null throw a proxetta exception.
Create the class and its bytes.
Create a new instance of the class.
Dumps the proxy class in the debug folder.
Adds a sender to the email address with the given personal name and from address.
Adds an address to the email address.
Adds a new recipient address with the given personal name and to address.
Add a reply to the specified email address.
Adds a cc recipient address.
Sends an email message with the specified text using the specified encoding.
Sends an HTML message.
Adds a header with the specified name and value.
Returns the value of the property with the specified name or the default value if the property is
Returns the boolean value for the specified name. If the name does not exist the default value
Returns the int value for the specified name. If the name does not exist the default value
Returns the long value for the specified name. If the name does not exist or the value
Get the resolved parameters of this method.
Adds a key value pair to the current path
Looks up a path for the given alias. If no path is found null is returned.
Resolves an alias for the given string value.
Resolve a string value to a result path.
Resolves a string alias for the given result path and value.
Get the last index of the dot of the specified string.
Get the last index of the dot after the specified string.
Returns the index of the dot after the specified string.
Resolve schema name.
Resolve column descriptors.
Initializes the cache with a key and a tweak.
Calculate a mix of x and y with a given depth of d.
demix d by j and d % depth of d
Schedules a key for the specified number of threads.
Initialize the hash table with the given message key and the given reflection key. The reflection key
Encrypts a block of bytes.
Converts an array of bytes to an array of longs.
Remove any bounding string between s and e.
Returns the full path of the method.
Writes the contents of a file to a stream using the default compression.
gzip a file
Un gzip a file
Creates a list of strings from a ZIP file.
Unzip a zip file to a destination directory with a set of regular expressions.
Adds a file to a ZIP output stream.
Create a zip entry from the input stream and the path and comment.
Returns the field descriptor for the field with the given name and optionally declared.
Returns the property descriptor for the given name.
Set request bundle name.
Set session locale.
Retrieve the current locale of the session.
Filter the parameters for a bean name.
Adds one or more profiles to the props.
Reads a big endian long from the given byte array at the given offset.
Reads the contents of the input stream into a byte array.
Reads a label.
Gets the bytecode offset for a type annotation.
read bootstrap methods attribute int array.
Returns an array of descriptor objects representing all the non - public constructors declared by this class.
Returns the descriptor of the first constructor with the given arguments. Returns null if none of the
Get the map from the servlet request.
Create a map for the specified request.
Converts an object to an array of longs.
Override this method to initialize the servlet.
Search for a file by its path.
Search for a file by its path.
Applies the given include patterns to the current file.
Searches for files that match one of the given regular expressions.
Adds a file to the path list. If the path list is null then the file
Returns a list of all files in the directory.
Prepare the list of files to be processed.
Returns an iterator over the elements in this stream.
Resolves the wiring mode of a bean.
Resolve bean name.
Return the current writer.
Get the output stream.
Returns the class name of the current element.
Returns the descriptor of the given constructor.
Returns a descriptor of the given type for the given argument types.
Returns the descriptor of the given method.
Appends descriptor to string builder.
Returns the number of elements in the array.
Gets the number of arguments for the given method descriptor.
Set the status to rollback only if the status is active. If the status is already active
Call either commit or rollback all resources.
Rollback all resources.
Request a resource.
Pop the name of this symbol.
Write a string.
Converts the specified character to unicode and writes it to the output stream.
Write a character as JSON.
Set the logger level to the name of the element with the given log level.
Sets the start tag and length of the region.
Checks if the given string is containing the given string.
Registers a function as a pseudo function.
Looks up a pseudo function.
Overrides the visitor to initialize the proxy.
Visits an annotation of the specified type.
Makes a static init block.
Generate the proxy method for this class.
Process all super methods.
Returns the index of the last occurrence of num in the specified range.
Add the given string to the current string.
Create a new instance of the specified class file and replace it with the specified instructions.
Return a copy of the attribute list.
Registers a class type with the context.
Looks up the type of the given class.
Lookup sql type.
Create a proxy with the given parameters.
Create a proxy with the given parameters.
Create a new http proxy with the given parameters.
Returns the total number of transactions held by this block.
Get the total number of transactions with the given status.
Associates the given transaction with the current transaction.
Begins a transaction by throwing an exception if the source transaction is read only and the
Lookup resource manager.
Create a proxy instance for the specified class.
Append a method name to the path.
Pad a string to the left with a given size.
Convert string to camel case.
Returns a paragraph of a string with the specified number of characters filled with whitespace.
Convert tabs to spaces.
Escapes a string for use in an HTTP call.
Unescapes the given string.
Get the bean of the specified type.
Get bean t.
Initialize bean definition.
Invokes the provider method if the provider method is present.
Add a bean with the specified wiring mode.
Set the property value of bean.
Get bean property or throw exception if not found.
Shuts down the scope manager.
Returns an array containing all the parameters resolved for the specified method or constructor.
write body content into jsp writer
Resolves value.
Ends the document by removing tags that are explicitly closed.
Override this method to create your own elements.
Removes the last child node that is not present in the parent node.
Get the query string.
Returns the action class name for the given object.
Calculate to.
Replaces all occurrences of sub with with with with with.
Replaces the specified sub - character with the specified with.
Replace all occurrences of the specified sub with the specified with.
Replace the first occurrence of sub in s with with with with with.
Replaces the first occurrence of sub with with with with with.
Replaces the last occurance of the given string with the given string.
Replaces the last character of the specified string with the specified character.
Removes the specified string from the specified string.
Returns a new string with the specified character removed.
Returns true if all strings are empty.
Returns true if all strings are blank.
Converts an array of strings to a string.
Changes the first character of the given string to upper or lower case.
Returns a string containing only whitespace characters.
Compress a string by a single character.
Returns true if the specified string starts with the specified ignore case character.
Returns true if the specified string ends with the specified char.
Count the number of occurrences of sub in source string ignoring case.
Returns true if the specified string array equals the specified string array ignoring case ; false otherwise.
Returns the index of the specified whitespace character in the specified string.
Strip a single leading char from a string.
Strip trailing char from a string.
Strip a single character from a string.
Strip to char.
Strip all occurrences of the specified character from the specified string.
Crop all the strings in the array and place the result in the new array.
Trim whitespace from left.
Trims the right half of a string.
Returns the index of a region of a given string between the left boundary and the right boundary
Join a collection of strings separated by a character.
Joins an array of objects into a string.
Convert string with given charset to new string with given name.
Checks if the character at the given index is equal to the given char.
Surround the given string with the given prefix and suffix.
Appends the given prefix to the given string if it does not already start with the given
Appends the given suffix to the given string if it does not already end with the given
Cut to index of string.
Cut a string from the index of the first index of the second.
Cut the prefix of a string.
Cut the suffix of the string if it ends with the given suffix.
Cut the given string with the given prefix and suffix.
Inserts the specified string at the specified offset.
Repeats a string by a given number of characters.
Reverses a string.
Returns the max common prefix of two strings.
Returns the common prefix of the specified strings.
Shorten a string by removing leading and trailing whitespace characters.
Converts a string to upper case using the given locale.
Remove quotes from a string.
Convert byte array to hex string.
Gets the bytes of a string.
Detects a quote character in a string.
Visits an enum field or method.
Visits an annotation of the given type.
Register a new type of entity.
Registers an entity in the db.
Remove an entity descriptor.
Create entity instance.
Set the target interface for the wrapper.
Inject target object into wrapper object.
Lookup all property descriptors for a given class.
Detect database and configure db oom.
Closes the GZIP output stream and sets the closed flag to true.
Write byte to the output stream.
This method is called by the filter chain when a request is received from the client.
Gets the mime - encoded name.
Returns a byte array of the same size as this byte array.
Write to file.
Copy data from input stream to output stream.
Appends the given string argument to the given string type.
Prepend an argument to the end of the string.
Returns the change of the given string type to the given string type.
Override text to strip any whitespace from the current position.
Registers a type converter.
Looks up a converter for the given type.
Selects nodes matching the supplied query.
Select a collection of selectors.
Selects a set of selectors and adds them to the supplied list.
Selects the first node that matches the query.
Walks through the descendants of a linked list of nodes and adds the result to the
Recursively walks the node tree starting at the given root node.
Adds a node to the select list and adds it to the result list.
Unpacks a char array from a string.
Checks if the read buffer is null and refills it with a boolean.
page data t.
Remove the first instance of the sql that is not in the sql string
remove to from a string
Remove the last order by.
Decodes a string.
Detect entity name in string array.
Builds the SQL to add the column to the sql.
Builds the sql for a query that returns a page of results.
Resolve all column names and properties.
Find column descriptor by column name.
Find a column descriptor by its property name.
Gets property name.
Gets column name by property name.
Get id value.
Set id value for object.
Gets the key value of an object.
Append a string to the band.
Set the string at the specified index.
Expands the capacity of the internal array.
Calculates the length of the array.
Create message for bean definition.
Create a scoped proxy instance.
Initializes the map.
Returns boolean indicating whether the given file is a file.
Watch a file or directory and create a new one if it does not exist.
Starts the timer and schedule a watch task to run at the specified interval.
Process a file change event.
Add a new enumeration to the list of enumerations.
Returns the number of bytes that would be needed to represent the given field.
Writes information about this field to the given byte vector.
Creates a target instance for a given value.
Writes a property value to the injection point.
Decorates a single page.
Parses a single page of content.
Writes decorator page content to writer.
Writes the region tag of a decora to a writer.
Start the server.
Runs the specified process and waits for it to finish.
get store url.
Create a gzip response stream.
This method is called when the template data object has been initialized. In this case the hint
Append column name.
Adds a new rule to the list of rules.
Applies the flag to the flag value.
Process includes.
Checks if the value should be included or not.
Gets the pseudo class name.
Add all elements in the specified collection.
Find the insertion point for the specified element.
Bind an annotation type to an action config.
Registers a new action configuration.
Returns the action configuration for the specified action type or annotation type.
Adds the supplied consumer to the supplied action config.
Sets up the system mail properties.
Perform a validation within the context specified by the passed validation context.
Find the last table node.
Fixes the elements in the roster.
Registers the session beans for the http session.
Return the session beans associated with the given session.
Initializes the proxy with a new instance of a class.
Adds a method init method.
Registers the bundle with the bundle manager.
Adds the operator to the section.
Add the given operator to the profile.
Add the given operator to the given string array.
Returns the class name for the specified typed description.
Typeref2 name.
Convert a class type to a typeref type.
Adds all consumers to the collection.
Create a new collection of the given length.
Create a new collection with the specified number of elements.
Convert object value to collection.
Convert collection to collection.
Adds a line number to this sequence.
Auxiliary method to allow the visitor to visit line numbers and the other line numbers.
Puts the value associated with the given flag to the given vector. If the flag is
Adds a forward reference to the list.
Marks a subroutine.
Compare the specified digits from the specified strings.
Fix accent.
Puts a byte into the vector.
Put two bytes at the end of the vector
Put short value into the vector.
Puts a short value into the vector.
Put a short value into the vector.
Put an int into the vector.
Put short values into the vector.
Put a long into the vector.
Puts length bytes into the byte array starting at the specified offset. If the byte array
Enlarges the data array by a given size.
Authenticate user via http session.
Authenticates user via token.
Authenticates user via basic auth.
Find the default message for the given locale and key.
Returns the resource bundle with the given name and locale.
Returns the k - th element of the given array at the given index.
Sets the id of the specified entity to a new value.
Saves an object to the database.
Update all objects of the given type.
Update a property of an entity
Update a property of an entity
Find an entity by its id.
Find entities by property name and value
Find one entity matching the criteria.
Delete an entity by its id
Delete an entity by id
Counts the number of instances of a given type of entity.
Increase a property of an entity.
Decreases a property of an entity.
Find all the entities related to the given source object.
Get all entities for target.
Removes all entries from the cache.
Overrides the default set implementation.
Sets the value for the specified key. If the key does not exist the previous value is
Removes the specified object from this map.
Get the current stack trace.
Get the stack trace of the throwable.
Get the stack trace of the throwable chain.
Gets the exception chain as an array.
Convert exception stack trace to string.
Prints the stack trace of the specified exception to a string.
Builds a message with a message and a throwable.
Unwrap a throwable.
Register the class scanner as a consumer.
Registers a component with the Madvoc container.
Get the system class loader.
Get a stream from a resource URL.
Get resource as stream.
Gets the class as stream.
Get class input stream.
Add a string to the route and return the new route chunk.
Find or create a child to the given value.
Parses all parameters in the request. If the request is a multipart request this method will
Converts an object to a collection.
Invokes setter on bean property value.
Set the value of a specific component of an array.
Create a new instance of a bean property.
Extracts the type of the property getter.
Stop the current request by getting the session from the http session and adding the cookie to the
Start the authentication process.
Converts a local date to a local date.
Converts a local date time to a calendar using the gregorian calendar API.
Defines a proxy for the specified class.
Add a check to the array.
Resolves a validation context for the specified class.
Perform annotation checks on all properties of the specified target class.
Collect annotations from a property.
Collect validation annotations.
Copy properties of given annotation to the check object.
Encodes the specified uri part of the source string using the specified encoding and part of the
Encodes the given URI string with the given encoding.
Convenience method to encode a scheme.
Encodes the host component of a URI with the given encoding.
Encodes a port with the given encoding.
Encodes a URI path with the given encoding.
Encodes a URI query string with the given encoding.
Encode a query param with the given encoding.
Encode a URI fragment with the given encoding.
Returns a hash map for each property in the class descriptor.
Returns all property descriptors in an array.
Get a list of cookies from the response
Unzip this response to a gzip response
Closes the http connection.
Allows override of scope in a thread local scope.
Encrypts an array of bytes.
Decrypts an array of bytes.
Convert map to bean.
Generates a list of objects from a map.
Sets the value of a property on a target object.
Allows map generic parameters if the key is a string and the value is an instance of
Compares this column descriptor to the specified object.
Set a header that will be used as default when no value is given.
Sends a request to the server.
Sends a request to the connection provider. If keep alive is set to true the request
Add default headers.
Read cookies from http response.
Adds cookies to the http request.
Sends a message to the specified email.
Set the subject of the message
Sets the sent date of the message. If the date is null a new date is created
Sets the headers associated with the email with the data object.
Set the people to the given email with data.
Sets the recipients attribute of the messaging engine.
Add message body data to email.
Sets the content of the part.
Create mime body part from attachment.
Get content type from data header.
Saves the result set.
Close all result sets
Close the statement and return the sql exception.
Close all open resources.
Set the fetch size
Set the maximum number of rows in the result set.
Execute update.
Execute count query or prepared statement.
Gets the keys of the generated columns.
Returns the query string of the prepared statement or the callable statement. If debug logging is enabled
Create a proxy instance.
Returns a collection view of the given iterator.
Returns a stream of the elements returned by the supplied iterator.
Compares two elements.
Sets the default wiring mode.
Prints a message and the throwable at the given level.
Gets the caller class.
Shorten the class name.
Exclude a set of types from serialization.
Serializes the given object to a JSON context.
Serializes an object to a string.
Clones an object via serialization.
Writes an object to a file
Reads an object from a file.
Writes an object to a byte array.
convert byte array to object
Returns a string array with the names of the mapped types for the specified entity types. If
Create types table names.
Read column value.
Add the specified objects to the cache.
Returns a list of provider definitions for the specified type and method.
Apply to table name.
Returns whether a connection is valid or not.
Displays target in view.
Locates the target for the given action request and path. If the path ends with the
Gets the current writer.
Gets the response s output stream.
Writes char array to response.
Sets content type.
Print string to output stream.
Login via basic auth. If no session is created create a new user session and start the
json result token.
Perform basic authentication.
Construct a file object from url.
Creates the given directory if it does not already exist.
Creates a new directory if it does not already exist.
copy file if exists and is directory
Copies the given directory.
Moves file to dest dir.
Moves the src directory to the dest directory.
Delete all files in a directory and all subdirectories.
Reads a set of chars from a file using UTF - 8 encoding.
Reads the contents of the given file into a char array with the given encoding.
Write chars to file.
Write string data to file.
Append string to file.
Read a number of bytes from a file.
Write a number of bytes to a file.
Append len bytes to dest file
Copies a file to a directory.
Delete a file or directory.
Creates a new file with the given prefix and suffix in the given temp directory and adds it
Returns true if the number of bytes in the file is binary.
Copy directory.
Copy a file to another file. If the dest file does not exist it will be created
Prints the usage of a command.
Returns the action method with the given name.
Registers an action method on an action class by its method name and action definition.
Register a path alias.
Moves the iterator to the next available boolean.
Create a sequence of characters from a char array.
Execute the proxy method.
Return true if all characters in the input array are upper case
Returns a char sequence of the specified range of the input char array.
Returns an array of URL objects for the specified class loader and module.
Adds a to - through relationship to the email address.
Registers a serializer for a class type.
Returns the serializer for the given type. If no serializer for the given type exists the default
Perform multipart request input stream parsing.
Returns the first value of the parameter with the given name.
Get parameter values by name.
Get the value of a file request parameter.
Get a file from the request.
Override this method to initialize filters.
Parses a string and adds it to the sql builder.
Find the end index of a macro.
Count the number of escaped characters in a string.
Build a query string from a multi map.
Create a multi map from a query string. The key is the query parameter and the value
Prepare header parameter name.
Extract media type from content type string.
Generates a string representation of the given node.
Generates the inner HTML of the given node.
Configure with a servlet context.
Resets the context.
Set lazy = lazy.
Replace the class with the mapped type for the path.
Parses the given string as a list of components.
Parses the given string as a map of key - value pairs.
Resolves a lazy value.
Skip object.
Parses a string.
Returns a string representation of this object s content.
Converts the input to a unicode character.
Un quoted string content.
Parses a number from the input stream.
Returns the object represented by the array content.
Create an empty constructor.
Create a simple method wrapper.
Resolve the raw type name for the given type.
Returns a reference for the given value. If the value is null or empty the default reference
Returns an array of references for the specified parameter. If no references are found an exception is
Reads references from annotation on method or constructor.
Builds the bean references.
Builds a bean references object.
Remove all duplicate names.
Convert references string array to references array.
Convert ann value to references array.
Runs the provided code and passes it to the supplied consumer.
Returns the method with the specified name declared by the specified class.
Finds a constructor that is assignable from the given parameter types.
Resolves all interfaces for the given type.
Compares two class arrays for equality.
Force access to an accessible object.
Instantiates an instance of a class.
Get all superclasses of the given type.
Returns the child class of the given instance.
Returns the jar file of the given class.
Causes the current thread to sleep for the specified amount of time.
Causes the current thread to sleep for a long time.
Wait for an object to become available.
Create a daemon thread with the specified name and priority.
Get the current value.
Visits a parameter of this method.
Visits an annotation of the given type.
Visits a field instruction.
Visits a method.
Visits a dynamic method.
Visits a jump method.
Visits a multi - dimensional array with the given number of dimensions.
Visits a try - catch block.
Convert to a writer.
This implementation copies data from the input stream to the output stream.
Moves to the next element.
Moves to the next.
Joins the given arrays with the current component type.
Join an array of arrays.
Resizes an array to a new size.
Appends an element to a new array.
Remove the element at the specified offset of the specified class from the specified array.
Returns the index of the specified value in the array or - 1 if the array is empty
Returns the index of the specified object in the array or - 1 if the object is not
Returns the index of the sub - range of the given array.
Enable dom mode.
Parse the given content into a document.
Parse the DOM tree using the given parser.
Compute the max stack and local.
Ends current basic block with no successor.
Collects the occurrence of an attribute into a list of occurrence attributes.
Inject a target object into the current object scope.
Register a pseudo class.
lookup the pseudo class for a given string pseudo class name
Invokes action request.
Returns all property names for the given bean type.
Visits all properties in the source object. If any property is not in the declared object
Sets the property name to the rule and returns true if the property name matches the rule.
Resolves the injection point for the given class.
Reads all init parameters from the configuration and adds them to the target object.
Sends a bundle file to the client.
Lookup the bundle with the given id from the list of mirrors.
Look up a gzip bundle by file name.
Registers a bundle with the strategy.
Computes a SHA - 256 hash of the given string.
Create a bundle and add it to the bundle file list. If the bundle does not exist
Clears all files and mirrors.
Fixes urls in content to relative urls in src attribute.
Adds a column to the table model
Create table ref name.
get a db session
Converts an object to a single element array.
Parse the given signature and return a map of all the string - > string - > the
Resolves a class for injection point.
Checks whether the given property type matches the ignored property types.
Opens a connection for a query.
Opens a new transaction and sets the auto - commit and read - only properties to the
Close transaction.
Commits a transaction.
Rolls back a transaction.
Creates a new properties instance from a file.
Create properties from string.
Load string from properties
Finds all properties that start with the specified prefix and optionally strips the prefix from the
Creates a properties file from the classpath matching the supplied template.
Gets the value of a property from a map.
Resolves all variables in the given properties object.
Resolve a map of properties to a string.
Resolves the scope for the specified method name.
get transaction mode by method name and argument types
Register annotations.
Read transaction annotation values for method.
Overrides the acceptance of a node with a predicate to determine if the node should be
Checks if the element of the current node matches the element of the given node.
Returns true if the node should be included in the current result.
Unescapes the specified string if it is present.
Builds a list of packages based on the version number.
Clones the node t.
Detach from parent node.
Adds a child node to the node list.
Inserts a child node at the specified index.
Insert a new child before the specified node.
Insert a child node before another node.
Insert a new node after the specified node.
Insert a node after another node.
Removes all child nodes from this node.
Returns the first child node whose name matches the given name.
Returns an array containing all of the nodes that satisfy the given predicate.
Checks whether the node is a child of this node.
Initializes the child element nodes array.
Initializes sibling names.
Initializes the child nodes array.
Changes the owner document of the node.
Returns the previous sibling node with the same name as this node.
Returns the text content of this node.
Returns the textual representation of this element as HTML.
Visits all the children of the given node using the given visitor.
Get the CSS path of the node.
On decora tag.
On id attr.
Defines an decora tag.
Add a proxy aspect.
Adds a package to the package list.
Add a mapping to the action class s root package.
Find the root package for the specified action path.
Resolves a validation message from the violation instance.
Remove duplicate names.
Adds a pattern to the props file.
Performs consumer for each target.
Traverses the targets for a given injection point and calls the consumer for each target.
Walks through all the targets for a given injection point and calls the consumer for each
Extracts the parameter values from the current object.
Make the specified target action target with method parameters.
Create action method argument.
Notifies listeners that a session has been created.
Handles session destruction.
Adds a value to the array.
Adds all the elements of the given json array to the list.
Remove the element at the given position and return it as a json object.
Resolves the target for the given result value.
target not found.
Converts an object value to a string.
Applies the action filter to the router.
Gets the pseudo function name.
Resolves property injection points for the given class type.
Create tcp socket.
Returns the number of attributes in the attribute list.
Returns a new hash set that contains all the results of the action execution.
Returns true if the given character equals one of the given character sequence.
Returns the index of the first character in the given sequence that is equal to the given match
Returns the first index that is equal to the supplied match.
Adds a number of arguments to the command line.
Adds an environment variable to the command line.
Runs the process.
Invokes the supplied listener method on the supplied object with the specified type.
Copies the values of the given frame.
Get abstract type from descriptor.
Get the input frame and store it into the output frame.
Gets the local index of the given local variable.
Sets the local index of the given abstract type to the given value.
Push an abstract type onto the stack.
Pushes a symbol table element to the top of the stack.
Pops a given number of elements off the stack.
Pops the given number of arguments off the stack.
Add an initialized abstract type to the initialized list.
Get the initialized type for the given abstract type.
Put abstract type into the given vector.
Prune expired objects from the cache.
Visit a module.
Visits an outer class.
Visits an annotation of the given type.
Get the current thread session.
Close the current thread session.
Create the execution array.
Invokes an action method on the target object.
get request body from http request
Returns the first item index of a page.
Returns the index of the first item in the page specified by the page and total items.
Returns true if the specified value matches this predicate.
Converts an array of characters to a raw byte array.
Returns the index of the first element of the source array that does not match the given match
Resolves the name of the given node.
Resolves the name of the given attribute.
Load props.
Load props from a file.
Load props from an input stream.
Loads properties from the specified map.
Load the properties of the given map with the given prefix and append the given string as the
Load props from the classpath matching the given patterns.
Returns the value for the given key from the active profiles. If the key does not exist
Set a value for a profile.
Extract props.
Extract props.
Extract sub properties.
Map the properties of the inner object with the given prefix.
Adds all entries of the given map to the current string. If the map does not
Resolves the active profiles.
Gets all profiles.
Get all profiles for a given property key name and wildcard.
Add a property injection point.
Add a set to the injection set array.
Add a method to the class.
Adds a point to the list of points to be initialized.
Add a point to the list of points to destroy.
Resolves the class for the given class proxy.
Inject target object into wrapper object.
Returns the type of the field declared by the wrapper class.
Returns the field descriptor for the given boolean field or null if not found.
Returns the type of the field or the read method.
Resolves the key type.
Resolves the component type by looking up getter and field descriptor.
Returns a JSON result of the given object.
Create a JSON result from an exception.
Get http method from method name.
Returns true if the specified sequence of characters match the specified pattern.
Resolves the loading for the specified class.
Attempts to load the class with the specified name. If the class not found an exception
Gets the URL of a resource that has the given name.
Wait for the thread to be interrupted.
Returns the type of the first annotation in the given array or null if there are no annotations
Build an injection point with the property name the value and the scope.
Visits all classes in the registry.
Returns an array of URL objects for the specified class loader and module.
Sets the bean.
Update the bean of this supplier object.
Loads the descriptor of the property.
Connects to the database specified by the argument.
Add an iterator to the end of the iterator list.
Prints the logo.
Stops the database and all associated resources.
Create a socket for the given host port and connection timeout.
Create ssl socket.
Returns the default ssl instance.
Returns a socket factory for a proxy socket factory.
Returns a random string from the specified array of characters.
Returns a random string from the specified range.
Returns a random string with the specified ranges.
Create a new array instance.
Injects the value of a property into an object.
Converts an object to the specified type.
Visits a provide method.
Creates a default type cache.
Put t.
Gets all method descriptors.
Resolve ip address.
Get ip as int.
Validate whether a string is a valid IP address.
Returns the host name of the given IP address or null if the IP address is unknown.
Downloads the contents of a URL into a byte array.
Download string.
Downloads a file from the given url.
Creates a new inet socket connected to the supplied hostname and port.
Connects to a remote host with a specific connection timeout.
Returns the index of a primitive class or - 1 if the class is not a primitive class
Override this method to provide custom class loading.
load class by component type
This method is called when the server shuts down and cleans up all associated bean instances
Searches for the element in the array using binary search.
Searches for the element in the array using a binary search.
Exclude one or more of the specified exclude strings.
Add one or more includes to the rule.
Add template properties to the index. Throws IllegalArgumentException if the index does not exist.
Start the tag with the specified index.
Register a component.
Resolves the type of the specified column from the specified db entity column descriptor.
Override this method to customize the sql generation.
Create a new result set using this mapper for the specified result set.
Finds the key with the given type.
Populate keys for the given entity.
Create a wrapper action interceptor.
Set bean property value.
Maps the query parameters to this query object.
Sets objects to the specified array.
Inserts the chunk after the specified chunk.
Looks up the type of the specified entity.
Find table descriptor by column ref.
Resolves a table name for a reference to a db entity.
Resolves the class for the given object.
Appends missing space to the given string builder.
Gets the file parameter names.
Perform an include operation on a servlet request and response.
Gets the full URL of the given request.
Gets the full request uri from a servlet request.
Resolve method parameter names.
Start application.
This method is called when the container is stopped.
Filter by subject.
Filter a message by id.
Filter email by from address.
Filter the email by to address.
Filter email by cc address.
Filter through email recipient by recipient address.
Applies the given flags to the email.
Adds a boolean flag to the email.
Filter received date from email.
Filters the sent date by the operator and the amount of milliseconds.
Applies a search for a term that has a value equal to the given size.
AND all terms in the given email filters with the given search term.
OR any of the given email filters together with the given email filters.
Negates a given email filter.
Concatenates the search term to the next term.
Converts a byte array into a base 32 string.
Is gzip eligible for the given request.
Validates the given object against the current validation context.
Validate the specified object against the specified validation context.
Add a profile to the config.
Add a list of enabled profiles.
Checks whether the given profiles match the given string array.
Parse the request body to an object.
Returns the number of milliseconds since the epoch.
Add the specified julian date to this date.
Returns the julian date of this date with the specified julian date.
Set the element f to an integer.
Emits a comment.
Generate a string error message.
Create a hash for the given password.
Returns a PBKDF - 2 secret key.
Converts a hex string into an array of bytes.
Resolves the provider definitions for the given type and name.
Sets the name of the attachment.
Sets the content id from the name of the attachment.
Resolves content type.
Parses the type of a signature.
Returns the number of attributes in the symbol table.
Put the attributes of the given vector into the given output.
Decode the given string with the given encoding.
Decode a query string with the given encoding.
Starts the server.
Check connection provider.
overrides the visitor to override the visitor to visit a method.
Overrides the default visit implementation to provide an easy way to override the default visit behavior.
Create a method signature visitor.
Converts an array of objects to a csv string.
Converts a string to an array of strings.
Resolve a constructor injection point.
Loads and creates a reader class from the input stream.
Retrieves a reader from the cache or creates a new reader if it doesn t exist.
Encrypt a string
Replace all occurrences of str with str.
Returns the logger of the given name.
Set the name of the class.
Creates an action request.
Create a new wrapper bean and add it to the container.
Destroys a bean.
Called when the application is being destroyed.
Retrieves all received email addresses from the session and sets the target folder to unset.
Main entry point for the Java application.
Runs the reporting.
Prints an error message.
Print rate.
Returns the mapped byte buffer for an existing file.
Closes the context and removes the replay destination from the archive.
Waits for the work to complete.
Replies the current position in the log meta data buffer.
Inserts a fragmented message into this buffer.
Add padding to current message.
Closes this session and all associated resources.
Polls for an error response.
Sends a replay request to the server for the next session id.
Event available image.
Event unavailable image.
Create a status indicator for a specific channel.
receive channel status.
Set the maximum number of bytes to be read.
Appends length bytes to the specified buffer starting from the specified offset.
Retrieve the next control session id and template id.
Creates a mapped file with the specified report file length and report file name.
Creates a snapshot of the current data.
Create a unsafe buffer to store the header data.
Add a message flyweight key to the specified buffer.
Create a buffer with a specified label. The label will be added to the buffer at the
Create a new connection with given ID and response stream id.
Attempts to connect a response stream.
Close the session with the given control session id.
Start recording event.
Stop recording with custom header and control session id.
Convenience method to send a replay request to the client.
Convenience method to stop a replay session.
Sends a list recordings request.
Helper method to list all recordings associated with a uri.
Send list recording request.
Extend recording.
Put a new recording into the buffer.
Puts a stop position on the buffer.
Sends a subscription request to the server.
Returns true if the udp channel matches the tag.
Returns the destination address of the given channel.
Returns a description of the local interface as a string.
Adds a new destination to the image connections array.
Inserts a new packet into the buffer at the current position.
Finds a control toggle.
Add a string parameter.
Returns the tag of the channel.
Returns the tag of the entity.
Add session id to channel.
Gets the tag of the parameter value.
Adds padding to the end of a log condition.
Moves the buffer to the specified limit and returns the number of bytes that have been added
Create a new mutable direct buffer with the same name type id session id and stream id as
Returns the label name of the specified type.
Scans the specified buffer for bytes that contain at least the specified number of bytes.
Returns a builder for this channel.
Validates the channel uri builder.
Sets the prefix for the channel.
Adds a media string to the channel.
Set control mode.
Sets the term length.
Adds an offset to the string for the channel.
Set the linger of the channel.
Closes this channel and releases any resources associated with it.
Check if a frame is valid
Receives an inet address from the socket.
Performs a reTransmit action on the nak action.
Process timeouts of the given retransmit sender.
Returns the status of the given string.
Allocates a new counter with a given name and channel.
Resets the internal buffer with a new one.
Validates the internal buffer vector.
Compute the length of a message.
Calculate the number of producer window of a given buffer length.
Validate the socket snd and rcv buf lengths are within the specified context.
Validate the page size.
Validate session id range.
Validate the unblock timeout of a client.
response flyweight error code.
Resets this candidate term to its initial state.
Returns a string representation of the given cluster members.
Adds all publications to the aeron channel for the specified cluster members.
Closes all publications from the given array of members.
Returns true if at least one of the cluster members has active quorum.
Returns the position in the ranked positions.
Resets the log position for all members.
Returns true if the given position is within the given leadership term id false otherwise.
Checks if a candidate term with the given id has already been added to the cluster.
Returns true if the given cluster member has a vote for the given term id false otherwise.
Determine a member from a cluster.
Validate if the provided endpoints are the same.
Return true if the two clusters share the same endpoints.
Returns true if the given cluster member is not the same as the given cluster member.
Returns true if the specified cluster member is a quorum candidate.
Checks if is not duplicate endpoints.
Finds the index of a given member.
Removes a member from an array.
Returns the aeron id of the highest member in the given cluster.
Map an existing cnc file.
Returns true if driver is active false otherwise.
Return true if driver is active false otherwise.
Return true if the driver is active.
Requests a driver termination on a remote host.
Returns the number of bytes at the specified offset in the specified unsafe buffer beginning at the specified
Calculate the length of a frame in little endian order.
Writes a data frame of a short type to the given unsafe buffer.
Writes the flags at the specified offset to the specified unsafe buffer.
Writes the given term at the given offset to the given buffer using the little endian.
Adds a term id to a unsafe buffer.
Find counter id by recording id.
Find counter id by session id.
Returns the recording id for the given counter id.
Returns true if the counter with the given id and recording id is active.
message fly weight application specific feedback.
Reloads the file.
Returns the last term in the list.
Creates a recovery plan for the given archive and service count.
Create a recovery plan from the given list of snapshots.
Append a term record to the end of the cluster.
Takes a snapshot of the cluster and adds it to the cluster.
Commits a log position.
Writes a single entry to the current partition.
Closes all resources associated with this session and subscription.
Inserts a vector into the buffer if the vector is not already present.
Unblock a part of a log meta data buffer.
Returns the string channel of this buffer.
Sets the message flyweight channel.
Throws an exception if the term length is not the same as the input length.
Checks that the given page size is a power of two.
CAS active term count.
Computes the position of a given term id and the number of bits to shift to
Computes the log length of the given term length and file page size.
Store the default frame header.
Adds the default header to the term buffer at the given offset.
Rotates the log of the given metadata buffer.
This method initialises the metadata buffer with the specified partition index and term id.
Calculate the offset of a term from a raw long to a term length.
Gets the tail volatile from the given metadata buffer.
Compare raw tail with expected tail and update raw tail.
Put a token into the specified buffer at the specified offset.
Allocates a new counter with a new data buffer.
Returns the index of the first counter with the same recovery state type as the given counters.
Checks if a record for a given ID has been replayed.
Gets a long from the meta data for a particular service id.
Convert flags to chars array.
Adds a string channel to the buffer.
Writes a buffer to the cluster and returns the number of bytes written.
Wrap a part of an atomic buffer.
Commits the frame to the end of the frame buffer.
Abort the frame and write it to the end of the frame buffer.
Entry point for the media driver.
Close resources associated with this context.
Returns the current position of this frame in the frame indicated by the frame length and the initial
Allocates a new counter
Find the service id for a given service id.
Allocates a new counter with the same name and type id using the provided direct buffer
Close the buffer and remove the cnc from the cnc map.
Dispatch a descriptor between two recording descriptors.
Add a slab to the list.
Set the byte at the specified index.
Adds the statistics.
create a new group type from a list element type
Create a new group type from a struct type.
Returns an annotation for the given string at the given position.
Ends the run pointer of the previous run.
Reads a single struct from the input stream and writes it to the output stream.
Gets the list of footers for the file with the specified configuration and status.
Read a list of footer based on a summary status.
Reads the footer of a given file with a given metadata filter.
Reads the next row group.
Reads the next filtered row group.
Reads a dictionary from the meta data. Returns null if the meta data does not contain
Adds a new writer to the pool.
Remove a writer from the writer list.
Update the allocation backs and runnable calls backs according to the current memory pool size.
Registers an runnable call back with the specified name.
Starts the file.
Starts a new block.
Start a new column with a given value count and codec.
Writes a dictionary page.
Write a data page.
Ends the current block.
Copy a range of bytes from one stream to another.
Ends the state and writes the metadata to the output stream.
Merge all meta data from a list of files.
Merge a set of files into a single file and write the result to the output file.
Writes the job summary data to an output file.
Merge meta data to a global meta data object.
Reads the boolean value.
Is boolean null ok.
Returns the first non - null object in any of the given objects or null if one is
Returns the value of the given string according to the given schema.
Create a new thrift meta data object from extra meta data.
Returns thrift meta data from thrift class.
Returns a hash map where the key is the key and the value is the value
This method writes null values to the log.
Write a page to the file.
Initializes the config from a page.
Allocates the mini block of values if necessary.
Decodes enum and throws an exception if the enum is not in the expected type.
Calculates the widths of the mini block buffer based on the config. mini block size
If the throwable is assignable from the exception class throw an exception.
Get a statistics instance based on the type.
Returns a builder for a reading of the given primitive type.
Merge statistics.
Get a non - null schema.
Create a new task context.
Invoke a method. Throws a illegal access exception if the method throws an argument exception.
Display the members as a string.
Returns a list containing all the fields of the given group type merged with the current one.
Initialize counter from reporter.
Get a record filter based on the configuration.
Get a list of all the footers of the specified configuration in parallel.
Get a list of hdfs blocks to split on. The list of blocks to split on is
Write t record to writer.
Throws a schema modification exception if the field with the name does not exist in the schema
Serializes message descriptor.
Makes sure that the required fields are present in the events of the struct.
check if set is correct and throw exception if not.
Reads meta data from the input stream.
Closes the output.
Set the schema for the job
Adds a class to the registry.
Validates that the given column and primitive type are valid.
Throws an illegal argument exception if the argument is not an integer.
Generates a mapping from a arrow schema to another arrow schema.
Generate a mapping from a schema to a message type.
Creates a new schema by mapping a record schema to a record schema.
Returns a page header with the specified number of values.
Skip to match record.
Writes an object to the configuration as a base64 string.
Remove a key from the cache.
Add a new value to the cache.
Get the current value associated with the key.
Write an object value with an avro schema.
Sets this string to a regular expression.
Prints the contents of the provided string to the provided logger. If the filename is null or
Opens input stream for given filename.
Apply a filter to a single column.
Converts a struct type to a thrift schema type.
Creates a group type with the same logical type annotation and the nested type as the repetition.
Creates a new group type annotation for the given elements.
Gets the merged key value meta data.
This method creates a split from a file and a set of splits.
Get fields by class name.
Resolves the schema for the given configuration.
get input files
Throws an exception if input files are not valid.
Get the list of input files from a partition.
Returns a new record filter for a page from the given starting position and page size.
Create a list consumer and pass it to the supplied consumer.
Do the work if the number of partitions is greater than or equal to the number of partitions
Merge the given tuple with the current data.
Waits up a tuple
Reads a struct.
Maps a key - value pair to a typed value using the consumer and consumer s type.
Write an integer value to the stream.
Read 4 bytes at a given offset into a big endian int
Set the Avro schema for a job
Create topic if not exists.
Create a new pipeline stage beans that are duplicate in all stage beans.
Create interceptors.
Create interceptor bean.
Parses a string schema to ensure it is valid
Converts millis to days.
Extract avro schema from record by given header name.
upgrade from v1 to v2
Copy a list of resources to a blob store
Resets the context to its initial state.
Report the thread health report for the given name delay and timestamp. If the thread does not
Register a thread.
Stores the control hub configuration for the given runtime info into the current configuration file.
Perform a credential login. Returns true if credential is already authenticated false otherwise.
Determines if an upgrade is necessary for the given library task library.
Perform an upgrade if a configuration is needed for a specific stage.
Perform an upgrade of the configuration to the def stage if it is needed.
Generate the configuration for a specific service.
upgrade stage if needed
Returns the fields that do not exist in the record.
Checks if is system class.
Add the specified element at the end of the list.
Add and get evicted.
Returns an optional value with the given key if the key is present otherwise the default value.
Creates a list of snapshots for the given output and adds the reported errors to the list of
Constructs a descriptor from a proto descriptor file.
Gets all file descriptors from a set of file descriptors.
Populate the default extensions and file descriptor map with the values from the file descriptor map.
Returns the descriptor for the given message type.
Convert a descriptor to a protobuf field.
Create a dynamic message from a map of field descriptor to a map of message types.
Convert a message type to a protobuf message object.
Converts a list of config objects to a single config object.
Make a connection to the kudu master.
Convert from kudu type.
Create a field in a row.
Intercepts records.
Returns the next line of text.
Add missing configs to stage.
Parse response.
Add response headers to record.
Write header output field to record.
Write header to response.
Saves the metadata.
Get client from conf. data format
Parses the headers only.
Increments start offset by given number.
Parse a paginated result.
Adds the value of the given header to the current response.
Create a new request headers map from the current configuration.
Gets a single source offset from the response.
Checks if a property is defined in the configuration.
Convert a data parser exception to a data parser exception.
Convert a generator exception to a data generator exception.
Helper method for getting credentials.
Generate a preview for a pipeline with specified outputs to override.
Copy a character to a string buffer.
Remove logical duplicates from a set of packages.
Finds the index of the next line in the live file starting from the specified index.
Resolves the main line for the specified chunk.
Close the connection to the database.
Escapes a string for use in a query.
Gets flow control settings.
Returns the provider to use for this channel.
Puts the object at the specified offset and result.
Generate a digest expression using a pattern.
Create a digest expression from the original expression.
Adds a dictionary from an input stream.
Adds a dictionary to the registry.
Stop the aggregator and aggregate the data windows.
Append a new data window to the aggregator.
Serialize object to string
Deserialize a string value
Reads the value of the type t from the file.
Write the record.
Evaluates a string el and returns the result of the evaluation.
Generate inner field from the list.
Gets the table name.
Gets the database field value as string.
Get the value of an internal field.
Returns the value of the location field of the given metadata record as a string.
Get the value of a record s location property as boolean. If the value of a record
Get avro schema from metadata record as string.
Gets the data of a record as a string.
Create a new schema metadata field builder.
Validate partition information.
Generate a partition path from the given hash map.
Serialize an Avro schema to hdfs.
Set the parameters of a prepared statement.
Get the configuration for the specified object.
Converts a date and time string to the number of milliseconds since the epoch.
Returns the formatted string for the given string.
Start a batch execution.
Helper method to check whether the given record contains any of the fields from the given list.
Filter a list of field names to only those that are not in the supplied list.
Sends an error exception to the error record handler.
Returns a dependency for the given jar name and jar version.
Returns the dependency of the given url.
get and validate instance.
Close all the resources associated with this object.
Gets the label from a string code.
Verifies that a dependency with the given key exists in the map.
Retrieve a write operation from the header of a record.
Build a subdoc mutation.
Create SQL string to execute a alter table.
Configures the server with a map of configs and a login context and a service name.
Takes the result of the producer and the consumer.
Commits a single string to the channel.
Indicates an error has occurred.
Injects configuration values into stage def and object.
Get the definitions for the stage type hide stage.
Returns the lineage publisher definition for the specified name.
Returns the formatted column value for the given column name. If the column name is not found
Formats a string value.
Get pipeline info by pipeline ID and rev
fragment envelope json create a new pipeline
Get a list of pipeline from specified fields.
fragment envelope json import pipeline
Gets the file path.
get operation from record
Get field path.
Retrieves the enriched event from the queue.
Gets a runner from the queue.
Gets the runner for the given idle time.
Returns a runner to the pool.
This method destroys the instance
Validates that the queue is not destroyed and throws a runtime exception if it is.
check if a stream exists in AWS.
Get the last shard id of a stream.
Executes the operation on the given queue of records. If the queue is empty it is
Method to handle a sql exception.
Get the hash code for the given operation column.
Compares two files.
Retrieve the pid of the given process.
Validate and extract the fields to hash.
get proxy user group information
Roll up and down statistics.
Creates a snapshot of the current statistics.
Ensures that the specified path exists in the file system.
Runs the classifier over the batch and writes the records for the specified schema and table.
Method to write a batch of records using the specified template for the specified table.
Runs stage for a single unchecked record. If an exception occurs during this stage the error
Generate no more data event.
detect new partition info cache support. partition values p cache
Log the record with hdfs header and avro schema at the specified location.
Processes the given value with the given group name.
Returns true if the two classes have the same version.
The main entry point for this application.
Configure auth and create a new client.
Resolves the headers for the current request.
Evaluates method expression and record for the http method.
Fill null types with null values.
Retrieve the value of a field from the typed object. Returns null if the field is not
Loads a schema from a registry.
Registers a new schema in the registry.
Gets latest schema from registry.
Gets the id of the latest schema for the given subject.
Get schema from registry by id
Writes a schema id to the output stream.
Detect schema id.
Get the default values for an Avro schema.
Parses all messages for the given message id and payload.
Log the error details.
Gets the records that were bad for the given sink.
Initializes the stage.
Returns the outward edge vertices for the given vertex.
Returns the inward edge vertices for the given vertex.
Serializes an offset map to a string
Create a map from the last source offset.
Sends a report to the queue.
Perform a get report operation.
Checks whether the file system is in sdc
Write offsets to main file.
Delete blob by blob id
Called when an error occurs while fetching a blob from GCS.
archive blob to bucket or prefix depending on origin and archiving options.
Returns the reader for the current file or the live file if no current file is found.
Release a reader.
Set the dpm url.
Add a default header
Parses a string to a date.
Converts a string to a URL - encoded string.
Get client.
Make a connection to kinetica.
Gets the metadata for a given table.
Creates a new event builder.
Builds a schema from a map of field names to a schema.
Converts Oracle insert code to sdc code.
Add a list of classes to the job.
Checks if field order by list context field order by list field.
Check condition expressions.
Returns the lag for the given file offset string.
The entry point for the Java premain.
Returns the parallelism of this task.
Runs a query and waits for the specified page size to complete.
Get a list of all available table descriptions.
Validates that the table accepts inserts.
Returns the type of the given JSON field.
check if field type is nullable
Get a table schema from the show table response
Gets column properties.
Get the class for a specific type.
Inits the target. context object.
Create a topic and evaluate the topic expression and return the result.
Get input stream.
Get the output stream.
Returns true if the file exists false otherwise.
Returns a permission object from a string representation.
Validate that all the services are available
Creates a simple aggregator instance with the specified name and data provider.
Gets the aggregator for the given unit.
Create a new aggregator instance with a custom name and a time window.
Creates a new group by aggregator with the specified string name and a class.
Starts a new data window with the specified end time.
Stops the aggregator and returns the data.
Creates a new data window and adds it to the aggregator.
Release the reference to the login manager.
Converts a glob - encoded string to a regular expression. Throws an exception if the
Return list of objects lexicographically.
Stop a pipeline and remove its snapshot from the snapshot store.
Attempts to produce an empty batches for a given number of runners.
Create failure batch.
Returns a bound statement for the given record.
Set a new configuration from the given map.
Generate a kudu lookup key.
Reads a line and appends it to a string builder.
Roll the timer by a given multiplier.
Enable the dpm.
disable a dpm with the given username password and organization
Normalize dpm base url string.
Get user auth token by URL and username and password.
Logout by dpm base url with user auth token.
Generate a file with the current app auth token and write it to the output file.
Update sso. dpm properties file based configuration
Compute the schema for a specific field.
Generate a complex schema for a type field.
Get decimal scale or precision.
Get the default value for a given schema.
Inits the metrics if needed.
Compares two files at the same path using the modified flag to determine if the file should
Returns the index of the specified group.
Returns a list of the names of the groups in this query.
Returns true if the given string is an escaped character ; false otherwise.
Returns true if the character at the given position is a slash escaped character.
Returns true if the string is inside a character class false otherwise.
Returns the number of times the specified string was found at the specified position.
Extracts group info from a string.
Replaces all escaped characters in the input string with the replacement string.
Perform an HTTP GET request and write the JSON to the response writer.
Refresh the schema of a table.
Determines whether or not the given entry has expired in the given local date time.
Retrieves the offset of the file. If truncate mode is set to true the offset is
Reads the next number of bytes from the underlying channel and performs a fast forward to the
Converts a string value to an appropriate number.
Extract the type part from the buffer.
Parses the values out of the buf.
Retrieves the primary keys of the specified table.
Create custom field mappings.
get a string from the field. type
Gets the table name.
Set the primary key values.
Throws a stage exception.
This method is called from the worker thread. It sets the error delegate and executes it.
Prepares a batch context.
Calculate the metrics for the specified batch and write the results to the provided context object.
Flatten entire record.
Create a new instance of the type t.
Executes the action.
Overrides the method in order to add the columns to the parameters map.
Gets the condition for the partition column.
Validates the given offset against the values stored in the given table.
Retrieves the requested content generators.
Get non - empty arguments from a list of strings.
Generate an operation for the given kudu table.
Converts a double to display.
Scan a live file.
Get the number of pending files.
Returns true if the property name is whitelisted.
Returns true if the set of versions matches the set of expected versions.
The entry point to the streaming binding driver.
Propagates the runtime configuration to the current runtime configuration.
Validate the report description
upgrade from v1 to v2
Extract named groups from a character sequence.
Commits an offset to the producer.
Creates a sdc object and returns it.
Set the fields in the record based on the config bean. result field.
Gets the validation statuses for a remote pipeline.
Create a new remote data collector result.
Create a gauge for a metric.
Create a map of column names to the parameters. The key of the map is the column
Generate header attributes.
Validate the whole file and throw an exception if an error occurs during transformer stage.
Delete old temp files
Get avro input stream.
Converts a stream of generic records into a data file.
Write avro record to file.
Check input for encrypt field.
Throws an exception when the field s type is not encryptable.
Check input for decrypt field.
Check field type and throw exception if not.
Returns field value as byte array. If field value is byte array returns byte array. Otherwise
Set the pattern of this matcher.
Appends the replacement string to the matcher.
Returns a hash map of all named groups.
Replaces all properties with the given replacement.
Gets a global variable from a data source.
Creates a new event record for the specified event.
Creates a record for a stop event.
Fix offset for string column
Extract field value as runtime value.
Add a partition to a table.
Execute alter table set properties query for the specified table.
Execute describe database and return result set
Execute a string query
Execute a query with a single result set.
Executes a batch of commands.
Iterates over all the pipe and invokes the consumer for each one.
Returns the trigger for the current offset commit.
Returns true if the pipeline has been stopped due to an error in the last stage of the
Helper method to handle a consumer that throws a pipeline runtime exception.
Get the record id for the el vars and record. If the id is null or empty
Gets value from field.
Set a document fragment in the record.
Set document in record.
Set the property value of a n1ql query row to an observable.
Handle the whole file data.
Indicates whether or not the transaction with the given gtid is incomplete with the given seq
internal t with class loader internal t.
Log out the current subject and the login context.
Sets the exceptions for this task.
Replace variables.
Make sure that the current thread has the right permissions.
Main entry point for the emr binding application.
Returns the value of the dir - path field.
Renames a file or a directory.
Should roll boolean.
Returns true if the given pattern matches the given string and optionally sets the uri template variables.
Gets the offsets of the given string.
Returns the remaining wait time between the start time and the maximum wait time.
Gets the offsets for the given string and offset map.
Creates a delegate for a named stage library.
Create a delegate library instance.
Returns the value of a metric.
Find the end of a header.
Get the size of the response body.
Saves the contents of the specified byte buffer to the temp file.
Create ssl from key and trust store.
Get the mime type for a file.
Handles the request by sending the response to the handler.
Stop the server and wait for all to finish.
Adds the appropriate mappings to the router.
Send data to the output stream.
Create a new fixed - length response instance.
Determines whether the entry should be accepted or not based on the mime type of the entry
Set a cookie.
Remove all cookie from the queue and add it to the response.
Decode cookie value to base64 string.
Encode cookie value as base64.
Set the table name.
Returns the name of the principal.
Create a Spring session repository filter proxy and insert it into the session repository.
Resolves the principal name from the session attribute or from the spring security context attribute.
Get the session bound for the given id
Retrieve a mail session definition name from a JNDI name.
Get the canonical names of the parameters of a method.
Registers an interposed synchronization with the current transaction.
Override before completion to override the default behavior.
Returns the current transaction.
This method is called by the framework once it has started the deployment phase.
Returns true if the passed in cache unit name is the same as the passed in cache unit
Get the list of service names for the current server.
Decrements the read lock count.
Increments the read lock count by 1.
Adds a service to the deployment.
This method handles the restoration of the token if the next expiration date has been set.
Perform the phase deployment processing.
Make the top level bdas visible from the modules.
Creates a jse for the specified deployment.
Sets the config name and file.
Creates a jse for the given security constraint meta data.
Create the servlet URL patterns mapping for the provided list of endpoints.
Create the servlet class mapping for the provided list of endpoints.
Resolves the views if not already resolved.
Get the available connectors for an operation.
Parse the core environment element.
Adds an environment element to the process id element.
Returns the address of the path to the given model node.
Sets the path address of the given operation to the given address in the given model node.
Returns the attribute value for the given model node.
Returns boolean value indicating whether to include defaults.
Create a composite operation from a list of model nodes.
Create an operation with the given path address and map of attributes to a model node with the
Create a new add operation with the given address and index on the path. The address and
Create a read - attribute operation with a single attribute.
Create a write attribute operation with a default address and attribute value
Create a new und define attribute operation with the given address and attribute.
Get the current value of the naming context.
Adds a factory to the URL context.
Remove a factory from the URL context.
Returns a list of validation providers.
Configure the endpoints for the specified deployment.
Configure endpoints.
Modify the context root of the deployment.
Gets transport class name from the deployment.
Set the outgoing run as principal for the given security context.
Creates a privileged action to pop the run as principal. If the run as principal is
Process management.
Injects a property value to an object.
Returns true if the given argument matches the given class type and property type.
Finds a method that matches the specified name and property type.
Find a field.
Derive useful information from the http request.
Perform a standalone collect operation and return the results as a jdr.
Returns a jdr representing the contents of the report.
Register a resource adapter deployment
Unregister a resource adapter deployment
Register the transformers for the current model version.
This method is used to write parameter objects to an output stream.
Gets an exception from the exception map and reads it from the input stream.
Returns the current thread that is the owner of the specified transaction synchronization.
Release lock on this session component.
Add log.
Add is cdi to web meta data.
Returns the view associated with this view.
Executes the ws invocation for the specified endpoint.
Returns view method for given sei method and collection of view methods. Throws exception if
Returns whether the given sei method matches the given view method.
Retrieves the security meta data associated with an EJB.
Get the domain to use.
Ensure that the two strings have the same domains.
This method is used by the generated code to determine the correct target type for the generated code
Gets the absolute name.
Returns the jndi name of the specified string.
Process the current deployment.
This method is called when exchange is received from server.
Returns whether or not the current transaction is currently active.
Get a reference to the transaction synchronization registry.
Returns the connection factory for this connection.
Gets the last component.
Returns true if the name is empty or the number of elements in the name list is equal
Throws an exception name not found in the context.
Creates a naming exception with the specified detail message and the cause.
naming exception.
Proceeds an exception with the given object and name.
Returns a naming enumeration that returns the same elements as the supplied collection.
Binds an object to a named context
Get the active resource for the given operation.
Create a component instance.
This method is used to retrieve a Spring virtual file from the jar module. If the jar
Resolves the runtime name for the given address.
Create a listener builder for a persistent resource.
Gets a primitive analysis for a class.
Shuts down the pool and releases all resources associated with the pool.
Create a linked list with a url pattern.
Gets the servlets. If no servlets exist a new one will be created.
Get a list of servlet mapping meta data objects.
Gets the security constraints.
Gets the login config.
Gets the context params.
Get a web resource collections meta data object.
Returns a list of param value meta data objects linked to the servlet meta data object.
Creates a new security constraint with the specified list of security constraint meta data.
Create a web resource collection with meta data.
Create a new servlet.
Create a new servlet mapping.
Create a new auth constraint meta data constraint.
Create a new user data constraint meta data.
Adds a parameter value meta data value.
Creates a new param value meta data with the specified key and value.
Register session bean interceptors.
Shutdown the current context and remove the current context class loader from the current module and the current
Retrieve a value from a JNDI context and return its value as a string.
Resolves a simple attribute definition.
Get the type of a url pattern.
Returns true if the connection to the specified server targets the connection to which the specified resource adapter
Returns true if the connection target is an external pooled connection.
Get the active string from the properties map. If the map does not contain a active string
Default persistence unit name.
Start the activity.
Stop the activity and unregister the suspend controller.
This method is called when the server activity is suspended. It returns whether or not the transaction
This method sets whether the server is suspended or not.
Complete an invocation.
Overrides the created method of the AbstractTransaction interface to set the active transaction count and register
Method to start the service based.
Stop the service based on the current naming context.
Get a capability for a service name with the specified base name and dynamic parts.
Creates the resource roots.
Return all module class loaders in the current deployment unit.
Determines whether the class file transformer should be applied to the given persistence unit metadata.
allow two phase bootstrap boolean.
Method allow default data source use.
Checks whether to skip mixed synchronization.
Get a copy of a server and port from a hashtable.
Initializes the applet with the given properties.
Initialize method handles.
Set the active naming store.
Validates default values.
Type check a parameter type.
Look up annotation for the default value.
Validates the base type of a method. If the default value is null the deployment unit
Returns an array of the deferred extended entity managers. The deferred entity managers will be empty if
Converts status to string.
Add the properties to all listeners of a cache type.
Extracts the dialects from the sql statement.
Resolves the dialect to its underlying database.
identify a dialect
Check database.
Convert date string to scheduler date.
Set the node name for the prepared statement.
Mark a deployment unit as being module - protected.
Reads the parameters from the given input stream.
Writes the given object to the output stream using the remote object substitution manager.
Writes an exception to the output stream.
Perform a class - level lookup at the specified index.
Create a new sfsb at the current time.
Ends the sfsb creation of the current thread.
Return the current sfsb map.
Pushes a set of entity managers to the current sfsb.
Pop the map at the current sfsb and remove it from the stack.
Gets the current call.
Perform phase processing for the current deployment.
Gets the type information of a class.
Insert any primitive value into the table.
Converts the specified string to iiop string.
Returns true if the given string is a reserved Unicode string.
Gets the signature of a class.
Gets the signature of a method.
Returns the string representation of the given primitive type.
Get the batch permission for a given string.
get or create transaction scoped entity manager
Associates the specified value with the specified key in this map. If the map previously contained
Convert a security role model to a non durable queue model.
Returns the most recent entity version for the specified timer.
Gets the timers for the given timed object id.
Gets the directory for a timed object. If the directory does not exist it is created
Adds a naming listener to the specified target scope.
Remove a naming listener.
Create a naming event.
Close auto closeable.
Add a credential to the subject.
Returns the object instance with the given name and context and the hashtable.
Add tx management interceptor for view.
Replace from string builder with to string builder.
Create a new configuration in a vm.
Adds the prefix if the component class is not already in the deployment unit.
Returns the root deployment unit of the given deployment unit.
Get service name.
Create a view configuration object.
Create injection source for view binding.
Returns all view interceptors matching the method.
Adds a new interceptor factory to the view.
Adds a new view interceptor for the specified method.
Returns the ordered list of client interceptors for the given method.
Add a client interceptor to the proxy.
Add a client interceptor.
Put the data of a particular type into the context.
Throws an exception for an unexpected element.
Returns a list of JAX - WS EJBs associated with the specified deployment unit.
Retrieves the specified JAX - WS jsonObject from the specified deployment unit.
Get the endpoint name from the servlet meta data.
Get the endpoint class name from the servlet meta data.
Get servlet meta data by servlet name.
Returns required attachment value from deployment unit.
Get optional attachment.
Get optional attachment of a deployment unit
Get a component by its name.
Gets the EJB metadata for an EJB.
Gets the context root.
Load the class with the given name.
Gets a resource by its name.
Get all resources with the given name.
Returns a list of all resources under the specified path.
call entity manager manager pop and close all open resources
Returns the entity manager with the given name.
Used to clean up any registered listeners.
This method is called when a deployment unit is invoked from a phase context.
Checks if is all fields public.
Add a new http endpoint.
Create a new deployment.
Returns true if the current deployment is a JAX - RS deployment.
Set the next expiration date.
Sets the state of the timer and the thread to execute.
Merges all scan classes and resource classes into the deployment data.
Perform the deployment phase processing.
Add a remote transactions dependency.
Gets the all container interceptors including the default and method level interceptors.
Checks if is method level.
Checks that only one of the elements in the set is present.
Get a class by its name.
Returns the component type at the specified index.
Converts a string representation of the name to a cn object.
Converts a string into a vector.
Parse a component name from a string.
Deactivates and removes the cached object.
Returns the reference to the specified ser exclusive object or null if the object does not exist.
Authenticates a user by username and password.
Checks if the class is matched by the class name.
Lookup a binding.
Unbind jndi name.
This method is used to instantiate bean meta data.
Configure bean meta data
A utility method to dispatch a lifecycle joinpoint.
Return the current selector or the default selector if there is no current context.
Create a service name for a bean.
Returns the service name of the instance.
Returns the description of the class with the specified name.
Override this method to process annotations.
Called after the steps have been parsed.
Throws an exception if the specified string is not a valid descriptor.
Creates the web app descriptor with the web meta data as the attachment for the specified deployment.
Create web app descriptor.
Obtain the auth method from the deployment
This method is used to deploy a service descriptor.
Handles the deployment unit processing of a bean.
made a class with the same name as the provided class.
Get a string representation of an anonymous object id.
Return a copy of the list of all persistence providers.
Clear cached deployment specific providers.
Add a deployment specific persistence provider.
Finds the parent module class of a class loader.
Perform the deployment phase processing for the current deployment unit.
Add the current platform to the deployment list.
Set annotation indexes for a deployment unit.
Returns the provider Object for the given persistence provider. If no provider is found null is returned
shared persistence provider save per deployment
Lookup provider for current deployment unit.
Gets the annotated classes.
Creates an ejb archive for the specified deployment.
Builds the enterprise bean meta data.
Refresh a participant.
Gets an analysis object for the specified class.
Lookup a done analysis for the specified class.
Create a work in progress instance for the specified class.
Returns the IDL module name.
Converts an integer to a hex string.
Converts a long to a hex string and returns the result as a string with the same
Returns true if this method is an accessor method.
Returns true if the method is a mutator method.
Returns true if the remote exception type is assignable from the method.
Reads the attribute name.
Writes a string attribute to the output.
Fixup operation names.
Fixup the case of names.
Generate an escape for the specified string.
Read xts element attributes.
Parse the attribute value of the element and add it to the current context propagation element.
Reads the attributes from the XML stream and calls the callback for each attribute found.
Load a list of provider by module name.
Create an abstract add step handler.
Overrides the method in order to override the deployment implementation to throw an exception when the deployment
Write a single attribute to xml writer.
Create a remote session.
Extracts the destination name from the given address.
Registers a set of endpoint handlers.
Gets the job xml names for a given job.
Initializes the class loader.
get request uri
Create a new result object using the specified URL and the hashtable.
Looks up an object by its name.
Bind an object to the naming
Unbinds the specified component at the specified path.
Returns a list of bindings for this object.
Call destroy on the naming context.
Remove a named context. If the specified number of components is greater than the current number of
Bind a naming context.
Create a subcontext with the specified name.
Looks up an object by its link name.
Adds a prop value to the object s hashtable.
Remove a property from the object.
Add a transformation to the description.
Remove a security domain.
look up object by name.
Create a new reference to the given factory class.
Creates a new instance of a class with the name of the factory class and the module identifier
Create a new instance of a class.
Returns the impl for a given type.
Wait for service controller to be up.
Compute the masked password.
Initializes the security vault.
Start a new session with specified vault alias.
Create a new display attribute
Displays the current configuration of the vault.
Returns a string containing the current configuration of the vault.
Returns the value if the value is null throw an exception if the value is not null.
get deployment service name
Insert the value if any.
Checks whether the jndi permission is implies this permission.
Returns the actions as a string.
Gets the log name.
Send a state change notification
Gets the object value of the given type.
Gets context service name.
Gets all interceptors including default interceptors and methods.
Add method interceptor.
Adds a dependency for the given service name.
Gets all component interceptors with the given method.
Returns the ordered list of interceptors for the given method.
Adds an interceptor to the timeout view.
Adds a new interceptor factory to the chain of interceptors.
Adds a new interceptor factory to the post construct.
Add a pre destroy interceptor.
Add a single interceptor to the passivate interceptors.
Adds a post activate interceptor to the chain.
create a new service factory
Remove a list of jndi entries.
Accept the builder with the provider and the remote http transport.
Returns the service name of the current component.
Returns the module service name for the given application and module.
Generate bind info for an env entry.
information about a bind.
Returns a concurrent map over the cache entries. The key is the principal and the domain info
Returns the value members.
Returns a value member array for the type.
Creates a new subsystem node and adds it to the federation subsystem model.
Parse config node.
Start naming service.
Add a service name to a deployment unit.
Adds a new component to the deployment.
Add a message destination component.
Returns the view description for the given view type and virtual file deployment root.
Returns the description of all components with the given name.
Returns a set of view description objects for a given view name and virtual file deployment root.
Resolves a message destination by its name.
Build the transformers 1. 0 to 1. 0 to 1. 0 to 1.
Adds a discard attribute to the transformation description if the attribute has a default value.
Pop the context association with the current connection and the current security context.
Load ids manually.
Check the current version and make sure it is not missing in the list of active versions.
Computes the slot for the given jsf version. If jsf version is null
Gets the constant type code for a class.
Adds type code to map for specified class.
Ensures that the specified module is present in the specified container.
Create a string array with all the interfaces implemented by the given container.
Create an array of strings with the specified abstract base agreement.
Adds the class to the classpath if it is a primitive.
Add an interface to the class.
Add a value implementation for the specified analysis object.
Adds the exception associated with the current class.
Gets class level injection type.
Start the service based naming container.
Close the context and close the store.
Check if the current interceptor is allowed for the given method type.
Check transaction sync.
Gets all component classes.
Returns all timers associated with the current transaction.
Helper method to extract extra parameters from a hash map.
Get the parameters from a context and model node.
Converts a type to a class.
Converts the given object value to the given class. If the object does not have a
Returns a string array containing the types of the specified values.
Checks if the given names and types are equal.
Advances the next binding.
Get the more.
Attempts to map the name of a binding to the corresponding name of an object.
Observes the resources for the current observes instance.
Clean up resources associated with the observes.
Returns an iiop for the specified locator.
Converts an enum value to a string.
Skips the specified number of bytes from the input stream.
Checks if both elements have the same local name and location.
Add a component to the module.
Adds a class loaders to the deployment.
Unbinds component.
Lookup an object by its name.
Returns the names of the elements with the given name.
Returns a list of all bindings with the given name.
Add a context handle factory.
Get all handles and save the current context object.
Create a subsystem node.
Create a handler node and add it to the migration map
Get the next bean from the pool.
Calculates an operation by creating a map with the key as the key and the value
Collect metrics for a resource.
Will create a deployment unit that uses the current context class loader and the server integration class loader
This method is called by the server integration manager to deploy a service.
This method is used to publish a service to a target deployment.
Shuts down the web deployment and cleans up the context.
Start the deployment.
Registers a new endpoint configuration.
This method is called when a retry timeout occurs.
Post timeout processing for the specified timer.
Get the declared methods from a class.
Get the declared fields of a class.
Get a constructor.
Gets a method from a class.
Adds the messaging active node to the context.
Returns true if the parameter is allowed for the resource type.
Generate a new transport factory for the generic transport type.
Cancel the current state. If the current state is not in the waiting state the current state
The method must be run only if the context is not already cancelled.
Set the type to the specified value.
Execute indexed function without index.
Find all classes in the given directory.
Get the classess of the given interface.
Gets the generic multiv reference type for the given field.
Evaluate a single record.
Derives the type of the specified field from the requested object.
Update the record.
Find the object with the given ID.
Get the minimal set of nodes for a sharded query.
Flattens out the equalities that have the left side of the current equality operator.
Add an additional order by projections to the query.
Extract sub queries.
Returns true if the object is one of the clusters in the database.
Add an index to the current set of clusters.
Returns whether the given object is a diamond hierarchy of the given class.
Gets the order direction.
Returns true if the specified key requires multiple index lookups.
Finds the best index for the given object.
Returns the common factor between the two search descriptors.
Create a new o instance.
Allow the operation if the resource type is set and the collection type is empty.
Checks if the resource is rule defined.
Get the compact server status.
Initialize the system database.
Load the local databases.
Remove a member from the cluster.
Returns a new lock manager for the current thread.
Get lock manager from cluster.
Commits the pending operations.
Rollbacks the transaction and resets the active flag to false.
Updates the identity after a commit.
rollback a record from the cache.
Creates the directories necessary to perform a file creation or replacement on the given path.
Attempts to atomic move a source file to a target file using the standard copy option.
Gets the disjoint patterns.
Execute only local to a collection of nodes.
Writes a range of characters to the current SAX handler.
Returns true if the socket is connected false otherwise.
Merge two buffers into a short.
Split short to buffers.
Execute the query and return the number of results.
Add a single value to the collection.
Remove the specified value.
Run the command and return the result as a list of objects.
Execute the command and return the first result.
Creates a new channel and initializes it with the current version and allocation mode.
Checks if the i offset + length is within the array s bounds. If not throw
Replaces the content of the specified file with the content of the specified file.
Execute a command.
End a request and release the write lock
This method adds the host part of the given string to the local host string.
Send a command to a network.
Get the current database object.
Gets a connection for a specific channel.
Kill a connection
Interrupt the connection associated with the specified channel.
Disconnects a channel from the server.
Push config values to all clients.
Swaps the specified value on the current index with the specified new value.
Close all current locks.
Synchronizes the current schema with the registered entities.
Update the metadata for a metric.
Return the last record in the cluster.
Gets the next character.
Execute the query and return the first object found.
Called when an error occurs during async replication.
Register a new compression.
Get the number of files that can be read.
allows indexed function execution on target object
Moves i from i to position.
Fill a single byte.
Execute a script until a return value
Execute the full script
Evaluate osql i condition and return boolean result.
Execute a query.
Loads a single configuration from storage.
Parse the result of the i request and store it in the request object
Execute the specified request with the specified parameters.
Updates the schedule starting at the given node.
Add an index definition to the multi value definition.
Set a split for an aggregate projection.
Determines the type of an object based on its class name and type.
Get the collate result of the specified operation.
Gets the string value.
Advances the given probe by adding the specified number of bytes to it.
Execute a command.
Build json from file string
Check the input password against the password hash.
Create a hash of the input string using the specified algorithm and include the algorithm if requested.
Returns true if the given string is supported by this library.
Create a new cluster with the specified configuration.
Returns a list of vertices in current transaction if the current transaction is active and the number of
Returns the edges of the graph. If the graph is not active and the transaction is active
Gets the partition key.
Calculates how long to wait for a distributed task to complete.
Returns the number of features that this vertex supports.
Checks if changes have been filled up to the specified page index.
Parses a timeout out of a string.
returns lock strategy if the lock strategy is not equal to the specified ignore case otherwise returns the
Create a new cluster.
Frees a cluster with the given cluster id.
Start up the underlying data store.
Shuts down the database engine.
Creates a singleton object from the given entity.
Grants access to a specific resource
Revokes a permission to a specific resource
Return the result of the operation.
Resets the table.
Returns the index of the given item in the table.
Compute the spread of a given number.
Create an index of the specified type.
Remove all indexes.
Gets the current index.
Returns the linked class or null if the class isn t in the owner.
To stream.
Removes a listener from the list of listeners.
Register a database.
Requests a timeout for a specific message.
Make a copy of this object.
Merge o value with other value.
Replaces the specified object with the specified object.
Transforms the given object to a map if the result is not a map.
Execute a query.
Close all the databases.
Unregister a storage.
Returns a hash set of all function names.
Returns a hash set of the names of all the registered collate types.
Returns a hash set of all command names.
Gets the field s size and type from the current position.
Write response status code and reason to http response.
Write headers.
Write records.
Fetch a record of the given type from the server and send it to the client.
Send a request to the server with the specified status code and object content.
Send stream i.
Opens a database connection with the specified parameters.
Close all connections in current thread.
Return a pointer to the owner of the specified collection or null if the collection is empty.
Completes the current component an operation.
Push the counters for the specified component.
Write cache counters to cache.
Adds a new storage counters object to the snapshot.
This method adds data to the snapshot.
Add a performance counters object to the snapshot.
Stop write cache timer for given number of pages.
Stop a checkpointing for a specified time.
Stop a full checkpoint time.
Stop a commit timer.
Stop a record.
Stop stamps.
Parse O object for sql statement.
Initialize and start a thread to receive messages.
Start a check to see if any servers are alive.
Remove a record from the attached graph.
Sets a property of this model to the specified value.
Remove a property.
Checks for classes in schema.
Wrap o.
Define a vertex attribute strategy.
Define an edge attribute strategy.
Get new record entries by class.
Get new record entries by cluster ids.
Adds an operation to an index.
Add all of the elements in the given set to the given set and return the result.
Returns true if the object is a record of the record. If the object is an update
Execute an indexed function without an index.
Creates a new set with the given keys.
Writes a page to the buffer.
Reads a page.
Truncates a page index.
Opens the file for writing.
Checks if a replication is active.
Returns a new node strategies instance.
Check if execution mode is synchronous.
read your writes and return boolean value
Maps a server to a collection of servers.
Get the partitions of a collection of servers for a given cluster.
Checks if is server containing all clusters.
Checks if a server is contained in the specified cluster.
Get the list of master servers.
Gets all configured servers.
Get all clusters on a server.
Get all clusters owned by the specified server.
Get cluster owner string.
Get configured cluster owner string.
Returns the configured servers for the specified cluster.
Returns a hash set containing the names of all registered servers.
Returns a hash set containing all data centers in the configuration.
Write a quorum to a data center.
Is sharded boolean.
Get server list.
Get data center of server.
Reads the global configuration from the cluster i. e. the read quorum if any
Get the number of active servers for a given cluster.
Get the configuration field of the specified cluster.
Get a configuration field with the specified data center.
Clears the stack of active graph objects.
Returns an index of the specified type.
Remove an index with the given name.
Adds a new vertex to this graph.
Adds an edge to this graph.
Returns the vertex with the given id. If no vertex with the given id exists the current
Returns all vertices of the specified class.
Get all edges of the specified class.
Returns the edge with the specified id.
Creates a new graph instance and sets the current instance of the graph to the supplied database.
Shuts down the connection manager and releases all resources associated with it.
Returns the vertex base type of this vertex.
Returns the vertex of the specified type.
Creates a new vertex type with the specified name and number of clusters.
Drops a vertex of the specified type.
Returns the edge of the specified type.
Creates a new edge type with the specified name and number of clusters.
Returns the element with the specified id.
Drops a key of an element.
Remove the specified listener from the list of listeners.
Called when an exception occurs while sending a background data flush event to listeners.
Stop monitoring.
Registers the object with the platform and object manager.
Unregisters the object from the platform and object store.
write cache counters to cache holder.
Fetch the system counters.
Fetch component counters.
Get the value of a property with the specified name and default value.
Detaches the specified object from this Object and returns the non proxied instance.
Returns the version of the specified object.
Execute a command.
Set the record of objects which are dirty.
Unsets the record for the i pojo from the record store if it is dirty.
Returns a hash set of all types.
Returns an immutable hash set of all the engine names.
Returns the missing nodes in the response.
Get the conflict responses for all the responses in the group.
Finds the index of the response group with the largest number of coherent responses.
Computes a response to a quorum request.
Returns the received response objects as a list of objects.
Retrieve an object from the cache.
allows indexed function execution on target
Get library string.
Release a database engine.
Gets the next entry in the cache.
Get the total size of the collection
Returns the value at the specified index.
Returns whether or not the index can be used by order by or not.
Returns the index of the specified character in the specified string.
Jump white spaces.
Find the index of the character at the current position or - 1 if not found.
Set the fetch plan.
Enqueues repair record for the given cluster ID.
Cancel repair record.
Enqueues a repair cluster if the cluster is not active.
Create a map from a pattern and a set of all of its dependencies.
Create an object of the specified type.
Register a collection of entity classes.
Registers entity classes.
Set the class handler.
Acquire a database.
Get the number of available connections to the database.
Acquire a database.
Execute the update.
Returns an iterator that iterates over all objects of the specified type. The class loader of the
Check cache memory configuration.
create a graphson vertex from a json
create an edge from a json object
Create a JSON object from a graphson element.
Returns an object node from the given element with the given property keys and mode.
Import an oetl configuration to the specified server.
Returns the status of the current job.
Map the currently active data center to the set of registered servers.
Utility method to separate the algorithm if the input string contains more than the desired number of characters
Create an o from a key config object.
Reads an object from a file.
Create an o from a stream.
Encrypt a byte array using the specified transform
save to stream
Save key store to output stream.
Set the child object.
Add an object to the result set and return true if the object was added.
Get value as object or map.
Authenticates a database.
Returns the value of the i - th entry in the map.
Gets the record.
Reads the current record.
Returns the current tx graph associated with this database. If the current tx graph does not have
Returns a graph that has no tx associated with it. If no tx is associated with the
Creates a new graph instance in the pool.
Returns the property with the specified name. The property name must be lower case.
Stop a transaction and commit the status of the transaction.
Returns the next token from the set.
Gets the token at the specified index.
Gets a single vertex from the current graph in the specified direction.
Remove current vertex from the graph.
Adds edge to vertex if it is not already a partition vertex.
Adds an edge to the graph.
Returns the i - th field name in the specified direction.
Get the connection of the specified field in the specified direction and the specified list of classes.
Reads the document s broken rids and adds them to the provided set.
Get the console methods as a map.
Execute a request on a local node.
Returns the number of nodes that have the given status.
Wait for next retry.
Get the argument at the specified position.
Returns the number of parameters with the specified names.
Connect to the server.
Get a list of your databases.
Get server info
Check if a database exists.
Drop a database.
Make a database changes.
Releases a database by its name.
Get the status of the cluster.
Get the current graph.
Set the retry counter and wait for the next word. If found set the wait counter.
Saves a single record.
Delete record.
Gets the authentication header for the given database name.
Authenticates the given username and password.
Check if the current user is authorized to the specified resource
Override this method to shutdown your cluster server when it is ready to accept connections.
Adjust the line and column for the token begin
Sets the value at the given page offset to the given value.
Gets the bucket pointer of the given page offset.
Commits an operation.
Acquires a exclusive lock on an object.
Change the maximum amount of memory that the read cache can hold.
Create a socket to listen to the specified host name and port.
Read the parameters.
Called by log manager when shutdown is completed.
Adds an entry to the cache.
Remove the given key from the cache.
Acquires the value associated with the specified key.
Get the value associated with the given key.
Clears the data and the files.
Closes a key - value mapping.
Perform an empty read and write operation on the provided buffers.
Adds a task to the buffer and drain the buffer if necessary.
Puts the entry in the read buffer and drain the read buffers if needed.
Puts the specified entry into the specified buffer at the specified index.
Returns the closest power of two to the given value.
Called when a new event is received from the push request.
Converts the value of the i key into a constant. If the value is not a
Convert all values to a boolean.
Get an object serializer.
Initialize the shutdown queue.
Returns the object associated with the given engine name.
Adds a state to the readers list and returns a new one.
Authenticate o.
Create a new metadata record.
Acquires a read lock.
Retrieves a vertex in the base graph of the specified direction.
Returns the id of the element.
Set a property in the current graph in a thread.
Remove a property from the current graph.
Clears all objects in the cache.
Delete the bucket.
Ends the operation and releases resources associated with it.
Creates a new vertex.
Parses the strategy word w.
Extract positions from embedded collection.
Execute the sub query.
Link field value to other fields.
Fill a record.
Set the version field of a record.
Get the type of an o record.
Initializes the database instance for this pool.
Print the stack trace of an exception at the given level.
Converts a key to a record.
register command.
Create server object.
Analyze osql condition and return search results.
Creates an indexed property of the specified item.
Attaches all fields to the current object.
Get an index of a class.
Move the cursor to the next field with a new current value.
Truncate all classes and indexes.
Add a base class to the cluster.
Add the cluster ids to the base class.
link to stream object
Releases an object to the pool.
Checks memory allocation for this object.
Clears all entries from the pool.
Converts a byte array to an int.
Opens a database.
Installs clusters of the specified class.
Get the current server status and compact it if not the last server in the cluster.
Returns the index of the given object in the given array or - 1 if the object is
Returns the index of the given object in the given array.
Get involved clusters.
Override handle in order to perform further processing.
Get the index of the temporary object in the given context.
Reports a tip for the given string.
Fetch plan boolean.
Parse a string with no cache.
Return whether or not the values from the index are sorted.
Get the status of this batch.
Execute the command and return the result.
Handle jvm error.
Put a value in an index.
Rolls back a transaction.
Process a command.
Registers a cluster with the cluster manager.
Sets the property of an object. If the property is not present it will be set to
Execute the command and return the number of instances.
Execute update or delete.
Deletes the record with the specified version.
Called by a callback for a specific type and record.
Delete record.
Returns the count of a given view.
Counts the number of instances of the specified class.
o active on current thread
Register o for encryption
Gets the relative index of the current chunk.
Returns the optional word at the current index of the parser if any. Otherwise returns null.
Get the parser required word.
Parses the next chars.
Parses next word.
Check whether the given character is a separator of the current string.
Execute the query.
Clear configuration files.
Get the current position in the buffer as a byte array.
Extract the token from the tokenized string.
Acquire the current access token
Copy token boolean.
Checks if there are no more characters to read.
Reads a line from an array of bytes.
Skips by reading the specified number of bytes.
Ensures that the given offset and length are within the array s bounds.
Swaps the a and b positions of the given number of elements.
MurmurHash3 64 - bit
MurmurHash3 64 - bit
Writes a byte buffer to this file.
Truncates the file to the given size.
Moves the underlying stream to a new position.
Called when there is no fail to refresh end metrics
Await for successful completion of the current tasks.
Returns a stream of matches for the specified query.
Finds compact targets that are dependent on any targeted types.
Remove all the snapshots that have been modified since the last time this method was called.
Returns the hash code of a single field.
Remove all references outside the closure.
Called when an announcement is completed.
Called when a cycle is complete.
Reads the header tags.
Create a record primary key from the given object.
Clears all the segments.
Reads all ordinals from the given input stream.
Returns the size of this bit set.
Gets the field value.
Copies length bytes starting at src pos into dest pos
Copies length bytes from src pos to dest pos
Returns true if this range equals the specified range.
Copy a segmented byte array starting from src pos to dest pos with the specified number of
Copies length bytes from src position to dest position in an ordered byte order.
Read a number of bytes from the input stream until the end of the stream is reached.
Writes a range of len bytes to the output stream.
Ensures that the given index has enough space to hold all the data for the given segment
Returns the position of the given field or - 1 if not found.
Calculates the total number of select buckets based on the hash codes hash table and the
Returns true if dataset has collections in data set.
Generate all the files in the given directory.
Generate the generated files for all known schemas in the given directory.
Returns true if the ordinal matches any of the specified keys.
Returns an array of objects containing all of the values associated with the ordinal index.
Create a field path for the primary key.
Creates a field path for a hash index.
Puts an object and its ordinal in the table.
Initialize the static fields.
Returns true if the specified key is present in the current prefix ; false otherwise.
Adds a field to the object filter.
Returns a list of all of the given schemas ordered by their names.
Initialize with the next major version defaults.
Returns the number of bits at the given index.
Find all matching records for the given field name and value.
Finds matching records for the given type and field name and value.
Sets the element to match with the given paths.
Sets the key paths for the bit search.
Restore model from last state.
Calls this method every time a cycle is detected and record added or modified.
Exclude a key from the current state.
Exclude all objects that are not referenced by any other object.
Converts the header data to a blob and writes it to the output stream.
Calculates the heap and ordinals for a hNeed read state.
Writes the data to the buffer.
Write a fixed length int.
Write a fixed length long to a byte buffer.
Return a ordinal to the pool.
Sorts the ordinals by num and size.
Calculates a hash code for a set of fields.
Returns a hash code for the given field.
Resizes the storage.
Finds a free ordinal for the specified preferred.
Prepares for writing.
Compare for a given key with the serialized representation buffer.
Grows the key array by a given amount.
Recompute the hash code of the previously added data.
empty key array long array.
Returns true if the given match index is equal to the current match index.
Returns the matching object for the specified key or null if no matching object is found.
Swaps the current read state with a new read state.
Get the number of elements in a hash table.
Attempts to compact the engine if it is not available and there is no pending compaction.
Takes a snapshot of the current state of the state engine and writes it to the specified
Writes the delta to the output stream.
Adds schema names to set if not primitive or collection.
Normalize a field path to a param name.
Reindex the hash index.
Returns the hash index that matches the given query object.
Trigger async refresh with random delay.
Triggers a async refresh with a specified delay.
Add a diff for a given type.
Writes a variable - length int to an output stream.
Writes a variable - length int to a byte array starting at the given position.
Reads a variable - length integer from the input stream.
Reads a long from the input stream.
Internal add method.
refresh loading views size
Update the UI.
pull event.
Returns a new rule with the given name and the given value.
Adds referable values to the rule.
Create a new rule builder.
Create a new rule builder.
Returns a new rule builder that uses the specified fact type.
Returns a new rule builder that has the same fact type as the given result type.
Create a new rule with the specified name and value.
A auditable builder with the specified names.
Add an action to the builder.
Returns the instance of the specified rule instance or null if the rule instance cannot be instantiated.
Returns a non - null non - empty field with the number of fields annotated with the given
Gets a method annotated with the given annotation or null if it is not present.
Get an array annotation.
Registers a new rule in the registry.
Update the status of a given rule
Returns the map with the current status as the key and the corresponding rule status as the value
Create a new rule book with a result type builder.
Adds action to the current rule.
Adds action to the current rule.
Resets the value of the property. If the property is not set the default value is
Add a fact type to the book.
Returns the rules of the class.
Read empty line or end table.
Convert a list of service objects to an array of service objects.
Get the ports from a configuration image.
Extract service ports from the config.
Create a service port from a port mapping.
Add the port to the list if it is not null.
Remove the first service port from the list or return null if the list is empty.
Add missing service parts.
Append an image stream to the resource.
Return true if the service port is equal to or string int or string.
Return service port string if service name is blank otherwise return service port string from env var.
Get service host and port
Adds the given value to the map if it does not already exist.
Copies all entries from the specified map to the specified map except for the absent ones
Merges two maps.
Put all string - value pairs to the given map. If the map is null nothing is
Wait until a pod is ready.
Throws an illegal argument exception if the current string is blank.
Converts an entity to a list of metadata
Returns the resource version of the given entity or null if the entity does not have a resource
Checks if a pod is ready to be used.
Get the current context from the config.
Determines whether a route with a given name exists in the current context or not.
Returns true if the given list of paths contains a resource.
Read and enrich a fragment of a file.
Converts a map of string to an env var list.
Merges the resources with the config maps and deployments.
Takes a map of strings and a list of strings and returns a new map that contains
Checks if is local customisation.
Read configuration from file.
Add the port to the map if it matches the regex.
Get docker json config string.
Returns the plugin configuration for the given system and id.
Returns a secret configuration for the given id.
Download the given url to the given target file.
Compares two versions.
Generate a processor configuration profile for a given extractor and a file resource dir.
Returns the profile for the given name and directory.
Get all profile from the classpath with the given name.
Get all profile from classpath with a given name and extension
Finds the profile yaml file in the given directory.
Get the meta - inf profile file names for the given extension.
Converts yaml stream to list of profile objects.
Get image pull policy value from config resource.
Checks if is open shift mode.
Get replica count.
Returns the first child element with the given tag.
Installs a template entity to open shift.
Remove a tag by its name.
Apply a new entity in the namespace.
Applies a project to the server.
Apply the specified entity to the shift project.
Gets the namespace for a given entity.
Applies an error to the log.
Create the list.
Enrich the object meta builder with the name of the current kind of resource.
Gets the main class and its options.
Returns the number of seconds specified by the argument. Returns null if the argument is null.
duration p as a number of decimal digits or null if not present. Returns null if the
Scans the build output directory for files matching the pattern.
Disable open shift features.
Returns true if the service has a rule.
Parses the given input stream and returns a map of string to a list of strings.
Gets default icon ref.
list config files and copy them to app config dir
Retrieve properties from a resource.
Retrieves the spring boot version of the given project.
Runs the enricher until a valid enricher is found.
Returns raw config.
Returns a new map with the keys as the keys and the values as the values.
Returns the template for the given list of resources.
Get the current date of the build reference.
Gets the value of the current configuration key. If the current configuration key is not present
Returns the config map for the given key or an empty map if the key does not exist
Prepares the processors for the named list.
Add to the builder the current image the mode and the selector.
Returns the string from the given runtime mode. If the selector is red hat then the
Get image name.
Gets registry string.
Checks if is online.
Gets the external service URL for the given service name and protocol.
Returns the value of the given property as a boolean.
Create http client.
Create a new internal node.
Scans class path scanning all available plugins and returns a collection of plugins.
Convert json string to american manager s rewards balance.
Get the current rewards balance.
Construct a pay type payment resource from a json string.
Override get to handle GET requests.
Override post to handle asynchronous post requests.
Create a configuration object from a JSON object.
Collects device data from a fragment and passes the result to a listener.
Collect metadata for a device.
Collect the pay data for a given fragment.
Get the pay data collector for a client metadata id
Verify that a given string is a valid signature.
Get a property as a string or fallback.
Returns a list of payment method nonces.
Checks whether the current browser is the same as the current browser.
Gets the current billing agreement configuration.
Get resource at specified path and callback on main thread.
Submits a POST request to the server.
Makes a POST request to the URL at the path specified.
Approve a local payment. The fragment will send the payment type for the current request.
Add listener.
Remove listener.
Requests billing agreement for the specified fragment.
Called when the activity result is received from the server.
Create a pay type account builder from the received request and the received result.
Converts a list of words to a dictionary
Remove a word from a dictionary.
Convert a list of korean tokens to a list of strings.
Extracts a korean phrase.
Converts a list of strings to a specifed multi - line string.
Fetch data from the given channel.
Allocates a new byte buffer for the given list of nal units.
Joins a list of nal units into a single one.
Returns the profile for a specific index. If the index is out of bounds return unknown.
Normalize taps to a fixed precision number of bits and write it out out to out.
Reads from the current position to the next marker and writes to the given output stream.
Reads all data to the next marker.
Get the frame with the largest available number of frames.
Modify a file.
Calculates the total duration of all edits in the given trak box.
Convert a time frame to a time value.
Converts a trak s time value to a frame.
Convert a trak box into a media that can be edited by a particular movie timescale
Convert a trak box edited tv to a media with the duration and movie timescale.
Convert a media frame to a trak box video track and a media frame no.
Convert a trak box video track and a media frame to a time string.
Convert a timecode frame to a timecode frame
Returns a string representation of the specified timecode for the specified track and counter using the specified
Returns the 7 bits of an integer.
Set the number of bits in the specified list to the specified value.
Returns true if this color matches the input color.
Returns a new size that exceeds the specified component size.
Creates a raw m wrapper for a movie and trak box based on the input.
Reads word bytes from the stream and adds them to the cache.
Create a wav header from the specified audio format and the specified number of samples.
Create a multi - channel wav from a set of headers.
Parses aac configuration from a stream.
Encodes a symbol into the given context.
Create a pair of edit lists from a movie trak box track and tv mv.
Decode a single frame
Set the big endian flag.
MD5 all blocks with the same strength.
Makes a native frame of a picture.
Encode a long into a byte array.
Returns the number of times the specified value appears in the array.
Adds a single packet to the packet buffer.
Reads the next payload from the file.
Decode binary code.
Decode one byte.
Extract a marker from a byte buffer.
Returns the frequency for the i - th entry. If the i - th entry is within
Predict a plane at a given location.
Starts an array with a given number of elements.
Computes the eF - > eF - > f - > d - >
Computes the finish of an integer array.
Concatenates the specified number of bits into the specified buffer.
Calculate the reverse of a 32 - bit integer.
Seeks to the key frame
Get a picture with the specified size and color from the video codec meta data.
Returns the index of a given gain.
Converts an array of bytes to an array of ints at a specified depth.
Convert an int array to a byte array.
Convert a FLAC buffer to a float.
Extract data from a float buffer.
This method is used to inter take a set of bytes and store them into the outb
Converts a buffer array into an array of bytes where each byte is the number of bytes
Returns the size of the video.
Build a wipe map.
Reads the content of the specified byte buffer into an array.
Read an int32 batch of values from the specified byte buffer.
Calculates the magic of a + b - c - d of a and b +
Encode a frame.
Encode a slice of this slice to a byte buffer.
Encode a slice.
Returns a list of the supported codec IDs.
Get a list of supported tags.
Adds a reference to a non - global non - global non - global non - global
Deletes all references to this buffer.
Flushes and collects all valid references.
Warns about the use of the given string in order to use the given library.
Unpacks a library.
Delete all files with the temp extension.
Returns the default layout for the specified number of channels.
Returns the audio channel type from its layout at the given index.
Make a media packet.
Get the current version info as a string.
Get the default time base or null.
Makes a new Parses and returns the Parses primitive value. Returns null if the
Plays a video.
Display the video at correct time.
Returns a codec descriptor for the given codec id.
Prints a single option to a file.
Registers a factory for the given protocol prefix.
Generates a unique name for an object.
Make a audio res sample from a channel s layout to an audio format.
Get the supported video frame rates.
Get the supported video pixel formats.
Get the supported audio sample rates.
Returns a list of the supported audio formats.
Returns a list of the supported audio channel layouts.
Set the value of a given flag.
Set the value of one of the flags in another.
Returns the decoder for the current context or null if no decoder exists for the current context.
Gets a reference to the current demuxer and makes it available for use by the
Returns a collection of formats.
Create a filter graph from the current byte order. Returns null if the byte order of the
Returns a bit stream filter of the given type for this stream.
Gets a byte buffer from this buffer s sub - region.
Make a new audio frame.
Resampler a media picture.
Validate the given image.
Validates the given media picture.
Returns the current filter graph.
Wraps the value in a key value bag. Returns null if the value was not
Returns the cpu specific version of the JVM.
Returns the cpu native arch of the given string.
Returns the operating system of the specified operating system.
Returns the operating system of the specified string.
Plays a sound.
Loads a library with the given names and major version.
Adds a library with the given name and major version.
Loads a library with the specified names major version and list of library files.
Initialize search paths.
Returns whether a library with the given name has already been loaded or not.
Deletes this model from the database.
Returns the stream at the given position.
Returns the bonder that will handle the call. Returns null if the bonder was not
Create a script transaction.
Decodes a string.
Generate a random string.
Gets the transaction with the given id.
Returns the list of transactions belonging to the given address.
Get the transactions for a given address
Returns a list of blocks from the specified range.
Get the block with the given signature
Sends a request to the server and returns the result as a string.
Set the script for a chain.
Execute the provided script on the server and return the result as a string.
Writes primitive array to the stream.
Flushes the buffer to the underlying stream.
Writes an object to the memory.
Return the last direct class if present otherwise return null.
Converts an object to a byte array.
Set the manager to use the given files and channel.
Returns the specificity of the specified class.
Resizes the memory of the mapped file to the specified size.
Remove the element with the given key from this map.
Write a asc string.
Set the output stream.
Create a json configuration instance.
Create a struct configuration object.
Returns the size of an object in bytes.
Clears all cached objects.
Returns the input stream as an fst object. Returns null if the input stream is empty.
Returns the input object of the specified array.
Returns a copy of the specified byte array starting from the specified offset to the offset + len
Returns the output stream of the current object.
Registers a cross - platform class mapping between two strings.
Returns the minimum - bin name for the given class. If the class is anonymous then the
Write long data to the output stream.
Internal helper method to write raw data to the output stream.
Write long value to the output stream.
Write a number of bytes to the stream.
Get a cached fst for the specified classes.
Called when the object has been written to the stream.
Called when an object has been written to the stream.
Get info about a class
Writes an array to the codec.
Set the length of this string to the length of the specified string.
Writes a range of a primitive array to the underlying stream.
This method can be used to finish a change tracking operation. The method takes a snapshot of
Creates a snapshot of the change offsets for the specified base and origin.
Registers the given object as an integer. The object is registered at the given position
Convert an object to a byte array.
Converts an array of bytes to an object.
Reads len bytes from storage into a byte array.
Read an int from the queue.
back a given number of bytes to the poll queue
Set the enabled state of the thread pool.
Start embedded cassandra.
Clean data in embedded cassandra.
Copy a resource to a directory
Returns whether a remote port is taken.
Create a new subscriber state with an empty server state and stream id.
Returns a hash map of op descriptor for each op in the input stream.
Calculates the broadcast output shape
Returns true if the i - th or condition is satisfied.
Computes the logical AND of a set of coordinate vectors
Computes the logical and of the specified elements
Perform logical OR on the elements of the current condition
Applies a where clause to the current index of the condition.
Get the index of the first element of the given array that satisfies the given condition.
Create a flat buffer containing the properties of this buffer.
Create a function from flat properties.
Create a flat buffer of properties.
Set the throwable.
Set the exception to the first non - null value.
Returns a list containing the merge of two coords arrays.
Partition the array by a given chunk.
Returns the nd4j type for this data buffer.
Shuts down the locker if necessary.
Get the current device architecture.
Computes the index of a given column
Pooling with an image.
Create a compression descriptor from a byte buffer.
Get a list of batches of a given partition.
Validate that the shape of each array is the same as the shape of the array.
Set the d attribute of the data buffer.
Computes the index of each element of a given number.
Flatten a collection of matrices.
Computes the bilinear product of the given rows and columns.
Create a complex object from a double array.
Create a complex value with the specified number and value
Create a complex value of the specified shape
Determines whether or not the snapshot should be replicated.
Subtract a component i from this i and places the result in the result set.
Computes the component angle of a complex number
Calculates the ceil of the complex value of the i - th element.
Negate an element of a complex number
Returns the absolute value of an element of a complex number.
Calculate the power of a complex number.
binarize each feature by a given cutoff
This method generates a new data set with the specified number of elements from the data set.
This method is used to get memory footprint of the model
Converts a throwable to a string.
Converts a inet address to a simple hostname
Convert an array of strings to a string.
Converts a range of bytes to a hex string.
Returns a string array of the specified type from the string collection. If the string collection does
Splits the given string by the given escape char and separator.
Splits a string into an array of strings separated by a character.
Finds the next escape character.
Escapes a string so that it is a valid HTML string.
Joins the given strings with the given separator.
Converts a string to camel case.
Gets a string representation of the current stack trace of the specified thread.
Throws an illegal argument exception if the element is not square.
Returns the next big integer at the specified index.
Returns true if this is actual on host side.
Returns true if the response is actual on the device side.
This method creates shape information using data buffer and long arrays
This method creates shape information for the specified shape
Check if a data buffer is a vector
Get the order of the elements in the array
Get the offset for a given index
Converts an array of indices to an array of indexes.
Gets the i - th short.
reallocates buffer with given length.
Copy a buffer at a given offset
Get the constant buffer for a given array of float values.
Return URI representation of string.
Calculate the power of the given array
Computes the ind of the logarithm of the given array with the given base
Selects the maximum value of the array at the specified index.
Find the maximum index of the first element and the second element.
Selects the minimum value of the array at the specified index.
Finds the minimum of the two elements and sets the first and second to the same value
Generate a new stabilized array with a given value at the specified index
Element - wise expm1 on the given array
Element - wise log1p operation for a nd array
Get the bounds of the given x at the given index.
Moves to the next record in the iterator and returns it. If there are no more
Build a allocation shape for a data buffer.
Checks if the given name exists in the path env variable.
This method is used to read data from the input stream.
Increments the tail of the buffer by a new number.
Create an npy object from a pointer
Create a new ind object from a npy file.
Allocates a new paged pointer.
Attaches the specified object to this shared object. If the object has already been attached to
Return whether or not the server is started.
This implementation calls the watchdog to watchdog the given operation and sets the max value of
Flushes the queue.
Get input stream.
Return the number of devices for the specified thread.
Attach a thread to a device
Gets the next device for a given thread.
Returns the operating system name for the current operating system.
Calculates the arch based on the current operating system environment.
This method publishes the data of the given array to the camel context
Create a data buffer.
Intercept the given operation for the given data type.
Add c to result
This method is used to process the incoming message.
Max pooling 3d operation.
Returns a depth wise conv2d operation for the specified inputs.
Resets the internal data structures.
Get the string representation for the given op class.
allocate a new array with the same shape as this array
Get the shape of the array
Evaluates the diff of this string against the input string and returns the ind of the
This method is used to compress a data buffer
Converts the i - dimensions of an exp to the shape of the expression
Get the index of the i - th element of an array.
Truncate the element at the specified dimension
Pad with zeros to the target array
Calculates the element with the maximum absolute value.
Broadcast an array to all registered devices
Send aggregation message to this shard.
Calculates the gamma of the given decimal context.
Returns the square root of the given big decimal.
root of a big decimal.
returns a big decimal with the same precision as the current context
Calculate the power of two decimal numbers.
Rounds a big decimal to a given number.
Calculate a big decimal with a negative sign.
returns x + 1 if x is not zero else return x - 1 if x is a
Convert a big decimal to a decimal.
Scales a big decimal by d.
Scales precision of a big decimal by a given context.
Calculates the Euclidean norm of a big decimal.
Put a function for a different id.
Get the inputs to a differential function.
update array for var name.
Put the shape for a given variable.
Associates the specified array with the specified variable.
Gets property for differential function.
Adds property for differential function.
Add a differential function to the function output list.
Adds the arguments for a differential function.
Returns true if this function has the same number of arguments as the input.
Evaluates a differential function for the given inputs
Adds a new scheme with the specified name and shape.
Creates a sd ones instance where the name is like the input.
Looks like a given attribute s input as a non - zero sd.
Remove arg from function.
Set a new gradient for a given variable.
Average pooling 3d operation.
Create a new gru with the given configuration and base name.
Execute a list of differential function
Create a new while statement with the same diff function definition condition and the same diff function definition
Run a differential function
Execute a differential function.
Execute the backward function and return the index of the previous function.
Add a named variable as a place holder.
Allocates a block of memory for a given type.
Gets the length for the data buffer.
Returns the string associated with the given allocation mode.
get the data type from the context
Get the number of operations of a differential function.
This method destroys all workspaces associated with the current thread.
This method prints the statistics for the current thread.
Perform a dot product call on a boolean matrix. The results are computed in the specified order
This method is not thread - safe. It s only public for use by the sub -
Decodes the given threshold and returns the corresponding target.
Get node name.
Compute the dimension for a scalar operation
Assert that no workspaces are active
ind negative logarithm.
Takes the specified time for a request and updates the status of the response.
Attempts to schedule a request toe if the request is toe waiting. If the
Releases the toe if the current toe is still in the access state.
Returns the current state of the manager.
This method is called when a message is received from clipboard
Initializes the curr from the list of examples.
Initialize host collectors.
Get the device pointer of a data buffer.
This method is used to synchronize the host data with the server.
Applies the specified updater to the specified gradient at the specified iteration.
This method is used to make sure that the host is enqueued before calling this method.
Creates an array with the elements of the specified index.
Get the properties for the differential function.
Gets whether inputs have been taken by the compiler.
Computes the difference between the two arguments.
Returns a string representation of the given array.
Get the same diff between the graph and the tensor type
convert to blob
Load a complex value from the data input stream
This method is used to override the default save behavior
Copy the elements of the real array to the index of the linear array.
Copy the complex values of this complex array to the given array.
This method is used to calculate the relative difference between 2 numbers. It is needed to use
assign a scalar to the array
Returns the index of the specified row in the array. The index of the row is the
Put a row at a particular index. The index must be non - negative.
add a column to the put
This method is used to perform a simple sub - operation on an index. The result is
Add the given element to the current element and store the result in the current element.
This implementation uses the blas API to compute the dot product of the elements of the other
this = this + other
Use nd4j to assign a number to a vector
Return the index of the element with the specified number of elements.
Computes the eigenvalues of a matrix
Computes the generalized eigenvalues of the two indexes.
The element - wise i - th vector. The element - th vector is the vector s
Copies elements of x into y with a blas copy of x and y
Computes the product of a vector by a scalar.
Overridden to process incoming messages.
Returns the sum of the number of equal labels of the specified weights but not of the same
Reduces the data to a single dimension.
Get a no arg constructor.
Gets the constructor.
Invokes a handle method with the given parameters.
Returns the first annotation of the given type that is assignable from the given annotations.
Retrieves a declared annotation from the on class.
Returns true if annotation is declared annotation on class.
Create a proxy instance for a class.
Loads a single entity from the database.
Saves the full entity.
Create a new proxy instance.
Get the metadata for an entity type. Throws an illegal argument exception if the metadata is
Returns only the keys that match the supplied query.
Runs a given query on the engine and returns the results of the query.
Perform a query that returns the same results as the original query but with the specified number of
Execute a query projection on the underlying engine.
Runs a query and returns the number of results.
Wraps the input iterator until the specified chunk size is reached.
Loads the result with the given keys into a new list and executes the load engine.
Adds error message to the message string.
Creates a key with the specified POJO.
Compare to with identity hash code.
Returns a key with the specified raw key.
Gets the raw value of a key.
Gets the kind here.
Returns true if the type is missing type parameters.
Returns true if the specified sub type is the same as the specified type.
Returns the exact direct super types of the given type.
Captures the given type if it is a parameterized type. Otherwise returns the original type.
Gets the translator for the given key context and path.
Get a populator for a given class and path.
Gets the index instruction.
Checks if the method is of interest.
Returns the declared properties of the given class.
Returns the metadata associated with the specified key.
Retrieve the value associated with the given key from the session. If no value is associated with
Executes the fetched entities.
Fetches the pending entities.
Add indexed discriminators from super class to the set of indexed discriminators
Register a subclass with the translator.
Returns the component type of a collection type.
Returns the key type for a map.
Constructs the forward path of a given path.
Returns the current path relative to the given path.
Returns the path as a string.
Returns the number of elements up to the root of the tree.
Put all the bucket updates into the cache.
Remove all objects with the specified keys from the cache.
Puts the specified buckets into the cache if untouched.
Get all object with the given keys from the cache.
Returns a set containing the keys of the given collection of buckets.
Set the incomplete key.
Sets the id of the specified pojo.
Gets the value associated with the parent key.
Register a subclass of the given type key with the given context and path.
Returns true if the given types could have a common subtype.
Transforms the given owner to the given class.
Returns the annotation of the given type or null if no such annotation exists.
Add all values from the given session to this session.
Load a value with the specified key.
Executes the operation.
Translates the given result into a cache.
Fetches a result from the datastore by the given keys.
Load an entity from the datastore.
Create a key with the specified parent type and object id.
Returns the raw value of the given key.
Returns the value associated with the provided key s id or null if the key does not contain
Create a key from a url safe key.
objectify impl transactionless.
Create a new transact with a new parent object and a specified limit of tries - work
Perform a single transaction operation.
Checks whether the specified pojo matches any of the specified conditions.
objectify the whole object.
Set the global cache on an async datastore if the registrar is enabled and the entity cache
Gets metadata for entity.
Allocates a new key range.
Creates an objectify object with the given options and transactor supplier. The objectify object
Close the objectify object.
Converts a list of indexes to a list of boolean values. If the list is index
Creates a ref key with the specified value.
Get the current value or throw an exception. If the value is not found an exception is
Add a value to the map. If the map does not exist it will be created.
The raw is done. If the raw is not done the trigger function is called to trigger
Generate if conditions.
Completes the execution of the next runnable in the engine.
Returns the object at the given path relative to the given type.
Returns the cached stat for the given type creating a new one if necessary.
Unwraps and throws the given throwable.
Returns the translator for the given key context and path. If no translator exists for the given
Gets the root entity translator.
Creates a translator for the given type and context and path.
Allows to override the loading of an entity.
Gets property value from container.
Set the specified value of the specified pojo.
Allows to override the save behavior if the property is already saved.
Gets the value of the specified POJO.
Write extensions.
Writes a category to the content.
Writes a list of categories to the JSON stream.
Process the given string with the given processor context and encode the result with a URL encoding.
Returns an iterable view of the given bid response builder.
Gets the builder with the specified id.
Update bid builder with boolean response.
Removes all bids from the given bid response builder response using the given filter.
Reads extensions and adds them to a json object.
Returns true if the current token in the JSON is non - null and is not strict and
Register a builder for a json factory.
Register an open rtb json factory.
Get all the builder with the given ID.
This method processes the fields.
Updates an iterable by applying a function to each element.
Filters a list of objects by a predicate.
Gets the current name.
start object
start array
get the current token if it does not exist return null
Write boolean field.
Write a list of strings.
Write a list of integer values.
Write long array field.
Writes a list of protocol message enum values to a JSON generator.
Resolves a url with the given target. If the target starts with the given string
Fixes a url by replacing the start of the base path with the target.
Get host segments from url.
Gets the host from a url.
Gets page.
Load a list of strings from storm conf
Extract a map from the configuration.
Returns the protocol for the given URL.
Generate a warc string with the specified fields.
Extract refresh url from string.
Get the meta for an outlink
Filter metadata by md to transfer
Adds a url to the queue.
Removes all non - lower case and non - lower - case characters from the field name
Attempts to get the charset name for the given byte array.
Get charset from text.
Gets charset from meta data.
Returns true if the number of bytes in the array are in the range [ 0 num )
Set a string value for the given key.
Gets the first value of the specified keys.
Gets a list of cookies from an array of cookies.
Checks if the cookie domain match the url host name.
Returns the key of the cache.
Gets the rules set for the specified robot from the cache.
Extract meta tags from document
This method is called by subclasses when they need to ack some data.
Filter the specified URL by the specified metadata.
Filter the URL string by removing all substitution from the url string. If the URL string is
Read the rules from the rules file.
Processes all elements from the URL to a filter.
Get navigation filters from conf
add a record to the hdfs bolt
This method is used to blacklist queries that have not been sent yet.
Triggers queries if there is a delay between queries.
parse conf string to filters
Append a new node to the current node.
Adds a processing instruction to the document.
This method is used to override the default comment handling for XML comments.
Add a child element with the specified name and system id.
Returns the URL value for the given tuple.
Trim off white space at the end of text.
Checks if the given interval is one of the configured custom intervals for the given status.
get url from conf
Set the item count.
Determine the size of a given size and measure spec.
Set empty item drawable.
Set the selected angle.
Set the currently selected position.
Invalidates the item drawable at a specific position.
Calculates the relative position of the item.
Update the Update with a new amount of time.
Gets the background color of a particular entry.
Clamp value to upper limit.
Write all the coverage data to the JSON file.
Gets the data as a byte buffer.
Set string storage.
1 - D array.
Create an array of characters from a string.
Make from string array.
Makes a char from a string array.
If the record gr is time interval returns an array with the index of time interval elements.
Shows this frame.
show the frame as if the frame was iconified
Estimate the size of a single point.
Runs the grib1 record system command.
Create a unit with the given name and plural.
Create a new unit name with the given parameters.
Returns a string that is a plural form of the given string.
Returns whether the given date is included in the current date or not.
Returns a date range that is the intersection of this date range with the clip date range.
Extend the range by the given date.
Extend the current date by the given date.
Sets the start date of this period.
Sets the end date of this period.
Set the duration of the event.
add a bean to the map
Print a stack trace of the specified string.
Returns the name of the current symbol.
Converts the parameters to a string.
Opens a dap document from a byte array.
Computes the bounding box of the specified lat lon rect and stride.
Set min max and duration of an event.
Computes the chunking for a given element and number of dimensions.
Register the path with the watcher service.
Process the events.
Make a new feature dataset out of an existing dataset.
Is feature type ok.
Find the feature type of the ncd.
Returns catalog as HTML.
Converts a catalog to its HTML representation.
Gets user css string.
get user head string
Create a dynamic catalog object from a path and a base uri.
Adds the global services to the catalog builder.
Initializes the http client with the specified user agent and provider.
Used to get content from the http session and convert it to a string.
Put string content.
Returns a front page with the default value if no default value has been set.
Create a catalog with the given match and request path and URI.
Gets the thredds data point coverage for the specified grib collection and group
Get a single dataset or by type.
Returns true if this instance equals the specified other instance.
Create a unit id with the given parameters.
Parse a string representation of an attribute.
Reads a random number of bytes from a file.
Convert shorts to int.
Converts a byte array to an int.
Returns a date in julian time format with the given number of days and time units
Create a string that is valid for a net ByteBuffer object name.
Return true if the given object name is a valid object name.
Reads a record of data from the ma2 structure.
Reads a subset of the records from the section.
Fill non - record variables.
Makes a time struct for the specified time index.
Make a time struct from a calendar
Checks if a string has a time template.
Adds a function to the list of functions.
Returns a boolean function.
Get the function with the given name.
Load a new function.
Gets the level name of a record.
Obtains the description of a level from a grid record.
Returns the level unit of a record.
Returns the projection type of the specified grid record.
Checks if the grid record is vertical coordinate.
Returns true if the record is a layer of the grid record.
Make a coordinate transform.
Make dummy transform variable.
Make a projection object for the given coverage transform.
Entry point for the main method. This is just for testing purposes.
Saves the current state of the data table.
Returns this chronology with the specified time zone.
Writes a given number of bytes to the stream.
Write an array to the serial writer.
Writes len bytes to the output stream.
Writes a range of bytes to the output stream.
Finish the initialization.
Returns a calendar date range from the given date range.
Create a new grib2 instance based on a template and a byte array.
Returns the number of dds in the given string.
Converts a string into a das das parse tree.
Swaps the header of a grid.
Reads a grid from the file.
An example of how to use a grid index.
Appends the specified string to the output file.
Write headers and ss to file.
Add operations to the file.
Reads all the files in the directory and optionally the log files.
Scans a file for statistics.
Get the packing type of a grid number.
Method to find a grid with a parameter.
Converts a word to a decimal precision float array.
Unpack a data array.
ugrb - ugrb
Unpack Grib1 data.
Unpack a single array from the grib2 table.
Displays a list of grid records.
Gets the next byte.
Constructs a calendar date from the components of the given calendar object.
Returns a calendar date for the given date and time.
Returns a calendar date for the given time.
Returns a new calendar date with the same chronology as the specified calendar and the specified time
Create a date unit from a calendar name and a unit.
Get the difference between two dates.
Create a new atomic var wrapper for a given data cursor.
This method is called when the request is handled by the client. It sets up the request
Utility method to escape a string.
Convert a list of range to a list of slice
Unwraps dataset referenced by file.
Returns true if a list of dimensions contains a variable length.
Compute the effective shape for a given set of dimensions.
Adds the given date to this time period.
Return a new scaled unit that is the multiplication of the current unit with the given one.
Divide by another unit.
Divides one unit into another.
Returns a scaled unit that is a power of the current scale and this is a power of
Return the derived unit of this value with the given amount.
Convert an array of float values to a derived unit.
Calculates the derivative unit of this value with the given amount.
Gets canonical string.
Reads data from the given iterable into an array. The returned array will have the same
Read data from one collection to the other
Flatten a list of stations.
Finds a service by its name.
Returns the Gate size for the given data type.
Returns the first gate of the specified data type.
Returns the gate count of the specified data type.
Writes an xml - formatted representation of the given dataset to the given output stream.
Get the preferred layout for the given container.
Verify a descendant dataset.
generate inv catalog resolver catalog
Returns a date unit.
Constructs a date unit from a calendar object and a string representation.
Returns a calendar date unit for a period field and a base date.
Returns the quantity dimension of this dimension.
Returns true if the provided file is a random access file.
Reads the array data from the data1 section to the data2 section.
Reads data from a regular index into an array.
Reads the data of a channel to a byte channel.
Calculates the elevation of an angle.
Calculates the step between two numbers.
Returns the distance between the two points.
Calculates the data of a string and a number.
Calculates the NaN value of a column major by prf and wave.
Make the vertical transform.
Set debug flags to the input.
Set index file mode for append mode to read mode to write mode.
Reads the values of a grid variable at the specified index.
Returns true if there is a grid variable at the specified time at the specified index for the
Get the bounding box of the region. If no bounding box is specified return null.
Finish the writing of the sequence.
Set the tab at the current index of the specified string to the specified string.
Pad the specified string with the specified number of characters to the specified number of characters.
Returns a string containing the int value padded with zeros if necessary.
Returns a string containing the long value padded with zeros if necessary.
Returns a string of the specified size for the specified number of bytes.
Show a double.
Show two places.
Returns a string representation of the specified shape.
Finishes the current slice.
Converts the current constraint string to a constraint string.
Compose a slice from source to target.
Map the element at the specified index.
Dumps the contents of a byte buffer.
Returns the ellipsoid with the specified type.
Returns the ellipsoid with the specified type or null if no ellipsoid with the
Decode vlen data.
extract url from url input stream
get html content from url
Filter input stream by tag.
Reads data from a section to a channel.
Adds all the attributes in the specified iterable to this model.
Remove the attribute with the specified name.
Removes the specified attribute from this annotation.
Get offsets in time units.
add listener to action source
Returns the date represented by the given text.
Get the standard or iso date for a string.
Gets the origin of this date.
Returns the date represented by this date. The date is represented by the number of seconds since
Converts a double value to a date
Returns the value of the date represented by this object s time unit.
Convert a double value to a date time string.
Get the grid spacing.
Add dimensions to a grid file.
Add coord axis.
Make a projection for the provided projection type.
Adds the given variable to the stack.
Create a new system variable.
Make the root node of the LM.
Make the ps parameter the origin of the line.
Make the mercator.
Set the dx and dy parameters for the specified projection point.
This method is used to read a dataset from a catalog file.
Retrieve the metadata object from the URL.
Returns the level of the 1st column of this matrix.
Returns true if the file is a valid file.
Writes an array of bytes.
Sets the attribute name to the specified value.
Get the coordinate name for a given dimension
Get the coordinate name for a given dimension
Build the response as an XML string.
Build a dap exception.
Constructs the breakup levels for a given level of data.
Make a dimension with the specified values and units.
Create new variables at the specified level.
Make a coordinate axis from a reference to a time axis.
shave a float value with a given bit mask
Writes a string to a file.
Wraps a net Normal dataset in the specified mode. If the mode is not specified
Opens a file.
Clear the coordinate system of all variables.
Returns the coordinate of the axis with the specified type.
Find a coordinate axis by its full name.
Find the coordinate system with the given name.
Find a coordinate transform by its name.
Returns true if enhance mode is needed.
Set the values of a variable at a specified index.
Set the values of a variable.
Create an array from a list of strings.
Returns the offset of each dimension.
get existing file m
Returns the features in the specified box intersecting with the current bounding box.
Discretize the given double array.
Adds the specified thredds metadata to the current collection.
Adds documentation to the inv documentation list.
Removes the documentation of the specified type from this class file.
Returns the number of bytes in the range [ start end ).
Determines if the specified file is a conventions.
Create a breakup convention for the given string.
Constructs a naming convention from a main conv and a list of strings.
Build coordinate systems for a given dataset.
Find coordinate axes in the data set.
Finds coordinate systems in the data set.
Make coordinate systems of all variables in the dataset.
Make coordinate systems maximal.
Returns true if the variable is coordinate axis for a coordinate axis.
Subtracts the specified dataset from this set.
Sets the filter on the given dataset and deletes the old dataset.
Marks a dataset for being included in the catalog.
init once - set only needed for tds to work
Counts the given comparable value.
Adds a new symbol with the given name and symbol definition.
Compares two values on the same column
Compares two rows for a given column.
This method is called when a dap node is reserved.
Returns true if the specified time range is within the specified time range false otherwise.
Register a class with the class loader.
Register a dsp class.
Returns whether or not the given dsp class is registered in this registry.
Unregisters a dsp class.
Gets reason for time interval size in hours.
Returns an array with the indicated time interval offset from the specified grib2 record.
Get the vert unit with the given code.
Sorts the dap tree according to their natural order.
Finds a variable in the dataset with the specified attribute name.
Find a variable with the attribute value
Find the name of a variable with an attribute value.
Find a variable with a specific attribute value
Finds a structure that is a nested structure.
Returns true if the given dataset has a record of the given data type.
Get the literal value of a key.
Get a feature type from a data set.
Returns the value of a named variable or null if the variable does not exist in the dataset
Get the value at a specific index of a coordinate.
Connect val to lon val - &gt ; max jump
Returns the values of a coordinate.
Adds the specified range to the array of section r1 and r2.
Finds the index of the closest to target in the array.
Returns the name of the attribute or an enumeration.
Add an action to this menu.
Returns the first match of the given path or null if the path does not match.
Main entry point for the projection manager.
Returns the index of the specified element in the specified array.
Add a url to the cache
Reports the cache of the integer values.
Stop background loading of elements.
Remove all elements with URL that match the exemption url. If the exemption url is
Gets a resource from a http session.
Get the mock method object.
Get a random object from a specified dap type.
Counts the next number of elements.
Reads the array data.
Get the provider for a file system.
Reads a table of stations.
Gets the index of the t gr.
Remove a data variable.
Get the cloud hgt2 meters for a given height.
Used to read the values of a grid set.
Set the number of colors.
Create an affine transform for the given screen and bounds.
Create an auth scope from a uri.
Finish a previous build.
Returns true if this factor is a reciprocal of the specified factor.
Get the catalog of a directory. If the directory does not exist it will be created.
Returns the index of the specified element in the sorted array or num if the element want is
Read metadata content from a url.
Read metadata content.
Adds metadata content to the element.
Returns true if all the configuration values of the given object can be validated.
Create a new config object using the element attribute of the catalog element.
Create a new dataset from a source element.
Create a new dataset and the values of the specified element.
Read dataset filter.
Create a result service object from a result service element.
Create a new element in the generated catalog.
Create a dataset element.
Create a jdom2 element with default namespace.
Create a dataset filter element.
Create a result service element.
Return true if the specified flag is set.
Construct the menu. Remove all if the number of times is greater than the number of times
Adds all the parameters of the specified string to the current context.
Make a parameter from a string array.
Returns the parameter with the given name.
Reads the contents of the stream as a string.
Reads the specified number of bytes from the input stream and returns the results as an array
Replaces a ens template with a file template
Set a new station info variable. The type of the variable must match the data type of
Store value in buff and notify event if different.
Gets a bitmap from a random access file.
Set the net function to use as a file. The file is created by the net function
Sets the debug flags for this thread.
Parse a name.
Returns true if this is a group dstruct.
Get the dimension dimension of the given dods.
Set the value of a dimension in a group and add it to the group.
Construct a list of dimensions from an array of dods.
Returns true if the argument is an unsigned type.
Returns the data for the specified connection or null if the connection does not exist.
Get an image icon.
Get an image by name.
Create a cursor with the specified name. If the cursor is out of bounds an IllegalArgumentException
Fills a random object from a file.
Fills an object from a data input stream.
Fills an object with given data type.
Create an array of primitive values for a given data type.
Convert byte array to char array.
Converts a char array to a UTF - 8 encoded byte array.
Convert byte array to char array.
Reads a single section of the M ma2 array.
Converts a section to an array structure.
Returns a scalar string.
Gets the scalar structure at the given index.
Returns the array of the given structure from the ma2 member at the given recno.
Returns a structure which contains all the members of a given dap variable.
Add a new dimension to the net process.
Normalize a path.
Add an explicit dataset.
Scans the specified directory for dataset files and adds them to the current scan result set.
Finish a task by canceling it and scanning from the underlying dataset manager.
Make datasets.
Gets the typical dataset.
Create a dataset with the given parameters.
Add a new resource to the cache.
Add a point to the polygon
Gets the upper and lower bound of the bounding box.
Returns the lower bound of the bounding box of this bounding box.
Validates the builder.
Tells whether the given dataset is the same as this dataset.
Adds all the features of the specified feature dataset point to this dataset.
Returns a constraint for the specified parameter set. If the constraint is invalid the function exception is
Evaluate all clauses of a special object.
Prints the constraint to the specified print writer.
Attempts to amend a structure file to a group.
Sets the shared dimensions of a variable with the same number of elements but with a different location
Check if the number of dimensions is equal to the number of other dimensions. If it is
Returns the group with the specified name from the parent group or null if no group with the
Read xlink content.
Get the full uri
set projection to a projection manager.
Add a component to the layout.
Invalidate the layout of this label.
Remove a component from the layout.
Get the minimum size of the font in the specified container.
This method prints the layout of the specified container.
Returns true if the specified coordinate is radial and the specified coordinate is an elevation coordinate
Gets the maximum radial axis value.
Converts a geocentric location to an array ofByteBuffer coordinates.
Converts a point on the goset to a point on the same geometric object.
Converts goes angle to angle.
Get the scan geometry along the axis
Create a scan geom based on the current angle axis
Makes a new coordinate for each runtime date and time.
Converts a point obs dataset to a file.
Rewrite a feature dataset.
Returns the sequence of values for the specified member.
Gets the name of this variable.
Gets a unique id.
Gets the access for a given service type.
Finds a dataset by it s name.
Gets the parent catalog.
Get all metadata of a given type
Find the invariant for the given service name.
Gets a list of variables associated with a given vocab
Finds all invariant references in a dataset tree.
Escapes a path so that it can be used as a URI.
Adds the stagger to the end of the array.
Create the extrap Deferred array from the given double array.
Computes the radius of a given location.
Gets detail info as a string.
Create a new structure with the specified part name and the specified list of dimensions. If the
Create a new missing variable.
Make a parameter variable.
Add the global attributes.
Returns the size of the variable with the given name.
Get byte array for given data type.
Gibt zurueck geglich eine geglich e
Verify that the specified token has an error and write the result to the specified string.
Reduces the value of the specified element to the value of the specified element.
Method to read a string from the DAP stream. Returns null if the DAP stream
Reads an error.
Reads len bytes into the given buffer starting at the given offset.
Reads the header of the stream.
Converts a string to a date
Reads a list of records from a url string.
Make a transfer between two groups.
Returns the stn file of the given location or null if the location does not exist.
Overrides the open method to acquire a random access file.
Gets the beginning of a given index.
Returns the end position of the specified index.
Create all runtime collections.
Set the text value of the field. If the value is null the field is set to
Returns the data type for this record according to the specified format.
Calculates the EC LLA error for the given x y z a a b and
Clean unit string.
Clean name string.
Checks if is unitless.
Create a notes object.
Gets a var id from the specified note.
Parses the given das into the current model.
Finds a dods by name.
Returns the data object associated with v.
Finds a child by its index.
Gets the parent group.
Returns the dimension at the specified index.
Returns the index of the dimension with the given name.
Returns the units attribute of the Content Specification as a string.
Returns the shape as a section of the image
Returns a new variable with the specified value of the specified dimension.
Set the value of the enum constant.
Reads a list of ranges.
Reads a scalar string.
Reads an array.
Reads an array from the given section.
Returns a string representation of the cdl.
Returns a string representation of this dataset in debug mode.
Set the element data type.
Sets the number of dimensions for this shape.
Resets the shape of this shape object.
Set the dimensions of this group to the specified string.
Resets the dimensions of this group.
Set the dimension of the specified index.
Set the element data in the cache. If the element is not the same as the data
Get a list of all the dimensions in this dimension.
Set the bounding box of the image.
Finishes the current collection by creating a new list of the hash values and sort the collections
Get a list of all datasets contained in this dataset.
Returns true if the path ends with any of the syn extensions.
Opens the DAP managerr factory with the specified dataset as the source.
Build the DAP Package from the current DAP file.
Recursive method to build the seqtypes for a variable.
dapvar is a dap var with a list of dimensions.
Finds a matching enum.
Returns the core of the specified dimension set.
Scans a file for statistics.
Processes a message as dataset.
Do post http request.
Get the affine transform of the coordinate system
Rotate the area defined by the display width and height. This is useful if you want
Get the map area of the image.
Converts a point in world space to a point in screen space.
Fire the map area change event.
zoom the image by given startx starty width and height
Recompute the bounding box.
Adds a listener to the set of listeners.
Remove a listener
Sends a util. event object to the server.
Sends an event to all registered listeners of the given source object.
Sends a command to a writer.
Print variable data.
Print a variable data section.
Prints a structure data object to a print writer.
Writes the contents of an array to a writer.
Prints an array to a writer.
Convenience method to write a net type - specific element to a file.
Read a double attribute from a container.
Add a parameter to the parameter list.
Reads a single slice of the given type.
Returns true if the record is positive up.
Returns true if this unit and the given unit are compatible.
Returns a string representation of this string with the specified string as its label.
Set the bit at the specified offset.
Returns the number of bits between 0 and nb bits.
Returns the number of bits in bits 2 of this bit vector s
Opens a connection to the server.
Liefert das das das das das das das d
Gets the complete ce string.
Convert a projection point to a lat lon point.
Convert a string to an idv dataset catalog.
Returns a date range with the same start date and the end date as the range provided.
Returns true if the given file is a random access file.
Convert header information to the norad information.
Extract sensor information.
Gets the root element of the document.
Utility method to clean out XML characters.
Xunescape string.
Escapes a string for use in an URL query.
Unescapes a string for use in a URL.
Converts a string to a string using backslash encoding.
Encodes a string for use in an ASCII - safe way.
lightning global attributes
Swap a short from an array of bytes at a specific offset.
Swap a byte array at a specific offset.
Swaps the specified number of bits in the specified array with a double.
Returns a float by swap the bits v with v.
Swap two double bits.
Convert a short to an array of bytes.
Converts an integer to an array of bytes.
Converts a long to an array of bytes.
Creates a new vertical transform that includes the subset of the current values in the specified range.
Returns an XML representation of the last modified date.
Copies the specified array.
Adds an xml element to the output file.
Writes the list of features to a single file.
Adds level to list of grid records.
Add a new dimension to the net process.
Add the name of the requested group to the net mode file. If no group g is
Transforms a coordinate.
Returns the index of the data point in the record s levels.
Terminates the process and closes the system out.
Returns the file object for the specified file. If the file does not exist it will be
Returns the file object for the given location or null if not found.
Prints the contents of this cache file to the specified print stream.
Gets a list of all files in a directory and removes them from the cache.
Calculates the bearing of a given point e in a given location on a given
Calculates the bearing of the given points.
The main entry point for this class.
Finds a point in a given location.
Returns a lat lon point using pt1 and pt1 in the same order as pt1
Returns a lat lon point using the default lat lon.
Load a picture in a separate thread.
Loads a picture.
Loads the image.
Stop loading the image.
Stops loading the image with the given URL.
Get the size of this dimension
Set the source buffered image.
Get the standard uri of the dataset.
This method transfers information from a list of data descriptor to a list of data descriptor.
Returns the total number of bits for this descriptor and all of its sub - keys.
Returns true if this object equals the specified object.
Loads the header.
Loads the next record from the file. Returns the number of records actually loaded.
Returns the data for the specified field.
Get a set of doubles by name.
Returns the strings of the specified string field. Returns null if the field does not exist in
Get boolean array by field name.
Get the i - th field name.
Returns an array of strings representing the names of the fields in this record.
Main method of this class.
Returns a map containing all the attributes associated with the specified string.
Set an attribute on this dap.
Remove an attribute from this dap.
Returns the dap group for this dataset.
Returns the dap node corresponding to this element s parent.
Get the escaped short name.
Returns the full path to the current dap node.
Returns the path of all dap groups in this node.
Returns the computefqn node of this dap.
Builds and sets a dap data source for the specified dataset and byte order.
Add a collection value to the bean.
Get the property value as a list.
Gets an object by its name.
Reads data from the specified file starting at the specified position.
Print the dataset.
Print a compound instance.
Writes an element to a string.
Write an element to a file.
Writes an element to an output stream.
Write element to writer.
Make a dimension element.
Transforms an attribute container to a coordinate.
Get int array of attribute.
Returns the base unit with the given name and symbol with the given quantity.
Returns a unit with the given name and symbol attached to the given unit definition.
Create a base unit db.
Get the singleton instance of si.
Finds the index of the element of the target array within the bounds of the axis.
Returns the index of the closest point to the specified target.
Get the subset of the specified values with the specified stride.
Opens a new feature - based dataset using the specified task.
Create a data factory. result object.
Annotates a dataset by name and id.
Reads a number of float values from a file starting at a specific position.
Returns a string representation of this URI with the given parts attached.
Returns the canonical version of the given string.
Normalize the units of a string.
Finish the task by resolving the dataset URL and writing the log record to the log file.
Returns the object with the specified key null if the key is not present.
Associates the specified object with the specified key in this map. If the map previously contained
Returns the date represented by this object.
Emit an XML document for the specified dap node and ce with the specified flags.
Print an xml attribute or attribute value with specified flags.
Returns true if the attribute is special.
Print all dimensions of a dap variable.
Returns true if the provided file is a valid file.
Sets the attribute values of the specified area.
Set the attribute of a variable to a block of bits.
Get cal type by string.
Set the attribute values for the image.
Finds all coordinates of the specified data set.
Find coord by type.
Find a coordinate axis by type.
Find coord by type
Find the dimension of a given axis type.
Finds the best coordinate system for a data set.
Find axis that depends on a specific axis type
Returns the base type of the given variable name for the given row.
Reads a marker from the given data stream.
Writes a marker to the sink.
The main entry point for this example.
Returns an array of strings.
Get the parameter list.
Set a list of stations
Set the selected station.
Redraws the current image.
Reads a single object from the input stream.
Writes an object out to the output stream
Add the given db to this db.
Add a unit.
Adds a unit with the given name.
Returns the unit with the given id.
Add a unit by name.
Adds a unit by symbol.
Add a unit to the map and throws an exception if the new unit is not in the
Adds the class name and look to the current menu.
Find a record by Return a random record using the drspos API.
Reads a dataset.
Converts a string dataset into an object and sends it to the output stream sink.
Returns a deep copy of this projection. The returned projection will have the same screen position and
Create a new thredds dataset using the inv dataset and a specified task.
Create a new thredds dataset.
Opens a dataset.
Annotates a dataset by name and ID.
Add a record to the partition list.
Make a grib collection mutable.
Create a reg expression that matches a pattern and duration time coverage.
Create a reg exp and duration time coverage data provider instance that matches a pattern on a dataset
Write to a file with a &lt ; input&gt ; &lt ; output&
Used to read a single array structure from the file.
Set a picture at the specified URL with the specified legend parameter and rotation.
Set the buffered image to a string with a status message.
zoom to fit
This method is used to paint the component.
Converts an array of ints with a time value to an array of ints with the same
Converts an array of ints to a Dtf string.
get the date and time string for an array of idt arr.
Get the daym of the specified year and imon.
Create a string for a ccrd index.
Converts an array of ints to an array of ints in swp4
Gets the packing name for a specific key.
Returns the data type of a data type.
Reads data from the input stream.
This method is used to externalize the output of this object to the given output stream.
Get the tag associated with the code.
Get the next image.
Returns the size of a dap.
Returns the sum of the elements of an array
Set a grid coordinate.
Set the overlap value.
Clears all elements of the grid.
Marks the specified object if it is clear.
Returns the intersection of the specified rectangle with this one.
Finds the intersection between the two grid points.
Find the object closest to the specified point.
Returns the squared Euclidean distance between the two points.
Get or create a base unit.
fragment - > service type - > cdm remote thredds or cdm remote
Internal service type search path.
Decode a path extension to a service type.
check if the service type is dods
Sends data to a named section of the output stream.
Returns a string representing the suffix of the specified string.
Returns the prefix of the given string.
Locates a string in a directory.
Locates a string relative to a directory.
Extract bytes from buffer.
Converts a dap variable into a list of dap nodes.
Returns null if the given string is null.
Joins the specified string array into a single string with the specified separator between the specified indices
Returns true if the specified path contains a drive letter.
Returns a list of protocols for the given URL and breakpoint.
Convert a list of dap indices to a list of slice objects.
Returns a list of slice objects for the specified variable offset in the specified dap variable order
Returns whether or not the list of slice is contiguous.
Returns true if the list is a single point.
Convert a list of slice objects to an index.
Read data from the input stream.
Set the station info.
Read configuration from catalog and path.
Updates the list of groups from the list of dap groups.
Returns the dap variable with the specified name.
Get the axis type.
Returns a grib stat of the specified type.
Create a subset of the coverage data points along the specified axis.
Returns a list of the ranges defined by the y - > x - > y - >
Sets the default values for the given properties.
get session id from session context
Set the maximum number of redirects.
Sets whether to use sessions.
Closes this session.
Set the authentication and proxy on the builder.
This method is used by the framework to track http session state.
Sets the provider for the given scope and credentials provider.
Validate that the url string is valid
Create an index factory for a given shape
Computes the stride for a given shape and stride array.
Sets the section based on the given list of ranges.
Reduces the number of elements in this array to the number of elements in the specified
Returns a new index with the specified number of elements for the specified dimension.
Creates a new copy of this array with the specified elements at index1 and index2.
Returns a copy of this array with the specified number of elements permuted
Returns an iterator over the elements of the specified array.
Returns the index of the current element.
Set current array index to the specified array.
Set a new dimension to a given value.
Sets the values of this index to the specified values.
Get time interval name.
Return a calendar date range from the current time unit to the time unit of the current time
Make a list of date and time.
Converts a parameter model to a list of parameter objects.
Returns the list of stations for the given slat. If the slat does not
Returns a list of all the keys of the current session.
Return a list of dates.
Returns the index of the first station of the given id or - 1 if not found.
Gets the file type.
indent a given number of depth in the tree.
Set depth to n.
read or create a grib index from a single file
Scans a collection for resources that match the pattern specified.
Returns true if scan is needed.
Scans the string table for the first time.
Set debug flags.
Create a new variable and add it to the current writer.
Write task to file.
Validate xml object doc.
Return the constraint string.
Set the original variable.
Reads the array value. If the value has not been cached the cached data is returned
Returns true if conversion needed false otherwise.
Converts the array data to a structure.
Convert member information from the member wrapper to the member information from the org variable to the member
Finds a variable enhanced for a given org name.
Checks whether a variable has data.
Enhances all variables with the given mode.
Returns true if the resource is ok.
Make an empty sequence.
Create a sequence from a list of parameters and a float - array values.
Create a new sequence with the specified part name.
Set the vertical coordinate attribute of a variable.
Read catalog impl from uri string and callback.
Get a catalog object from an XML stream.
Read a catalog impl from an XML document.
Convert catalog impl to xml and write result to output stream.
Returns the metadata converter for the given key.
Gets the dimensionless id.
Compute the multiplication of this unit with the specified unit.
Divides this unit by the specified unit and returns the resulting unit.
Returns the derived unit of the given input array.
Returns true if this is compatible with the specified unit.
Write a simple geometry to the document
Writes the given point to the XML string.
Writes the line to an XML string.
Write polygon.
Returns all subnodes of the given parent node.
This method is called when a node is reserved.
Get subset string.
Returns the ma factory for the given array structure.
Set the value of a member of this structure as an array.
Create the ma factory for the given data type
Returns the geometry type of the geometry with the given name.
Make a station time series.
Attempts to compile the given AST using the specified sort of rules.
Compiles a filter expression.
Adds a redef relation to the ceast.
Returns a view of the specified array.
Return true if this region is contained in the specified region.
Extend a point by its latitude and longitude.
Extend the specified lat lon rect to this lat lon rect.
Intersects the specified lat lon rect with the specified clip. Returns null if the clip
Adds the elements of the two arrays.
Returns true if the values are conformable to each other.
Returns true if the values in the 2D array are conformable to each other.
Convert an array to a data type
Copies the contents of an array.
Copies the contents of the specified array to the specified array.
Copies the contents of an array to another array.
Returns the min and max of the specified array.
Sets the value of each element of the given array to the given value.
Returns a new catalog builder based on this catalog but without dataset names.
Returns a projection implementation for the given projection.
Unescapes an ID.
URL - decode a string.
Unescapes a URL so it can be used as a URL encoded string.
Escapes a string with a set of reserved characters.
Unescapes a string for use in a backslash.
Converts a escaped string into a list of strings.
Returns the index of the given character in the escaped string or - 1 if the character is
Append a backslash to a string.
This method is used to read an object from an atomic context.
Returns a list containing all non - compound cursor instances of the given cursor.
Returns the value of the specified UI property or null if the property is not defined.
Gets the class for the given component. If the component class is not found then the
Compile the dataset and data buffer.
Generate a d4 cursor for a structure array.
Generate a d4 cursor for a structure.
Generate a d4 cursor for the sequence array of a variable.
Generate a d4 cursor from a dap variable.
Reads a single integer from the stream and returns the resulting long value. The returned long
Returns the delegate of the specified field.
Returns the value of the specified field of this object.
Set the value of the specified field of the specified object.
Adds a field to this batch.
Adds a check box to the field with the specified name and default value.
Add a date field.
Adds a new double field to this dataset with the specified label and default value.
Adds a new field to the table with the specified name and default value.
Add a new password field.
Add a text field.
Add a text combo field.
Add a text area field.
Adds a layout component for the specified heading and row.
Adds a component to the layout.
Adds an empty row to this layout.
Returns the frame that is currently active
Returns the cell spacing.
Returns an array of factors.
Perform a mult operation on the specified array of dimensions.
Returns an array that contains all the elements of the first array that are a power of the
Returns true if this dimension is reciprocal of the specified dimension.
Returns true if all the factors are dimensionless.
Create a param tables factory.
factory method for grib1 param tables.
Lookup a parameter table.
Adds a parameter table to the grib1 lookup.
Returns this unit with the specified power.
Converts an array of float values to a unit vector.
Initialize the hashtable.
Make a vertical variable with the specified number of levels.
Returns the name of the current position in the file or null if the current position is not
Extract a short from the byte array at the specified offset.
Extracts the number of bytes at a specific offset in a byte array.
This method extracts a float from a byte array at a specific offset in the file descriptor.
This method extracts a double from the current byte array at the specified offset.
Audits a unit for a given alias and name.
Adds the given symbol to the exception list.
Returns a converter for the given unit from the given unit to the given unit.
Set a new data table
Set new feature data
Draws this shape with the specified transform for the specified pixel.
Get an iterator of shapes in the current display. If debug is set it will print the
Reads data from the input stream.
Read buffer.
Set the current offset to the number of more bytes to read.
Reads len bytes into the given array starting at the given offset
Skips the given number of bytes.
Add a new dimension to the net process.
Get the index of the grid record at the specified level.
Return true if the provided file is a valid file.
This method is used to open a random access file.
Reads the array data.
Read one row of data.
Create a new dataset from the given dataset.
Create a base type for a variable only if its rank is equal to num.
Map the area specified by this projection to another projection.
Map the area of the specified region to the display area of the specified region.
Set the area of the map to the given lat lon.
Set the projection impl for this context.
Add actions to a JMenu.
redraw later
Add a rectangle to the current screen size.
Set the selected state of the dialog.
Returns a double at the specified offset.
Get a double value from the data at the specified index.
Gets an object at a specific index.
a string with the same name but the same number of characters
Read scaled double.
Attempts to find a parameter by its name ignoring case.
Swap the byte order.
Get the number of time steps in the specified file.
Gets the file name at the specified index for the specified template.
Gets the file names.
Get the ddf.
Get the full path of a file.
Adds a sub to the chsub array.
Convert a reference date to a time unit.
Reads a random number of bytes from a file.
Return data at specified offset of specified length from this buffer as a byte array.
Generate code for 12n13n14 field.
Generate the pcode code for a single string.
Checks to see if the file contains a valid header. If it does it returns the
generates code for 5 or 6 bits of code
Generate code for a 128 - bit string.
Get the levels of an array.
Converts an array of short arrays to the corresponding levels.
Add a new variable.
Add a new parameter with the specified parameters.
Uncompress a byte buffer.
Returns the index of a word of the specified number of bytes in the byte array b.
Get a number of bytes from a byte array.
Converts an array of data type data to an array of objects of type data type.
This method is called by the server side when a request is sent to the DP.
Returns a dap request for the specified request state.
Send an error message.
Returns true if point p is anchor to point p.
Draws a point on the stretched area.
Returns a date only if the given text is null or empty.
Replace data variables in the given data structure.
Ensure that the memory array size allows. If the size of the array is not a valid
Reads a two - byte int from a file.
Read an unsigned short from a file.
Reads a 3 - byte int from a file.
Reads a 2 - byte integer from a file.
Reads a 3 - byte integer from a file.
Reads a 4 - byte float from a file.
Returns a float value from four bytes.
Reads a 8 byte integer from a file and returns it as a long.
Count the number of bits in an array of bytes.
Returns a copy of this projection. The returned projection will have the same properties as the original
Returns a new string containing the same name and origin as this string but with the same name
Escapes a string.
Unescapes a string so that it can be used as a back reference.
Returns a list of strings separated by the given separator.
Make an inv object for a given date and time.
Return the first character of the path that starts with the specified string.
Returns the number of projected components.
Returns the current time as a date.
Creates a new bb from the given structure and section.
The main entry point to the index.
Reads a grib1 record and returns it.
Determines if the str is a global attribute on the net level.
Make autm coordinate.
Re - creates a new area file from the current location.
Is the date before the given date?
Returns whether the date is before the given date type.
Returns true if the given date is after the calendar date.
Set a value at the specified index.
Add coordinate system.
Set the units of the attribute as a string.
Get the string representation of the units.
Initialize with the specified read mode.
Read catalog configuration.
Finds &lt ; dataset&gt ; &lt ; set&gt ; &lt
Reads a directory in the given read mode if the limit is reached. Otherwise the read
Returns true if the given lon is between beg and end.
Convert a double to a string.
Convert a double to a string.
Compares this to the specified base quantity.
Returns the selected data set node.
Set the selected data set in the tree.
Returns a new tree path from the given node to the current node.
Opens all the nodes of the catalog.
Set the catalog.
Set the catalog.
Find the alias for a variable in the dataset.
Write a non - negative integer to the stream.
Writes a range of characters to the stream.
Reads characters from the stream.
Set the debug flags to the input value.
Adds a member to this set.
Returns the index of the given member or - 1 if the member is null.
Get the member names.
Returns the member with the given name.
This method returns a bitmap at a random position in the file provided.
Restore the state of this model from its original state.
Returns an iterator that iterates over the selected rows in the table.
Returns the index of the model in the table.
Returns the array value of the given member.
Gets a scalar value.
Returns the array of values stored in this data structure for the given member.
Returns the scalar value for the given data members.
Returns the array for a given member.
Gets a scalar byte.
Returns the byte array stored in this data structure for the given member.
Returns the scalar index for the given data member.
Returns the array for the given member.
Gets a scalar value.
Returns the short array for the given member.
Gets a scalar value.
Returns the long array for the given member.
Gets a scalar value.
Returns the char array stored in this data structure for the given member.
Do one dataset.
Returns a deep copy of the given dataset.
Transfers the metadata of a dataset node from another node to this node.
Gets or creates a new thredds metadata object.
Adds a product record to the grid.
Shows the missing information.
Show missing summary.
Find a grid record for a given ens and time and level.
Dump the current time of the grid to a string.
Make string name for current level.
subset by intervals
Compares two byte arrays to see if they contain the same data.
Converts a string representation of a DAP document to a dataset model.
Process the attributes of the given dataset.
Adds a list of coordinate objects to the current model.
Set the gaussian lats.
Parse a variable reference in a section spec.
Constructs a string version of a variable spec from a list of ranges.
Returns true if the specified region contains the specified element. If the specified region does not contain
Closes this session and releases any system resources associated with it.
Execute the http command and return the status code.
Identify the encoding for a given dataset and feature type.
Check if the specified dimension match the specified dimension.
Set the input stream.
Reads a character from the stream.
This method is used to start a task
Convert a string to a uri.
Create a uri exclude from a list of uris.
Returns null if the specified string is null or of the same length. Otherwise returns the specified
Returns a new string that is the same length as the given prefix and with the given suffix
Whether the dataset was modified since the last modified time.
Copy info from another mutable grib collection.
Returns a sorted list of all file names in the order they appear in the file list.
Set the random access file index.
Gets the grib index file path in cache.
Returns the number of names of all counters in the registry.
Add a global attribute.
Add a global attribute with the specified name and the specified list of values.
Delete an attribute from the global group.
Rename a global attribute.
Set the value of an attribute on the variable.
Add a variable with the specified name and array value.
Deletes an attribute from the variable. If the variable does not exist it will be deleted
Rename a variable.
Make a file sub type.
Create the headers and write the results to the output file.
Writes the members of this geometry to a gml file.
Generates an XML - formatted string that represents a station obs dataset.
Returns an XML representation of the collection.
Write dsr.
Send dxr.
Write error.
Closes the connection to the manager. If the manager is already closed this will do nothing
If mode is dmr then this method returns immediately. Otherwise it returns immediately.
Returns true if the specified number of elements in this sub - array contains the specified value.
Gets the element at the specified index.
Shifts the specified range to the specified location.
Fills the specified object with the data from the file at the specified index.
Reads data from a file to a channel.
Returns a primitive vector that contains all the values of the specified range.
Set the values.
Create a new double array from an array of ints.
Gets the dataset boundaries.
Checks requested variables from coverage collection.
Returns the dataset for the given structure name.
Attempts to get the resource path from the specified location.
Make vertical dimensions.
Reads a pib file.
Finish the search and destroy the internal data structures.
Transfer the metadata of one dataset to another.
Copy metadata from another dataset impl to this one.
Transfers data from one dataset to another.
Set the current hash code for each element in the list.
Adds a dataset to this set.
Remove a dataset from this catalog.
Replaces a dataset in this catalog with another dataset in the same catalog.
Adds a service to this invariant.
Remove a service from the server.
Set a list of all the services with the same key.
Remove metadata for a local dataset.
Get the value of the user property.
Validates the builder.
Returns a list of all string descriptors.
Construct the path to the server.
Writes capabilities to the print writer.
Get a feature.
Check the parameters for an error.
A http handler for the request.
Gets capabilities for the specified URL.
Returns the length of this buffer in bytes.
Get the date the object was last modified
get a file from http servlet
Copy a string to a byte array
Set the content length of the response.
Get a uri from a http servlet request.
Get the request path from the http servlet request.
Gets a request from the http servlet.
Returns the value of the first parameter with the given name ignoring case.
Saves the current state of the prefs so that it can be restored later.
Write a directory to a file.
Create a new bit counter for the specified sub - key row replication count and data descriptor.
Count the number of bits in the bit at the current row
Append a line to the buffer.
Make a single document from a point feature collection.
Gets the capabilities of the document.
Get a record of all coordinates at the specified index.
Returns the coordinate at the specified index.
Adds an item to the selected item list.
Handles a throwable.
step the range [ firstpos lastpos ).
Processes the XML using the gen function.
Create a new feature type for the specified endpoint.
Set the value of this property.
Returns a grib1 factory for a given number of grid points.
Copy a boolean value from an input stream to an output stream.
Reads the contents of the input stream and converts it to a string.
Reads the contents of a stream into a byte array.
Writes the contents of a string to an output stream.
Copies the contents of a file into an output stream.
Copy a part of a file from a raf to a part of a given buffer.
Copy a string from a dir to a file
Reads the contents of a file to a byte array.
Reads the contents of a file into a string.
Writes the contents of the specified string to the specified file.
Writes the contents of a string to a file.
Copy the contents of the input stream to the given file and write them to the given file
Parses an exception handler.
Handles a dap2 exception handler.
Reports a bad url.
get catalog for current server
Prints the catalog to the specified print writer.
Prints the status of the server.
Prints a bad url string.
Returns a date with null year month day hour minute and second.
Reads the data of a variable into an array.
Create a collection reader from a string.
Opens a collection reader for the specified string.
Returns a string with the specified allow characters replaced by the specified char.
Remove all non - null bytes from h and return a new string with the number of non
Filter string.
Filter a string by 7 bits.
Make a string a valid cdm object name.
Returns how many times each character in s1 matches each character in s2.
Pad a string with a given number of characters to the left.
Pad a string to the right with a specified length.
Returns the specified string with the specified index removed.
Removes c from s if it is present.
Remove c from end
Collapses all whitespace characters in the specified string.
Replaces the out character with the in character.
Replace all occurrences of the given character with the given string.
Replaces the pattern in the string with the value if the pattern is present in the string
Substitutes a string with a string.
Substitutes a string with another string.
remove all characters from sb that match all characters in out.
Replace all occurrences of the given character in the given string with the given character in the given
Replaces each character in sb with the character in in in in in in in in.
Replaces each substring of the given string with the given string.
Returns the string with the bad characters removed.
subscribe to collection update event.
Check the state of the collection. If the collection does not exist first it is created.
Update the fields of the given collection.
Return a list of inv dataset objects for this model.
Release any resources held by this object.
Make a deep copy of a structure
Copies from an array to an array.
Copy to array bb.
Make a copy of a structure to an array
Returns a copy of the data to an array.
Gets time interval in hours.
Adds a range of bytes.
Returns a table analyzer factory for a given data set.
Analyze a single feature type.
Synchronize the reader with the current data grid.
Retrieve a list of points as a gaussian array.
Swap an array of bytes at a specific offset.
Swaps the specified number of bits in a float at the specified offset.
Swap the char of a byte array at a specific offset.
Find coordinate axes for the given dataset.
Add a parameter to the coordinate list.
Returns the common parent group of this group and the specified group.
Returns true if this is the parent of the specified group.
Set the parent group.
Add a new dimension to this group.
Adds a new dimension to this group. If the dimension does not exist it will be
Adds a new group to this group.
Adds an enumeration to this group.
Adds a variable to the set.
Remove the dimension with the given name.
Make a relative group.
Takes a das attribute and returns the corresponding DAS value.
Write the das to a print writer.
Returns the base type of the variable with the given name.
Write a grid matrix to the file.
Replace missing values in array.
Replace missing values with evaluator grid.
Calculate the xstart of an array by a given amount.
Write a geo referenced array to the file.
Write the http servlet response to xml response.
Create the index file for the specified feature collection.
Get a grib collection type from a random access file.
Update grib collection boolean.
Update leaf collection boolean.
Opens a grib collection from a data file.
Obtain an immutable grib collection from the data file.
Returns true if the url ends with the pattern.
Add a key - value pair to the store.
Find a key - value pair with a URL.
Set the tripl individuals to be well - known.
Insert a triple into the triple store.
Get the local dataset list.
Find a dataset by its name.
Set the projection impl for this feature set
Returns an iterator over shapes in the system.
Make a shape array from an iterator of features
Compare to the given string.
Start a progress monitor.
Adds a collection update to the index.
Normalize the provided list of coord objects to ensure that they are identical in each data point.
Set the object at the given index to the given value.
Returns the structure at the specified index.
Copies data from one index to another.
Gets a scalar object from the table.
Convert scalar to double.
Convert scalar data type to int data type.
Gets a scalar from a structure.
Gets a scalar byte.
Gets short scalar.
Gets a scalar element.
Gets a scalar string.
Get a structure array from a member.
Returns an array with the given recnum for the given member.
Get an array object from the structure at the given recnum.
Returns the minimum and maximum of the given value. If the given value is smaller than the
Evaluates an expression and returns the result.
Returns a string representation of this constraint.
Returns whether the given dap node references this dap node.
Returns true if the expression matches the supplied variable.
Count the number of expansion fields for a given dap.
This method computes the set of enums for this template.
The computedegroups is a special kind of operation that if you override this method you
Utility method to compile a string with a dap dataset.
Returns true if the given file is a valid file.
Make the action for the system.
Returns the byte order of a specific access file.
Set byte order.
Returns the key for the given name.
Returns the file header with the given name.
Returns the file header info for a given file name.
Prints out the parts of the font.
Get the data pointer of the specified part.
Reads and writes the value of the specified word to the current position of the file.
Reads a string from the file.
Unpk a part in an ibitst.
Get the bits of a number as a string.
Write to a channel.
Adds the type of the base element to the parse tree.
Parse a grid element.
Get the aliases for an element and write the result to the output stream.
Decode a list of data descriptor objects.
Replicates a set of data descriptor to a set of data descriptor.
Gets the dataset filename.
Gets the string representation of the feature set.
Returns true if the two float numbers are equal by an absolute difference.
Returns true if the node references a dap.
Parses the given string into a unit.
Returns true if the variable is tiled.
Make a coordinate with the time as best as possible.
Convert a lat lon rect into a projection matrix.
Show time series for a particular interval
Create a map from a list of attributes.
Gets the array containing the current values.
Returns the numeric value of the given index or null if the index is out of bounds.
Writes a class definition to the current output stream.
Set the value of this property to the specified string.
Sets the values of the specified array.
Scan for the next state.
generate proxy ds resolver catalog
Adds a message to the queue.
Set the data type of a thredds dataset.
Get the thredds data type.
prepares GUI for GUI generation.
Create the tools frame.
Make a full name for the given coordinate axes.
Computes the lesser rank of the given axis.
Finds the axis with the specified type.
Get the projection of this coordinate.
Returns true if this query is a geo document.
Returns true if the coordinate is regular.
Returns true if the subset is contained in the given collection false otherwise.
Checks if the list of coordinate axis contains the axis of the given full name.
Returns true if the given axis is contained in this coordinate list.
Returns true if the domain is contained in the list of want dimensions.
Checks if a list of axis types contains a given axis.
Returns whether this coordinate contains the axis of the specified type.
Returns a deep clone of this dap.
Get the currently selected bean.
Get the list of selected beans.
Returns the selected cells in an array.
Set the selected bean to the given bean.
Restore the state of the model to the current state.
Creates a unknown unit.
Closes the stream.
Returns true if the variable is an extra variable.
Is coordinate boolean.
Get a coordinate variable extractor for a table t and a nested level.
Adds data variables to a table if it does not already exist.
Add a join to the current cursor s parent table.
Make a stn feature from a data structure. If the data structure is missing a null
Method to create a new dap node map.
Create a simple unit factory with exceptions.
Create a simple unit factory with exceptions.
Returns true if string1 and string2 are compatible with exceptions.
Returns whether or not the given unit is a date unit.
Returns true if the given unit string is a time unit.
Returns the result of the conversion factor between the input unit and the output unit.
Converts the given value to the given unit output unit.
Return true if this is the unknown unit.
Gets the current value of this unit i. e. the scaled value of the unit
Create a top level clause from the given sub - clause.
Create a new boolean clause from a string function name and a list of children.
Create a new sub clause from a function and a list of children.
Computes the buffered image of the current array. If the current rank of the array
Does the work of the specified catalog impl.
Processes a dataset and writes it to the output writer.
crawl a direct dataset and write the output to the writer.
Get existing file or cache.
Get an existing file or cache it.
Set the state of the file system for debugging. If set to true the file system will
Returns a list containing all the files in the directory. The files are sorted by name.
Closes the cache.
Set the current position of the stream.
Flushes this buffer to the underlying file.
Reads the next byte of data from the stream.
Read n elements from the stream as a short array
Read 4 bytes from the stream until the end of the stream is reached.
Reads a number of elements from an array of ints.
Read n elements from the stream as a long array
Read a number of bits from a float array
Read a double value from an array of doubles.
Reads a string.
Reads a string with the given number of bytes and returns it as a string.
Writes a boolean array to the underlying stream.
Writes n elements to the stream as a short array starting from the specified start index.
Writes a range of characters to the stream.
Writes a range of n elements to the underlying stream.
Writes n elements to the stream as a long array starting from the specified start index.
Writes a float array to the underlying stream.
Writes a double array to the underlying stream.
Writes a string to the stream.
Writes a portion of the specified byte array starting from the specified offset to the underlying stream
Does a forward scan forward to the end of the file.
Appends the query from the string buffer with the template and the parameter values.
Create a new m factory for the given config. collection config. top dir. partition top
Gets the index.
Returns true if the partition is a leaf partition.
Constructs the list of children.
Scans the directory tree for all its children and adds them to the list of children.
Reads a list of files from an index.
Get a list of gridsets.
Acquire a file cacheable.
Remove an element from the cache.
Inject the object with the given hash as the disabled key.
Return boolean indicating whether or not the file cache should be released.
Returns a 4 - byte integer.
Adds an element to the cache. If the element is not present in the cache the
Clears the cache.
Make vertical transform.
Returns true if this is a global lon.
Checks to see if this axis is z.
Returns the number of coordinates of the specified point.
Returns the number of coordinates of a point.
Finds x values of a given position in the data set.
Finds x values of a given position in the data set.
Returns the index of the item in the arrow. Returns - 1 if no item is in
Returns the number of items in the arrow at the specified pixel.
Iterates over all files in the given collection and collects attributes.
Get remote files.
Get the string representation of the specified sub center.
get the field of a given unit string
Returns a calendar period with the specified value and field.
Returns a calendar period of the specified string.
Subtract the difference between two dates.
Get the factor of the given calendar period.
Gets the value in milliSec.
Returns the offset between two dates.
Syncs the file to the local file. If the file is smaller than the local file
Initialize the parameters table.
Adds the specified ext to the current tree and returns true if the ext was added.
Find the longest path that matches the specified request path.
Find the data root for the specified path.
Converts a data root object to a data root object.
Returns the date range corresponding to the given calendar.
Cut a list of coordinates into a new list.
Create a new net type file writer with the given version and location.
Add a new group with the specified name to the current context.
Add td to group g
Delete an attribute of the specified group.
Rename a group attribute.
Add a record to the structure.
Aborts and closes the swap.
Writes the properties of the bean to the specified print writer.
Extracts the metadata of a thredds dataset.
Divide one unit into another.
Calculates the derivative unit of this value with the given amount.
Calculates the derivative of this unit with the given amount.
Convert a nested variable into an array.
Converts a single top variable to an array.
Converts to array.
Close all existing databases.
Open a new database.
Convert from joda. time. period to a joda. time. period.
Ensures that the array has at least the given capacity.
Returns the element at the specified index.
Make the catalog for a given directory.
Make a proxy ds resolver for a given path and base uri.
Get coordinate type.
Create a pds instance with the specified template.
Calculates the time at the specified index.
Applies a factor to a number.
Parses a local concept from a file.
Reads a single concept from the input stream and adds it to the concept table.
Remove all the occurrences of str from the line and trim the line.
Store a concept into the concept table and the parameter number.
Write the contents of a single table to grib1.
Writes a lookup table to a file.
Show the local concepts.
Main entry point for the ecmwf command line tool.
Returns the dataset type for the given name.
Expands this invariant to a dataset.
Full expand the inv catalog by taking the dataset from the top - level catalog and the parent
Iterate through all the datasets and name the corresponding dataset.
Make the name of the dataset.
Make the name of a dataset tree.
Load a picture by url. The result will be an image of the same type as the
Shut down the source picture and remove it from the pool. If the source picture is
Sends a status message to the source picture.
This method will load a progress notification to all listeners.
Create a new scaled picture in a thread.
Get the size of this dimension.
Get the scaled size string of this image.
Get a list of the merged parts.
Builds the header of a single entry.
Method to generate the list of string types.
Checks whether the part part is valid for the given parameters.
set the root directory of the string
Create a root directory. If the directory does not exist it will be created.
get a file from cache.
Removes all files with the most recent modification date before cutoff.
Delete all files with the given comparator and write the result to sbuff.
Returns true if the given short is the same as a bufr table false otherwise.
Factory method to create coordinate axis instances.
Create a copy of this axis with no cache.
Returns true if the provided data type is numeric.
Get an info record from a formatter.
Retrieves the value of a calendar attribute.
Set the list of rows.
Returns the current selected row or null if there is no current selected row.
Increments the selected row.
Returns the model index of the column and column in this table.
Set the selected index of the slider.
Sorts the specified array of strings in ascending order.
Swaps the specified elements of the specified array.
Gets a file with the given filename.
Rotates an array around a given angle.
Create an xml document from a file with default values.
Create xml from input stream
Create an xml document from a resource.
Make a filename for a given app name and store name.
Saves the current state of the prefs file.
Saves the current state of the object to an output stream.
Write an atomic variable to a serial writer.
Internal method to write a single instance of a structure to a serial writer.
Internal method to write a cursor structure to a serial writer.
Internal helper method to write a sequence.
This method is called by the serial writer to write a record.
Return true if the file is a valid file.
Get the wmo id.
Read a row of data from the data stream.
Get the data at the specified index.
Gets a random array of data from a file using Grib2 drs. type
Gets data from a file.
Makes a file with the specified parameters.
Make or test a grid file size estimate.
Create a file from the specified location.
The list of stations.
Set the selected station.
Pick a point from the current point. If the pick is not possible null is returned.
Transform the point to the closest point.
Gets the currently selected station.
Get the name of the given column.
Get a list of stations in the provided bounding box.
Gets a station from a given name.
Gets the data iterator for a given station.
Retrieves an iterator over the stereo stereo stereo stereo
Reads data from the specified access file.
Returns the dot product of this vector with v.
Computes the Euclidean norm of this vector.
Normalize this vector.
Add the services specified by the iterable.
Gets a parameter from the parameter table.
Gets a parameter from the parameter table.
Adds a name with a double value.
Adds a new prefix with a given value.
Returns the prefix of the given string or null if the string is not a prefix of the
Returns true if the source is an email.
Returns the value of the parameter with the given name.
Calculates the CRC of the raw data.
Returns true if the specified octet is thin.
Returns the index of the field with the specified name.
Get time type name.
Get the time coord of the time represented by this time zone.
Set the next polygon in the chain.
Set the previous polygon of this polygon to the given polygon.
Finds a property by its name.
Set the current projection.
Get a subset of time axis.
Registers an io instance with the class loader of the class with the class name.
Registers an io instance.
Returns whether or not the class has been registered by one of the providers.
Returns boolean indicating whether the class has been registered in the provider list.
Tries to open a file in the given location and returns true if the file can be
Opens a file with the given name with the given byte array data.
Open a file in memory.
Opens a file in memory.
Open a file in memory.
Find the global attribute with the given ignore case.
Convenience method to write to ncml the element at the specified URL.
Write the cdl to the specified output stream.
Write an cdl expression to the specified writer.
Write a cdl representation of this string.
Adds an attribute to the group s parent. If the group s parent is null the
Adds an attribute to the group s parent with the specified name and value. If the
Adds the specified group to this group s parent. If the group s parent is null
Adds the specified dimension to the specified group. If the group s parent is null then
Remove a dimension from the specified group.
Adds the specified variable to the specified group. If the group is null then the variable
Adds a new variable to this group with the specified data type and number of dimensions.
Create a new string variable. The new string variable is added to the current string group.
Remove a variable from the specified group.
Sends a message to the SPI.
Sends a message to the client to make a new data structure.
Finish the parsing of the tree by creating a new list of variables dimensions and g attributes.
Reads the contents of a specific section of an array.
Reads to a channel.
Reads a list of arrays.
Reads the array value from the variable section.
Make the name of a structure member of a structure.
Make a full name with the given group parent.
Returns whether or not the mfile matches all filters.
Returns whether or not the mfile should be excluded
Filter the given mfile according to the and filters.
Append a string value to the end of the attribute.
Check a string value and throw an attribute exception if the check fails.
Returns the value of the given attribute if it is a byte and throws an exception otherwise.
Check byte.
Check if a string is a valid short value.
Checks if the given string is an int.
Checks whether the given string is non - empty.
Checks whether the given string is a float.
Checks if the given string is a double.
Returns the data type for the given attribute.
Returns true if the given dataset is viewable.
Returns whether the specified string is a valid boolean string.
Returns whether the given string is a valid alphanumeric string.
Returns true if the specified string is a valid alphanumeric string within the specified set.
Fails if the given path string is a file path.
Converts a Unicode code point to a hexadecimal string.
Returns the value of a parameter.
Compares two grid records.
Reads data from the input stream.
Computes the index of the next token in the input stream and returns the index of
Remove quotes from a string.
mark all variables in the given stack as un values.
Writes a ncml file to the specified location.
Gets value from thredds config.
Returns a CIDL representation of this object.
Helper method for creating helper objects.
Validates the builder.
Gets the azimuth of the message.
Get the elevation of the message
Gets the latitude of all the rays of the specified entity.
Gets the longitude of each of the registered rays.
Returns an array containing the alt vertices of all the vertices in the specified rays.
Gets the azimuths.
Gets the elevations of this RenderTheme.
Selects the structure with the given member names.
Selects a variable with the given name.
Adds a new member variable to this structure.
Sets the member variables to the given list.
Sets the parent group of this group.
Calculates the size of the set.
Reads a structure from the file at the given index.
Read a structure from the file.
Returns the string associated with the data category specified by the argument.
Get the class name.
Add a parameter to the manifest.
Returns the header as a string.
Project a single region from the specified region to the specified projection region.
Returns the version of a conv. Returns - 1 if the conv does not exist.
Get zis positive.
Get geo referenced array data
Render the plan view.
Returns true if the specified group is a child of the specified group.
Returns the message type for the given name.
Install in all columns.
Set the api key and secret for the builder.
Returns a label for the given string value.
Creates a new label that adds the given text justification to the given lines.
Returns a label for the specified string.
Connects to the server.
list of string from cloud sql to list of string from each string to upper case
Connects to the MySQL server at the given host port number with properties and login timeout.
Removes all logger with the given logger.
Adds source for a class.
Adds a source code to the class.
Reads a graphic control ext.
Returns the next frame in the bitmap. Returns null if there are no more.
Provides a string list of the names of all entities that can be attached to this transaction.
Initialize the list event listener.
Get the person with the given id.
Adds a message for a single validator.
Set the person s last name and last name to the specified person id.
Create a view model.
Load country data.
Returns a new view with the same parameters as the given view.
Create a bb - code view with the given view model type as the starting point.
Clears all entries in the map.
Creates the index events.
Attempts to access the given callable as a member of the given object. If the callable
Create and return a view instance for the given view type.
Create a style row for a given style mapping.
Get the pixel value from the image at the specified location
Get the pixel values for each pixel in the image.
Validate that the channels and bit depth are the same
Create a datapng image.
Set the tile data of a bitmap.
Perform a raw query and return a cursor representing the results.
Executes a query that returns a single result.
Executes a previous query and returns the result.
Run a query on the database.
Convert a cursor for a user - defined query and a table.
Get the feature row for a given geometry index
Register the specified table with the cursor wrapper.
Get a tile row by x y and zoom
Get the coverage data
Get the coverage data for the tile dao
Get the coverage data for the requested projection
Get the results for the coverage data tile matrix.
Get the coverage data tile matrix for the requested bounding box with the requested tile matrix and the
Get the coverage data tile matrix for the provided bounding box with overlapping pixels
Get the coverage data tile matrix for the provided bounding box and overlapping pixels.
Get the tile matrix for the coverage data request
Get the value of the tile at the specified location
Set the icon row for the given geometry type
Get the icon row for a geometry type.
Gets or creates a bindings db.
Create a bitmap from a byte array.
Convert a bitmap to a byte array.
Create a new table in the specified metadata.
Delete a table.
Get or create a table metadata using the specified GeoPackage and table name.
Get the id of the specified geo package
Create table metadata from cursor.
Create extensions.
Get a feature row from the cursor.
Execute a raw query and return a cursor.
Query for features within the bounding box in the provided projection
Query for objects within a given envelope.
Count the number of points within a given envelope
Query for objects that have a value in the specified range
Builds the where clause from the given x y to the given max x and max y
Query for features within the bounding box in the provided projection
Count the number of features in the bounding box in the provided projection
Query for features within a given envelope.
Query for features that have a value within the range x and y.
Counts the number of times a given pair of x and y appears in the image.
Set the data for a bitmap
Set the data of a bitmap
Set the bitmap compression configuration.
Gets the tile count.
Adjust the bounding box in the zoom level to match the provided bounding box.
Adjusts the google bounds.
Adjust the geo package bounds for the bounding box and zoom level.
Adjust the bounding box bounds for the geo package request
Get the bounding box of the tile grid at the provided zoom level
Get the tile grid at the specified zoom level.
Query for the tile row for the given column row and zoom level
Create a query to find tile by zoom level descending.
Get the closest zoom level for a given length
Get the approximate zoom level for a given length
Get the tile grid for the specified zoom level.
Delete a tile from the tile table.
Count the number of tiles in the zoom level at the given zoom level
Returns true if this is one of the Google tiles.
Gets the pixel value of the specified pixel in the image.
Gets the pixel values of the rasters in the image.
Validate the type of the image
Create a coverage data tiff image.
Sets the pixel value in the coverage data tiff image to the specified pixel value.
Get or open a Geo package.
Get the current row in the table.
Moves to the next invalid state.
Query for style mapping rows by base feature id
Delete an object by its base id
Get a rectangle with the specified width height bounding box and bounding box section.
Get a rounded rectangle with the specified width height bounding box box and bounding box section within the
Delete missing databases
Create and close a Geo package connection
Check if database is valid or not.
Validate database and close on error.
Validate a database and close it.
Validate a SQLite database.
Validate and throw an exception if the database header is not valid
Check if the database header is valid
Add a collection of databases.
Adds an external databases to the list.
Execute the specified geo package on the specified database. If the database does not exist an exception
Get the metadata for a database
Get the metadata at the external path
Create a new GeoPackage and add it to the GeoPackage
Populate a geometry metadata object.
Delete a geo package.
Attempts to create or update a geometry with the given metadata.
Update a geometry metadata
Count the number of rows in the specified geo package for the specified table name and bounding box
Create a new geometry metadata object.
Update the content values for the table.
Draws a tile.
Get a list of simple attributes rows from a list of ids
Moves the cursor to the next number and checks if the number equals the current string.
Use this to get a user mapping dao
Get the simple attributes dao simple attributes dao.
Gets the mappings for the given base id.
Gets the list of mappings for the given id from the given extended relation and related id
Check if the table has a mapping.
Get the number of rows returned by a custom cursor.
Register a cursor wrapper with the specified GeoPackage
read a table from a GeoPackage
Get a tile for the specified bounding box
Draw a tile using tile matrix.
Repproject a bitmap tile using the requested projection.
Retrieve the tile results using the tile matrix.
Calculates the overlap of the circle
Set the density of the rendering.
Set the paint of the line
Sets the paint of the polygon
Draw a tile at the x y and zoom level.
Draw a tile at the x y and zoom level.
Draw a tile query index bitmap.
Query for indexed features at the given x y and zoom
Query for indexed features within the bounding box
Query for indexed features from the given X Y and zoom level.
Query for indexed features within the bounding box.
Draw a tile query all at the x y and zoom level
Simplifies a list of points.
Paint the feature point with the given style for the circle. If the paint could not be
Builds a line paint for the feature style using the stroke type. If no line paint
Get the feature paint with the specified style for the polygon
Create a polygon paint based on the feature style.
Create a paint for the feature with the given style and feature draw type.
Create a paint with the specified style for the feature draw type and cache it.
Get the paint for the given style row and feature type
Get the paint of the feature with the given style id
Puts a bitmap for the icon row.
Returns a new content values object that has been quoted.
Create a bitmap.
Recycles the layered bitmap and recycles it.
Get the bitmap for the layer index
Get the canvas for the layer index
Create a bitmap and canvas.
Gets the mapping dao.
Get style dao.
Get icon dao.
Get the styles for the feature table. If the table does not exist a new feature table
Get the styles for the feature table
Get the style for a feature table and geometry type
Get the icons for the feature table
Get the icon row for the feature table and geometry type
Get the styles for the feature row
Get the styles for the feature with the given table and feature id
Get the styles for the feature row
Get the icons for the feature row
Get the styles for a feature id.
Get the icons for the feature.
Set the styles for the table feature
Set the styles for the feature table
Set the icons for the feature table
Set the styles for the feature row
Set the styles for a feature table and feature id
Set the styles for the feature row
Set the styles for the feature table and feature id.
Set the style of the feature row for the geometry type and the row style.
Set the default style for the feature row.
Add the default style for the feature table and feature id.
Set the icons for a feature row
Set the icons for the feature table and feature id.
Set the icon for the feature row
Set the default icon for the feature row.
Sets the default icon for the feature table and feature id.
Get or insert a style.
Get or insert the icon.
Insert a style mapping into the database.
Delete feature table style
Delete the icon for the feature table and geometry type
Delete feature table mappings
Delete feature table mapping
Delete a mapping from the database.
Get all style ids for the feature table
Get all table icon ids for the feature table
Get all style ids for the feature table
Get all icon ids for the feature table
Returns the image bytes as a byte array.
Flushes the output stream and closes it.
Get the pixel at the specified location
Reads the pixels from the image.
Draw the feature
Draw a path on the canvas.
Draw a polygon path on the canvas with the specified feature style.
Add a line string to the path.
Adds a polygon to the path.
Get the feature cache for the given table name. Create it if it doesn t exist.
Remove the specified feature row.
Resizes all caches to the specified cache size.
Get the cached table feature styles.
Get the cached table feature icons.
A convenience method for getting a feature dao and a custom table
Set the width of the GeoPackage
Set the height of the GeoPackage
Get the derived dimensions of the bitmap.
Calculate the density of a tile
read column value as blob value
Read a custom table from a GeoPackage connection
Gets the current color or creates a new one.
Validate the color string.
Create a color with the given hex color and the given opacity.
Get the geo package manager.
Set the progress for the geo package
Get the index of the specified list of feature types. If force is true the feature list
Index the specified row for the specified list of feature types.
Delete the specified feature index from the specified collection.
Delete the row for a list of types and return true if it was deleted false otherwise.
Performs an index on the given list of types for the given geom. Returns true if
Delete a feature index
Is the query index indexed or not.
Get the list of indexed types in the query order.
Query for feature index results
Count the geometries in the feature table.
Get the bounding box of the feature table.
Query for feature results within the bounding box
Gets the indexed type.
Returns the file with the given path or null if the path is null.
Gets internal file path.
Returns the type of the geometry.
Set the geometry type
Returns true if the url contains a bounding box false otherwise.
Replace tile generator variables with their default values.
Returns true if the URL contains num and num as a part of the URL.
Replaces the bounding box of the URL in the provided projection with the tile bounding box of
Replace the tile locations in the url with the bounding box.
Get the GeoPackage geometry data
Indexes a row in a geo package
Update the last indexed time.
Delete the feature table index
Delete the geometry with the given id
Returns whether the feature is indexed
Query by feature table and table name.
Query for rows within a bounding box
Get the count of bounding box in the feature table
Retrieves a cursor of geometry metadata for the feature table.
Count the number of records in an envelope
Query for features within the bounding box in the provided projection
Count the number of features in the bounding box in the provided projection
Get the feature bounding box
Get a geometry metadata object.
Get a single feature row from the cursor.
Get the feature row for a given geometry metadata
Get the tile daos for the feature table
Get the feature daos for the tile table
Get the bounding box for the feature tiles
custom cursor query by ids
Return a list of unique base ids.
Return a list of unique related ids.
Delete by base id.
Delete by related id.
Delete by ids.
Build a where clause to find a record with a base id and related id.
Create a new GeoPackage and add it to the metadata table
Delete the specified database.
Rename a GeoPackage metadata object to a new name
Rename a string to a new name
Get all metadata for all GeoPackages
Get the metadata for the specified database
Get the metadata for the specified id
Get or create the metadata for the specified GeoPackage
Returns true if the database is an external database.
Get the metadata for an external table at a path
Get metadata rows where column name like the like string and sort column boolean
Get metadata where name not like the given column
Get metadata column names where the column name like the like string and sort column boolean not like
Create a geo package metadata from a cursor
Invoked when a view has been created.
Adds a view to the page index.
Overridden in order to override the default view behavior
internal method to create custom view
Append an event to the specified buffer.
Find config file from system properties.
Get resource URL
Configure android application.
Get the status of the resource.
Converts a socket address to a string.
Creates a new executor service.
Starts the converters from the head of the queue.
Appends the event to the sub - tree.
Adds a substitution property if the key and value are non - null.
Get the value associated with a key.
Creates a converter from the given node and the given map.
Return the value of the current token and advance to the next token.
Generate a regex for a date.
Begin a definition with the specified name and attributes.
Signals that the specified string is no longer available. If the string is in error it
Initialises the context selector with the specified logger context object and the specified key.
Create a context selector instance.
Set up the properties for the logger.
Returns the full path to the external storage directory.
Gets the path to the database directory.
Gets the absolute file path.
Evaluates the i - th event.
Get the discriminated value of an event.
Updates the mask if necessary.
Convenient method to return the next filter reply for the specified event.
Creates the key managers.
Create the trust managers.
Create key store factory bean from system properties.
Return the location of the specified system property.
Returns a url for a resource.
chain handles throwable.
Stops the current thread.
Prints error messages or warnings.
if errors occurred print an error message
Print with a given threshold.
Get an entry from either the live map or the lingerers.
Called at the end of a life.
Returns format info value of specified string.
Rename a source string to a target string
Return whether or not the files in the given volumes are the same.
Gets the value of an environment variable.
Returns the system property value for the given key. Returns null if the key does not exist
Set mdc.
Returns the MDC output for the property map.
Extract the stack trace of the throwable with the specified FQN of invoking class and framework
Return true if the current class is in framework space
Adds a new status to the status list.
Add a status listener to the status list.
Returns a list of actions applicable to the given element path and attributes.
Returns a list of actions applicable to the given element path.
Set the class loader.
Returns the value for the given key using the default value if the key is not found.
Decapitalizes a string to lower case.
Returns an array of method descriptors for the specified class.
Returns an array of property descriptors for the properties of the given class.
Start the error status.
Add a console status listener to the status manager.
End the current context with the specified name.
Get the discriminate string value for the event.
Returns whether or not the event is discardable.
Override this method to instantiate the shutdown hook.
Called at the end of an action.
Returns the enabled protocols or the default if no enabled protocols are given.
If the enabled cipher is enabled returns the default cipher. Otherwise returns null.
Returns a list of strings matching the included string and the excluded string.
Convert string scope to string scope
Set properties in a particular scope.
Add a new appender to the list.
Detaches the specified appender from the list of appenders.
Detaches the appender with the specified name.
Handles a parent level change.
Calls the appenders of this logger for the given event.
Detaches the specified appender from this appender.
create a logger with the last part as the logger name
Apply filters on the call stack.
This method logs the specified event.
Calls the method and returns the socket. If the thread is interrupted the method returns null
Create missing parent directories for a file.
Converts an integer value to its corresponding integer value.
Convert an int value to a level.
Get the number of occurrences of a resource.
Gets a URL from a resource.
Get the class loader of an object
Get class loader by permission.
Gets the class loader of the specified class.
Start the encoder.
Gets the tag of the event.
Adds a new element to the context with the given name and attributes.
Gets separator index of a string.
Evaluates the event and returns true if the event is a marker in the list.
Returns the thread name of the given socket.
Returns true if the two files are on the same file store.
Appends an event object to the dynamic table.
Send the buffer.
Adds a mdc value to the mdc table. If the mdc is already
Create a custom converter for a simple keyword.
Create a converter for the specified composite node.
Determines compression mode based on file name pattern ends with the given str.
Configure the connection to the given URL.
Call this method to configure a file input stream.
Convenience method to do configures based on an input stream. The input stream is
Build the interpreter.
Set the threshold for a given input source.
Configure the interpreter.
Gets the property for the given key.
Set the name of the plugin.
Returns true if the context has a status listener.
Returns the time of the last reset.
Starts the parse and converter.
Get the effective converter map.
Returns the header of the file as a string.
Return the file footer as a string.
Sets the begin attribute of the current context for the given local name.
Called when the appender is ended.
Returns a copy of the clients in the array.
Adds a client to the set of clients.
Remove a client from the cluster.
Get a copy of the current context.
Returns the value of a method of the given type.
Makes the next decision.
Return true if the current operating system is android.
Initializes the context.
Return an array of files in a folder matching the regex.
Print all status messages that have elapsed time longer than threshold.
Gets the database file.
Clear expired logs.
Check if the number of milliseconds has passed since the last cleanup time.
Appends an event record to the log.
Appends an event to the secondary sub - event.
Bind logging event.
Converts the specified object to a string.
Compute reference mask for given event.
Merges property maps.
Execute insert statement for an exception.
Gets the prefix of the given path.
Returns the effective level of the set.
Returns true if the class is an instantiable interface.
Create a hash map for the given parent value or null if the parent value is null.
This method is used to process an include url.
Opens a stream on the given URL.
Trim the head and tail events.
Called when the server should be started.
Returns true if the exception is transient.
Sets the default hosts array to the same values as the strings in the hosts array.
Create the local index if it doesn t already exist.
Synchronizes data selection queries to the local database. This is a blocking operation.
Checks if we need to sync the mirror if needed.
Wait for a specific task
Get all indexes offline.
Converts the contents of a stream to a string array.
Converts the given input stream to a byte array.
Attempts to consume quietly from the input stream and close the connection.
Returns a list of the hosts that are up
Set the places with the specified type.
Starts the index asynchronously.
Adds a value to the cache and returns the previous value.
Get a value from the cache by key.
Waits for all threads to complete.
Write a text line to the output file with the exception id. If the cause is null
Copy a file to a directory
This method initialises the parsing of a configuration file.
Returns the value of the specified field of the specified class. If the field does not exist
Gets method by name.
Creates a string representation of the given percentage value using the given base value.
Returns a string representation of a given number with the specified locale and number padding to the right
Returns a string representation of a long with the specified format and the specified number of digits padding
Write a JSON string.
Write a long as a JSON string.
Writes a double to the current context.
Read json numeric chars.
Reads a json integer.
Reads a double value from the JSON stream.
read json string and convert to base64
Execute a method call.
Invokes a method on the call object.
Adds a method to the queue of pending calls.
Get resource from fs.
Updates the decoration of the current workbench.
Refresh repository view.
Returns the resource history view.
Opens an editor with the specified contents and name.
Displays an error dialog and sends a message indicating that the authentication process has failed.
Displays a prompt for authentication.
Create a default page.
Start the animation thread.
Keep all alive.
Set the value of the first child of this element to omit.
Set the owner of this element.
add a new condition factor
create a condition term
Returns true if the condition term matches this condition.
Get a dsl input stream from the specified dsl rule.
Load configuration from input stream. if not found input stream is closed.
Reads the configuration from the given stream.
Create a new context menu for the specified control.
Add a response element to the tree.
Adds a href attribute to the root element.
Insert a new href before a current href.
Remove the href attribute of the element.
Add prop stat.
Gets the href attribute of the element.
Retrieves the status of the element.
Returns the current stack frame of the current thread or null if this thread is suspended.
Returns true if the class1 is a subtype of the class2.
Checks if a list of pro list contains a new proposal.
Resets the length and the data to the start of the file. If the file is
Override this method to create your own action definitions.
Adds a connection to this object.
Gets the value of a given property.
Remove a connection from this connection list.
Set the location of the map to the given point. The new location will be set to
Set a property value.
Set a new size for the widget. If the new size is null then the widget will
Returns a string representation of the given constraints.
Create a new lock entry and add it to this list.
Adds a vertex as a child of this vertex.
Remove a vertex as a child of this vertex.
Start the entry point. This is the entry point for the rules associated with this context.
Called when the plugin is stopped.
Returns the string with the given key from the plugin s resource bundle or the key if no
Returns the resource bundle.
Returns the colors of the rule builder.
Set the time of the specified date.
Sets the date and time using the given pattern.
Creates a status object with an error message and a throwable.
Logs an error with the specified message and throwable.
Adds a field to the list of fields.
Adjusts the layout of the field editor to the number of columns.
Apply the font to all the fields.
Calculates the number of columns
Initializes the field editor list.
Fires a property change event for all registered listeners.
Set the active editor for the specified part.
Add this zoom item to the tool bar.
Determines the dialect of a given string.
add a new context to the current context
Saves the current state of the editor to the specified file.
Creates the table listeners.
Adds the specified object to the cache at the specified URL.
Adds the specified object to the cache at the specified URL.
Adds a new token to the end of the tree.
Adds a child node.
Set the file offset and the length of the array.
Adds the specified condition to this condition set.
Add a condition term and a condition factor to the current state
Returns true if the given condition matches this condition.
Gets the prop of the root node of this trie.
Retrieves the status of the element.
Set the prop.
Get the last line of text.
Get the last non - dashed line of text.
Binds a string with a given id with a given binding.
Bind two strings.
Binds a string with a set of bindings.
Creates the core exception for the given example type.
Perform the actual compilation.
Get the runtime id from the preference store.
Visits a rete.
Visits the given object node.
Computes the dot product of an object id.
Adds the element to the end of the prop tree.
Adds a set of properties to this node.
Gets a new locator instance for the specified resource URL and label.
Get a presentation based on the iSource.
Returns whether this status is the same as the specified status.
Returns true if this term contains the given condition term.
create a dav condition
Adds a new page to the document.
Deletes a job from the server.
Do a http post on the server.
Gets the status of a job.
Execute a pull operation and record the results of the pull operation.
Checks to see if results are available and if so shows the results.
Set a json array value at the given index.
Create a lock on the element and add it as a child.
Filter the list of properties to only those whose display string starts with the given prefix.
Reads backwards from the document starting at the specified offset and returns the prefix.
Calculate a row list for a given base vertex.
Get the edit part for the given model element.
Returns an image descriptor for the image with the given path.
Declares a missing image descriptor and adds it to the registry.
Adds a vertex at a specified depth.
Returns the index of the row that contains the given vertex.
Get the row width.
Dumps the current graph to stdout.
Optimize the query by removing all elements from the list.
Initialize the graphical viewer.
draw a new graph
Gets the breakpoint for a given source.
Set the href value.
Returns true if the client canalk the dav.
Copy a collection property.
Displays a response as a multi - status message.
Extract prop stats from multi status
get content from server as stream
Return the enumeration containing all locks held by this element.
get property by qualified name
get the latest available context
Acquires a lock token for the specified owner.
Move object i to destination with given names.
call the service and wait for the response
Acquire a lock on the channel.
Remove a collection of properties.
Remove a property.
set content to input stream
Set a collection of properties.
Set a property of the element
Release a lock token
Update document version
Send version control request to server.
Delete an existing dav resource.
Examine the status code of the given exception and throw an exception if not.
Return true if the specified property has a child property with the specified name.
Write the request body to the output stream.
Converts a byte array to a hex string.
Converts an array of ints to a hex string.
Set if is all prop.
Set if is prop name.
Set the prop of the trie as a proposition to the root node.
Strip the last word.
Updates the rule table according to the current state.
Writes the content to the output stream.
step over the object
Marks parse errors.
Skip white space.
add resource to guvnor.
commit changes of a single file
Returns the age as an integer. Returns - 1 if age is not present.
Returns the length of the content.
Returns the maximum number of times the string was found or - 1 if there was no such
Gets whether or not the current string matches an overwrite string.
Gets whether the current string is the same as the passed in string.
Returns the number of milliseconds since the specified time interval or - 1 if the time interval is
Adds a string value to the context. If the value is null or the number of
Set the timeout value.
Opens a dsl reader on the specified file.
Reads the content of the file and adds it to the map.
Gets object metadata.
Strip obj metadata from text.
Adds a set of tokens to the tree.
Gets the condition children of the given string.
Gets the children of the specified string.
Adds the given prefix to the given list.
Prints the tree.
Recursively prints a single node.
Prints the specified number of tabs to the system.
Read json value from string.
Get an image descriptor by id.
Get the url from the request and then send it to the server.
Set a header value in the request.
Creates the project file with the correct name and version depending on the project s major version.
Creates the project rule if it doesn t already exist.
Creates the project files.
Create rule flow for launcher.
Returns the selected items.
Create an image.
Returns the field name of this constraint.
Returns the string representation of the current node s constraint.
Returns the string value of this constraint s field.
Adds properties to a resource.
control the i - th baseline.
Binds a string member to the source object.
Gets the index of the member with the given name.
Optimize the graph.
Initialize the controls for the dialog.
Validate page.
Generate entity tag.
Returns the opposite vertex of the given vertex.
Perform otps validation
Check if is the right user.
Gets the username for a given public id from a file.
Add the yubikey to the user with the given public id and username.
Perform otp authentication on the given user name and otp string.
Clears all characters from the password array.
Gets the id of a string.
Checks if the given string is a valid otp string.
Creates a new evaluation object from the given node and source object.
Create a new evaluation object from the given node and source object.
Clears the cache.
Checks if is JDK 15.
Get the package name of an object.
Get the package name of a class.
Gets a unique descriptor for an object.
Returns the class of the argument.
Returns true if the second array is more specific to the first.
Returns the value of the specified property of the supplied object. If the property is not found
Returns property descriptors of the specified target class.
Returns the property descriptor for the property of the given target class with the given name.
Returns a read method of the given name on the given class target class.
Reads a single character from the input stream.
Adds a projection to the current node.
Selects all options.
Returns the long value of the given object.
Returns the number representation of the given value.
Returns the big integer value of the specified object.
big dec value.
Converts an object value to a string. If the value is null trims the trim
Returns the numeric type of the given value.
Converts object value to boolean.
Gets int value.
Returns the numeric type of the specified pair of tokens.
Get numeric type of object v1 and v2
Create a number of the given type from the given long value.
Removes the current evaluation from the evaluation tree.
generate ognl getter string
Generate ognl setter string.
Flattens the tree.
Initializes the Future object with the given node s attributes.
escape char if not found return str.
Set the root object of a context object.
Returns the value of the given expression on the given object rooted at the given context object
Set a value on an accessor expression.
Set a value in an object tree.
Return true if the expression is a constant
Get the default watch service id for the operating system.
Reload the current application class loader.
Gets an archiver by name.
Check the given archiver for problems.
Read file as string.
Create the project.
Adds a system property to the environment.
Adds a system property to the environment.
Change current directory.
Used to refresh the options menu state when the button is pressed.
Create file observer.
Get the selected folder.
Create a new folder if the selected directory and the new file can write.
Returns true if the given file is a valid file.
Start a background job.
Starts a new list with the given attributes.
Ends a list.
Computes the current location of the specified edge along the specified dx and dy. If
Get crop rect.
Computes the layout of the crop rectangle.
Registers the listener with the specified media factory.
Adds a span to the current text if no spans are available.
This method is used to get view by id.
Set the spinner item at the given position to the selected value.
Converts the spanned text to html.
Wraps a spanned text within a paragraph.
Create a file with the same mime type but with the same extension.
Determine the original file for the given URI.
Returns the namespace of the given name.
Returns the local name of the given string.
Set the value of an attribute.
Set the value of an attribute.
Gets the font name for a given font path.
Gets the font name for a given font file.
Add a new buffer to the buffer list.
Writes an array of bytes to the output stream.
Writes a byte to the output stream.
Reads data from the input stream and returns the number of bytes actually written.
Writes the entire buffer to the given output stream.
Converts the contents of this buffer to a byte array.
Set the font size of the spinner
Converts windows separators to unix separators.
Recompute the focus of the specified motion event.
Ensure that the view is visible.
center the view based on the highlight view.
Reset the locator with the publicid and systemid.
Validate the given string against this set of regular expressions.
Add a new element type with the given name model and member of flags.
Set the value of a given attribute on a given element.
Set the parent of the element with the given name.
Returns the element type with the given name.
Returns the entity for the given name.
Cleans up randomly selected lines in an editor.
Sets the selected value to the specified value.
Returns true if the given domain string is a valid domain name.
Redo the given operation.
Redos an editor.
Replaces all occurrences of the search string with the replace string.
Get or create the thread status.
Set the decoding options for the specified thread.
Check if a thread can be decoding.
Decodes a bitmap from a file descriptor.
Get the fonts used for this context.
Get the asset fonts by name.
Get the system fonts by name.
Sets up the element attributes.
Gets the reader for the given source.
Gets the input stream.
Adds the attribute name and the attribute value to the new element. If the new element
Expands entities from the source string.
Returns the index of the specified entity or - 1 if no entity can be found.
Restarts the stack with the supplied element but only if the element is present in the stack
Pop the current element off the stack.
Pop an element from the stack and if the flags &lt ; restart&gt ; =
Returns the prefix of the given string.
foreign boolean.
Trim single quotes from the end of a string.
Splits a string into an array of strings.
Deal with to the top of the stack. Checks to see if an element can
Saves the instance state.
Destroys this event manager and all registered listeners.
Subscribe for event main thread.
Subscribe for event main thread.
Get the proper base matrix for the bitmap
Get the maximum zoom of the display bitmap.
Checks if selected text exists in text mode.
Finds all the spans of the specified string in the paragraph and removes the spans from the
Picks up a file from the current directory using the specified request code.
Rotate a bitmap with a specific degree.
Set the output stream.
Writes a single character to the output stream.
Writes a string to the output.
Returns true if the attribute with the specified name is equal to the specified value.
Escapes a string and writes it to the output stream.
Emit warnings on namespace elements.
Write a single element or attribute name.
Create stream if not exists.
Wait for stream to become active.
Completes the missing instance snapshots for a given path.
Wait the minimal duration to execute the next query.
Get records.
Perform an action with a given retry limit and duration in millis.
Attempts to perform an action on the Amazon EC2 instance with the specified label and duration
Check if given bucket is accessible.
Loads all entity stores by name and bi function.
Triggers the expansion of all files in the given collection with the given wildcard context.
Replaces a pattern in a string with a new string.
Delete any of the specified characters from the specified string.
Adds a report to the configuration.
Updates the configuration based on the current configuration.
Returns the config properties.
auto detect wro file input stream.
Create a map of string to a resource post processor.
Applies the compile function to the given content string and returns the result.
Reload the cache with a new value.
Reloads model with a new value.
Wraps the http servlet request and wraps the request in a servlet request that uses the
Get a transformer for a base name with the specified suffix.
This method is called when an error occurs during the processing of a servlet.
Sends redirect to specified location.
Process a resource.
Create a function that expand a collection of files.
Find input stream.
Create a new configuration object.
Registers a change listener for property changes.
Handles the http request by setting the response headers.
Set the wro configuration.
Identify duplicate groups.
Merge a given wro model into this model.
Locates the specified input stream.
Decorates the content with the processors specified.
Decorates a processor.
Copy reader to writer.
Splits a option into an array of strings.
Read properties from input stream.
Helper method to parse properties from string.
Create a custom wro manager factory.
Save the fingerprint of all resources in the group with the given names.
Checks if is target group.
Extend plugin class path.
Get input stream from model resource.
Initialize the wro manager factory.
Set the transformers.
Applies the pre - compiled function to the given string and returns the result.
Merges a list of resources with the current one.
Process all resources and merge them together.
Run in parallel.
Execute the specified processors for the specified resource and return the result as a string.
Decorates a pre processor.
Persists the current state of the storage into a file.
Gets all fields of the given object.
Rewrite a CSS uri into an image url.
Compute new image location.
Add a transformer to the manager.
This method is called by the server after the bundle has been processed.
Initialize aggregated folder path.
Extract variables.
Parses a CSS string.
Replaces all the variables in the input string with the new values from the variables map.
Return a pre processor that will process the given resource.
Determines whether the searched is eligible for execution of the current resource.
Set the content encoding of the response and write it to the output stream.
Create a path pattern processor that matches all files in the given object that match one of the
Create a path pattern processor that exclude a path from a given object.
Creates a new resource change handler.
The resource needs to be remembered
Execute a function for each css import.
Filter a collection of t and return a new list that contains only non - null items.
Checks if the request is minimized.
Find imported resources.
Computes the absolute url of the given resource.
Create a string from a list of strings.
Gets the alias list.
Creates a new scriptable object and sets its optimization level.
Evaluate the expression on the given reader and return the result as a string. The reader is
Evaluates the supplied script against the supplied source object and returns the result as an object
Processes the input.
Returns true if request is handler.
Create request handler path from cache key.
Rename a stream.
Computes the destination folder for the given resource type. If the folder does not exist
This method is used to process a group of files.
Check if there is a change required for the specified group.
Locates the stream for a given URI.
Returns a pool of objects created from the given object factory.
Tries to locate the input stream from the jar file in the given folder. If the
Opens a jar file.
Extracts the full path from the URI.
Returns whether the request is minimized or not.
Add locators to the factory.
Decorates a wro model factory with a list of transformers. If the model
Adds a require string.
Executes the build script and returns the result as a string.
Add summary information to the summary log.
This method is called when a resource is required to be processed.
Returns the read write lock for the given key. If no lock for the key exists returns
Create a new process based on source file.
Parses the given string into a list of properties.
Returns the current task info as an array.
Gets the compilation command.
parse the header and add it to the map if not already present
Add no cache headers.
Get path info from location string.
Get servlet path from location.
Returns true if the path matches the url pattern.
Load the regular expression with the given key from the properties file.
Writes the contents of the reader object to the writer object. The reader and writer objects
Create a new file with a random name and a file extension.
Removes all non - null and non - empty characters from the image url.
Set the value of the specified attribute of the specified object.
Generate data uri string from input stream.
Generate data uri.
Sets the context with the given configuration.
Remove the current context from the context map.
Check whether the given cache key has changed and call the callback with the result.
Callback which gets called when an exception occurs.
Check whether a resource is changed and call the callback if needed.
Update hash for specific group.
Check if this resource has a resource of type type type type.
Create process from source file to dest file.
Parse group definition.
Create a new group.
Parse resource.
Get a collection of resources for a given group name.
Stop a named timer.
Returns the timer of the given string name for the given todo flags for the current thread.
Returns a named timer.
Prints statistics.
Wake up the workers if necessary.
Updates the counters for all the running and running threads.
Updates the finished counters.
Checks to see if the counter is smaller than the given value.
Obtains the producer for the given rule.
Create a taxonomy for each property.
Make sure that the current stage is loading.
Perform the full saturation of the current stage.
Returns true if the classification is consistent.
Resets the current taxonomy.
Resets the current instance taxonomy.
Gets a collection of inferences for the specified object.
This method is called when the worker is initialized
Recursively invalidate all abstract reasoners.
Get the collection of indexed individuals to add.
Remove all individuals from the indexed collection.
Creates an unsupported operation exception.
Remove the element at the given position.
Remove a pair of elements at a given position.
Get the moved position of an array d. del is the number of non - null elements
Returns true if the given object is present in the array false otherwise.
Adds the element at the current position in the array e if it is not already present
Checks that the occurrence numbers are correct.
Add a timer to the time series.
Add a timer to the application.
Internal helper method to put a key value pair.
Returns the value associated with the given key ; or null if the key is not present.
Enlarges the keys and values arrays.
Shrinks the keys array and values array.
Saves configuration.
Prints all declarations of the specified taxonomy to the specified appendable writer.
Gets the direct instances of the specified element.
Removes all entries from this set.
Combines an array of integers into a hash.
Copies the contents of the input stream into the output stream.
Create a new in << << << << << << << << << << << << << <<
Processes the specified taxomy and writes it to the specified appendable object.
Submits an input to the queue.
Append an element to the appendable.
Marks the given query as not computed.
Add a direct type node.
Checks that a sub - object property expression matches a sub - object property expression.
Create a set view of the input set.
Adds a single element to the set.
Removes the specified object from the set.
Adds the given counter to the statistics.
Log memory usage for the given logger and priority.
Set configuration options.
Shut down the thread and wait for it to shut down.
Prints the header.
Print object with specified values.
Get a string of length n of characters
Add a new rule counter to the pattern.
Write resource to writer.
Returns the action input parameter with the given name.
Returns the property descriptor for the property with the given path.
Get all required parameters.
Returns whether the given class is a single value type.
Add a link rel attribute.
Set the type of the link.
Adds the specified href lang parameter to the link.
Adds a revision to the link.
Adds a link parameter with the given values.
Add additional arguments to the affordance.
Get link rels.
Gets the revs.
Returns true if the action has unsatisfied required variables.
Returns the formatted version of the given value.
Returns true if property is hidden.
Returns true if property contains specified value else false.
Returns true if the node has an explicit or implicit property include value false otherwise.
Is required boolean.
Returns the default value of the request.
Returns the parameter name associated with the current request or the path variable.
Get property or parameter name.
Get the proxy for the given mixin.
Gets the query.
Append a form to the current request.
Input button.
Appends input or select.
Adds a new affordance builder action descriptor.
Gets the partial uri template components.
Returns a partial uri template with optional variables removed.
Get first node by name.
Get the first node that has the given rel attribute.
Returns an iterator over the nodes in this node list.
Returns an immutable hash map containing the same entries but with the same key and value as the
Returns a new map where the keys are the keys and the values are the values of the
Returns an empty map where the key is the empty key and the value is the empty value
Returns a sorted set of the entries in this map.
Return the last key in the list
Folds the elements of the source iterable by the specified operation and returns the ident of
drop while the predicate is true
Folds the value of the argument to the supplied reducer.
Returns a tuple with the given key - value pairs.
Applies the match function to each element of the list. If no match is found the
Register a list of classes.
Returns the i - th entry in the tree.
Appends the element to the end of the vector.
Overrides the default implementation to return a persistent vector of the given items.
Returns an mutable hash set containing the given items.
Convenience method for creating a mutable list from a sequence of items.
Returns a set containing the contents of the specified array. If the specified array is null or
safe varargs form for non - null non - empty non - persistent vector and non - persistent
Converts an array to a list.
Returns a new string builder with the specified number of spaces removed.
Convert an array of strings to a string.
Returns a lazy ref to the given producer function.
Apply ex to t.
Insert t into array at idx.
Returns a deep copy of the given array.
Suspend if a thread is active.
Set the status of the transaction before an async operation.
Builds a list of components based on the service descriptor file name and jar file deployable
Throws an exception if the file is not a directory.
Create a link between two classes.
Copies the declared methods of the given class to the destination class.
Copy all methods from ct to destination class with exception types
Removes the sbb entity with the current class loader.
Get notifications enabled.
Get referenced resource entity links for a service component.
Install service component.
Uninstalls a service component.
Is ra boolean.
Returns the usage parameter sets for the specified parameter set.
Resets all usage parameters.
Display the result of the operation.
Un folds an object array with the given property editor.
Sends an event to an activity.
Bind an object name.
Unbind the object with the given name.
Looks up the object with the given name.
Returns the bindings for the current node.
Returns the next record for the current event or null if the event is not handled by the
Returns true if this trace level is higher than the given one.
Extracts a jar file to a directory.
Reads from the input stream and writes to the output stream.
Adds an object value to the node.
Attaches the specified sbb entity to this context.
Detaches sbb entity from this context.
Returns true if there are no sbb entities attached to the current entity.
Get the entities attached to the current entity.
Attach a timer to the tree.
Detaches a timer from the node with the given id.
Returns true if the timers are attached to the current node.
Gets the attached timers.
Add a name bound to the element.
Attempts to remove the binding with the given name.
Returns whether the expression has a names bound.
Make a new bound that has the same names as this one.
Sets a boolean attribute of the specified type to the specified value.
Get a child object of a boolean attribute.
Returns a deep copy of the current object.
Method to initialize notification info.
Send a notification for a specific parameter to the notification manager.
Download remote file.
Updates the deployed components.
Installs a deployable unit.
Uninstalls a deployable unit.
Internal undeploy method that undeploys a unit.
Shows the status of the server.
Returns true if the record is loggable false otherwise.
Get the logger for a given record.
Get sbb entities.
Gets permissions from the current policy.
Gets source of the current policy.
Checks if profile exists.
Remove the current profile table.
Updates configuration properties.
Called when the current thread is done with a warning.
Called when the object is stopping.
Activates the state.
Deactivate the object.
Ends the transaction.
Remove this object from the system.
get a resource interface
active a service.
Derive an activity handle from another handle.
This method is called when an activity end button is pressed.
Update configuration properties
Verify config properties are valid and throw exception if not.
Check if the object is stopping. If it is then try to ra stopping the object.
Ra inactive the object and remove it from the set of active resources.
ra un configures the object
Unconfigured the state of the resource object.
Call this method to unset the context of the resource.
Build the profile attribute map.
Resume the background thread.
Returns the activity context handles of the current activity.
Get a usage object for a parameter set.
Decorates abstract class.
Sends an event to the activity context interface of the sbb entity.
Fired event.
returns the profile of the specified object or null if the object does not exist.
get abstract methods from class
get all methods of the given interface including the given except methods.
Create the object pool with the specified profile table and transaction manager.
Remove an object from the pool.
Determines whether or not the given notification source is the owner of the given alarm.
Evaluates the given alarm for the given source object. If the alarm is alive the
Gets the usage parameter set for the specified object.
Gets the event type descriptor.
Checks whether the unit is accepts the url.
Initialize the deployment.
Start the unit with url and name.
Stop a deployable unit. If the file is in the deployable unit the file is
Show the status of the current deployment.
Execute actions after commit actions.
Execute actions after commit priority actions.
Execute actions after rollback actions.
Execute actions before commit.
Execute actions before commit priority actions.
Get the names of all defined tracers.
Tries to find a tracer by name. If not found a new one is created.
Remove failover data from the replicated set.
Process the usage parameters interface of a component.
Return the specified sbb from the object pool.
Create a new object pool
Submits an activity to the calling activity.
Starts the activity with the specified flags.
Ends the current activity.
Check for fire event preconditions.
Fires an event to an activity.
Generate sbb local object concrete class.
Make getter.
Converts a string value to an object.
Set the profile id for the specified profile table name and address.
Extract the message from the result.
Test whether the sbb object is a child of the specified object.
Returns true if the specified collection contains all elements of the specified string false otherwise.
Remove all element of the given collection.
Test if this object s level is higher than the given object s level.
Resolves the object for the current level.
Detach all classes from the pool.
Create a new profile object and add it to the current context.
Returns the object associated with the specified profile. If the object does not exist in the profile
Perform a profile passivate on the current object. If the object is not in the
set the value as text
Generate a concrete class for an activity context interface.
Generates concrete methods for the specified interface.
set the data attribute of the model object
Adds a name binding.
Remove all bound names.
Remove a name binding.
Attach a timer to the cache.
Remove from timers.
Attach a sbb entity to the cache.
Detaches the specified sbb entity from the cache.
Get the sorted set of sbb entities.
Activity end event.
Add a component to the deployable.
Get a collection of strings with its external dependencies attached.
Returns true if this node contains any of its dependencies satisfied by the given show parameter.
Returns true if there are no duplicates.
Gets the install actions.
Gets the actions to uninstall.
Returns true if the exception contains referential information.
Close the specified profile table and profile name.
Get object name from profile table name and profile name.
profile write mode
before set field.
Do after set field.
Get profile table field before compare.
This method is called after the get field is set to the value of the activated transaction field
Perform before management method invocation.
Perform after management method invocation.
Delete a file or directory from the given path.
Creates a default constructor.
default usage parameter getter
create sbb entity getter and setter
Create fire event methods.
Create the method for the activity context interface.
Adds an expression to the list.
Bind an object to a name.
Binds the specified object to the specified name with the specified target object.
Decorates a sbb abstract component.
Create a concrete proxy that calls a method that takes no arguments.
Returns the real field name. If no field with the given name exists null is returned.
Sets the specified field value.
Returns the value of the specified field from the activity context.
Initialize the object slee with the specified profile name. If the profile name is null then
Set the current profile context.
Obtain the profile object corresponding to the local object.
Fires an add or updated event if needed.
Retrieve a profile object from the profile table.
Create a class with the specified name and interfaces.
Create a link to a concrete class.
Add member values to annotation.
Gets the context of an activity.
Get the class pool.
Set the deployable unit of this component.
Called when the server has been undeployed.
Executes the activity associated with the given handle with the given activity flags.
Checks if the class or interface with interfaces with the specified name has been searched.
Get all methods declared by this interface and any super interfaces that are not in the ignore set
Check tracer name.
Create a collection of profiles for the specified query.
Create a temp file for a deployment root and unit.
Gets the entity manager.
Starts the state machine. If the state is invalid the management exception is thrown.
switch the safely class loader of the profile object
Make a proxy that has a public no - args constructor.
Throws an exception if the current transaction is not the same as the current transaction.
Converts the last access time to a TTL time.
Is profile class visible?
Returns the object associated with the profile entity in the current transaction. If the object does not
Get logger names matching given regex.
Resets the logger level to the default level.
Clears all loggers with the given name.
Adds a new logger.
Remove a handler by logger name and handler name.
Append the given tracer name to the log4 message.
Synchronize level with log4j.
Set the trace level to the given log4j level.
Resets the state of the cache according to the enabled flags.
Send a notification to the tracer.
Check if tracer name matches given string.
Writes an object out to an output stream.
Reads an object from an input stream.
Add a direct dependency to the dependency list.
Returns a list of all urls that have been included in the index.
Find the class with the given name local to the class loader.
Get the URL for a resource on the local server.
Get the resources for a given resource name.
Create a new profile and register it.
Resume the transaction associated with the current transaction.
Returns the sbb tree for the given repository.
Gets resource adaptor entity links.
This method must be called before calling this object slee.
Shuts down the current slee. Throws an exception if the current slee is
This method validates a state transition.
generate usage parameter getter for profile concrete class
Set the value of the specified field of the specified object to the specified value.
Builds a new jdbc connection object.
Inserts a new value into the query.
Executes the given operation within the given transaction.
region request from string
Gets the region relative to the current box.
Gets the value of the type field.
Set all registered hints.
Add a hint to the resource. If no hints are given an illegal argument exception is thrown
Sets a list of renderings.
Add a list of renderings to the resource.
Merge all image api profile with the given list of profiles.
create a rotation request from a string
request a size from a string
This method is called to initialize the connection object.
Dumps the current pc and returns the XML as a string.
Pop box.
Handles GPS2 device push command.
Remove temp file and execute quietly.
pull data from device to temp file
Gets the crash log file name.
Detabifies the specified width of the text by replacing all occurrences of the pattern with the
Returns a text editor with the given number of spaces replaced by the given value.
Takes a collection of html elements and returns a collection of them.
Converts a string to a string using the text editor provided.
escape special chars within tag attributes
Adds an exception to the list. If the exception is not a sql it will be
Closes the statement cache and removes it from the statement cache if it was previously closed.
Returns the fully qualified class name for the given type element or null if it is not a
Writes the class definition to the filer.
Writes a single divider to the output stream.
Adds a bit vector to an array of strings.
Reads data from the specified input stream.
Gets a list of types from a string with a list of filters.
Gets the klov report.
Displays a screen capture of an image.
Set a system info key value pair.
Create a selector that will select a property value and put the result into a new row.
Create a selector that has the property value as the value of the supplied property name and alias
Extract validation annotation data.
Returns all annotations for the given property of the given class. If no annotations are found an
Finds annotations on a property.
Returns the property descriptor for the property with the specified name or null if the property is not
Create an object from a map using the class as the key.
Create a new complex object from a map of string to object with the specified exclude properties.
Create a map from string to object with ignore strings.
Converts an object to a complex object.
Get the values associated with the annotation.
Creates a composite validator.
lookup the list of validators and initialize them with meta data properties
Lookup a validator in the registry.
Apply validation meta data properties to field validator.
Remove the given property from the map.
Takes the current time and adds it to the time set and approximizes it to
Returns the total number of cache entries.
Returns a hash of the given object.
open a database
Put all the values.
Remove all objects with the specified keys.
Returns a key value iterable starting from the specified start key.
Load all by keys.
Closes the underlying database.
Reduces the values in the given array by the given object.
Reduces the values in the given array by the specified value.
Returns the variance of the specified values.
Returns the mean of the values in the array.
Returns the result of a method invocation on a given object.
Reduces the elements of an array by a given function.
Creates a string representing the given time in UTC.
Returns true if object matches specified criteria false otherwise.
criterion that returns true if the field value is not in one of the supplied values.
Get the criteria from a list of objects.
Converts a JSON string to a criteria instance.
Adds a number of double values to the end of the array.
Returns the maximum element of the given array or null if the array is empty.
Returns the first element of the given list.
Returns the last element of the given list.
Returns the last element of the given list.
Returns a list containing the least of the given number of elements.
Returns the minimum element of the given list or null if the list is empty.
Returns the minimum element of the given array or null if the array is empty.
Processes array of maps.
Add a collection of maps to a field.
Create an object from a map of string to object.
Overrides the get method to return the value associated with the key.
Returns the tool tip with the specified name and type from the specified bundle or null if the
Create a hex sequence and add it to this sequence.
Processes all queued writes and sends them to the output data store.
Start the queue.
Returns the character at the specified index.
Returns the slc of the specified string starting from the specified index.
Returns true if the specified string is one of the specified chars.
Add the specified character to the specified string.
Adds a number of objects to a string.
Returns a compact version of the given string.
Splits the specified string into an array of strings.
Takes a string and splits it by a space.
Takes a string and splits it by the specified pipe and returns an array of strings.
Create a string array from a string array.
Return the camel case of the specified string. If the specified string is not a camel case
Returns true if the specified string is inside of the specified string.
under bar case.
Counts the number of times a number occurs in an array.
Sorts the specified array of sorts.
Sorts the list according to the comparator based on the provided fields.
Returns a comparator based on the given map of field names to field values.
Create a list of comparator for each of the current sortators.
Returns true if the given value is present in the given map false otherwise.
Returns true if the expected value equals the got value. If the expected value is not equal
Returns true if the expected string equals the got string. If they are not the same returns
Returns the sum of the values in the array starting from the specified index. If the array
Rounds the given number up to the power of 2.
Sorts a list of strings by the field name.
Sort a list of strings by the given field.
Set the value of a field from a map.
Converts an object to a list.
Load all version data for a table.
deep copy a list to a collection
Returns true if the given object has a field with the given string name.
Returns true if the class has a field with the given name.
Returns true if the class has a field with the given name false otherwise.
Gets first comparable or primitive from class.
Attempts to get a sorting field from a map. If the map is not a map
Compares this cache entry to the specified cache entry.
Compare cache entry time with other cache entry time.
Sorts a list of given sorts.
Sort a list by a string.
Sorts the map entries of a class component type by the string sort by the component type
Returns a collection of all the values in the given map sorted by the string sort by the
Sorts the keys of a map by a string.
Sort an array of strings by the given string.
Returns a comparator that uses both the field and the ascending flag to sort the values.
Returns a comparator that uses the sorting algorithm to sort the objects in the specified order.
Gets a value from the cache by key.
Returns the value associated with the given key. Returns null if the key does not exist in
Evict the cache if needed.
dynamically initialize the min and max fields depending on the type of object.
Returns a buffer of the specified size.
Determines if we should exit.
Reads data from the input writer and writes it to the file.
flush queue empty data to disk.
Start the monitor.
Start the receiver with a given time as an aware receiver.
Gets an object by its key.
Create a new result set for the main query plan.
Add the results of the specified group to the specified result set.
Adjust the time out of the file by the time in milliseconds. If the time out of
Synchronously write to disk.
Closes the output stream.
Writes the next buffer to the output stream.
Writes a buffer to the output stream. If the buffer is null the stream is closed
This method initialises the output stream.
Put all the values from the given map into the store.
Converts a key to a byte array and puts it in the cache.
Returns the validator meta data for the specified class and property name.
Extract meta data from string.
Get all validator meta data for a given class property name.
Extract validator meta data.
Extract meta data from annotations.
Convert annotation data to validator meta data.
Splits the specified string with the specified character split at the specified limit.
Takes a string and splits it by chars white space and returns an array of strings.
Takes a string and splits it by a set of delimiters.
Removes all characters in the specified string with the specified delimiters from the specified string.
Split the specified string by the specified range of characters none of the specified delimiters.
Parses a double from the specified buffer.
Parses an int from the specified buffer.
Parses a long from the specified buffer.
Gets a property by its path.
Returns all the fields of the given object as a map. If the object is a map
Returns the type of a property of an object.
Inject a value into a property of an object.
Set class index property value.
Gets a property value from an object or array. If index + num == path.
Get a property value from an object.
Get the int value of a property from an object.
Initialize the summary message. If the name and parent are null the summary message will be used
Creates a message with the specified key and list of arguments.
Creates a message with the given subject and actual args.
Converts a list of key - value pairs to an array of values.
Gets the subject.
Create a JSON object from a string.
Send http request.
Delete a db with given name and confirm.
Create a new database.
Get a list of strings from the database.
Triggers a replication request.
Queries for the value of a document and converts it to a json object.
Query for descending.
Synchronize all design documents with the db.
Gets a design document from the db.
Get all document from desk.
Gets design document from desk.
Saves data to the database.
Finds a replicator document by id and query string.
Find all replicator document that starts with specified string.
Remove a document from the database.
Find the object with the given parameters.
Get all docs from db matching the json query.
Checks if the document contains the given id.
Performs a bulk get of the given objects.
Get object by id and rev.
Execute a HTTP put request with an input stream and a content type.
Execute a http post request
Execute a http delete.
Validates the status code of the response.
Set the content type of the entity to the http request.
Adds an attachment to the list.
Get the changes for the resource.
Read next boolean.
Convert a double value to a string.
Shutdown the thread and release all held locks.
Wraps the given observable into a servlet output stream.
Adds the given tags to the metrics list.
Waits until temp tables have been created.
Gets the project id for the given namespace.
Checks if is query.
Sends an authentication request to the server.
Gets the verb.
Generate subject access review string.
Releases a connection back to the pool.
Called when the client makes a request to the exchange server due to an error.
Initializes this configuration object with the specified session.
Find all scheduled jobs.
Create a list of t from the given list of buckets using the given factory to create the
End the exchange by setting the status code and the reason phrase.
Finds all data in the bucket with the given timestamp and page size.
Create buckets from the specified range.
Send message to server
Send a message to the producer. If an exception occurs while sending the message it is ignored
Send message with delay time.
Scans a string cursor for matches of type string and returns a list of matching strings.
Adds a file to this zip file and preserve an external file name.
Replaces the specified file with the specified text.
Builds the zip file.
Generates metrics for a single component and a data buffer.
Fetch content.
Get content.
Upload a transformation to a container
Returns a file generation of the given components.
Creates a file with a random name in the specified parent directory.
Ends the node and returns the parent object.
Registers an adaptor for a model type.
Registers a renderer on a st group.
Creates a new st template with the given prototype model and content info.
add a domain object to the list
Sets a property of the given name to the given value. If the property does not exist
Adds a child object to the configuration object.
Constructs a supplier that reads a string from a directory and adds a suffix to it.
Copies the contents of the input stream to the output stream using the specified buffer size
Reads a document from a file.
Parses a document from the specified reader.
Returns a stream of elements in the given parent.
Returns a stream of nodes from the given parent.
Gets the first child element with the given names.
Returns the elements in the given parent that have any of the given names.
Validates an xml input stream against a given schema
The main method of this class.
Create content builder from input stream content.
Get content builder from resource.
Processes a single entry.
Converts a string to a character set by replacing all non - numeric and non - numeric
Set the signature of an access key with a given gmt time.
Remove white space from a string.
Add the signature of the request handler to the request handler.
Set the data for the specified object.
Completes the multipart upload and sets the content length.
This method is used to perform a request to see if the user has selected a favorites
Adds the specified state to the notification state.
Returns true if the entry has expired.
get notification.
Get a specific ressees.
Create a new ressee.
Get events by notification.
get event.
get single notification url
Returns the entry with the specified id.
Get authentication token from SSP.
Returns the total number of notification categories.
Adds a list of categories to the notification.
Fetches a user s notification from the portlet s preferences. If the user has not been
Create a notification with an error message.
Create a notification response from the response entity.
Create a notification entry.
Attaches actions to a notification entry.
Normalize a link to start with the specified string.
Returns the notification category associated with the specified request.
Returns the source of the notification for the current request.
This method is used to override the read notices for the request.
read notification response from file
Retrieve a specific id from the user s preferences.
Extract user id from response entity.
This method is called by the framework when a request is sent to the server. It will
Returns a map with the notification attributes as keys and the values as values.
Normalizes p to d.
Returns true if the a box is contained in the b box.
Adds the point p to the closest point defined by pt.
Computes the sign of the given point.
Set the values of this matrix to the values of se3.
Set the matrix t to the given values.
Converts the specified point vector to the specified point vector.
Converts the quadrilateral d structure to quadrilateral f64
Computes the bounding box of the specified quadrilateral f64 rectangle.
Get the bounding box of a polygon
Returns the quadrilateral s center of the quadrilateral f64
Computes the average of all vertices in the given graph.
Calculates the convex hull
Returns the polygon with the same vertexes but with an acute angle < = tolerance.
Returns average of closest point to the target point with error distance to the target point.
Computes the area.
Returns true if the quadrilateral f64 contain the specified point false otherwise.
Does a triangle contain a point?
Calculates the intersection of the two points. Returns null if the intersection is not possible
Calculates the intersection between the two points. Returns null if the intersection is not possible
Computes the intersection of the line a and b with the line a and b.
Computes the intersection between the line l and the line target with the line d.
Computes the intersection between a and b.
Returns true if the ellipse contains the given x y coordinates.
Returns the area of the intersection of the two points.
Gets the value at the specified index.
Converts a Quaternion f64 matrix to a quaternion. If the quaternion is
Returns a new d instance with the current rotation applied to x.
Sets the x - coordinate of a point to a angle between 0 and 1.
Set the y - coordinate of a point so that it would look like a 3x3
Sets the z - axis rotation to the given value.
Sets the z - coordinate of a point to a angle in radians.
Converts a rotation matrix for a given type of rotation and a rotation matrix for b and
Returns a new rotation about the specified axis.
Set the slope angle.
Constructs the twist coordinate from the motion and the rodrigues.
Computes the transforms of the initial object to the end object.
Computes the rotation and translation of the specified point and places the result in the specified
Computes the SVD of a list of points with output center and output normal.
Solves a point on the plane.
Gets the side length of the vertex at the specified index.
Returns true if this node is inside a convex node.
Converts a conic general f64 image into a conic general f64 image.
Converts a conic general f64 image into a conic general f64 image.
Converts a conic general f64 general to a parab convenience general. If dst
Converts a parabIllegal general f64 to a conic general f64.
Divides d by v and places the result into p.
Converts a row - major matrix into a column - major matrix.
Converts a tuple to a 3 - D tuple.
Set the parameter vector of the rotation matrix.
Returns the distance between the specified ang a and ang b.
Returns true iff the line is intersecting with the current line.
Returns true if the specified plane is contained in the specified output.
Returns true iff a line is intersecting with b.
Computes the interpolation between the two images.
Extracts the quaternion from the given matrix.
Process a single input array.
Set the ddrm and t to have no motion
Converts a homogeneous object to a homogeneous object.
Converts a coordinate system to homogeneous coordinate system.
Returns the se3 function of the specified axis.
Returns true if the two se3 matrices are identical within a given tolerance.
Converts a lat lon pair into a unit vector.
Returns true if the specified circle is active.
Returns the squared radius of the specified circle.
Returns the closest point to the given point.
Returns the closest point on the line to the given point.
Returns the closest point on the plane to the specified point.
Returns the closest point on the line to the given point.
Returns a triangle with the point closest to the supplied point.
Transforms the specified se into the specified d object and store the result in the specified result
Computes the distance between a point and a list of points.
Returns true if the quadrilateral is within the specified tolerance.
Returns the angle in radians between a and b.
Converts d to ret.
Converts a d object to an angle between 0 and 1.
Converts a d instance to a d instance. Returns a new d instance with the same
Converts d from src to ret
Converts a b c into a d
Converts d a - b to d ret.
Convert a d object to a d object.
Converts a single d object to a single d object.
Converts d to ret.
Converts a data point into a data point.
Converts the given input object into an output object.
Converts se3 f64 plane to world.
Translates a point in the 3D space into a point in the 3D space
Converts a plane with se3 to a world object.
Returns true if t is identical within tolerance.
Creates a new copy of this matrix.
Computes the squared Euclidean norm of this vector.
Computes the t - value of the line with a given point on the line.
Returns true if this is uncountable i. e. not uncountable i.
Returns whether this general is equivalent to the given parab convenience general.
Returns the center of the specified point.
Computes the acute angle between line0 and line1.
Returns true if p is infinite h.
Generate a list of d with a standard deviation from a given center for a given number of
Converts from h to e.
Computes the dot product of the two points.
Returns true if the two points are identical within the specified tolerance.
Sets the location of this rectangle to be equal to the location of the specified rectangle.
Converts a rectangle with rotated rectangle to a quadratic rectangle.
Computes the point of an ellipse along a specified axis.
Computes the angle of where the contour is rotated.
Computes the tangent of an ellipse.
Selects whether a line is crossed or not. If crossed is true the line
Gets the corner at the specified index.
Returns the distance between l0 and l1.
Returns the Euclidean distance between l and p.
Returns the Euclidean distance between l and p.
Calculates the distance between the point and the plane point.
Calculates the distance between a cylinder and a given point.
Returns the Euclidean distance between segment a and segment b.
Returns the squared distance between the two segments.
Returns the Euclidean distance of a quadrilateral to d p.
Returns the minimum distance squared from the specified quadrilateral to the specified point.
Returns the Euclidean distance of a polynomial.
Returns the squared distance between the two vertices.
Returns the distance from the line to the origin.
Computes the Euclidean distance between an rectangle and a rotated rectangle.
Computes the 2 - dimensional Euclidean distance between an ellipse and a rotated rectangle
Add a new node to the path.
Returns the closest point on the line to the given point.
Finds the closest point in the rectangle to a rotated rectangle
Computes the polynomial given an array of values and an offset and a length.
Creates a new random point from the specified range.
Returns a canonical version of the given data. If the given output is null then a new
Returns true if the two points are identical within a tolerance.
Normalizes v to d.
Creates a new d matrix.
Convert a d object to a double object.
Returns the Euclidean distance between the given two points.
Set the rectangle that contains the rotated rectangle.
Normalize the values.
Computes the square of a triangle.
Returns the quadrilateral of the specified quadrilateral.
Returns the absolute value of a polygon.
Returns the mean of the vector.
Calculates the angle of each point in the list of points in the specified order.
Computes the normal of a list of points.
Returns true if the given polynomial is convex.
Multiply this vector by a scalar.
Returns the maximum of the vector absolute value.
Returns the distance between the specified two points.
Returns the squared Euclidean distance between the specified two points.
Returns a list of d with random values from the specified plane with the specified maximum number of
Returns a list of d with values from the specified mean.
Generate a list of d with mean y and std z.
Returns the mean of the list of points
Returns the mean of the specified list of points.
Invalidates all jwt credentials from the cache.
Invalidate all JWT tokens that satisfy the given predicate.
Returns a hash set that contains all of the elements in the given collections but not in lowercase
Retrieve the features for the specified server directory.
get config dropins features
Get the server xml features.
Parse include node.
Returns a hash set containing the strings of all features of the given element.
Download jsons.
Creates a set of liberty features for the specified set of JSONs.
Returns true if the specified list of features should be installed otherwise returns false.
Returns true if the reference collection contains all of the target strings ignoring case ; false otherwise.
Get the next product version from the version string.
Extract the symbolic name of the jar file
Get a jar file that contains the map files that should be installed on the kernel instance.
Compares if two jar files have the same version.
Extract version string from install map prefix.
Compare two version strings.
Get product info from the install directory and action.
Is spring boot uber jar boolean.
Get a property value from arquillian configuration object.
Determines whether or not the specified environment is working in the graphics environment.
Moves the tortoise direction back to the specified length.
Returns true if the given objects are equal.
Loads the integer value of the string i returning a default value if the i is not
Returns an array of tortoise objects with the tortoise values set.
Verifies that the current image is valid.
Returns a copy of this instance with the specified blank element swap with the target element.
Computes the distance from the current point to the goal point.
Prints a formatted string to the standard output.
Prints a formatted string to the output stream in the specified locale using the specified format string and
Make an array with a given number of elements.
Adds a variable to the time stamp with the given name and object value.
Returns a uniform between 0 and b.
Returns the uniform of the arguments a and b.
Returns the negative number of places places where the number is positive. If the number is negative
Returns the discrete version of the given array.
Returns the first character of the specified string in upper case.
Converts the first character of a string to lower case.
Fixes the error path by adding the given string if it does not end with the given
Join to string.
Gets the token sentence.
Overrides the default filter method to extract the token from the request and if the token is
Extract auth token from cookie list.
Register the given injector with the given environment.
Gets all role permissions.
Adds a projection with the given alias.
Convert job info to job detail.
Convert trigger info to trigger.
Sets the count interval and the interval in milliseconds.
If the start and end time are in the same order then set the start and end time
Send mail.
Overrides the default implementation to write exceptions to a web application exception output stream.
Initialize scheduler.
Returns a sorted collection of all the fields of the given class.
Returns a map containing all the fields of the given class.
Configure encryptor with the specified configuration.
Generate attributes hash.
Generate token string.
Sends a message to the e - mail.
Generates a new strong password for the specified user.
Gets the user for the given account name.
Returns a hash of the given password for the given account name.
Verify account name strength.
Commits the transaction if the current status is active.
Rolls back the current transaction if it is active.
Starts the transaction.
Returns true if the current authorization method is authorized.
parse a object to a date
Gets the response.
Returns a new restriction that is equal to the given object.
Returns a new restriction that is not equals to the given object.
Create a restriction that is less than the given object.
Returns a new restriction that is less than the given object.
Create a restriction that is greater than the given value
Create a restriction that is greater than or equals than to the given value.
Returns a restriction that only contains the given object.
Creates a new restriction that matches any input field with the same name and value.
Returns a namespace manager with the given namespace and href.
Returns a representation of this resource with the given content.
Set the rel attribute of the resource.
Returns a representation of this resource with a new value.
Returns a resource representation of this resource with the given namespace and href.
Decodes a byte array.
Encodes a string into a sequence of bytes.
Compares two input stream for equality.
mv file dst - > src
Throws an io exception if any of the given files have been modified since the current time
Returns the base name of the given file.
Add padding to the block.
Get the short name of a class.
Returns an unmodifiable set of all the super types of the given class.
Verifies that the given password matches the given password.
Reads a string from the system input stream.
Appends a byte to the buffer.
Append a number of bytes to the end of the buffer.
Returns a deep copy of the given array.
Returns a new fraction that is the sum of this fraction with the specified fraction.
Computes the reduced fraction of this fraction by the specified fraction.
Returns a new fraction that is the product of this fraction with the given fraction.
Returns the fraction divided by the specified fraction.
Returns the maximum of the set of long values.
Returns the minimum of the set of long values.
Throws an illegal argument exception with the given message if the condition is not met.
Fetch content at a given location.
Fetch meteo content by longitude latitude and local date.
Fetch content from sunrise.
Returns the set of meteo extras for the specified time ahead.
Finds the nearest forecast for the specified date and time.
Fetch meteo content by content query.
Creates a simple long term using the current date and time.
Create a long term using the current time series.
Create a location object from a list of coordinates.
Fetch available content from meteo.
Create a qualified symbol name for the specified entry.
Returns the beaufort level of the specified time unit or empty if the time unit
Create a uri from its string representation.
Returns whether the current date is sun.
Returns the entry corresponding to a zoned date - time entry or an empty entry if no
Returns the best fit period for the specified time series.
Fetch the location data for a given longitude and latitude.
Fetch content.
Update database.
Calls a method on the given object and returns the result of the method invocation.
Acquire an object from the given data source.
Gets a referenced object from a class object.
Returns a referenced object that is wrapped by the supplied object.
Get configuration object from service path.
Get is substitutor enabled.
Create class iterator.
Returns the specified decoder or the specified default decoder if the specified bootstrap configuration is not set.
Returns a list of all the services of the given class.
Get the module for a implemented class.
Acquire input stream.
Returns the size of the given data source or throws an exception if this data source is not
Gets a referenced data reference wrapped by a byte array.
Returns the component at the specified index.
Returns the prefix of the given index.
Returns true if the type is plain or behind.
Execute the hsre pattern with the given set of flags.
The main loop of cfind
Adds a subset of the runtime subexpression to the match set. If the match set
Returns true if t contains str in the range [ begin end ) ; false otherwise.
Clones the states of a given type from an old state to a new state.
Constructs an optst tree from the left subre and the right subre.
Recursively marks the subre t and adds its left and right flags to the st.
Generate a new nfa from the specified subre.
Start a subre at the current state.
Perform the deltraverse operation on the given state.
nonword nonword nonword.
Clones the word at the specified position.
Returns the index of the first non - numeric digit. Throws a regex exception if the
Checks whether the next token in the stream is a bracket.
Scans the plain part of the regex and returns the resulting string.
Checks to see if a new lcon has been received and if so adds it to
Converts a single character to a single character.
doVec - doVec - > doVec - > doVec - > doVec -
Get the color value for a given character.
Returns the pseudo - color of the specified color.
Perform a subrange operation on the current set of colors and the current set of ranges.
Do not use this for any other purpose.
Set the colorchain for an arc.
Performs the colorchain of an arc. If the arc does not have the same color
Dumps the names of all the colors.
Starts the parsing of a regex.
Restore the current state of the pattern from the previous state to the current state.
Gets the color for a given codepoint.
Set the initial state of the symbol table.
Returns the index of the last seen state.
Returns a unicode set containing the specified character.
Sets the cclass for the given name. If case fold is true the cclass is
Computes the carcsort between the specified positions.
new state with given flag
Move a state vector to a new state.
Move allins from old state to new state.
Copy all ins from old state to new state.
Copy one state to another.
Free all state objects associated with the given state.
Remove a single state from the list.
Create aparc arc between from and to state.
duptraverse an arc s with a null output chain
The method to do the specialColors of the model.
Dumps the current state of the nfa to a string.
Dumps the state of an arc.
the string builder is the same as the state s.
Append a string to the string builder at the given index.
Optimizes the string by removing all whitespace characters and fixempties.
Analyze the arc chain. Returns the number of times the arc was collected before the pre
Perform the regex combine operation on the specified arc.
Removes all states and nexts from thetraverse.
Assumes that a state is reachable from a given state. If the state is not reachable
Adds a canreach to the current state.
Makes sure that each arc has a valid output chain and that all of it s out
Determines whether the given arc is empty.
Get the parameters for the rule
Get the rule interpreter plugins.
Get report plugins
Gets a rule selection for the given rule set.
Executes the configured task for the given command line arguments.
Get the error message for the given execution exception
Gathers standard options for the given string.
Adds options from a task factory to a set of options.
Returns a string containing the names of all the tasks associated with the specified task factory.
Interprets a command line.
Gets the command line from the command line.
Executes a task.
Read properties from the command line.
Displays a usage message.
Gets the home directory.
create a class loader
Returns a set containing the ids of all cells in the given range.
Gets all ids intersecting the given latitude and longitude.
Returns the URI corresponding to the given HTTP method.
Add a route to the router.
Returns the total number of routes across this node.
Appends a route to the first element of the router.
Add a route to the chain.
Add a new route to the last in the router.
Return true if any of the tokens in the path matches this pattern.
criterion smart equal.
Returns the file name of the given string.
Returns the number of folders between e1 and e2.
Compares two entries.
Compares two entries according to a bookmark and a new window.
Set the servlet class last modified time.
Returns the dependants of this tag handler.
Finds class with given name.
Parse authorization header.
Gets the function mapper instance.
Map a method name to a method.
Create a function mapping for a method.
Resolves a local name to a method.
Set the values of this array to the supplied character array.
Return the value of the named variable.
Parse a string representation of a node.
Used to parse a string representation of a node.
This method is used to parse a tag file and return the result as a node. nodes
create a jspc compiler
Get a stream for a resource.
Calculates the last modification timestamp of all channels.
Find all class loaders.
Check class loader.
Start loading with the specified name.
Reads the header of a stream.
Creates a pagination result from a list of data set.
meta key from string
Adds a dependency to the requirements list. If the digest algorithm is m then the dependency
Return the tag file with the specified name. If the tag file does not exist a new
If the supplied path is a resource URL try to parse it as a TLD.
Returns the checksum for the specified file name and algorithm.
Returns the size of the specified file.
Validate channel name.
Seeks to the specified block.
Locates the block by position.
Get a list of artifacts from a supplier.
Update the state of the opt and its corresponding state of the current opt.
Calculates one or more bytes.
Calculates the price of a match.
Calculates the normal match price.
Throws an expected byte.
Throws an exception for a invalid byte.
Scans through all the tlds and creates a hash map for each one.
Scans the input stream for a TLD entry.
Add a servlet wrapper to the list of jsps to be used.
Gets the class loader of the current thread. If the current thread does not have a
Set the bytecode of a particular string.
Gets the bytecode bytecode bytecode of the specified name.
Saves the bytecode for the specified class.
Check if jsps are tag files.
Initialize class path.
Starts the thread.
Stops the current thread and waits for it to finish.
This method is run by the framework once it has been started.
Finds a channel by its name.
Finds a channel by its name.
Updates the group cache with the information from the service access model.
Copy the contents of the input stream to the output stream.
create a parser node and create the node s root
read attributes from reader
Adds the specified files to the include list.
Checks if the input is a jsp attribute and if it contains spaces followed by the specified
Adds an attribute to this model.
Adds the given node as a child of this node.
Returns an iterator of the attributes of this model.
Returns an iterator that traverses all the children of this node.
Finds all children with the given name.
Returns the maven coordinates of this artifact to the given base.
Gets the alias for the given variable name.
Writes the current thread s data and streams to a byte array.
Gets the current thread s string representation.
Finds a print stream.
Writes an optional field if the value is non - null.
Write a string field with the given string value.
Add an element with the given name to the given element parent element.
Creates an element with the given name and adds it to the parent element.
Writes out the buffer.
Set the writer.
Create a new buffer and copy the contents of the buffer to the existing one.
Appends data and ss to the page.
Returns the parent state with the specified key.
Registers a new model with the storage provider.
Create stream from meta key.
Create a new model for the given path variable and view the current job.
Checks if the request is authenticated.
Finishes writing and closes the output stream.
Create a new Gson object.
Returns a boolean value indicating whether to use the FM encoding for this object.
Returns the union of the provided map and the extracted map.
get a throwable from the request
Check if the given coordinates end with the given extension.
Finishes the writing of the compressed data and sets finished flag.
Used to get information about an exception.
Evaluate an EL expression and return the result as a Java object.
Returns a string that includes the hostname and the port as a prefix from osgi system properties
Returns true if the input stream is xml false if not.
return tag info of a tag file directive
Loads a tag file from the compilation context.
Remove all generated proto files with the given name.
Set the URI root.
Scan files.
Locates the uri root.
Moves the cursor to the specified position.
Returns true if the specified string matches this regular expression.
Checks whether a string followed by a space.
Skips characters until the end of the string. Returns null if there are no more characters
Skip forward until the end of the string.
Skip forward until the specified tag. If no tag is found null is returned.
Parses a single token.
Pop the current file.
Make this coordinates unclassified.
Returns a list of aspect information that satisfies the supplied predicate.
Gets missing ids for the given aspect information.
Set the schema resource prefix.
Change the value of DTD resource prefix.
Converts a node to a node.
Add errors to a binding result and all of its children.
Initialize binder.
Scan aspect information for channel.
Remove the last index of str from path and return the result.
Called by a custom tag handler.
Returns a byte array of the specified size. If the requested number of elements in the array
Returns an array of the specified size with or without Fill with zeros.
Creates an aether result from a collection of artifact results.
get resource as stream
Gets validation messages for the specified page.
Pushes stream.
get a list of objects with a specified encoding
Report a fatal error.
Get real path.
get the resource at the given path
Get resource as stream.
Get the resource paths for the given path.
Log a message and a throwable at the current level.
Adds a filter for the given parameters.
Returns the number of bytes that would be needed to store a specific dict in a buffer.
Calculates the memory usage of a dictionary.
Set a preset dict for this output stream.
Moves the window to the top of the screen.
Fill a window with more data.
Process the pending bytes.
Returns the number of matches for the specified distance and limit.
Returns the number of matches of the specified number of characters in the buffer.
Verify that each element in the matches array matches.
Returns the number of bytes that would be required to flush the given buffer position.
Recycle the response.
Flushes the buffer to the underlying stream.
Clears the buffer.
Flushes the output stream.
Closes this response stream and releases any system resources associated with it.
Write a string to the stream.
Throws an exception with the specified error report.
Make a key from a map of meta data.
Generate the class.
Compile the class. If the class is not found an exception is thrown.
Initialize the compiler.
Check if the number of jars in the system is greater than the number of jars in the
Quotes a single character and returns it as a string.
Generate declarations for a single class.
Generate a tag handler pool for the given node.
Generate xml prolog for this node.
Generate common postamble.
Generate code for a postamble.
Generate a tag handler page.
Generate tag handler attributes.
Reads properties from input stream.
Export a channel.
Validates an xml view.
Return the tag associated with the current request.
Parse a string expression into a list of nodes.
select a property group or a new one if no extension is defined
is jsp page boolean.
Print a comment starting from the specified start tag and stopping from the specified stop tag.
Prints a string to the current writer.
Prints a string to the current line.
Prints a single string.
Get the expression from a string. If the expression starts with the open expression and ends with
Checks if the scope is the same as the given string. If not an exception is
Escapes a string so that it can be used in an XML document.
Validate a set of expressions
Return the tag handler class name of the given path.
Returns a legal class name for a given path.
Splits a string into an array of strings.
Makes a new string with the specified identifier.
Returns a string containing the specified character mAngle.
Returns true if the specified string is a keyword.
Adds a property to a map.
Adds a modifier to a string.
Returns a sorted set of metadata.
Modify existing users.
Gets the basename of a string.
Stores a string value into the cache if the value is not null.
Loads a metadata row from the database.
Build a collection of metrics from a aggregated payload.
Attempts to resolve the given number as a number if the given number is lazily parsed
Write string to output stream.
Get the TTL for a given locator and granularity.
Creates the prepared statements.
Track metrics with the given tenantid and list of delayed metrics.
Track delayed aggregated metrics.
Gets the unversioned double or long from the input stream.
Puts an unversioned double or long into the output stream.
Gets all properties.
Create the container in blob store.
Schedules eligible slots for rollup.
Remove a running slot from the running list.
Registers a listener for a given event.
Attach a listener to the emitter once event.
Remove an event from the E emitter.
Emit a string event with a set of arguments.
Returns a list of listeners attached to the given event.
Get the remote host name.
Append an event to the rollup.
Extracts a timestamp from a file name.
Starts the server.
Returns the rollup computer of the given type from either the given granularity or the given roll
Create an io instance from the configuration.
Adds a value to the ttl map if the value is smaller than the current value.
Computes the maximums for the given headers and outputs.
Returns a string representation of the given header set.
Returns the formatted strings for the specified outputs.
Registers the metrics for the given object.
Return a thread pool builder with the specified name.
add a metric to the current set
Computes the complete metric names for the given metric index doc count.
Extract tokens from metric locator and return them as a list.
Get the result of a put operation.
Returns the granularity of the given duration from the given points that are less than or equal to
Set the current time of the server.
get unique hosts
Gets the maximum number of connections per host.
Get an iterable of metric column families.
Inserts a collection of metrics at a time.
Insert a set of metrics at a specific granularity.
Create locators with the specified rollup execution context.
Returns the regex to use for the current and next level.
Starts the thread.
Stops the thread.
Check if locator is current in batch layer.
Determines whether the specified locator is currently in the discovery layer.
Determines if the specified locator is currently in token discovery layer.
Determines whether a particular locator has been delayed for a particular slot.
Set a delayed locator for a specific slot.
Create a map from the start and stop milliseconds to the iterable.
Returns an iterable that iterates over the specified range of the specified granularity.
Insert a collection of metrics.
Insert a collection of metrics into a column family.
Returns true if the i - metric is delayed by the max age allowed.
Generate a bound statement for a metric if the metric is delayed
Get all metadata values for a given locator.
Returns true if the headers contains a content type.
Returns whether or not the given header contains a accept header.
Inserts a list of objects into an index.
Returns true if the input is valid.
Checks if the file manager is running. If it is not the file manager is not
Get a new extractor instance.
Checks if the current operating system is the same as the os name prefix and the os
Starts the erlang process.
Shuts down the helper process.
This method creates a default params instance.
Adds a list of server to the passed in list. If the passed in list is
Adds a server to the list for this connection.
tx tx tx tx tx tx tx tx tx tx tx tx tx tx tx tx tx tx
Sends a message to all peers
Liefert die weitere adresse.
Gets the user defined simplefield.
Gets the user defined anyfield.
Set the value of the api suchfelder.
Gets the value of the multimedia anhang property.
get the status of aktiv
get the status of aktiv
Return status typ of aktiv
Return aktions typ for a given date and comments
Returns the value of the adressdruck property.
Liefert die IBANzahrung typ eur gegeben.
Gets the value of the boden &lt ; date&gt ; tag.
set the value of the region property.
set the value of the area property.
set the value of the address property.
Sets a description for this date and time.
Used to set a rental ad period.
Sets the furnished value.
set the value of phone1 property.
Set the phone number as a phone number.
Sets the value of the contact.
Set the phone info value.
Sets main email address.
set the value of the cc email property.
set external id to a lang. string
Sets the value of the user agent to the specified string.
Set the epart of this date.
Sets the value of the jahFeedang property.
Sets the value of this date - time pair to the specified string.
Sets the value of this field to the specified value. The field s date and comments will
Returns a boolean indicating whether the given string is numeric.
set the value of the gebiete property.
Set the value of the gruppe property.
Set the value of the user agent.
Gets the value of the property property property property.
Set the stand value.
Gets the user defined extend.
Set the value of this date - time attribute to the specified value.
Gets the value of the zimmer property.
Returns the value of the haus property.
Returns a list with the same comments as the passed in date. If the passed in date
Gets the value of the gastgewerbe property.
Gets the value of the forstwirts channel property.
Returns the value of thesonstige property.
Gets the value of the renditeobjekt property.
Gets the value of theBackrain property.
Set the value of the umfang property.
Sets the w ungtyp value.
Return the ISO code for the given country. Returns null if the country is not available.
returns the iso if the code is equal to the country code or null if the code is
Return the iso if the string country is equal to the argument country. Returns null if the
returns the iso2 code if the argument is a valid country
Returns the display name of the given country and language.
Translate country name.
Gets the value of the anbieter property.
set the value of category property.
Gets the value of the pdf property.
Set the value of the aktionart property.
Set the real XML element s date and comments to the given value.
Sets the pacht.
upgrade from previous version to new version
Gets the value of the object as a list.
Gets field names.
Set the value of the blick attribute.
Set the pauschalmiete value.
Set the value of the monatsmiete property.
Liefert den Wert in den Wert.
set the value of the last method.
Sets the value of the zustand art property.
Gets the value of the feld property.
Dumps the current record to the specified writer.
Get the value at the given position. If the value is null the default value is returned
Print the string table as an iterable.
Set the string value at the given position.
Sets the value of this date - time attribute.
The date and time at which the event should occur. The time at which the event should
Gets the value of the energiepass property.
Set the value of this date - time attribute.
Set the grundst typ value
Sets the attribute value for the geschlecht.
Set the value of the h typ property.
Gets the wiederholungstermin.
Gets the value of the teilungsversteCheckpointung property.
upgrade from previous version to new version
Gets the value of the be set property.
Gets the value of the wunDescriptor property.
Set the art value.
Set the value of the modus property.
Gets the value of the emailScanning date property.
Gets the value of thetelsonstige property.
Set the handel typ value.
Sets the value of the api suchfeld1 property.
Sets the value of the api suchfeld2 property.
Set the value of the api suchfeld3 property.
Gets the value of the row property.
Sport zu sport.
Gets the value of the anhang property.
Schreibt das garraetzt das Ketz
Gets the objekt zustand typ.
Returns theiaus of the given date and comments.
get the ausstattungsqualitaet by the given date and comments.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Set the value of the wert.
Sets the value of this object to the specified value. The value is the same as the
Sets the value of the bauerwartungsland property.
Sets the value of the bootsstaende.
Sets the value of this jaxb element to the given value. The value is the same as
Sets the value of this jaxb element as a string. The value of this jaxb element is
Sets the doppel key to the given value. The doppel key is a
Sets the value of the e infamilien code.
Sets the einzel handel gross attribute.
Sets the einzel handel klein.
Set the value of the gar root element.
Set the value of the garten property.
Sets the value of this date - time attribute to the value of the given string attribute.
Sets the value of the gewerbe property.
Set the value of the hotel property.
Sets the industrie.
Sets the value of the keine bebauung property.
Sets the value of the kleingewerbe property.
Set the value of the lager property.
Sets the value of the date - time attribute to the specified value.
Sets the value of this date - time attribute to the given value.
Set the value of the park - data property.
Sets the produktion.
Sets the reihen - ness of the object to the specified value.
Sets the stellplaetze.
Sets the v single - valued date and comments to the given string value.
Sets the value of this date - time attribute to the given string value.
Set the value of the anbieter property.
Gets the value of the wung property.
Gets the value of the grundstueck property.
Gets the value of the einzel handel property.
Gets the value of this property as a list.
Gets the value of the parken property.
Gets the value of the freizeitimDirectie property.
Returns the value of the objektart property.
Gets the value of the stell sart property.
Set the value of the max dauer.
Gets the value of the feature property.
Sets the zimmertyp value.
upgrade from previous version to new version
Sets the value of the keine ang previously set. The value is the same as the
Sets the erdwaerme.
Sets the solarheizung value.
Sets the value of the pelletheizung property.
Sets the value of this Element as a string.
Set the value of the oel property.
set the value of the fernwaerme.
Sets the strom attribute.
Sets the value of the k work item.
Returns a random string with the specified length.
Returns a random string consisting of letters of a given length.
Returns a random string of a certain length.
Liefert die WUnbetzahl der Ketzt.
Set the value of this property as a String.
Set the value of the objekte property.
Gets the value of the feed property.
Set the value of the moebliert.
Gets the value of the tageleistungen property.
Sets the sub administrative area.
Set the centroid of the location.
Set the locality of the location
Downgrades an open immo document to the previous version
upgrade from previous version to xml
Set the type of the field.
Gets the value of the field property.
upgrade from previous version to new version
Gets the value of the ad property.
Set the value of the gastgew typ property.
Set the value of this date - time field to the specified value.
Schreibt die daten verk Geschriptide.
nein vereinbarung typ. keine ang records.
Gets the value of the image property.
Set the price type.
Generates a new development instance with the specified string value.
Sets the directions of this date - time pair.
Sets the value of the co2Rate property.
Sets the value of this date - time pair as a java. util. Date object.
Specifies a date and time as a description.
Sets the value of the property status property.
Sets the value of this date - time attribute.
set the value of the be ba work attribute on the current thread.
upgrade from previous version to the new version
set the value of the parken to typ
Set the attribute value to alter.
Set the value of the freizeit typ property.
Set thetelefonart value.
Sets emailart.
Sets the value of this property to the specified value.
Sets the value of the overseas rental property.
Create a user defined simplefield.
Gets the value of the fehler property.
vermarktung grundstueck gewerbe typ.
Returns the value of the stpsonstige property.
Returns the value of this date - time attribute as a list of value lists type.
Sets the minimum dauer to the given value.
Set the zins typ value.
Gets the value of the photo property.
Sets the metadata of the feed.
Set the projects for the account.
Set the properties of the feed.
Method to upgrade from the previous version of the document to the new version of the document.
Gets the value of the imDirectie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Set the typ value.
Sets the distanz zu value.
Gets the value of the distan Type property.
Gets the value of the distan input field.
Checks if the exception is compatible with the throws clause.
Set the namespace URI bindings for the given context.
Binds the given prefix to the given namespace uri.
Remove a binding.
Returns true if this comment has the tag with the given content false otherwise.
Utility method to consume comment tokens.
Returns the next token from the line or null if the line is not a comment.
Returns the index of the specified token in the line comment if present or the index of the
Initialize logging.
Adds a prefix to the start of the namespace context.
Add an iterator to the end of the iterator list.
Add an option to the options map.
Add a string option.
Add a option that has an integer value of the specified form.
Add a long option.
Add a double option.
Add a boolean option.
Main method of this class. Parses the command line arguments according to the given locale.
Returns a new instance of a class.
Call this method after access is completed. If the concurrency limit is reached then this method will
Set the target object.
Prepare the object.
Returns the first method matching the argument name.
Converts an unsigned number into a string.
Serialize an object to a byte array.
Takes a byte array and deserializes it to an object.
Return the element with the tag name of the given element.
Get the text value of the child element with the given tag name. If the element does
Gets all the child elements of the given element.
Return true if the node s name matches the desired name.
Returns true if the node name matches the desired name.
Set the length of a string.
Monitors the current state of the handle with the given listener if debug logging is enabled.
Add entry to weak reference monitor.
Returns whether monitoring thread is alive or not.
Calculates the value of the given mobile number.
Map a prefix to a namespace.
Apply a new end prefix mapping to the current content handler.
Add a callback.
new tree node unique children.
Gets the item s text color.
Set the current values. If the current values are not set a new array is created.
Gets the color of the specified item.
Set the text size.
Returns the index of the item whose x - coordinate is greater than or equal to the specified
Get the intro version of the library resource and convert it to a string.
Gets the keyword names.
Get the command line arguments for the specified keyword.
Get the documentation for the specified keyword.
Main entry point for the remote server application.
Stop the server and wait for it to stop.
Start the server.
Convert properties from a file to a json string
Convert properties from a file to a json string.
Convert input stream to json string
Converts properties to a JSON string.
Converts properties to a JSON string.
Convert a map of properties to a string
Takes a map of values and converts it to a map of values.
Converts properties to a JSON string.
Calculates the maximum radius of a drawable by getting its intrinsic dimension and padding.
Returns a builder for the ocspFetcher implementation.
Find the intermediate issuer of the given certificate.
Overrides the execute method to provide more control over the execution of the mojo.
Checks if the input directory exists and matches the depth of the input directory. If not
Substitute the values in the template string with the values in the variables map.
Finds the first line that starts with the given string and replaces it with the given string
Add title to html file.
Replaces all the variables in the initial string with the given values.
Update relative paths in html.
Copy files.
Check if the path contains the given string.
Returns a view which contains the slider content.
Fade up the element for the given duration.
Fade the element down for the specified duration.
Calculates percentage of the specified width.
Check if views need to be overlap with other views.
Create intent to launch an activity.
Launches an activity.
Get a list of fact Sheet resources.
Downloads a file from the given response.
Build http client.
Create new access control entity response
Update data model response.
Create a full export job.
Add a host to the API request URI
Set the client credentials.
Converts a graph ql expression to a graph object.
Get a list of sharing objects.
Add permissions to a graph
Writes permissions to a graph.
mark logic dataset graph
Cancels the write buffer and the client.
Execute a select statement on an input stream using the specified sparql query as a starting
Create a dataset graph for mark logic.
Limit the number of threads in the process
Resize the string.
Rotates a string by a given amount.
Set the gravity value.
Strip profiles from the command line.
Set the font with the specified style size and color.
Adds an image to this element with the specified size.
Adds an image to the process.
Parses the given target object and returns a list of String arguments.
Prints usage information to the given stream.
Extract time unit from string.
Parses the given target object with the defined properties.
Execute the given url with the current screen region and the current context.
Method to execute a slide operation.
Interprets the content of the file using the default interpreter.
Sort a list of rectangle by size.
Render the given string using the template text.
Get the xml file for the given slide number.
Returns true if the mouse event is in the range of the screen event.
Check if a given element overlap vertically with another element.
Execute outbound operation.
Execute outbound operation and return payload.
Finds a file with the given name and options or throws an exception if not found.
Get or create temp directory.
Returns a log value map for the given key - value pairs.
Log a message at trace level.
Log a message at trace level.
Log a message at debug level.
Log a message at debug level.
Log an info message.
Log an info message.
Record an info message with key1 data key2 data value1 data value2.
Log a warning message.
Log a warning message.
Log a message at the error level.
Log a message at the error level.
Add the string value of the join point to the current context line.
Write start object with field str and event name
Write key value pairs.
Serializes the throwable proxy to a JSON generator.
Returns a log value representation of this duration object.
Get the caller data associated with the event.
Create a new database in Hive meta store.
Checks if the given array position has a mapping. If not it removes it from the
Returns the attr value of the current cell and the save comments map. If the map is
Save data to an object in the current context.
Refresh a row from a sheet.
Parse save attr string.
Get save attr list from row.
Get save attr from list.
Sets the save attributes in the hidden column of a row.
Set the save attrs for all rows in the sheet.
Set attributes of a row using the save comments map.
Prepare context and attrs for cell.
Returns a string representation of the specified number.
Shift a single attribute.
Create a new XSSF wrapper for the given XSSF instance.
Gets the wb wrapper.
Returns the formula evaluator for this document.
Recalculate the number of columns in the current sheet to the number of values in the
Load data from a web sheet.
Loads a web sheet.
Loads a work sheet by tab name.
Export content.
Save the current instance.
Submits the form for execution.
Populate a component.
Get the configuration of the current tab.
Reads an encrypted object from the input stream.
Returns the locale associated with the given component.
A streamed version of the http response.
Returns the cell helper for this cell.
Returns the variant of this node as a helper. If this node does not have a parent
Gets the validation handler.
Gets the chart helper.
Returns an array of ptg objects that can be used to convert the shared formulas.
Create a new ptg and add it to the watch list.
Create a new list of ptg and watch the original operand class at the given position.
Returns a new ptg with the specified number of operands and the specified formula changed.
Create a list of serial rows from the current row and the number of rows in the list
Create a list from a list of serial rows.
Create a new base ptg with the given arguments and add it to the new ptg
Get x color.
Returns x ge color for a given theme table index.
Finds an automatic fill color.
Get x value.
Get the x color.
Gets x at a given index in a theme table.
Convert a xssf color to clr color.
Get a triplet from an xssf color.
GetWorker color from cell style.
Finds component name from class.
Populate the attributes of the given form cell with the default values.
Returns the attributes type of a method.
Set a property value on an object.
Returns the value of a property of an object.
Set the properties of a faces cell and set the attributes of the cell s input type and
Find cell validate attributes.
Set up the parent sheet with the fcell and cell with the specified id.
Set the f cell and the chart id based on the index of the cell in the parent
Sets the fields of the faces cell f and cell with the specified id.
Map the characters in the specified Xssf instance to the corresponding Xssf instance.
Get chart title as string.
Set a series style.
Add a chart item to the current chart.
Setup bar style.
Initialize xssf.
Gets the chart id from the parent with the specified name.
Map a XSSF XSSF instance to a XSSF chart.
Generate a single xssf chart.
Evaluate a string as a collection and return the result as a collection object.
Gets the full name from a row.
Builds the upper level formula.
Sets up the upper level formula.
Builds a cell formula for shift rows.
gather rows mapping by full name.
Change index number in map.
Change the length of an attribute.
Change index number in hidden column.
Sets the specified full name in the specified column of the specified row.
Get original row number in hidden column.
Sets the original row number in hidden column.
Create rows mapping for the given parts.
Find the child rows mapping from the specified map.
Find an item in a collection.
Build the current config range.
Returns whether the row at the given index is within the given source config range.
Checks if is ref.
Replace expression with cell value.
Returns the index of the merged region in the sheet.
Returns a list of the skipped region cells in the sheet.
Adds the given cell range to the given list.
Builds the comment from a tie command alias to a sheet
Builds a cell comment from the given tie command and cell.
Build the configuration map.
Returns the configuration of the specified sheet.
Create a command from the configuration sheet.
Verify that the last cell in a row has a value of stoppoint
Build the sheet.
Check and repair the last row.
Builds a command list from a sheet comment.
Finds the child command and sets the parent for it.
Checks if the command list has each command in the list.
Checks if a command is inside a sheet. If so adds it to the command list
Copy the template for tie commands
Build command list.
Processes line which is either widget or validate.
Process a command line.
Move the specified comment to the specified cell.
Create a config command.
Build the attribute map from the command line.
Create a sheet configuration from the input sheet and the input sheet.
Calculate and set the footer of the sheet.
Set the body of the sheet.
set the header of the sheet
Delete a row.
Remove all ranges from the given list.
Returns a list of all strings in the specified row with the specified name removed.
Gets each command from the command index map with the command full name prefix + varparts
Insert empty object in context.
Delete object in context.
Make an object available in the context.
Index a command in a config range.
Check if is row allow add.
Inserts one row at a time for each template in the source config range.
Evaluates the specified cell for the specified string value and adds the result to the specified
Evaluates the formula of a cell given a string value.
Returns true if the specified string is a user formula string.
Creates a new cell comment with the specified comment map.
Evaluate boolean expression.
Remove a range of rows from a sheet.
Remove a single row from the sheet.
Removes a cell from the specified row index.
Removes all rows in a body cell from a list of rows.
Load a picture from the current page.
Load the chart for the given row and col index.
Makes a new value based on the specified value and faces cell.
Returns the formatted string value of a cell using the specified evaluator and data formatter.
Get cell string value without format string.
Get cell string value with type.
Gets cell string value with number type.
Sets the value of cell c to the specified value.
Sets the string value of a cell.
Sets the cell value to the specified boolean value.
Sets the value of the cell c to the specified string value.
Sets the cell value with the given string as number.
Copy a range of rows.
Copy a single row.
Copy a cell from source sheet to destination sheet
Sets the value of a cell to a string.
Copy a cell from source cell to dest cell.
Clone the comment of a cell
Creates a comment anchor for a cell.
Create or insert a comment to a cell in the sheet.
Matches the comment settings of a cell to another cell
Gets a vml drawing from a cell.
Get ct shape from vml.
Get the cell style from source cell.
Convert a cell to cell range address.
Get row col from component attributes.
Get the number of initial rows from the configuration.
Gets a faces row from a body row.
Gets the faces cell from the body row and column index.
Get cell from sheet.
Get skey from cell.
Create or add a new tie cell in the specified map.
Get the current data context name.
Evaluate the given expression with the given context object.
Evaluate the expression with the given context object.
Writes an object to the output stream.
Remove a row from the table.
Add the given rows to this set.
This method recovers the values of all serial rows in the specified sheet.
Get chart type.
Create a basic stroke with the specified style
Initialize chart data from xssf.
Set up chart object from chart data object.
Initialize xssf with XSSF data.
Initialize xssf.
Takes a chart element and returns the chart id associated with it.
Get chart id from child node attributes.
Generate a new row at a given index with the object class name and the position of the
Saves data to object in current context.
Recalculate formula result.
Get cell with row and col from sheet.
Gets the faces cell with the specified row and col index from the current page.
Restore the current data context.
Get the last object in the collection with the specified name.
Checks whether the specified part of the current data context need to be restore to the specified
Create a new collection object from a command full name and a collection object with the last command
Shift the specified row.
Set the ref cell for the first row. If also create the addr attribute.
Create a new ref to the last row of this sheet and add the new cell to the
Create cells for a given row and add them to the hidden columns. If the row is
Evaluate a single cell.
Reads the object.
Constructs a list of parsed cells based on the sheet name and region address.
Build a series list from a list of bsers and a theme table.
Build a chart object series in list format.
Get a list of colors from a specified dpt list and a list of groups.
Returns the ctd at the specified index in the specified list or null if the list is
set the command index map
Convenience method to get all pictrues associated with a XSSF instance
Get xssf sheet index.
Index a picture in the map.
Generate a picture style.
Generate a chart style.
Gets the pattern.
Get the current chart as a streamed content.
Recovers the cell of this sheet.
Get the row style of a cell.
Get cell font style.
Get cell font color.
Get cell font decoration.
Get cell style.
Get the column style for a faces cell fcell cell and row height.
Gets the alignment from cell.
Gets the vertical alignment from cell.
Calculate the total height of a sheet.
Sets the style of a cell. If the cell style is locked and the cell is locked
Gets the input type from the cell type.
Returns the resource paths for the given path.
Get resource as stream.
Removes a path from a resource string.
Return boolean value of input string type
Find the bean with the specified name.
Joins a short array into a string.
Rounds a double value to a specified number of places.
Get active tab type string.
Get the style of the active tab.
Returns the default date pattern to use. If no pattern is specified the default date pattern is
Get the decimal separator of this string according to the default locale.
Returns a string representing the decimal separator of this string according to the default locale.
Set tie command alias list.
Build the form for the watch list.
Builds a watch list for a cell
Adds a row to a watch list if it is not already in the watch list.
Returns true if the specified string starts with the tie constants. command prefix.
Parse widget attributes.
Gets attribute key in map by cell.
Checks to see if a new comment contains a valid cell attribute for the specified cell.
Returns the index of the first character in the specified string that is in the specified position.
Parse command attributes from a string.
Parses the input attributes.
Parses the validate attributes of a form.
Split attribute value list by eual sign.
Parses a list of special attributes for the given key and type.
Extract the default date pattern from a calendar attributes map.
Process select item attributes.
Gathers the special attributes of the given type for the form.
Parse a comment string and create a map from it s values.
Returns the index of the first non - cell name in the given string starting at the given
Remove chars from string.
Gets column name.
Takes a string and converts it to an int.
Get cell by reference.
Converts a height units to a pixel.
Returns whether the given string is a date.
Parse a date string.
Checks if a string is numeric.
Determines whether the given parameter should continue given the current value and the result of the previous
Set a property value on an object.
Compares to other cell.
Returns true if the child config range is inside the parent range false otherwise.
Removes all hidden columns from the sheet.
Delete hidden columns in a row.
Deletes the cell with the specified number from the row.
Process a system event.
Refresh the cell after status has changed.
Validate with given row and col in current page.
Validate by tie web sheet validation bean.
Check error message from object in context.
Validate all rules for a single cell.
Perform validation of attribute value.
Validate cell.
Validate current page.
Validates a row in current page.
Validate a single row of the sheet.
Refresh the cached cells in the current page.
Refresh the cell with the specified row index from the current page.
Set submit mode in view.
Called before validation of current configuration.
Clears all cached values.
Load the header rows.
Load header row without configuration tab.
Fill to the max columns.
Get the style of the header column with the specified width and total width.
Get the width style for the col width and total width
Gets the column width style.
This method initialises the tabs.
Loads the serial data if necessary.
refresh data for all cell
Refresh the attribute data for the specified cell.
Returns the index of the tab with the specified name.
Adds a dynamic tab to the work sheet
Prepare work shee.
set first data table first
Adds a new row to the sheet and adds the specified row index to the faces row
Load body rows.
Refresh the specified cell.
refresh a cell
Create dynamic columns.
Add a repeat row.
Refresh the body rows in the specified range.
Sets the status of the proxy.
Returns whether the object is un non - null.
Returns the common constructor for the given type.
Write input stream to output stream.
Write long.
Writes the specified string to the specified writer.
Convert traffic stats tag to hex string.
Add bitmap to the result.
Adds a file descriptor to the result.
Remove a parameter from the parameter result.
Adds a header to the request.
Clear the content of this request.
Start streaming playback service.
Bind the service.
Unbind service connection.
Drop the listener.
Stores remote input to disk.
Transfers the input stream to a string buffer and returns the result as a string.
Convert input stream to string with utf - 8 encoding.
Sends the content of the element to the output stream.
Reads from the underlying input stream and returns the number of bytes that were read.
Closes the underlying input stream.
Reads a byte from the stream.
Resets the state of the underlying IO.
Send start.
Write the header.
Write content type header to output stream.
Send content transfer encoding header to specified output stream.
Send end of header.
Send end.
Send part array out to specified output stream.
Get the length of parts.
Determines whether the given URI is a redirect.
Sends a not modified header.
Set the date header to the response.
Set date and cache headers.
Set the content type header to the response.
Writes an empty buffer to the given channel and adds a listener to close the channel future
Write the filename and quote bytes to the output stream.
Send data if the length of data is equal to num.
Installs a new version of the cache.
Ensures the working directory exists. If the directory does not exist it will be created.
get cache response by request info.
input stream.
Resets the bitmap.
Get a ssl context.
Validates a keystore with the given password and key store password.
Replace the current scale with the specified type.
Gets a pending intent.
Disconnects a connection.
Bind the service to the current context.
Unbind the service.
Notify about view changes.
Overrides the channel open method.
On accept data.
Resets the loading state.
Waits for the loader to complete.
Set view visibility to h visibility.
hide soft input from text view
Show soft input.
toggle the soft input of a text view
Returns the width of the image.
This method is called when an exception occurs during the port unification process.
Clear images from cache.
Populate view with image.
Cancel image loading for view.
Create an image consumer for the given view.
Decorates an image result and calls the supplied consumer to set the result image.
Set image consumer to be called when image is loaded
Start image loader task.
Adds a bitmap to the mem cache.
Releases a buffer to the pool.
add content type str content language and user agent to url
Adds a parameter to the request.
Connect with workaround.
Calculate the MD5 hash of a string.
Returns the string for the given index
Returns the string representation of the given status
Checks whether the given result is correct and throws an exception if not.
Checks whether the current result is successful and throws an exception if not.
Adds a lexotype to this word.
Add a ending to the list
Estimates the weight of a wordform given its attribute values.
Add a description string to the print stream.
Verify and set the attribute value.
Remove kamols markup from a string.
Sends a get metric request to appd
Returns the query string as a map.
process json node to list of metric data
parse info json string to list of app info objects
Create a connection to the server.
Perform a query on all the metrics of all the apps.
Returns a reader that reads all document codes.
Returns a reader for a single document.
Returns a reader for a column set.
Creates a reader that returns the java. lang. String code list.
Returns a reader for a single document.
Returns a reader for column sets.
Convenience method to get column element id
Get the simple value of a row column.
Gets the column with the specified id from all columns in the set.
Get all key in a collection
Gets the key of a column by its id.
Checks if is key column.
Create a new column with non - null values.
Create a new key.
Set the number of lines to skip.
Add a column to the read table.
Creates a writer out of a code list.
Returns a writer out of format used by the current writer.
Returns a writer out of a column set.
Returns a writer that reads all of the documents in the current writer s document list.
Returns a writer builder for the specified code list.
Returns a writer builder for a column set.
Returns a validator that validates a single document.
Returns a validator for a gener04 code list set.
Returns a validator for column sets.
Returns a validator that returns true if the provided code list is valid.
Returns a validator for java. util. UUID.
Returns a validator for column sets.
Send logs to the server.
Set the context.
Get the current log level for the current thread.
Gets a boolean from the capture thread pool and blocks until it is done.
Set max log store size.
Prepend the metadata to the given string.
Append metadata to the stack.
Create a JSON object.
Sets the user identity.
get byte array from file
Start location updates.
Determines the number of entries in a region. If the region is not a region then
This method is called when the number of entries in a set is larger than the number of
Dumps the total and average sizes of the specified region.
Reads a snapshot of a single record from the file.
Prints the current time stamps to the given print writer.
Get the all time values of a given index.
Converts a chart file to a chart type.
Get the pool for a given server.
Get the pool of locators for the specified jmx address and port.
Checks if is existing region on server.
Returns the object member of the specified name in the supplied jmx object. If the object does
Returns a collection of all the hosts in the specified jmx object.
Look up a network host.
Send exception to result sender
Wraps the given function with the results of the given execution using the given function.
Flatten a collection of objects into a collection of objects.
Return a collection of objects that match a query.
Return a new cache listener bridge that removes the given event from the cache and calling the consumer
Return a new cache listener bridge that removes the given event from the cache and calling the consumer
Handles an exception.
Returns a copy of the current key level array based on the supplied region filter keys.
Override this method to override the execution of a function.
Return the list of hosts associated with the specified object.
Wraps String. prototype. execute.
Get the app name from a list of resources.
Create a new instance of geode auth for the specified properties.
Returns the specified region. If the region does not exist yet it will be created.
Get the region with the given name. If no region with the given name exists return null
Constructs a comparison for the source map with the target map. The source map must be
Returns true if the value at insert point must be less than the current time stamps at
Close the resource.
This method converts all stats files in a directory to a list of csv files.
The main entry point for this reader class.
Tries to reconnect to the server.
Stop members on the specified host.
Shut down member with given name.
Shut down all members from JMX.
shut down a specific time zone.
Maps a list of string keys to a list of strings with pagination results.
Read results by page.
Imports a region.
Check whether the remote locators match the local locators.
Override this method to override the execution of a function.
Create a check for the sum of all the objects in the specified region.
Returns the value of the specified column of the specified object.
Returns whether or not the given type mirror is a valid type for the given type mirror.
Serializes the given object to a byte array.
Deserialize k from byte array.
Create an object of the given type.
Check for table id.
Check if the element has an annotation on the column. If not an annotation is found the
Checks if element is a direct supertypes of the given class.
Emit a debug info log of the specified type.
Gets the id of the current class.
Converts the table object to an observable.
Checks if the column is declared and throws a runtime exception if it is.
Returns the value of the given string if it is blank otherwise returns the default string.
Returns a new string with the first character converted to upper case.
Returns true if the given type mirror is one of the real types.
Adds the string as descending to the query.
Read the temperature of the device file.
Returns the value associated with the given type.
Sends an error message.
Gets the current icon fonts.
Gets a list of all icons.
Gets the background decoration of the element.
Raises a number to a power of 2.
Sets this matrix to a new array of values.
Calculate the power of a number.
root big decimal with index and scale
Taylor taylor.
Print a big decimal with a specific scale.
newton a decimal with a specified scale
Uses arctan to convert a big decimal to a decimal.
big decimal arctan taylor
Element - wise sqrt of a big decimal.
Print the specified string pi.
Sets the timestamp for the given time.
Set the limits of the image.
Puts a float value into the cache.
Prints the current state of the model to the console.
Add another complex to this complex number.
Subtracts a complex from this complex number.
Multiply this value by a complex value.
Divide this complex value by another.
Sets the values of this matrix to the values of the specified matrix.
Get a row vector.
Gets a column vector.
Set this matrix from a 2D array of values.
Returns the transpose of this matrix.
Adds a matrix to this matrix.
Subtract a matrix from this matrix.
Multiply this matrix by a constant.
Multiply this matrix by another matrix.
Print a matrix to a new stream with the specified width.
Set the image resource for the element.
Validate the coefficients.
Compute the next position of the function.
Clears all cached SLDs.
Converts a styled layer descriptor to an XML representation.
Convert a raw sld descriptor to a styled layer descriptor
Validate the layer descriptor and throw an exception if an exception occurs.
Validate the xml for a given sld.
Returns the area of the specified area.
Sets this matrix to a new matrix.
Sets this matrix to a new array of values.
Returns the matrix inverse of this matrix.
Returns the determinant of this matrix.
Computes the Euclidean norm of this matrix.
Converts a column vector to a matrix column vector.
Computes the decomposition of the provided matrix.
Perform forward elimination on the provided array.
Returns a column vector that contains the substitution between the two columns.
Returns a column vector that contains the substitution of the given column vector.
improve a single column vector by the improve one column vector by the improve one column vector by
Converts a square matrix into a square matrix.
Returns the next von ne human - readable value.
Overrides the default procedure for iteration of numeric values.
Compute the next position.
Checks that the previous position is the same as the current position.
Compute the next position.
Checks to see if two points are within one another.
Add the given addend to the end.
Multiply the elements of an int by a power of two.
Raises an integer to a power of m.
Overrides the default procedure for iteration of numeric values.
get sld manager.
cast a long to a char bit array
Decomposes the given number of bytes into the specified number of bytes.
Print the string to the specified output stream.
Validate the exponent of a biased int.
Validate that the input exponent is greater than or equal to the input exponent.
Validate the biased exponent.
Validate if the input exponent is greater than or equal to the input exponent.
Moves the cursor to the next central point.
Return the next page of data.
Returns the next pixel ratio.
Returns a boolean array containing true or false if the specified number of elements is greater than the
Returns an array containing all of the factors of the given class.
Overrides the default procedure for iteration of numeric values.
Compute the next position.
Checks that the previous position is the same as the current position.
Waits until the specified application is available.
Set the configuration of the document.
Set the default configuration.
Initialize the EJB loader with the given parameters.
Adds a reverse geographic location to the parameters map.
Gets the host port pair.
Returns an attribute definition that matches the supplied uuid.
Evaluates an attribute definition uuid attribute filter expression and event attributes with the supplied list of
Sanitize the tag of a string.
Adds the given address as a parameter.
Returns a collection of the names in the order they appear in the query.
Get a collection of service instances.
Get all to by logged in user.
Returns the meta data for decimal parameters as a string.
change password for logged in user
Get info for all users
Returns the Gravatar for the given email address and size param.
Get the gravatar for a user
Populate from elastic search json object.
Searches for the field type and returns null if not found.
Create flow step.
Update flow step.
Get flow step by id.
Get flow step by step.
Get steps by flow.
Delete flow step.
Delete flow step force.
Populate table fields.
Close connection.
Override handle message method to provide more control over the messages.
Sets the connection to be closed if the current completable future is non - null.
Get the message list from the return value.
Get a list of personal inventory items.
Create table record.
delete a form container
Get a list of data for a form.
Retrieve data for a form and a field.
Get the most recent form data.
Obtain the lock form of the current thread.
Unlock form container.
Un lock form container.
Create a new form and add it to the container.
Converts a string to a list of role objects.
Create a form definition.
Update a form definition
Get form definition by id.
Get form definition by name.
Get all by logged in user.
Delete form definition
get storage key from long form id param and form field id param
Start a memcached client.
Shuts down the memcached client.
Parses the given string to a long and returns the result as a number. If the
convert document to pdf
Get the field values for a form from the cache.
Create flow step rule.
Create flow step rule exit rule.
Create a new flow step rule.
Update flow step rule.
Update flow step rule exit rule.
Update flow step rule.
Move flow step rule up.
Move flow step rule down.
Delete flow step rule delete entry.
Delete flow step rule exit.
Delete flow step view rule.
Initializes the session with the specified password and parameters.
Get all user queries
Get all roles
Get service ticket hex upper case.
Create field with text mask.
Create a text field
Create field with decimal values.
Create field with decimal slider parameters.
Create a new field in a table.
Update field text masked.
Update field text value
Update field decimal spinner.
Update field with specified parameters.
Update field.
Get field by name.
Get a form field listing by form name and logged in user.
Get a form field listing by form type id and logged in user.
Delete field.
force delete field.
Get meta data for table field.
update field value
Get or create index.
Create a flow.
Update a flow.
Get a flow by id.
Get a flow by name.
Delete a flow.
Delete a flow.
Update field value
Gets all the global field values.
Returns a map with the form definition id and title.
Decrypt data with password and seed parameters.
Close connection and clean.
Make a new request to the server and return a random string that will be sent to the
Get exception message with verbose level info.
create a new admin user.
Request an access token.
Get user profile info.
Execute json.
Execute form.
Get json response handler.
Returns true if the connection is valid.
Get the closeable http client.
Returns the path to the trust store.
Closes the connection to the database.
Get by job view.
Send a form to a flow.
Closes the session associated with this connection.
Process a message.
Send a message
Send message to remote endpoint.
Close the user session
Execute native SQL.
Request a license.
Create a new license request with a cipher text and the service ticket set to the specified value
Create field with plain text content.
Create field in text plain format.
Create new field in html format.
Create field for multi choice select many.
Create field for date time route.
Update field text plain
Update field text.
Update field date time and time.
Update field decimal plain.
Update field value
Create field value.
Get configuration by key.
Get all configuration.
Create an attachment object.
Get attachment by id.
Delete attachment.
Delete attachment force.
Parses the jar file.
Set the class loader for the given jar path.
Throws an exception if the input is not a xsd schema schema.
Obtains an exception if the input is not a xsd schema schema.
Obtains an exception if the key is not in the attributes map.
Gets the schema node of the given file.
Obtains an exception if the element is not a xsd schema.
Obtains an exception if the element is not a xsd schema.
Converts an object value to its corresponding reflected class.
Creates a cli interface from a class.
Creates a new cli using the specified options.
Parses command line arguments for a class.
Parses command line arguments using an option instance.
Returns a url builder for the given path.
Removes a view from the grid.
Gets the value of the point p.
Returns the value of a 3D point.
Returns the 3D value of a 3D point.
Returns the value of the cubic interpolation between the specified values.
Computes the Euclidean distance of the first 5 elements of a double.
Set the bounds of this vector.
Process a cloud trail event.
Process a cloud trail event.
Gets the account id of an event.
Applies the specified rule to the specified entity.
Gets the event serializer for a gzip input stream and a cloud trail log
Create a file with the given name.
Creates a file with the given name under the root folder.
Restores the state of this object to its original state.
Returns a new map implementation for this map.
Add an object to the queue.
Set the value of the property with the given name.
Gets array.
Get the next state.
Remove garbage collected objects from the queue.
Returns the value of the given type or throws a illegal argument exception if the type is not
Get the parameterized type of the given type.
Get the type variable for the given type.
Prints the stack trace of this throwable.
Prints the stack trace of this throwable.
Replaces an object with a stub.
This method is run by the framework once it has been started.
Sets the current thread s task for execution.
Checks whether the task was accepted.
Determines whether a task has rejected the given runtime exception.
Get the boolean indicating whether the task has started.
Is the task completed.
Stop task.
Gets the job implementation.
Adds a job to the post - processing queue. If the post - processing queue is
Convert blocking mode string to blocking mode.
Resolves the object for this stream.
Copy the contents of the given catalog to a new catalog.
Create a new catalog instance.
Loads a system catalog file.
Parse a catalog from a url.
Parses the pending catalog files.
Parse a catalog file.
Print a message about the unknown string at the specified index.
Resolve the entity name and entity id.
Resolves a URL to a string.
Resolve a system id.
Resolves a local URI.
Make this string absolute relative to the given system id.
Normalize the URI.
Converts an integer to a hex string and adds it to the result.
Adds a single delegate entry to this catalog.
Create a new soft value reference.
Fires a throwable to all listeners.
Add a throwable to the list
Creates a new list implementation.
Compares the execution time of this task to the execution time of the given task.
Get the value of this property as an object.
Gets the object at the given index.
Set an object at the specified index.
Remove objects from the queue.
Adds an entry of a type integer with the given name and number of arguments. The
Returns the int value of the type of the entry with the given name.
Get the number of arguments of a given type.
Returns the argument at the specified index or null if the argument index is out of bounds.
Set the context class loader for the specified thread.
Swaps the specified positions.
remove a node from the list
Cleans up the target for the given timeout. Returns null if the timeout is null.
Loads the class with the given name.
Preload a url.
Create a url with the given protocol.
Checks if handler entry has already been set for the current thread.
Get the current value of the current thread.
Returns a new implementation of this set.
Make a wrapper around a long counter.
Make a directional counter.
Determines whether or not the given namespace is in the extension namespace stack.
Check the notification status.
Get object instance by name and context.
Utility method to copy a string to a string buffer.
Splits the given string on the given delimiter and returns the array of strings after the specified
Joins an array of bytes with a null - terminated string.
Generate a string representation of an object.
Returns the value of the property as an object. If the property does not have a value
Creates a new hash map and sets the current time to the system time.
Gets the value associated with the specified key.
Returns the value associated with the specified key in this map.
Removes a key - value from this map.
Flushes the contents of this map to the pool.
Returns a list of the keys that are currently valid for the current time.
Set the resolution of the thread.
Returns the entry with the specified key in this map.
Gets children by tag name.
Get a unique child element by tag name.
Get optional child element with given tag name.
Returns the content of the given element. If the element is null return the default str.
Returns the unique child content of the element with the given tag name.
Retrieves the value of an optional child element with the given tag name.
Set the maximum size for the queue.
Set the blocking mode of the calling thread.
Sets the blocking mode of the calling thread. If the calling thread is interrupted the blocking mode
Execute a task wrapper. The wrapper will be rejected if the pool is full.
Resolves the specified system id with the specified resolver.
Resolves this URL using the specified resolver.
Resolves a command for a single context.
Appends a vector to another vector.
Returns a vector containing all system reverse of the given system id.
Perform reverse lookup of a system id. If the system id does not exist returns null.
Resolves all system entries of the given system id.
get information about a single catalog
Reads catalog information from the given input stream.
Connects to the file system.
Get the output stream.
Deletes a value f from b if f is not null and this is the same as
Returns the value if this is the base header and not the value if this is the base
Returns a snapshot of the key - value pairs.
Returns the logger for the current class or creates one if it doesn t exist yet.
Adds a collection of objects to a given buffer.
Get the class name.
Returns a string representation of this class.
Returns an iterator over the properties.
Returns the property group for the given basename.
Gets compatible constructor.
Create a copy of the given serializable object.
Derefer a value from an object to an expected value.
Initialize the JNDI registry.
Update jndi cache.
Set the key set in this map to the given value. If the key is not set
Returns a hash set containing all of the entries in this set and all of the super set
Remove a listener from the list of listeners.
Notifies all registered listeners that a property was added.
Notifies all registered listeners that a property has been removed.
Notifies all registered listeners that a property has changed.
Fires a property changed event to all registered listeners.
Make a prefixed property name.
Loads the properties from the specified reader into this object.
Loads the property with the specified class name.
Returns the property group at the given index.
Returns the boolean value of the entity resolved.
Returns the input source for the given system id or null if trace is enabled.
Resolves system i.
Resolves the classpath name.
Set the value of the current element as a text.
Normalizes a string.
Converts the passed in string to the passed in string and replaces the passed in string with
Decodes a string to a public id.
Replaces the old string with the new string.
Starts the timer.
Stop the thread and count how long it was running.
Stop a watch.
Compares the given object to this object.
Returns a hashcode of the specified array of bytes.
Generate a hashcode for an array.
Creates a new map and sets the min and max capacity of the map.
Sets the field value.
Return the next token from the stack.
Initialize the date formats.
Adds a vertex to the verticies if it does not already exist.
Set the root vertex of the graph.
Removes a vertex from this model.
Starts a depth first search of the graph starting at a given vertex using the given visitor
Visits all outgoing edges of the given vertex using a depth - first traversal.
Searches for a vertex by data and compare it with the provided data.
Returns an array of all cycles in the graph.
Normalize a string.
Parse xml element from string.
Parse string representation of element from input stream.
Parses the given input and returns the root element.
Create an element with the specified local part.
Resolves a qualified name for a given element.
Copy attributes from one element to another.
Returns true if the node has at least one child.
Returns an iterator that iterates over all the child elements of the given node.
Get the text content of a node.
Gets the child elements of the given node with the given name.
Gets the parent element of the given node.
Adds a resource to the waiting list.
Read a single catalog from a file.
Get the local host address.
Set the system property class value.
Display class info.
Provide a human readable string for the given class.
Strip the package name from a classname.
Get the package name of a class.
Loads the class and checks if the class is non - null. If not an exception
Returns the corresponding primitive wrapper for the given primitive type.
Returns all interfaces from the given class including those inherited from the super - classes.
Returns all of the interfaces implemented by this class and any of its superclasses.
Checks if is primitive wrapper.
Instantiates an instance of the class specified by the property name. The default class name is
Returns an attribute getter for a class.
Returns the getter method for an attribute on a class.
Convert a class name to a full class name.
Returns the value of the property with the specified name or the default value if the property is
Gets the filenames for a given property name.
Remove weak objects from the queue.
Returns an iterator over this set.
Create a url.
Gets the element at the current position in the set.
Adds listener for property changes.
Remove a listener for property changes.
Returns true if the given string is null or empty.
Finds an editor for a class with a given name.
Registers an editor with the context manager.
Converts a string value to an object.
Get the class loader for the specified thread.
Returns the application deadlock exception or null if the exception is not an application deadlock.
Add a timeout to the queue.
Waits until the thread is cancelled or the timeout period has expired.
Create a context with the specified name.
Looks up an object by its name.
Checks if an object is assignable from the current context. If not an exception is
Append the class name and interfaces to the given string buffer.
Returns the allowed transition for the given name.
Read properties from the properties file.
Get the verb of the current process. If the verb is not set the default verb is
Checks to see if the current string is one of the properties strings defined in the properties
Gets a list of files from the system catalog.
Gets all catalog files.
Return whether or not the current property matches the prefer.
Return true if the catalog is the same as the current system catalog.
Resolves a single entity.
Resolve the href value and base to a source.
Makes the given URI absolute.
Resolves class for stream v.
Invokes the setter for the given string value.
Gets the local name of an element.
Gets the namespace uri of the given node with the given prefix. If the node is
Returns the uri of the namespace of the given element.
Returns a list containing all the elements of the given enumeration.
Get input stream from filename.
Load properties from a properties file.
Reads properties from the properties file.
Adds the edge to the graph.
Adds an edge to the graph with the specified cost.
Adds an incoming edge to the graph with the given cost.
Returns true if the given edge is in the outgoing and the given edge is in the incoming
Remove the edge from the graph.
Returns the edge with the given dest vertex.
Finds an edge in the graph. Returns null if the edge is not in the graph
Returns the number of edges between this vertex and dest.
A utility method to write jar info to a jar file.
Returns true if the current index has the next element.
Sends an event to the worker.
Install the jvm type provider.
Performs the given action on a platform thread.
Gets all events of a given type.
strict many to one
strict one to one.
Use this method instead of the get method because the use of this method is very expensive.
Verifies that a command is being executed.
Returns the total degree of all words in this model.
Create a hash map for the superclass of a class.
Override inform to use the standard character set.
Checks if the data source is valid.
Returns a list of the elements of the given class.
Connect to database.
Run in the sql.
Execute a query that returns a single string.
Returns a subset of the objects in the table t.
Perform an SQL upgrade on the database.
Backup the current table to a new file.
Restore a table to a new csv file.
Set the empty text.
Dumps the contents of a table to a csv file.
Unescapes a string so that it can be used in a CSV file.
Get the values of a csv - string.
Create a map from a list of string to a map of string to string.
Convert string map to csv string.
Joins a list of strings to a single one.
Joins a list of strings to a single one.
Create a database model from an index file.
Prints the contents of the database to the specified print writer.
Overrides the id field of the entity if it exists.
Get the base dao model for the given entity.
Get the type of the binding.
Import data from a csv - file.
Backup all tables to a csv file.
Restore all tables from a csv file.
Writes the contents of the str to an index file.
Creates a query using the supplied entity manager.
Execute a typed query on the given entity manager returning the result as a typed query result.
Render the options as a string.
Delete the record with the given id.
Saves the specified object in the database.
Update the object in the table. Returns the number of rows updated.
Add a constraint to the query that requires a particular value to be in an array.
Add a subquery to the query and return it.
Returns the next active stack.
Gets the empty intention stack.
Adds a plan given the set of bindings.
Selects a plan for the given policy.
Selects a random plan from the current set of variables.
Compute the set of variables to be assigned to the current result at the index of the current
Returns the specified result at the specified index.
Returns a copy of the parents array.
Gets the children of this node.
Grows the specified byte array by the specified increment.
Create a new logger with the specified name and level.
Start a new step.
Set the data to a byte array.
Pause for user input.
Inits the selection pools.
Initialize intention selection threads.
Start the selection threads.
Shuts down all the current selection threads.
Register jill extension.
Resets all variables to their default state.
Loads an agent.
Processes the current plan for a given type.
Create a number of agents in the catalog.
Load class.
Attempts to load the extension of the given class.
Returns true if the passed in objects have the same name as the passed in object.
usage string.
Parse the command line arguments.
Parse an argument with an option.
Evaluates a query using the specified agent id.
Returns the object at the specified index. Returns null if the index is out of bounds.
Find the object with the given name.
Pushes an object onto the stack.
Gets the object at the specified index.
Adds the specified object to the end of the stack.
Removes an object from the queue and returns it. If the queue is empty it returns
Returns the type of the given object.
Checks if the given query match the given belief.
The main entry point for this tool.
Converts a string to a byte array.
Post a goal to the pool.
Send a goal to the agent
Send a message to all registered agents.
Returns a copy of this array.
Create a new belief set.
Adds a new belief.
Evaluates a string query.
Suspend the agent.
Returns the field with the specified name.
Registers neighbours for the specified belief base.
Builds a random name.
Remove all idle items.
Check if the current agent execution stack is valid.
Removes all active agents from the active set.
Determines whether the current agent should manage a goal.
Shuts down the pool.
Sets the agent to idle.
Moves the cursor to the given pin.
Initialize boolean.
Wait until idle.
Finishes the current activity.
Returns true if all the selector pools are idle.
Returns the poolid of the specified agent
Assigns the current expression to the given value. If the current expression is null then the
Sets the expression.
Joins the properties of the given attribute recursively.
Recursive method to join properties recursively.
Returns the first join that matches the specified property. If no such join exists the property is
Returns true if the end of the operation has been reached.
Get upload stream from http request
Override handle method to handle the http request.
Returns whether the parameter with the given name is equal to the given value.
Returns the value of the parameter with the given name.
Parse the parameters of the given expression.
Configures the transaction manager with the given configuration.
Gets the file for the given artifact name and filename.
Write artifact to file.
Overrides the post process method to add the POJO to the class.
Gets the constructor of the specified implementation class.
Builds a string representation of the descriptor.
Gets the interface method of the given method.
If the field is of a list type returns the corresponding list type. Otherwise returns the class
Get the dependency value of the host managed class and the type.
Saves the current state of the model.
Set the default links with the given rel.
Set the default link template for the given rel and href.
Add links to the HTTP response without content type.
Add links to templates based on rel and href.
links defined in json node
parse link object and add links to rel map
Returns the value in the map with the given key creating a new map if it doesn t
Handles the capabilities of the request.
Returns whether or not the given method is allowed.
Registers all processor instances in the registry.
Registers an instance factory for a given type.
Register a processor.
Register class processor.
Adds an argument to the list of arguments.
Method to get target file list
Converts the object to an XML string.
Initialize the context with the template and the arguments and the target files.
Returns true if the given file has a reference to the given template file.
Creates a parameterized template model from a reader.
Creates a parameterized template model from a file.
Sets the request path.
Get an observable at a given index.
Create a new instance scope with the given string as the value.
Set the value of a field.
Add a capture appender to the attachable logger.
Remove the appender with the specified name from the logger.
Clear the appenders of the specified logger with the specified appender name.
Parse the model.
Resolves all the proxies.
Get the files in the given directory.
Find all files in a given directory and set the error flag.
Checks if the model is fully resolved.
Find all e in a set.
Set the model dirs.
Sets the file extensions.
Set model resources.
Reads the next record.
Set the value of a string parameter.
Wraps the given string as an instance of the given type and returns a new instance
Merge a template with the current file.
Get the model dir.
get template dir.
Writes a document to the HTTP response.
start the application
Configures the given web window.
Print the query as a print dialog. If the query is not printable the dialog is
Writes the contents of an input stream to an output stream.
Override this method to override the proxy s invoke method.
Attaches a response to a servlet request.
Detaches this request from its context.
Returns the cookies attached to this response.
Write the current state of the HTTP request to the log.
Returns the invocation meters.
Configures event stream with parameters from config.
Set the remote host for this stream.
Get a parameter for a given type.
Remove prefix from path.
Get the common dir between the two directories.
Make a relative path relative to a base path.
Converts a relative path to a absolute path and returns the result as a file.
Gets the depth of the given file.
Dumps the error log of the given throwable.
Send a JSON object out to the client.
Adds a parameterized template model.
Adds a list of parameterized templates to the list of parameterized templates.
Initializes the model.
Finds all parameterized templates that have a reference to the given file.
Sets whether save button should be visible or not.
Delete the question.
Deletes the element.
Create an instance of the class t.
Returns an array containing all the files in the model.
Get a copy of the summary.
Get a single string row for a given directory.
Get the sub summary row of a file.
Create an instance of an interface.
Get setup class.
Get the model dirs.
Returns a list of resources that can be parsed by the parser.
Set the collection of target entity to the given collection of target entity types.
Loads an xml document from a stream.
Displays an error notification.
Returns a boolean indicating whether the given formal parameter is an object.
Read the content of the http request and parse it into an array of objects.
Read json object from input stream.
Extracts the parameter of a cell.
Returns the hints for this query.
Checks if the request contains a header x.
Returns true if the request contains an android user agent.
Subscribes to the endpoint for the given event.
Gets all properties annotated with given annotation.
Retrieves annotation on field.
Logs the given message with the given arguments.
Do a whois lookup for a resource.
Determines whether the specified string has a parser for the specified whois host.
Get the managed class for the requested interface.
Get a method from a managed class.
Checks if the event contains an exception. If so cell is the right cell. If
Checks if the event string contains the provided parameters. If not the event string is logged
Serializes the http servlet response to a java. io. Object.
Get cookie value by it s name.
Add a cookie with the specified name and value.
Remove cookie with given name.
Returns an iterator over the cookies in the collection.
Get the target file list producer.
Adds a field to the constant pool.
Compile the class.
Verifies whether the tokened image is valid for the given token.
Returns the string value of the given file object or null if the file object is null.
Make a uri with a trailing slash.
Get the http servlet request.
Invokes the managed method of the given proxy object and logs if the method is transactional.
Execute a mutable transaction.
Executes a read only transaction.
Gets all files matching the supplied filter.
Gets the last file in the directory matching the supplied filter.
Get the concrete config.
Returns true if the request path starts with the specified path component.
Get a list of artifact factory for a given model type.
Get the session for a particular instance key.
Serializes the http response to a java. io. servlet response object.
Reads meta data from the file specified by the uri.
Override handleRequest in order to perform processing specific to this interceptor.
Tears down the statement.
This method is called when the event stream is being destroyed.
Enables upload and delete methods depending on the available resources.
Uploads the file to the server.
Displays a confirm dialog and deletes the specified string.
Extracts column parameters from a matrix.
Gets the argument names.
Adds a period of time to the pool.
Add a timeout task.
override config method
Return the next file in the cache.
Configure application configuration.
Displays a simple program that prints out the text and then reads it to System. out
Prints the stopped instance to the console.
Create a new instance of the ria component based on the command line arguments.
Register a shutdown hook.
Triggers a notification.
Triggers the endpoint and sends an event to the bus.
Inserts a new row and replaces it with the fit result.
Gets the counts of all the results of the query.
Set current score of the feature.
Returns the variants of this string.
Set the variants of this object.
Returns the string value of the question.
setter for question - sets question type - sets
Returns token value of this object.
Returns dep label of current token
setter for dep label - sets String value
Returns semantic type string value of this token.
setter for semantic type - sets semantic type of the string value.
indexed getter for sections - gets string - array of sections indexed by str.
setter for sections - sets
indexed getter for sections - gets an indexed value -
indexed setter for sections - sets an indexed value -
Gets uri.
Sets uri values for the given concept type to the given string list.
Gets the types value.
Set the types value.
Returns the annotation value of the given target type.
Sets the annotation of the target type of the answer object.
Returns rank of string value.
Set rank of the string value.
Returns string value of query string.
Sets the query string value.
Gets candidate answers.
Set candidate answers.
indexed getter for candidate answers - gets an indexed value -
indexed setter for candidate answers - sets an indexed value -
Returns the string value corresponding to the given search string.
Sets the string value of the search field.
Gets value of current property. Returns empty value if current property is not hit.
Set hit list.
indexed getter for search - gets an indexed value -
indexed setter for list - sets an indexed value -
Returns abstract query value.
Sets the abstract query value.
Returns the string value corresponding to the search id.
Sets the value of the search id property.
setter for id - sets String
Returns offset in begin section.
Set offset in begin section.
Returns offset in end section.
Set offset in end section.
Returns the string value of the current section.
Sets the value of the given section to the given string value.
Returns the end of the section as a string.
setter for end section - sets string value of current passage section.
Returns the aspect ratio of this passage as a string.
Sets the label label of the given passage.
Returns triple value of current object.
Sets the value of the triple property.
Returns the source relation of this passage from the given relation.
Setter for source relation.
Returns the subject of this triple as a string.
Sets the subject of the triple.
Returns the string value of the predicate.
Sets the value of the predicate field of the triple with the given string value.
Returns whether this is obj uri.
Sets whether this is obj uri.
Returns operator value for this query concept.
setter for operator - sets operator
Gets operator args.
setter for operator args - sets operator args
Returns the concept value of this context.
Returns the current score of the concept.
Returns the text value of the current occurrence.
Set the text value of the candidate answer occurrence.
Returns the string id of the current concept.
Set string id - sets
Returns the string value of the current concept s name.
Returns abbreviated string value.
Sets abbreviated string value.
Set the value of the concept property.
Returns the variants of this answer.
Set the variants of this answer.
Returns a list of named entity types.
Set named entity types.
Returns the string value of the concept type.
Set the concept type value.
Returns the answer occurrences of this variant.
Set the occurrences of this variant.
Returns the concepts of the current query.
setter for concepts - sets concepts - sets
Returns the original text value of the current context.
Set the original text value.
getter for args - gets A list of string arguments.
setter for args - sets
Returns the string value of the semantic role label.
Sets the label of the semantic role.
Returns the index of the next clear bit.
Sets the value of the specified index to true.
Frees the specified buffer. If the buffer is null this is a no - op.
Returns a new cache value with the specified directory file name and cache block size.
Rehash an array with a new size.
Generates a hel string with all the notations of this monomer.
Check whether the current object is brackets.
Add the details of the given string to the current context.
Returns a string representation of this object.
Adds an element to the group.
Check if the given string is polymer id
Check for polymerid connection
Checks if the string d contains a connection group and hydrogen bonds.
Check group id boolean.
Checks if the given string matches a regular expression.
Returns true if the section is peptide or rna.
Convert the container value to a JSON string.
Get a simple polymer by it s id.
Returns the current grouping notation or null.
Returns a string representation of this object including the polymer connection grouping and annotation objects.
Create a string with all polymers with annotation and polymer id as the last one
Builds a HELL connection and returns the HELL connection.
Returns a string containing all the groupings in the order they appear in the line.
Returns the hel string of the annotation.
Get all polymer and grouping.
Returns the polymer with the given id.
Sets the polymer elements.
Converts a string to another.
Set annotation value. If annotation value is null annotation value will be set instead.
Set the count of the number of times the specified string was found. If the string was
Returns the monomer notation of the specified string.
Returns the monomer notation of a group element.
Decide which entity the specified string should be.
Returns the current value as a list of double values.
Parse string test and throw exception if test string is not a substring of input string.
Set the rna of the given string.
Declares the ambiguity of the specified string.
Get the statistics for this job.
Create a hash set from a collection of edges.
Creates a new graph from the given nodes and the given edges.
Initializes the internal list of paths.
Returns a list of nodes sorted by reachability.
Subscribes to a method.
Send a subscribe to the server and return the number of messages matched by the specified pattern.
Unregisters a string with the specified pattern.
get result from async call or get result from sync call or get result from async call.
Synchronously sends out a message to the external process.
Retrieves a boolean from the queue. If the queue is full the poll will block until
Send a shutdown atom to the external server.
Wraps t for local handling
Unlock a run state.
Create a worker thread.
Adds a single unit to the worker set.
Registers a worker for the current thread. If the current thread is interrupted the worker
Joins a worker thread and removes it from the work queue.
Waits for the specified work queue to be submitted to the worker thread.
Runs a worker on the specified work queue.
Waits for the specified work queue to become available.
Joins and waits a number of threads to become available.
Completes a task for a specific completer.
Submit a task to the cluster.
Create a common thread pool for both the worker thread and the exception handler.
Returns the status of this future in the specified time unit.
Builds a string from a block of code.
Get statistics from the worker queue.
Convenient factory method for creating an array from an array.
Reverse the order of the elements in this list.
Applies the supplied predicate to all elements of the supplied collection and returns true if any element
Applies the supplied f to the left side of the supplied iterable.
Applies the supplied function to the value of the right side of the supplied list.
Pushes a task onto the thread pool.
Converts non - null and non - null values to non - null values.
Create a new value from the given keys and values.
Returns an empty map with the key as the first element and the value as the second element
Retrieves the keys and values of an iterable using the provided equality and iterable.
Create a new key value pair from the keys and values.
Returns a set view of this map s key.
Normalize resource name.
Marshals the value as a string.
Returns the characters in the specified range of the specified sequence.
Searches for the elements of the given list using binary search.
Returns a new binary search for the elements of the given list using the given comparator for the
Create a future that will send a message to the e - mail.
Bind the route binding handler.
Bind event handler.
Returns whether the tag has the specified role or not.
Gets the value of the given long as an int.
Remove duplicate strings from the given array.
Create a string that is equivalent to the given value using the string pool. percent + null
Perform the actual operation.
login a user with a password
Retrieves the user with the specified login session key.
Checks a password against a plain password.
Saves the member in a cookie.
Get the login key.
Create new cookie instance from uuid.
forward to the path specified in the context.
Returns the value of the given parameter from the request. If the parameter is not set the
Log a formatted message at debug level.
Get the class name and method name of the current caller at the given level.
Converts an array of characters to a simple byte array.
Converts a char sequence to a byte array.
Converts an array of bytes to a simple char array.
Converts a char sequence to a ascii byte array.
Lookup the locale data for the given locale code.
Calculates a future that is future in the given amount of seconds.
Crop the image to the specified location.
Schedules an invocation for the specified number of milliseconds.
Executes an invocation in a thread.
Get the rest operations.
render the error of the ajax message
Method to render the forbidden message
Processes the given view string.
Parse the current action path from the url string.
Render the data tables.
Render empty data tables.
Sets the list of items in the combo box.
Sends the redirect to the specified context.
Returns a list containing all of the elements in the given injector.
Returns the string representation of the current method.
Compact memory.
Propagates the given metrics to the local metrics collection. If the metrics collection does not
Encode string.
Reads from the input stream and writes to the output stream.
Copies the given number of bytes from the given input stream to the given output stream
Copies all data from the input stream to the output writer using the default encoding.
Copy from a reader to a writer.
Copies the specified number of characters from the specified reader to the specified writer.
Copies all data from the reader to the output stream using the default encoding.
Writes the contents of the reader to the output stream using the specified encoding.
Compares two input streams for equality.
Compares two reader.
Wraps the current object s io with the given io.
Returns the SQL node corresponding to the given string group name and sql id.
Converts a string to an instance of the specified class.
Unzip a zip file to a destination directory with a list of patterns.
Retrieve a permission fragment from the fragment manager.
Called when the resume button is pressed.
Register a core value type.
Returns true if the given value matches the given regular expression.
Returns true if value is mobile.
Returns true if the given string is a phone number.
Returns true if the string value is a week day boolean.
Returns true if the given string is an URL.
Apply the pipeline.
Converts string value to base64 using UTF - 8 encoding.
Decode string to bytes using UTF - 8 encoding.
Converts a hex string to a byte array.
Read properties from input stream
Reads content from input stream and returns result as string. Closes the stream when done
Reads the content of a file and returns it as a string.
Writes the given byte array to the given file.
Copies all files from source to target. If target does not exist it will be
Serializes document to string.
get a document from a file
get document from xml string
get document from input stream
Validate signature of a document.
Sign a document.
Checks if is cache safe.
Returns true if the class is an array and its component type is primitive.
Returns true if the given class is a primitive wrapper array.
Resolves the given primitive class if necessary.
Determines whether the given rhs type is assignable from the given type.
Returns whether the given object value is assignable to the given type.
Gets all interfaces for the given object.
Returns all interfaces for the class as set.
Write to a temp file
Returns a hash map of the variables associated with the given URI.
Add a message for a specific permission.
Register the specified implementation as a module with the specified extension point.
Returns the object that corresponds to the given type.
Returns the number of bits of the given type.
Tries to convert object to the specified type. Returns null if object cannot be converted.
Converts a user defined value to a user defined type.
Returns the value of the specified parameter of the specified type or null if the parameter is not
Add a cookie to the http servlet request.
Add a named session attribute to the http session.
Inits the data source.
Adds a parameter to the query.
Sets the value of the specified field in the specified object to the specified value.
Show the permission dialog using the appropriate fragment manager.
Returns true if all the values of the array are granted.
Check if any of the values is denied in the result map.
Retrieves a list of records matching the criteria specified by the sql select statement.
Find the first record in the database.
Checks if is new.
Determines whether the given exception method declared an exception of the given type is assignable from
Walks through the queue looking for the soft value and removes it from the queue.
Put a key value pair into the cache.
Returns true if the given string matches the given pattern.
Read command line arguments.
Returns the protobuf entity.
Returns true if the entity is a protobuf entity.
Get all fields of a class with a protobuf attribute.
Returns a protobuf field getter.
Returns the corresponding String setter for a protobuf field.
Returns the object mapper for this thread.
Returns the JSON factory associated with the current thread.
Convert object to json string
Set the borders of the rectangle.
Creates a new user record.
Makes a deep copy of this object to a target object with the supplied set of attributes
Copy out the supplied attributes to the supplied object.
Create a frame with the default settings.
Saves the current token in the persistent storage.
Obtain a new token from the access token and secret.
Returns the default class loader.
Get a resource from the class loader or the current thread.
Get resource as stream.
get class input stream
Initialize a uri object from another uri object.
Set the scheme attribute of the uri object.
Initializes the index and index of the first character of the specified path spec.
Set the scheme.
Set the userinfo attribute of the URL object.
Set the host field of the uri.
Set the port.
Appends the specified path to the current path.
Set the query string.
Set the fragment.
Return the uri part of this URI object.
Create a prepared statement by iterator.
Initialize this object.
get the muffin of a string
set the value of a muffin
Returns clipboard contents. Returns null if clipboard does not exist.
Set clipboard contents.
Load all the services of the given type.
Set service parameters in operation.
Get the service parameters for an operation.
Returns a parmetrized operation by id.
Find a service by its class.
Parse query response.
Returns an iterator over the elements in this buffer.
get the xml encoding of the given string
Returns a connection proxy for the given connection.
Returns authorization for a given URL.
Visits all classes and interfaces in a package declaration.
Visits all class declaration parameters field methods and nested types.
Execute executable declaration.
Gets a configuration option for a given string and a map of properties.
Returns a declaration that contains all the supplied modifiers.
Return a filter that matches the specified type.
Filter this declaration according to the supplied filter.
Filter this declaration by this one or the other.
Get the current value as a map.
Make the given constructor accessible.
Performs a query on the object.
Replace slash with hyphen.
Converts a byte array to a hex string.
Gets the indexes for a given attribute.
Parse named sql string.
Convert collection of non protobufs to collection of protobufs.
Set a protobuf field value.
Sets the field value using a protobuf attribute.
Does this file pass for this file?
Create a proxy instance for the given result set.
Creates a map from the expected labels to the index of the corresponding value.
Gets the component type of a generic superclass.
Remove the head of the queue.
Checks if any of the objects in the queue are polled. If any of the
Get declared field.
Returns all methods declared in the given class or any of its super classes recursively.
Gets the declared method.
Returns all methods annotated with given annotation recursively.
Returns a list of all constructors of the given class that are annotated with the given annotation type
Dumps a single byte to the system output stream.
Returns the index of the first non - lower case character in the given string or - 1
Removes all chars from the specified string.
suppress warnings on string.
Initialize audit.
Initialize message queue.
Initialize pw validator.
Initialize pw authenticator.
Resolves the locale code.
Lookup the locale info for the given locale code.
Create a statement proxy for java. sql. statement.
Clears all the elements of this queue.
Removes the element at the end of the stack and returns it. If the stack is
Get input stream.
Parse the command line arguments.
Returns true if the specified tokens match the specified patterns.
Moves the cursor to the specified positions.
Returns true if this rectangle encloses the specified rectangle.
Returns true if the given rectangle contains the given point.
Calculates the intersection between this set and another set.
Computes the rectangular union of this object with the specified object.
Returns a new rectangular version of this object where the x values are replaced by the specified
Replaces the y values of this object with the y values of the given object.
Gets the square component of the specified column.
Gets the absolute value of a specific row.
Returns the cell bounds relative to the specified location.
Calculates the columns.
Calculates the number of rows in the table.
Unwraps a throwable.
The main entry point for the command line tool.
Updates the wam code view.
Copy and resize the code buffer.
Initializes the instance.
Create a new copy of this query parameter with the specified excluded elements.
Adds the specified tree as a child of this node.
Clears all children of this node.
Internal method to get the next element.
Adds instructions to this node.
Adds instructions for this wam to the parent wam.
Fires a property change event for this node.
Registers the given work panel.
Update the flags of the present component.
Create a type instance.
Returns true if the given term is a variable or a bound.
Returns a list of instructions that can be optimized.
Compares two collections.
Invoked by the framework to dispatch a request to a servlet.
start tag int.
Render button.
Resets the machine to its initial state.
This method initialises the learning.
Get the value associated with the specified object key.
Returns the index of the given object.
Set the value at the given index.
Removes the specified object from this set.
Removes the element at the specified index from this set.
Returns true if the given property is present.
Set a property on an object.
Gets the value of a specific property of an object.
Determines whether the given primitive type is assignable from the given wrapper type.
Initializes the object Visit object.
Declares the decision tree for the given state.
Initializes the lookups for the given decision tree node.
Converts a term query and a term statement into a list of variables.
Internal implementation of unify.
Helper method to compile a query.
Finds the maximum number of arguments in the given clause.
Allocates the permanent query registers for the given term clause and var names.
Gathers the position and occurrence information from the given clause.
Display a compiled term predicate.
Display a compiled query.
Returns a string of the specified length from the specified buffer.
Gets the string value.
Set a string value.
Reads a term from the content handler
Checks if class exists and is boolean.
Returns true if the class is a sub type of the specified class.
Returns true if the given parent is a sub type of the given child.
Returns true if the given class is a sub type of the given class.
Returns the class for the given class name.
Create a new instance of a class.
Create a new instance of the class.
Calls a method overriding illegal access on an object.
Calls a method on an object.
Returns the result of a method invocation.
Get a constructor from a class.
Finds a matching set for a given property name.
Gets the transactional queue.
Gets the transactional result of a get operation on a given queue and collection of elements.
Gets the type of a given object.
Resets the state of the model.
Create an instance of type.
Add a supported time zone.
Add a time zone to the set of supported dimensions.
Adds a new dimension to the schema.
Returns a set of free variables for the given query
Returns the set of free variables for a given term which are not anonymous variables.
Compares two objects according to a heuristic search node.
Writes an object to a file.
Reads a string from the given input stream.
Returns a new search node.
Generate a string representation of the current string by adding the given amount to the current string.
Returns true if the current term is the last body term.
Choose the best property to decide based on the output property and the input properties.
Factory method for creating a fail - safe permiller with the given name and args.
Returns a new variable for the given string.
Methode execute with error handling.
Returns the element at the specified index in this list.
Set the texture to use. If the object is a gradient it will be set to a
Override this method to paint immediately
Create a buffered image of the specified type.
Create a binary image of the specified number of bits.
Create a direct color model or a color model for the specified pixel.
Set the search algorithm at the head of the queue.
Main entry point for the parser engine.
Returns a copy of this clause.
Converts a list of terms into a list of terms.
Gets theJSON or a new instance of theBoundedTask. TheBoundedTask
Reads a variable declaration.
Reads a literal integer value.
Parses a floating point literal.
Converts a string literal to a string.
Returns a directive either the stack trace or the user provided.
interns an operator in the symbol table. The caller is responsible for ensuring that the
Initializes the built ins.
Get the next token of the specified kind from the source.
Returns true if the next token in the source is of the given type ; false otherwise.
Bind the service.
Rollback the transaction.
Adds all elements from the iterator to the target collection.
Converts the time of day to milliseconds.
Convert a long ticks to years
Sets the hours attribute of the ticks to the specified value.
Converts a ticks value to a number of minutes.
Converts a ticks in milliseconds to a number of seconds
Returns the amount of times in the specified year from the current year to the specified year.
Returns the amount of time in the last month of the specified year or the start of the
Convert a ticks set to a date
Returns the number of milliseconds since the epoch for the given year.
Reads the next byte from the source.
Returns the entry for the given key in the hash table. Returns null if the key is
Returns the specified entry in the cuckoo cache.
Recompute the inability with a new rehash.
Called when an action is performed on this widget.
Set the next available state.
Set the status of the previous available state.
Set whether or not the animation is finished.
Gets an instance of the wam library for the specified symbol table.
Returns an iterator over the variables in this sequence.
Get the expected value of an array of doubles.
Returns a new array with the probabilities of the given counts.
Sets the year month day and year to the same values.
This method is used to perform a forward.
Create a url object from a string representation.
Get the request info as a string.
Get the headers as a string.
Gets the cookies associated with the current request.
Gets all the parameters from the request as a HTML string.
Return the current request scope as a string.
Retrieves the content of the current page scope as a string.
Return the current session scope as a string.
Retrieves the application scope as a string.
Gets the user principal.
start tag int.
Generates an HTML - formatted string representation of the properties.
Set current screen state
Walk the path of the given term.
Compares two objects according to a heuristic search node.
Updates the properties of this property with the given set of registers.
Notifies all registered listeners of a property change event.
Leave the specified clause.
Returns true if the context is the top level context.
Sets the arguments for this sub term.
Returns the fixity of the model.
Returns true if this node is an infix node.
Compares this object to the specified object.
Fires a property change event.
Register work flow controller.
Returns an enum attribute factory for the given class.
Create a component factory for a class.
Gets the storage cell associated with this cell.
Returns true if this variable is a bound variable.
Sets the attribute at the given index to the given value. If the index exceeds the current
Sets the attribute of a row.
Returns the attribute at the specified index or null if the index is out of range.
Returns the attribute at the specified row index or null if the row index is out of bounds
Inserts an attribute set into a cell.
Create an instance of the type with the given name and time only.
Create a new instance of a string pattern type.
Returns whether this character sequence is an instance of the given character sequence.
Creates a context object for the current term.
Updates the registers for the current context with the given layout.
Returns the current value as a string.
Returns the path to the goal of the current node.
Caches a single block of data.
Get properties by resource name.
Set the hertz parameter.
Read a byte array from the remote.
Skips the specified number of bytes from the source.
gather disjunctions.
Read an int from a byte array.
Write an int to a byte array.
Write a 24 bit integer to a byte array.
Extracts a 24 bit integer from a byte array.
Read a short from the byte array at the given offset.
Write short to byte array.
Get the child state for the given operator.
Returns an iterator that iterates over all the operators in the tree.
Gets the id.
Get the value of the parameter
Set the attribute value.
Convert a string value to an array.
Convert a string array to a list.
Converts a string to camel case.
Builds the list of handlers and writes the result to the given buffer.
Resolves a call point.
Adds a new wam to the symbol table.
Returns true if this is a sub category of the specified component.
Gets the id.
Get the value at level.
Get the last value in the path
Writes an object out to the output stream.
Reads an object from the input stream.
Computes the h - value of the given search node.
Returns the mod of the given number of elements in the given bucket.
Adds a user readable error message.
Writes a string to the output.
Classifies the attributes of a state.
Compares two elements according to the partial ordering evaluation.
Return a distributed iterator over this node.
Get the log base of value
Get the log base 2 value of an integer.
Returns the log base10 value of a given value.
Returns the log base10 value of a given value.
Returns the log base10 of a long value.
Returns the log base10 value of a long value.
Gets the character count for int32.
Counts the number of characters in a 64 - bit long value.
Get character count decimal.
Set the head of the list of instructions.
emmit the code of a call.
Set the current screen.
Evaluates the function at the given value
Returns an iterator that iterates over the specified key.
Create the array properties.
Set the hertz parameter.
Evaluates the type of the first argument.
Finds properties.
Gets properties using system property.
Get properties using classpath.
Gets the properties using the default settings.
Apply the transform if it is not in the head. If it is not in the head
Gets the current value of this term.
Sets the substitution to the term.
Returns a new priority queue that contains all the nodes of the given type.
Close the GZIP connection and release any resources associated with it.
Append a logging event to this handler.
Fire a new event to the JDCP server.
Initialize the printing tables.
Commits the pending operations.
Rollback the transaction associated with the current node.
Writes an operation to the queue.
Adds an operation to the cache if it doesn t exist already.
Acquires a global write lock.
Releases the global write lock.
Enlist the session associated with the current transaction session.
Override this method to enter a new rule set under a particular scope node.
Inserts the specified element into this queue waiting up to the specified wait time for space to
Retrieves the next element from the queue waiting if necessary up to the specified wait time for
Puts the element into the cache. If an interrupted exception occurs it is passed through un
Returns the next object from the source.
Returns the value of a property as boolean.
Get the value of a property as an integer value.
Gets the value of a property as long value.
Create a new scope node with the given name and arguments.
Sets the visitor to accept all the variables and rule sets.
Backtrack a tree node by removing all successor nodes that are not traversable.
Gets the code for a given call point.
Execute and extract bindings.
Decodes the heap.
Captures the current state of the channel.
Restore an object to its original state.
Get a attribute as an object or null if the attribute is not present.
Set an attribute value.
Get a collection of all field names for the class
Executes the mojo.
Inserts the specified element into this queue.
Returns a new search node for the specified state.
Create a new priority queue.
Walks through a term using a depth first search and a visitor.
Gets the term walker which is a predicate whose result is a member of a unary predicate
Walks through a named term starting from the given visitor. The named term is named
Walk backwards from a unary predicate starting from the given visitor.
Gives you a post - fix search implementation for the keywords being visited by the given visitor
Get properties from input stream
Reads properties from a file.
Get properties from url
Get file properties
Computes the size of the grid.
Initialize the font metrics
Adds a listener for property change events.
add listener for property change events
Remove listener for property change events
Fires a property change event for any registered property.
Create an instance of type double.
Fade the named timer to the specified target color.
Shows the horizontal bar.
Shows the left bar.
Shows the right bar.
Sanitize radio controls.
Waits for the condition to be interrupted.
Waits for the condition to be interrupted.
Executes the mojo.
Appends the classpath elements to the command line.
Create an instance of a date - time type.
Prints the contents of the specified string to the System. out.
Initialize the console reader.
Evaluates the query if the sentence is a query.
Evaluates the given query.
Get multi type data.
Gets the multi type data for a given byte.
Gets the multi type data for a given character.
get multi type data by short
get multi type data at index
get multi type data long value
get multi type data for float
get multi type data double d
get multi type data from string
get multi type data for an object
Sets an attribute of the given name to the given object in the page context.
Clears up to the specified key.
Expands the specified key.
Internal insert method.
Compares two objects by their cost.
Parses the given terms for operators.
Get the operators matching the fixity name.
Check and resolve to fixity.
Returns a new node after the given successor.
Get the errors in a string.
Gets options in force.
Get the usage string for this command line parser.
Adds key value pairs to properties.
Adds options to the parsed properties.
Adds an option to the options list.
Checks if the argument is valid and if so adds the matched argument to the command line
Compares the iterators according to the mapping function.
Returns an enumeration of options.
Gets the options.
Set the stemmer of the selected tag.
Returns the actual stemmer.
Retrieve the actual stemmer of a word
The entry point when the program is run as an instance of the pt class.
Create an instance of a type.
Resets the state of the model.
Trace an environment frame.
Generate a trace of the current data frame.
Calls a function on a list of arguments.
Returns the next frame in the stack.
Returns true if the backtrack flag was set false otherwise.
Record the trailing address at the given position.
Converts the positions of the left and right of the trail.
Remove the missing trail at the current index.
Converts int values to boolean values.
Dereferences a const value and returns true if the conversion is successful.
Print a slot of the given mode.
Get a random eight state.
Returns true if the given state is a solvable state.
Get the child state for a given operator.
Returns an iterator that iterates over all the string operators in this string.
Print the string represented by this string. The result will be a pretty printed version of the
Swaps the specified tiles.
Convert a string to a character list.
Convert a list of characters to a state.
Convert a log record to a string.
Convert a log4j level to an apache log4j level.
Adds a new element to the queue and record it to the queue.
Adds an element to the queue and returns a record that can be added to the queue
Increments the size and the count.
Decrements the size and the count.
Signals that a given size is crossing a given threshold.
Returns the naming enumeration for the given name.
Returns a list of bindings for the given name.
Add an object to the hashtable.
Remove a property from this object.
Runs a gc on the JVM.
Returns a literal rule with the color multi dimension and the string literal to match.
Resolves a named mixin reference.
Push a variable reference to the current context.
Set the maximum height for a specific row.
Updates the max column sizes for the given column. If the previous column has a different
Returns a new node in the tree that is reachable from the successor node.
This method is used to perform a forward - request.
Substitute a built in clause with a new built in transform.
Initialises the symbol table for the given term clause.
Performs a top level check on the symbol table.
Returns the string representation of the argument list.
Subclasses may override this method to customize the evaluation of numeric types.
Signals that the writer thread is running.
Signals that the thread is about to be terminated.
Signals that the lock is held by this lock and notifies the thread that the state
Inserts the specified element into this queue.
Compares two nodes.
Inserts a new node into the tree.
Restart the server.
Returns a set containing all elements matching the specified method.
Returns a collection with the elements that match the given search method.
Finds all solution to the specified method in the specified collection and adds them to the result
Return the next item in the sequence.
Restore values from an object to a map.
Gets an object property. If the property does not exist an exception is thrown.
Set a multi type value for a given property.
Set an object property.
Captures null values and ignore them.
Removes an element from the list and returns it.
Convert a set of modifiers to a string.
Converts a string to an integer.
Converts a string to a date
Returns true if the given string is a date.
Returns true if the given string is a time.
Checks if is date time.
Create token source for string.
get token source for a file
get token source for input stream
Returns true if the given instruction is constant.
Returns true if the instruction is a variable.
Returns true if the current instruction is the non - arg instruction.
Returns an iterator that traverses the children of this node.
Returns the argument at the specified index.
Returns an iterator that traverses all the children of this operator.
Returns a string containing all the arguments.
Get a summary of a measure type.
Returns a list of measure appenders.
Internal method to execute a query.
emmit the code of the linkage.
Set the type of the given class.
Method to consult input stream.
Print a variable binding.
Returns an iterable which contains all the solutions of the set as keys and the corresponding variable as
Runs the stream.
Reads the stream.
Get the current time in milliseconds
Get the current time in milliseconds.
Update the play info with the track info.
Update the play info with the current progress and volume.
Render the output.
Handle resource request.
Handles an event model event.
Send a notification to the player that the specified event has been received.
Start the reader thread.
Starts the reader thread.
Shuts down the server.
Resets the parser.
Starts the parsing of the packets.
Processes a single packet.
Set the cli option.
Creates a chat.
internalize this object to a content manager
Resets the content of this object to the provided map.
Set the property of the given object to the specified value.
Adds a filter to the packet.
Process the request.
Resets all properties to their original values.
Start a new thread to write packets.
Sends a packet to the server.
Return the next packet.
Opens a stream for writing.
Returns a list with all strings of the given type.
Returns true if the given descriptor is in the descriptor list.
Add event listener.
Shuts down the executor and cancels the timer.
Returns true if the entry is valid.
Returns the key in the map or key if the key is null.
Returns true if object x equals object y.
Returns the entry with the given key or null if no such entry exists.
Resizes the internal table to a given capacity.
Adds all of the mappings from the specified map to this map. If the number of
Removes the value associated with the given key from this map.
Removes the entry for the given key from the table if it is present. The entry
Remove a mapping from the map.
Adds a new entry to the table. If the size of the table exceeds the threshold
Creates an immutable delegate that has all of the given keys replaced with the supplied function.
Converts string to binary.
Encode a number of bytes as a hex string.
Encode a string as base64.
Encode a range of bytes to base64.
Overrides the default implementation to iterate over the elements in the specified collection.
Sets the controller to be used for the track selector.
Set the consumer to be able to jump to the current progress
Sets a controller that will be invoked when the screen changes.
Set a controller that will be notified when a volume changes.
Broadcast an available playlist to a supplier.
Event handler for resources.
Set the volume of a player for a particular resource.
Jump a string to another player.
Select the track info for a specific resource.
Get a thread cache with the specified name.
Get request cache.
Get alt field string.
Returns the shard path of the given id.
Get the session from the source object. If the source object is not a session adaptable
Wraps a method on the given object and returns the result. If the target object
Deletes a content manager tree by its path.
Updates one or more properties of the specified object in the entity manager. If the specified
Set the ping interval.
Schedules a ping to run on the server thread. If the ping interval is greater than
Adds all options.
Returns true if the given option is present.
Parses the given command line arguments and returns the corresponding exception.
Print a usage record for the specified app.
Parse the command line arguments.
Initializes the connection to the server.
Starts the connection. If the required flag is set to true the connection s security mode
Returns the compression handler for this class or null if none of the compression handlers are supported.
Sends a compression request to the server.
Starts stream compression.
Notifies the listeners that a connection error has occurred.
Notifies the listeners about a reconnection.
Registers the SAS class.
Register SASL supported SASL components.
Gets the output plugin behaviour map.
Log a message at info level.
Record an error with the given message and the throwable.
Prints a log message with a throwable.
Convenience method to create a start event.
Creates a start event.
Notify all listeners that the specified string was written to.
Returns true if the given resource provides this resource.
Returns true if the given resource is a resource from the given source id.
Returns true if the provided list of resources provides the resource i.
Provides a list of resources for a given resource id.
Get object from cache.
Get a cache key from the key space and column family.
Remove a cache entry from the storage.
Put a key in cache.
Retrieve the column family locations for this resource.
Includes a file or directory.
Includes a jar file.
Adds the given string to the list of process strings to use. If the string is
Adds the given string array to the system. If the system has not been initialized yet
Create debug information.
Prepare the object for activation.
Registers standard events.
Registers an event listener for the given event.
Register a new event id with the properties file.
Attempts to acquire a lock on the file channel and call the consumer with the lock.
Returns true if this model can run the given event.
Create a new dse session with a given keyspace.
Create a music player with error resource.
Start playing a track.
Stop playing a player.
Add a command to a player.
Create a playlist with the specified name and resource id.
Create an answer to a playlist
Appends a string to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Get a playlist from an event model.
A utility method to launch the button when it is clicked.
Starts the browser thread and waits until it is finished.
Checks whether the given url exists.
This method is called when an action on the browser button is pressed.
Create an image from a path and a description.
The main entry point for this application.
Returns a copy of this array with the specified values.
Export the descriptor as a hash map.
Get the value at the given index as a json object. If the value is not a
Get a property value as json. If the value is not a json an exception is thrown
Returns the integer value of the property or the default value if the property is not set.
get double.
Returns the value as a string or null if the value is not a string or a json
Creates a command resource with the given command and capabilities.
Verify whether the specified command is one of the supported commands.
Verify that the specified capabilities match the supplied command.
Verifies that the given command matches the given capabilities and that it matches the given command.
Execute batch async.
Return all subclasses of the specified class.
Returns all subclasses of the specified class.
Search for classes in the given location.
Search the given directory for classes and add them to the map.
Returns a view of this resource.
Returns the number of elements in the array.
Processes a single packet. If the packet is null this is a no - op.
Get the volume of an event.
Sends an error response to the server.
Create a new error response object.
Return true if the identifiable is the target of the event model.
Set the enabled status of the specified period.
Decorates a set.
Set the display name.
Set the name subscription and ask status.
Get a collection of all roster groups.
Append rsm element to query element.
Parse rsm.
Creates a leaving event.
Reload the current roster.
Create a new entry with the specified user name and groups.
Returns a collection of all the roster entries.
Get the current user s presence for the specified resource.
Get the most recent unavailable presence of all the resources for the current user.
Fires a roster changed event.
Set the digest value for a given connection id and password.
Generate the specified resource model and the specified event model.
Makes a player request for the specified playlist with the specified capabilities and the specified context.
Get time passed optional.
Registers a weak reference to the given listener.
Initialize the properties.
Reload the properties file.
Get a stream error from a stream element.
Returns a collection of Strings from the passed element.
Get a collection of strings from a compression element
Parse a packet extension.
Decodes a string to an object.
Verifies that the specified event has been received from the specified player and that the specified capabilities
Retrieve playback state from a resource model.
Returns the secret key of the specified string.
Returns true if the given string is a multiple - allowed string.
Add a value to the map. If the map previously contained a mapping for the key the
Returns a reference to the key set.
Returns a collection of the values in this map.
Purges the specified reference from this context.
Returns the map entry for the given key or null if the key is null.
Returns a hash code for the given key and value.
Returns a new reference entry for the given key - value pair.
Indicates whether an event should be displayed or not.
Set the current presence of the element.
Update the most recent resource.
Delivers a message to the callback.
Get a new script instance.
Initialize output dir.
Load properties file.
Write a string to a file
Retrieves the progress of an event.
Decorates a collection.
Scans the network for service resolver of the given range and returns a collection of them.
Attempts to resolve the configuration and retry if an exception occurs.
Returns the thread pool.
Convenience method to create a stop music object from a source object to a target object
Verifies whether the selector resource is target of the event model and player.
Get the dse cluster with the specified hosts and ports.
Adds a connection listener.
Adds a listener to the packet list. If a listener is already in the list it
Adds a listener to the packet sending list.
Fires a packet sending listeners.
Adds a new interceptor to the packet.
Notifies all registered interceptors of the given packet.
Converts a request parameter to a value.
Marks the connection as lost.
Get the current thread id.
Returns true if the provided node is a valid node.
Gets the key for the given value.
Returns an object at the specified index.
Returns the next node that has the same key as the specified object or the specified thread.
Look up a key - value pair in the tree.
Compare the two specified objects.
Returns the least child of the given node at the given index.
Returns the node with the most key in the given node at the given index or null if
Returns the next node greater than the given node or null if the node is null.
Returns the most valid node.
Returns the least valid node with the specified index and thread id.
Copy a node from null to a new node with the given index.
Returns whether the node at the given index is red or not.
Returns whether the node is black.
Gets the parent node with the specified index.
Returns the parent of the given node at the given index or null if the node is null
Get the right child of a node.
Returns the left child of the given node at the given index.
Rotates the right child of a node.
Rotates the right child of the given node.
do the actual conversion of a tree into a red - black tree
Performs a delete operation on the tree.
Check if the given object is a non - null comparable object and throw an exception if it
Insert a new value into the tree.
Returns whether the key exists in the context of the current thread.
Returns whether the given value is contained in the current thread.
Get a value by its key.
Removes the value with the given key from this map.
Clears all entries in the tree.
Copies the entries of this map into a new map.
Delete expired entries.
Remove all entries from the cache.
Called when the activate method is called.
Get a player by its name.
Initialize a roster store.
Opens a roster store object from a file.
Scans a given inet address range and collects a collection of inet addresses within that range
inet address with specified number of bits
Create a hash map from this object and the object s properties.
Create a new track info from hash map.
Adds all applications from the given set of classes to this set.
Executes the script associated with the supplied object.
Print the list of classes in the stg.
Prints the usage of the stg.
The main entry point for the command line tool.
Mute event.
Mute an event.
Get a good Will schema by name.
Write lines to a file.
Determines whether the jar is included in the build.
Adds an application option.
Return a sorted list of good Will schema fields.
Get good Will schema field by name.
Returns the package name of the specified jar entry.
Create an immutable map from the contents of the given map to the values of the given base
Create event listener.
Set the internal state of this instance.
Iterate over the specified collection of filterable objects.
Performs one iteration of the given iterator.
get track info optional.
Create a hash map for the given string length position and time stamp.
Imports a resource as an optional progress object.
Creates a buffered image with the specified error messages.
get a buffered image from url
get json from url
Reverse the values in the source map to the values in the target map.
Create a new hash set that is a multiplication of this hash set.
Starts the background thread.
Return object to pool.
Convenience method to create a ended event from an identification.
Get the current track info from the queue.
Update the specified playback mode with the specified track information.
Randomly shuffle the tracks in the queue.
Verifies that the specified capabilities are supported by the playback modes.
Create a hash map for the name position and the playback mode.
Escapes a string so that it is valid for an XML - formatted string.
Called when a challenge is received from the server.
Converts JSON object to byte array.
Runs the event queue blocking until an event is received.
Handle event.
Join all dispatcher threads.
Set the specified property of the specified object to the specified value.
Remove a property from the authorizable map.
Adds a principal to the set of principals.
Remove a principal from the set of principals.
Called when the root window is closing.
The user encountered the event.
Called when an event occurs.
Returns whether the resource is permanent.
Set the name of the currently logged in user.
Returns true if this map contains the specified key.
Returns true if the specified object contains the specified value.
Associates the specified value with the specified key in this map. If the map previously contained
Removes all of the elements from this set.
Hashes the specified object key.
Returns true if the given keys are equal.
Returns true if the specified objects are equal.
Ensures that the array has at least the given capacity.
Calculates the new capacity based on the proposed capacity and the current maximum capacity.
Returns an iterator over the elements in the set. If the set is empty an empty iterator
Load map from stream.
adds a new context to the set of context objects
Notifies listeners that a reconnection failed.
Notifies all connection listeners of a reconnect attempt in the specified time.