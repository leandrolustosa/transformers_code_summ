Emits the given value into the queue. The queue is guaranteed to be non - empty
Creates an observable from an observable source. If the source is an observable it will be wrapped
Returns an observable sequence that is sorted according to the specified comparator function. The observable sequence is
Create a replay observable from the given connectable observable with the given scheduler.
Create a new unicast processor with the given capacity.
Creates a new unicast processor with the given capacity hint and runnable.
try scalar x.
Returns a flowable that applies the given function to the given value and returns the result as
Reset all handlers to their default values.
Creates an assembly from a completable object. The completable object must not be null.
Construct an assembly from a single value.
Retry the operation up to the specified number of times if the predicate throws an exception.
Require that the given object is not null. If it is throws an exception with the given
Returns a function that returns the identity of the given type.
Creates a callable with the given value. The value will be converted to the type of the
Returns a function that takes a value and returns it as the result of applying it to the
Returns a function that casts to the given target class.
Create a new unicast subject.
Create a new unicast subject with the given capacity.
Create a new unicast subject with the given capacity hint and runnable on termination.
Create a new unicast subject.
Returns the last error that occurred. If the count reaches the maximum number of errors this method
Get an error from the pool. If the pool is full the error will be returned.
Waits for a value to be set to true. If the value is set to false the
Drains the queue using a maximum backpressure loop. If the queue is full the
Sends a request to the given subscription with the given number of prefetch items. If the number
Completes this promise with the given value. If the promise is already completed it will be
Returns the value of the field. If the field is not present or is not an error
Gets the error.
Validates that upstream and next are disposed and that upstream and next are disposed.
Sets the next disposable object to the value of the upstream observable. If the upstream observable
Validates that upstream and next subscription are not null and that upstream is not the same as upstream
Sets the given subscription to the given upstream. If the upstream is null the next subscription will
Returns the sum of a and b. If a + b is less than the current capacity
Multiply two long values and ensure that the result is a multiple of b. If the result
Add n to the requested set and return the new value. If the requested set is already
Creates a new pointer exception from a throwable.
Add an object to the end of the list.
Shuts down the pool. This method is called when the pool is no longer needed.
Creates a new scheduled executor service using the specified thread factory.
Sets the current subscription. If the current subscription is the same as the given one it will
The main loop for the emitting state. This is the main loop of the emitting
If the given error is an exception wrap it in a runtime exception. If the given error
Flattens a composite exception into a list of throwable objects.
Throw a throwable if it is an exception otherwise throw it as a new exception.
Removes all resources from the hash set. This method is safe for concurrent access.
Returns the number of resources in the hash set or 0 if the hash set is empty.
Try to apply a function to an observable source. If the source is a callable the function
Returns an observable sequence that maps each element of the observable sequence to a new value using the
Accept the notification of this queue. If the queue is full this method returns true. Otherwise
Accept an observer for all the elements in this queue.
Start the stream. This method is called at the beginning of the stream. The stream will
Start the stream in unbounded mode. The stream will be closed when this method returns.
Adds an object to the queue. If the queue is full the object will be dra
Returns the disposable value of the wrapped resource. If the wrapped resource is disposed the
Completes this observable with the given value. If this observable is already completed it will be
on error.
Completes the future by setting the completed flag to false. If the future is already completed
Awaits the specified number of times. If the specified number is less than or equal to
Request the given number of events from the upstream subscription.
Adds a publish disposable to the list of subscribers. If the list is already in the
Removes a publish disposable from the list of subscribers. If the list is empty the method
Replay a flowable with the given scheduler. The scheduler will be used to replay the
Parse the annotations of a method and return the appropriate response type. If the method is a
Sets the amount of time that the task should wait before it will be executed. The amount
Create an error response. If the response is successful throws an exception. If the response is
Calculates the delay for the given time unit. The delay is calculated based on the variance of
Create sample data.
Returns the HTTP method value for the given HTTP method name or null if the method name is
Search for a single user in the directory.
Encodes the given password with the given sequence.
Returns true if the encoded password matches the raw password.
Perform version checks.
Returns true if the checks should be disabled based on the version and the security version.
Get the version of the spring security core.
Creates a new attribute configurer with the specified identifier and pattern. The pattern is used to
Creates a new OAuth2 client.
Returns an oauth2 resource server configured with the given context.
Returns true if the specified attribute is equal to the specified value in the specified DN.
Retrieves an entry from the directory. If the directory does not exist it will be created.
Search for multiple values for a single attribute.
Internal method to search for single entry in the directory. This method is used for internal use
Build a search controls object from the given controls object.
Perform a primary key lookup on the database. The primary keys are the primary keys of the
Build the web authentication details for a pre - authenticated granted authorities web authentication.
Create embedded server bean definition.
Create servlet api filter.
Create the jaas api filter.
Create a builder for the default typing.
Insert a spring security filter chain into the servlet context. The filter chain will be added to
Get a token for a given series id.
Returns a list of all authorities for the given attributes.
Creates a new cipher instance with the specified algorithm and padding.
Override after properties set to catch servlet exceptions and log them.
Checks if the request requires authentication. If the request requires authentication then the response will be sent
Returns true if the principal of the current request is different from the pre authenticated principal of the
Authenticates the request. If authentication is successful the response will contain the authentication result.
Check the content length of the response. If the content length is greater than the number of
Maps a collection of authorities to a hash set of authorities. The returned set will
Set the URL of the login processing page. This is the URL that will be used to
Update authentication defaults.
Update the access defaults for the given HTTP client. This method should only be called if the
Map the password to a string if the value is not a string.
Extract the remember me cookie from the request.
Encodes the given cookie tokens into a base64 encoded string.
Adds a cookie to the response. The cookie will be encoded and added to the response.
Resolve a single argument from a method parameter.
Gets the query string from the servlet request. If the query string does not match the pattern
Get the port of the service. If the port is - num the default port is returned
Returns the principal of the current user. If the current user is an anonymous authentication token the
Logs out the current session. If authentication is set to true the session will be invalidated.
Authenticates the request. If the request is a username password authentication token then this method
Sets the context environment properties.
Returns the full URL of the request that should be redirected to.
End the tag. If ui security is disabled the tag will be written to the output stream
Initialize the user details service. This method should be overridden by subclasses to provide additional information.
Get user details service.
Adds the pkce parameters to the attributes and additional parameters.
Checks if the servlet request requires authentication.
Checks if the request requires authentication. This method is overridden to log the result in debug mode
Checks if the request is a proxy ticket or not. If the request is a proxy ticket
Returns true if the current user is authenticated.
Checks if the request matches the proxy receptor.
Create the root security expression.
Gets the JWK set.
URL - encode the given string using UTF - 8. If the encoding fails an assertion will
get web sphere groups based authorities
Load user by assertion.
Gets the pre authenticated principal from the servlet request.
Concatenate multiple byte arrays into a single byte array. The length of the resulting byte array
Creates a sub - array from the given byte array starting at the given index and ending at
Returns a list of all granted authorities for the given attributes.
Pre - processes the given map to ensure that the keys are strings and the values are the
Returns a collection of granted authorizations for the given value. The value is added to the
Add a granted authority collection from the given object to the given collection. If the object is
Gets the pre authenticated principal from the servlet request.
Get the shared object of the given type.
Build the https redirect url for the given http servlet request.
Invokes the method advisor with the join point jp advisor and proceed with the result.
Creates a new role string with the given role.
Add any role to the end of the roles array.
Called when the user is successfully logged in. This method creates a persistent token and stores it
Switches the user from the request to the target user. If the target user is not
Exit the user authentication attempt. If the user is not found an exception will be thrown.
Sets the exit user url.
Display a random contact.
The spring security filter chain. The spring security filter chain is the web application filter chain.
Decodes the given JWT string and returns the decoded JWT object or throws an exception if the token
Checks if the current user is authorized using the access expression. If the current user is not
Check if the current user is allowed to access the given url and method.
Convert a JWT into a collection of granted authorizations.
Generates a CSRF token for the given request.
Display a contact s admin page. The contact s admin page will be displayed in the admin
Display add permission page for a given contact.
Adds a permission to a contact.
Returns the role with the given default prefix appended to it if it doesn t already exist.
Creates a user details resource bean from the given string.
Returns the values of the named attribute or an empty list if the attribute does not exist.
Returns the value of the first attribute with the given name or null if there are no values
Encodes the given character sequence into a byte array.
Decodes a byte array into a UTF - 8 string.
Lookup the parameter names for the given object.
Adds a new contact to the database.
Find the attributes that match the specified method. If the target class is null null is returned
Adds a secure method to the map.
Returns a collection of all config attributes.
Checks if the method name matches the mapped method name.
Any request is matched by a matcher. This is a no - op if there is no
This method is called when an error occurs during binding. It logs the error in debug mode
Get a random contact from the database.
Clear the authentication attributes from the session.
Returns the field with the given name in the given class or null if no such field exists
Create the service url.
Create redirect url.
Extract the prefix from the given enc pass.
Sends an error to the client with a forbidden status code and a message to the client.
Checks for duplicates in the filter stack.
Returns an array of registered throwable types.
Extract the cause of the given throwable.
Register a new access manager with the parser context. The voter is a bean definition that
Converts a collection of authorities to a set of authorities.
Compares two byte arrays and returns true if they match or false if they do not.
Set default failure url.
Sets the function that will be called to resolve hidden inputs. The function will be called when
Build the request url from the servlet path request uri context path path info and query string.
Checks if the given URL is an absolute URL.
Returns the attribute list for the given identifier or an empty list if no such attribute exists.
Converts a string identifier to a serializable identifier. If the identifier is not a string it will
Creates the entries in the access control table.
Creates a new identity for the given object.
Update the object identity with the given mutable acl.
Save the request to the session. If the request matches the matcher the session will be created
Create a matcher for the given HTTP method and path patterns. The pattern parser will be used
Any web exchange matcher that matches any request on any web exchange.
Creates a text encryptor with the given password and salt. The password and salt must be
Creates a text encryptor with the given password and salt. The password and salt must be
Create a queryable text encryptor from a password and a salt.
Writes the headers to the response.
Determine the target url based on the servlet request response and authentication.
Determine the target url. If the target url is always use the default target url.
Sets the target url parameter.
get directory with immediate parent populated.
Build a distinguished name from the given username.
Creates a map of shared objects. The keys are the class names and the values are the
Loop through the JAAS login configuration and set it in the security context if necessary.
Returns the current date. If the current date is greater than the number of milliseconds then the
Parse a date from the given string using the given formats. If no date is found null
Updates the cache with the given key and value. If the value is null the cache is
Set the authentication details in the request.
Returns the security name for the given subject or null if the subject is null.
Returns a list of web sphere groups for the given security name.
Build a distinguished name for the given group.
Throws an exception if the maximum allowable sessions is exceeded.
Copy the details from the source authentication object to the dest authentication object.
Returns the list of filters associated with the given servlet request or null if no filters are associated
Get a list of filters for the given URL.
Returns the web application context for the specified page context or null if there is no web application
Returns the full distinguished name. If the distinguished name is already present in the context
Adds session attributes to the request specification.
Creates a new basic authentication scheme with the given user name and password.
Adds a list of filters to the assured list of filters.
Adds a filter to the list of filters that will be applied to the request. Additional filters
Creates a new basic authentication scheme with the given user name and password.
Creates an ntlm authentication scheme from the given user name password workstation and domain.
Creates a new form authentication scheme with the given user name password and configuration.
Sets the proxy for the given URI.
Prints the response to the given stream with the given log detail.
The redirect configuration.
Sets the default charset for the content type query parameter. The default charset will be used if
The default object mapper configuration. The default object mapper configuration is the default object mapper configuration.
Create a new instance of the object mapper factory. This is the default object mapper factory.
log config for rest assured mock mvc. log config for rest assured mock m
rest assured mock mvc config session config. session config can be null or empty.
rest assured mock mvc config object mapper config.
rest assured mock mvc config. json config must not be null. json config must
Set the XML configuration for the rest - assured mock. This is the default configuration for
Set the encoder configuration for the rest - assured mock. The encoder configuration is used to
Set the header configuration for the rest assured mock. This is the default configuration for the
Creates a new mock mvc config with the given async config.
rest assured mock mvc config mock mvc config mock mvc config mock mvc
rest assured mock mvc config multi part config.
parameter configuration for rest - assured mvc mvc mvc mvc param config.
Sets the matcher configuration for this mock.
Allow all hostnames in the certificate.
Declares the namespaces to be used for parsing and parsing XML documents. The default namespaces are
Sets the declared namespace for this path configuration. This namespace will be used to define the namespace
Sends a request to the server using the default uri content type and the given configuration.
Sets the headers to be sent to the client. This method is not thread - safe.
Set the default proxy for the request.
Sets the name of the control.
Adds a header to the multi part spec. The header name and value must not be empty
Sets basic authentication credentials.
Set the NTLM credentials for the given host port user pass workstation and domain.
Creates a new headers object with the given header and additional headers. If no additional headers are
Reset all internal variables to their default values. This is useful when you want to reset the
Sets the response header with the given name and value. If the name is the ignore case
Build the response.
Matches a cookie s value with a given matcher. The cookie s value is matched by the
Matches a cookie s comment.
Matches a cookie s expiry date.
Matches a cookie s domain with the given matcher.
Matches a cookie s path property with a given matcher.
Returns a detailed cookie matcher that matches if the cookie is secured by the given matcher.
Matches a cookie with an HTTP - only value.
Matches a cookie s version property with a given matcher.
Matches a cookie s maximum age.
Expect the given header to be present in the response. If the header does not exist it
Expect a response header with the given name to be present in the response body.
Expect a cookie with the given name to be present in the response with the given value.
Returns a copy of this proxy specification with the specified host.
json path config number.
The default parser for JSON paths. This is the default parser for JSON paths. The default
Create a default log configuration with the given print stream. The default stream is a standard output
Enable logging of request and response if validation fails otherwise disable logging of request and response.
Create a new http request base.
Sets the default configuration for a multipart multipart upload.
Adds an attribute to the request.
Add a header to the request.
Add a multi part to the mvc request.
Add result handlers to mvc request spec.
Returns a new http client config instance with the specified parameter set to the specified value.
Create a new http client config with the specified parameters.
Creates a new http client instance with the given http client factory.
Create a new HTTP client config with the given multipart mode. The multipart mode is not supported
Perform a GET assertion with the given path and parameters. If the assertion fails the result will
Get the int value of the given path.
Get the byte at the given path. If the path does not exist it is created.
Returns the short value of the given path.
Returns the float value at the given path or null if the path does not exist.
Returns the value at the given path as a double. If the value is not a double
Get the long value of the given path.
Get a list of objects from the resource at the given path. If the path points to
Returns a map at the given path.
Returns the value of the property at the given path as an object of the given type.
Sets the body of the request. The body will be mapped to the given object using the
Adds a cookie to the request.
Adds a parameter to the request.
Adds a parameter with the given name and values to the request.
Sets the update strategy for this mock.
Log a response to the given print stream that matches the given matcher.
Creates a new cookies object with the given cookies.
Clean up the state of the given keys and sources. The state is removed from the backing
Index all explicit bindings in the context of the current state.
Get a binding or throw an exception if the binding is not present.
Convert a constant string to a binding.
Cleans up a binding by removing any dependencies that were encountered during the binding. If the binding
Remove a failed jit binding. If ip is non - null remove the injection point from
Returns the set of internal dependencies of the given binding. If the binding is a constructor the
Create an uninitialized binding for the given key. The binding is not initialized if it is
Returns an array of objects containing all of the given injectors. If there are no arguments
Creates a new injector instance and adds it to the injector state. The injector instance will be
Bind a logger to the injector.
Checks for misplaced binding annotations.
Returns true if method a overrides method b.
Sets the delegate injector.
Returns a literal literal that represents the type of the expression.
Resolves all of the types in the given array and returns an immutable list of the resolved types
Canonicalizes a type literal to a fully specified type. If the type is a parameterized type
Prepare the built - in converters for the given injector. This method should be called before any
Canonicalizes the given class loader.
Returns true if the given class loader has the same version of cglib as the given class
Returns true if the given member is publicly callable.
If key has an annotation return it. Otherwise return the key with the annotation removed.
This method is called by the injector when a binding is requested. This method should be called
Runs the validation of all the pending injections. If any injections fail the errors are
Creates a new instance of the target class with the given arguments. The target class must have
Creates a new instance of the given type using the given scoping. If the scoping
Ensure that the given scoping is injectable. If the scoping is not injectable
Normalizes the given path by removing the first occurrence of str from the path and removing the query
Generates an annotation of the given type.
Checks if the given type is retained at runtime.
Finds a scope annotation in an array of annotations. If multiple scope annotations are found an error
Returns a key for the given type member and annotations.
Returns the name of the given key. If the key has an annotation the name of the
Initializes the delegate provider. The delegate provider must not be null. If the delegate provider is
Adds a direct type binding to the current binding selection.
Get the injector for the given injection point. If there is no injector for the given injection
Checks if the given interceptor class has a scope annotation.
Creates a new real map with the given key value and annotation.
Create a new key for a new value.
Provisions a new instance of the given construction with the given context and injectors.
Replaces the contents of the source stream with a new string. This method is called when the
Returns the module object for the given module.
Returns a collection of all the methods that have been assisted in this class.
Returns true if the type is not specified in the configuration exception. Otherwise returns false.
Checks if a constructor has matching parameters.
Returns the set of dependencies for the given injection point and implementation. If the implementation is an
Removes dependencies that are marked as assisted from the given set of dependencies.
Checks if the dependency is valid for an optimized assisted inject.
Get the binding from the new injector.
Invoke a method on a proxy object.
Returns an error message for missing implementation of the given key. The error message includes the key
Create a new real multibinder with the given key and install it in the given binder
Get the key for a new item.
Find the next filter that matches the given request.
Returns true if the constructor is at the annotation of the javax. inject. inject. class
Gets the internal constructor of the factory.
Returns the set of internal dependencies. This is the set of dependencies that should be injected.
Scan the given module and return the module object that matches the given scanner. The scanner is
Gets the annotation for the given method. If the method is not a bridge or a synthetic
Returns the line number of the given member.
Initializes the injector. This method is called when the injector is instantiated and all its dependencies have
Validate and canonicalize the given value. If the given object is not an instance of the given
Suppress warnings in the given string. This is useful for debugging and debugging purposes.
Creates a new members injector with listeners for the given type. The listeners will be notified when
Returns a list of injectors for the given set of injection points.
Creates a new key for the given type and strategy.
Returns an annotation strategy for the given annotation.
Creates an annotation strategy for the given annotation type.
Prunes the stack trace of the given throwable and all of its causes. The stack trace
Get the binding source.
Creates a new error message with the given format and arguments.
Creates a new exception message with the given message format and arguments.
Creates a new exception message with the given cause.
Converts the given object to a new object. If the given object is an element the source
Returns true if the given class name should be skipped.
Get the source object from a list of class names. The source object will be returned if
Entry point for the guice command line tool. This is the entry point for the gu
Pushes a dependency onto the state stack.
Pushes the state of the given source object onto the state stack for the given key.
Returns an initializable instance that can be used to create a new instance of the class.
Provisions the given provider with the given dependency and delegates it to the given construction.
Called when a connection event is received. Calls the registered event processors for the given event type
Adds a connection event processor for a given connection event type.
Returns the result of the given future task or null if the given task is null.
Throw a throwable into a runtime exception or an illegal state exception. If the throwable is an
Register a remoting processor for the given command code.
Register a default remoting processor. This processor will be called when the default remoting processor
Returns the processor for the given command. If no processor is found the default processor is returned
Get the url from the cache or null if it doesn t exist.
Decodes the protocol code from the given buffer.
Get all connections from all pools.
Scan all connections in the pool. If a connection has expired it will be removed from the
Get and create a new connection with the given url.
Create a new connection and heal if needed.
Remove a task from the pool. If the task is completed the connection will be closed.
Heal the connection pool if needed.
Create a connection from the given url and add it to the given connection pool.
Close the connection with the given address. This method is called when the connection is closed.
Called when the connection is closed. This method will be called when the connection is closed.
Close the connection.
Sets an attribute if it does not exist. If the attribute already exists it will be replaced
Register a user processor. If the processor already exists it will be replaced. If the processor
Register a processor with the hash map. If a processor with the same interest is already registered
Dispatches the RPC request to the user processor.
Deserialize a request command and send a response to the client if necessary.
Pre - process the remoting context.
Log a command timeout.
Log debug information.
Process a message with the given remoting context and executor. If the remoting context is
Sends a write request to the remote server.
Convert a bit set to a byte.
Convert an integer to a bit set.
Adds a reconnect task to the list of tasks to be executed.
Create a remoting command for the given request and connection.
Filter connections based on the status of the service.
Close fresh select connections.
Get a boolean property. The default value will be returned if the property is not set.
Log an info message if the logger is enabled. If the address is not empty it will
Returns true if the request timeout has not been exceeded or if the request is oneway
Returns the user processor for the given class name or null if the class name is blank.
Gets a random connection from the given list. If the list is empty it returns null.
Returns the value associated with the given key or the default value if the key is not found
Returns the value of the property with the given key or null if the property is not set
Resolve a response object.
Returns the response object from the given command or null if there is no response object.
Converts a response to a throwable. If the response contains an exception it will be converted to
Get the detail error message from the response. If the response contains an error message it will
Create a server exception from a throwable.
Print the connection trace information.
Creates a new event loop group with the given number of threads and a thread factory.
Returns the remote address of the given channel or an empty string if the channel is null.
Returns the local address of the given channel or an empty string if the channel is null.
Returns the remote IP address of the given channel or an empty string if the channel is null
Returns the remote host name of the given channel or an empty string if the channel is null
Returns the local IP address of the given channel or an empty string if the channel is null
Returns the remote port of the given channel or - 1 if the channel is null.
Returns the local port of the given channel or - 1 if the channel is null.
Parse socket address to host ip.
Adds a connection to the pool. If the connection is already in the pool it will be
Remove a connection from the pool and try to close it. If the connection is still open
Register a custom serializer for the given class name. If a serializer with the same name already
Get the custom serializer for the given class name.
Register a custom serializer for the given command code.
Returns the custom serializer for the given command code or null if no custom serializer is registered.
Returns true if the remote server is connected to the remote server.
Initialize the write buffer.
Returns a framedata object for the given opcode.
This method is used to write a batch of data to a web socket. This method is
Sets the HTTP status code.
Validate UTF - 8 data.
Update the payload with the code and reason. The payload is stored in the super class.
Checks if the given protocol is accepted by any of the known protocols. If it is the
Checks that the length of a single frame is within the maximum allowed frame size and that the
Check if the packet size is valid. If not throw an incomplete exception.
Generates the final key from the given input string.
Process continuous and non - fin frames.
Process a binary frame.
Log the runtime exception and call the websocket error listener.
Process a text frame. This method is called when a text frame is received from the client
Process the next frame. This method is called when the next frame has been received from the
Process a frame that is not a FIN frame. If the frame is not a FIN frame
Process a closing frame.
Check if the size of the buffer is exceeded. If so clear the buffer and throw an
Get the payload from the list of buffers. If the limit is exceeded the payload will be
Returns the total size of the buffer list.
Translate an HTTP server handshake into an HTTP server handshake.
Translate a HTTP client handshake into an HTTP client handshake.
Decode a message. This method is called when a message is received from the socket.
Close the connection due to an invalid handshake.
Close the connection due to an internal server error.
Generate the http response due to an error.
Sends a message to the client. The message will be sent to the client with the given
Reset the stream. This is called when the stream is ready to be re - opened.
Start a new thread to read data from the file. This method will block until the file
Returns the port of the request. If no port is specified the default port is returned.
Sends the handshake to the engine.
Sets the connection lost timeout. If the timeout is less than the number of seconds then the
Stop the timer for a connection lost event.
Start the connection lost timer. If the timeout is less than the number of seconds then the
Restarts the connection lost timer. The timer will be cancelled when the connection is lost.
Execute connection lost detection. This method is called when a connection is lost or a connection is
Cancels the connection lost timer.
Creates a new server handshake builder for a websocket handshake received from a client.
Sends a PING frame to the client and waits for a PING frame to be received
Stop the timer. If the timer is already stopped the timer will be stopped. If the
Returns the port of the connection. If the connection is running on the local machine the port
Read additional data from the input queue. If there are no more data in the input queue
Accept a new connection. If the connection is already established cancel the key. If the connection
Read the next message from the socket. If there are no more messages to read the next
Write a single message to a web socket. This method is called when a message is received
setup selector and server thread
Makes sure there is only one thread in the selector. If there is no thread in the
Shuts down the server. This method is called when the server is being shut down.
Get a socket from a web socket connection.
Broadcasts data to all clients in the given collection of clients.
Broadcast the given text to all the given clients. The text will be broadcast to all the
Broadcast a message to all connected clients. If the data is a string or byte buffer the
Fills the draft frames with the given data. If the data is null the frames are created
Transfers the contents of the source buffer to the destination buffer and returns the number of bytes
Start the JPA persistence unit.
Returns an entity manager for the given name. If no entity manager exists for the given name
Executes the given consumer in a transaction.
Convert the given args to a buffer and wrap the args to a list if needed.
Wrap the given arguments to a list if it s not already a list.
Get a string from the messages map with the given key and arguments. If the key does
Get a string from a list of keys with the given arguments using the given language.
Returns true if the given key is defined in the given language.
Returns a new messages object with the preferred messages in the given collection. If no messages are
Returns the preferred message for the given request. The request is expected to be a HTTP header
Sets the language of the given result to the given language code.
Creates a new builder with the given module bindings. The module bindings will be added to the
Set the guice - able bindings for the given modules. The guice - able bindings
Set the bindings to be injected into the guiceable. The bindings will be injected into
Adds modules to be overridden by this builder. The modules will be added to the end of
Sets the guice modules to override. The guice modules will override any guice modules
Sets the bindings to be overridden by the guiceable. The bindings will be applied to
Disable the given classes in the context of this builder. The given classes will not be disabled
This method is called when a request is completed.
Get an existing file from the environment or create a new one if it doesn t exist.
Returns a binding that is bound to the underlying object in the specified scope. The binding is
Creates a new tuple with the given values.
Static factory method for creating a new 5 - element tuple.
Converts an execution context to an executor.
Creates a new JPA instance with the given name and unit.
Returns a new JPA unit with the specified persistence units.
Creates a new JPA instance from the given map of persistence units.
Create a flow that converts a string to a byte string and calls a callback on it.
Create a flow that converts a JSON node to a byte string and calls the given callback.
Adds a constraint validator for the given key. If the key already exists it will be replaced
Creates a new instance of the given constraint validator.
Get a method from a class with a matching name and parameter types. If no such method
This method is called when an error is received from the client. It is called by the
Renders a bad request page with the given message.
Renders a forbidden page with the given message. If the request is forbidden then the response is
Renders the not found page with the given message.
Handle a server error. This method is called when the server responds with an error.
Log server error.
Converts a throwable to a useful exception.
Display a dev server error page.
Render error page on prod server.
Create a doc handler from a list of files and directories.
Creates a documentation handler from a directory.
Create a doc handler from a directory and a jar file.
Build a documentation handler from a directory and a jar file.
Build a documentation handler from a jar file.
Consumes the stream of bytes and applies a materializer to the stream of bytes.
Creates an http entity from the given content. If the content is an XML entity the body
Creates an http entity from the given string content and charset.
Creates a chunked entity with the given data and content type. The content type is optional.
Returns a response with the given status code and JSON - encoded content.
Sends a JSON response with the given status code and content. The content is expected to be
Create a response with a status code and a byte array containing the given content.
Sends a HTTP response with the given status code and input stream.
Returns a response with the given status code and content. The content is expected to be a
Find a user by its id.
Returns a new language with the preferred language in the given collection. The candidates are assumed to
Returns a new MVC call with the same parameters as this one but unique values are unique
Create a new call with the given fragment.
Returns the absolute URL for the given request.
Returns the web socket URL for the given request.
Creates a function that runs the given runnable on the given connection and returns the result of the
Creates a function that invokes the given callable with the given connection as the first argument.
Creates a new server for a router with the given mode port and router function.
Convert an object to a JSON tree.
Converts the given JSON node to an instance of the given class.
Parse the given string as a JSON tree and return the result as a JSON node.
Parse the given input stream as a JSON tree.
Returns the relative path from start to target.
Returns the canonical form of the given URL.
Convert a set of constraints into a list of displayable constraints.
Converts a constraint descriptor to a tuple containing the name of the constraint and the list of attributes
Returns a new Completion that fires after the specified amount of time in the specified time unit.
Parses a cron expression and returns the next valid time after it.
Returns the next interval in the given cron expression for the given date. If the date is
Create a new instance of the websocket client.
Creates a new guice application builder from the given context.
Renders a todo page.
Stores a string value in the current session. This method is deprecated and will be removed in
Set a flash message. This method is deprecated and will be removed in a future release.
Creates a binding for the given annotation instance.
Creates a binding with the given annotation.
Creates a new binding to the given implementation.
Creates a new binding from the underlying provider with the same name as this one but with the
Creates a new binding to the given instance using the underlying implementation of the given supplier.
Returns a new binding that maps to the underlying binding with the given key. If the underlying
Creates a binding from the underlying type to the given provider type.
Returns a list of available languages for the given application.
Returns the preferred language for the given list of available languages. The preferred language is the first
Creates a new evolutions reader from a map of evolutions.
Creates a new evolutions reader with the given evolutions.
Clean up evolutions for a database. This is done by evolving all scripts
Create an application builder with a custom configuration loader.
Create an application builder with a custom module loader. The module loader will be applied to the
Loads a guice application from the given modules. The modules are loaded in the order they
Load the given modules into the guice application builder.
Load the given modules into the guice application. The modules will be loaded in the order
Creates a new guice application builder with the specified bindings.
Creates a new guice application builder with the given guice application builder.
Encodes the given cookie into a cookie string. The cookie string must not be null.
Returns the entity manager. If there is no entity manager in the stack an exception is thrown
Returns the stack of entity managers for the current thread. If the current thread is not safe
Push or pop an entity manager on the stack or throw an exception if the stack is empty
Apply a splitter to a flow. The splitter is applied to the input and the output is
Creates a bypass with the given splitter and merge strategy. The split strategy will be used to
Convert the error arguments into a list of objects.
Fill the form with the given value. If the value is null an exception will be thrown
Returns a list of all global validation errors. The errors are sorted by key.
Returns the errors as a JSON object.
Returns the value associated with the given key or null if there is no value associated with the
Fill the form with the given map of values.
Parse the given text into an instance of the given class.
Parses the given text into the given field of the given type.
Returns the string representation of the given object. If the object can be converted to a string
Prints the type of the given field with the given t.
Print an object to a string. If the descriptor is specified and the conversion can be performed
Register a converter that converts strings to strings if the source is an empty string.
Register a formatter for the given field type. The formatter will be used to format the field
Encodes the given cookie into a cookie string. The cookie string will be encoded as a cookie
Returns a list of nodes that match the given path and node.
Convert a java. util. list to an immutable sequence.
Construct an immutable sequence from an array.
Construct an immutable seq from an array of t.
Returns a web socket acceptor that accepts JSON messages.
Create a web socket that accepts or completes a stream of messages. The web socket accepts or
Returns the promotion cost for the source class to the destination class if it is a primitive.
Get the total transformation cost for the given executable.
Returns the cost of an object transformation between the src and dest classes.
Returns the localized message for the given key with the given arguments. If the key does not
Returns the value of the first occurrence of the given key in the given list of arguments.
Creates a new database from the given driver url and configuration.
Creates a parallel sorter for the given array of objects.
Sorts the elements in the range [ lo hi ) using the specified comparator. The elements are
Merges the elements in the range [ lo hi ) with the elements in the range [ lo
Invoke the method on the given object with the given arguments. If the method throws an exception
Loads the argument at the given index in the function or method body.
Emits a field of the given type with the given name and descriptor.
push a zero or null to the stack. If the type is not a primitive push a
unbox or zero the value to the given type. If the value is not a primitive
process array.
Generates code that compares two null values.
Resolve all bridges and return a map of the resolved bridges.
Filter the constructors of the given class.
Sets the superclass of this class.
Generates code that fetches the specified field from the class.
Adds a method to the list of methods that should be thrown.
Returns the cardinality of the set.
Sets the naming policy to use. The default naming policy is the default naming policy instance.
Finds all methods in the given array that match the given names and descriptors.
Resolve a child path relative to a base path. If the child path starts with a file
Read the contents of a file as a UTF - 8 string.
Sets the host for this request. If the host is already set it will be overwritten.
Create a new HTTP request with the given method and destination.
Create a new HTTP connect request.
Returns a new HTTP request configured for the GET method with the given destination.
Create a new POST request with the given destination.
Create a new PUT request with the given destination.
Create a new PATCH request with the given destination.
Create a new DELETE request with the given destination.
Returns a new HTTP request configured to perform a HEAD request to the given destination.
Create a new HTTP request configured to send a TRACE request to the specified destination.
Create a new HTTP request configured to send OPTIONS requests to the destination.
Set the path for the request.
Sets the given cookies to be included in the HTTP request.
Adds one or more query parameters to the request.
Adds a map of query parameters to the request.
Sets the request query string.
Get the query string.
Returns the URL of this request.
Sets the HTTP Basic Authentication header to be used for this request.
Sets the host header for this request.
Override this method to provide a buffer to be sent to the client. The buffer will be
Remove a range from the given handler.
Returns the number of exception handlers in the exception table.
Collect action interceptors.
Collect all the action filters from the manager and sort them by name.
Collect action results.
Collect all the action runtimes and sort them by their path.
Set a simple property.
Get a property. If the property is not found null is returned. If the property is
Extract this reference from the given property name.
Returns a writer for printing to the underlying stream. The writer is created if it does not
Set a reference to an object.
Returns the object with the given name or null if there is no object with the given name
Look up an object by its reference. If the reference is not found an exception is thrown
Returns the table descriptor for the given table reference.
Find table descriptor by column ref.
Get the table alias for the given table reference.
Register a table reference to the given entity descriptor. This method will throw an exception if the
Lookup the table descriptor for the given table reference. If no descriptor is found an exception is
Register a new hint. The hint will be added to the list of hints to be used
Serialize the given value into the given JSON context. The value will be pushed onto the context
Inject the request attributes into the target.
Inject the servlet request parameters into the servlet context.
Inject the uploaded files into the servlet request.
Convert property name to column name.
Convert column name to property name.
Convert column name to property name.
Store the value in the prepared statement at the given index.
Returns the value of t converted to the destination type. If destination type is null returns the
Returns a set containing all the objects contained in this map.
Resolves the given wrapper class. If the wrapper class does not exist it will be created.
Create a new wrapper instance.
Converts the given path to the system separator.
Get the path of the given filename by adding the given separator to the end of the filename
Splits a filename into the prefix path base name and extension.
Create a relative path from target and base paths.
Registers a new Madvoc component to be used by the web application.
Web app with action config.
Start the web application. This method is called when the web application is started.
Register the madvoc components.
Exclude the given jars from scanning.
Include the given jars into the scanner. The jars will be excluded from the scanner.
Include the given entries in the scanner. The entries will be added to the end of the
Exclude the given entries from the scanner.
Scan jar file.
Scan the class path and its sub - directories.
Returns the bytecode signature of the given type.
Scan the given paths for files and add them to the list of files to scan.
Start the scanner.
Create a new transaction with the given scope and active state.
Get default or init scope. If class is null then default is request scope. class.
Replies the scope of the given type or null if no scope of the given type exists.
Get or initialize a scope with the given type and invoke the given consumer with it.
Prepare a CSRF token for the given session and time to live. The token will be unique
Assure that the size of the token set is at least max tokens per session.
Checks if the given token exists in the session. If the token does not exist in the
Creates a new bean copy from the given source object.
Create a copy of this bean.
Visit a property and set it to the destination object.
Initialize the entity reference with the given template data. If no entity is specified the entity name
Returns a scope instance for the given type. If the scope is already registered it is returned
Register a petite bean. This method can be used to register a petite
Register a bean definition.
Remove a bean of the given type.
Resolve bean names for a given type.
Register a petite ctor injection point.
Register a petite property injection point.
register petite set injection point.
Register a new method injection point.
Register a set of init methods with the given bean name. If no init methods are specified
Register a destroy method with the given bean name. If no names are given all destroy methods
Register a petite provider with the given name bean name method name and arguments.
Register a petite provider.
for each bean of the given type invoke consumer for each bean name.
Defines the parameters of the request.
Intercepts the given request and prints its execution time. If an exception is thrown it is
Resolves the Java version number from the given version. If the given version is greater than the
Push an int onto the stack.
Check if argument index is valid. Throws exception if index is out of range.
Advice field name.
Advice method name.
Load special method arguments.
Loads the arguments of the given method into the given visitor.
Loads virtual method arguments.
Loads the argument at the given index of the given method info.
Store the argument at the given index in the given method.
Prepare the return value of a method call.
Create a method signature key for a given access method description class name and method name.
Generates instructions to create a new array of the given type.
Stores the given component type into the given method visitor.
Extract the encoding from the given content type. If no encoding is found the default encoding is
Returns true if the given flag set is empty or false if the given set is empty.
Resolve the bearer token from the request header.
Sets the HTTP authentication header and sends an unauthorized response to the client.
Prepares the response for a file download.
Prepares the response for the given file name mime type and size. If no mime type is
Returns all the cookies with the given name or null if no cookies with the given name exist
Reads the request body from a buffered reader and returns it as a string.
Reads the request body from the request input stream.
Stores the context path in the request and servlet context. The path is stored in the request
Store the current context path in a servlet context attribute.
Checks if a GET parameter is present in the given request.
Prepare the parameters for a request. If the request contains an empty parameter it will return null
Copy all parameters from the servlet request to the attributes of the servlet request.
Invoke the body method. If the method throws an exception it will be wrapped in a jsp
Renders the given fragment into a char array. The returned array will be a copy of the
Renders the given fragment into a string.
Invoke all the init methods that match the given invocation strategy.
Call all destroy methods of the bean.
Creates a new instance of the bean.
Injects the bean s parameters into the given param manager. If implicit param injection is enabled
Rewrite the given action path with the given HTTP method. This method is used to rewrite the
Adds a header to the response. If the header already exists it will be replaced.
Create a new props entry in the given map with the given profile and key and value.
Adds a base property with the given key and value. If the key already exists the value
Adds a property to a profile. If the profile does not exist it will be created.
Get a property by profile and key.
Resolve the given value with the given profiles. If the value is not a string it will
Extract profiles into target map. If target is null a new map will be created.
Stream the data up to the next num bits and return the result as an integer.
Hash a password with a given salt.
Checks if the plaintext is a hashed password. The plaintext must be encoded as UTF - 8
Copy all bytes from the input stream to the output stream.
Copy the specified number of bytes from the input stream to the specified output stream.
Parse action runtime.
Resolve action config.
Detect and register an alias for the given annotation values and action definition.
Read action interceptors from annotated element action class or method. If no action interceptors are found null
Read action filters from annotated element action class or method. If no filters are found null is
Read the package action path from the given class.
Read method action path.
Parse method alias.
Create a new action runtime.
Set the date header if the request was modified since the last time it was last modified.
Applies the advice to the given target class. If the target class is not in the cache
Inject target into proxy.
Visit an annotation. This method will return null if the visitor is null.
Resolve the real name for the given json name. If the json name is not in the
Resolve a real name to its corresponding json name.
Lookup the type data for the given type. If the type is not found in the map
Lookup the type data for the given type. If no data is found it will be created
Find subclass type data.
Resolve the json name for the given type and name. The json name will be relative to
Resolve the real name for the given type and JSON name.
Returns the content of the file or null if the file does not exist.
Copy the bootstrap methods to the given buffer.
Sets the major version and class name and returns the index of the new class.
Puts the constant pool into the given output vector.
Puts the bootstrap methods into the given byte vector.
Adds a fieldref to the symbol.
Add a constant methodref.
Adds a constant reference to the constant pool. If the constant pool already contains an entry for
Adds a reference to a constant.
Adds an integer or float to the constant pool. If the constant pool already contains an entry
Adds a constant integer or float to the hash table.
Adds a constant or double to the constant pool. If the constant pool already contains an entry
Adds a constant long or double to the hash table.
Adds a new constant to the constant pool and returns its index.
Adds a constant name and type to the symbol table.
Adds a UTF - 8 string to the constant pool.
Adds a UTF - 8 value to the symbol table.
Adds a new constant method handle entry to the symbol table.
Add a constant with a bootstrap method or invoke it if it doesn t already exist.
Add a constant or invoke a dynamic method with the given name descriptor and bootstrap method arguments.
Adds a constant to the constant pool. If the constant is already in the constant pool it
Adds a constant dynamic or invoke dynamic reference.
Add a reference to a UTF - 8 string.
Adds a constant UTF - 8 reference.
Adds a bootstrap method to the symbol. The method will be called when the symbol is constructed
Add a merged type to the type table.
Returns a hash value for the given name.
Removes all entries from this multimap.
Returns a list of all the values for the given key.
Returns an iterator over the entries in this list.
Returns a list of all the entries in this map.
Increases the capacity of the buffer if it is smaller than the given minimum capacity.
Append a sequence of characters to the buffer.
Visit an annotation on this method.
Visit the end of the chain. This method is called when the end of the chain is
Create the first chain of the chain. This method is called when the chain is first created
Create the first chain of code that delegates to the given target method. The first chain is
Parse a path string into a path object.
Pushes a field onto the end of the path.
Configure servlet context.
Execute the pathref and return the next object in the chain. If the pathref is
Returns an array of all field descriptors sorted by field name. The array will be sorted by
Creates a bean definition for the given name type wiring mode wiring mode and consumer.
Convert a jtx transaction mode to a db transaction mode.
Reads a property from the given source object using the given property descriptor. If the property descriptor
Put all entries in the given map.
Append a buffer to the end of the list.
Writes the contents of the list to the given writer.
Writes the contents of the list to the given output stream.
Writes this response to the given output stream.
Returns the string value associated with the given key or null if the key does not exist.
Returns the integer value associated with the given key or null if the key does not exist.
Returns the value of the given key as a long or null if the key does not exist
Returns the value of the given key as a double or null if the key does not exist
Returns the float value associated with the given key or null if the key does not exist.
Get the value associated with the given key. If the value is a map or a list
Adds a key - value pair to the JSON object. The key must not be null.
Open a folder for reading and writing. The folder will be opened when this method is called
Receive messages from the folder. If no filter is specified all messages will be retrieved from the
Updates the flags for the given email.
Close the given folder if it is opened.
Look up a named parameter by its name. Returns null if no such parameter is found.
Runs the validation action against the given profiles. If no violations are found the method returns false
Adds a violation to the validator.
Sets the MIME type of the raw data. If the extension contains a slash it will be
Set the file name to be downloaded and set the mime type to be the same as the
Sets the target input stream.
Set the target.
Set the target class.
Checks if the target input stream is available and throws a proxetta exception if not.
Create a new instance of the target class and return it as a byte array.
Create a new instance of this class.
Writes the given bytes to the debug folder. If the debug folder does not exist or the
Sets the email address of the sender.
Sets the to address.
Adds a Personal Name and a To address to the email.
Set the recipient addresses that the message should be replyed to.
Sets the Cc addresses to be included in the email. The Cc addresses will be
Creates a plain text message with the given text. The text is encoded using the given encoding
Creates a new email message with the given HTML content.
Adds a header to the response.
Returns the value of a system property or the default value if the property is not set.
Returns the boolean value for the given name. If the name does not exist or the value
Returns the value of the given parameter as an integer. If the parameter is not present or
Returns the long value for the given name. If the name does not exist or the value
Returns the resolved method parameters. If the parameter extractor is not present an exception is thrown.
Serializes a key value.
Looks up an alias in the actions manager. If the alias is not found in the actions
Resolve an alias for the given string.
Resolve a path to an absolute path. If the value is null it is assumed to be
Resolve the alias for the given path and value. The alias will be the alias of the
Returns the last index of the last occurrence of a slash in the given string.
Returns the last index of the last dot in the given string after the last slash.
Returns the index of the dot after the last slash in the given string.
Resolve the schema name for the given type. If no schema name is specified the default schema
Resolve the column descriptors for the given entity descriptor property and naming strategy. The column descriptors are
Initialize the hash table with a new key and a new tweak.
Mix the j - th node into the y - th node.
Perform a DEMix on the given index j and depth of d in the tree.
Schedule a new key to be used for the next iteration of the key schedule.
Initializes the hash table with the given key and tweaks.
Encrypts the given content starting at the given offset in bytes and returns the resulting bytes.
Convert a byte array to an array of longs.
Removes the specified number of characters from the specified string if it is contained in the specified string
Returns the path to the request.
Compress a file.
Compresses a file to a gzipped version.
Ungzip a file.
Reads the contents of a ZIP file and returns the contents as a list of strings.
Unzips the given zip file into the given directory.
Adds a file to a zip output stream.
Adds a file to a ZIP archive.
Returns the field descriptor with the given name. If the field is not found null is returned
Returns the property descriptor with the given name. If the property is not found null is returned
Sets the request bundle name.
Set the session locale.
Gets the session locale. If no locale has been set the fallback locale is returned.
Returns a list of parameters for the given bean name. If the bean name does not start
Add one or more profiles to the list of profiles to be added to the props file.
Get a little endian long from a byte array at a specific offset.
Read data from the input stream into a byte array. If close is true the stream will
Read the label at the given offset. Creates a new label if it doesn t exist.
Get the bytecode offset for a given type annotation index.
Read a bootstrap method for the current attribute.
Inspects the constructors of the class and returns a list of ctor descriptors for each one.
Returns the first ctor descriptor that matches the given arguments or null if none is found.
Gets the request map.
Creates the request map and adds it to the servlet request attribute.
Convert an array to a long array. If the value is a primitive it will be converted
Initialize the servlet. This method is called when the servlet is initialized. This method is called
Search for a file in the file system.
Search for a file in the container and add it to the list of files to be searched
Adds a pattern to the list of patterns to search for. The pattern will be matched against
Exclude files that match the given patterns.
Adds the given path to the list of paths. If the path does not exist nothing is
Returns a list of all the files in the directory.
Initializes the list of files and folders. If the list is empty it will create a new
Returns an iterator over the files in the directory.
Resolve bean wiring mode.
Resolve bean name.
Get a writer for this output stream. The writer will be closed after this method returns.
Get the servlet output stream.
Returns the class name of this type.
Returns the constructor descriptor for the given constructor.
Returns the method descriptor for the given type and the given argument types. The method descriptor is
Get method descriptor.
Append the descriptor to the string builder.
Returns the number of elements in the list.
Get the number of arguments and return the number of arguments and return the number of arguments and
Sets the exception to be rolled back only if the transaction is not currently active.
Commits or rolls back the current transaction or rolls back the current transaction if the current
Rolls back all resources.
Request a resource of the given type. If the operation is in a transaction it will be
Pops the name off the top of the stack and writes it to the output.
Writes a string to the output stream.
Writes the Unicode code point c to the output stream.
Writes a character sequence to the JSON stream.
config set parsing error log level
Sets the start and length of the current region.
Returns true if the value contains the include string.
Register a new pseudo function.
Lookup a pseudo function by its name.
Visit a class. This method is called by the visitor to initialize the proxy class hierarchy.
Visit an annotation. If the annotation is visible it will be returned. If the annotation is
Make a static init block.
Makes a proxy constructor.
Process the super methods of the target class. This method is called when the target class is
Returns the index of the last number in the range [ low high ) or - 1 if
Adds the prefix and suffix to the given string. If the string is not enabled returns the
Replace asm instructions in the given class file.
Collect all the attribute prototypes from the first field writer to the last method writer.
Register a new type with the registry.
Looks up the SQL type for the given class or any of its superclasses and interfaces.
lookup sql type.
Create a proxy info object for SOCKS4.
Creates a proxy object for SOCKS5.
Creates a new proxy info object with the specified HTTP proxy settings.
Returns the total number of thread transactions in the thread stack.
Returns the total number of threads with the given status.
Adds a transaction to the stack. If the stack does not yet exist it will be created
Continue a new transaction with the given source and destination transaction. If the source and destination transaction
Returns the resource manager for the given resource type or null if there is no resource manager.
Creates a proxy object for the given target class. If the target class is already defined it
Append a method name to the path. The method name must not start with a dot.
Aligns text left and pads it to the given size.
Converts a string to camel case.
Format a string into a paragraph of the given length. If break on whitespace it will break
Convert tabs to spaces.
Escapes a string so that it can be used as a value in a Java string.
Unescapes a Java string.
Returns a bean of the given type.
Gets a bean by its name.
Initializes the bean definition.
Invokes a provider.
Add a bean to the container.
Sets the value of a bean property. If the bean does not exist it will be created
Get a bean property by it s name.
Shuts down this bean manager. This method is called when the bean manager shuts down
Resolve the parameters of a method or constructor.
Method called after the body tag is parsed. This method is called after the body tag is
Returns the value of the property. If the property has a macro it will be resolved.
Mark end of the tag. If implicitly close tag is detected an error will be thrown.
Creates an element node with the given tag name.
Removes the last child of the given parent node if the text node is empty.
Get the query string. The query string is the sql template and the query string is the
Get action class name.
Calculates the number of elements to move from a given position to a given position in a given
Replaces all occurrences of sub with with.
Returns a copy of the string s with all occurrences of sub replaced with with.
Replaces all occurrences of the specified chars in the string s with the specified chars in with.
Replaces the first occurrence of sub with with with.
Returns a copy of the string with the first occurrence of sub replaced with with.
Replaces the last occurrence of sub with with with.
Returns a copy of the string with the last occurrence of sub replaced with with.
Removes the first num characters from the string s and returns the result as a new string.
Removes all occurrences of the specified character from the end of the string. If the string is
Returns true if all of the strings in the array are empty.
Returns true if all of the strings in the array are blank or false if any of the
Convert an object to an array of strings.
Changes the first character of a string to upper case or lower case.
Returns a new string with all the characters in the given string converted to title case.
Compress a string by removing all occurrences of the specified character from the beginning of the string.
Returns true if the source string starts with the substring in the sub string ignoring the case.
Returns true if the string ends with the specified character. If the string is empty returns false
Count the number of occurrences of sub in source ignoring case.
Checks if two strings are equal ignoring case.
Returns the index of the first non - whitespace character in the specified range of the specified string
Strips the first occurrence of the specified character from the beginning of the string if it is
Strips the trailing character from the end of the string if it is equal to c.
Strips the specified number of characters from the beginning and end of the specified string.
Strips the first occurrence of the specified character from the specified string.
Strips the first occurrence of the specified character from the specified string.
Crops all the given strings to the specified number of characters.
Trim the left whitespace from the beginning of the string. If the string is longer than the
Trims whitespace from the right side of the string.
Returns the index of the specified region of the specified string starting at the specified offset.
Joins the given collection into a string with the given separator. If the collection is null or
Joins an array of objects into a string with the specified separator. If the array is null
Convert the source string to the new charset with the given name. If the new charset is
Returns true if the character at the specified index is equal to the specified character.
Surround the given string with the given prefix and suffix if it does not already exist.
Adds a prefix to a string if it does not already exist.
Adds a suffix to a string if it does not already exist.
Cut the string to the first occurrence of the given substring in the given string.
Cut the string from the first occurrence of the given substring.
Cuts the prefix from the beginning of the string if it is present.
Cut a suffix from a string. If the string does not end with the suffix the string
Cut the given string surrounding the given prefix and suffix. If the given string does not have
Inserts the specified string at the specified offset. If the offset is greater than the length of
Repeats the source string by the given number of times and returns the resulting string.
Reverses the characters in the given string.
Returns the longest common prefix between two strings.
Finds the common prefix of the given strings.
Shortens a string to a certain length and appends a suffix to the end of the string
Converts a string to upper case.
Removes the quotes from the given string.
Converts a byte array to a hex string.
Returns the bytes of the given string as a byte array. If the encoding of the string
Detect the quote character in the given string.
Visit an enum.
Visit an annotation. If the annotation visitor is null null is returned. If the annotation visitor
Register a new entity type. If the type already exists it will be replaced. If the
Register an entity with the database. If the force flag is set the entity will be removed
Removes an entity descriptor from the registry. If the descriptor does not exist it will be created
Create a new instance of the given entity type.
Set the target class to be used for the factory.
Inject target into wrapper.
Lookup all annotated properties for a given type.
detect database and configure db oom.
Closes the output stream and flushes any buffered data to the underlying output stream.
Writes a byte to the buffer.
Invalidate the session if the request has a session id. If the request has a session id
Get the encoded name of the message.
Returns the contents of the buffer as a byte array. If the buffer is larger than the
Write the mail to a file.
Writes the mail to the given output stream. The output stream will be closed when finished.
Appends the argument type to the argument description.
Prepends the first argument to the argument description. The first argument is the number of the
Change the type of the given descriptor to the given type. This is the type of the
Adds text to the text field. If strip is true the text will be stripped from the
Register a converter for the given type.
Lookup a converter for a given type.
Select nodes that match the given query.
Applies the given selectors to all nodes in the given collection and returns a list of nodes.
Process the given selectors and add the resulting nodes to the given list of results.
Returns the first node that matches the given query or null if there are no nodes.
Walks the descendants of the given nodes and adds them to the result list.
Walks through the tree of nodes matching the given selector and adds them to the given result
Add a selector to the result.
Unpacks a string into a char array.
Refills the buffer if it is null.
Returns a page of data.
Removes the select statement from the given SQL string.
Removes the from part of the given SQL statement.
Removes the last order by clause from the given SQL query.
Decodes the specified HTML string into a new string. The returned string is a copy of the
Detects the name of the given input starting at index ndx. If the input is
Build the order clause for the given SQL statement column and ascending flag.
Build a page of results from a SQL query. This method will remove the select clause from
Resolve the columns and properties for the given entity type.
Returns the column descriptor for the given column name or null if the column name is null.
Returns the column descriptor for the given property name or null if the property name is null.
Returns the property name for the given column name or null if the column does not exist.
Returns the column name for the given property name or null if there is no such column.
Returns the value of the id property of the given object or null if the property is not
Sets the id property of the given object to the given value.
Returns the key value of the given object.
Appends a string to the end of the band.
Sets the index of the array. If the new index is greater than the current index the
Expands the array to a new array of length at least num << index.
Calculates the length of the array.
Create a mixing message.
Creates a scoped proxy for the given bean definition. If the bean is not scoped this method
Initializes the file cache by listing the files in the directory and updating the file cache with the
Returns true if the given file is a file and false if it s not a file.
Watch a file. If the file does not exist it will be created. If the file
Starts polling for the specified number of milliseconds. If the timer has not been started yet it
Callback method to be called when a file or directory changes are detected.
Adds an enumeration to the list. If an enumeration already exists an illegal argument exception is thrown
Returns the number of bytes required to store the field info.
Puts the field info into the given byte vector.
Creates a new target instance with the given value and scope. The target instance will be created
Writes the given value to the given injection point s target property.
Decorates the page content with the given decora content and writes the result to the writer
Parse the given page content with the given tags and decora tags.
Writes a page with the given tags to the given writer. This method is called by the
Writes a region of the specified tags to the specified writer. The page content will be written
Start listening for incoming connections.
Run a process and return its result.
Get the store for the IMAP connection. This method is overridden by subclasses to provide additional
Create a gzip response stream.
Initializes the template with the given template data. The template data is updated with the number of
Append the column name to the query.
Adds a new rule to the list of rules. If the rule already exists it will be
Applies the filter to the given value and returns true if the value should be included in the
Check if the value should be included in the result. If it should be included in the
Check if the given value should be included in the result set.
Get the pseudo class name.
Adds all elements in the specified collection to this set.
Finds the insertion point of an element in the sorted set.
Binds an action config for the given annotation type.
Register new action configuration.
Looks up an action config by its type or annotation.
Adds an action config to the list of available actions and passes it to the consumer.
Setup system mail properties.
Validates the given value against this field. The value must be an instance of this field.
Finds the last table in the tree that has the same name as the given node.
Fixes the elements of the Foster.
Registers the session beans with the given http session.
Gets the session beans map.
Initialize the proxy class. This method is called when the proxy class is instantiated. This method
Adds the name of the init method to the list of init methods to be called.
This method is called at the end of the application. It is called when the application is
Adds a new value to the configuration.
Adds a new key value pair to the list if it is not already present in the list
Adds a value to the hash map. If the operator is copy then the value will be
Get the class name from a typedesc2 descriptor.
Get the type reference name from a type description.
Returns the typeref for the given type.
Adds all of the given consumers to the end of the current consumer list.
Create a collection of the given length.
Convert to single element collection.
Convert the given value to a collection of objects.
Convert the given collection to a collection of objects.
Adds a line number to the line numbers array.
Visit this label and its line numbers. If visit line numbers is true the label is visited
Puts the value at the given offset in the given instruction vector. If the flags are resolved
Adds a forward reference to the stack.
Mark a subroutine.
Compare two strings and return the result as an integer array of the first occurrence of each digit
Fixes the accent of the given character. If the given character is already in the accent
Puts a byte value into the vector.
Put 1 - byte value into vector.
Puts a short value into the buffer.
Put a 12 - byte value into the vector.
Put 1 2 3 or 4 bytes into the vector.
Put an int value into the vector.
Put 1 2 or 3 bytes into the vector.
Put a long value into the vector.
Puts a byte array into the buffer.
Enlarges the buffer by the specified number of bytes. If the buffer is larger than
Authenticates the user via HTTP session.
Authenticate user via token.
Authenticates the user via basic auth.
Find the default message for the given key. If no message is found null is returned.
Gets the bundle with the given name locale and class loader.
Returns the element at the given index in the given array or null if there is no element
Sets the id value for the given entity in the given descriptor.
Save the given entity to the database. If the entity already exists it will be replaced.
Update the given entity in the database. If the entity does not exist it will be created
Update the property of the given entity with the new value. If the property does not exist
Update the property of the given entity with the given name. If the property does not exist
Find an entity of the given type with the given id.
Finds an entity by its property name and value. If the property does not exist it will
Find one entity from the database. If no entity is found a new entity will be created
Delete an entity from the database by it s id.
Delete an entity from the database by its id. If the entity does not exist it will
Count the number of entities of the given type.
Increases the value of a property of a given entity by the given delta.
Decreases the value of a property of a given entity by the given delta.
Find all entities that are related to the source object.
Returns all entities of the given class.
Removes all of the attributes from the map.
Returns a hash set containing all of the attributes in this hash map.
Puts a new value for the given key. If the key already exists the previous value is
Removes the value associated with the specified key. If no value is associated with the specified key
Get the stack trace of the current exception. If the stack trace is larger than the current
Get the stack trace of a throwable.
Get a stack trace chain from a throwable and all of its causes.
Get the exception chain from the given throwable.
Returns a string representation of the throwable s stack trace.
Returns a string representation of the throwable. The stack trace is printed to standard output.
Build a message from a message and a throwable. If the throwable is null the message is
Unwraps the given throwable and returns the unwrapped throwable. If the wrapped throwable is an
Register a scanner as a consumer.
Adds a component class to the madvoc container. If the component class is not valid
Returns the system class loader. If the current thread is a privileged thread the thread will
Get a resource as an input stream.
Get a resource as an input stream. If the resource is not found null is returned.
Get class as input stream.
Get class as stream.
Adds a new route chunk to the list of children.
Find or create a child chunk with the given value.
Parses the request into this request object. The request object is expected to be a multipart request
Convert the given value to the given destination type and component type.
Invokes the given setter on the given value using the given bean property bp.
Sets the value in the given array at the given index. If the array does not exist
Creates a new instance of the given property. If the property is silent it will throw a
Extract the type of the property.
Remove the auth cookie from the request and add it to the response.
Starts the authentication session. This method is called when the authentication token has been set in the
Converts a local date to a date in the local time zone.
Converts a local date time to a gregorian calendar.
Define a proxy for the given target class. The proxy will be created with the given target
Adds a check to the list.
Resolves a validation context for the given class.
Adds all checks for the given class.
Collects all annotation checks for a given property.
Collect annotation checks.
Copy the default check properties from the annotation to the dest check.
Encodes a URI component from the source string using the given encoding and uri part.
Encodes the given string with the given encoding and returns the result as a new string.
Encodes the scheme component of the URI with the given encoding and returns the resulting string.
Encodes the host component of the URI with the given encoding.
Encodes the port component of the URI with the given encoding.
Encodes the path component of the URI with the given encoding.
Encodes the query component of the URI with the given encoding.
Encodes the given query parameter with the given encoding.
Encodes the fragment component of the URI with the given encoding and returns the result as a new
Inspects the properties of the class and returns a hash map containing the names of the properties
Returns an array of all property descriptors sorted by their name.
Returns an array of all the cookies in the response.
Unzips the response body if the content encoding is the same as the response header.
Close the HTTP connection associated with this response.
Returns true if the given scope is a member of this scope set.
Encrypt the given content with this cipher and return the result as a byte array.
Decrypts the given encrypted content and returns the decrypted content as a byte array.
Convert a map to an object of the specified type.
Convert a list of objects into a list of objects of the given type.
Sets the value of the given property on the given target object. If the value is null
Generate a map from the given map. The key and value types must be the same.
Compares this column with the given object and returns - 1 if the object is the same as
Sets a default header for the browser. If the header already exists it will be overwritten.
Sends a request to the server and returns the response. This method is not thread - safe
Sends the request to the client.
Adds the default headers to the given request if they are not already present.
Read the cookies from the response and add them to the cookies map.
Adds the cookies to the given HTTP request.
Sends an email to all recipients of the given email address. Returns the message id of the
Sets the subject of the given message to the given mime message. If the subject encoding is
Sets the sent date of the given message.
Sets the headers of the given email with the given data and the given mime message to the
Sets the people and the reply - to addresses for the given email with the given data.
Sets the recipients for the given message.
Adds the body data to the email.
Sets the content of the given part to the given part to set.
Creates the MIME body part for an attachment.
Get the content type from the given header string.
Save a result set to the cache.
Close all the result sets in the database.
Close the query and release any resources associated with it. If an exception is thrown it will
Close the connection and detach the query from the session. If an exception is thrown it will
Sets the number of rows to be fetched in the current row of the result set.
Sets the maximum number of rows in the result set.
Execute the update query.
Execute the query and return the number of rows affected. If the close parameter is true the
Get the generated columns from the database.
Get the query string for this statement. If debug mode is enabled the query string is returned
Creates a proxy of the given target object. The target object must be an instance of the
Creates a collection from the elements of the given iterator. The elements of the given iterator are
Construct a stream from an iterator.
Compares two objects according to the comparators in the order they were provided.
Set the default wiring mode.
Print a message at the given level with the given message and throwable. If the log level
Get the class name of the caller. This method is used to shorten the class name of
Shorten the class name.
Sets the types to exclude from the JSON serialization.
Serializes the given object to the given appendable.
Serializes the given object into a string.
Clone an object via serialization.
Write an object to a file.
Reads an object from the given file.
Convert an object to a byte array.
Convert byte array to object.
Resolve the mapped types table names for the given entity types.
Create the table names for the given types.
read the value of a column from the result set and return it as an object.
Cache the result of a query. This method will cache the result so that it can be
Resolve the provider definitions for the given type and name.
Convert table name to entity name.
Returns true if the connection is valid. If the connection is not valid it returns false.
Renders the specified view.
Locates the target for the given path. If the target does not exist null is returned
Get the writer for this response. This method is called before the response is written to the
Returns the servlet output stream. This method is called before the servlet response is written to the
Writes the content to the response.
Sets the content type. If the content type is already set it will be buffered. If
Prints the given string to the output stream. If the output stream is buffer based this method
Login via basic auth or via request params.
Returns the token as a json object.
Login via basic auth.
Create a container file from the given url.
Creates a directory if it does not already exist. If it does exist it will be created
Creates a directory if it doesn t already exist. If it already exists it is just return
Copies a file if it exists and is a directory. If it is a file throws an
Copy a directory from src to dest. If the destination is a directory the source is copied
Move file from src to dest dir. If dest dir does not exist it will be created
Move a directory from src to dest. If dest is a directory it will be moved to
Delete all files in a directory and its sub - directories. If the directory does not exist
Read UTF - 8 characters from the given file. The file must be a UTF - 8
Read chars from a file and return as char array.
Write a set of characters to a file in the specified encoding.
Write a string to a file.
Append a string to a file.
Read a number of bytes from a file. If count is greater than or equal to zero
Writes a byte array to a file.
Appends the contents of the given byte array to the given file. If the file already exists
Copies the source file to the destination. If the destination is a directory the source is copied
Deletes a file or directory. If the destination is a file it will be recursively deleted.
Creates a temporary directory with the given prefix and suffix. If the directory already exists it will
Checks if the given file is binary or not.
Checks that src dir is a directory and that dest dir is a copy of src dir.
Checks if file is copied from src to dest. If not creates parent directories if necessary.
Prints the usage string for the given command.
Resolve action method.
Register a new action with the given class action method name and action definition.
Registers an alias for the given path.
Moves to the next item in the list.
Creates a new char array from the given char array starting at the given offset and length.
Execute the proxy.
Checks if the input string matches the uppercase string. If the input string is longer than the
Returns a sequence of characters from the input starting from the given index to the given index.
Returns a list of urls for the given class loader and class. If no class loader is
Sets the BCC addresses for the email.
Register a serializer for the given type. The serializer will be used to serialize the given type
Lookup the serializer for the given type.
Parse the request stream into a multipart request input stream.
Returns the value of the request parameter with the given name or null if there is no such
Returns the values of the request parameter with the given name or null if there is no value
Returns the uploaded file. If the uploaded file does not exist null will be returned.
Returns a request parameter as an array of file objects.
Initializes the filter with the given configuration. If no configuration is specified the default configuration is used
Parse the template and append it to the sql builder. This method is used to parse the
Finds the end of the template string starting at the given index.
Count the number of escapes in the template starting at the given index.
Build a query string from a multi query map.
Parses a query string into a map of query parameters and values.
Prepare header parameter name.
Extracts the media type from the given content type.
Render the given node to HTML.
Render the given node as an inner HTML string.
Configure with a servlet context.
Reset the state of this object.
Sets whether or not the JSON parser should be lazy - loaded.
Replaces the target type with the mapped type if there is one. If there is no mappings
Parses the given JSON string as a list of objects of the given type.
Parse the given JSON string as a map of the given type.
Resolves a lazy value. If the value is a supplier it will be resolved using the supplier
Skips the next object in the input.
Parse a string.
Parse the content of a quoted string and return the result as a new string.
Parse a unicode character from the input buffer.
Parse the content of an unquoted string.
Parse a number from the input.
Parse the array content into an object of the specified target and component types.
Create an empty ctor.
Create a simple method wrapper.
Resolve raw type name.
Resolve a reference from a property value.
Resolve a list of references from a method or a constructor or a list of references.
Read all references from annotations on a method or a constructor.
Build the default references for the given executable method or ctor.
Build the default reference for the given property descriptor.
Removes all duplicate names from the given array of references.
Converts a string array of references to a reference array of bean references.
Convert an annotation value to a list of references.
Run joy with the given consumer. The consumer will be called with the joy runtime
Finds a method with the given name in the given class. If the method is not found
Finds a constructor of the given type that is assignable to the given parameter types.
Resolve all interfaces of the given type.
Compares two class arrays for equality. The first array must have the same number of parameters.
Forces access to the given object. If the object is privileged the object will be
Create a new instance of the given class with the given parameters.
Get the superclasses of the given class.
Returns the child class of the given parent class or null if the given instance is null.
Returns the jar file of the given class or null if the class does not exist.
Sleep for the specified number of milliseconds. If the current thread is interrupted it will be interrupted
Suspends the current thread. If the current thread is interrupted it will be interrupted.
Wait for the given object to complete. If the object is interrupted the thread will be interrupted
Creates a thread factory that creates a new daemon thread with the given name and priority.
Returns the value of the supplier. If the supplier is not initialized this method returns null.
Visit a parameter.
Visits the given annotation descriptor and if the visitor is not null returns the visitor for this annotation
Visits an instruction on a field. This method is called by the visitor when an instruction is
Visit a method instruction. This method is called by the visitor to add an instruction to the
Visit a dynamic method invocation.
Visits a jump instruction with a given label. If the visitor is null then the instruction is
Visit a multi - dimension attribute.
Visits a try catch block.
Write properties to a writer. The base and profile properties will be written to the writer.
Process the input stream. The input stream is copied to the output stream and the output stream
Moves to the next element in the list and returns it. If the list is entity aware
Moves to the next item in the list if the list is the last item in the list
Joins the given arrays into a new array of the same type as the input arrays.
Joins the given arrays into a new array of the given type. The resulting array will be
Resizes a buffer to a new size and copies the contents of the buffer into it.
Appends a new element to the end of the given array.
Removes the specified component from the specified buffer starting at the specified offset and ending at the specified
Returns the index of the specified value in the specified array or - 1 if the value is
Returns the index of the given value in the given array or - 1 if the value is
Returns the index of the specified sub - array starting at the specified index in the specified array
Enable xhtml mode.
Parse the given content into a Lucene document. The content is assumed to be UTF -
Parse the document using the given parser.
Compute the max stack and local.
End the current basic block with no successor.
Collect attribute prototypes.
Injects the given object in the context of the current context.
Register a new pseudo class.
Look up a pseudo class by its name. If no pseudo class is found an exception is
Invoke the given action request in the thread pool. If the thread pool is null an exception
Returns a list of property names for the given bean type and whether or not they are declared
Visit all the properties in the source object.
Returns true if the rule should be included in the result. If the rule does not match
Resolves the injection point for the given class.
Read the parameters from the filter config and assign them to the target object.
Sends the bundle file to the servlet response.
Lookup a file by its bundle id. If the bundle id is a mirror the bundle id
Look up the gzip file for the given file. If the file does not exist create it
Register a new bundle. If the bundle id is null or empty the bundle id will be
Creates a digest for the given source string.
Creates a bundle with the given id and sources. If the bundle already exists nothing is done
Deletes all the files in the bundle folder.
Fix relative urls.
Creates an update statement for the given entity and column reference. The column reference must be a
Create table ref name.
get the db session.
Convert the given value to a single element array.
Parse the given signature and return a map of the generic names to their corresponding string representation.
Resolve the injection points for the given type.
Returns true if the given property type matches the ignored property types. If the include flag is
Open a new connection for the current transaction.
Open a transaction. If the transaction is active it will commit the transaction. If the transaction
Closes the current transaction. If the current transaction is not active a new transaction will be created
Commits the current transaction. If the transaction is not active this method will throw an exception.
Rolls back the current transaction. If the current transaction is active the transaction will be rolled
Create a new properties object from a properties file.
Create a new properties object from a string.
Load properties from a string.
Returns a new properties object that contains only those properties whose keys start with the given prefix.
Create a new instance of properties from the classpath.
Returns the value of the specified property or the default value if the property does not exist.
Resolve all variables in the given properties.
Resolve the value of the given key in the given map. If the value is not found
Resolve the scope for the given type and method name.
Get the transaction mode for a method.
Registers the annotations for this transaction.
Read the transaction annotation values for the given method.
Visit the given node and return true if it should be included in the result.
Checks if the given node is an element node.
Returns true if the node should be included in the result set and false if it should be
Unescapes the given value. If the value does not contain the string the original value
Build a list of jre packages for the given java version number.
Clone this node to the given destination node.
Detaches this node from its parent.
Adds a child node to the end of this node.
Inserts a child node at the given index.
Inserts a new child before the given child.
Inserts a new child before the given child.
Inserts a new child node after the given child node.
Inserts a new child node after the specified child node.
Remove all childs from this node.
Find the child node with the given name.
Returns the child nodes that match the given predicate.
Returns true if this node is a leaf node and false if it is a leaf node.
Initializes the child element nodes.
Initializes the sibling names of the current node.
Initializes the child nodes of this node.
Changes the owner document of the given node and all of its children.
Returns the previous sibling node with the same name or null if there is no such sibling.
Returns the text content of this node.
Get the inner HTML of this element.
Visit all the children of this node.
Returns the CSS path of this node.
On decora tag.
on id attr start.
Creates a new decora tag and adds it to the list of tags to be added to
Add a proxy aspect to the proxetta.
Adds a root package to the list of packages and mappings.
Adds the root package of the given class to the mapping.
Find the root package for the given action path.
Resolves the validation message for the given violation.
Removes duplicate names from the list of names and returns a new list with the removed names.
Add a file pattern to the list of patterns that should be used to search for properties.
For each target in the chain invoke the consumer for each target in the chain.
For each target and injection point in the given scope invoke consumer for each target and injection point
For each target and out invoke the consumer for each target and out in the given scope.
Extract the values of the target parameters.
Creates the targets for the given action and method. If the method has no parameters then the
Create action method argument.
Session created event handler. Registers the session to the map and notifies all registered listeners.
Remove the session from the session map and notify listeners.
Adds an object to the end of the array.
Adds all elements of the given array to the end of this array.
Remove the object at the given position. If the object is a map it will be converted
Resolves the target for the given request and result value. If the value is empty the target
Sends an error to the client if the target is not found. If the response is committed
Method to convert an object to a string. If the object is not an array it will
Add a filter to the router. The filter will be applied to all routes in the router
Get the pseudo function name.
Resolve the property injection point for the given class.
Create a socks4 proxy socket.
Returns the number of attributes in this list.
Returns a set of all the action results. The results are sorted by the number of times
Returns true if the specified character is equal to one of the specified characters in the specified sequence
Returns the index of the first occurrence of the match in the source string starting at the given
Returns the index of the first occurrence of the specified match in the specified array or - 1
Adds the command line arguments to the command line.
Adds an environment variable to the command line. If the environment variable already exists it will be
Run the command and return the exit code.
Invoke a listener of the given type.
Copy from another frame to this one.
Get the abstract type from the given buffer at the given offset in the given symbol table.
Sets the input frame from the api format.
Returns the index of the local variable in the output array or - 1 if the index is
Sets the local index and abstract type to the given index and abstract type.
Pushes an abstract type onto the stack.
Pushes the abstract type at the top of the stack. If the abstract type is long
Pop an element off the top of the stack.
Pops the last descriptor character from the stack. If the last descriptor character is a string
Adds a type to the list of initialized types. This method is called when the list is
Returns the initialized type for the given abstract type in the given symbol table. If the abstract
Puts abstract type into the given output vector.
Removes expired entries from the cache and returns the number of entries that were removed.
Visit a module.
Visit an outer class.
Visit an annotation. If the visitor is null null is returned. If the visitor is not
get thread session. create new session if it doesn t exist yet and return it.
Close the current thread session.
Creates the array of actions to be executed.
Invoke the action method. If an action handler is defined the action handler will be invoked.
Reads the request body from the servlet. If the servlet fails to read the request body from
Calculate the first item index of a page.
Calculate the first item index of a page.
Returns true if the given value is a multiple of the two numbers.
Convert a char array to a byte array.
Returns the index of the first occurrence of the match in the source array or - 1 if
Resolve node name.
Resolve attribute name.
Load properties from a file.
Load properties from a file.
Load the properties from the given input stream. The input stream will be read as UTF -
Load properties from a map.
Load properties from a map.
Load properties from classpath.
Returns the value associated with the given key or the given default value if the key is not
Sets the value of a property. If the profile is null the base property is used.
Extract the properties from the data source to the target map.
Extract the properties of the given profiles into the given target map.
Extract all sub - properties from the current profile to the given target map. Sub - profiles
Returns a map of the active profiles with the given prefix. If the prefix is null then
Adds a inner map to the map.
Resolve the active profiles.
Get the names of all profiles in the system. The names of the profiles are returned in
Get the profiles that match the given property key name or wildcard property key name.
Adds a property injection point to the list of property injection points.
Adds a set injection point to the list of injection points.
Adds a method injection point to the list of method injection points.
Adds the init method points to the list of init method points. If the list is null
Adds the destroy method points to the list of destroy method points. If the list is null
Get the target class from a proxy class.
Inject target into wrapper.
Retorna o type de la classe wrapper. Diese la classe wrapper
Find the field descriptor for the given field name. If the field is not found null is
Get the type of this field.
Resolves the key type of this field.
Resolves the type of the component.
Returns the JSON representation of the given object.
Creates a JSON response with an error message and a stack trace for the given exception.
Resolve http method from method name.
Matches a string against a pattern. The pattern must have the same length as the string.
Resolve loading.
Loads a class from the classpath. If the class is not found an exception is thrown.
Returns the URL of the named resource. If the resource is not found null is returned.
Wait for the lock to be released. If the lock is already released this method will block
Detect annotation type.
Build an injection point from an annotation value and a property name and a madvoc scope
Visit this node.
Returns an array of urls for the given class loader and class. If no class loader is
Sets the bean.
Update the bean. If the bean is a supplier it will be set to the supplier s
Loads the property descriptor. If the update flag is true the property descriptor will be updated.
Connect to the database and configure the database oom. This method is called when the database
Adds an iterator to the end of the list. If the list already contains the given iterator
Print the jodd logo.
Stop the database and petite threads.
Create a socket with the given host port and connection timeout. If connection timeout is less than
Create an SSL connection.
Get the default SSL connection.
Create a socket factory based on the proxy type and connection timeout. If the proxy type is
Creates a random string of the specified length.
Creates a random string of the specified length with the specified start and end characters.
Generate a random string of the specified length using the specified ranges.
Creates a new instance of the given target type.
Injects the given value into the given target object using the given property descriptor.
Convert the given value to the given target type.
Visit the given service and provide the given providers. This method is called by the visit method
Returns the default implementation.
Adds a value to the map. If the value already exists the old value is returned.
Get all method descriptors sorted by method name.
Resolve an IP address from a hostname.
Get the IP address as an integer.
Checks if the input string is a valid IP address.
Resolve the host name from an IP address.
Downloads the content of the given URL into a byte array. The content is read from the
Downloads a string from the given URL using the given encoding and returns the result as a string
Downloads a file from the given URL to the given file object. The file object will be
Connects to the given host and port and returns a socket object that can be used to read
Connects to the given host and port with the given connection timeout. If the connection timeout is
Get the index of a primitive class name.
Load a class with the given name using the given class loader. If the class name is
Load array class by component type.
Shuts down the bean manager. This method is called when the bean manager is shut down
Returns a binary search implementation for the given array.
Search for an element in an array using a binary search algorithm.
Exclude the given rules from the result. The rules will not be included in the result.
Includes the given strings in the order they appear in the source file.
Includes all bean properties of the given type as the given template.
Set the tag to start at the given index.
Registers a component with a consumer. The consumer will be called when the component is registered.
Resolve column db sql type.
Preprocess the given SQL string.
Creates a new default result set mapper for the given result set.
Find the generated key of the given type.
Populate the generated keys of the given entity with the generated keys of the given entity.
Creates a new wrapper bean.
Sets the named parameters to the given bean.
Adds a map of named parameters to the query. If the map is null the query is
Sets the specified objects in this queue.
Inserts a new chunk after the given one.
Lookup the descriptor for the given entity. If the descriptor is not found an exception is thrown
find table descriptor by column ref.
Returns the table name for the given table reference. If there is no table alias for the
Resolve the class of the given object. If the object is already a class it will be
Append missing whitespace to the given string builder. If the output string is longer than num spaces
Returns an enumeration of the file parameter names in the request.
Include the specified page in the servlet request and response. If the page does not exist it
Gets the servlet path and query string from the given http servlet request.
Returns the URI of the servlet request. If the servlet request does not include the URI of
Resolve the parameter names for the given method.
Start the application. This method is called when the application is started. This method is called
Shuts down the Petite instance.
Adds a subject to the email.
Filter by message id.
Adds a from address to the email message.
Add a to recipient address to the email. The filter will only return emails that have been
Add a CC recipient to the email.
Add a bcc recipient to the email.
Add a flag filter to the query.
Adds a flag to the list of flags to be used in the email.
Filter by received date.
Filter by sent date.
Add a size filter to the query.
Add an AND filter to the query.
Add an or filter to the query.
Add a not filter to the query.
Concatenate the given term with the current term.
Encodes the given byte array into a base32 string.
Returns true if gzip is eligible for the given request.
Validates the given object against the validation context. The target object must be an instance of the
Validates the given object against the given name. If the target object does not have a property
Adds a profile to the list of enabled profiles. If no profile is currently enabled nothing is
Add enabled profiles to the list of enabled profiles. If the list is empty nothing is done
Check if a list of profiles matches.
Parses the request body into an object of the specified type.
Returns the milliseconds since January 1st January 1st January 1st January
Adds the given julian date to this date and returns the result as a new date.
Subtracts the given julian date from this date and returns the result as a new date.
Sets the integer and the fraction to the given value.
Emits a comment at the given position.
Print an error message.
Creates a hash from the given password.
Derive a PBKDF2 key from the given password using the given salt iterations and bytes
Converts a hexadecimal string to a byte array.
Resolve the provider definitions for the given type and name.
Sets the name of the attachment.
Sets the content id from the name if missing.
Resolves the content type. If no content type is specified the default content type is returned.
Parse the type of the given signature and return the offset to the beginning of the signature.
Compute the number of attributes in the symbol table. This is the size of the symbol table
Set the attributes of the node.
Decodes the given base64 string using the given encoding and returns the result as a new string
Decodes the given query string using the given encoding.
Start the database. This method should be called at the beginning of the database initialization process.
Check if connection provider is available and log info if it is enabled.
Visit a method. This is the default implementation of the visitor. It is called by the
Visit the end of the current node.
Create a new method signature.
Convert an array of objects to a CSV string.
Converts a line of text into an array of strings. If the line contains a field separator
Resolve ctor injection point.
create advice class reader.
Get cached advice class reader.
Encrypt the given string using UTF - 8 and return the result as a byte array.
Decrypt the given string using the given key. The key will be replaced with the original value
Returns the logger with the given name. If no logger with the given name exists a new
Sets the name.
Create a new action request.
Creates a new wrapper bean.
Destroy a bean. If the bean is destroyable it will call the destroy methods.
Shuts down the bean manager. This method is called when the bean manager is shut down
Get the list of messages from the target folder. If the target folder is null then all
Entry point for the clustered service. This is the entry point for the clustered service
Run the reporting loop.
Print an error message to the standard out.
Print a rate of messages per second bytes per second total number of messages and total bytes.
Maps an existing file to a read - only buffer.
Close the stream.
Perform the next batch of work in the state machine. The number of work is returned.
Returns the current position in the log. The position is relative to the end of the log
Inserts a message into the queue. If the queue is full the message is appended to the
Append padding to the current message.
Close the session.
Polls for error response. Returns null if there is no error.
Stop a replay.
Print an event that indicates that an image has been available to the client.
Print unavailable image event.
Create a reader that reads the send channel status for a given channel.
receive channel status.
Sets the limit of the number of elements in the buffer. The limit is the number of
Appends the contents of the specified buffer starting at the specified offset and length to the end of
Polls the subscription for the next message in the queue and returns the number of messages received
Map a loss report in the specified AERON directory to a byte buffer.
Creates a snapshot of the current state of the stream map.
Create a default header buffer with the given session id stream id and term id.
Add a key to the flyweight message. The flyweight key length is the number of
Creates a flyweight label buffer from the given label buffer and label offset and label length.
Sends a CONNECT request to the Aeron server.
Try to send a CONNECT request to the Aeron server.
Sends a close session request to the target.
Sends a start recording request to the specified channel with the specified stream id source location correlation id
Sends a stop recording request to the specified channel with the specified stream id and control session id
Adds a replay request to the buffer.
Sends a stop replay request to the broker.
Enqueue a list recordings request.
Offer a list of recordings for a uri request.
Enqueue a list recording request.
Extend a recording with a specific source location and control session id.
Gets the current recording position.
Offer a stop position request.
Enqueue a list recording subscriptions request.
Returns true if the given channel matches this tag. If the channel does not have a tag
Returns the destination address for the given channel.
Returns a string representation of this message.
Adds a destination to the list of available destinations.
Insert a packet into the rebuilder. This method is called when a new packet is received
Find a control toggle counter.
Adds a parameter to the request. If the parameter already exists the old value is returned.
Returns the channel tag or null if there is no channel tag.
Returns the entity tag of this tag set or null if the tag set does not exist.
Adds a session id to a channel.
Returns the tag of the parameter value or invalid if the parameter value is not a tag.
Append padding to the tail of the frame.
Update the publisher limit based on the current position of the stream.
Allocate a new buffer position.
Returns the label for the given type id. The label will be empty if the type id
Returns the number of bytes that can be read from the given buffer starting at the given offset
Clears the internal state of this channel.
Validate that the channel is in a valid state. Throws an exception if the state is invalid
Sets the prefix to use for this string builder.
Sets the media to be used for this channel. The default is udp and ipc.
Sets the control mode for this channel.
Sets the term length.
Sets the term offset for this string builder. The term offset is the number of characters to
Sets the linger for this string builder.
Close the channel.
Check if the frame is valid.
Receives a datagram from the socket and returns the address of the datagram.
This method is called when a new message is received. It is called when a new message
Process timeouts from the retransmit queue. This method is called when a timeout occurs.
Returns a string representation of the given status. If the status is not active or errored
Allocate a counter with the given name type id and channel. The name and id must be
Resets this vector to a new buffer with the given offset and length.
Validate the direct buffer vector.
Validate and compute the length of the given vectors.
produce a window length based on the buffer length and the number of elements in the window
Validate socket buffer lengths.
Validate page size. Page size must be between min and max. Page size must be a
Validates that the session id is within the given range.
Validate that the unblock timeout is within the timeout of the client liveness timeout.
Flyweight error code.
Resets the state of this object to its initial state. This method should be called when the
Encodes the given cluster members as a string.
Add the member status to the AER on the specified channel.
Close all publications for the given cluster members.
Returns true if the given member has active quorum for the given timeout. If the given member
Returns the quorum position of the given members in the given ranked array. The number of
Reset the log positions of all members to the given log position.
Returns true if any of the members in the cluster have voters at the given position
Checks if the given member has won vote on the given number of votes on the given term
Returns true if the member has a majority vote for the given candidate term id.
Determine a member by id and endpoints. If no member is found an exception is thrown.
Validate cluster member s endpoints.
Checks if two cluster members have the same endpoints.
Checks if the given candidate is an unanimous member in the given cluster.
Checks if a member is a quorum candidate.
Returns true if the given member is not duplicate of the given endpoints.
Returns the index of the given member in the given cluster.
Remove a member from the given array.
Returns the high member id of the given array of cluster members.
Map existing cnc file.
Checks if a driver is active.
Returns true if the driver is active for the given timeout. If the driver is not active
Check if a driver is active.
Request a driver termination.
Returns the length of the frame in the buffer starting at the given offset.
Writes the length of a frame to the given buffer in little - endian byte order.
Writes a frame type to the given buffer at the given offset.
Writes the frame flags to the given buffer at the given offset.
Writes a term frame to the given buffer at the given offset in little - endian order.
Writes a term ID to the given buffer at the given offset.
Returns the counter id for a given recording id. If no such counter exists null is returned
Returns the counter id for the given session id.
Returns the recording id for the given counter id.
Returns true if the given counter id is active in the given recording.
Flyweight application specific feedback.
Reloads the list of entries from the file.
Find the last entry with the same type as the term.
Creates a new recovery plan from the current state of the state machine. The recovery plan is
Creates a new recovery plan from a list of snapshots.
Append a term to the log.
Append a snapshot to the log.
Updates the log position for the given leadership term id to the given log position.
Tombstone an entry.
Closes the connection to the Aeron server.
Offer a vector to the queue.
Unblocks a block of data from the given buffers starting at the given position with the given
Returns the current channel as an ascii string.
Flyweight channel.
Check that the term length is a power of two and that it is a power of two
Checks that the given page size is a valid page size.
Atomically update the active term count in the buffer with the new term count.
Compute the position of the given term id. The position is the number of bits to shift
Compute the log length based on the term length and the current partition count.
Writes the default frame header to the given buffer.
Writes the default frame header to the given buffer at the given offset.
Rotate the log in the given buffer by the given term id and count. The log is
Initialise the tail counter with the given term id and partition index.
Returns the index of the term in the given raw tail. The raw tail is assumed to
Returns the tail of the buffer as a volatile long.
Update the raw tail of a partition with a new raw tail value.
Writes a token to the given token buffer at the given offset and length. If the token
Allocate a counter for a given leadership term id log position timestamp and recording ids.
Returns the current counter id or null if there is no such counter.
Returns true if the given counter id is in the replay state.
Get the recording id for a given counter and service id.
Converts a short flags to an array of characters.
Add a channel to the flyweight message. The channel will be prefixed with the first letter
Offer a message to the cluster. Returns the number of messages that were offered.
Wrap the given buffer into the buffer at the given offset and length. The buffer will be
Commit the current frame to the buffer.
Writes the frame header and length to the buffer. This method does not flush the buffer.
Main entry point for the media driver.
Close all shared and shared runners. This method should only be called when the context is
Returns the current position in the frame.
Allocate a counter for the given service id.
Returns the counter id for the given service id or null if no such counter exists.
Allocate a new counter with the given name type id and registration id.
Closes the connection and releases any resources associated with it. This method is called when the connection
Dispatches a descriptor to a recording descriptor consumer.
Adds a new slab to the pool. If the capacity of the pool is greater than the
Sets the byte at the given index to the given value.
Adds the given statistics to this histogram.
convert array type.
Convert a struct type.
Annotate the given message with the given position and number of times.
End the previous bit packed run. This method is called when the end of a run is
Read one value from the input stream and write it to the output stream.
Reads the footers from the given file and returns them as a list of Footer objects
Read a summary of parquet files and return a list of footers. The footers
Read parquet metadata from the given input file using the given parquet filter.
Get the next row group from the current block and store it in the page read store.
Read the next filtered row group.
Returns null if the page is not a dictionary page. If the page is a dictionary page
Adds a new writer to the list of writers. If the writer already exists it will be
Removes a writer from the list. If the list is empty then the allocation is updated.
Update the memory allocation.
Register a scale call back.
Writes the start of the stream. This method is called when the stream is being opened.
Start a new block. This is called when a new record is written to the output stream
Start a new column. This method is called at the beginning of a new column.
Writes a single page of data to the output stream. This method is not thread - safe
Writes a single page of data to the underlying output stream.
End the current block. This method is called when the end of the current block is reached
Copy data from the input stream to the output stream starting at the given position.
End the parquet file. This method is called at the end of the parquet file
Read parquet metadata from a list of files and merge them into a single parquet metadata
Write the merged parquet metadata from the given list of files to the given output path.
Write a metadata file with the given configuration and footers to the given output path.
merges the file meta data into the global meta data and returns the new file meta data
Reads the value of the field.
Returns true if the given schema is null or a union of the given schema s types.
Returns the first non - null object in the given array or null if none is found.
Makes a value of the given schema from the given string. If the given string is null
Creates a thrift meta data from the given extra meta data.
Returns the thrift meta data for the given thrift class or null if the class is not assignable
Returns the extra meta data for this thrift message. The meta data is stored in a hash
Writes a null value at a given repetition level and definition level.
Writes a single page of data to the parquet file.
Initialize from a page of data. The data is read from the given input stream. The
Allocates a new buffer for the given number of values based on the current mini block size
check that the type is an enum type and that the value at index i is not null
Calculate the bit widths for the delta block buffer given the number of mini blocks to flush.
Throws an exception if the throwable is an instance of the given exception class.
Get statistics based on primitive type.
Returns a builder for reading the given primitive type.
Merges the given statistics into the current statistics. If the statistics are empty nothing is done.
Returns a schema that is non - null. If the schema is a union the first schema
Create a new task attempt context.
Invoke the given method with the given arguments. If an illegal access or invocation target exception is
Prints all the members of this struct to the given string builder with the given indent.
Merges the fields of the given type into a new list of fields. If strict is true
Initializes the counter from the given reporter and configuration.
Get a filter instance for the given configuration. The filter instance will be the same as the
Get a list of footers from the parquet file. The footers are returned in
Generate a list of splits for a parquet file.
Writes a single record to the log. This method is called when a record is written to
Validates that the mapping is compatible with the parquet schema. Throws an exception if the mapping
Serialize the descriptor for the given class.
Returns a list of events that are missing required fields. This method is used to amend
check set.
Read file meta data from the given input stream. If skip row groups is true the meta
Close the output stream.
Set the schema for the job.
Adds the given class and parquet type to the hash map.
Assert that the given column is of the given primitive type. If the column is of the
Converts a long value to an int throwing an exception if the value is not an int.
Create a mapping from an arrow schema.
Creates a mapping from the given parquet schema.
Map a parquet schema to an arrow schema. The arrow schema is assumed to be the
Writes the header of a data page to the specified output stream. This method is deprecated.
Skips to the next record that matches the filter.
Writes an object to the configuration as base64. The object will be gzipped and encoded
Remove the value associated with the given key. If the value does not exist null is returned
Puts a new value into the cache. If the new value is not current it will be
Returns the current value for the given key or null if there is no current value.
Writes the given value to the given avro schema. If the given value has a logical type
Sets the value of this object to match the given glob string.
Output the content to the specified file. If the filename is null the content will be logged
Opens an input stream for the given file.
Creates a new column filter with the given column path and predicate. The column path can be
Convert a thrift message to a thrift message type.
Create a group type list wrapper for the given repetition.
List of elements.
Get merged key - value meta data.
Creates a new parquet input split from the old input split and the new input split.
Returns a hash map of fields by package name.
Resolve parquet column index access to the file schema.
Get the input files from the input list. If the input list is empty then parse the
Check if the input files are parquet files. If the files are directories throw an exception
get input files from directory
Create a new filter that returns a page of records starting at the given position.
Construct a list consumer from a thrift protocol and an event based consumer.
Initialize the map red work if it is not already initialized and the plan number is greater than
Merge the given tuple into a new tuple with the same number of elements as the given tuple
Sum up the tuples in the tuple t and return a new tuple with the summed tuples
Read a struct from the stream. This method is used to read a struct from the stream
Reads an entry from the map using a typed consumer.
Writes an int value to the output buffer.
Reads a little endian integer from the given buffer starting at the given offset.
Set the Avro schema for the job.
Create a topic if it does not already exist.
Duplicate stage beans.
Creates the interceptor beans for the given stage. The interceptor beans are created using the given context
Creates a new interceptor bean.
Parse the given schema string and return a schema object that can be used to validate the schema
Convert milliseconds to days since January 1st 1970 - 01 - 01.
Get an avro schema from the given header.
upgrade from v1 to v2
Copy the blobstore resources to the staging blobstore. If the staging blobstore does not
Resets the internal state of this object to its initial state. This method is called when the
Report the health of the given thread to the given gauge. If the gauge doesn t exist
Register a thread health report.
Store the control hub configs.
Checks if the current user is authenticated with the given web credential. If the user is not
Upgrades the configuration if necessary. This method is called when a configuration upgrade is required.
Upgrades a stage configuration if it is needed. If it is not needed the configuration is
Upgrades a stage configuration to a new stage configuration.
Checks if the service is needed. If not creates an error and adds it to the issues
Upgrades the stage to the latest version if it is not already up - to - date
get fields that do not exist in the record
Checks if the given name is a system class or a resource in the given package list.
Adds the specified element to the end of this set.
Adds the specified element to the end of the queue and returns it. If the queue is
Returns the optional value or the default value if there is no value.
Adds reported errors to the list of stages and returns a list of snapshots of all stages.
Create a descriptor from a proto descriptor file. The message type is the type of the message
Get all file descriptors in the set.
Populates the default and extensions map with the values from the file descriptor map. The file descriptor
Returns a descriptor for the given message type or null if there is no such descriptor.
Convert a field to an SDC record. The field is converted to an SDC record
Create a dynamic message from a record. The record is expected to be a dynamic message.
Convert a dynamic message field to a protobuf message field.
upgrade to jersey config bean.
Checks the connection to the Kudu cluster.
Convert kudu type to field. type.
Creates a field object from a row of data and a field name and a field type.
Intercepts the given list of records with the given list of interceptors.
Get the text from the buffer.
Adds missing configurations to the given stage.
Parse the response and store the result in the record. If the response is a HEAD request
Adds the response headers to the record.
Write the response headers to the output field.
Write response header to record.
Saves the metadata of the current stage to the file system. This method is synchronized so that
Configure the client with the given issues. If issues is empty the default client is used.
Parse the response headers and return the response header string.
Increment the source offset based on the pagination mode and the given offset increment.
Parse a paginated result record and add it to the batch maker and return the number of
Adds the response headers to the given header.
Resolves the request headers and returns a multivalued map of the response headers.
Process the response. If the response is null return an empty offset. If the response is
Returns true if the given property is defined in the configuration. If the property is not defined
Convert a data parser exception to a data parser exception.
Convert a data generator exception to a data generator exception.
Get the credentials from the file. If the file does not exist or is not a file
Create a new preview of the given stage outputs. The stage outputs will be overridden by the
Copy the contents of the current character to the buffer and return the number of bytes overrun
Removes duplicates from the given set of packages that start with the same name as the last one
Finds the next main line in a live file chunk that matches the given pattern.
Resolve a live file chunk into a list of complete lines and a list of complete lines.
Close the current connection and remove it from the list of connections to close during the destroy.
Escapes a string with a number of quoted characters in the input string. This is used to
Get the flow control settings.
Creates a channel provider for the subscription administration service. The channel provider is created using the
Puts a batch of results into the cache.
Computes the digest of the given expression and then compiles it into a Grok pattern.
Computes the auxiliary digest of the given expression. The auxiliary digest is the same as
Adds a dictionary from the given input stream. The input stream will be read from the input
Adds a dictionary to the compilation. The dictionary is read from the given reader. The reader
Stops the timer and returns the map of the current data windows.
Roll the data window to a new window. The data window will be rolled back to the
Serializes an object to a string. If the object is null returns null. If the object
Deserializes a string into an object of the specified type.
Deserializes a file into an object of the specified type.
Writes a record to the output stream.
Resolve an EL expression with the given variables and the given value. If the expression is evaluated
Generate inner field from the list of fields.
Get the table name from a record.
Get the database name from the given record. If the record does not have a database field
Get the internal field of the given record.
Get the location field from the given record.
Get the custom location from the metadata record.
Get the avro schema from the given record.
Get the data format from the metadata record.
Creates a new schema metadata field.
Validate that the partition information is consistent with the partition values in the given hash map.
Generate a partition path from a linked hash map.
Serializes the given schema to HDFS using the given user group and file system.
Sets the parameters of a prepared statement. This method is intended to be used by the SQL
Get the configuration of the API.
Parse an RFC 3164 time string into a long value.
Format the given template with the given arguments. If the template does not exist it will be
Start a batch context. The batch context will be pushed to the main context and the stage
Check if the record contains the solr fields. If it does not throw a stage exception.
Filters out field names that are not in the map of field names.
Send on record error exception to handler.
Parse a jar name into an optional dependency.
Parse a URL into a dependency. The dependency is identified by the name of the URL and
Creates a new instance of the connector. If the connector already exists it will be returned.
Close the connection to the cluster and environment. This method should be called when the connection is
Returns the label for the given code or throws an exception if the code is invalid.
Verifies that the given dependency exists in the given map.
Get the write operation from the header.
Build a subdoc.
Generate alter table SQL.
Configures the SASL client with the given configuration. The name of the client is used to
Take the next entry from the queue and return it as a result. The result will be
Commits the current batch of messages.
This method is called when an error occurs. This method is called when an error occurs.
Injects configuration into the given stage.
Get a list of definitions for a given stage.
Returns the publisher definition for the given name.
Format the column name. If the column is case sensitive it will be converted to upper case
Format the given value as a string. This method is used to format the given value.
Get information about a pipeline.
Creates a draft pipeline with the given id description and list of stage instances.
Get a list of pipelines that match the given criteria.
Import a single fragment into a pipeline.
Returns the path to the file in the given directory with the given template record date and time
Get an operation from a SDC record.
Returns the field path for the given column name in the given map of columns to fields.
Retrieves an enriched event from the queue. If the queue is empty the method blocks until
Get a runner from the queue.
Get the idle runner for the given idle time.
Adds a runner to the pipeline. If the pipeline is destroyed this method will throw an exception
This method is called when the pipeline is being destroyed. It is called when the pipeline is
Validate that the pipeline is not destroyed and throw an exception if it is.
Checks whether a stream exists.
Get the last shard id for a stream.
Process a batch of records from the queue. If the queue is empty nothing is done.
Handle an exception. If the exception is a data error add it to the errors list.
Get column hash code.
Compares two files and returns true if they are the same or if they are the same.
Retrieve the PID of a process. If the process is not an instance of the process class
validate and extract fields to hash for this config
Get the proxy user group information for a given user.
Roll the active stats to a new stats bean and return it. The stats bean will be
Creates a snapshot of the active stats.
Ensure that a directory exists at the given path. If it does not it will create it
Writes a batch of records to the specified writers.
Writes a batch of records to the specified table. Each record will be written to the specified
Writes the given iterator to the given record writer. If the writer does not exist it will
Generate a no - more data event and send it to the client.
Detects a new partition. If the cache is non - null it will be used to
Update the given record with the given schema and location.
Processes the given value for the given group. If the group does not exist it will be
Checks if two stages have the same version.
Main entry point for the Mesos application.
Configure auth and build the client.
Resolve the request headers and return a multivalued map of the resolved headers.
Evaluate the given expression and return the http method value. If the expression is different from the
Fill bindings with null types.
Get the value of a field in a record. If the field is null return null.
Loads a schema from the registry. If the subject is empty the schema id is used.
Register a schema with the given subject and return the schema id. If the schema already exists
Load a schema from the registry.
Get the latest schema id for the given subject.
Loads a schema from the registry with the given id.
Writes the schema id to the output stream.
Detect the schema id from the given byte array.
Get the default values for the given schema.
Parse all the records in the given payload. If an error occurs during parsing the error will
Log some details about the current state of the dependency.
Get the list of bad records from the error sink.
Initializes the schema generator with the given configuration. This method is called when the schema generator is
Returns the set of outward edge vertices for the given vertex or an empty set if no
Returns the set of inward edge vertices for the given vertex or an empty set if no
Serialize an offset map to a JSON string.
Deserializes a map from the given offset string. If the given string is null or empty
Sends a report to the queue. If the queue is full the report will be sent to
Get a report by its id.
Returns true if the check point file exists or if the backup file exists.
Write offsets to the main file.
Deletes the blob with the given id from the storage.
Handle an error for the given blob id. This method is called when an error occurs.
Handles the archiving of the given blob id.
Get the current file reader. If the current file is null or the offset is greater than
Release a reader. If the reader is in error discard it. If the reader is in
Set the base URL for the DPM API requests.
Add a default header to the request.
Parse a date from a string.
URL - encode a string and replace all the characters in the string with the escaped string.
Get the client for the given base path. Create it if it doesn t exist yet.
init connection with kinetica configuration bean and return a connection object that can be used
get the table metadata from the gpudb and the name of the kinetica
Create a new event builder with the given stage context context and to event.
Build a schema from a map of fields and a list of levels.
Converts an oracle code to an SDC code.
Add the given classes to the job configuration. This method is intended to be called from the
Check field order by list.
Check if the given field name matches any of the given condition expressions.
Get the offset lag for the given file offset string.
This method is called before the main method. This method is called before the main method.
Returns the parallelism of this stage.
Run a query and return the result as a table. This method is not thread - safe
Get the description of the table in the response. If the response does not contain the table
Validate that the table accepts inserts.
Returns the type of the given field.
Returns true if the field type is nullable or false if the field type is not nullable.
Get the schema of a table from a show table response. If the response does not have
Get the column properties from the show table response.
Get the class for the given type name.
Connects to the Aerospike server and attempts to connect to the Aerospike
Returns the topic for the given record. If runtime topic resolution is enabled the topic will be
Get the input stream for this file.
Get the output stream.
Returns true if the file exists and is larger than the number of files in the directory.
Parse a permission string into an fs permission object.
Validate that all services are available.
Creates a new simple aggregator with the given name and class.
Returns the unit of the aggregator. The unit is determined by the type of the aggregator.
Create a new aggregator with the given name and time window.
Creates a new group by aggregator with the given name and type.
Starts a new data window with the given duration.
Stops the timer and returns the map of the results. The timer will be stopped when the
Roll the data window to the given end time and return the results as a new map.
Release the reference to the login manager. If the count reaches zero the login manager will be
Convert a glob to a regular expression.
Returns a list of objects sorted lexicographically from the given offset to the given offset.
Stops the pipeline and cancels the current snapshot if there are still batches to capture.
Produce empty batches for idle runners.
Create a failure batch for the given pipeline and revision.
Convert a record to a bound statement.
Sets the values of this configuration to the given new configuration. If the value is null the
Generate a kudu lookup key from a record.
Reads a single line from the reader and appends it to the given string builder.
Roll the usage timer back to the previous multiplier.
Enable the DPM.
Disable the DPM for the given user. The user must be logged in to make sure
normalize dpm base url to remove the dpm base url from the end of the url
Retrieve the user token from the SSO server.
Logout a user from the dpm server.
Update the token file with the given auth token.
Update dpm properties.
schema. field schema. field schema. field schema. field schema. field schema. field
schema complex schema for avro field type.
Get decimal scale or precision.
Returns the default value for the given schema or null if the schema has no default value.
Initialize metrics if needed.
Compares two files based on the last modified time of the first file.
Returns the index of the group with the given name and index. If the group does not
Returns a list of the names of the groups in the group tree.
Returns true if the character at the given position is an escaped character.
Returns true if the current character is a slash escaped character.
Returns true if the current position is inside a class or interface.
Counts the number of open parens at the given position in the given string.
Extract group info from a named pattern.
Replaces all occurrences of the given regular expression with the given replacement.
This method is called when a GET request is received. This method is called by the servlet
Refresh the schema for a table. If the new schema is greater than or equal to the
Returns true if the entry is expired.
Returns the current file offset in bytes. If the file is truncated the offset is returned.
Fast forward to the input stream without blocking.
Convert a string to a number. If the string contains a number it will be converted to
Parse the part of a record from a byte buffer.
Parse the values of a record.
Lookup the primary key columns for the table.
Create custom field mappings.
Get the SQL representation of the field type.
Returns the table name. If the schema is null or empty the table name is returned.
Sets the primary keys of the given record to the given prepared statement at the given index.
Handle a SQL exception and throw a stage exception. This method is called when an error occurs
This method is called when the pipeline is ready to be processed. It is called by the
Prepare the batch context. This method is called when the batch context is created. The batch
Finishes the current batch and calculates metrics.
Flattens the entire record into a single map.
Create a detached stage.
Execute the operation on the given record. If the operation is successful the record is returned.
Get the columns to parameters from the given record and the given fields.
Get the condition for a partition column.
Validate that the given offset is stored in the given table and that the columns in the given
Get the requested content generators.
Get non - empty args from a list of strings.
Get the operation object for the given operation code in the given kudu table.
Convert bytes to a human readable string.
Scan the current file and return the index of the current file in the live file system.
Get the number of pending files in the current live file.
Returns true if the given property is whitelisted by the given whitelist. If the property is whitelisted
Returns true if the given versions match the given expected versions. The expected versions must be a
The main method of the application. This is the main method of the application. It is
Propagate the runtime configuration to the runtime.
Checks that the report description is valid. If not creates an omniture issue.
upgrade from v1 to v2.
Extract the named groups from the given raw data.
Commits a message to the consumer queue.
Creates an embedded source object.
Sets the given fields in the given record. The fields will be added to the given record
Get a list of remote pipelines and their validation status.
Creates a new result with the given result.
Create a gauge with the given name and suffix. The gauge will be added to the given
Get the columns to parameters from the given record.
Generate a map of header attributes for the given file.
Validate the given record and throw an exception if there is an illegal argument. If there is
Handle old temp files.
Get the input stream from the record.
Returns a file reader for the given input stream. If the input stream is not a file
Write parquet data to a temp file.
Check if the field is an encrypted field. If not throw an error.
Check that the given field is an encrypted field. This method will throw an exception if the
Check that the input field is of the correct type and that it is of the correct type
Check that the input field is of the correct type and that it is of the correct type
Prepare a field to be encrypted. The field is stored in the context. If the field
Sets the pattern to match against. If no pattern is given the pattern will be used.
Appends the given replacement string to the given buffer. The replacement string will be replaced with the
Returns a hash map of the named groups in this pattern.
Replaces all occurrences of the pattern with the given replacement.
Get the value of a global variable in the data source. If the variable does not exist
Create a new event record for the start stage of the pipeline.
Create a new stop event record with the given pipeline stop reason and instance name.
Fix offset.
Extract value as runtime type.
Build and execute the alter table add partition query.
Build and execute alter table set tbl query.
Describe the database with the given name. The database name must be the name of the database
Execute the given query and record the execution time. If an exception is thrown it will be
Execute a query and return the result set as a result set.
This method is called when a new pipeline is created. It is called when a new pipeline
Run the consumer for each pipeline in the pipeline. The consumer will be called with the pipeline
Returns the offset commit trigger of the current stage. If no such stage exists null is returned
Checks if the current stage of the pipeline is on error and stops the pipeline if so.
Accept a pipeline. If the pipeline throws an exception the consumer will be rejected with the exception
Get the insert id for the given record or null if there is no insert id.
Gets the value from the given field.
Set a document fragment in a record.
Set a document in a record.
set n1ql field.
Handle the whole file data format. This method is used to handle the whole file data.
Returns true if the transaction with the given gtid and sequence number has been marked as incomplete
Wraps the given supplier with the given class loader in the context of the current thread.
Log the user out of the kerberos session. This method is called when the kerberos
Clear the exceptions list. This is called when an exception is encountered during the execution of the
Replaces all variables in the given path with their corresponding values in the data config and resources directories
Ensure that the user has the right permissions to access the file at the given path.
The main entry point for the program. This is the main entry point for the program.
get the directory path for the given date and record. If there is no template in header
Rename a file or directory to a final name. The final name will be the final name
Returns true if the record should be rolled or false if it should not be rolled
Matches the given string against the given pattern against the given URI template variables and returns true if
Returns a map of file offsets to the offsets of the file in the file system.
Returns the remaining wait time in milliseconds between the given start time and the given max wait time
Get the offsets for a given offset map. The offset map must be non - null.
Create a new instance of the given stage library with the given name and export interface.
Create a new instance of the given stage library using the given definitition.
Get the value of a metric.
Find the end of the header.
Returns the size of the response body in bytes. If the response body is larger than the
Save a byte buffer to a temporary file and return the path to the temp file.
Creates an SSL connection from the given key and trust store. The key and trust store must
Get the MIME type for the given file URI.
Handle the given session and return the response. If there is no response null is returned.
Stop the HTTP server. This method should be called when the HTTP server is stopped.
Adds the mappings to the router.
Send the body of this message to the given output stream. If pending is - 1 the
Creates a new fixed length response.
Returns true if the file is gzipped or false if the file is not gzipped.
Sets a cookie with the given name and value with the given expiration time.
Unloads all cookies in the queue and adds them to the response.
Decode a base64 string into a string. If an exception occurs during the base64 decode
Encodes the given string into a base64 encoded string.
Sets the name of the table to be used for the query.
Returns the name of the principal. If the principal is a user then the username is returned
Insert a session repository filter into the servlet context.
Resolves the principal name from the given session.
Get the session with the given id. If the session is expired it will return null.
Get the JNDI name from the given model node.
Get the canonical names of the method s parameter types.
Register an interposed synchronization with the current transaction.
This method is called before the completion of the task. It is called before the task is
Returns the current transaction or null if there is no current transaction.
Add a system dependency to the kernel s module specification if the bean factory is a child of
Returns true if the given persistence unit is scoped to the cache region name.
Returns a list of service names that are required by the server s configuration.
Decrement the read lock by one.
Increments the read lock by the given number. If the current read lock is already incremented
Adds a service to the deployment.
Handle the restoration of the cache.
Deploys the JPA module to the JPA module loader if the JPA module
make top level bdas visible from static modules.
Creates a new JSE builder for the given deployment.
Sets the config name and config file from the web. xml and the webservices.
Creates a list of jse objects for each security constraint in the given list of security constraints
Get servlet url patterns.
Get servlet class mappings.
Resolve all the views.
Returns a set of all connectors that are available for the given operation.
Parse core environment element.
Parse process id environment element.
Get the path for the given operation.
Sets the address of the given operation to the given address in the given model node.
Returns the value of the given operation. If the operation does not define a value a new
Returns true if include defaults is defined in the given operation.
Creates a composite operation from a list of operations.
Create a add operation with the given address and parameters.
Create a new node with the given address and index.
Creates a new read - only attribute node with the given address and attribute.
Creates a write attribute operation with the given address and attribute and value.
Create an undefine attribute node with the given address and attribute.
Get the value of the property.
Adds a new url context factory for the given scheme.
Remove a url context factory.
Loads all validation providers from the given class loader.
Modifies the deployment by adding the endpoints and the context root to the deployment.
Configure the endpoints for the given deployment.
Modify the context root for the given deployment and JBoss web metadata.
Get the transport class name from the deployment.
Sets the given principal as the outgoing run of the given security context. If the security context
pop a run as the identity of the current security context. If the current security context is
Process management.
Injects the given property into the given object with the given name and value. If the
Checks if the argument matches the given class and property types.
Finds a method by its name and parameter types. If a property type is specified the method
Finds a field in the given class that matches the given field name and field type.
Derives the useful information from the servlet request.
Collect a standalone JDR report. This method is intended to be used by the jdr
Collect the JDR report. This method is used to collect the JDR report
Register a resource adapter to be used by the connector.
Unregisters a deployment from the deployment registry.
Registers the transformers for the given subsystem. This method is called when the subsystem is created.
Writes the given parameters to the given output stream. The parameters must have the same number of
Reads an exception with the given id from the given input stream.
Returns the owner of the current thread in the given synchronization registry or the current thread if the
Release the lock on the given session component instance. This method should be called when the session
Adds a log entry to the log file. The log entry will be added to the log
Adds the cdi parameter to the WAR meta data. If the WAR has a
Get the component view.
Invokes the given endpoint with the given invocation. This method should be invoked in the context of
Get the component view for the given sei method. If no component is found an illegal
Checks if the given sei method matches the given view method.
Returns the security meta data associated with the specified endpoint.
Returns the new domain or the old domain if the old domain is null and the next domain
Ensure that the old and new security domains are the same. If they do not throw an
Set the name of the IDL file.
Returns the absolute name of this entry.
Creates a new jndi name from the given name.
Deploys the Jacamar to the given deployment unit.
This method is called when a request is received. It adds a listener to the exchange that
Returns true if the thread is currently in a transaction. If the thread is in a transaction
Get the transaction synchronization registry.
Get the connection factory. If the connection factory has not been created yet it will be created
Returns the last component of the given name or the empty string if there is no last component
Returns true if the given name is empty or the given name is the same as the given
Thrown when a name is not found in the given context.
Creates a new exception with the given message and cause.
Creates a new naming exception with the given message cause and name.
Creates a new cannot proceed exception with the given resolved object and name.
Creates a naming enumeration from the given collection.
Rebinds the given name to the given value. If the name does not exist it
Returns the active management controller for the given operation.
Creates a new component instance with the given instance.
Get the spring integration jar.
Resolves the runtime name from the resource at the given address.
Creates a builder for the given persistent resource.
Returns the analysis of the given class.
This method is called when the thread is shutting down. This method should be called when the
Returns a list of url patterns with the given url pattern.
Gets the servlets bean.
Gets the servlet mappings for the given jboss web md. If the jboss web md
Gets the security constraints for the given web application.
Gets the login config meta data.
Gets the context params.
get web resource collections meta data
Gets the servlet init params.
Creates a new security constraint meta data and adds it to the given list of security constraints.
web resource collection meta data.
Adds a servlet to the list of servlets and adds it to the list of servlets
Creates a new servlet mapping meta data and adds it to the list of servlet mappings.
Creates a new auth constraint meta data with the given role names and the given security constraint.
Creates a new user data constraint with the given transport guarantee and security constraint.
new param value meta data.
Creates a new param value meta data with the given key and value.
Register the session bean interceptors for the given component. This method is called when the session bean
Shuts down the Weld service.
Get the jndi name from the model node.
Resolve a simple attribute.
Returns the type of the given URL pattern. If the pattern is exact extension prefix or default
Targets a pooled connection to the given server and resource adapter. This method is intended to be
Returns true if the given adapter targets an external connection. If the given adapter targets an external
Get the active mq server from the given properties or the default server if none is set.
Returns the default persistence unit name. If no name is specified then the default persistence unit name
Starts the activity. This method is called when the activity is started. This method is called
Unregisters this activity from the suspend controller and removes the listener from the transaction context.
Suspends this transaction. This method is called when the transaction is suspended. If the
Resume the server activity. This method should be called when the server activity is resumed.
Indicate that the invocation has completed. If the invocation is suspended the invocation is suspended.
This method is called when a transaction is created. It registers this synchronization with the given transaction
Add the current controller to the naming store and add it to the naming store.
Remove the controller from the naming store. This method is called when the service is stopped.
Get the capability service name for the given base name and dynamic parts. If no dynamic parts
Create the list of resource roots for the given virtual file.
Returns all deployment module class loaders.
Checks if the given persistence unit metadata needs a class file transformer.
Returns true if the JPA allow two phase bootstrap is enabled for the given persistence unit.
Returns true if the default data source should be used for the given persistence unit.
Checks if the target entity manager should be skipped synchronization type checking. This method is intended to
Get an instance of the Orbit object.
Initialize an instance of an applet. If the applet is not an instance of an applet an
Initialize the method handles. This method is called when the class is not found in the class
Sets the active naming store.
Validate default values.
Checks the type of a parameter. If it is a parameterized type then the actual type is
Look for default value annotation in the array of annotations. If not found return null.
Validate the base type of a method. If the default value is not null it will be
Returns an array of entity managers that have been deferred to construct. The array will be empty
Returns the given transaction status as a string. If the given status is active or rolling back
Adds the dependencies for the given cache type and properties to all registered listeners.
Extract the dialects from the SQL statement.
Investigates the dialect of the connection.
Identifies the dialect based on the given dialect name. If the dialect name contains the given
Checks if the database is ready to be used. If not it will create a new connection
Convert a date string into a scheduler date. If the date cannot be parsed null is returned
Sets the name of the node.
Mark the given deployment unit as a marker. If the deployment has a parent the mark will
Reads the parameter values from the input stream.
Writes the return value to the given output stream.
Writes an exception to the output stream.
Recursive method to perform a depth - first traversal of the class hierarchy starting from the given index
Begins the bean creation. This method is called at the beginning of the bean creation.
Ends the creation of a bean. This method should be called at the end of a bean
Returns the last SFSB in the invocation stack or null if the stack is empty.
Pushes the given entity managers onto the current SFSB. The entity managers will be
Pop a value off the stack and return it. The stack is assumed to be at the
Get the current call from the stack. If the stack is empty null is returned.
Adds the dependency to the deployment unit. If the deployment marker is not part of the deployment
Returns the IDL for the given class or null if the class is not an IDL
Insert a primitive into an Any object. The primitive must be of the same type as the
Convert java name to idl name.
Returns true if the string s is a reserved IDL.
Returns the signature for the given class. The signature is the type name followed by the component
Returns the signature of the given method.
Returns the string representation of a primitive type.
Returns the permission for the given name or all permission if the name is the same as the
Get or create a transaction scoped entity manager.
Associates the specified value with the specified key. If the key already exists the old value is
Convert the security role definition into a model node that can be used to create or delete a
Returns the most recent version of the given timer. If the timer is already in the registry
Returns a map of timers for the given object id and timer service.
Returns the directory for the given object id. If the directory does not exist it is created
Adds a new target scope to the list of listeners for the given target and scope.
Removes a naming listener from the list of listeners registered with this naming manager.
Fires a new naming event with the given name existing binding binding type and change info.
Returns a consumer that closes the given auto - closeable object. If an exception is thrown
Adds a private credential to the subject. If the subject is not checking the credential will be
Get an instance of an object from the given context. If the context is not privileged
Add a transaction management interceptor for the given view.
Substitutes a string from a string to another string in a builder.
Creates a transport configuration in a VM.
Add ear prefix if relative name.
Get root deployment unit.
Returns the name of the service.
Create a new view configuration.
Create the injection source.
Returns a list of interceptor factories for the given method. The order of the interceptor factories is
Adds an interceptor to the view. The interceptor will be called for each method in the factory
Adds an interceptor to the list of interceptors associated with the given method. The interceptor will be
Returns a list of client interceptors for the given method. The list will be sorted by the
Add a client interceptor to the interceptor chain. The client interceptor will be added to all the
Adds an interceptor to the list of interceptors associated with the given method. The interceptor will be
Adds a data to the private data map for the given type. If the data already exists
Throw an unexpected XML element.
Gets the jaxws ejbs attached to the given unit or an empty list if there
Gets the jaxws pojos.
Get the endpoint name from a servlet meta data.
Get the endpoint class name from the servlet meta data.
Get servlet meta data by servlet name.
Get an attachment from the given deployment. If the attachment does not exist throw an exception.
Get an optional attachment from the given deployment unit.
Returns the j object associated with the given deployment unit or null if there is no j object
Gets the ejb component from the deployment. If the ejb name is null null is returned.
Gets the webservice metadata for the specified class name.
Gets the context root of a deployment.
Returns the class for the given name. If the class does not exist it will be created
Returns the URL of the named resource. If the resource cannot be found an exception is thrown
Returns a collection of URLs for all of the resources of the given name.
Returns a list of servlets for the given path.
Pops the last entity from the stack and closes all open entity managers.
Returns the entity manager associated with the given pu scoped name or null if no such entity manager
This method is called when the JMS context is being cleaned up. It is called when the
Checks if the current deployment is a war and if so adds it to the current deployment.
Returns true if the class has all public fields false otherwise.
Creates a new http endpoint.
Creates a new deployment for the given unit.
Checks if the given unit is a jaxrs deployment.
Sets the next timeout for the timer. If the next timeout is null the timer will be
Sets the state of the timer. This method should only be called if the state is in
Merge the given list of resteasy deployment data into this list of scanned classes.
Deploys the module loader into the deployment unit. The module loader is attached to the
Add a dependency to the component that will be used to configure the remote view if it is
Returns a set of all container interceptors. The set is sorted by priority.
Checks if the given method is the level of the given interface or a default interface.
Checks that only one of the given elements is present in the seen set.
Get the type of the given class name. If the class name is null null is returned
Returns the component type at the given index or null if the index is out of bounds.
Parse a stringified name into a naming object.
Converts a string to a vector of stringified components. The name of the component is the
Parse a component from a string and return it as a name component. If the component is
Deactivates the object.
Returns the reference to the given object in the repository or null if the object does not exist
Authenticates the given username and password. If username and password are null the identity is
Returns true if the given class is a subtype of a subtype of a subtype of a subtype
Lookup an object from the container.
Unbinds a jndi.
Creates a new instance of a bean using the given bean meta data bean config bean info bean
configure bean with meta data bean info bean bean bean bean info module bean bean bean bean bean
Dispatch the lifecycle joinpoint. If the lifecycle config is not null it will be ignored.
Returns the current selector or the default one if none is currently active.
Convert a service name to a bean name.
Returns the service name for the given class and state.
Get a class by its name.
Process the annotations of the given deployment unit. If the annotation is complete the annotation is processed
This method is called after all the persistence units have been parsed. This method is called after
Checks that the given descriptor is valid. If the descriptor is not valid throws an exception.
Create the web app descriptor and add it to the given deployment. The web app descriptor is
Create the web app descriptor.
Get the auth method for the given deployment.
Deploys the service. xml file into the deployment unit. If the service is a
Handle stateless session bean.
Create a stub class. The stub class will be created if it does not already exist.
Returns an anonymous object id for the given object id.
Returns a copy of the list of registered persistence providers. This method is thread - safe.
Clear the persistence providers for a given set of class loaders.
Adds a persistence provider to the deployment.
Find the parent class loader.
Deploys the service to the deployment unit. If the service is already deployed this method
Adds a service to the list of persistence units. If the number of persistence units is greater
Sets the annotation indexes for the given unit and all parent units in the given unit.
Returns the persistence provider adaptor for the given persistence unit. If no adapter is found a new
save per deployment shared persistence provider adaptor
Lookup the persistence provider for the given persistence unit. If no provider is found the default provider
Returns the set of classes that are annotated with the given set of URIs.
Create an ejb archive for the given deployment.
Build enterprise bean meta data.
Refreshes the participant of the current stage.
Returns the analysis for the given class. If the class is not yet analysis then null is
Returns null if no analysis is done for the given class. If no analysis is done for
Creates a new instance of the given class and adds it to the work in progress.
Returns the name of the IDL module for this class. This is the name of the
Converts an integer into a hexadecimal string. If the string is shorter than the number of characters
Convert a long to a hex string.
Returns true if the given method is an accessor of this class.
Returns true if the given method is a mutator.
Returns true if the given method has non - app exceptions false otherwise.
Read the attribute name from the given attribute name.
Returns the name of the attribute or throws an exception if the name is not an accessor.
Fix up overloaded operation names. This method is used to fix up overloaded operation names
Fixes the case names of the entries in the list.
Escape the given name for use in an IR expression. This method is used to escape the
Parse xts.
Parse default context propagation element.
Process the attributes of an XML element.
Load persistence providers by module name.
Create a new add step handler.
This method is called when the deployment is started. This method is called when the deployment is
Write an attribute to the XML writer.
Creates a session on the remote side of the container. If the container is suspended the container
Infer the destination name from the given address. If the given address starts with queue or
Register a set of handlers for the given endpoint class.
Returns the xml names for the given job name or an empty set if the job name is
Initializes the class loader with the given class loader. This method should be called before the class
Get the request URI.
Resolve the given URL using the given environment. If no environment is specified the default environment is
Lookup the object with the given name. If the object does not exist it is created.
Binds the given object to the given name. If the object already exists it will be replaced
Unbinds the component at the given path. If the component is not found an exception
Returns a list of bindings for the given name. If the name is not a member of
Call the destroy method of the given naming context. If an exception is thrown it will be
Destroys the subcontext with the given name.
Create a new context and bind it to the given component path. The component path must be
Creates a new subcontext with the given name.
Lookup the link with the given name.
Add a property to the environment.
Removes the value of the given property from the environment. If the property does not exist in
Adds transformations to the given transformation description.
Remove a security domain.
Look up a JNDI name in the given context. If the name is not found null
Creates a modular reference from the given type and factory.
Create a modular reference from the given class name and factory.
Create a modular reference from the given type and address.
Returns an idl for the given type code. If the given type code is a primitive
Waits for a security domain service to be up.
Computes and returns the masked password. The masked password is the same as the original password.
Initializes the security vault. This method is called when the client is connected to the vault.
Start a new vault session with the specified alias.
Display the creation of a vault attribute.
Display the vault configuration.
Returns a string representation of the vault configuration.
Checks that the given value is not null and throws an exception if it is.
get deployment service name.
Inserts the value into the given Any object. If the type of the value is a string
Returns true if this permission implies the given permission.
Returns a string representation of the actions of this rule. The result is a string representation of
Get the name of the log entry.
Send a state change notification.
Get the value of a parameterized type.
Get the context service name.
Returns a set of all interceptors. The set includes all class interceptors and all method interceptors.
Adds a method interceptor to the interceptor chain.
Add a dependency to this component.
Returns a list of interceptor factories for the given method. The order of the interceptor factories is
Returns a list of interceptor factories around the given method.
Adds a view interceptor to the list of interceptors that will be called for the given method.
Adds an interceptor to the list of interceptors around a construct. The priority of the interceptor is
Add a post construct interceptor.
Add a pre destroy interceptor to the list of interceptors to be called before the destroy operation.
Add a pre - passivate interceptor. The interceptor is added to the end of the list
Add an interceptor to be executed after the activation of the application.
Set component create service factory.
Remove the jndi entries from the operation context.
Add the transport providers to the builder.
Get the context service name of a component.
Returns the context service name of the given app and module.
Returns bind info for the specified env entry.
Returns the bind info for the given jndi name.
Returns a new cache that logs the user out of the cache.
Returns an array of value members.
Get the value members for the type code.
Creates the root of the federation subsystem. This is the root of the federation subsystem
Parse a config element.
Start the service. This method is called at the beginning of the service invocation.
Returns the service name for the given runtime and subdeployment. The runtime and subdeployment names
Add a component to the deployment.
Adds a new message destination.
Returns a set of view descriptions for the given view type and view root.
Returns a set of component descriptions for the given component name. If the component name does not
Returns a set of view descriptions for the given component name and view name. If the component
Resolve a message destination.
Builds the transformers2 1. 0. This is the main entry point for the Hor
Adds a reject check for each defined attribute with a default value.
Pop the identity from the context cache.
Loads the module identifiers for the current version. This is done by adding the module identifiers to
Check that all versions are present and that they are valid. If they are missing log them
Returns the slot for the given version. If the version is null returns the default slot.
Returns the type code for the given class. Throws an exception if the class is invalid.
Adds a type code to the map. If a type code already exists for the given class
If the remainder is a module name then return the container. Otherwise return the container itself.
Add the base interfaces of the given container. The base interfaces are added to the analysis.
Add the abstract base valuetypes to the analysis. This method is used to add the base
Adds a class to the stack. If the class is a primitive it is not added.
Add an interface to the analysis.
Add a value to the list of values. The value is assumed to be an instance of
Add an exception definition to an analysis.
Returns the class level injection type for the given annotation.
Initialize the naming store if it s not already initialized.
Close the root context. This is a no - op if there is no root context.
Check if the given method is allowed by the current interceptor context.
Check if the transaction sync is allowed for the given method type. If it is it is
get all component classes from war meta data tlds meta data and async listener meta data.
Get waiting on tx completion timers. If there is no waiting on tx completion timers an empty
Returns the extra parameters that are not allowed for the given keys.
Get the parameters from the given configuration.
Convert a type to a class.
Convert the given value to the given class. If the class is null then the value is
Get the types of the parameter values. The types are the types of the parameter values.
Checks if the given types are the same and all of them are the same.
Returns the next binding. If there are no more bindings then an exception is thrown.
Returns true if there are more bindings. If there are no more bindings returns false.
Map a java. lang. Object to a java. naming. Object using the JNDI
Register a health check that will be called when a resource is added to the list of delegates
Close the health check. This is called when the server shuts down.
Returns the handle for the given locator.
Returns the enum value represented by the given model node. If the node is not an enum
Skips the specified number of bytes from the input stream.
Checks that two elements are not already in the seen set. If they are throw an exception
Adds a component description to the registry.
Adds a set of class loaders to the deployment.
Unbinds the component with the given name. If the name is the last component of
Lookup the object with the given name. If the name is empty a new name will be
Returns a list of the names of the elements in the tree. If the name is empty
Returns a list of bindings for the given name. If the name is empty a composite name
Add a factory to the chain.
Saves the given context object to the given service. The given properties will be added to the
Creates a new IO subsystem if it doesn t already exist.
Adds the welcome content handler to the migration operations.
Gets a bean from the pool. If the pool is full the bean will be returned.
Calculate the operation analysis map.
Collect metrics for a resource and its subresources.
Prepare the deployment unit. This method is called when the deployment unit needs to be started.
Deploys a service target to a WildFly unit.
Publishes the context to the target. This method is called when the context is created.
Stop the web app in the given deployment.
Start the deployment.
Register a new endpoint configuration for the given endpoint class.
Called when a timeout occurs. This method is called when a timeout occurs. If the timeout
This method is called after the timeout processing has been performed. This method is called by the
Returns an array of the declared methods of the given class. If the current security manager is
Returns the declared fields of the given class. If the current user is a privileged action
Returns a constructor for the given class with the given parameters. If no such constructor is found
Get a method from the given class with the given name and parameters. If the class is
Adds a messaging active node to the migration.
Checks if the given parameter is allowed for the given resource type.
Migrate a generic transport.
Cancels the task. If the task is already cancelled it will be set to false.
Run the task if the task is not cancelled.
Internal method to set the type of the resource. This method is called when the resource is
Checks if this function can execute an indexed function without an index. If the identifier is null
Finds all classes in the given directory and its sub - directories. If the directory does not
Get the list of classes that implement the given interface in the given package and with the given
Returns the generic multivalue type for the given field.
Returns true if the given record is contained in the given left and right values.
Derives the field type from the given record field name and field type.
Updates the given record in the underlying store. If the record is not dirty or tombstone
Find the record with the given id. If the record is found the counter is updated.
get minimal set of nodes for sharded queries
Move flatteded equalities from left to right.
Adds the additional order by projections to the query planning info.
Extract sub queries from planning info.
Returns true if the RID is from one of the clusters in the filter set.
handle class with index for sort only.
Returns true if the given class is a diamond hierarchy.
Returns true if the order direction of the planning info matches the direction of the order by
Returns true if the given key condition requires multiple index lookups.
Find the best index for the given block and class.
Returns the common factor between the two lists of descriptors. The first list is the list of
Creates a new instance of the given strategy.
Checks if the document is allowed to perform the given operation. If the document is not allowed
Checks if the given rule is defined in any of the roles. If the rule is not
Returns a compact version of the server status. The server status is a list of server names
Initialize system database.
Load local databases.
Called when a member is removed from the cluster. This method is called when a member is
Acquires a new lock manager and returns the name of the lock manager. The lock manager
Assign a lock manager to the current cluster.
Commits the current transaction. If the current transaction is not active an error will be thrown.
Rolls back to the current level. If the current level is greater than the current level
Updates the identity after a record has been committed. If the identity is the same as the
Update record cache after rollback.
Prepare for file creation or replacement.
Performs an atomic copy of source to target with a fallback to standard copy if the move fails
Returns a list of patterns that are disjoint from this pattern.
Executes the command only if the command is idempotent.
This method is called for each character in the input stream. It appends the characters to the
Returns true if the socket is connected to the server. This method does not close the socket
Merges two buffers into a short.
Splits a short value into two buffers. The first buffer will be put into the second buffer
Returns the number of fields in the class. If the field does not exist throws an exception
Put a single value into the map.
Removes the value associated with the specified key. If the key is null then nothing is done
Executes the command and returns the result as a list of objects. If the result is a
Execute the query with the given arguments and return the first result or null if there are no
Creates a new version of the channel.
Checks if there are enough regions in the buffer. If there are not throw an exception.
Replaces the existing content with the new one. The existing content will be replaced with the new
Sends a command to the server and returns the result.
Ends the current request and releases the write lock. This method is called when the request is
Add the host to the host string. If the host starts with localhost it will be added
Sends a request to the given network and session using the given command. This method does not
Get the current database owner. If the current database owner is not an instance of o then
Get a connection from a channel. This method is called when a connection is received from a
Kills a connection.
Interrupt the connection with the given id. If the connection has a protocol associated with the channel
Disconnects a channel from the server. If the connection is still open it will be closed
Push the distrib cfg2 clients to the connected clients. This is used to push messages
Swaps the value at the given index with the given new value. If the index is
Release all locks held by this lock manager.
Synchronize the schema with the database. The schema will be automatically generated if the database is
Updates the metadata for a metric. If the description is null the metric will be added to
Move to the last record in the cluster.
Returns the next character in the input stream or - 1 if there are no more characters.
Executes the sub - query and returns a list of objects that are referenced by this query.
on async replication error.
Register a new compression class.
Get the number of open files in the database.
Returns true if this expression allows indexed function execution on the given target object and operator and right
Moves the specified number of elements from the specified position to the end of the buffer.
Fills the buffer with the specified byte sequence with the specified filler byte.
Execute the script until the return statement is reached.
Execute the full script. The full script will be executed until the return statement is reached.
Evaluate a single record.
Executes an OSQL query.
Loads a record from the storage.
Parse the request and return the result. If the request is an osql the result will
Executes the command with the given arguments.
Update the schedule with a new start node and a set of edges that have been visited.
Adds an index definition to the collection.
Creates a new aggregation expression with the given projection and split. If the expression is an aggregation
Determine the type of the source object based on the context. If the context has a class
Returns the collate of the given document or null if the document is not a collection.
Returns the value of the field replacing all occurrences of the string with the given string.
Advances the probe index by one bit.
Execute the command. The command is executed in the context of a cluster. The command is
Build a json object from a json file.
Checks the password against the given hash.
Creates a hash using the specified algorithm and input. If the specified algorithm is not supported then
Checks if the given algorithm is supported.
Creates a new cluster index with the given index definition and cluster name. The index definition is
Returns an iterable of vertices that have been added to the graph. If the graph is active
Returns an iterable of all edges in the graph. If the graph is active it will return
Returns the partition key for the current task.
Returns the distributed timeout in milliseconds. The distributed timeout is the number of seconds to wait before
Returns the set of features that are supported by the graph.
Check if the changes have been filled up to the given page index.
Parses the timeout.
Parses the lock keyword and returns the string. If the string is not a valid lock keyword
Creates a new cluster in the system database.
Frees a cluster from the cache.
Start the profiler. This method is called at startup to register the size of the metric.
Shuts down the OrientDB instance and unregisters the profiler hook.
Creates a transformer that transforms the given entity into a single instance of the given transformer.
Grant access to a specific resource.
Revokes the specified permission on the specified resource. If the specified permission is not granted
Returns true if the record is valid. If the record is valid it is added to the
Resets the hash table to the last num bits and increases the size by the number of
Returns the index of the given item in the hash table.
Spreads a random number into a new number. The number must be a power of 2
Creates an index of the given type. The index will be created in the current schema.
Drops all indexes related to this resource.
Returns the index associated with the global reference or null if no index is associated with the global
o Get the linked class.
Convert the embedded set to a stream of objects. The returned object will be stored in the
Remove the given listener from the list of listeners. If the list is empty then all listeners
Register a database with the manager. If a database with the given name already exists it is
Timeout a request. This method is called when a request has timed out. If the request
Creates a copy of the database.
try to merge other value into this one. i merge single items of multi value fields.
Replaces the delegate tree with a new tree with the given pointer. The delegate tree will be
If result is a map return it. Otherwise return the original object.
Adds a new cluster to the database. If the cluster does not exist it will be created
Closes all connections in the pool. This method should be called when the pool is closed.
Called when a storage is unregistered. This method is called when a storage is unregistered.
Returns a set of all function names in the system.
Get a set of all the names of all the collate factories.
Returns a set of all the command names in the system.
Reads the field size and type from the current position.
Write HTTP status code and reason to the response.
Writes the response headers to the client.
Write the records to the response.
Writes a record to the response. The record will be fetched with the given fetch plan.
Sends a response with the specified status code reason content type and content.
Sends a stream to the client with the specified status code reason content type and size.
Open the database.
Closes the connection and releases any resources associated with it.
Listen for changes in the given collection.
Completes a single component operation.
Pushes the counters for each component in the snapshot to the counters map. If the component
push write cache counters into holder. holder can be null if there is no current snapshot.
push the storage counters into the holder. If the holder is null return the current holder.
Push the current wal data to the given holder. If the holder is null the current wal
Pushes the counters for the given component to the given holder.
Stop the write cache flush timer for the specified number of pages.
Stop the fuzzy checkpoint timer and record the time since the last time it was called.
Stop the full checkpoint timer.
Stop the commit timer and record the elapsed time since the last call to this method.
Stop the current wal record. This method should be called when the current wal record is stopped
Stop the WAL. This method should be called at the end of the current thread.
Parse an OSQL statement into an OSQL object. If the database is not defined the
Starts a new thread to receive messages from the server. The thread is started in a new
Check if known servers are alive. If not schedule a timer to check if known servers are
Removes the record from the database. If the record does not exist an exception is thrown.
Sets the value of a property in the record. If the property does not exist it will
Removes a property from the record. If the property does not exist it will be created.
Checks if a class exists in the schema. If not it will return the class name.
Wraps a cursor in a source object. If the cursor is already an instance of o it
Define a vertex attribute strategy.
Define an edge attribute strategy.
Returns a list of new record entries for the given class. If the class is null then
Get new record entries by cluster ids. If the cluster ids is null return an empty list
Adds an entry to the index. If the entry already exists it will be overwritten.
Merges two sets. If the target set is null the source set is returned. If the
Returns true if the filter should be applied to the given object. If the filter is not
Returns true if the function can be applied to the right. If the function can be applied
Prepare a set of keys to be inserted into the index. The keys will be converted to
Writes a page to the buffer.
Read a page from the file and return it as a byte array. If the page is
Truncates the page at the given index to the end of the file.
Opens the file for writing. If the file is larger than the number of pages the file
Returns true if replication is active for the given cluster and local node.
Gets the new node strategy.
Checks if the execution mode for the given cluster is synchronous or async.
is read your writes.
Get the server cluster map for the given cluster names and local node. If the cluster names
Returns a set of servers that are configured for the given cluster names.
Checks if a server is contained in a collection of clusters. If the server is not contained
Checks if the given server is contained in the given cluster.
Returns a list of the servers that are the master of the cluster.
Returns a set of all servers configured in the cluster.
Returns a set of cluster names that are connected to the specified server.
Returns a set of cluster names owned by the given server.
Returns the cluster owner for the given cluster name or null if the cluster is not configured.
Returns the cluster owner for the given cluster name or null if the cluster name is not configured
Get the list of servers configured for the cluster.
Returns a set of all the servers that are registered with the server manager.
Returns a set of all data centers that are configured in the configuration file.
Returns the write quorum for the given data center.
Returns true if the cluster is sharded or false if it is not sharded.
Get the list of servers for a given data center.
Get the data center of a server.
Get the global read quorum for a cluster.
Returns the write quorum for the given cluster. If the quorum is not configured the default quorum
Returns the configuration for the specified cluster. If the cluster name is null then all wildcard is
Get the data center configuration.
Clear the initialization stack and remove the active graph from the active stack.
Get an index by name and index class.
Drops the index with the given name.
Add a vertex to the graph.
Adds an edge to the graph. The edge will be added to the graph in the order
Returns the vertex with the given id or throws an exception if the id is not a vertex
Returns an iterable of vertices of the given class. If polymorphic is true only vertices of
Returns an iterable of edges of the given class or all edges of the given class if pol
Returns the edge with the given id or throws an exception if no such edge exists.
Reuse the given database.
Shuts down the connection. If the connection is already closed it will be rolled back.
Get the base type of the vertex.
Get the vertex type with the given name.
Create a new vertex type with the given class name and number of clusters.
Drops the vertex type with the given name.
Get an edge type by name. If the edge type does not exist null is returned.
Create a new edge type with the given class name and number of clusters.
Returns the element with the given id or throws an exception if the id is not a valid
Drops an index for the given key. The index will be created if it does not
Remove a listener from the list of listeners to be notified when a background exception is caught.
Fires a background data flush exception event.
Stop monitoring the state of the thread pool. This method is called when the thread pool is
Register a new MBean with the management system. If the mbean already exists it will be replaced
unregister the mbean with the given name and storage id
Fetch the write cache counters from the cache and update the holder with the read cache counters.
Fetch the system counters from the counters holder. This method is used to fetch the system counters
Fetch the counters for the given component.
Returns the value of the property with the given name or the default value if not found.
Detaches the given instance from this instance. If this instance is a proxied instance it will
Returns the version of the given object or - 1 if the object does not exist.
Executes the given command on the database and returns the result as a new instance of ret.
Sets the dirty flag for the given object. If the object is null nothing is done.
Unsets the dirty property of the given object.
Returns a set of all the types in the index. The types are the types of the
Returns a set of all the index engines.
Returns a list of nodes that are missing from the cluster.
Get the responses that conflict with the current server. This is the response groups that have been
Returns the index of the group that contains the most coherent responses.
Computes the quorum response. If the timeout is reached the quorum response is returned. Otherwise the
Returns a list of the responses received from the server.
Get the result of a prepared statement. If the statement is null then null is returned.
Returns true if this index operator allows execution on the given target object and context.
Returns the library name for the given database object and language. If the database object is null
Release a database engine.
Get the next position in the cache.
Updates the size of the bag and returns the new size.
Returns the value at the given index.
Can be used by order by after filter.
Returns the index of the character outside of the specified range of the specified string.
Jump white spaces to the specified position in the specified text starting at the specified position.
Returns the index of the first num characters in the given string starting at the given position.
Sets the fetch plan to be used for this query. If no plan is specified the default
Enqueues a repair record to the repair queue. If the record is not persistent it is
Cancels the repair record if it is not already in the cluster.
Enqueue a repair for the given cluster id. If the given cluster id is less than the
Get the dependencies of the given pattern. This includes all patterns involved in the pattern and all
Creates a new instance of an entity of the given class name.
Registers the given entity classes with the given class loader. The class loader is used to load
Registers the given entity class. If the recursive flag is set to true the class will be
Sets the class handler for this entity.
Acquires a database from the pool. The database will be created if it does not exist
Get the number of available connections for a given user.
Acquires a database from the pool.
Executes the REPLACE command.
Returns an iterator for the objects of the given class. The iterator will use the class loader
Check cache memory configuration.
Create a vertex from a JSON object.
Create an edge from a JSON object.
Convert an element to a JSON object.
Create an object node from an element.
Creates a new job and adds it to the pool. The current job will be set to
Returns the status of the current job.
Returns a map of active data center names to a set of active data center names.
Splits the given string by the given algorithm and returns the first element of the array. If
Create an instance from a key configuration. The key configuration can be either a string a file
Create a new key from a file. The file is read from the system variables and then
Creates a new key from the given input stream.
Encrypt an array of bytes using the secret key and the transform. If the transform is null
Save the key to the given output stream.
Save the file to a keystore.
Sets the child of this node. If the context is null the child is not set.
Adds an object to the result set if it is not already in the result set.
get value as object or map.
Authenticates a database with the given username and password. If the database does not exist
Get the entry from the given map. If the key is a string the value of the
Returns the current record or null if there is no current record.
Read the current record. If the limit is greater than or equal to the number of records
Get the current transaction graph.
get no tx graph
Setup the pool for the Orient graph factory. The pool will be closed when done.
Returns the property with the given name. The property name will be converted to lower case and
Stop the current transaction. If the current transaction is successfully committed or rolled back the current transaction
Returns the next token in the stream.
Returns the token at the given index.
Returns an iterable of vertices in the specified direction. The vertices are returned in the specified direction
Remove this vertex from the ridbag.
Add an edge to the graph.
Adds an edge to the graph with the given label in the given vertex and class name.
Returns the connection class for the given direction and field name. If direction is out or in
Returns the connection object for the given direction and field name. If the field name is null
Process broken rids.
Returns a map of console method names to their respective objects.
Execute a task on a local node.
Returns the number of nodes in the given collection with the given status for the given database.
Wait for the next retry.
Returns the argument at the specified position.
Returns the number of parameters with the given names.
Connect to the server with the given username and password. The server will connect to the server
Get a list of all the databases in the system.
Returns information about the server. This method is deprecated and will be removed in the future.
Checks if a database with the given name and storage type exists.
Drops a database.
Freezes the database.
Release the database.
Get the current cluster status.
Get the current active graph or create a new one if it doesn t exist.
parses the retry word and the wait word if it is an integer or the wait word
Saves a single record to the database. This method is thread - safe and should not be
Delete a record from the database. If the record is not persistent nothing is done.
Returns the authentication header for the given database name.
Authenticates the user with the given username and password. If the server is not configured
Returns true if the user is authorized to execute the specified action on the specified resource.
Shuts down the server if it is not already shut down.
Adjust the beginning of the line and column of the buffer.
Sets the value of a bucket pointer.
Get the bucket pointer at the given offset.
Ends an atomic operation. If rollback is true the operation will be rolled back otherwise it will
Acquires an exclusive lock till the operation completes. If the operation already holds the lock it
Changes the maximum amount of memory in the read cache.
Starts listening on the given host and port range.
Read the parameters from the server configuration.
Shuts down the log manager. If the log manager is an instance of shutdown log manager
Adds an item to the log. If the item already exists it will be overwritten.
Remove an item from the cache.
Acquires the lock for the given key. If the lock is already held returns null.
Returns the value associated with the given key or null if there is no value associated with the
Remove all entries from the cache. This is a no - op if the cache is full
Closes the entry with the given key. If the entry is already closed nothing is done.
Empty the read buffers.
This method is called after a write operation. It is called after the write operation has been
Inserts the given entry into the read buffer and drains the read buffer if needed.
Put an entry in the read buffer.
Returns the closest power of two greater than or equal to the given value.
Called when a push request is received from the server.
Converts the given key to an enum value. If the key already exists it is overwritten.
Converts all entries in the underlying map to enum values. If the underlying map is already converted
Returns the serializer for the given type or null if no serializer is registered for the given type
Initialize the shutdown queue. This method should be called at the beginning of the shutdown process.
Returns the engine with the given name or null if no engine with the given name exists.
Add a new state to the list and return the new entry.
Authenticates the user with the given token. If the token is invalid throws an exception
Creates the metadata for the database.
Try to acquire a read lock. If the read lock is already acquired this method returns false
Get a vertex in the specified direction.
Returns the id of the element.
Sets the value of a property in the current graph. If the property already exists it will
Removes a property from the graph. This method is thread - safe and should not be called
Removes all entries from the tree.
Deletes all entries from the bucket.
Finishes the importer. This method should be called at the end of the importer process.
Create a new vertex in the graph. If the vertex already exists it will be overwritten.
Parses the strategy keyword.
Get the positions from an embedded collection.
Executes the query with the given arguments.
Checks if the given value is a link to the current cluster. If it is a persistent
Fills the given record with the given data. If the record does not exist it is created
Sets the version of the given record to the given version number.
Get the type of the given record.
Initializes the distributed database instance.
Print the stack trace of an exception.
Convert a Link2 record to a Link3 record. If the record is a Link2
Register a command with the server.
Creates a server user object from the given user document.
Analyzes the given condition and returns a list of index search results.
Creates an indexed property from an osql condition. If the item is not an osql
Attaches this object to the given object.
Get the index class from the class name. If the class name is null null is returned
Returns the next value in the list. If execute is true the next value is returned.
Truncates all the clusters in this class.
Adds a base class to the list of subclasses of this class. If this class is already
Adds the polymorphic cluster ids to the indexes.
Creates a link to a stream. If the stream is empty the link is not created.
Releases a pointer back to the pool. If the pool is full the pointer is deallocated
Check if memory leaks are detected in the database.
Removes all pointers from the pool and deallocates all the pointers from the mapping and the
Convert a byte array to an integer using the least significant bit in the first two bytes.
Open a database. This method is called when a database is opened.
Installs clusters of a class in a database.
Dumps the current status of the servers in the cluster. This method is used to dump the
Returns the index of the specified object in the specified array or - 1 if the object is
Returns the index of the specified object in the specified array or - 1 if the object is
Returns a set of clusters involved in the target query.
Handle the result of the search.
Returns the temporary RID for this query. If this query has no parent it will return
Add a message to the list of tips to be displayed.
Parse the FETCH PLAN keyword.
Check if the keyword is the nocache keyword and if so set the flag to true.
Optimize the sort of the given class. This method will fetch the values from the index
Returns the current status of the batcher.
Execute the command with the given arguments.
Handle jvm error.
Inserts a new value into the specified index with the specified key. If the key already exists
Rolls back the current transaction to the given micro transaction. If the current transaction is not
Execute a command in a thread - safe manner. This method blocks until the command is executed
Registers a new cluster with the cluster manager.
Sets the property with the given name to the given value. If the value is null the
Creates a new class if it does not already exist and returns the number of created classes.
Executes the update statement and returns the result. If the update operation is successful the result will
Delete a record from the database.
Call the registered hooks for the given record. If the record has changed return true. If
Delete the record with the given id. If the record does not exist it will be created
Counts the number of rows in a view.
Counts the number of instances of the given class.
Activates this object on the current thread. The current thread will be set to this object
Registers an instance of the given encryption class.
Returns the index relative to the given position in the current chunk. The size and index are
Returns the next non - empty word or null if there are no more words.
Get the next required word.
Returns the number of characters in the input stream.
Returns true if the next word is an optional keyword and false if there are no more words
Check if the given character is a separator in the given string. If it is set the
Execute the query. If the query is successful the result will be stored in the database.
Clear the configuration files.
Get the next number of bytes from the buffer as a byte array.
o Extract the token from the request and return it as a string.
Acquires an access token from the request and stores it in the context and returns it.
Copy the token from the security context to the current context. If the current context does not
Returns true if there are no more characters.
Read a line of data from the stream into the specified byte array using the specified line terminator
Skips n bytes from the input stream and returns the number of bytes skipped.
Ensures that the given offset and length are within the array. Throws an exception if the offset
Swaps two numbers in - place.
Computes a MurmurHash3 hash code for a given integer.
Hash a long using MurmurHash3 s algorithm.
Writes the given byte buffer to the underlying stream. If the stream is already open it will
Truncates the file to the given size. If the file does not exist it will be
Changes the current position of the stream or file.
end metrics reporting with exception catching the exception and reporting with no exception catching the exception
Await successful completion of all currently running tasks.
Returns a stream of objects that match the given query.
Returns a set of compaction targets that can be used to compact the schema.
Clean up the snapshots. This method should be called at the end of every snapshot. It
Returns the hash code for the given field position in the given ordinal.
Remove references that are outside the closure.
This method is called when an announcement is complete. It is called by the producer when it
Called when the producer completes a cycle. This method is called when the producer completes a cycle
Reads the header tags from the input stream and returns them as a hash map.
Extract the primary key from the given object.
Clear all the bits in this set.
Reads all the ordinals from the given input stream and notifies the given listeners.
Returns the estimated number of bits used in the sparse set.
Get the field value from a hollow diff view. If the field is a leaf node
Copies the contents of the source buffer to the destination buffer starting at the source position and moving
Copies the specified number of bytes from the source position to the destination position and returns the number
Returns true if this segmented byte array is equal to the given segmented byte array.
Copy bytes from the source array to the destination array starting at the given position in the source
Copy length bytes from src to dest starting at position pos. The length is guaranteed to be
Reads from the given input stream. The input stream is assumed to be in sorted order.
Writes the contents of this segment to the given output stream starting at the given position.
Ensure that the given segment has enough memory to hold at least num bytes. If the segment
Returns the position of the field in the list. If the field is not found - 1
Calculates the number of deduplicated sizes and the total number of select buckets.
Returns true if the given dataset has any collections in it.
Generate all the files that need to be generated. The directory parameter specifies the directory where the
Generate the hollow schemas in the given directory.
Returns true if this field matches the given keys. The keys must have the same number of
Get the value of the field at the given ordinal as an array of objects.
Create a field path for a primary key.
Create a field path for a hash index.
Associates the given object with the given ordinal in the hash table. If the object already exists
Initialize the field. This method is called when the field is initialized. This method is called
Returns true if the map contains the given key. If the map does not contain the key
Adds a field to the specified type.
Convert a collection of schemas into an ordered list of schemas.
Initializes this schema with default values. This method is used to initialize the schema with default values
Returns the value at the given index.
Find all matching records for the given field name and value.
Find all matching records for the given type and field name and value.
Set the paths to match. The paths will be matched by key or non - key.
Sets the element key paths to the given paths.
Restore from the last state of the state machine. This method should only be called from the
Runs the mutation cycle and returns the version number of the cycle. If the version is the
Mark the given primary key as excluded. The given primary key must not be null.
Exclude all objects that have been referenced by any state engine. This includes all objects that have
Write a hollow blob header to the given output stream.
calculate heap footprint and ordinals for each type in the engine s type states.
Writes the data to the given byte buffer. The byte buffer must be large enough to hold
Writes a fixed length integer to the given buffer.
Writes a fixed length long to the given buffer.
Return an ordinal to the pool. If the pool is full a new one will be allocated
Sorts the free ordinals in ascending order. The free ordinals will be sorted
Returns a hash code for the given key and field type.
Returns the hash code for the given key and field type. The field type must be one
Resizes the storage to a new number of elements per node and recalculates the storage
Returns the next available ordinal or - 1 if none is available. If the preferred ordinal is
Prepare for a write operation. This method is called before the write operation has been performed.
Compares the contents of the given data buffer with the contents of the given key in the given
Grows the key array by a new number of pointers and ordinals.
Rehashes the previously added data with the given key and returns the new hash code.
Create an empty key array with the given size.
Returns true if the two lists have the same number of fields and the values are equal.
Returns the type of the object that matches the given key or null if the key does not
Creates a new read state helper that swaps the current state and the pending state.
Returns the size of a hash table. The hash table must be large enough to hold num
Cycle through the read states in the current read state and run the compaction if necessary.
Writes a snapshot of the state to the given output stream. The output stream will be flushed
Writes the delta to the given output stream. The output stream will be closed after this method
Add schema to set if it s not primitive or collection. If it s a collection add
Normalize field path to param name.
Rebuild the hash index.
Returns the index of the first object that matches the given query. The query is assumed to
Trigger an asynchronous refresh with a random delay. If the delay is greater than the max delay
Trigger a refresh with a delay in milliseconds. If the delay is greater than the number of
Create a new Hollow type diff and add it to the diffs map.
Writes the given value to the given output stream. The value must be between 0 and 65535
Writes a value to the given byte array at the given position in big - endian order.
Read a variable length integer from the input stream.
Reads a long value from the input stream.
Add a child view to the view group. This method is called by the child view s
Refresh the loading views size.
Update the UI of the view.
Called when a pull event is received.
Creates a new fact builder with the given name and value.
Creates a new given rule with the given facts. The given facts will be added to the
Creates a builder for the given rule chain and action type.
Creates a builder for a golden rule.
Creates a builder with the given fact type.
Creates a builder for this rule with the given result type.
Creates a new given rule with the given name and value. If the given rule already exists
Creates a new given rule with the given name and the given facts. The given facts are
Returns a new then rule with the given action applied to the given name value referable type
Returns the instance of the given rule or null if the rule cannot be instantiated.
Returns the first non - null field annotated with the given annotation on the given class or null
Returns a method annotated with the given annotation on the given class or null if no such method
Returns the annotation of the given class or null if the annotation is not present.
Registers the given auditable rule. The rule will be added to the list of rules that
Updates the status of the given rule. If the rule is already in the audit map it
Returns a map of rule names to their corresponding status. If no rule is found for the
Create a new rule book with the given result type.
Adds an action to the rule. The action will be executed when the rule is executed.
Adds an action to the builder. The action will be executed when the builder is executed.
Resets the value to the default value.
Book rule with fact type.
Returns a list of pojo rules that are annotated with the rulebook annotation.
Read an empty line or end table.
Convert a list of services to an array of services.
Get the ports from the build configuration.
Extract the ports from the configuration file.
parse port mapping string and return service port object.
Add a port to the list if it is not null.
Returns the next available service port shift or null if there are no available ports.
Add missing service parts to the service builder.
Append an image stream to the target file.
Checks if the ports match the given service port or string.
Get service port from environment variable or system property. If not found return blank string.
Get the host and port for the given service name.
Adds the given value to the given map if it does not already exist.
Merges the given map into the given map. If the key is present in the given map
Merge two maps into a single map. If both maps are null a new map is created
Put all values in to map if not null.
Wait until a pod is ready.
Validates that the given value is a valid kubernetes id.
Convert an entity to a list of items.
Get the resource version of an entity. If the entity has no metadata null is returned.
Returns true if the pod is ready to run or false if the pod is not running.
Get the current context from the configuration.
Returns true if the list builder has a route with the given name.
Returns true if the project has a resource at any of the given paths.
Read and enrich a file fragment.
Convert a map of env vars to a list of env vars.
Merge two resources and return the first one.
Merges the override map with the original map and removes any empty strings from the override map.
Checks if a pod is local customisation.
Read config from file.
Adds a port to the map if it is valid.
Get the docker config as a json string.
Get the plugin configuration for the given system and id.
Get the secret configuration for the given id.
Downloads a file from the given url and writes it to the given target file.
Compares two version strings and returns the number of occurrences of the first occurrence or - 1 if
Blend the given profile with the given file resource dir.
Looks up a profile by name and file directory.
Read a list of profiles from the classpath.
Read all profiles from the classpath with the given name and extension.
Finds a profile in the given directory. If the profile does not exist null is returned.
Get the paths to the meta inf files for the given profile extension.
Read a list of profiles from a YAML stream.
Get the image pull policy from the resource config or the default value if the resource config is
Returns true if shift mode is open.
Get the number of replicas in the deployment config or the default value if the configuration is not
Returns the first child element with the given name or null if there is no such child.
Installs a template.
Removes a tag from the list of tags by name. Returns the number of removed tags.
Creates a namespace if it doesn t already exist.
Apply a project to the current user s account.
Apply a project request to the OpenShift cluster.
Returns the namespace for the given entity or the default namespace if no namespace is specified.
Log an error and throw a runtime exception.
Create a kubernetes resource.
Enrich a kubernetes list builder with the current namespace.
Get the environment variables for the mojo execution.
Returns the number of seconds in the given duration string. If the duration string is null or
Converts a duration string into a big decimal. If the duration string is empty returns null.
Scan the files in the build output directory and return the names of the files that match the
Disable the open shift features for the given service.
Checks if a given service has an ingress rule.
Parse the given mapping into a hash map. The keys are the file types and the values
Get the default icon reference.
Copy app config files.
Get properties from a resource.
Returns the version of the spring boot dependency.
Enriches the list using the enricher configuration.
Get the raw configuration for the processor.
Flattens the source map into a new map. The source map is not modified.
Creates a template for the given list of resources. This is a singleton instance of the template
Get the build reference date from the mojo execution.
Returns the value of the given key or the default value if the key does not exist.
Returns the configuration map for the given name or an empty map if the configuration does not exist
Prepare a list of named processors to be executed. This method will return a list of named
Adds the from image to the builder.
Returns the default from mode if the mode is openshift and the from selector is red h
Get the name of the image. If the runtime mode is open shift mode the name will
Get the registry. If the runtime mode is not open shift mode then return null.
Returns true if the server is online. If the server is not online returns false.
Get the url of the given service. If the service is not available null is returned.
Returns the value of the given property as a boolean or null if the property is not set
Create a new jest client with the given uri.
Create a new internal node and return its id.
Scan plugins.
Creates an american rewards balance object from a JSON string.
Gets the rewards balance for the given nonce and currency.
Create a new payment resource from a JSON string.
Get the resource at the given path and call the given callback with the response if successful.
Override the default post method to add the authorization fingerprint to the data and call the callback when
Creates a new venmo configuration object from the given JSON object.
Collects the device data from the fragment and calls the given listener for each device data found.
Collect device data from a Braintree fragment.
Collects pay pal device data from the fragment. The correlation id is the correlation id of the
Get client metadata id.
Checks if a signature is valid for a given package subject issuer and public key hash code.
Get the string property or the fallback value if the property is null or empty.
parse list of payment method nonces
get browser checkout config
get browser billing agreement config
Perform a GET request on the server. This method is thread - safe and should not be
Sends a POST request to the specified path with the specified data and calls the specified callback on
Sends a POST request to the specified path with the specified data.
Approves a payment.
Adds a listener to the list of registered listeners. The listener is added to the list of
Removes a listener from the list of registered listeners.
This method is used to request the billing agreement of a payment. If the billing agreement is
This method is called when an activity result is received from the client. This method is called
Parse pay pal response and return pay pal account builder.
Add nouns to the dictionary. Words will be converted to Scala format.
Remove a list of words from a korean word dictionary. Words are not removed
Transform a sequence of korean tokens into a list of java strings.
Extract korean phrases from a sequence of korean tokens.
Takes a list of tokens and returns the first token that was found in the list.
Fetch data from the given channel into the given buffer.
Join a list of byte buffers into a single byte buffer. The resulting byte buffer will be
Concatenates units from units to out.
Returns the profile for the given index or unknown if the index is out of range.
Normalizes taps to a fixed precision and generates a fixed precision. The taps are assumed
Reads the next marker from the input stream and writes it to the output buffer.
Read to the next marker in the stream and combine them into a single buffer.
Returns the maximum number of frames that can be read. If max is - 1 then the
Modify the given file with the given edit. If the file does not exist nothing is done
Get the edited duration of the given box.
Returns the time value of a given frame in the time - to - sample box.
Convert a time value to a frame.
Given a box and a time return the number of times that have been edited for that box
Returns the number of media that has been edited since the specified time.
Set the player frame number to the given frame number in the given movie box.
Get the time of the player in the given movie in the given frame. The time is
Convert a time value to a frame in a movie.
Format the given timecode with the given counter. The counter will be divided by the number
Returns a 7 - bit value from the given four - bit integers.
Set the n - th bit in the list to the given value and return the result.
Returns true if the input color space matches this color space false otherwise.
Returns a new size based on the width and height of the specified component. If the component
Create a raw movie from the given channel.
Reads the next word from the buffer. If peek is true the next word will be read
Create a wav header with the given audio format and number of samples.
Create a multi - channel WAV header from an array of WAV headers.
Parse an AAC configuration from a byte array.
renormalizes the current state and renormalizes the current state to the next state.
Split a movie into two. The first edit is the first edit of the movie and the
Decode a single frame into the given buffer. The frame is assumed to be a byte array
Set whether or not the data should be big endian or not.
Deblock the current mb from the left mb to the top mb. The current mb is
Encode a picture into a native video frame.
Encodes a long value into a byte array of the specified length.
Returns the number of bits greater than or equal to v in the range [ 0 num )
Adds a packet to the stream. If the packet is already in the stream it will be
Repositions the file to the beginning of the next packet.
Returns the decoded binary value of the given message. The message is assumed to have the same
Decodes the next number of bits in the code. The code is assumed to be at least
Returns the next n bytes from the buffer that is in the range [ mmin mmax
Returns the sample frequency for the given index.
Predict the location of a plane in the image. This is the same as predicting the
Sets the start of a block. The start of the block is set to the start of
Calculates the coefficient of a block. The block is assumed to have the same length as the
Finishes the block by dividing each element in the block by the number of elements.
Concatenate the given bits buffer into this one.
rewinds v to the start of the next 32 - bit value in reverse order.
Seek to a specific frame in the video. If the track is a seekable demux
Get the image from the buffer. The image is stored in the store. The image is
Returns the index of the change point in the gain table for the given change point.
Converts a byte array to an integer array.
Converts an integer array to a big endian byte array.
Read a float from the given buffer. The buffer will be filled with the number of samples
Read a sample of a float from a buffer. The sample size must be in bits.
Interleave the input audio data into the output buffer. The output buffer must have enough space
Deinterleaves samples from the input buffer into the output buffer. The output buffer must
Returns the coded size of the video sample.
Build a wipe map.
Reads an array of unsigned integers from the given byte buffer.
Reads a batch of int32 values from the given byte buffer.
Calculate the MV value of two boolean vectors.
Encodes the given picture into the given output buffer. The output buffer will be filled with the
Encode an IDR frame into the given output buffer. The output buffer must be large enough
Encodes a picture into the given output buffer. The output buffer must be large enough to hold
Returns a list of all codecs supported by this server.
Returns a list of all supported tags.
Adds a JNI reference to the list of references.
Remove all objects from the queue and delete them from the pool.
Deletes all references in the queue. This method is thread - safe and should not be called
Load a JNI from the given app name and library. This method is intended to
Unpacks a library from the given path and returns true if the library was successfully unpacked.
Delete temporary files.
Returns the default audio layout for the specified number of channels.
Returns the audio channel with the given index in the given layout.
Create a new packet.
Returns the version information as a string.
Returns the default time base. If the default time base is not known null is returned.
Creates a new demuxer. The demuxer can be used to demultiple
Play a video.
Display video at correct time.
Creates a codec descriptor for the given codec id. Returns null if the given id is not
Prints the given option to the given stream. If the option is not of the same type
Register a new factory for the given protocol prefix. The factory will be registered with the given
Generates a unique name for the given object.
Create a new audio resampler.
Returns a collection of the supported video frame rates.
Get the list of supported video pixel formats.
Returns a list of the supported audio sample rates.
Get the list of supported audio formats.
Returns a list of all the channels that are supported by this library.
Sets the given flag to the given boolean value. If the flag is already set it will
Sets the value of the specified 2 - bit flag in this buffer to the specified boolean value
Returns the decoder associated with this swig. If no decoder is associated with this swig
Get the demuxer for this channel.
Returns a collection of all available formats.
Creates a new filter graph. If the graph has already been created this method returns null.
Get the type of this filter or null if this filter is not a filter of this type
Get a byte buffer from the buffer.
Create a new audio frame with the given format.
Resample a picture with a given resampler.
Validates that the image is in the correct format. This method is called when the image is
Validates that the picture is a valid picture.
Returns the filter graph associated with this node or null if there is no filter graph associated with
Returns the meta data associated with this key. If no meta data is associated with this key
Get the CPU name from the given java cpu string.
Get the native CPU name from a GNU string.
Get the operating system from the given name.
Returns the operating system of the given GNU string. If the given string is null
Plays an audio file.
Loads a library with the given name and major version. If the library has already been loaded
Adds a major version to the list of versions that are loaded for a given library.
Loads a library from the given list of libraries.
Initialize the search paths. This method is called from the constructor to initialize the search paths.
Check if a library has already been loaded.
Deletes the object from the database. If the object does not exist it will be created.
Get the stream at the given position.
Returns the muxer associated with this channel or null if there is no muxer associated with
Create a new transaction with the given parameters. The sender is the sender of the transaction.
Decodes a base64 encoded string into a byte array. If the input starts with the base
Generates a random string that can be used as a seed for a random number generator.
Get a transaction by id.
Get a list of transactions that belong to the given address.
Get a list of transactions from an address.
Returns a list of block headers from from to to.
Get the block with the given signature. The signature must be the signature of the block.
Sends a request to the server and returns the response as a string.
Set the script for the given account to the given chain id and fee.
Compiles the given script into a JavaScript string and returns the result as a string. If the
Writes a primitive array to the output stream.
Flush the buffer to the underlying output stream. The buffer will be flushed to the underlying output
Writes the given object to the given memory address and returns the number of bytes written.
Get the FstClassInfo for the last direct class. If the last direct class is
Writes the given object to the given byte array and returns the number of bytes written.
Sets the mmf file and channel.
Returns the specificity of the given class.
Resizes the memory to the specified size.
Remove a key from the hash table. If the key does not exist it will be created
Write an ASCII string to the stream. The name is expected to be in UTF - 8
Set the output stream to use. This method is called when the output stream is closed.
Create a new Fst instance with the given pretty print flag and optionally share references.
Create a struct configuration.
Calculate the size of an object in bytes.
Clear all caches.
Get an input stream. The input stream will be reset for reuse. If an exception occurs
Get an object from the input queue. The array is copied to the input queue.
Get an input copy of the given byte array. This method is thread - safe.
Returns an output stream. The output stream will be reset when this method is called.
Register a cross platform class mapping for the given keys and values. The keys and values must
Returns the class name for the given class. If the class is anonymous returns the class name
Writes an int value to the output stream. The data must be of the given type.
Writes a raw int value to the output stream.
Writes a packed integer to the stream.
Writes a raw name to the output buffer.
Get a cached instance of fst. fst. fst for the given list of possible classes.
Notifies the listener that an object is about to be written to the given stream position.
Notifies the listener that an object has been written.
Get the class info for the given referencee and class. If the referencee is not
Writes an array to the stream.
Sets this string to the contents of the given string. If the given string is null the
Writes a primitive array to the underlying output stream.
Finishes tracking the current state of the Fst at the given offset and base.
Creates a snapshot of the changes from the given origin at the current position. The origin is
Register an object for writing. This method is called when an object is written to a stream
Writes an object to an array of bytes starting at the given index.
Read an object from a byte array.
Reads a byte array of the specified length from the buffer.
Reads an int from the input stream.
Moves the index back to the given len. If the index is at the end of the
Sets whether or not the thread pool should be enabled.
Start an embedded cassandra daemon.
Clean data embedded in a cassandra session.
Copy a file from the embedded cassandra server to the given directory.
Returns true if the remote port taken on the given node. If the remote port is already
Returns a subscriber state with an empty server state.
Creates a map of onnx op descriptors. The map includes the name of the operation and the
Calculate the output shape.
Computes the logical or of the complex numbers n and the condition cond. If cond returns true
Returns true if the condition is true for all the elements in the array and false otherwise.
Returns an array of boolean values where the condition is true for each dimension of the array.
Performs an OR operation on an array of dimensions.
Applies the given number to the given index according to the given condition. If the condition is
Returns the index of the first element of the array that meets the condition.
Packs this vector into a flat array and returns it as a flat property list.
Creates a function properties from a flat array.
Creates a flat node containing the properties of the given functions.
Sets the throwable.
Sets the throwable if this is the first exception in the chain. If this is the last
Merges two lists of coordinates.
Partitions a variable into sub - lists of the same size as the given array.
Converts TensorProto. data. type to nd4j. data. type.
Shuts down the cache.
Returns the current architecture of the current thread. If the current thread is not currently running this
Convert a column to an image.
Pooling of an image using 2D pooling. The output image must be of the
Create a new compression descriptor from a byte buffer.
Splits the given list into batches of the given size.
Checks that the input array has the same shape as the input array. If the input array
Set the data type to the given data type.
Create an array of numbers with values between lower and upper.
Converts a collection of matrices into a flattened matrix.
Computes the bilinear products between the current and input vectors.
Create a complex vector from the given data. The data must be divisible by num.
Creates a complex number of ones with a given value. The number of ones is assumed to
Creates a complex value of the specified shape with the specified value.
Returns true if replication should be performed based on the current time and the last synced time.
Subtract the components of this complex number from the given one and store the result in the given
Calculates the complex tangent of a complex number.
Ceil the value of a complex number.
Returns the negation of a complex number.
Returns the absolute value of a complex number.
Computes the power of a complex number to another complex number. The result is a complex number
Binarizes the feature matrix by binarizing the number of features above the given cutoff
Sample the data from the matrix and return a new data set with the selected features and labels
Returns the memory footprint of this feature mask and the features and labels in this feature mask.
Returns a string representation of the throwable. The stack trace is printed to a string writer.
Returns the simple part of the given hostname. If the given hostname is an IPv6 address
Convert an array of strings to a string.
Convert a byte array to a hex string.
Returns an array of strings from the given string delimited by the given delimiter. If the string
Splits the given string into an array of strings using the given separator character and escape character.
Splits a string into an array of strings using the specified separator.
Find the next occurrence of a separator in a string. This method is used to find the
Escapes the given string so that it can be used as an HTML string.
Joins the given strings with the given separator. If no strings are provided the string is returned
Converts a string to a CamelCasedString.
Get the stack trace of the given thread as a string.
Invert an array. If the array is square throws an exception. If the array is
Returns the big integer at the given index. If the index is greater than or equal to
Returns true if the node is on the host side and false if it is on the remote
Returns true if the sensor is on the device side and false if it is not.
Create the shape information for the given shape. The data buffer and long arrays are returned.
Create the shape information for the given shape and order. Note that this method does not perform
Returns true if the shape of the data buffer is a vector of the same shape as the
Get the order of the elements in an array.
Compute the offset for the given indexes in the given array.
Convert an array of indices to an array of indices.
Get the i th value from the half - indexer.
Reallocates the data buffer to the given length.
Copy a chunk of data from one stride to another. This is the same as copy but
Create a constant buffer from an array of floats.
Returns the kafka URI for this connection.
Computes the power of each element of an array.
Computes the logarithm of the elements in an array.
Computes the maximum element of an array with a scalar value of k. If the array is
Returns the index of the largest occurrence of the second index in the first index.
Returns the k - th minimum element of the array. If the k - th element is
Returns the index of the minimum of the first and the second index. If the second index
Stabilizes an array with a given number of elements with a given number of elements.
Perform an array element - wise exponentiation with the given number of elements. The result is
Computes the logarithm of the elements of an array. If the array is null or empty
Prepare the bounds of an array to be used as the bounds of an array of values.
Advance to the next data set in the iterator. If there are no more data sets
Build an allocation shape from a data buffer.
Checks if a file or directory exists in the system path.
Reads the data from the given input stream.
Sweep the tail of the queue. This method is called when the queue is full.
Create an ind4j array from a npy pointer.
Create a new index from a NPY file.
Allocates a new paged pointer. This method is not supported by this library.
Attaches an object to the lock manager. If the object is already attached it will be
Returns true if the server has been started.
Execute the given operation on the underlying data source. This method is called by the underlying data
Flushes the queue and blocks until the queue is empty. This method is safe for concurrent
Get input stream.
Get the CUDA device associated with the given thread id. If no CUDA device is
Attach a thread to a CUDA device.
Returns the next device to use for the given thread. If the thread is on a single
Returns the operating system name as a human - readable string.
Calculates the architecture of the system.
Publish an array of values to the camel context.
Create a new data buffer of the specified type with the specified pointer and length and indexer.
Intercept the data type of an operation. This method is called when the data type of the
Adds two complex numbers and returns the result.
This method is called when a message is received from the client. It is called by the
avg pooling d. d. avg avg pooling d. d. avg avg pool
depth wise conv2d.
Resets the state of the aggregator. This method is called when the aggregator is being reset.
Get the class of the given op.
Allocate a new array with the same shape as the current array.
Get the shape of the array. If the array is null then return the shape of the
Evaluate the function.
Compress a double array into an array of the same shape and order as the input array.
Flatten a complex vector into a flattened vector with all complex elements evaluated to the exp function.
Centers the complex array in the given shape. If the input array is larger than the
Truncates a vector to n complex vectors.
Pads the given array with zeros to the given target shape.
Get the index of the largest element in an array.
Broadcast an array of data to all active devices.
Process the aggregation message and send it to the underlying transport.
Returns the gamma of num. If the precision of mc is less than num the result is
Calculate the square root of x.
Returns the least common multiple of x. If x is less than zero the result is negated
Returns the exponential of the precision of e. If the precision of e is less than the
Returns the power of x to y. If x is less than or equal to y the
Rounds x to the nearest power of n.
Returns the hyperbolic tangent of x.
Returns the inverse hyperbolic sine of x.
Calculates the acosh of x.
Sets the precision of x to d and returns x. If x s scale is greater than
Scales x by the precision of x. If the precision of x is greater than the
Convert precision error to precision of precision of precision of precision of precision of precision of precision of
Adds a differential function for the given id. If a differential function with the given
get inputs for a differential function
Update the array with the given variable name. The name must be unique within the array.
Adds a shape for the given variable name. If the shape already has a variable with the
Associate the given array with the given variable. The array must have the same shape as the
Returns the value of a property for a differential function instance and property name.
Adds a property to the model using a differential function. The property will be added to
Adds a function to the graph. The function will be called with the name of the variable
Add arguments to a differential function.
Returns true if the given differential function has any arguments associated with it.
Evaluate the differential function on the given inputs. The output of the differential function is
Define a constant with the given shape.
Returns an attribute that matches the value of the named parameter with the value of the named parameter
Returns the number of zeros where the input is equal to or less than the given input.
Remove an argument from a differential function.
Sets the gradient for the given variable name. If the variable is null an exception is thrown
avg pooling 3d.
Create a new GRU variable with the given name and configuration and return the output variable.
Executes a list of differential operations. The operations are executed in the order they were added
Creates a while statement with the given input vars. The input vars will be set to the
Execute the differential function with the given name. If debug mode is enabled the function will
Execute a differential function with a list of cached operations.
Execute the differential function backward and return the result.
Add a variable as a place holder. If the variable already has a shape it will be
Allocates a new pointer of the given memory type. This method is intended to be called
Returns the number of bytes required to store the given data type in the data buffer.
Returns a string representation of the given allocation mode. If the allocation mode is half the string
Get the data type from the current context.
Get the number of the differential function with the given name.
Destroys all workspaces for the current thread. This method should only be called from the main
Print allocation statistics for the current thread.
This method is used to perform a trmv operation. It is used to perform a tr
Computes the mean and variance of the model and returns the result as an array of indices.
Decode the encoded data into the target index. The target index must be greater than or equal
Get the name of the node with the given name.
Apply a scalar operation to the given dimension.
Asserts that no workspaces are currently open for the current thread.
Compute the negative log likelihood of the given labels.
This method is called by the timer. It is called by the timer when the timer is
Try to schedule a toe. If the current state is toe or the current state
Release the toe lock. If the current state is the same as the toe lock
Returns the current access state. If the current state is the toe then the current state
This method is called when a message is received from the client. It will pin the message
Initialize the current data set from a list of data sets.
u Initialize the host collectors.
Get the pointer of a device from a CUDA buffer. The device pointer is stored in
Synchronize the data buffer with the remote host. This method is called when the remote host
Applies the updater to the given gradient and updates the history. The history is updated with the
If the allocation point is constant then wait till it is finished. If the allocation point is
Creates an array of indices from the given index. The index can be a matrix or a
Properties for a differential function.
Has place holder inputs.
Computes the difference between the input and the output variables. The output variables must be in the
Format an array to a scientific format.
Imports the given graph into the graph graph graph and returns the same diff of the graph and
Convert a complex number to a blob.
Load a complex object from a binary blob.
Save a record to the database. The record will be saved to the database with the given
copy the real values to the given array
Copy the imaginary part of this complex number to the given array.
Adds a complex number to the linear matrix.
Assigns a scalar array to this array.
Returns the values of the specified rows as a new matrix with the same columns as the original
Put a row into the table.
Put a column of this matrix into a new column. If to put is a complex vector
Subtracts other from result and returns the result. If result is greater than other the result
Add the elements of this vector with the elements of the other vector and return the result.
Subtraction of this complex number from other and store the result in result. If result is
Adds two complex numbers and returns the result. If result is a complex number the result is
Assigns a number value to the linear view of this matrix.
Returns a copy of this matrix with the complex elements raveled.
Computes the eigenvalues of a complex matrix.
Computes the generalized eigenvalues of a and b.
Returns the index of the largest element in the array.
Copies the data from x to y. The data is copied in the same order as the
Solve the linear system with the given alpha matrix and store the result in the given array
This method is called when a message is received from the client. It is called by the
Count the number of non - zero values in the weights.
Reduce the loss with the given reduction.
Returns a constructor of the given class with no arguments.
Gets the constructor for the given class and its arguments.
Invokes the given method with the given parameters. If the method throws an exception it will be
Returns the annotation of the given type from the given annotation array or null if no such annotation
Returns the declared annotation of the given type on the given class or null if no such annotation
Returns true if a declared annotation is present on the given class.
Creates a new proxy instance with the given interf and result. The proxy instance will be
Load the given entity into the database. If the entity already exists in the database it will
Saves the given POJO to the database using the given context. If there is an exception
Create a proxy for the given memcache service.
Returns the metadata of the given kind or throws an exception if the metadata does not exist.
Run a query and return only the keys of the result set.
execute a query with a chunk size and return the results as a list of objects.
Perform a normal query with the given query and chunk size. This method will log the query
Execute a projection query and return the results as a list of entities. The query will be
Run the given query and return the number of results. This method is intended to be used
Partition the input iterator into chunks of size chunk size.
Load a set of results from the database.
Create a message with the given path and message.
Create a key from a POJO.
Compares two objects using the identity hash code.
Converts a raw key to a key object.
Converts a typed key to its raw representation.
Get the kind of the class.
Returns true if the given type is missing type parameters.
Returns true if sub type is super type of super type of super type of sub type.
Returns the direct super types of the given type. If the given type is a parameterized type
Capture a parameterized type if it is a parameterized type. If it is a parameterized type then
Returns a translator for the given key.
Returns the populator for the given class and path. If the class is null or the
Returns true if the class is an index instruction or false if it is an unindex instruction
Checks if a method is of interest.
Returns a list of all the properties declared on the given class including methods fields and methods.
Get the key metadata for this property.
Returns the value associated with the given key. If no value is associated with the given key
Executes the query. If the query needs to be executed it will be fetched and translated.
Fetch pending entities.
Adds the discriminators of the given class and its superclasses to the list of discriminators
Registers a translator as a subclass of the translator. The translator is added to the discriminator map
Get the type of the collection component.
Get the type of the map key.
Creates a new forward path from the given path. If the given path is the root of
Get the path from the forward chain.
Returns a string representation of this path.
Returns the depth of the path.
Put all buckets in the collection to the cache. If the cache is untouched then
Empty the cache for the given keys. If the key does not exist it will be created
Returns a set of keys that are untouched in the given buckets. If the key
Get all of the keys from the cache.
Converts a collection of buckets into a set of keys.
Sets the key of the given entity to the given container. If the key does not exist
Sets the ID of the given POJO. The ID must be assignable from the class of
Get the raw key of the parent.
Registers a subclass of the given translator with the given key and path. If the given key
Returns true if type1 and type2 could have common subtype of type1 and type2
Transforms the given owner into the given class. If the given owner is null then the given
Returns an annotation of the given type or null if there is no annotation of the given type
Adds all keys from the other session to this session.
Load the value for the given key. If the key is not found an exception is thrown
Execute the next round in the queue.
Translate the raw result into a new result that can be stored in the engine s datastore.
Fetch a set of entities from the datastore.
Load an entity from the datastore. If the entity does not exist it will be created.
Creates a new key with the given parent key kind and id.
Returns the raw value of the given key or null if the key is null.
Returns the id value of the given key or null if it is not a valid key.
Convert a URL - safe key to a Google Cloud Datastore key. If the key starts with
Create a new instance of the transactor with the same session as the parent.
Transacts a work in a transaction. The work is executed in a separate thread.
Transact a work in a single transaction. If the work completes successfully the transaction will be
Returns true if any of the conditions evaluate to true. If any of the conditions evaluate to
Objectify. Do not use this function directly. Use it directly. Use it directly.
Create a datastore with the current entity. If global cache is enabled the entity will be cached
Get the metadata for an entity.
Allocates a range of keys with the given number of incomplete keys.
Creates a new instance of the objectify class and adds it to the stack.
Closes the current state of the stack. This method will throw an exception if the stack is
Homogenize the given list by removing any indexes that are excluded from the list.
Creates a new reference to the given value. The value will be stored in the cache.
Returns the value of the key or throws an exception if the key is not found.
Adds a value to the list associated with the given key. If the list does not yet
Returns true if the future is done. If the future is not done it will trigger the
Generate an array of if conditions for the given field. If the array is empty then always
Call this method when all the deferred tasks have completed. This method will block until all tasks
Get a container of the given type at the given path. The path is assumed to be
Get the stat object for the given kind creating it if it doesn t exist yet.
Unwrap a throwable and throw it. If the throwable is a runtime exception or an error
Returns a translator for the given type key. If no translation exists a new one is created
Returns a translator for the root entity of the given class.
Create a translator from the given key and context. If no translator is found an exception is
Load a property from the given entity into the given POJO. If the translator is synthetic
Gets the property from the given container.
Sets the value of the given property to the given POJO using the given context and path
If the property is saved this method will be called. If the property is not saved then
Get the value of the property.
Writes the extensions of the given message to the given JSON generator.
Writes the content of the given category to the given json generator. If strict mode is enabled
Writes the content of a list of categories to the JSON generator.
Process the given snippet and return the result as a URL - encoded string.
Creates an iterable over the bids from the given response.
Gets the bid builder with the given id from the response.
Updates the bids in the response. Returns true if the bids were updated false otherwise.
Removes all bids that match the given filter from the response. Returns true if the bids were
Read the extensions of the given builder.
Returns true if the current token is null. If strict mode is enabled the next token is
Register a new json reader for the given message type.
Register a new writer with the json factory. If the writer already exists it will be replaced
Process a single bid. This method is called by the SnippetProcessor to process the bid
Process the fields of the bid.
Updates the given objects with the result of applying the given updater function to each of the objects
Returns a new list containing only the objects in the given list that do not satisfy the given
Returns the name of the current JSON element or the empty string if there is no current element
Expect the next token to be a JSON object. If the next token is not a JSON
Start an array.
Returns the next token from the parser or null if there are no more tokens.
Writes a boolean field to the JSON generator.
Writes a list of strings to a JSON array.
Writes a list of integers to a JSON array.
Writes a list of longs to a JSON array.
Writes a list of enums to a JSON field.
Resolve the given base url with the given target string. If the target string starts with a
Returns a new url with the given base and target replaced with base + target. If target
Returns the host segments of the given URL as an array of strings.
Returns the host part of the given URL or null if there is no host part.
Get the page from the given url.
Load a list of strings from the storm conf.
Extract a configuration element from a map. If the size of the map is equal to num
Returns the protocol associated with the given URL.
Generate a WARC.
Extract the refresh url from the given value. If the value is blank null is returned.
Get the metadata for an outlink.
Filters the given metadata and transfers it to the given destination.
Add a new URL to the queue.
Cleans a field name to make it lower case and make sure it is not too long.
Get the charset from the byte array of a BOM.
Get the charset from the given content.
Get the charset from the meta data.
Look for clue in content. If it is found return true. Otherwise return false.
Sets the value for the given key. If the key already exists it will be overwritten.
Returns the first value in the metadata with the given keys or null if there are no values
Converts a list of strings to a list of cookie objects.
Check if the given domain matches to the given URL domain and host name.
Returns the cache key for the given URL.
Get the robot rules set for the given URL from the cache. If there is no cached
Extract the meta tags from the given document.
This method is called when a tuple is acknowledged. This method is called when a tuple
Returns true if the given url should be included in the result. If the url should be
Filter the given string according to the configured rules.
Read the rules from the given rules file. If the file cannot be read an empty list
Process the query elements in the given URL and return the filtered URL.
Create a navigation filters from a storm configuration.
Add a new record format to the list of record formats to be gzipped.
throttle the number of queries that have been sent since the last time it was last sent
Check if we need to trigger a new query. If not trigger a new query.
Create a parse filter from a storm configuration.
Append a node to the end of the current node. If the current node is not null
Append a processing instruction to the current node.
This method is called when a comment is encountered. It is called for each character in the
Start a new DTD element.
Get the url value from the tuple.
Trims the text to the max length. If the text is longer than the max length
Checks if a custom interval is present in the metadata.
Create a new url from the storm configuration.
Sets the wheel item count. The wheel item count is the number of items in the wheel
Resolves the size and state of a measure.
Set the empty item drawable.
Sets the angle of the wheel.
Updates the selected position based on the current angle and the number of items in the list.
Invalidate the wheel item at the specified position. If the wheel item is empty nothing happens.
Get the raw wheel position from the given adapter position. The wheel position is clamped to
Update the velocity after a certain amount of time has passed since the last call to this method
Returns the contrast color for the given color map entry.
Clamp the given value to the given upper limit. If the value is less than the
Writes the coveralls to the given writer using the given list of parsers.
Get the contents of the stream as a byte buffer.
Sets the value of the column to the given string.
Make a string array of the same shape as this array.
Make a char array from a string.
Make a char array from a string array.
Make a char array from a string array.
Returns the time interval offset for the given record or null if the record is not time interval
Set the state of the animation to normal.
Show the iconified state if the frame is not iconified. If the frame is icon
Estimates the size of a list of strings in a grid. The size of a list
The main entry point for the grib1 - random program.
Creates a new unit name with the given plural name.
Creates a new unit name with the given name plural and symbol.
Makes a plural version of the given name. If the given name is already a plural version
Returns true if the given date falls between the start and end dates. If the date is
Returns a new date range that intersects this date range with the given date range.
Extend this date range with another date range.
Extend the range with a new date. If the date is before the start of the range
Set the start date.
Set the end date.
Sets the duration of the time interval.
Add a map bean to the menu.
Print an error message to the system. err. The error message will be printed to the
Get the name of the file.
Returns a string representation of the parameters.
Open a DAP stream and build a DAP document from the given raw data.
Computes the bounds of the given region.
Synchronize the min and max values with the slider and the field. If sliders ok
Compute the unlimited chunking for the given dimensions and the given chunk size.
Register a directory with the watcher. If the watcher is enabled the directory will be watched and
This method is called by the event loop to process events. This method is called by the
Wrap a netcdf dataset in a feature type.
Returns true if want is equal to fac type and false if it is not.
Returns the feature type of the given netcdf file.
Write a catalog to the response.
Convert a catalog to an HTML string.
Get user css.
Get user head.
This method is used to make a catalog object from a path and a base uri.
Add the global services to the catalog.
Initializes the HTTP client with the given credentials provider and user agent. If no user agent is
Get the content of a URL as a string. The content is encoded in urlencoded.
Sends a PUT request with the given urlencoded content and returns the HTTP status code.
Get the front page. If the default roots are null then the default roots are returned.
This method is used to create a new catalog. It is used to create a new catalog
extracts the geospatial coverage from a grib collection.
Get a single dataset from a grib collection by name or by GRIB type.
Returns true if this coordinate is nearly equal to the given coordinate.
Creates a new unit id.
Parse a grads attribute from a string.
Reads the top of the file and returns the position of the next item in the file.
Convert two shorts into an int.
Convert a byte array to an integer.
Returns a date from the given julian days and milliseconds.
Make a valid netcdf object name from the given string.
Checks if the given string is a valid netcdf3 object name.
Read the record data from the given structure and return it as a java. io. array
Read a subset of the record data from the given structure. The record data is stored in
Fills the non - record variables with the values from the input stream. This method is called
Returns a time struct for the given time index. The time index is the index of the
Make a time struct from a calendar object.
Returns true if the given template exists in the list of time templates. If the template does
Adds a server side function to the list of functions to be executed on the server side.
Returns the boolean function with the given name. If no function with the given name exists a
Returns the BT function with the given name. If no function with the given name exists
Load a new function.
Get the level name of a grid record. This method is used to get the level name
Get the level description for a given grid record.
Get the level unit of a grid record.
Get the projection type of the given grid definition.
Returns true if the given grid record is a vertical coordinate i. e. it is a
Returns true if the given grid record is a layer.
Make a coordinate transform from a dataset to a netcdf coordinate container.
Create a dummy transform variable for the given coordinate transform.
Make a projection from a GCT and a formatter.
The main method of this class. This is the main method of this class. It is
Saves the current state of the window to the preferences.
Returns a chronology with the specified date time zone.
Writes the given number of bytes to the output stream.
Writes an array of the given type to the stream. The array must be of the given
Writes a byte array to the output stream. If the DAP mode is enabled the bytes
Writes a byte array to the output stream. If dumpdata is enabled this method will print
Finishes the generator. This method should be called at the end of the generator.
Returns a calendar date range from the given date range.
Factory method to create a new grib2 object with the given template and data.
Parses the given text into the given DDS object and returns the number of occurrences of the
Parse the given text using the given DAS parser.
Swaps the header of the grid with the number of columns in the header of the grid
Read a grid of floats from the file.
This is the main entry point for the idas script. This is the main entry point
Writes an attribute to the output file.
Writes the headers and service info to the output file.
Write all the operations to the output file.
Read all files in a directory and call the closure for each file. If ff is null
Scans the given log file and calls the given closure for each log entry. If the closure
Get the grid packing type for a given grid number.
Finds a grid record with the given parameter name.
Returns a float array of the same size as this array but with the given isword n
Unpack the data into a float array. If the data is a Grib1 or G
This method is called when the UGRB function is called. It is called when the
Unpack GRIB1 data.
Unpack the data of a GRIB2 record into the input and output arrays.
Print all the grids in the grid index to the standard output.
Get the next byte from the buffer.
Creates a new date with the specified fields.
Creates a calendar date from a java. util. date.
Returns a calendar date from milliseconds since January 1st 1970 - 01 - 01.
Creates a new calendar date from the specified calendar and milliseconds.
Parse a calendar date from a string of UDW units.
Get the difference in milliseconds between this date and the specified date.
Create a new cdm object with the given data cursor. The data cursor points to the
Sets the request and response objects. This method should only be called once at the same time
Escapes a string for use in an SQL statement.
Creates a list of slices from a list of ranges.
Unwraps a netcdf file. If the file is a netcdf dataset it will
Returns true if the given dimension set contains a variable length dimension.
Compute the effective shape of the dap.
Adds the given date to this date and returns the result as a new date.
Multiply this unit by the given unit and return the result as a new unit.
Divide this unit by the given unit and return a new unit with the same scale and
Divide this unit into the given unit and return the result.
Returns a new unit that is the same as this unit but with the given power raised.
Convert this unit to a derived unit by multiplying by the scale of this unit.
Convert the input array to the output array. The output array will have the same length as
Returns the value of this unit divided by the given amount. If this unit is not a
Returns the canonical string representation of this unit. The canonical string consists of the scale and the
Read the data from the variable index into an array.
Read the 2D array of coordinates from the current coordinate system. The coordinates are in the
Flattens this time series collection into a new point feature collection with the given station names
Find the service with the given name.
Returns the gate size for the given data type.
Returns the index of the first gate of the given datatype.
Returns the number of gates for the given datatype.
Writes a netcdf dataset to an XML file.
Returns the preferred layout size of the given container. The preferred layout size is the size of
Verify that a dataset is a descendant of another dataset.
Generate a proxy dataset resolver for the given dataset. The proxy dataset resolver will be used to
Returns a new calendar date unit with the given name and UDUNIT. If the calendar
Returns a copy of the given calendar with the given string converted to the given date unit.
Returns a new calendar date unit with the specified calendar field and base date.
Returns the dimension of this unit.
Returns true if the file is in the correct order.
Read an array of data from a NetCDF file. The data must be in the
Read the data from the index and return it as an array. The data is read from
Read data from a NetCDF file to a writable channel.
Calculate the elevation angle for the given angle. The elevation angle is assumed to be
Calculates the step of the histogram. The bins are assumed to be between first and last.
Calculate az from az0 and az1.
Calculate the data for a single record. The data is stored in the header and the data
Calculate the nyquist.
Create a vertical transform from a netcdf dataset with the given time and dimension.
Set the debug flags.
Set whether or not to extend the index mode.
Read the xy values from the given index. If the record does not exist in the given
Returns true if the record at time idx is missing in the vector v2.
Get the bounding box of this point.
Finishes the sequence and sets up the data structures.
Inserts a tab character at the end of the string.
Pads a string to a certain width. If the string is longer than the specified width
Returns a string of the specified length padded to the specified width with zeros if necessary.
Returns the string representation of a long.
Format a size into a human - readable string. The size will be rounded to the nearest
Print a double in a readable format with a given number of significant figures.
Print a double with decimal places and decimal point. The decimal point is expressed in decimal places
Returns a string representation of the shape.
Finishes the slice and returns it. This method is called when the slice is complete.
Returns the constraint as a string. The constraint can be represented as a number or a string
Composes two slices into a new slice. The target slice is the first element of the
Map the i - th element of the target slice to the i - th element of the
Dump num bytes of data from buf0 to buf0. If skipdmr is true
Returns the Ellipsoid for the given name. If the name is null returns null.
Returns the ellipsoid with the given epsg id or null if there is no ellipsoid
Decode vlen data.
Extract a list of urls and text from the given URL.
Get the text content of the given URL.
Filter the input stream to only those lines that are tagged with the given string.
Read data from a NetCDF file into a writable channel.
Adds all of the attributes in the given iterable to the end of the current set.
Removes the attribute with the given name if it exists. Returns true if the attribute was removed
Removes the attribute with the given name from the list of attributes. If the attribute does not
Returns a list of the offsets in time units.
Add an action source listener to this event. The listener will be notified when the event is
Returns the standard date from the given text. The text is trimmed and the first token is
Get the standard or ISO date from the given text. If the text is not a date
Returns the origin date of this time scale unit or null if this time scale unit is not
Get the date in the time zone.
Make a date from a double value. If the value is NaN or NaN return null.
Make a time value from the given date.
Make a standard date string from a double value.
Get grid spacing in km.
Adds the dimensions to the given netcdf file.
Add a coordinate axis to a netcdf file.
Make a projection of a netcdf file according to the given projection type.
Add a Greedy variable to the list of Greedy variables to be analyzed.
Adds a new coordinate system variable to the given NetCDF file.
Make a new lazy load of the cache. This is used to make sure that the cache
Make the point at the start of the grid. The point at the start of the grid
Make the mercator.
Set the dx and dy parameters of the line segment.
Read a dataset from the catalog.
Read metadata from the given url in the given dataset and return it as an object.
Returns the level1 of the log entry.
Returns true if the file is a valid file.
Writes a byte array to the output stream. This method increments the count of bytes written.
Sets the clear name of the attribute and the table.
Returns the name of the coordinate along the given axis type.
Returns the name of the coordinate for the given axis and dimension. If the coordinate is not
Build the XML response.
Build a DAP exception from this response.
Returns a list of dimension names for each dimension in the level var. If debug breakup
Creates a dimension with the given units and values. If the dimension does not exist it will
Creates a new variable with the given dimensions. The new dimension is the index of the new
Make time coordinate axis from reference time variable.
Shave a float by a bit mask. If the value is NaN return the original value
This is the entry point for the grib - to - netcdf command line tool.
Wrap a NetCDF file in a netcdf dataset. If the file is already a
Open a netcdf file.
Clear all coordinate systems.
Find the coordinate axis of the given type.
Returns the coordinate axis with the given full name or null if no coordinate axis with the given
Returns the coordinate system with the given name or null if no such coordinate system exists.
Find the coordinate transform with the given name. If the name is null null is returned.
Returns true if any of the modes in want are needed to enhance the document.
Set the values of a variable.
Sets the values of the given variable to the given list of values.
Make an array of the given dtype with the given string values.
Returns the index of this vector in the form of an offset into this vector s indices.
Gets an existing file. If the file does not exist null is returned. If the file
Returns a list of features that intersect the given bounding box. If no bounding box is provided
Discretizes the given data array so that it is n times the number of times the
Add all thredds metadata from another thredds metadata object.
Adds a documentation. If the content is longer than the number of characters it will be removed
Remove all documentation of a given type.
Returns the number of bytes that can be written to the given segment starting at the given start
Returns true if the file is mine according to the CDM conventions.
Breakup convention names.
Build a convention attribute from a list of convention names.
Build the coordinate systems for the given netcdf dataset.
Finds the coordinate axes in the netCDF file. This is done by traversing the
find coordinate systems in the netcdf dataset
Make all coordinate systems.
Make sure that all coordinate systems are maximal.
Checks if the given variable is a coordinate axis for the given enhanced variable.
Set this dataset to be a subset of the given dataset.
Marks the top dataset as having the given filter and removes the top dataset from the list.
Mark the given dataset as read if it is not already in the list of read datasets.
This method is called at the beginning of each request. This method is called only once.
Count the number of times the given value occurs in the given metric name. If the metric
Adds a name and symbol to the symbol table. If a prefix with the same name already
Compares this row with another row.
Compares two boolean values and returns the index of the first value less than equal to or greater
Pass all reserved attributes to the node.
Checks if the given date range is valid.
Register a class with the dap. If the class is already registered it will be replaced
Register a new DSP instance.
Returns true if the given DSP class is registered in the registry false otherwise.
Unregisters a DSP class from the list of registered DSPs.
get forecast time interval size in hours
Get the offset of the forecast time interval for a given GRIB2 record.
Returns the vert unit for the given code.
Sort the DAP tree in ascending order. The DAP tree is in ascending order.
Finds a variable with the given attribute name in the given dataset. If no such variable exists
Returns the variable with the given name and value or null if no such variable exists.
Returns the short name of the variable with the given name and value.
Finds a variable in the given structure that has the given name and value equal to the given
Returns the first nested structure in the given structure or null if there are no nested structures.
Returns true if the given dataset has a record of the same type as this variable.
Returns the literal value of the given key. If the key does not start with a literal
Get the feature type for the given key.
Returns the variable name for the given key in the given dataset or null if no such variable
Returns the value of the coordinate at the specified position. If the coordinate is not present in
If val is on a longitude return val. If val is on a longitude return val.
Returns the values of the coordinates in the file as an array of doubles. If the file
Adds a range to the end of a list. The first range is the start of the
Finds the index of the point in the run that is closest to the given target.
Returns the name of the dimension or attribute.
Add an action to the menu. The name of the action will be used as the key
Returns the last match for the given path or null if no match is found.
The main entry point for the program.
Returns the index of the first occurrence of a byte array within the range [ start start +
Adds a picture to the cache. If the picture is already in the cache it will be
Reports the current cache size and maximum cache size to the tools log.
Stop the background loading of all source pictures currently in progress. This is a blocking call
Stop the background loading of a picture except for a given url.
Make an HTTP GET request with the given session and legal url.
Create a mock method for the given URL. This method is called when the request is made
Returns a random float of the specified type.
Returns the next number in the range [ min max ). If max is less than min
Read the data from a CDM variable.
Get the file system provider for the given URI.
Read the station table.
Returns the index of the given resource group. If the resource group is not a resource group
Removes a variable from the list of data variables. If the variable is not in the list
Returns the cloud hgt2 meters.
Read a variable from the input stream. The input stream is read from the input stream.
Set the number of colors in the graph. If the number of colors is different than the
Calculate the transformation matrix for the given screen and bounds. The transformation matrix is the same as
Converts a URI into an auth scope.
Finishes the loop and compares the coordinate system with the coordinate system of the current grid.
Returns true if this factor is the reciprocal of the given one.
Get a list of files in the given directory that match the given filter pattern and optionally add
Returns the index of the element with the given index or - 1 if the element is not
Read metadata content from a remote URL.
Read the content of the mdata element and return it as an object. This method is
Adds metadata content to a mdata element.
Validate metadata content.
read cat gen config element.
read dataset source element.
read dataset namer element.
read dataset filter element.
read result service element.
Create the catalog element.
Create dataset source element.
Create a dataset namer element.
Create a dataset filter element.
Create a result service element.
Returns true if the flag is set or false if the flag is not set.
Construct the menu. This is the main entry point for the menu. This is the main
Adds the parameters to the configuration file. The parameters will be added to the configuration file.
Make a parameter based on the number of the parameter and the description of the parameter.
Returns the parameter with the given name or null if there is no parameter with the given name
Reads the contents of the input stream into a UTF - 8 string.
Read num bytes from the input stream and return them as a byte array. The input stream
Replace all occurrences of the given file template with the ensemble name corresponding to the given index.
Set the station id and data type of the variable.
Checks if the buffer matches the current edit value and sends an event if the edit value matches
Get the bitmap of the file.
Set the NetCDF file that will be used to read and write the data.
Set the debug flags for a NetCDF2 instance.
Parse the name into prefix var and name pieces. The name will be parsed into prefix var
Returns true if dstruct is a group. If dstruct is not a group returns false
dimension name of the dimension in DOS format. Return 0 if the dimension is empty.
Add a shared dimension to a group. If the group is null the dimension is added to
Construct a list of dimensions from an opendap. dap. d dods
Returns true if the dtype is an unsigned type.
read data from the dods connection.
Get an icon by its full name. If no icon is found an empty image is returned
Get an image from the classpath. If the resource doesn t exist it will be created.
Create a new cursor with the specified name.
Read data from a RAF.
Read data into an array of the specified type with the specified fill value.
Read an array of the specified type with the specified fill value. If the fill value is
Make a primitive array of the given size.
Convert a byte array to a UTF - 8 char array.
Convert a UTF - 8 char array to a UTF - 8 byte array.
Convert a byte array to a char array.
Read an array from a parsed section.
Create an array structure from a parsed section. This is a helper method to create an array
Get a scalar value from a record.
Get a scalar member of a structure. The member must be a sequence or a structure.
Get the array of the given member in the given record.
computes the members of a structure given a dap variable.
Adds this dimension to the given group in the given netcdf file.
Normalize the given path to be relative to the root of the file system.
Adds an explicit dataset to the cache.
Scan a directory and add it to the dataset manager. If a date format is specified the
Finishes scanning the dataset. This method is called when the task is cancelled.
Make the datasets for the given task. This method is called when the task is cancelled.
Get the typical dataset. This method is used to determine the number of datasets to use.
Create a new dataset object with the given name id ncoord s coord value s section spec
Put a resource control for a given dataset.
Adds a point to the curve.
Returns the upper bound of the line.
Returns the upper bound of the bounding box of the line.
Validates the given string against the given string builder. If the string is valid the builder is
Returns true if the given dataset matches the current dataset and false if it does not.
Adds all station features from the given point dataset.
Parse a constraint from the request. This method is called when a constraint is found in the
Evaluate all the clauses in the query and return true if all the clauses evaluate to true.
Prints the constraint to the specified print writer.
Amend a NetCDF file from an ODL file. If the group is not
Sets the shared dimensions of a variable.
Check if a dimension is in the unknown list and if so set it as unlimited.
Finds the group with the given name in the given group hierarchy.
Read the content of the xlink.
Get the standard uri.
Set the projection to be used for this query.
Adds a component to the layout. The constraint must be an instance of the class of the
Invalidate the layout of this widget. This method is called when the layout of the widget is
Remove a component from the layout.
Returns the minimum size of the layout in pixels.
This method is called when a new container is added to the tree. This method is called
Returns true if the given coordinate system is a radial coordinate system.
Get the maximum radial value.
Calculate the earth to sat for a given latitude and longitude. The earth will be in the
Returns the saturated to the earth at the given location.
Calculates the geospatial distance from the lamda to the theta of the goes.
Returns the sweep angle axis for the given scan geometry. If the scan geometry is the goes
Get the scan geometry for the given sweep angle axis.
Sets the runtime coordinates for this time interval. If the time interval is a time interval the
Write a point obs dataset to a file.
Rewrite point feature dataset.
Get an array sequence by member name. Throws an exception if the member is not a sequence
Returns the full name of this node.
Returns the unique identifier for this request.
Returns the access for the given service type or null if no access is associated with the given
Find a dataset by its name.
Returns the catalog of the current node or null if this node has no parent.
Returns a list of metadata objects of the given type. If the given type is not a
Returns the inv service with the given name or null if there is no inv service with the
Returns a list of all the variables in this thredds object with the given vocabulary
Find all cat refs in a list of datasets. If only relative urls are found they are
Escape the given path for use in a URL.
Add stagger to an array of double. d3. The stagger is done by
Extrapolates the number of elements in the given array and returns the resulting array.
Compute the rho for a given latitude and longitude.
Returns the detail information in a human - readable format.
Creates a structure for the given part name and dimensions. If include missing is true the structure
Creates a new missing variable.
Make a parameter variable from a gempak parameter.
Add the global attributes to the document. This method is called when the document is created.
Returns the size of the variable with the given name or - 1 if not found.
Get 1 - D array of given data type and length.
Return the next goto state in the state table or the default goto state if there is no
Returns a string describing the syntax error for the given token and state. If verbose is true
prints all the symbols in the given rule and all the values in the given rule.
Read a DMR string from the stream. The DMR string is returned as a byte
Returns the error message of the current state machine. If the current state machine is an error
Read data from the stream into a byte array. This method does not close the stream.
Read the header from the given input stream. This method will return true if the header was
Convert an ISO - 8601 date string to a date object.
Read a table of records from a file or URL.
Transfers a group from one dataset to another. If the group is unlimited it will
Returns the stn file for the given location or null if the file does not exist.
Open a random file with the given name. The file must have the same extension as the
Returns the index of the first occurrence of the given index in the list.
Returns the end of the list at the given index or - 1 if there is no such
Create all runtime collections.
Set the value of the edit field.
Returns the data type for the given format.
Calculate the altitude and altitude of a point on the surface of a cylinder.
Returns null if unit is null.
Clean the name of a resource. This method is used to clean the name of a resource
Returns true if the given unit is unitless. The unit can be a string or a
Create a new notes object for the given note namespace g and id and dsp.
Get the id of a note.
Parse a DAS file into this DAS object. The DAS file may contain multiple
v find dods.
v find data in tree v. dds v. dds v. dds v
Returns the child at the given index or null if there is no child at the given index
Returns the parent group of this file or null if this file does not have a parent group
Returns the dimension with the given index or null if the index is out of range.
Returns the index of the dimension with the given name or - 1 if not found.
Get the units attribute as a string. If no units attribute is found null is returned.
Returns the shape of this array as a section. If the shape does not have a section
Returns a slice of this array with the specified dimension and value. The returned array will be
Sets the enum typedef.
Read the data from the file into an array of ranges. If no ranges are provided the
Read a scalar value.
Read data from the input stream and return it as an array of bytes. This method is
Read the array from the given section.
Write the CDL to a string. The number of spaces will be prepended to each line
Returns a string representation of this object for debugging purposes.
Sets the data type.
Sets the list of dimensions to use. If null is specified all dimensions will be used.
Resets the shape of the matrix to its original shape.
Sets the dimensions of this group to the given dimension string. If the group does not have
Resets the list of dimensions to their default values.
Sets the dimension at the given index to the given dimension. If the index is out of
Sets the data to be cached. If the data is not null the data will be cached
Returns a list of all dimensions in this dimension set.
Sets the bounding box of this bounding box.
Finishes the iteration of the hash table and sorts the grid according to the size of the
Returns a list of all the datasets in the dataset set.
Returns true if the path ends with one of the synextensions.
Open a netcdf dataset and create a dap object. The dap object will be
Build the DMR file.
Recursively build the sequence types for a given CDM variable.
builddimrefs is called when a new dimension reference is added to a variable
Find a matching enum typedef by varenum.
Get the core dimension set from a list of dimensions. If the list is not variable length
scan a bufr file and return the number of messages found.
process bufr message as dataset
This method is called when a new request is made to the server. It logs the request
Get the affine transform of this rectangle.
Returns true if the map should be rotated according to the given width and height.
Get the area of the map.
Converts the given projection point to the given world coordinates.
Pan the map by the specified amount.
Zooms the image to the specified coordinates.
Recalculates the image from the bounding box and the size of the image.
Adds a listener to the list of listeners. If the listener already exists it will be logged
Removes a listener from the list of listeners. If the list is empty a warning is logged
Sends an event to all registered listeners. The event will be sent to all registered listeners.
Sends an event to all listeners except the source of the event.
Print a command to the given writer.
Print variable data.
Prints the variable data in the specified section of the specified variable. The data is read from
Print the structure data to the given writer. The number of spaces will be prepended to each
Prints the contents of the given array to the given print writer. The array is not modified
Print an array to a print writer with a default indent and a boolean indicating whether the array
Write a NetCDF file to a NetCDF writer.
Read an attribute as a double. If the attribute is not found return the default value.
Add a parameter to the coordinate transform.
Read an object of the given type from the input stream. If the input stream is of
Returns true if the level of the given grid record is positive up. If the level is
Checks if this unit is compatible with the given unit.
Make a label based on the given quantity id.
Sets the bit at the given offset. The offset must be a multiple of the number of
Return the number of bits greater than or equal to nb. If nb is less than num
Returns nb bits - of - precision 64 - bit integer. Note that nb must be less
Open a HTTP connection to the given URL using the given command and command object.
Get the DAS command to be executed.
Returns the complete expression for the given expression. If the expression is null returns the empty string
projection to lat lon point projection to lat lon point projection to lat lon point projection to lat
Returns the IDV catalog for the given XML file. The XML file contains the number of
Convert a date range to an idv compatible date range.
Returns true if the file is a valid random access file or false if it is not.
Handle satellite information.
Handle the sensor information.
Read the root element from the given location.
Removes all XML characters from the given text and returns it as a new string. If the
Unescapes a UTF - 8 string using the given escape character. If spaceplus is
Escape the given string for use in a URL query. If the string cannot be escaped null
Unescapes the given URL - encoded string and returns the resulting string or null if the
Returns a copy of the string s with all backslash - escaped characters removed.
Returns a copy of the string s with all backslash escaped characters escaped.
Add the lightning global attributes to the given NetCDF file.
Swaps a short from a byte array at a specific offset in a byte array.
Swap a byte array at a given offset with a byte array at a given offset.
Swap the bits in a byte array at a given offset and return the result as a double
swap the bits of v and return the result as a float.
Swaps the bits of a double and returns the swapped double.
Convert a short to a byte array.
Convert an integer to a byte array.
Convert a long to a byte array.
Create a subset of this matrix with the given transformation t z y and x ranges.
Write a XML document with the given date and modification time. The format of the document is
Make a copy of the given array with a and b. If a == num return the
Write the start of the WFS XML file to the output file.
Writes the feature list to the output file.
Add levels to the list of records. The levels are sorted according to the order of the
Adds the dimensions to the given group in the given netcdf file.
Add this dimension to the given netcdf file.
Find the coordinate of the given name in the given group. The name must start with a
Returns the index of the given grid record.
Cancels the timer and prints the current string to the standard output.
Returns a file object for the given location. If the file does not exist it will be
Get existing file or create a new one if it doesn t exist.
Show the cache.
Clean the cache for the given directory.
Calculates the bearing between two points using the given Earth.
Calculates the bearing between two points using the default earth.
The main entry point for the program.
Returns the closest point in the given earth to the given point with the given azimuth and distance
Finds a point on the Earth with the specified distance and azimuth.
Finds a point in the Earth with the specified distance from the source to the target.
Load a picture in a thread.
Load the picture with the given url and rotation. If the picture has already been loaded the
Loads the picture of this image into the log.
Stop the loading of the image. This method does nothing if the image is already loaded.
Stop loading the image if it s not already loaded. If it s already loaded it will
Returns the size of the image.
Sets the buffered image.
Get the standard uri.
Transfers information from one list to another.
Count the number of bits in the bitmap.
Returns true if this object is equal to the given object.
Load the header from the input stream. If the header is already loaded return the number of
Load the data from the input stream. If the input stream is null return - 1.
Returns the data object for the field with the given name or null if not found.
Returns an array of doubles with the given field name. If the field does not exist returns
Returns an array of strings for the field with the given name. If the field does not
Returns an array of boolean values for the field with the given name or null if the field
Returns the name of the field at index i or null if the index is out of range
Returns the names of the fields in this struct.
The main method of this class. This is the entry point for the java. sql.
Returns a hash map of all the attributes associated with this DAP object.
Set a dap attribute. If an attribute with the same name already exists it will be
Remove an attribute from this node.
Returns the group in which this dataset belongs. Returns null if the sort is the same as
Get the parent node of this node.
Returns the escaped short name of this field. This method will escape the short name if it
Returns the path of this node to the root of the tree starting from the root node.
Returns the path of this node to the root of this node. The path is ordered by
Computes the fully qualified name of the node.
This method is used to build the DAP object from a byte array and a byte order
Adds a bean collection to the bean store.
Get a list value by key. If key does not exist it will return the default value
Get the value associated with the given key. If no value is associated with the key null
Read data from a GRIB2 file and return it as a float array.
Prints the top num variables in the DSP. The top num variables in the DSP
Print a compound instance.
Write the element to a string and return the result as a string.
Writes the given element to the given file. The element will be written to the given file
Writes the given element to the given output stream.
Writes an XML document to the given writer. This method will detach the element from the document
Make a dimension element. The dimension must be shared with this element. If the dimension is
Make a coordinate transform from an attribute container and a unit string. The unit string must be
Get an array of int values from an attribute in the given attribute container.
Create a new unit with the given name symbol and quantity. If a unit with the given
Create a new unit with the given name and symbol.
Creates a base unit database.
Get the singleton instance of the unit system.
Find the coordinate element in the target array. If the target array is bounded the coordinate is
Finds the index of the point closest to the given target.
Returns a subset of the values in the given range.
Open a feature dataset with the given task.
Open a feature dataset. The feature type is the type of the feature. If the type
Annotate the given dataset with the name and id of the given dataset in the given netcdf
Read data from a GRIB file starting at the given position.
Assemble a URI from a set of parts.
Returns the canonical form of the given string or null if the input is null or empty.
Normalizes the given units string so that it can be used as a reference to the given string
Finishes the parsing of the xlink. If the xlink is null then nothing is
Returns the element associated with the given key or null if there is no such element.
Inserts a new key - value pair into the hashmap. If the key already exists the
Returns the date of this date. The date will be in the same month as this date
Prints an XML node.
Prints an XML element.
Returns true if the attribute is a special attribute.
Prints the dimensions of the given variable.
Returns true if the file is a valid file or false if it is not.
Sets the area directory attributes of the given variable.
Set the attributes for the current Nav Block.
Get the calibrator type for a given calibrator name.
Set the calibration type attributes for the given variable image. This method is used to set the
Find the coordinates of the table in the given dataset according to the given predicate. The coordinates
Returns the full name of the coordinate of the given type or null if no coordinate is found
Find the coordinate of the given type in the given dataset.
Find the coordinate of a given type in the given dataset.
Returns the dimension of the given type. If the type is scalar then the dimension is returned
Find the best coordinate system for the given netcdf dataset
Find the dependent axis of a given type.
Returns the base type of the variable with the given name at the given row and column.
Reads the next marker from the input stream.
Writes a marker to the output stream. This method is used to write a marker to the
The main method of this class. This is the example of how to create a chart.
Get a string array from the contents of a structure member. The data type of the array
Returns a list of the parameter values of all sensors in the sensor ring. The parameters are
Sets the list of stations to be displayed on the scene.
Sets the selected station and updates the map area.
Redraws the current image.
Reads an object from the given input stream.
Writes this rectangle to the given output stream.
Adds the given database to this database. The database must already exist in this database.
Adds a unit to the unit set. Throws a name exception if the unit does not exist
Adds a symbol to this unit.
Returns the unit with the given id or null if no unit with the given id exists.
Adds a unit by its name.
Adds a unit to the unit map. If the symbol is null the unit is added to
Adds a new unit to the map and throws an exception if the unit already exists.
Add a menu to the system. The menu is a list of all installed feels.
Find grib2 record by DRS position.
Read a variable from a dataset. If the variable does not exist an exception is thrown.
Serialize the dataset to the given output stream. If the org variable is null then the super
Creates a copy of this projection.
Create a thredds feature dataset with the given inv dataset and task.
Open a thredds feature dataset. The data type of the feature is determined by
Open a netcdf dataset.
Annotate the given dataset with the name and id of the given dataset in the given netcdf
Add a partition to the partition list.
Make the grib collection mutable. This method is used to create a new grib collection
Create a new time coverage enhancer for the given match pattern and substitution pattern.
Get instance to match on dataset path.
Writes the XML document to the specified file. The XML document is written to the specified file
Read the data from the given structure into the given section. The data is stored in the
Set the picture to be displayed on the screen. If the picture is already loaded it will
Sets the buffered image. The buffered image will be scaled to fit the size of the image
Zooms the image to fit the size of the image. The image will be zoomed
Paint the component. This method is called when the component is added to the window.
Convert an array of ints into an array of ints of the same size as the input array
Convert int array to gdattim string.
This method is used to get the date and time from an array of integers. It is
Returns the day of the month given the iyear imon and the day of the month
Returns the LV CCRD string for the given IVC.
Reverses the values in the specified range of an int array. The values are shifted
Get the grid packing name for a given grid packing type.
Get the data type for the given data type. The data type is the string representation of
Read data from the input stream.
This method is called when the output stream is externalized. The output stream is externalized
Returns the tag enum for the given code.
get next image
Returns the number of characters in a dap type. If the dap type is a
Returns the sum of the elements of the given array. The array must have the same length
Set the size of the grid.
Sets the number of times a new entry should overlap with the current entry. The default is
Clear all the elements in the grid.
Mark an object in the rectangular area. The object will not be marked if it is
Finds the intersection of the specified rectangle with this rectangle.
Finds the intersection with the given point.
Finds the closest object to the given point.
Returns the squared Euclidean distance between the specified point and the specified point.
Get or create a base unit with the given name and quantity.
Search for the protocol of the given fragment. If no match is found null is returned.
This method is used to determine the search path for a given URL. It is used to
decode path extension to service type
check if the location is a dods file or not.
Send data to the output stream. The output stream will be closed after this method returns.
Returns the suffix of the given fully qualified name. If the given fully qualified name starts with
Returns the prefix of the given fully qualified name. If the given fully qualified name starts with
Locate a file in the current working directory. If the file does not exist it will
Locate a relative path relative to a file or directory. If wantdir is true the
Extract a byte array from a byte buffer.
Returns the path to the given variable in the form of a list of dap variables.
Returns null if the given path is null or the given path is the same length as the
Join an array of strings with a separator between from and upto numbers.
Returns true if the given path contains a drive letter.
Get a list of supported protocols for a given URL.
Convert an index to a list of slices based on the dimensions of the given template.
Returns a list of slices from the given offset to the dimensions of the given template.
Returns true if any of the slices in the given list are contiguous.
Checks if a list of slices is a single point.
Convert a list of slices to an index.
Read data from input stream.
Set the station info.
Read a feature collection config from a file or a catalog.
Update the list of groups for this DAP instance.
Find the variable with the given name in the scope of this DAP object.
Get the axis type of the variable.
Gets the stat type for the given time range indicator.
Returns a subset of the longitude axis. The range is defined by the start and end values
Returns a list of the ranges of the line segment. The ranges are ordered by longitude.
Sets the default values for the given properties. This method is thread - safe and should not
Get the session id from the cookie store. If there is no cookie in the cookie store
Sets the maximum number of redirects. If n is less than the current number redirects will be
Sets whether sessions should be used or not. If set to false sessions will not be used
Closes the connection. If the connection is already closed this method does nothing. If the connection
Set the authentication and proxy for this request. This method is called when a request is made
Adds a new HTTP session to the skip list. This method is thread - safe.
Sets the global credentials provider for the given scope and provider.
Validate that the url is a valid URI. If the url is not a valid URI an
Creates an index of the given shape.
Computes the stride for the given shape and stride array.
Index a list of ranges into a section of a list of ranges. If the list is
Reduces the index by removing all entries with the same number of elements.
Reduces the index to the specified dimension.
Creates a new index with the transpose of the elements of the matrix.
Creates a new index with the specified dimensions permuted. The dimensions must be the same size
Returns an index iterator for the given array.
Returns the current element in the list.
Sets the index to the given array. The index must be of the same length as the
Sets the dimension to the given value. If the value is less than or equal to the
Creates a new index with the specified values.
Returns the name of the time interval.
Returns a calendar date range for this time interval. The time interval is assumed to be in
Make a list of dates for the current row and column. If unique is true only the
Make a list of gempak parameters for the given model part.
Returns a list of stations in the file.
Returns a list of the names of all the station keys in the system.
Returns a list of dates. The list will be sorted according to the order in which the
Returns the index of the station with the given id or - 1 if not found.
Get the file type.
Indents the given number of times. If the current indentation level is less than or equal
Set the indent level.
Read or create a grib index from a single file.
Scan a directory and add it to the collection.
Returns true if the scan is needed. This method is overridden by subclasses to determine if the
Scan the first time. If there are no scans then return false. Otherwise return true.
Set the debug flags.
Adds a new variable to the model.
Write the file to the netCDF file. If the file is an extended model the
Validates an XML document. If strict is set to true it will throw an exception otherwise it
Convert the slice to a constraint string.
Sets the original variable.
Read the array from the given section. If the size of the array is equal to the
Returns true if the structure members need to be converted or false if the structure members need to
Convert an array to a structure. If the structure does not exist it will be created.
Convert members. member to members. members. member. If the member is not a variable
Find the variable with the given org name or null if it is not found.
Returns true if the given variable has a data member in the given structure.
Enhance the variables in this dataset.
Returns true if the request is allowed to perform a resource control operation on the specified path.
Create an empty sequence with the specified number of members.
Create an array sequence from the given values. The values are converted to floats according to the
Make a sequence from a gempak part.
Add a vertical coordinate attribute to a variable.
Reads an XML file and stores the result in the given callback.
Read an XML string into a catalog. The XML string must be a valid XML string.
Read XML data from a reader and return an inv catalog object.
Write an XML representation of the catalog to the given output stream. If the output stream is
Returns the metadata converter for the given key or null if there is no metadata converter for the
Creates a dimensionless unit name.
Multiply this unit by another unit. If the dimension of this unit is the same as the
Divide this unit by the given unit. If the dimension of this unit is the same
Copy the input array to the output array. The output array will have the same length as
Returns true if this unit is compatible with the given unit.
Write a simple geometry to the output stream.
Write a point to the xml file.
Write a line to the xml string.
Write a polygon to the output string.
Returns a list of all subnodes of the given parent node.
pass all reserved attributes in the node to the dap. dap must not be null
Returns a subset of the variable s dimensions.
Factory method to create an array structure from an existing array structure.
Set a member s data as an array.
Create an array of the given shape from the given structure. The shape must be the same
Get the type of a geometry variable.
Make a station time series from a structure and station time series. The time series will be
Compile the given AST into a DAP AST.
Compile a filter expression into a DAP expression that matches the sort of the ceast expression
Redefines a dimension in the given ceast. The slice will be added to the
Creates a view of the array at the given index.
Returns true if the rectangle b is contained within this rectangle.
Extend this bounding box with the given point.
Extend the bounding box with the given rectangle.
Returns the intersection of this rectangle with the given one or null if there is no intersection.
Adds two arrays and returns the result. The result is a new array containing the sum of
Returns true if the arrays a and b have the same shape.
Returns true if shape a and b conform to the shape of a. If a and b
Convert an array to a new array of the given type.
Copies the elements of an array to the result array. The result array will be modified.
Copy boolean values from array a to array result.
Copy object from array a to array result.
Returns the minimum and maximum of the elements in the array.
Set the elements of the specified result array to the specified value.
Returns a builder for this catalog. This builder can be used to create a new catalog.
Creates a projection implementation from the given projection.
Unescapes a DAP string.
URL - decode a string.
Unescapes the given URL string and returns the new URL.
Escapes any characters in x that are not part of the reserved chars list.
Returns a copy of the input if it contains a backslash. Otherwise returns the input unchanged.
Tokenize an escaped name into a list of tokens. The returned list will be sorted by
Returns the index of the first occurrence of c in the given escaped name or - 1 if
Convert a backslash - escaped string to a DAP - escaped string.
Read an atomic scalar.
Get the path to the cursor. The path will be empty if the cursor is not a
Returns the value of the given property in the given class or null if the property is not
Returns the class of the given component or null if the component does not have a class.
Compile the dataset and databuffer into a DAP file. This method should only be called
Compiles a structure array.
Compiles a structure into a d4 cursor. The cursor is positioned at the beginning of
Compiles a sequence array.
Compiles a sequence into a cursor. The cursor is positioned at the start of the sequence
Read a little endian integer from the stream and return it as a long.
Returns the field with the given name or null if the field does not exist.
Returns the value of the named field or throws an exception if the field does not exist.
Sets the value of the field with the given name. If the field does not exist an
Adds the given field to the current row and returns the added field.
Add a check box field to the schema.
Add a date field to the form.
Add a double field to the table.
Add a int field to the schema.
Add a password field to the form.
Add a text field to the form. The field will be resizable if the form is
Adds a text combo field to the form.
Add a text field with a default value and an optional number of rows to the table.
Adds a new heading to the table.
Adds a component to the layout. The component is added to the end of the list of
Adds a new empty row to the table with the specified row and size.
Find the first visible frame in the stack. If no frame is found null is returned.
Returns the cell spacing.
Returns a factor array that can be used to compute the factor factorization of this factorization
Multiplies this factor with the given dimension and returns the result as a new factor array.
Returns a factor array that is the result of the multiplication of this factor by the given power
Returns true if this dimension is the reciprocal of the given dimension.
Returns true if all factors are dimensionless. If all factors are dimensionless returns false.
Factory method to create a new param tables object from the given param table path and lookup table
Factory method to create a new grib1 param tables object from a jdom2.
Add a parameter table to the lookup table. The table will be added to the start of
Add a parameter table to the lookup table.
Raise this unit to the given power. If the power is num then return this unit.
Convert the input array to the output array. The output array is assumed to have the same
Initializes the unit table.
Make a vertical variable.
Get the next random name from the file.
Grab a short from the byte array at the given offset.
Grab an integer from the given byte array starting at the given offset.
Grab a float from the byte array at the given offset.
Grab a double from the byte array at the given offset.
Create an alias for the given name. If the alias does not exist it is created.
Adds a new unit to the database.
Creates a converter from the given units.
Set the list of structure data.
Set the point feature data.
Draws all the shapes that intersect the bounding box of the image at the specified transform.
Returns an iterator over the shape objects that can be used to create a new shape object.
Process the input stream. This method reads the input stream from the input stream and processes the
Read a number of bytes from the input stream into the destination buffer starting at the specified offset
Get more bytes from the input stream.
Read bytes from the stream into the specified byte array starting at the specified offset.
Skip the given number of bytes in the buffer.
Add vert dimension to group g.
Returns the index of the coordinate in the given grid record or - 1 if not found.
Returns true if the file is valid and false if it is not.
Open a random access to a NetCDF file and read the header from the file.
Read the data from the file into an array of bytes. The data is read from the
Read one row of data.
Create a new dataset from an existing netcdf dataset.
Create a base type for a given variable.
Set the area of the map.
Set the area of the map to the given point.
Set the center point of the map to the given latitude and longitude. The area of the
Sets the projection to be used by this query.
Add the actions to the given menu.
Redraw the screen if it is not already running. If it is not running do nothing
Sets the screen size to a new rectangle. Does nothing if the rectangle is already in the
Sets the selected state of the button.
Get a double value from the template. The offset is applied to the dimensions of the template
Read a double value from the stream.
Get the object at the given index. The index must be atomic. If the index is
Returns the GINI name for the given entity ID.
Read a scaled integer from the buffer.
Find the parameter with the given name that should be ignored.
Swaps the byte order of the current byte buffer.
Returns the number of times and the time index of the first occurrence of the given file.
Returns the full path to the file with the given index.
Get the list of file names. This is the list of file names in the current directory
Get the path to the DDF.
Get the full path of a file.
Adds a channel subscription to the list of channel subscriptions.
Convert a reference date to a time coord value. The reference date is assumed to be in
Read a number of random bytes from the file and return the number of bytes read.
Get the uncompleted data starting at the given offset and length. If the length is
12n13n14 pcode 12n13n14 pcode 12n13n
PCM 25.
Check the message header of a random file. Return the number of bytes read or - 1
PCODE 5 = DIMENSIONS
Parse a 128 - bit P code.
Returns the levels of the given short array. The levels are ordered from lowest to highest.
Returns the dualpol levels for the given short array.
Adds a new variable to the netcdf file.
Adds a parameter to the netcdf file.
Uncompress a buffer into a byte array. The buffer must be at least uncomplen bytes
Get an unsigned integer from a byte array.
Get an integer from a byte array.
Convert a byte array to an object of the given data type.
Do the DMR operation.
Get the request state for the given servlet request and response. This method is called by the
Sends an error to the client with the given httpcode and throwable. If throwable is null
Set the anchor point to point p.
Stretch to the given point. The point will be stretched when this method is
Format the given text as a date only.
Replace the data variables in the given structure with the data variables in the given structure.
Ensures that the memory array size is ok.
Read two random integers from a file.
Read an unsigned integer from a file.
Reads a 3 - bit integer from the specified file.
Read a 2 - bit unsigned integer from a file - like object.
Read three random bytes from a file in the form of an unsigned 3 - bit unsigned integer
Reads a 4 - bit float from a file in the RAF.
Convert four ints into a float.
Reads an 8 - bit integer from the given RAF.
Count the number of bits in the given byte array.
Create a copy of this projection.
Returns the WKS string representation of this object.
Escapes a string for use in an HTML entity.
Unescapes a backslash from the beginning of a string and returns the resulting string.
Splits a string into a list of strings where each element is a backslash separated by sep.
Create a new inverse FMRC. This is the inverse of the FMRC.
Returns the service special for the given path or null if the path does not start with the
Returns the number of projected components.
Returns the reference time of this time.
Factory method to create a new bb object from an existing bb object and a new section.
Entry point for Lucene Indexer. This is the entry point for Lucene Indexer
Return a GRIB1 record from a proto. grib1. record
Returns true if the given string is a global attribute of the given NetCDF file.
Make a UTM coordinate transform from UTM coordinates to UTM coordinates.
Reacquires a reference to the underlying area file.
Returns true if the date is before the specified date. If the date is not present this
Returns true if this date is before the specified date.
Returns true if the date is after the specified date. If the date is not present this
Sets the value at the given index.
Adds a coordinate system to the variable. If the variable is null an exception is thrown.
Set the units of the measurement.
Returns the units of this variable as a string. If no units are defined null is returned
Initializes this thredds object with the given read mode and the given preferences.
Read a catalog from the file system.
Process all the datasets in the list of datasets. If the maximum number of datasets exceeds the
Read cats in the given directory. If the limit is reached the method does nothing.
Returns true if the longitude is between beg and end.
Convert a latitude value to a string. If the latitude is greater than or equal to the
Returns a string representation of the longitude.
Compares this quantity to another quantity.
Returns the selected dataset in the catalog tree or null if there is no selected dataset.
Sets the selected dataset in the tree. The selected dataset will be displayed in the tree.
Make a tree path from the given node to the parent of the given node.
Open all the nodes in the catalog.
Sets the catalog to be displayed in the dialog.
Sets the catalog to be used. The base URI of the catalog will be used as the
Find the alias for the given variable. If no alias is found the alias will be the
Writes a variable - length integer to the stream. Returns the number of bytes written.
Writes a range of characters from the given string to the underlying output stream. The characters are
Reads characters from the stream into the specified character array starting at the specified offset and ending at
Set the debug flags.
Adds a new member to the list of members. The member is added to the list of
Hides a member from the list. Returns the index of the member or - 1 if
Returns a list of the names of the members of this class.
Returns the member with the given name or null if there is no such member.
Get the bitmap from the RAF.
Restore the state of the table from the given store.
Returns an iterator over the selected rows. The rows are returned in the order they were selected
Returns the index of the model in the table. The index is the index of the column
Get a member as an array.
Returns the value of the member as a double.
Get the double array representation of a member of the type double.
Returns the value of the member as a float.
Get a float array from the file.
Returns the value of the member as a byte.
Get the value of a member as a byte array.
Returns the value of the member as an integer.
Get an array of int values from a structure member.
Returns the value of the member as a short.
Returns a short array representation of the given member.
Returns the value of the member as a long.
Returns a long array representation of the given member.
Returns the value of the member as a char.
Get the contents of a member as a char array.
Output a single dataset to a file. If the dataset is not useable it will be
Creates a copy of this dataset node with the given parent node.
Transfer the metadata from the given dataset node to this thredds dataset node.
Get the thredds metadata inheritable from this dataset. If no thredd
Adds the given record to the list of records. If the first record is null then the
Show the missing values in the report.
Show the number of missing records in the tracker.
Find the record for a given ensemble and time and level. If the ensemble has not been
Returns a string representation of the grid data.
Make a long name for this parameter.
Returns a subset of this coverage axis with the given intervals.
Returns true if the two byte arrays have the same length as the given byte arrays.
Parse a dmr document into a dap dataset.
Process the attributes of the nodes in the dataset. If the number of attributes is greater than
Add a list of coordinates to the partition.
Set the number of linearly distributed parallels from la1 to la2.
Parse a variable selector in the section spec.
Creates a string representation of the given variable and a list of ranges.
Returns true if there is a box with num points on the screen. If num points on
Closes the connection. If the connection is already closed this method does nothing. If the connection
Execute the request and return the HTTP status code.
Identifies the station of an encoding feature.
Returns the name of the variable that matches the given axis type and outer dimension.
Sets the input stream to use. The input stream must be closed before calling this method.
Read a character from the input stream. If the input stream is at the end of the
This method is called when a task is started. It is called when a task is started
Parse a URI string to a URI object.
Returns a copy of the given URI with the components excluded from the original URI.
Returns null if the string is null and the length of the string is equal to the number
Returns the canonical path of prefix and suffix. If prefix or suffix are null returns the canonical
Returns true if the dataset should be included in the crawl. If the dataset s last modified
Copy the information from another grib collection to this one.
Returns a list of all filenames in the file system sorted by file name.
Sets the index of the file to be read from. The file will be read from if
Get the file path in the cache or create a new one if it doesn t exist.
Returns the number of counters in the compressed array.
Adds a global attribute to the document. The attribute will be added to the document if it
Adds a global attribute with the given name and values. If the attribute already exists it will
Delete the global attribute with the given name. If no attribute with the given name exists null
Rename the global attribute with the given old name to the given new name. If the attribute
Adds an attribute with the given name and value to the template.
Adds an attribute with the given name and value. The attribute will be added to the document
Delete an attribute from a variable. If the variable does not exist or the attribute does not
Rename an attribute of a variable. If the variable already has an attribute with the same name
Make the file sub - type.
Writes the header and bounding box to the output file.
Writes the members of the geometry list to a GML file.
Write the station obs dataset as an XML string.
Write the station collection as an XML document.
Write a DSR to the stream. If the stream is in the initial state throw an
Send a dxr packet to the remote peer. This method is called when the remote peer
Write an error response to the response body.
Close the DMR channel.
Flush the buffer to the DMR channel. This method does nothing if the request mode is
Returns true if the given index is in the range of this range.
Returns the i th element of the array.
Shift this range by the specified origin. The origin must be less than or equal to the
Read the data from the file and fill it with the data of the given type.
Read data from the RAF to a writable channel.
Returns a subset of this vector.
Sets the values of the GDS parameter. Values must be in the range 0 - 1
Make a double array from an array of ints.
Get the dataset boundaries.
Checks if requested variables are contained in the dataset and throws an exception if not.
Returns the dataset source structure with the given name or null if there is no such structure.
Get the path to the resource at the given location. The location can be relative to the
Make the vertical dimensions of the netcdf file. This is a helper function to make the
Read the PIB from the given file.
Finishes the analysis. This method is called at the end of the analysis process.
Transfer the metadata from the parent dataset to this dataset. The parent dataset must be inheritable
transfer metadata from another dataset to this dataset.
Transfer inheritable metadata from one dataset to another.
Sets the list of contributors for this thredds object.
Adds a dataset to the dataset list at the specified index. The dataset is added to the
Remove a dataset from this catalog.
Replace a dataset in the catalog with a new one.
Add a service to the list of available services.
Remove the given service from the list of services.
Sets the local list of services. The local list is used to store the local list of
Removes the given metadata from the local cache. If the metadata is not in the local cache
Returns the value of the user property with the given key or null if there is no user
Validates the given string against the given string builder. If the string is valid the builder is
Returns a list of string descriptors for this class. The descriptors are returned in the order they
Construct the server path from the servlet request.
Get the capabilities of a server.
Get a feature from the SGCS and return it as a wfs object.
check wfs parameters for error
This is the http servlet handler. It is the main entry point for the servlet handler.
Get the capabilities of the given URL.
Returns the number of bytes written to the stream. This is the number of bytes written to
Returns the last modified date of the object.
Sends a file to the client with the given content and content type. The file will be
Returns the contents of a string as an HTTP response. If an exception occurs it will be
Sets the content length of the response to the given string. The encoding of the string is
Get the request URI from the servlet request. If the servlet request URI cannot be resolved null
Returns the servlet path and path info from the given http servlet request. The servlet path and
Get the request path from the given servlet request. If the servlet request has no query string
Returns the value of the request parameter with the given name ignoring the case of the parameter.
Saves the current split to the preferences. This method is called when the split is saved.
Writes a directory to a file.
Create a new nested bit counter. This method is called when a new bit counter is created
count the number of bits in the replication table starting at the given bit index.
Append a line to the end of the file.
Make a station collection document.
Get the capabilities document.
Get the record at the given coordinates.
Returns the coordinate at the given index.
Adds an item to the list. If the item already exists in the list it will be
Handle an exception and return a response entity that can be used to display the error message.
Move forward from firstpos to lastpos in reverse order and return the index of the next
Get the ncep gen process.
Feature type is cdmrf endpoint.
Sets the value of the field. The type of the field will be set to type.
Factory method to create a new Grib1 GDS object from a center and grid number
Copy data from the input stream to the output stream with the given buffer size.
Read the contents of an input stream into a string using the given character set.
Read the contents of an input stream to a byte array.
Writes the contents of a string to an output stream.
Copy the contents of a file to a output stream. The contents of the input stream are
Copy a block of data from the RAF to the output stream.
copy files from one directory to another
Read the contents of a file into a byte array.
Read the contents of a file into a string. The file is read in UTF - 8
Writes the contents of the string to the given file. The contents will be converted to UTF
Writes the contents of the given string to the given file in the given output directory.
Writes the contents of an input stream to a file.
This method is called when a parse exception occurs. It is called by the parse exception handler
DAP2 exception handler. This method is called when an exception is thrown by the D
This method is called when a bad URL is requested. It logs a debug message if debug
Get the catalog of the server. This is the main entry point for the web application.
Print the catalog to the given writer.
Print the status of this request to the specified output writer.
Print bad url to the given print writer.
Gets the reference date.
Read the data of a variable from the file and return it as an array.
Reads a NCML document from the given string and returns a NCML collection.
Open a NCML document and return a NCML collection.
Checks if the given string contains only letters digits and are allowed by the given allow chars.
Clean up the given hash string and return it as a UTF - 8 string.
Returns a copy of x with only the characters that are in the ok string that are in
Returns a copy of the string s with all 7 - bit characters removed.
Make sure the given string is a valid cdm object name.
Returns the index of the first character in s1 that is not in s2.
Pads a string to the left with a given string until the desired length is reached.
Pads the given string to the right with the given string until the desired length is reached
Removes the first occurrence of sub from s and returns s.
Removes the character c from the string s if it is greater than the index of c.
Removes the specified character from the end of the string if it is the last character of the
Collapses all whitespace characters in a string into a single string.
Replaces all occurrences of out in s with in. If out is not present in s returns
Replaces all occurrences of a character in a string with another string in the same order.
Replaces all occurrences of pattern in string with value. If pattern is empty string is returned.
Replaces all occurrences of match with subst in the original string.
Substitute a string from a string array with another string array. The original string is returned
Removes the specified number of characters from the builder.
Replaces all occurrences of in with out in the string builder.
Replaces all occurrences of in in with out in the builder with the contents of in.
Replaces all occurrences of match with subst in sbuff starting at index num.
Trims a string by removing all leading and trailing characters from the start and end of the
Process a collection update event. If the collection is not the same as the config the event
Check the current state of the state machine. If the state machine is already in the state
Update the collection with the given update type. If the collection does not exist nothing is done
Returns a list of all the datasets in the dataset store. If the store is configured to
Release the resources held by this object. This method is called when the object is no longer
Create a deep copy of the structure data.
Copies the contents of an array to a byte - order array. If canonical is true the
Create a copy of the given structure to the given array in the given byte order.
Returns a copy of the structure data as a big endian byte array.
Create a new byte array with the given structure and members in the given byte order.
get forecast time interval size in hours
Creates a section from a range. The range is assumed to be in the form of a
Factory method to create an analyzer for the given table configurer feature type and netcdf dataset
Analyzes the given feature type and returns the features that match the given feature type.
Synchronize the grid with the grid reader. This method is called when the grid reader is
Returns a gaussian of the given type with the given number of latitudes starting at the given
Swaps a long from a byte array and an offset in a byte array.
Swaps the bits in a byte array at a specific offset and returns the result as a
Swap a char from a byte array to a byte offset and a char to a byte array
Find the coordinate axes for the given netcdf dataset.
Add a parameter to the coordinate transform.
Returns the common parent of this group and the given group.
Returns true if this group is the parent of the given group.
Sets the parent group. If the parent is null then the root group is used.
Adds a dimension to the group.
Adds a dimension to the group. Does nothing if the dimension already exists.
Adds a group to this group. The group must already exist in this group.
Adds an enumeration typedef to this group. If the group already has an enumeration typedef
Adds a variable to the scope. If the variable already exists nothing is done.
Removes the dimension with the given name from the list of dimensions. Returns true if the dimension
Make a group relative to the current group.
converts the DOS alias to the DOS alias.
Prints the DAS to the specified print writer. If the DAS is not available a
Returns the variable with the given name. If no such variable exists an exception is thrown.
Write grid data to the grid file.
replace missing values with min min and max min values with min min and max min - num
Replace missing values with the scale of the missing values in the data. This is used to
Get the x - start of a longitude shift. The x - start is the first longitude
Writes a grid of data to the file. The grid is defined by the coordinate system of
Writes the exception to the servlet response.
Make a top index file from a feature collection config.
Get the type of a GRIB collection from a random access file.
Update a grib collection.
Update a leaf collection.
Open an immutable grib collection from a data file.
Open a grib collection from a data file.
Returns true if the given url matches the given pattern. If the pattern is null returns false
Adds a triple to the cache.
Returns the value associated with the given key in the given URL or null if the key is
Set the well known state.
Inserts a new triple into the triplestore. If the triple already exists it will be
Returns a list of datasets from the local cache or creates a new list if it doesn t
Finds a dataset by its name.
Set the projection of the feature set.
Returns an iterator over all the shapes in the system.
Make a list of shapes from a feature iterator.
Compares this string to the given string. If the string is greater than the current string the
Start the progress monitor.
Checks if the given file needs to be updated based on the given collection update type.
Normalizes a list of coordinates into a list of normalized coordinates. The result is assumed to be
Set the object at the given index.
Get the structure data at the given index.
Copy all the structures of the given record to the given result iterator. The result iterator is
Get a scalar value from a structure member.
converts a scalar value to a double.
Convert a scalar value to an integer.
Get a float value from a record.
Get a scalar value from a record.
Get a scalar value from a record. This method assumes that the data type is short.
Get a single char value from a record.
Get a scalar string value from the specified record.
Get an array structure from a structure member. The data type must be structure or sequence.
get a sequence from a structure member. must be of the same data type as the sequence
Get an object from an opaque array.
Returns the minimum and maximum value of the given value. If the given value is less than
Evaluates the given expression and returns the result. If the expression is constant the value is returned
Returns a string representation of this constraint.
Returns true if the given node is a reference to this node.
Returns true if the value of the filter matches the given data and cursor. If the filter
Returns the number of expansion variables in the given structure.
Computes the list of enum variables.
computes the groups of the groups in the model. This method is called when the model
Compiles a SCE string into a CCE object using the given DAMR.
Returns true if the file is a valid http file false otherwise.
Create a system of actions that will be performed by the system. The system will have debug
Returns the byte order of the random number generator in the specified byte order.
Sets the byte order of the JVM.
Find a key by name. If no key is found null is returned.
Returns the file header with the given name or null if the file header is not found.
Returns the header of the file with the given name or null if the file does not exist
Prints the parts of the message to standard out.
Get the data pointer for the given row and column. If the row or column is out
Move the cursor to the first occurrence of the given word. The word is assumed to be
Read a string from the file. The position of the string is indicated by isword.
Compute the unacknowledged value for a given model. This is the inverse of the
Returns a string representation of the bits in the given bit array.
Write the given netcdf file to the given writable channel.
Parse the base type of an element. The base type is the name of the element.
Parse a grid of elements.
Parse the aliases for the given element.
Decodes a list of key descriptors into a list of data descriptors. The list of keys is
Replicates the given keys into a tree.
Get the filename of the dataset.
Returns the cf feature type. If the file is ship the cf feature type will be point
Returns true if the absolute difference between a and b is less than or equal to max.
Returns true if the node is a reference to a dimension enumeration variable group or dataset.
Parse the given unit specification into a unit object.
Returns true if the variable v is tiled in this section.
Returns the best time for the time2runtime array that is greater than or equal to the
Returns the projection of the given rectangle. The coordinates are relative to the center of the projection
Show all the data in the log file as a time series. This is useful for debugging
Make a hash map from a list of attributes. The keys are the short names of the
Returns an array of the string values of this field.
Returns the numeric value at the given index or null if the index is out of range.
Write the CDL for this node. If strict is true the node is not a string
Sets the string value.
Sets the values of this array to the values of the given array. If the array is
Scan the next character in the input stream and throw an exception if there are no more characters
Generate a proxy dataset resolver for the given dataset handler. The handler must be a proxy dataset
Adds a message to the queue. If the queue is full the message will be sent to
Set the thredds datatype for the given dataset.
jumpto thredds datatype.
Prepare the GUI for the current OS. This is done by checking the system property to see
Create a new tools frame.
Make a name from a list of axes. The name is the full name of each axis
Returns a coordinate axis that is lesser than or equal to a given axis.
Finds an axis of the given type.
Get the projection of this transform.
Returns true if this point is in the XY projection. If the x and y axis are
Returns true if this coordinate is a regular coordinate.
Checks if a set of dimensions is a subset of a subset of a set of dimensions.
Returns true if this coordinate system contains all of the axes in the given list.
Returns true if the coordinate set contains the given axis name.
Returns true if this domain contains all of the dimensions in the given list.
Returns true if this graph contains all of the axes in the given list of axis types.
Returns true if this coordinate set contains an axis of the given type.
Create a clone of this DAP. The clone is a copy of this DAP.
Get the selected bean from the table.
Returns a list of all the selected beans in the table.
Returns a list of the selected cells in the table.
Sets the bean to be selected. If the bean is not currently selected this method does nothing
Restore the state of this view to its original state.
Creates a new unknown unit with the given name.
Close the stream and release any resources associated with it. This method is called when the stream
Returns true if the given variable is an extra variable.
Returns true if the variable v is a coordinate.
Find a coordinate variable in the given table. If no coordinate variable is found null is returned
Add all non - data variables in the table t to the list of non - data variables
Add a parent join to the current table.
Create a new station feature from the given structure data.
Create a map of nodes.
Create a simple unit with the given name. If the unit cannot be parsed null is returned
Creates a new unit factory with the given name and throws the given unit exception.
Checks if the given units are compatible with the given exceptions.
Checks if the given unit is compatible with the date reference unit.
Returns true if the given string is a time unit.
Get the conversion factor from the input unit to the output unit.
Convert the given value to the given unit. If the conversion fails an exception is thrown.
Returns true if the unit of this unit is unknown. If the unit of this unit is
Returns the value of this unit relative to the base unit. If this unit is not a
Create a new top - level clause with the given operator and sub - clause and list of
Create a new top level clause with the given function name and a list of children.
Create a sub clause with the given function name and a list of sub - clause children.
Make a grayscale image from an array. If the array has the same rank as the
crawl the given catalog and print the result to the given writer. If the task is
crawl dataset.
Crawls a dataset. If the dataset is a catalog ref it will be released.
Get a file from the cache or create a new one if it doesn t exist.
Get an existing file from the cache or create a new one if it doesn t exist.
Enable or disable leaks in debug mode. If set to true the number of open files
Returns a list of all the files in the system.
Release this object from the cache. If the object is still in the cache it will be
Seek to the given position in the string. If the position is greater than the number of
Flush the buffer to the underlying file.
Returns the number of bytes read from the stream. This method returns - 1 if the stream
Reads n short values from the stream into the specified array starting at the specified position.
Reads an unbuffered number of bytes from the stream starting at the given position.
Reads an array of n integers from the stream and stores them in the array at the specified
Reads a number of 64 - bit integers from the stream into a long array starting at the
Read n bits from the stream and store them in a float array at the specified position.
Reads a number of doubles from the stream into a double array starting at the given position.
Read a string from the input stream.
Reads a string of the given length from the input stream and returns it as a new string
Writes an array of boolean values to the underlying stream.
Writes an array of shorts to the stream.
Writes a sequence of n characters from the specified character array starting at the specified position.
Writes an array of integers to the stream.
Writes an array of long values to the stream.
Writes a float array to the stream.
Writes a double array to the stream.
Writes a string of bytes to the output stream.
Writes an array of bytes to the underlying output stream.
Search for a given number of bytes in the file starting at the current file pointer.
Append a query string to the query string builder. If the template is set the query string
Factory method for creating a new directory partition.
Finds the index for this partition.
Returns true if the current partition is a leaf or a directory partition.
Construct the children of this builder based on the given index reader and collection. If the index
Scan the given directory for children and build them if necessary.
Read the files from the index using the given reader. The reader is used to read the
Returns a list of all gridsets in this dataset.
Acquires a file from the cache or creates a new one if it doesn t exist.
Remove a file from the cache. If the file does not exist it will be created.
This method is called when an object is evicted from the cache. If the cache is
Release the given NCFile. If the NCFile is disabled the NCFile
Returns a 4 - bit integer from the components of a four - bit integer.
Adds an element to the cache. If the element is already in the cache it will be
Removes all entries from the cache. If force is set to true the cache will be cleared
Make a vertical transform on the given grid. This method does nothing if there is no vertical
Returns true if this coordinate is global longitude.
Returns true if the camera is on the z - axis. If the camera is on the
Find the coordinates of a point on the x - axis. If the x - axis is
Returns an array of the coordinates of the x - axis for the given coordinates. If the
Find the x - coordinate of the given point in the current coordinate system. The coordinates are
Find the x - coordinate of the given point in the current coordinate system. The coordinates are
Returns the position of the next item in the list or - 1 if there are no more
Get the item at the specified pixel position. If the item does not exist return 0.
Iterate over the files in the collection and invoke the visitor for each file in the collection.
Get the remote files from the remote server.
Returns the subcenter name for the given center and subcenter. If the subcenter is
Convert a unit string to a calendar. period. Field object.
Creates a period with the specified value and field. If the field does not exist in the
Returns a period of the given unit or null if there is no such unit.
Subtract from start to end and return the difference in milliseconds between start and end.
Returns the conversion factor for the given calendar period. The conversion factor is calculated based on the
Returns the number of milliseconds since January 1st January 2nd January 3rd
Returns the offset between the given start and end dates. If both start and end are equal
Synchronize the grid with the grid file.
Initialize the tables for Gempak grid parameters. This method is used to initialize the
put data root ext into map and add it to set. return true if put was successful
Returns the longest path that matches the given request path or null if there is no match.
find data root
convert2 data root.
Returns the date range for the given calendar.
Reindex a list of coordinates to a new list of indices. The returned list will be
Create a new netcdf file writer with the given version location and chunker.
Add a new group to the group tree. If parent is null the root group is returned
Adds a typedef to the given group.
Delete an attribute from a given group. If the group is null the default group is used
Rename an attribute in a group. If the group does not exist it will be created.
Adds a new record to the NetCDF file. If the NetCDF version is
Aborts the current transaction and releases any resources associated with it. This method should be called
Writes the properties of this bean to the given print writer.
Extract thredds metadata from the given thredds dataset.
Divide this unit into the given unit. If this unit is an offset unit then the
Convert this unit to the derived unit with the given amount.
Returns the value of this unit divided by the given amount. If this unit is not a
Convert a nested variable to a nested array.
Convert a top variable to a NC2 array. The top variable is a list of
Convert the given array to an array of the same size as the input array.
Close all open metadata managers. This method is thread - safe and should not be called from
Creates a new database for this collection. This method is thread - safe and should only be
Convert an integer to an instance of a period using the specified unit. The unit can be
Ensure that the array has at least the given minimum capacity.
Get the element at the given index.
Make a catalog for a directory.
Returns null if the path is not a directory or if it ends with the string str.
Returns the coordinate type of this dimension.
Factory method for creating PDS objects of the given template with the given byte array input.
Calculate the time from the start of a GRIB date. This method assumes that the
Apply the scale factor to the given value. If the scale is 0 then the value is
Parse a local concept from a file.
Adds a local concept to the input stream.
Clean a line of text by replacing all occurrences of str with str and trimming the line
Store a concept in the local map.
Write the grib1 tables.
Write a lookup table file.
Print the local concepts.
This is the main method of the program. It is the main method of the program.
Returns the dataset source type for the given name. If the name is null returns null.
Expands the entire dataset into a new dataset. This method does not modify the dataset.
Expands this catalog into a full catalog. The full catalog is the same as this one
names the datasets in the dataset container.
Name the dataset.
Name the dataset in the tree.
Load an image from the specified URL. The image will be rotated by the specified rotation.
Stop the loading of the given URL. If the given URL is not currently loading it will
Called when a source status is changed.
Sends a progress notification to all registered listeners that have been registered for the source.
Create a scaled picture in a thread.
Returns the scaled size of the image. If the image is null returns the size of the
Returns a string representation of the size of the image scaled to the dimensions of the image.
Returns a list of the merged parts of this segment.
Make a header string from a Gempak station and a date.
Returns a list of all the possible types in the list. The list will be empty if
Returns true if the given part is a valid group and the given parameters are the same.
Sets the root directory of the cache.
Creates the root directory if it doesn t already exist.
Get a file object for the given location. If the file does not exist create it.
Delete all files in the cache that are older than the given date. If sbuff is
Clean the cache by removing all the files that are longer than the given max bytes. If
Returns true if the given Fxy is a bufr table. The Fxy must be
Factory method to create a coordinate axis from a netcdf dataset and a vector.
Returns a copy of this coordinate axis without caching it.
Returns true if the data type is a numeric type.
Get information about this axis.
Get the calendar from the attribute.
Sets the list of rows to be selected. If the list is larger than the number of
Returns the selected row in the table or null if there is no selected row in the table
Increments the selected row by the given number. If the selected row is equal to the
Returns the index of the column model in the table. The index is the index of the
Set the index of the slider to the given value.
sorts a string array in ascending order lo0 < hi0 and lo0 < hi
Swaps the elements at positions i and j in the array.
Returns an existing file object or null if the file does not exist.
Rotates the longitude vector according to the rotation angle s and returns the new longitude vector.
Creates a new XML document from a file. The file must contain a valid XML document.
Create a new XML object from two input streams. The first input stream is assumed to be
Creates a new XML document from a resource.
Make a standard filename from the given app and store name.
Saves the current state of the preference to the preferences file.
Save the error message to the given output stream.
Write an atomic variable to a serial writer.
Writes the structure of the given data cursor to the given serial writer. The data cursor is
Writes the structure of the given instance to the given serial writer.
Writes a sequence of values from the template to the given serial writer. The output will be
Write a single record to the given serial writer.
Checks if the file is a valid file. The file is read from the beginning of the
Get the WMO id.
Read the n - th row of data from the given input stream.
Returns the data at the given index. If the index is out of range null is returned
Get the 0 - bit data from the GRIB. The data is read from the
Get data from GRIB 2. 0 format.
Create a CSV file from a list of grids. The file will be created in the
estimate the size of a grid file based on a grid dataset and a list of grids
Make a netcdf file from a list of grids.
Sets the list of stations to search for. The list of stations must be in the same
Sets the selected station to the given name.
Pick the station at the given location.
Returns the station closest to the pick point.
Returns the currently selected station or null if no station is selected.
Get the projection name for the given type. The type can be pseudo mercator or
Returns a list of stations in the given bounding box.
Returns the station with the given name or null if the station does not exist.
Get the data iterator for a given station.
Get the data iterator for a given station and date range.
Read the data from the given RAF with the given abbreviations and gate ranges.
Computes the dot product between this ma and the given ma.
Returns the norm of the matrix.
Normalizes each element in the matrix by dividing it by the norm of the number of elements
Sets the services for all the datasets in the given iterable.
Returns the parameter with the given id. If the parameter table does not exist it will be
Returns the local parameter with the given id.
Adds a new prefix to the set. The prefix will be added to the set if it
Adds a symbol and its value to the prefix set.
Returns the first prefix that matches the given string in the given set or null if none is
Returns true if the given email is in the list of email addresses for the given source.
Returns the value of the parameter with the given name. Throws an exception if the parameter is
Calculates the CRC for this grid.
Returns true if the packet is thin. The packet is thin if the packet is not thin
Returns the index of the field with the given name. If the field does not exist it
Returns the time type name for the given time range indicator.
Returns the time coord of the forecast. If the forecast is an interval the time coord is
Set the next polygon in the list. If the next is a cf the next polygon will
Sets the previous polygon. If the previous polygon is a CF the previous polygon will be set
Returns the value of the property with the given name or null if no such property exists.
Sets the current projection to be the given projection. If no projection is given the current projection
Returns a subset of the coordinates from the given time. If the given time is not present
Register a netcdf file io class with the given name. The io class will be instantiated
Registers a new IO implementation with the given class. If the class already has an IO implementation
Returns true if an IOSP provider is registered for the given class. Otherwise returns false.
De - registers an IOSP provider.
Returns true if the file at the given location can be opened and false if it can t
Open an in - memory netcdf file with the given name data and iosp class.
Opens an in - memory netcdf file with the given name and data.
Open a netcdf file in memory.
Open a netcdf file in memory.
Find the global attribute with the given name ignoring case.
Write this element to a NetCDF file and return the result as a string.
Writes the CDL document to the given output stream.
Writes the CDL representation of this node to the specified print writer.
Writes the CDL string to the given formatter with the given indent and strict mode.
Adds an attribute to the given group. If parent is null the root group is used.
Adds an attribute to the given group. If parent is null the root group is used.
Adds a group to a parent group. If parent is null the root group is used.
Adds a dimension to the given group. If parent is null the root group is used.
Removes the dimension with the given name from the given group. If the group is null the
Adds a variable to the given group. If the group is null the root group is used
Add a new variable to the given group. If the group is null the root group is
Add a new string variable to the given group with the given name dimensions and length.
Removes a variable from the given group.
Send a message to the IOSP server. If the message is add or remove the variable
Make the record structure.
Finishes the transformation. This method is called when the transformation is complete. This method is
Read a variable section from the file. If the file is an IOSP file read the
Read data to a writable channel. This method is used to read data to a writable channel
Read a list of variables from an input stream.
Read an array of values from the specified section of the configuration file. If flatten is true
Make a full name from a cdm node.
Make a full name with the given parent group and name. The name must be a valid
Returns true if the given file should be included in the result. If no include filters are
Returns true if the given file should be excluded from the result set.
Returns true if at least one of the filters accepts the given file. Otherwise returns false.
Append a string value to the attribute. If check is true the value will be converted to
Dispatch the value check to the appropriate handler depending on the type of the attribute.
Forces the value to be of the given type. If the value is of the given
Checks if the given string is a byte. If it is it will throw an exception.
Checks if a short is a valid short. If debug is enabled the string will be logged
Checks if a string is an integer or not.
Returns true if the string s is a unicode character false otherwise.
Checks if a string is a floating point number or not.
Checks if a string is a double.
Get the data type of an attribute.
Returns true if this thredds is viewable for the given dataset.
Returns true if the string is a valid boolean value. If the string is null or empty
Returns true if the given string is a valid alphanumeric string. If the given string is null
Returns true if the given string is a valid alphanumeric string that is constrained by the given string
Returns true if the given path is a descend only file path. The path is split on
Converts a unicode code point to a percent - hex string. The code point must be a
Returns the value of the parameter with the given key or null if the parameter does not exist
Returns true if the local grid has the same parameters as the other grid. The local grid
Reads from the input stream and processes each byte in the stream. If no bytes are available
Process the input stream and return the position of the next match in the input stream.
Removes the quotes from a string if they are present. If they are not remove the string
Mark all variables in the stack as having been declared.
Writes a NetCDF file to the specified location. If the location does not exist it
Get the value from the thredds config. If no value is found for the
Returns the CDL representation of this number.
Create a new station helper. This method is overridden so that it can be overridden by subclasses
This method is used to validate the current state of the builder. If the builder is valid
Returns the azimuth of the message. The azimuth is the angle in radians between sc and cc
Returns the elevation of the message in angstrom. If the message type is not sc
Returns an array of the latitude values of the rays in the surface of this surface.
Returns an array of the longitudes of the rays in this line segment.
Returns an array of the altitude of the rays on the surface of this surface.
Returns an array of the azimuths of the rays in this ring.
Returns an array of the elevations of the rays.
Returns a new structure with only the members of the given names.
Returns a new structure with the given name as the member of the given structure.
Adds a new member to this structure.
Sets the list of member variables. The list of variables must be non - null.
Sets the parent group of this variable and all of its members in the given group.
Calculates the size of the elements in the vector.
Read a structure from the file.
Read a structure from the netcdf file. The start and count parameters are the indices of
Get the data category for the given category. If the category does not exist it is created
Get the class name.
Adds a parameter to the list of parameters to be parsed.
Returns the header as a string. The header is formatted as a tab - separated string.
proj a rect on the right or left of the bounding box on the left of the bounding
Get the version number for a given convention.
Returns the positive value for the zaxis name and vert coordinate units. If vert coordinate units
Set the scale parameters for the color scale field.
This method is called when the plan is drawn. This method is called when the plan is
Returns true if this group is a direct child of the given group.
Returns the message type associated with the given message name.
Installs the given column in all columns of the given table with the given alignment.
Set the API key and secret for the coinbase.
Creates a new label with the given value.
Creates a new label with the given lines justified.
Creates a label with the given HTML value.
Connects to the specified socket.
converts a string to a list of ip types
Connect to a MySQL server.
Removes a logger from the list of registered loggers.
Compiles the given source code into a class with the given name and returns the class object.
Adds a source code to the compiler.
Read the external graphic control.
Returns the next frame in the bitmap or null if there are no more frames.
Provides a list of the persons in the repository. The first and last names of the
Initialize the list events.
Returns the person with the given id or null if no person with the given id exists.
Adds a validation message for a given validator.
Sets the person s id. The person s name gender first name and last name will be
Create a view model.
Load countries from ISO 3166.
Creates a new view step.
Creates a new fxml view with the given view model type.
Removes all listeners from the map and passes them to the consumer.
Creates the events for the index property.
Access the given member using the given callable. The member will be set to true if the
Creates a view that loads a FXML file from the given resource bundle. The FXML
Query for a single style row. If no row is found null is returned.
Get the pixel value of the pixel at the specified position in the image.
Get the pixel values from a PNG image.
Validate the image type of a PNG file.
Creates a png image with the specified tile width and height.
Set the tile data from a bitmap.
Executes a raw query with the given arguments returning a cursor for the first row of the result
Executes the given query with the given arguments and returns the result as a cursor.
Execute the previous query and return the result. If no previous query has been executed the previous
Query the database and return the result as a t object. This method can be used to
Convert cursor to t object and set the query and table if it is not null.
Get a feature row from a geometry index.
Register a table with the database. The table must have a primary key. The primary key
Retrieve the tile for the given tile coordinates and zoom level.
Get the coverage data for the specified width and height.
Get the coverage data for the given package and tile dao.
Get the coverage data for the given package tile dao and projection.
Get the coverage results for the requested tile.
Get the coverage data tile matrix results for the given bounding box tile matrix and overlapping pixels.
Get the coverage data tile matrix results for the requested bounding box tile matrix and overlapping pixels.
Get coverage data tile matrix results zoom out.
Get the tile matrix for the coverage data request.
Get the value of the specified tile at the specified location relative to the top - left corner
Sets the icon for a geometry type. If the geometry type is null the default icon is
Returns the icon for the given geometry type or the default icon if no icon exists for the
Get the bindings for the database. If the database has not been loaded yet this method will
Creates a bitmap from the given byte array.
Compress the given bitmap to a byte array using the given compression format and quality.
Creates a new record in the database with the given metadata.
Delete the table with the given id and table name from the given geo package.
Returns the table metadata for the specified package or creates it if it doesn t exist.
Get the id of a package.
Read the table metadata from the cursor and return it as a table metadata object.
r Creates the extension tree if it doesn t already exist. If it already exists it will
r Get a single feature row from the database.
Execute a raw query against the database and return a user custom cursor. The cursor will be
Performs a projection query on the given bounding box.
Create a custom cursor for the given geometry.
Returns the number of points in the given envelope.
Query for rows in the table that intersect the given bounds.
Build a where clause for the given min and max values.
Query for features in the given bounding box using the specified projection.
Count the number of features within the given bounding box.
Query for features in the given envelope.
Query for features within the specified bounding box. If the bounding box is outside the specified bounding
Count the number of points within the given bounds.
Set the data of the bitmap to the specified format. The data will be compressed if necessary
Set the data of the bitmap to be written to the file. The format and quality parameters
Sets the bitmap compression configuration.
Get the number of tiles in the map.
Adjusts the bounding box to match the given zoom level and zoom level.
Adjusts the bounds of the gauge to match the current bounds of the gauge.
Adjust the bounds of the geo package to match the given bounding box and zoom level.
Adjust the bounds of the geo package based on the request web mercator bounding box and
Get the bounding box at the given zoom level.
Get the tile grid at the given zoom level.
Query the tile with the given column row and zoom level.
Query for tiles in the given zoom level descending.
Get the zoom level closest to the given length.
Get the approximate zoom level for the given length.
Get the tile grid for the given zoom level.
Delete the tile at the specified location in the specified zoom level and tile column.
Count the number of tiles at a given zoom level.
Returns true if this tile is a google tiles tile or false if this tile is not a
Get the value of the pixel at the given position in the given image.
Get the values of the pixels in the given byte array.
Validate the image type of the directory.
Create a tiff image with the specified tile width and height.
Sets the value of a single pixel in the tiff image.
Returns the package with the given name or creates it if it doesn t exist.
Returns the current row. If there is no current row null is returned. If there is
Move to the next invalid state.
Query by base feature id.
Delete by base id and geometry type.
Get a rectangle from the given width height bounding box and section.
Get a rounded rectangle from the given bounding box and section. The returned rectangle is rounded to
Returns a list of databases that do not exist in the given list.
Create a connection to the database and close it.
check if a database exists and is valid. If it does not exist it is created.
Validates the database and closes the database if an error occurs. If an error occurs the database
Validate the database and close it.
Validate the database. This method is used to validate the header and integrity of the database.
Validates the database header and throws an exception if the header is invalid.
Checks if the database header is valid.
Adds the internal databases to the given collection. The list of databases is a copy of the
Add external databases.
import a database from a file or a directory. if override is true the database will be
get the package metadata for the given database
get the external package metadata at the given path
Create a new record in the database with the given geometry metadata.
Populate the geometry metadata with the data from the given envelope.
Delete the package with the given id from the database.
Creates or updates a geometry if it doesn t already exist. If it already exists it will
Update a geometry in the database.
Count the number of records within the specified bounding box within the specified package and table.
Read the geometry metadata from the cursor.
Update the values in the table with the given where clause with the given values where args.
Draw a tile with the given width and height with the given text.
Get a list of simple attributes for the given ids.
Checks if the current cursor is equal to the given string. If it is close the cursor
Creates a new user mapping dao with the given table name. The table name must be unique
Get a simple attributes DAO with the given table name.
Get the mappings for the given base id in the given relation.
Get the mappings for the given relation and related id.
Returns true if a mapping exists for the given base id and related id.
Count the number of records in the cursor.
Register a package cursor wrapper for this query.
Create a new user custom DAO that reads data from a database table.
Returns the tile at the specified bounding box. If no tile is found null is returned.
Draw a tile with the given matrix tile cursor tile results bounding box width and height.
Reproject a tile to the requested width and height using the specified bounding box and transform.
Retrieve the tile cursor for the given bounding box and tile matrix. If the tile matrix is
Calculate the overlap between the line and the polygon. The overlap is calculated based on the density
Sets the density of the line and polygon. The density will be multiplied by the stroke width
Set the line paint.
Set the polygon to paint. The stroke width is the same as the stroke width of the
Draw a tile and return the tile data as a byte array.
Draw a tile with the specified zoom level.
Draw a tile at the specified location and zoom level. This is used to draw a tile
Query the number of features at a given location and zoom level.
Returns the number of features indexed within the bounding box.
Query for the features at the given coordinates and zoom level. The coordinates are relative to the
Query for the features in the bounding box that match the query criteria.
Draw all tiles in the specified zoom level from the specified tile position and zoom level.
Simplify a list of points based on the given simplify tolerance.
Get the paint for the given feature style. If no paint is available the point paint is
Get the paint for the given feature style. If the paint is null return the line paint
Get the paint for the given feature style. If no paint is available the default paint is
Get the fill paint for the given feature. If the feature has no fill color it will
Get the paint for the given feature style. If the feature style is null null is returned
Get the paint object for the given draw type. If it doesn t exist create it.
Get the paint for the given row and feature draw type.
Get the paint for the given style id and draw type.
Puts a bitmap for the given icon row.
Wrap the values in quotes and return a new values object that can be used to create a
Creates a new bitmap. The bitmap will be stored in the layered array of bitmaps
Recycle all the bitmaps. This method is called when the bitmap is no longer needed
Get the bitmap for the given layer. Create it if it doesn t exist.
Get the canvas for a given layer. Create it if it doesn t exist.
Create the bitmap and the canvas for the given layer.
Get the mapping DAO for the given table prefix and feature table. If the table is
Get the style DAO for this table. If the table does not exist return null.
Get the DAO for the icon table. If the table does not exist return null.
Get the feature styles for the given feature table.
Returns the styles for the given feature and table.
Get the style row for the given feature table and geometry type.
Get the icons for the given feature and table.
Get the icon row for a given feature table and geometry type.
Get the style for the given feature row.
Get the feature styles for the given table and feature id. If no styles exist for the
Get the styles for the given feature row.
Get the icons for the given feature row.
Get the styles for a given feature id and style mapping dao.
Get all icons for a given feature id and style mapping. If no icons are found null
Sets the feature styles for the given table.
Set the styles for a feature table. The default style will be replaced with the default style
Set the icons for a table.
Set the feature styles for the given feature row.
Sets the feature styles for the given feature table and feature id. If the feature has no
Sets the styles for the given feature row.
Sets the styles for the given feature table and id.
Set a style for a feature row. The style will be applied to the geometry type of
Set the default style for the given feature row.
Set the default style for the given feature table and feature id with the given style row.
Sets the icons for the given feature row.
Set the icons for a feature. If the feature has a default icon the default icon will
Set the icon for a feature row.
Set the default icon for a feature.
Sets the default icon for the given feature table and feature id.
Returns the style id or creates a new one if it doesn t already exist.
Get or insert a new icon in the database. If the icon already exists it will be
Insert a new style mapping into the database.
Delete the style of a feature table and geometry type. The feature table must be in the
Delete the icon for the given feature table and geometry type.
Delete all mappings for a feature table.
Delete the mapping for the given table and geometry type. If the mapping dao is not null
Delete mapping by base id and geometry type.
Get all table style ids.
Get all icon ids for a table.
Get all style ids for a feature table.
Get all icon ids for a feature table.
Get the image bytes from the output stream or null if the output stream is null.
Flush the output stream to disk and close the output stream if there is one.
Get the pixel value at the specified location in the image. If the image is not present
Reads the pixels from the image file and stores them in an array. The array will be
Draw a single feature on the tile.
Draws a line on the given canvas with the given style and the given path.
Draw a polygon.
Adds a line string to the path.
Adds a polygon to the graph.
Get the feature cache for the given table. If no cache exists a new one is created
Remove a feature row from the database.
Clear the cache and resize it to the given maximum size.
Gets the table styles. If the table styles are not cached a new one will be created
Get the cached table icons or create a new one if it doesn t exist.
get the table dao for the given feature dao
Sets the width of the column. The column width must be greater than or equal to the
Sets the height of the column.
Returns the dimensions of the bitmap.
Calculate the tile density from the tile width and tile height.
Read a blob value from the database.
Read a custom table from a geo package.
Returns the current color or a default color if none is set.
Validate the color. If the color does not start with str it will be added to the
Creates a color object from the given hex color and opacity.
Get the package manager for the given context. The context class loader will be set to the
Sets the progress of the index and index tables. This is used to update the progress of
Returns the number of features in the given list of types or - 1 if there are no
Index the given row with the given list of feature index types.
Delete a collection of feature index types from the database.
Delete the given row and all of the given types from the index.
Delete the feature index for the given geometry id and type.
Delete a feature from the index.
Returns true if the feature is indexed or false if the feature is not indexed.
Returns a list of indexed types in the location query order.
Query for all features in the index.
Returns the number of features in the index or 0 if there are no features in the index
Get the bounding box of the feature.
Query the feature index table for the given bounding box and projection.
Get the index type.
Returns the internal file object for the given file path or null if the file path is null
Returns the absolute path of the given file path relative to the given context.
Get the geometry type.
Sets the value of the geometry type column.
Returns true if the given URL has a bounding box.
Replace the x and y coordinates in the given URL with the values of the given tile.
Returns true if the given url has a valid xyz.
Replace the bounding box in the given URL with the projected bounding box of the tile at the
Replace the bounding box in the URL with the values in the supplied bounding box.
Get the geometry data.
Index a feature row in a GeoPackage.
Update the last indexed feature in the database.
Deletes the index from the database. The index will be deleted from the database if it exists
Delete the index for the given geometry id.
Returns true if the feature is indexed. If the feature is not indexed returns false.
Query the database and table for geometry metadata.
Query the database for the geometry data within the given bounding box. The cursor will return the
Count the number of features within the given bounding box.
Query the database and table for a geometry. The cursor will be initialized with the result of
Count the number of features in the given geometry.
Query for features within the given bounding box.
Count the number of features within the given bounding box.
Transform the bounding box with the current projection.
Get the geometry metadata for a cursor.
Get the row of the cursor.
Get the row for the given geometry.
Get the tile daos for a feature table.
Get the list of feature daos for a tile table.
Get the bounding box for the given package tiles and bounding box. If no bounding box is
Query by base id and related id.
Returns a list of unique base ids for the user in the mapping table. The base ids
Returns a list of unique ids from the user mapping table where the user is mapped to the
Delete by base id.
Delete a record from the database by its related id.
Delete records by base id and related id.
Builds the where clause for the ids.
Creates a new package in the package metadata table.
delete a database from the database metadata table.
Rename the package in the given metadata object to the new name. If the name already exists
Rename the column with the given name to the given new name. The new name will be
Get all the package metadata in the database.
Get the package metadata for a database.
Get the package metadata for a given id.
Returns the package metadata for the given package name creating it if it doesn t exist.
Returns true if the database is an external database.
Get the external package metadata for a given path.
Get the metadata of the table where the column name is like the given string.
Get the metadata of the table where the column name does not match the given like expression.
Get the names of the objects in the metadata table where the name is like the given string
Creates the package metadata from the current cursor position.
This method is called when a view is created. It calls the internal view created method and
Adds a parallax view to the view group if it is a view group.
Create a new view with the given name and attribute set.
Create a custom view with the given name context and attributes.
Append an event to a cyclic buffer.
Find logback config file from system properties.
Get a resource from the class loader. If update is true update the status of the resource
Configures the joran instance. This method is called when the joran instance is
Status on a resource search.
Converts a socket address to a string.
Creates a new thread pool service.
Start all converters in the chain.
Append an event to the end of the list.
Add a property to the substitution map.
Returns the value of the property with the given key. If the key is not found in
Compiles the given top node with the given converter map and returns a converter that can be used
Parse the next token and return it as a literal or percent token.
Converts a fixed date to a regular expression.
This method is called at the beginning of an interpretation. It is called at the beginning
Called at the end of an interpretation. This is called when the interpretation ends.
Initializes the logback object with the given key. If the key is null then the key
Dynamically create a context selector from the given context selector string. The context selector is instantiated
This method is called to setup the properties of the application.
Returns the absolute path to the external storage directory.
Get the database directory path.
Returns the absolute file path for the given filename.
Returns true if the error level is greater than or equal to the error level.
Get the discriminating value for the given event.
Updates the mask if necessary.
Decide whether an event should be handled by this filter chain. If the event should be
Create a key manager for the given key store. If no key store is available no key
Create the trust managers from the trust store.
Creates a key store factory bean from system properties.
Get the location from the system property. If the location does not start with the string str
Get the url for a resource. If the location is relative to the classpath the resource is
Returns true if any converter in the chain handles the throwable false otherwise.
Stop the current context.
Print in case of errors or warnings.
Print the context if errors occured. If no errors occured print the name of the context.
Prints the status of the given context to the standard output. If the status manager is not
Get an entry from either the live or lingerers map.
Mark the end of the life cycle for the given key. If the key is not currently
Returns the format info value of the given string. If the string does not start with a
Renames src file to target file. If target file does not exist it will be created
Returns true if the source and target files are on the same volume as the target.
Returns the value of the specified environment variable or null if the variable is not set.
Returns the value of a system property or null if there is no such property.
Sets the mdc property map.
Output the MDC property as a string. The MDC property is a list of strings
Extract a stack trace element from a throwable.
Returns true if the current class is in the framework space list false otherwise.
Adds a new status to the list of statuses.
Adds a status listener to the list. If the listener is already present it is ignored.
Returns the list of implicit actions applicable to the given element path attribute and interpretation context.
Get the list of applicable actions for the given element path and attributes.
Set the class loader for this class. If no class loader is specified the current class loader
Get a system property as a string. If the system property is not set the default value
Decapitalizes the given name by converting the first letter of the first letter to lower
Returns an array of method descriptors for the given class.
Returns an array of property descriptors for the given class including getters and setters.
This method is called at the beginning of the process. It is called at the beginning of
Adds a console status listener to the given context. If the context is already a status manager
End the interpretation of a property.
Gets the discriminating value for the given event.
Returns true if the given event is discardable.
Initialize a shutdown hook with the given name and attributes and push it onto the interpretation stack
This method is called when the shutdown hook is finished. It is called when the shutdown hook
Returns the list of enabled protocols. If the list is null returns the list of default protocols
Returns the list of enabled cipher suites or the default cipher suites if none is specified.
Returns a new array with the values of the included and excluded strings. If both are null
Convert a string to a scope.
Sets the given properties in the given interpretation context in the given scope.
Adds a new appender to the list. If the appender is already present it will be replaced
Detaches an appender from the list. If the appender is null this method returns false.
Detach the appender with the given name from the list of appenders. Returns true if the
Handle a change in the parent level. This is called when the parent level is changed.
Calls the appenders of this logger and all its parents.
Detaches the given appender from the AAI.
Create a child logger by last name part.
The turbo filter chain decision 0 3 or more. The turbo filter chain
Log a slf4j event.
Creates a new socket and waits for it to be created. If the thread is interrupted the
Creates missing parent directories for the given file.
Returns the integer representation of the log level.
Convert an integer to a level. If the integer is not a valid level return the default
Get the number of occurrences of the given resource in the given class loader.
Get the url for the given resource. If the resource cannot be found null is returned.
Get the class loader of the given object.
Get class loader as privileged.
Get the class loader of the given class. If no class loader is available the system class
Checks if the encoder has been initialized. If not it adds an error message.
Get the tag of an event.
Method called when the interpretation starts. This method is called when the interpretation starts.
Returns the index of the separator in the given name starting from the given index.
Returns true if the event matches any of the markers in the marker list otherwise returns false.
Returns the name of the client thread. This is the name of the client thread.
Checks if two files are on the same file. If they do not throw an exception.
Append an event to the queue. If the queue is full the event is added to the
Send a cyclic buffer to the client. This method is called when a cyclic buffer is available
add mdc value level pair.
Create a converter from a simple keyword node.
Create a converter from a composite node.
Determine the compression mode based on the file name pattern. If the file name pattern ends with
Configures the connection to the given url. The connection will be opened in the context of the
Configures the joran context with the given file input stream. The file input stream will
Configures the joran engine with the given input stream. The input stream will be closed
Builds the interpreter. The interpreter will be initialized with the current context and the interpretation context
Configures the joran input source. This method is called when the joran input
Configure the joran interpreter. This method is called when the joran interpreter is
Returns the value of the property with the given key. If the key is the context name
Sets the name of the node.
Returns true if the given context has a status listener. If the context has no status listener
Returns the time of the last reset message or - 1 if there is no last reset message
Starts parsing the pattern and compiling it. If an error occurs it is added to the
Returns the effective converter map. The effective converter map is a copy of the original map.
Returns the header of the file as a string. The header is the first line of the
Returns the file footer as a string. The file footer is a line separator followed by the
This method is called at the beginning of an interpretation. It is called at the beginning
Ends an interpretation and logs a warning if the current object is not the appender.
Returns a copy of the client list.
Adds a client to the list of clients.
Removes a client from the list of clients.
Get a copy of the context map.
Returns the value of the method of the given type.
get turbo filter chain decision.
Returns true if the current operating system is an android OS.
Initializes the context with the default logger and auto configuration. The default logger will be used.
Returns an array of files in the given folder that match the given regular expression.
Print the status of the current thread to the console. If the current time is greater than
Get the database file.
Clear expired log entries from the database.
Checks if the cleanup time has passed since the last cleanup time or if the cleanup time has
appends a new event to the log and returns the number of events added to the log
appends a secondary sub event to the database.
Binds the logging event to the statement.
Returns the object as a string truncated to 254 characters. If the object is null returns the
Compute the reference mask for the given event.
Merge property maps.
Insert an exception into the database.
Returns the length of the prefix of this path to the length of the given path.
Returns the effective level of the status. The effective level is the highest level of the status
Returns true if the given class is unequivocally instantiable.
Returns the child value of the given parent map or null if the parent map is null.
Include the given URL in the joran output.
Open an input stream for the given URL. If an exception occurs the warning will be logged
Trim the head and tail of the recorder.
Returns true if the appender should start and false if it should stop. If the appender should
Returns true if this exception is a transient exception. If the exception is a server error returns
Set the default hosts.
Ensure that the local index is available.
Synchronize with the server. This method will block until the server is in a synchronous state
Check if sync is needed. If it is the last sync time or the last sync time
Wait for a task to complete or until the timeout is reached or the timeout is reached.
List all offline data indexes.
Reads a string from the given input stream into a char array. The input stream is closed
Read data from the input stream to a byte array.
Consume the given number of bytes from the given connection quietly closing the connection and disconnecting
Returns a list of hosts that are up or could be retried. If the list is empty
Sets the type of the places query. If no type is specified then all places will be
Starts the browse operation.
Puts a new value into the cache. If the key already exists it will be overwritten.
Returns the value associated with the given key or null if no value is associated with the key
Waits for all threads to complete. If any of the threads throws an exception it will be
Report a throwable to the log.
Copy the contents of src to target. If the target already exists it will be overwritten.
Initializes the simulator properties from the given file.
Returns the value of the named field of the given class. If the field does not exist
Returns the method with the given name in the given class or null if not found.
Format a value as a percentage of the given base value.
Formats a double to a string with the specified number of characters padded to the specified number of
Formats a long with the specified number of characters padded to the specified number of characters.
Writes a JSON string to the output stream.
Writes an integer to the JSON stream.
Writes a double value to the JSON stream.
Reads the next JSON numeric character from the input stream and returns it as a string.
Reads an integer from the JSON stream.
Reads a double value from the JSON stream. If the next character is not a double then
Reads a JSON string from the input stream and converts it to a base64 encoded string.
Executes the given method on the server. If the server is not running an exception is thrown
Sends a request to the server.
Enqueue a method call to the queue. If the queue is full an exception will be thrown
Gets a resource from the file system.
Updates the guvnor decorator.
Refreshes the repository view of the active workbench window.
i Get the resource history of the active workbench window.
Opens an editor with the given contents.
Reports an authentication failure to the user.
Prompt the user for authentication on the given server.
Create the default page.
Start the animation thread. This method will be called in a new thread. The thread will
Set is keep all alive. If set is already keep all alive set is false.
Sets whether or not the set is to be omit from the tree. If the set is
Set the owner of this element.
Add a new condition factor to the policy. If the factor already exists throw an exception.
Create a term from a tokenizer. The tokenizer must be positioned at the start of the
Returns true if this set matches the given term or false if this set does not match the
Returns a reader for the given dsl. If the dsl does not exist null is returned.
Load the config from the input stream if it exists. If it does not exist throw an
Read the configuration from the given input stream.
Create a new menu with the given parent control.
Adds a response body to the response tree.
Adds a new href to the link. The href is encoded and appended to the end of
Inserts a new href before the given ref. If the ref already exists the new href is
Remove the given href from this element.
Add a new property to the XML document.
Get the href attribute of the first element in the set of matched elements.
Get the status of the element.
Get the stack frame of the current thread. If the current thread is suspended then return the
Checks if class1 is a subtype of class2. If class1 and class2 are
Checks if the given proposal is contained in the given collection of proposals.
Resets the input stream to the beginning of the input stream. If the input stream is a
Create the actions.
Adds a connection to this node.
Returns the value of the specified property.
Removes the given connection from this connection manager.
Sets the location of the marker.
Sets the value of the specified property to the specified value.
Sets the size of the chart.
Dumps the given constraints to a string.
Add a new lock entry to the tree.
Adds the given vertex as a child of this vertex. If the vertex is already a child
Remove a child vertex from the graph.
This method is called when the bundle is started. It sets up the listener which is notified
This method is called when the bundle is stopped. This method is called when the bundle is
Get a string from the resource bundle.
Get the resource bundle. If the resource bundle does not exist this method returns null.
Create a rule builder for colors. This rule is shared by all other rules.
Set the date time to the given date string.
Set the date time according to the given pattern. The pattern will be applied to the date
Create a new error status with the given message and throwable.
Log an error with a throwable.
Adds a field editor to the list of field editors.
Adjusts the grid layout based on the current number of columns and the number of fields.
Apply the font to the field editor.
Calculates the number of columns in the table. The number of columns is the maximum number of
Initializes the field editors.
Fires a property change event to all registered listeners.
Set the active editor. This is called when a new editor is added to the list.
Adds the zoom combo to the given tool bar manager.
Determine the dialect based on the back text. The back text can be either mvel or
Creates a new context with the given user context and locator.
Saves the editor to the output file.
Creates the listeners for the table.
Adds the given value to the given URL. If the URL already exists it will be replaced
Puts the given value into the given URL. Asserts that the URL and value are not
Add a token to the end of the token list.
Adds a child node to this node. If the child already exists it will be returned.
Sets the file offset and length of the buffer.
Adds the given condition to the list of conditions that should be met.
Add a state token condition to the query.
Returns true if this condition matches the given condition or false if there is no such condition.
Get the first child of this element that is a property of this element s type.
Get the status of the element.
Sets the value of the property. The value will be set to true if the property is
Get the last line of text.
Returns the last non dash line in the given text or null if there is no last line
Binds the given id to the given binding.
Creates a new binding with the given id and two bindings. The first binding is the first
Binds the given id to the given bindings. If id is null returns the empty string.
Creates a new process for the given example type.
Create a sample of the given type in the given project with the given example type.
Get the runtime id.
Visits the given rete.
Visits the given node.
Generate a dot - notated identifier for the given object.
Add a new child to the end of the list and remove it from the list.
Add a set of properties to this node.
Creates a new locator with the given resource url and label.
Returns a new presentation for the given viewer. The source viewer must be an instance of the
Returns true if this status is the same as the given status object.
Returns true if this set contains the given condition.
Create a new condition factor from a tokenizer stream. The tokenizer stream must be positioned at
Adds the pages to the editor and the rete viewer. This method is called when the
Sends a DELETE request to the Kie REST API and returns the response as a string.
Sends a POST request to the Kie REST API and returns the response as a string.
Get the status of a job.
Executes the pull operation and stores the results in the results map. If an exception is thrown
Handles the results of a pull operation.
Sets the value at the given index in the json array.
Add a new active lock to the tree.
Removes all proposals that start with the given prefix from the given list of proposals.
Read the prefix backwards from the given offset in the given document. The prefix is read backwards
Calculate the row list for a given root vertex.
Get the edit part for the given element.
Get the image descriptor for the given path. If the descriptor doesn t exist it is created
Declares an image in the registry with the given key and icon file path.
Adds a vertex to the graph at a given depth.
Returns the index of the row that contains the given vertex or - 1 if not found.
Returns the maximum width of the table.
Dumps the vertices of the matrix to the System. err.
Optimize all the rows in the table.
Initialize the graphical viewer.
Draw a new graph on the graphical viewer.
Returns the drools line breakpoint for the given source.
Set the href of the node.
Returns true if the server can talk to the DAV service false otherwise.
Copy all the properties from the source object to the destination object. The destination object will be
Examines the multi status response.
Extract properties from a multi - status response. This method is used to extract properties from a
Get the content of the response.
Returns an enumeration of all active locks.
Returns the status of the named property.
Execute a HEAD request against the DAV service and return the current context of the response.
Acquire a shared or shared lock. This method is used to acquire a shared lock.
Move properties from one location to another. If names is null all properties are kept alive.
Perform a check - in request to the DAV server.
Refreshes the lock with the given token. This method is called when a new lock is
Remove all properties with the given names from the DAV object.
Remove the property with the given qualified name.
Sets the content of the resource.
Sets the properties of the object.
Adds a property to the list of properties to be added to the list of properties to be
Unlocks a previously acquired lock. This method should be called when a lock is released.
Updates the resource with the given version.
Perform a version control request to the DAV service and examine the response.
Delete the resource.
Examines the status code and throws an exception if it is in the range of the
Returns true if the given property has a child with the given name.
Writes the request body to the given output stream. If the request body has not yet been
Convert a byte array to a hex string.
Convert an array of integers to a hex string.
Set is all prop. If set is true set is all prop. If set is false
Set whether or not this element is a prop name. If this element is a prop name
Sets the value of the property.
Strips the last word from the given prefix. If the given prefix is the same as
Update the tree viewer. This method is called when the tree is updated. This method is
Writes the contents of this stream to the given output stream. This method will block until the
This method is called when a debug step is over. It is called when the debug step
Adds the parse errors to the markers list.
Skips white space characters from the current position until the end of the string is reached.
Add a resource to guvnor.
Commit changes to a file in a web dav repository.
Returns the age of the entry. If the entry does not exist it returns - 1.
Returns the content length of the message. If the message is null returns - num.
Get the value of the max forwards property. If the property is null or empty return -
Returns true if the file should be overwritten or false if the file should be ignored.
Returns true if the parameter is a passthrough parameter. If the parameter is a passthrough
Returns the current timeout in seconds or - 1 if no timeout has been set.
Adds a property to the context. If the value is null or empty the property is removed
Sets the timeout in milliseconds. If the value is - num the timeout is set to the
Open a dsl file and return a buffered reader. If the dsl file cannot be opened or
Parse a file into a set of entries. The file is read from a buffered reader.
Get the object metadata from the given text. If the text does not start with the object
Strip the obj metadata from the given text. If the text does not start with str or
Add the given tokens to the given root node. The tokens are added to the root node
Returns the children of the condition with the given text. If the text is longer than the
Get the children of the given object that start with the given string.
Adds a child to the given list.
Prints the tree of the condition tree to the standard output. This is useful for debugging.
Prints a node recursively.
Prints the specified number of tabs to the standard output.
Read a json value from the given text.
Get an image descriptor by id. If the descriptor doesn t exist it will be created.
Invoke the request and return the response. The response will be written to the output stream.
Adds a field to the request header.
Create the launcher file based on the version of the launcher and the version of the launcher.
Create the rule.
Create the rule flow for the given project and monitor. The rule flow creates the project file
Sample launcher. The launcher is created in the same directory as the launcher in the project.
Returns a list of the selected elements.
Creates an image from the current display. The image will be saved to the given output stream
Returns the name of the field in this node s constraint or null if this node s constraint
Returns the evaluator of this node.
Returns the value of the field in this node s constraint or null if the field is not
add guvnor resource properties
Sets the baseline to the given value. If the value is null then the baseline will be
Binds the given member to the given source object.
Gets a member by its name.
Optimizes the set of vertices so that they can be re - added to the graph.
Initialize the controls. This method is called when the dialog has been set up. This method
Checks if the current page is valid. If not it checks if the current page is the
Generate a unique entity tag for the current thread. This tag is unique to the current thread
Returns the opposite of this vertex.
Validate a list of OTPs against the YubiKey.
Check if a user is the right one.
Get the username for the given public id from the given file.
Add a yubikey to a user.
Verifies the given OTP against the given user name and OTP. If the OTP
Clear all the password from the secret list.
Returns the public id of the given OTP. If the OTP is shorter than the
Returns true if the given OTP string is a valid OTP string false otherwise.
Creates an evaluation for the given simple node with the given source.
Create a new evaluation for the given node and source.
Clear the cache of all methods. This is used to clear the cache of all methods.
Returns true if this is a JDK - 15 class. This method will throw an exception
Returns the package name of the given object or null if the object is null.
Returns the package name of the given class or null if the class is not part of the
Returns a unique descriptor for the given object.
Returns the type of the given argument.
Returns true if classes1 and classes2 are more specific than classes1 and classes2.
Returns the value of a property on the target object. If the property does not exist or
Returns a map of property descriptors for the given target class. If the map is not yet
Get a property descriptor from an array of property descriptors with the given name or null if not
Get a read method from a class by its name.
Reads a single character from the input stream. If the input stream is at the end of
The projection is defined as an expression. The projection is defined as a projection of the expression
Select all the values in the expression. The values are the values of the values in the
Returns value as long. If value is null returns num. If value is boolean returns num
Returns the double value of the given value. If the value is a number it will return
Converts the given value to a big integer. If the value is a number it will be
Converts value to a decimal.
Returns the string representation of the given value. If the value is null then ognl
Returns the numeric type of the given value.
Convert the given value to the given type. If the value is not of the given type
Convert value to int. If value is a number it will be converted to int. If
Returns the numeric type of the two given types. If the first type is equal to the
Get the numeric type of the two given objects.
Creates a number of the given type with the given value.
Pops the current evaluation from the stack and returns it. If the current evaluation is the
Generate the ognl getter for the given field node.
Generate the ognl setter.
Flattens the tree into a new array of the same size as the current tree.
Initializes the iterator with the given node source and set operation.
Returns the character at the current position in the image.
Set the root of the OGNL context.
Evaluate an OGNL expression with the given context and return the result as an object.
Set the value of the given expression using the given root object as the root object.
Sets the value of the given node in the given tree to the given value. The value
Returns true if the given expression evaluates to a constant. The expression is evaluated using the given
Get the default watch service id.
Reloads the current application class loader. This method is called when the application class loader is
Get the archiver with the given name. If the name is not found an exception is
Check the archiver for problems.
Reads the contents of the given file as a string. The file is closed after this method
Create an ant project.
Add a system property to the java environment.
Add a system property to the java environment.
Changes the selected directory. If the directory does not exist it will be created. If the
Refreshes the button state. This method is called when the user changes the state of the
Create a file observer for the given path.
Returns the currently selected folder or cancels the chooser if no folder is selected.
Creates a new folder if it doesn t already exist.
Checks if the given file is a directory and can be read and write.
Start a new job in the background. This method is called when a new job is added
Start a list.
End a list. If ordered list is true lists are ordered. If ordered list is false
Handle the motion of the view. This method is called when the view is moved or moved
Returns the rect of the crop area. The crop area is the same as the image.
Computes the layout of the image based on the cropping matrix.
Register a new listener and a new media factory. The listener will be called when a new
Add a span to the text. This is called when the text is added to the span
This method is called when the user clicks on a spinner. It is called when the user
This method is called when the item at the specified position has been changed. It is called
Converts the given text to the given format. The text is converted to the given format.
Indicate that the given text is within a paragraph.
Create a new file in the target folder with the same extension as the original file.
Determines the original file for the given URI.
Returns the namespace of the given name. If the given name starts with the namespace of the
Returns the local name from the given name.
Set the value of an attribute. If the attribute does not exist it will be created.
Sets the value of an attribute. If the attribute does not exist it will be created.
Get the font name from a TTF file.
Returns the font name for the given file. If the file does not exist null is returned
Check if we need to add a new buffer to the end of the buffer list.
Writes a portion of a byte array to the output buffer. The output buffer will be filled
Writes a single byte to the output buffer.
Writes data from the given input stream to this output stream.
Writes the contents of this buffer to the given output stream.
Returns a byte array containing the contents of this buffer. The returned array will be empty if
Sets the font size of the spinner. If the value is less than or equal to the
Converts Windows path separators to Unix path separators.
Recomputes the focus of the highlight view. This method is called when a motion event
Make sure that the highlight view is visible. If the number of highlights is greater than
Center the image based on the highlight view. The image will be zoomed based on the
Resets the document locator to the given publicid systemid and line and column.
Validates the given string against the set of regular expressions and returns the result as a string.
Adds an element type.
Set the value of an attribute of a given element.
Sets the parent of the child element with the given name. If the child element does not
Returns the element type with the given name or null if no such element exists.
Get the entity id for the given entity name.
Removes all paragraphs from the given editor that are not part of the given list of effects.
Applies the given value to the given editor. If the editor is null then the current selection
Checks if the given domain is a valid domain name.
This method is called when an operation is executed on an editor. It is called by the
Redo the last operation in the stack that can be merged with the current one.
Replaces all occurrences of the search string with the replace string in the source string.
m Get or create a thread status object for the given thread. If the status object already
Sets the decoding options for the given thread.
Returns true if the given thread can be decoded.
Decodes a file descriptor into a bitmap. The file descriptor must be closed before calling this method
Returns a sorted set of typeface objects for all fonts in the context.
Returns a map of font name to file path.
Get a map of all the fonts in the system fonts directory.
Sets up the variables that are required by the parser. This method is called automatically by the
Get the reader from the given input source.
Get the input stream for the given publicid and systemid.
This method is called by the SAX parser when a new element is added to the DOM.
Expands the entities in the given source string into a new string of the same length as
Look up an entity in the given buffer. If no entity is found return - 1.
Restart the stack with the given element. If e is null the stack will be re -
Pops the current element off the stack.
Pop an element off the top of the stack. If restart is enabled the element will be
Returns the prefix of the given name. If the given name starts with the prefix of the
Returns true if the given prefix and namespace are the same as the given prefix and namespace.
Trim quotes from the beginning and end of a string if they are present.
Split a string into an array of strings. If the string is empty it will return an
Rectify an element. If the element is not part of the stack the stack will be
Save the state of the toolbar.
Destroys the editor. This method is called when the editor is no longer needed.
on event main thread.
On link event main thread.
Get the base matrix of the bitmap.
Returns the maximum zoom level that can be used to zoom in the image.
Checks if the given editor exists in the current selection. If the editor does not exist it
Find spans2 and remove them from the given paragraph using the given span processor.
Picks a directory from the list of available intents. If the directory is available it
Rotate the bitmap by the given degree.
Sets the output stream. If the writer is null the system. out stream is used.
Writes a character to the output stream throwing an exception if an IO exception occurs.
Writes a string to the output stream throwing an exception if an IO exception occurs.
Returns true if the attribute matches the given value. If the attribute does not exist returns false
Write an HTML - escaped string.
Write a namespace declaration.
Write the name of a node.
Create a stream if it does not exist.
Waits for the stream to be active or until the timeout is reached or until the stream is
complete store snapshot with missing instance snapshots
Wait the minimal duration to execute the next provisioning request.
Get records from the Kinesis stream.
Perform an action retrying if the limit is exceeded or if the provisioned throughput is exceeded.
Try to execute an action on the Amazon EC2 instance. If the action is not available
Checks if a bucket is accessible.
load stores by store name and a function to load the latest transaction id from the store.
Trigger the wildcard expander.
Replaces the old pattern with the new pattern in the input string. If the input string is
Removes any of the specified characters from the input string.
Adds a report to the list of reports to be linted.
Updates the given properties with the given key. The key is the name of the property.
Get the config properties.
Create input stream. If auto detect is true create input stream. If auto detect is false
Creates a new map from the pre processors to the post processors in the given map.
Compiles the given content with the given optional argument and returns the result as a string.
Reloads the cache with a new value.
Reloads the model with a new value.
Creates a new servlet request with the given location. The location will be prepended to the request
Creates a transformer that adds the base name and extension to the input file name.
Called when an error occurs. This method is called when an error occurs in the application.
Sends a redirect to the specified location.
Process a resource. If the resource is a wildcard resource it will be processed. Otherwise it
Create an expander that expands the given resource into the given group and resource.
Locate an input stream for a given URI.
Creates a WRO configuration object.
Register listeners for changes in WRO configuration.
Process the request and set the response headers. This method is called when the request has been
Sets the configuration.
Identify duplicate group names.
Merge the given model with this model.
Locate the given URI in the context of the decorated object or in the context of the
Apply the post processors to the given content.
Decorate a post processor with a before and after callback.
Process the input and output resources.
Split the given string into an array of strings. If the option is null returns an empty
Load properties from the given input stream.
Parse the properties string into a set of properties.
Create a custom wro manager factory.
Save the fingerprints of the resources in the given group.
Checks if the current group is the target group.
Extend the classpath of the mojo with the classpath of the mojo s plugins.
Get model resource as input stream.
Initialize the wro manager factory.
Sets the list of transformers to be applied to the model. The list of transformers will be
Compile the given string with the given name using the precompiled version of the function.
Process the given list of resources and return the result as a string. If the list is
Process a list of resources with the given processing criteria and return the result as a string.
Run a list of resources in parallel with the given processing criteria.
Apply the pre processors to the given resource and return the result as a string.
Decorate a resource pre processor with the given processing criteria.
Persists the string to the fallback storage file. If the fallback storage file does not exist
Get all fields of the given object as a collection of field objects.
Rewrite the given css uri with the given image url. If the given image url is empty
Computes the new image location based on the given css uri and image url.
Add a model transformer to the manager factory.
Serve the processed bundle. This is the main entry point for the wro - servlet.
Initializes the aggregated folder path if it is not already initialized.
Extract the variables from the request body.
Parse the given CSS string and return the resulting string. This method is used to parse the
Replaces all variables in the given CSS string with their corresponding values in the given map.
Decorate a resource pre processor to a resource post processor.
Checks if the resource is eligible for the given resource type. If the requested resource type is
Compresses the response and writes it to the response.
Adds a path pattern processor to the list of path patterns to be included in the URL.
Creates a new path pattern processor that excludes the given patterns from the resulting path pattern processor.
Creates a new resource change handler with the given wro manager factory and log.
Remember a resource in the remembered set. If the resource is already in the remembered
Applies the given function to each css import.
Returns a list with only non - null items in the given collection. If the given collection
Checks if the given request parameter is minimized or not.
Finds all resources that should be imported from the given CSS source.
Compute the absolute url from the given relative resource uri and import url.
Creates a string from the given items.
Get the list of aliases from a comma separated list of tokens.
Create a new context with the given initial scope.
Evaluate the given reader with the given name. The reader is closed after this method returns.
Evaluate the given script and return the result. If the script is null then null is returned
This method is called to process the input stream. It is called when the input stream is
Checks if the request is a handler request. If the request has a cache key it will
Create request path from cache key and servlet request.
Renames the given input stream into the given group and returns the new group name.
Computes the destination folder for the given resource type. If the destination folder does not exist it
Process a group. This method is called when a group is added to the output stream.
Checks if a resource is required for a given group. If the resource is required for a
Locate an input stream for the given URI in the context of the current thread.
Create a new object pool with the given factory.
Locate a stream from the given folder. If the given folder is a JAR file the
Open a jar file.
Extracts the query path from the given URI.
Returns true if the request is minimized or false if the request is not minimized.
Adds one or more uri locators to the list of locators to be used in the
Decorate a wro model factory with a list of transformers.
Adds a require parameter to the list of required parameters. If the number of required parameters is
Process the given content and return the result as a string. If the content is empty the
Log a summary of the results.
Called when a resource is being processed.
Returns a read - write lock for the given key or creates a new one if it doesn
Create a new process from the given source file.
Parse the properties from the given string.
Get the list of tasks to be processed.
Returns the compilation command for the given input.
Parse the header and add it to the header map if it does not already exist.
Adds the pragma cache control and expiration headers to the given map.
Get the path info from the given location. If the location does not start with a path
Returns the servlet path from the given location. The servlet path will be the same as the
Returns true if the given request matches the given path in the given servlet request.
Load regexp with key.
Copy the contents of the reader to the writer closing both the reader and writer even if the
Creates a temporary file with the given extension.
Clean an image URL by replacing all special characters with spaces and trimming the image URL.
Sets the specified attribute to the specified object.
Generates a data uri from the given input stream and file name.
Generate data uri.
Sets the context with the given configuration. If the context already has a configuration it will be
Unregisters the current correlation id and removes it from the context map. If the correlation id
check group by name and type and call callback if group changed. cache key is not null
Called when an exception occurs.
Check if a resource has been changed. If so call the callback with the resource.
Updates the current hash for the given group.
Has resources of a given type.
Create a process for the given source file and destination file.
Parse group.
Creates a group from the given element.
Parse a resource element.
Get all resources for a given group. If the group does not exist a runtime exception is
Stop a timer with the given name todo and thread id. If the timer is not registered
Returns a timer with the given name and todo flags for the current thread.
Get a timer with the given name and todo flags and thread id. If no such timer
Prints the statistics of the saturation application to the given logger. This method is called by the
Wake up all workers.
Updates the processed counters based on a snapshot.
Updates the finished counters with the number of finished jobs and the number of contexts saturated.
Update the counter if the current value is smaller than the given value.
overrides the visitor to log the message if trace is enabled.
Inerts the given property into the taxonomy if it is not already in the taxonomy.
Makes sure that the input loading is complete. If the input loading is not complete the input
Restores the saturation of the current stage. This method is called when the saturation of the
Returns true if the current state of the model is inconsistent with the current state of the model
Restore the taxonomy to its original state. This method should only be called from the constructor.
Restore an instance of the taxonomy. This method should be called after the taxonomy has been restored
Returns a proof of Inferences for the given conclusion. If at most one inconsistency
This method is called before the task is executed. This method is called before the task is
Recursively invalidate this reasoner and all of its sub - stages.
Returns the collection of individuals to add to the index.
Returns the set of individuals to remove from the index.
Create an unsupported operation exception with a message for the given owl API method.
Removes the element at the given position from the given array.
Removes the element at the given position from the list of k and v at the given position
Returns the position of the first occurrence of del in the given array of elements.
Returns true if the given object is in the given array false otherwise.
Adds an element to the end of the array if it is not already there.
Throws an exception if the occurrence number is out of bounds.
Adds a conclusion timer to this timer.
Adds a timer to the set of timers. The timer is added to the set of timers
Put a value into the keys and values array. If the key already exists it will be
Remove an entry from the probing table if it exists.
Enlarges the hash table by enlarging the keys and values arrays.
Shrink the hash table to a new number of keys and values. If the table is full
Save a configuration file to disk.
Prints the declarations of the given class taxonomy to the given writer. The declarations are printed in
Returns a set of all instance nodes reachable from the given taxonomy node.
Removes all elements from the hash table.
Combines a list of hashes into a single hash value.
Copy data from the input stream to the output stream.
Returns a reasoner that monitors the incompleteness of the current axiom. The reason
Process a taxonomy object and write it to the given appendable.
Submits an input to the queue. If the queue is full the input will be buffered
Append an object to the given appendable. If the object is a boolean the object will be
Mark the query as not computed.
Add a direct type node.
Check if the full chain matches the given property expression at the given position in the chain.
Creates a set that maps the elements of the input set to the results of applying the funct
Adds the element e to the logarithm of the logarithm of the logarithm of the
Removes an object from the set. Returns true if the object was removed false otherwise.
Adds a class conclusion counter to this conclusion counter.
Log the memory usage of the given logger at the given priority. If the logger is not
Sets the configuration options for this reasoner instance. This method is called when the reasoner
This method is called when the server shuts down. If the server shuts down the
Prints the header of the log message.
Prints the given values to the log.
Returns a string of the specified length with the specified character. The returned string is n characters
Adds a new rule to the set.
Writes a resource object to the given xhtml writer.
Returns the input parameter with the given name. If no input parameter with the given name exists
Get property descriptor for given property path and property type.
Returns a map of all required parameters in the request.
Returns true if the given class is a single value type ; otherwise returns false.
Adds a relationship to the link.
Sets the media type of the link. If the media type is null the link type is
Add an hreflang to the link.
Adds a revision to the link.
Adds a link parameter with the given name and values.
Expands the URI template with the given arguments and returns a new affordance object.
Returns a list of all of the relationships that have been set on this link.
Returns a list of the revisions of this link.
Returns true if any of the required variables are not satisfied by any of the action descriptors.
Returns the value of the field as a string. If the field is null returns null.
Checks if a property is hidden.
Returns true if the input annotation contains a property with a value that should be included in the
Returns true if the property has an explicit or implicit property include value false otherwise.
Returns true if the request parameter or request header are required. If the request body or request
Returns the default value of the request. If the request parameter or the request header are not
Returns the name of the request parameter or the name of the method parameter if it is not
Get the property name from the parameter annotation or the parameter name if no annotation is present.
Returns the vocabulary for the given bean.
Returns the query string. If the query string is longer than the number of characters in the
Append the form name and HTTP method to the affordance.
Output an input button with the given type and value.
Append input or select to the list of possible values. If the number of possible values is
Adds the given affordance builder to the current affordance.
Returns the URI template components as a list of URI template components.
Returns the uri template components for the given action descriptors without any optional variables.
get first node by name
get first node by rel
Returns an iterator over the nodes in the tree. The iterator will return - 1 if there
Creates a persistent hash map using the specified equality operator.
Creates a persistent tree map from an iterable of entries.
Creates a new empty tree map with the given comparator.
Returns a sorted set of the entries in this map. The keys are the keys of the
Returns the key of the last element in the list.
Folds an iterable into a single value. The result is stored in ident and returned.
Drops the first element of this stream that satisfies the given predicate.
Folds the result into a single value using the given reducer. If the reducer is null
Creates a new tuple2 from the given map entry.
Matches the current selection with the given functions. If the selection is equal to the current number
Register a list of classes. If the list is already registered it is returned. If the
Returns the element with the given index or null if the index is out of bounds.
Append an element to the end of the vector.
Concatenates the given items into a vector and returns a new vector.
Returns a mutable set containing the given items. If items is null returns an empty set.
Returns a mutable list containing the items in the given array.
Returns a persistent hash set with the given items.
Returns an immutable list containing the specified items.
Create an iterable from an array of items. The items are converted to a list of items
Returns a builder that indents the given number of spaces up to the specified number of spaces
Converts an array of items to a string array.
Creates a lazy ref from a producer function.
This method is called when an exception is thrown. It is called when an exception is thrown
Inserts an item into an array at a given index.
Creates a copy of an array of t. The length of the array will be equal to
Suspends the current thread if the current thread is not running. If the current thread
This method is called before the async operation. It is called before the async operation is initiated
Build a list of service components for the given service descriptor file and deployable unit jar.
Checks that the given directory exists and that it is a directory and that it can be read
Creates a link between the concrete and the super class.
Copy the declared methods from the source class to the destination class. The destination class will be
Creates a copy of the given methods to the given destination class. The destination class must have
Remove sbb entity with current class loader.
Returns whether or not notifications are enabled for the given parameter. If the parameter is not enabled
Returns a set of RA entities referenced by the given service component. The returned set is
Installs a new service.
Uninstalls a service.
Checks if a resource is a resource adaptor entity.
Returns the set of usage parameter sets for the specified resource.
Resets all usage parameters to their default values.
Display the result of the operation.
Unfolds an array of objects into an array of objects with the given prefix.
Execute an event on an activity. This method is called when an activity is ending or an
Binds an object to the given name. If the name already exists an exception is thrown.
Unbinds an object from its name.
Lookup the object with the given name in the cache.
Get the bindings of the current node.
Returns the next SBB entity that should be handled by the given SBB event.
Returns true if this level is higher than the other level.
Extract a jar file to a destination directory.
Copy data from the input stream to the output stream. The input stream is closed after this
Adds an object to the map. If the key already exists the old value is returned.
Attach a sbb entity to this node.
Detach the given sbb entity from this node. If no such node exists nothing happens.
Returns true if there are no sbb entities attached to this node.
Returns the set of sbb entities attached to this node.
Attach a timer to the timer list. If the timer already exists it will be replaced.
Detaches a timer from the timer list.
Returns true if there are no timers attached.
Returns the set of timers attached to this node.
Adds the given name to the list of names bound to this node.
Unbinds a named property.
Returns true if there are no names bound to this node.
Returns a copy of the names bound to this node.
Sets the value of an attribute. If the attribute does not exist it will be created.
Get the value of an attribute.
Returns a copy of this node s attributes. The returned map is a copy of this node
Initialize the notification info.
sends a usage notification to all registered listeners.
Download a remote file from the given URL to the given file deployment root.
Update the list of deployed components. This method is called when the list of deployed components changes
Installs a deployable unit.
Uninstalls a deployable unit.
Process the undeploy operation for the given deployable unit. This method should only be called
Show the status of the application.
Checks if a record is loggable. If the record has a throwable it will be logged
Get the logger associated with the given log record. If no logger is associated with the given
Returns a set of all the sbb entities in the tree.
Get the permissions from the current policy.
Returns a string containing all the code sources that have been added to the current policy.
Check if a profile with the given name exists in the profile table.
Removes the profile table from the database.
Updates the configuration properties. If the component supports active reconfiguration this method will throw an exception
This method is called when the slee is in a running state. This method is called
This method is called when the slee is in the stopping state. This method is called
Activates the state machine. This method will throw an exception if the state machine is not
Deactivates the resource. This method must be called when the resource is in the stopping
Schedule all activities to be completed. This method should be called after all activities have completed.
Remove the notification from the context. This method is called when the notification is removed from the
Returns the resource adaptor interface for the given component type.
Called when a service is active. This method is called when a new service is active.
Dereference an activity handle from an activity handle.
Called when an activity has ended. This method is called when an activity has ended.
Update the ra configuration with the given properties. If the properties do not match the current configuration
Verify that the new config properties are valid and throw an exception if they are not.
informs the resource adapter that the resource adapter is in the stopping state.
Informs the resource adapter that the resource adapter is in an inactive state. If the resource
This method is called when the resource adapter is in an inactive state. This method is called
Unsets the context of the resource adaptor. If the state is unconfigured this method
Set fault tolerant resource adaptor context.
Build a hash map of profile attribute names to their corresponding profile attribute implementation.
Resumes the execution of the task. This method is called when the task is resumed
Replies the set of activity context handles associated with this node.
Get the usage of a parameter set. If the parameter set does not exist an exception is
decorate abstract class
Fire an event for the given sbb entity id event object and ACI address.
Fires an event to the congestion control. If the congestion control is
m get profile table name get profile table name get profile table name get profile table name get
Gets the abstract methods from the given class.
Returns a map of methods from the given interface. If the given map contains only the methods
Create a new object pool with the given profile table and transaction manager. If a transaction manager
Remove the object pool for the given profile table. The object pool will be removed from the
Checks if the source of the alarm is the same as the source of the alarm.
Raise an alarm with the given type instance id and message and cause. If the alarm is
Get the installed usage parameter set with the given name.
Gets the slee event type descriptor.
Returns true if the given deployable unit accepts the given url and unit name.
Initialize a new deployable unit with the given url and unit name. This method is called
Start a new deployable unit with the given url and unit name.
stop a deployable unit and add it to the list of undeployed units.
Show the status of the deployment. This is the status of all the units and components.
Execute after commit actions.
Execute after commit actions.
Execute the after rollback actions.
Execute the before commit actions.
Execute before commit priority actions.
Get the names of all the registered tracers. If no tracers are defined an empty
Creates a new tracer with the given name. If the tracer already exists it will be replaced
Remove the replicated data from the state machine.
Process a component with a usage parameters interface. If the component has a usage parameters interface the
Get the object pool with the given service and id.
Create a new object pool with the given service id and component. If a transaction manager is
Executes an activity with the given handle. If an exception is thrown the transaction will be suspended
Start an activity with the given handle. If the handle already exists it will be replaced.
Ends an activity with the given handle.
Checks the preconditions for a fire event.
Fires an event. This method is called when an event is received from an activity.
generate sbb local object
Make the getter for the bean field.
Convert a primitive field to an object. This method is used to convert a primitive field to
Sets the name and table of the profile. The name must be the same as the table
Extract the message from the result.
Returns true if the given object is a child of the current node.
Returns true if all elements in the collection are contained in this set.
Removes all elements in the collection from the set. If the collection does not contain any elements
Returns true if this level is higher than or equal to the given level.
Resolve the object to be read at the current level. If the current level is the same
Remove all class paths from the class pool and detach all classes from the class pool.
Add a profile call to the current transaction.
Get a profile object. If the profile object does not exist it will be created.
Passivate object on transaction end. If object is ready then passivate it on transaction end
Sets the value of the field to the given text. If the text is null or equals
Generate an activity context interface.
Generate concrete methods from a map of methods.
Set the value of an attribute in the context.
Adds a name binding to the cache.
Remove the bindings from the ACI.
Removes an ACI binding from the cache.
Attaches a timer to the cache. If the timer already exists it will be replaced.
Remove the timer from the slee container. This method is called when the slee container
Attach a sbb entity to the activity context.
Detach the sbb entity with the given id from the cache. If the sbb entity
Get the set of sbb entities that are attached to this node. The set is sorted
Mark the activity as ended.
Add a component to the list of components to be deployed. This method is called by the
Returns a collection of the external dependencies of this module. This collection is not guaranteed to be
Returns true if the dependency graph has at least one dependency and false if it s not.
Returns true if there are any duplicates in the set.
Returns a collection of install actions.
u Returns the actions that should be performed when the application is being removed from the system.
Returns true if there is a DU reference. This method is used to determine if there
Close an object in the slee container. If the object does not exist it is created
Get the object name for the given profile table and profile name.
Write mode. If profile is not writeable log it. If debug mode is enabled log the
This method is called before the field is set. This method is called before the field is
Suspend transaction after set cmp field. This method is called after set cmp field.
Method to be called before the cmp field is set or before the non - set field.
Method called after get cmp field.
This method is called before the management method invocation. This method is called before the method invocation
This method is called after a non - set cmp method invocation. This method is called after
Delete a file or directory.
Creates a default constructor for the concrete class. The default constructor is a no - argument constructor
Create the default usage parameter getter.
Creates the getter and setter methods for the sbb entity.
Create fire event methods.
Creates the method to add to the concrete activity context interface. The method is added to the
Add a query expression to the list of query expressions to be added.
Binds the target object to the specified key.
Rebinds the given target object to the given name. The target object must be a
Decorate the sbb abstract.
Invoke the given method on the given concrete proxy with the given arguments and return void type.
Returns the real field name for the given field name or null if the field name is not
Set the value of a field in the activity s data object. The field name must be
Returns the value of the field with the given name. If the field does not exist it
Initialize a new profile. If the profile name is null the name of the profile is used
Unsets the current profile context. If the current state is the same as the current state
get profile local object.
Fire add or updated event if needed.
Creates a slee wrapper object.
Creates a new class with the given name and interfaces.
Creates a link between the concrete and the super class of the given class name.
Adds the member values to the annotation.
Get the activity context interface for the given activity handle.
Get the class pool. If the pool has not been initialized this method will create a new
Set this component s deployable unit. If the component already has a deployable unit this
Called when the application is undeployed. This method is called when the application is no
Executes an activity with the given handle. If the transaction is suspended the context will be suspended
Checks if the given interface is a subclass of the given class or interface with the given name
Returns a map of all methods of the given class and all super interfaces that are not in
Checks if the given tracer name matches the given notification source.
Returns a collection of profiles that match the given query name and arguments. If the query is
Create a temporary file for a deployable unit.
Get the entity manager for the current transaction.
This method is called when the state machine is starting up. This method is called when the
Switch the given class loader to the given profile object. If the profile is privileged the
Make a proxy call with a privileged action. This method is intended to be used by
Check if the current transaction is the same as the current one. If not throw an exception
Get the TTL from the last access time and the timeout in milliseconds.
Returns true if the profile class is visible on the current thread. If the profile class is
get profile object valid in current transaction
Get the names of the loggers that match the given regular expression.
Resets the logger levels to the default level.
Clears all loggers with the given name.
Add a logger to the management console.
Remove a handler from a logger.
Append tracer name and notification source to log4 j.
Sync the log level with the log4j logger. This method is intended to be used
Assign the log4j level to the log4j level.
Resets the cache flags to false if the level is not traceable. If the level is
Send a trace notification with the given level message and throwable. If the level is not trace
Checks if the given tracer name is the same as the given tracer name.
Writes an object to the given output stream using the given vendor data.
Reads an object from the given input stream. If the input stream does not contain a class
Add a direct dependency.
Returns a list of all the URLs that are dependencies of this resource. If the resource is
Finds a class in the classpath. If the class is not found throws an exception.
Locally find the resource with the given name in the context of the current request.
Find all resources in the classpath that match the given name.
Create and register a profile m.
Resume a transaction. If the transaction is already resumed the transaction will be resumed.
Returns the root sbb in the given repository. The root sbb is the root of
get all resource adaptor entity links for all components in the component repository
Initialize the slee state. This method will throw an exception if the slee state is
Shuts down the SLEE.
Validate the transition between the old state and the new state and throw an exception if the transition
Generate a named usage parameter getter.
Adds an update argument to the query. The field name will be prefixed with the field name
Creates a new jdbc instance.
Adds a value argument to the query.
Runs the given wrapper in a transaction.
Create a new region request from a string.
Returns the relative region of this rectangle.
Returns the value of the field on the given deserialization context. This method is called when the
Sets the list of viewing hints.
Adds a viewing hint to this resource.
Sets the list of renderings that should be applied to this content. This method will verify
Add rendering to this resource.
Merge list of profiles into a single profile.
Create a rotation request from a string.
Create a size request from a string.
Initializes the connection to the ADB server. This method should be called by subclasses to initialize
Get the XML dump of the current state of the device.
Execute the adb pop box on the given device brand. If the device brand contains the
Handle gps2 device.
Clean up the temporary file.
Pull a dump of the device to a temporary file.
Get the crash log file.
Detabifies the text in the editor by tabping each line in the text with the
Indents the text by the given number of spaces.
Tokenize the text into HTML tags and nested tags.
Renders the given string using the text editor. If the given string is null the given string
escape special chars within tag attributes
Adds an exception to the queue. If the queue is full the exception is added to the
Closes the cache and closes all statements in the cache. This method is not thread - safe
Find the fully qualified name of the parent of the given element.
Writes the class to the specified filer.
Writes a divider to the stream. The divider will be written as the first bit followed by
Append a bit vector to a bit vector. The bit vector must have the same length as
Read data from the given input stream.
Get a list of objects with the given path key and expected class from the given filters.
Set the klov extent report.
Add a screen capture to the current step.
Set system info.
Create a selector that selects the specified property.
Creates a selector that transforms the value of the property into the value of the property with the
Extract validation annotation data from an array of annotations.
Extract all annotations for a given property.
Finds the annotations for the given property. If the property is not found an empty array is
get the property descriptor for the given type and property name.
Creates a new instance of the given class from the given map of strings to objects.
Creates a complex type from a map of properties to objects of the given class.
Creates a map from the given object and the given strings to ignore.
Map the given object to a collection of objects ignoring the given set of strings.
get the values of the given annotation as a hash map of method names to their values.
Create a new composite validator with the given validation meta data. The list of validation meta data
lookup the list of validators and initialize them with the validation meta data properties.
Looks up a validator in the application context.
Apply validation meta data properties to validator.
Remove a property if it is blank. If it is a string remove it. If it
Sets the current time to the given time and sets the approx time to the current time.
Returns the number of elements in the cache.
Returns the hash code of the given object.
Opens the database. If the database already exists it will be re - opened. If the
Puts all the values in the specified map into the database. If the size of the map
Removes all of the given keys from the cache.
Searches for the given key in the database and returns an iterable of the keys and values.
Load all entries for the given keys from the database. If the keys are null or empty
Closes the database and flushes any pending changes and closes the underlying database. If an exception
Reduces an array of doubles by an object. The object must be an anonymous class.
Reduces an array of doubles to a double.
Calculate the variance of a set of values.
Calculate the mean of a range of long values.
Invoke a method from an object with a boolean argument.
Reduce an array of floats using the given reduce function.
Converts a timestamp in UTC to Euro - style string.
Returns true if the given object matches the given criteria.
Creates a criterion that tests if the field value is not contained in the given values.
Creates a criteria from a list of objects. The first object in the list will be the
Create a criteria object from a JSON string.
Adds an array of numbers to the end of the array.
Returns the maximum element in the array or null if the array is empty.
Returns a slice of the given list with the first count elements sorted according to the given sorts
Returns the last item in the list or null if the list is empty.
Returns the last N elements of the list.
Returns a slice of the given list with the least count elements. If the given list is
Returns the minimum item in the list or null if the list is empty.
Returns the minimum element in the array or null if the array is empty.
Process array of maps.
Handle collection of maps.
Create a new instance from the given map. The map must contain the class name of the
Get the value associated with the given key. If no value is associated with the given key
Create a tool tip with the given name space field name and bundle.
Add a hex sequence to the end of the sequence.
Process the write queue. This is the main loop of the write processor. This is the
Creates a thread pool and schedules the write queue. The thread will be started at fixed rate
Returns a copy of the string that contains the specified character at the specified index in the specified
Returns a slice of the specified string starting at the specified index.
Returns true if any of the characters in the array is contained in the string.
Adds the specified character to the end of the string and returns the new string.
Creates a new string from the given objects. The objects are added to the end of the
Returns a copy of the given string with all characters compacted. This method does not copy
Split a string into an array of strings. The returned array will have the same length as
Splits a string by spaces and returns an array of strings where each element in the array is
Split a string by a pipe.
from char array of array to string array
Converts a string to camel case. If upper is true the string will be converted to upper
Returns true if the given string is inside of the given range of characters.
Returns a copy of the input string with the characters under bar case replaced.
Returns the string representation of the given count. If the count is a double or decimal it
Creates a new sort with the given parameters. The first argument is the main sort. The
Sorts the given list according to the given fields. The list will be sorted according to the
Returns the comparator for this field. The comparator is the universal comparator for this field and its
Returns a list of comparators that can be used to sort the given fields.
Returns true if the given value is contained in the given map.
Checks if the given int is equal to the given int. If not an exception is thrown
Checks if two int arrays are equal or throw an exception if they are not.
Returns the sum of the given values starting at the given index and ending at the given index
Rounds the given number up to the nearest power of 2. If the given number is
Sorts the given list according to the given sorting criteria and ascending or descending order of the list
Sorts a list of objects according to the given sort criteria. If the list is null or
Set field value from map.
Converts the given object to a list of objects.
Create the SQL to load all version data.
Returns a deep copy of the given list.
Checks if the given object has a string field with the given name.
Checks if the given class has a string field with the given name.
Returns true if the given class has a field with the given name.
Returns the first comparable or primitive field from the given class or null if no such field exists
Get the sortable field from the given object.
Compares this cache entry with the given entry.
Compares the time of the given cache entry with the time of the given cache entry.
Sorts the given list according to the given sorts.
Sorts a list of objects according to the given sort criteria. If the list is null or
Sorts the entries of the given map in ascending or ascending order according to the given sort criteria
Sorts the values of the given map in ascending or ascending order according to the given sort criteria
Sorts the keys of the given map in ascending or ascending order according to the given sort criteria
Sorts an array of objects according to the given sort criteria. If the sort criteria is null
Returns a comparator for the given field using the given ascending and null values as the sorting.
Returns a comparator that compares two objects according to the given values. If the values are null
Returns the value associated with the given key or null if there is no value associated with the
Returns the value associated with the given key or null if there is no value associated with the
If the size of the cache is greater than the number of entries in the cache evict the
Initializes the range with the given value. If the value is not already initialized it will be
Allocate a buffer with the specified size.
Check if we should exit. If not print the message and return true. Otherwise return false
Manages the input writer channel.
Check if the queue is empty and if so flush it to disk if it s too long
Start the monitoring thread.
This method is called at the beginning of the event loop. It is called at the beginning
Returns the object associated with the given key. If no object is associated with the given key
main query plan.
Do the filtering of the given group. The results are added to the given result set.
Tick the timer with the given time. If the time is greater than the file timeout then
Syncs the output stream to disk. If the output stream is dirty the output stream will
Clean up the output stream if it is open.
Write the next buffer to the output stream. This method will block until the next buffer is
Write a buffer to the output stream. If the output stream is null then the buffer is
Initialize the output stream. This is called when a new log file is opened.
Puts all of the values in the given map into the cache.
Converts the given key to a byte array. If the key is already in the cache it
Reads the meta data for the given property from the properties file. The meta data will be
Extract meta data from string.
Returns the list of validator meta data for the given property. If the property does not exist
Extract the validator meta data from the given list of validator meta data. If the list is
Extract meta data from annotations.
convert annotation data to validator meta data
Splits the given string into an array of strings using the given split character and limit.
Splits the given string by white space characters and returns an array of the resulting strings.
Splits a string by a string of characters using the specified delimiters. The result is an array
Returns a copy of the string with all the characters removed from the given delimiters.
Splits a string into an array of strings where each character in the array is not empty.
Parse a double value from a buffer.
Parse an int from a string.
Parse a long value from the given buffer starting at position from and ending at position to.
Gets the value of a property in an object using a path. If the property is a
Get the fields from the given object. If the object is a map it will be returned
Returns the type of the given property of the given root object.
Injects the given value into the given object at the given property path in the given object
Sets the value at the given path in the given class. The path must be an array
Recursive method to get the values from a collection or an array of arrays.
Returns the value of the specified property of the specified object. If the property does not exist
Gets the int value of one or more properties of an object.
Initialize the message. This method is called when the message is created.
Create a message with the given key and arguments.
Create a validation error message with the given message and actual arguments.
Returns an array with the keys as keys and the values as values for the given keys.
Returns the current subject. If the current subject is not set the current subject is returned.
Parses a JSON string into an object.
Sends an HTTP request to the server.
Deletes the database with the given name.
Creates a database with the given name.
Returns a list of UUIDs for the specified number of times.
Triggers the replication operation and returns the result as a replication result. If the operation is successful
Get the value of the query as an object of the given class.
Specify whether the view should be descending or not. By default the view will be descending.
Synchronize all the design documents with the database.
Gets the design document with the given id from the database.
Get all the design documents from the Desk directory.
Get the design document with the given id.
Saves the replicator document to the database. If the replicator already exists it will be
Finds a document in the database with the given id and revision.
Returns a list of all replicator documents in the database that start with the given string.
Remove the document from the replicator.
Finds an object of the given type with the given id with the given query parameters.
Find all documents in the database that match the given JSON query. The returned documents will be
Checks if a document exists in the database. If the document does not exist it returns false
Bulk insert or update a list of objects. If new edits is true the objects will be
Sends a PUT request to the given URI with the given object. If the object is new
Sends a PUT request to the given URI with the given input stream and content type.
Sends a POST request to the given URI with the given JSON body.
Make a DELETE request to the given URI and return the response. Closes the response when
Validates the status code of the response. If the status code is the same as the status
Sets the entity to be sent to the client.
Adds an attachment to the message.
Queries the server for changes.
Read the next row from the stream. If the stream is exhausted terminate the stream.
Converts the given money value to the corresponding string representation.
Shuts down the lock manager. This method blocks until all locks have been released.
Writes the contents of an observable stream to the servlet output stream.
Add tags to a metric.
Verify and create temp tables. This method blocks until all tables have been created. This method
Get the project id for the given namespace.
Checks if the request method is a query. If it is it is the method of the
Sends the authentication request to the client.
Gets the HTTP verb from the exchange.
Generate a subject access review for the given verb and resource.
On request result release the pooled connection back to the pool. If allowed is true the connection
Called when a client request fails.
Initializes the partition. This method is called when the partition is first created and the partition is
Returns a list of jobs scheduled for the given time slice. The list will be sorted by
Converts a point map to a list of buckets using a bi function to create a list of
End the given http server exchange with the given status code and reason phrase.
Returns an observable sequence of rows from a bucket. The returned observable sequence contains all the rows
Creates a new buckets from start to end with the given step.
Send a message to RabbitMQ.
Sends a message to the broker in one way. If an exception occurs the message is logged
Send a message with a delay time.
Perform a scan on the database. This method does not return a result. The result is
Adds a file to the zip archive. If the file does not exist it will be created
Replace the given text in the zip file with the given file name. If preserve is true
Build the zip file.
Generates metrics for the given component and product. The metrics are stored in the given data buffer
Fetch the content with the given id. This method is deprecated and will be removed in the
Download the content for the given order item.
Upload a zip file to an export.
Generates metrics for the given iterator of components using the file supplier and the buffer generator.
Creates a new file in the given directory. If the directory does not exist it will be
Adds the object to the end of the tree.
Register a model adaptor for the given type in the given model group. The adaptor will be
Register a renderer for the given type and attribute.
Create a template with the given prototype and domain object and content info.
Add a domain object to the assembler. If the assembler needs to start a new
Set a property to the given value.
Adds a child object to the given collection. If the collection does not exist it will be
Creates a supplier that creates a new file in the given directory with the given prefix and suffix
Copies the contents of the input stream to the output stream using the given hash assembler.
Parse a file into a document.
Parse an XML document from the given reader. The reader is closed after this method returns.
Returns stream of all elements in given parent.
Returns a stream of nodes in the given parent element.
Returns the first child element of the given parent element with the given child names.
Returns a stream of elements whose name is one of the given child names.
Validate the given XML document against the given schema using the given human - friendly document type.
Entry point for the file archiver.
Creates a builder from the given input stream. The input stream is converted to UTF - 8
Create a new content builder from a resource.
Process a single entry in the zip file.
Encodes the given string using the given character encoding. The character encoding is the same as the
Set the signature for the request.
Remove white space from the given char array. If the array is null return the number of
Signs the request with the call back. If the call back is not null sets the
Sets the data for the given key in the recorder. The data is stored in JSON format
Called when a multipart upload is complete.
Add or remove the notification from the list of favorite notices for the given request.
Add the notification state for the given entry id.
Returns true if the cache has expired or false if the cache has expired within the timeout.
Get a notification by id.
Get a list of addressees for the given id.
Returns the addressee with the given id. If the addressee is not found
Get all events for a notification identified by its id.
Get an event by its id.
Get the rest of a single notification. This method is used to get a single notification from
Returns the entry with the given id. If the id is greater than the number of entries
Get the authentication token. If the token has expired or force update is true the token will
Returns the total number of notifications in the collection.
Adds new notification categories to the list.
Fetch a notification from the SSP preferences.
Create a notification response with an error message.
Map the notification response to the request and response. The request and response are expected to be
Creates a notification entry from the given index in the database. If the index points to a
Attaches the notification actions to the notification entry.
Normalizes a link to a URL. If the link starts with a SSP then the link
Gets the notification category from the portlet preferences.
Returns the notification source from the request. If no source is set the default source is returned
This method is invoked when a request is received from the client. This method is invoked when
Read a notification from a file. If the file does not exist it will be created.
Gets the school id from the portlet request.
Extract the user id from the response.
Invoke the notification. This method is called when the notification is about to be invoked.
Returns the notification attributes as a hash map. The keys are the attribute names and the values
Normalizes a vector so that its x y and z components are the same.
Returns true if the two rectangles are contained within their bounds.
Returns the point closest to the given point.
Returns the sign of the vector.
Sets the s - component of the vector to the given s - component of the given s
Sets this rotation matrix to a rotation matrix of the specified type. The rotation matrix will be
Converts the input vector to the output vector. The output vector must have the same size.
Converts the input quadrilateral into the output quadrilateral.
Calculates the bounding box of a quadrilateral and a d rectangle.
Calculates the bounding box of a polygon.
Computes the center of a quadrilateral.
Computes the average of the vertexes in the input matrix.
Computes a convex hull from a list of points. The convex hull is a monotone
Removes all vertices in the given polygon that are parallel to the given tolerance.
Calculates the average error of the closest point in the target vector.
Compute the area of the intersection between two points.
Returns true if the given point is inside the quadrilateral.
Returns true if the given point is inside of the triangle of the given rectangle.
Computes the intersection between two points.
Returns the intersection of two lines.
Computes the intersection of two lines and returns the result as a vector.
Computes the intersection between two points l and target. If the target is on the line l
Computes the intersection between two sets of points.
Returns true if the given ellipse contains the given point.
Calculate the area of the intersection between two points.
r Returns the value at the given index in the matrix. If the index is greater than
Converts a rotation matrix to a quaternion f64. If the argument is null a new quaternion
Creates a rotation matrix with the given angle and rotation matrix and returns the result.
Sets the rotation matrix to the x - axis of the rotation matrix.
Rotate the rotation around the y - axis and return the result.
Rotates a 3x3 vector with angle ang to a rotation matrix r.
Sets the rotation matrix to a rotation matrix with the z - axis.
Converts a 3x3 rotation matrix to a 3x3 rotation matrix.
Creates a rotation matrix about the given axis with the given angle and rotation about the given axis
Sets the angle of the slope.
Calculate the twist coordinate from the motion and the twist coordinate.
Sets the rotation and magnitude from the initial to the end of the rotation matrix.
Interpolate this vector into the output vector. The output vector must be in the form of
Computes the SVD of a set of points. The points are assumed to be in the
Solves a point on a plane.
Returns the length of the side at the given index.
Returns true if the point p is inside this point. If the point is convex it is
Convert a conic general f64 into a double r.
Convert the src conic general f64 into the dst conic general f64.
Convert the src conic to a parabola. If the dst argument is null
Convert a parabola conic general f64 into a conic general f64
Divide p by v and stores the result in p.
Converts a matrix into a new matrix.
r - > d out = in. x out. y = in. y out.
Sets the parameter vector of this quaternion. The vector is normalized to the unit axis.
Returns the distance between two angles in radians.
Returns true if the two lines intersect with the given line. If the line does not intersect
Returns true if the plane is contained within the output plane.
Returns true if the line intersects with the sphere false otherwise.
Interpolate two spherical harmonics into a single spherical harmonic.
Extract the quaternion from a simple matrix q.
Computes the convex hull for the given input and length. The input is assumed to be in
Sets the motion to no motion. The motion is set to the identity of the surface surface
Returns the homogeneous component of a 3 - dimensional vector. The homogeneous component
Returns the homogeneous coordinates of a sphere. The homogeneous coordinates are in the
Creates a 3 - by - 3 transformation matrix that rotates around the given axis.
Returns true if a and b are identical within tolerance t and r < = tolerance r.
Converts a latitude and longitude to a unit vector.
Returns true if the specified rectangle is a circle of the specified rectangle.
Returns the square root of a circle.
Returns the closest point on the line segment l0 to l1. If ret is null
Finds the point on the line closest to the given point.
Finds the point on the plane that is closest to the given plane. If found is null
Returns the closest point on the line to the point pt. If ret is null a new
Returns the closest point to the given triangle.
Transform the sine and cosine values into the result. The result will be null if the
Transform a set of points using the Sine and cosine transformations.
Returns true if this quadrilateral is equal to the given quadrilater
Calculate the acute angle between two points.
Convert a point to a point in the direction of the source. If the target is null
Convert a vector to a vector.
Convert a vector into a vector. The vector is assumed to have the same length as the
Convert src to ret and return ret. src is assumed to be of type double.
converts two vectors into a vector and stores it in a d. If ret is null
Convert a vector to a vector with a slope and a point b. If ret is null
Convert a slope to a distance and angle. If the distance is less than num the angle
Converts a point into a vector. The vector is assumed to be in the same direction as
Convert a d object into a d object with the same slope values as the src object.
Converts the input vector into the output vector. If the output vector is null a new vector
Converts the input data to the output data. If the output data is null a new object
Convert a plane from se3. f64 to world.
Point 2 - D to 3 - D.
Converts a plane to a world plane.
Returns true if this matrix is identical to the given matrix otherwise returns false.
Returns a copy of this matrix.
Returns the square root of the matrix.
Compute the t - value of a point on a line. The t - value is the
Returns true if the element is uncountable.
Returns true if this parabola is equivalent to the given parabola.
Returns the center of the vector.
Calculate the acute angle between two lines.
Returns true if the vector p is infinite.
Generate a list of n random points from a center point and a standard deviation of stdev
Returns the Hermitian Euclidean distance between p and e. p must be a
Subtracts two vectors and returns the result as a new vector.
Returns true if the two points are identical within a specified tolerance.
Sets this rectangle to be the same as the supplied rectangle.
Converts a rotated ellipse into a quadratic.
Computes the point on the surface of an ellipse rotated around a point on the surface of an
Computes the angle in radians between a point and an ellipse. The angle is the angle in
Computes the tangent angle of an ellipse rotated around a given point. The tangent angle
Selects the tangent distance between two points. If cross is true the tangent distance is
Get the corner at the given index.
Returns the Euclidean distance between the points l0 and l1.
Returns the Euclidean distance between two points l and p.
Returns the distance between two points l and p.
Calculates the distance between a plane and a point.
Returns the distance between the given cylinder and the given point.
Returns the Euclidean distance between two segments.
Returns the squared Euclidean distance between two segments.
Computes the Euclidean distance between a point and a quadrilateral.
Returns the square root of the quadrilateral segment p.
Returns the Euclidean distance between the given polygon and the given point.
Computes the squared Euclidean distance between a point and a polygon.
Returns the distance to the origin of a line.
Returns the Euclidean distance between the specified ellipse and the specified point.
Returns the 2 - dimensional distance between an ellipse and a point p.
Adds a transform to the path.
Finds the closest point on the line to the given point.
Finds the closest point to a rotated ellipse and returns the angle of the point closest to the
Performs a polynomial curve on the data starting at the offset and ending at the offset + length
Creates a vector with random values between min and max.
Returns a perpendicular perpendicular object. If output is null a new
Returns true if a and b are identical within a given tolerance.
Normalizes a vector so that its x y and z are 1. 0 and 1. 0
Creates a new matrix with the given values.
Convert a matrix to a vector.
Returns the Euclidean distance between this vector and the given point.
Sets the ellipse that will be used to calculate the rotation angle and the rotation angle of the
Normalizes this quaternion so that it has the same magnitude as the one in which it was originally
Calculate the distance between two points.
Computes the quadrilateral distance of a quadrilateral.
Calculates the simple value of a polygon.
Computes the mean of a list of points.
Returns a list of the points in the CCW order. The points are sorted by the
Computes the normal of a set of points. The points are assumed to be in the space
Returns true if the polynomial is convex.
Multiply this vector by a scalar.
Returns the maximum absolute value of x y and w.
Computes the Euclidean distance between two points.
Returns the squared Euclidean distance between the given points.
Generate a list of random points from a plane.
Generates a list of random points with the given mean and size.
Generate a list of random numbers with the given mean and standard deviation.
Computes the mean of a list of points.
Computes the mean of a list of points. The mean is calculated by summing the x
Invalidates all of the given credentials from the cache.
Invalidates all entries that match the given predicate.
Combines a collection of strings into a set of strings. The result is a set of
Get the features of the server.
Get the features of the dropins folder. The result set will be set to orig.
Get the server xml features from the server. xml file.
parse include node
Parse the feature manager node and return a set of feature names.
Download the artifact from the json file. If the plugin execution fails log the error and return
Get the open liberty feature set from a set of JSON files.
Returns true if there is only open liberty features in the given list of features to install
Returns true if the target collection contains all elements in the reference collection but not in the target
Get the next product version from the given version string.
Extract the symbolic name from the given jar file.
get map based install kernel jar
Checks if file1 is a replacement jar file file2 is a replacement jar file file1
Extract the version from the given file name.
Compares two version strings and returns a negative number if they are equal or + 1 if they
Executes the given action on the given install directory and returns the result as a string.
Checks if an artifact is a spring boot uber jar.
Get arquillian property.
Checks if the given file is working in the current environment.
Move back to the center of the line.
Returns true if s1 and s2 are equal. If s1 and s2 are
Load an integer from a string or return the default value if the string cannot be parsed.
Throw pizza party tortoise.
Verify the turtle.
Returns a copy of this puzzle with the blank cells swapped to the given target.
Returns the distance between the goal and all cells in the partition. The goal is the number
Print a formatted string using the default locale.
Print a formatted string in the given locale with the given arguments. The output is flushed.
Make a new fish with the given number of fishes.
Write a variable to the System. out. The variable will be written to the System.
Returns a uniformly distributed random number between a and b. If a and b are not
Uniformly uniformly distributed random number between a and b.
Check that lambda is a poisson number and that it is not infinite.
Returns the number of discrete elements in the array. If the array is not discrete throws an
Capitalizes the first character of the given string.
Converts the first character of the given string to upper case and returns the new string.
Add str to the end of path if it doesn t already end with it.
Creates a string representation of the given join criteria.
Generate a token sentence.
This method is called when the user is logged in and the user is not logged in.
Extract auth token from cookie list.
Register all guice bindings in the given injector with the given jersey environment.
Get all role permissions including the parent role.
Adds a projection to the list. The alias will be added to the end of the list
Convert job info to job detail.
Convert a trigger to a trigger for a given job.
Set the repeat count and interval values from the given trigger info to the given trigger builder.
Set the start and end time from the trigger info to the trigger builder.
Send an item to the queue. If the queue is full the item is added to the
Writes the response to the given output stream.
Initializes the scheduler with the given properties.
Returns a list of all fields of the given class sorted by field name.
Returns a map of all the fields of the given class.
Configures the encryptor with the given configuration. The pool size will be set to the configured
Generate an attribute hash from the given attributes map.
Generate a new token.
Sends a message to a single recipient.
Generates a strong password for the given user and old password. If the old password is null
Returns the user with the given account name or null if no user with the given account name
Hashes the given password with the given account name and returns the result as a string.
Verify that the given account name is valid. This method will throw an exception if the account
Commit the current transaction if the current transaction is in the same status as the current transaction.
Rolls back the current transaction if it is in error state.
Starts the transaction. If the transaction is successful this method will be called. If the transaction
Returns true if the user is authorized to access this resource.
Parse a date from the given object using the given field.
Get the response for this error.
Creates a new restriction that checks if the given value is equal to the given value.
Creates a new restriction that checks if the given value is not equal to the given value.
Creates an less than restriction.
Creates a less than restriction that checks if the given object is less than the given value.
Creates a new greater than restriction with the given name and value.
Creates a new greater than restriction with the given name and value.
Creates a restriction that indicates that the value of the property is greater than or equal to the
Creates a new in restriction with the given name and value.
Creates a new namespace manager with the given namespace and href. If the namespace already exists the
Returns a copy of this resource with the given content.
Creates a new resource representation with the given relationship.
Returns a copy of this resource with a new value.
Creates a new resource representation with the given namespace and href.
Returns true if the given byte array can be decoded and false otherwise.
Encodes a substring of a string into a byte array.
Returns true if in1 and in2 are equal. If in1 and in2 are
Move file from src to dst.
Create a new file and set its last modified time. If the file does not exist it
Get the base name of the given file.
Add padding to the end of the buffer.
Returns the short name of the given class.
Returns the set of all super types of the given class including interfaces and super interfaces.
Verifies the given password against the given hash. The hash must be the same length as the
Read a string from the system input stream using the given character set.
Appends a byte to the end of the buffer.
Append a byte array to the end of the buffer.
Creates a copy of the given array.
Returns a new fraction that is the sum of this and the given fraction.
Returns a new fraction that is the difference of this and the given fraction.
Returns a new fraction that is the product of this and the given fraction.
Returns a new fraction that is the result of the division of this fraction by the given fraction
Returns the maximum of the given values.
Returns the minimum of the given numbers.
Throws an illegal argument exception if the condition is false. If the condition is true the exception
Fetch the forecast data from the meteo server.
Fetch sunrise data.
Fetch sunrise data.
Find hourly point forecasts from the current date time ahead with the given number of hours.
Finds the nearest forecast to the given date time.
Fetch the content of a forecast query.
create meteo extras long term forecast create simple forcast forcast for all days
create long term forecast
Creates a location object from a string representation of a latitude longitude altitude and a string representation of
Fetch the content from the meteo server and parse it into the available data object.
Create a wind symbol from a point forecast.
Find the beaufort level associated with the given forecast.
Create a new uri from a string. If the string is null throws a meteo exception
Returns true if the given time is the sun of the given time. If the time is
Returns the forecast for the given date time or an empty optional if no forecast exists for the
Returns the best fit period for the given time range. If the range is null returns an
Fetch the content for the given coordinates.
Fetch content from the meteo service.
Update the database with the data from the full connection string and the username and password.
Invoke a string method on the given thiz object with the given name and arguments.
Acquires an object from the given data source. If the object is not available a new
Create a new reference to an object of the given class and reference string.
Create a new referenced object with the given class and object. The object will be wrapped in
Get a configuration object from the service path.
Returns whether or not the substitutor is enabled in the given bootstrap configuration.
Create an iterator for the given service and service name. The service name is the name of
Gets the decoder for the given configuration.
Returns a list of all the services of the given interface.
Get a module from a module name.
Acquires an input stream from the given data source. If the data source is null a
Returns the size of the data in the given data source. If the data source is null
Creates a new referenced data object with the given ref and data.
Returns the component at the given index.
Returns the prefix of this name with the given index.
Returns true if the current token is colored according to the current compiler settings.
Execute a regular expression with the given pattern and data. The data is expected to be in
Find a loop in the C - finding state of a given DFA and store it in
Create a subset of the current match.
Returns true if t is a cbrdissect or false if t is not a c
Clones the outchains of the old state to the new one.
Recurse through the tree t until it finds a non - null subre.
Mark a subre as in use and all of its descendent subre s left and
Computes the n - node index for the given subre.
Parse a sub - tree.
Walks the tree starting from state s to the left end state s. If leftend
Add a non - word arc to the NFA and colorcomplement the wordchrs
Clones the word chrs in the state machine in the direction specified by the input direction
Returns the scannum of the next digit in the input. If there are too many
brackets must be preceded by a bracket or the end of the string. The bracket is
Scan a plain string.
Add a new lacon to the lacons list if the number of lacons is equal
Handle one character.
dovec - dovec - dovec - dovec - dovec - dovec -
Get a color from the color map.
Returns a pseudo - color of the current color. The pseudo - color of the current color
Process a subrange of from to to. The subrange will be processed in the same
Check if all the colors are ok.
Set the colorchain of an arc.
Unlinks an arc from its color chain to its original color chain.
Dumps all the colors in the color table to the console. This is useful for debugging.
The lexical start of the input stream. This is the start of the input stream.
Starts a lexical traversal of the input string. The input string will be interpolated with the
Returns the color of the given code point or throws a runtime exception if the code point is
Initialize the state machine with the given start index.
Returns the last cold number of noprogress states in the state set.
Returns a set of characters that are equivalent to the given character. If the case parameter is
Returns the unicode set with the given name. If casefold is true the unicode set will
sorts the arcs by the color of the first and the target of the last car.
Creates a new state with the given flag.
Move all outgoing states from old to new state.
Move all instructions from old to new state.
Copy all instructions from old to new state.
Copy all outchains from old to new state.
Drops a state and all of it s arcs and frees all of its resources.
Removes a state from the list of states and slasts. If the state is the
Add an arc from the current state to the given state.
Duplicatetraverse s to stmp. If stmp is null a new state is created
Creates the special colors for the current color. This is done by copying the pseudocol
Dumps the NFA to the console.
Dump the state s to the debug log.
dumps the first num lines of input to a string builder. The number of lines is
dumps an arc to a string builder and returns the position of the last arc in the
Optimize the string and return the number of times it was optimized.
Analyzes the state of the chain and returns the number of leaves in the chain.
Combines an arc with another arc and returns the length of the combined arc.
Removes all states that are reachable from pre and that are reachable from post and that are reachable
Mark the state s as reachable if it is okay and all its outchains are reachable.
Mark the state s so that it can reach the given mark. The state s must be
Fixes any empty arcs that are not empty. This is done in a loop so that
Removes an empty arc from the current state. If the current state is empty the arc is
Get the rule parameters from the properties file.
Get the interpreter plugins from the repository. If the repository cannot be determined an exception is thrown
Get the report plugins from the plugin repository. If the repository cannot be found an exception is
Returns a rule selection for the given rule set. The rule selection is a copy of the
Run the CLI with the given command line arguments. The command line will be parsed from the
Gets the error message from the given exception.
Gathers standard options.
gather task options from a task factory and add them to the given options.
Gathers all the task names from the given task factory and returns them as a string.
Interprets the given command line and creates a list of tasks and executes them.
Get the command line from the given command line arguments and options.
Executes the given task with the given options and command line. If an exception is thrown the
Read properties from a file or the main class if no file is specified.
Prints the usage message and the list of tasks to the standard out.
Get the home directory from the environment variable. If not found log a warning and return null
Create plugin class loader.
Returns a set of all ids contained within the given bounding box. The returned set will be
Returns a set of all ids that intersect the given bounding box.
Returns the URI for the given HTTP method target and parameters. If no method is given the
Adds a route to the router.
Returns the number of routes in the chain.
Adds a route to the first route in the chain.
Adds a new route to the router.
Adds a route to the last route in the chain.
Returns true if any of the route matches the given request tokens. If none of the routes
Returns a criterion that tests if the given property is equal to the given value.
Get the store file name.
Compares two folders.
Compares two entries.
Compare two bookmark entries.
Sets the servlet class last modified time.
Returns a list of the names of the dependencies of this jsp source.
Finds a class by its name. If the class is not found an exception is thrown.
Parse the authorization header from the servlet request.
Get a new instance of the mapper.
Map a function to a controller method.
Get the mapper for the given function name and arguments. The method name is the name of
Resolve a function by prefix and local name. If no function is found the method is returned
Sets the values of this string.
Resolves a variable in the current page context. If the variable cannot be resolved an exception is
Parse a jasper file and return a list of nodes.
Parse the given file and return the nodes of the resulting nodes. If the file is not
Parse tag file directives.
Creates a new JSP compiler instance.
Get a resource as a stream.
Calculates the last modification timestamp for all channels in the system.
find all class loaders in the current context and return them as a list of class loaders.
Check if this class loader is a parent of the given classloader.
Start loading a class or a resource. If the class or a resource has already been loaded
Read the stream header from the input stream.
Paginates the given data set with the given page size and the given full data set.
Create a meta key from a string.
Fills the list of requirements for the RPM. This is done by adding the RPM
Get the tag file info for the given tag name. If the tag name is not found
Parse an implicit TLD from the given path in the given JSP compilation context.
Returns the checksum for the given file name and algorithm. If the algorithm is not supported null
Returns the size of the given file or throws an exception if there is no such file.
Validates the channel name.
Seeks to the specified block. If the block number is out of range throws an exception
Locates the block at the given position in the uncompressed block.
Get a list of Maven artifacts from a collection of artifact information. If the collection is empty
Updates the state of the current option and the number of occurrences of the previous option.
Calculate the prices for a single byte. This is used to calculate the price for a single
Calculate the prices for a single rep.
Calculate the price for a normal match. This is used to calculate the price for a normal
Throws an exception if the expected byte is not found.
Throw an exception for invalid UTF - 8 characters.
Scan the TLDs and create a hash map for each one.
Scan the TLD for the given resource path entry name and input stream.
Adds a servlet wrapper to the list of servlets for a given URI.
Get the parent class loader.
Sets the bytecode for the given name. If the bytecode is null it is removed from the
Returns the birth time for the given name. If the name does not exist it returns the
Save the bytecode of the given class to the given file.
Check if all servlets have been compiled. If so check if the servlet is a file
Initialize the class path based on the servlet classpath.
Start a new thread. This method should be called at the beginning of a new thread.
Stops the current thread and waits for it to finish. If the current thread is interrupted the
This method is called when the application is started. This method is called when the application is
Finds a channel by its name.
Finds a channel by name. If the channel is not found an exception will be thrown.
Update the deploy group cache.
Copy the contents of the input stream to the output stream.
Parses a JSP file and returns a tree of nodes. The parser will start at the
parse the attributes from the jsp reader.
Adds the include attributes to the given parent node with the given list of file names.
Parse the jsp attribute and body.
Adds an attribute to the document.
Adds a node as a child of this node. The node is added to the end of
Returns an iterator over the attributes of this node.
Returns an iterator over the children of this node. If children is null returns an empty iterator
Finds all children with the given name.
Returns a copy of this coordinates with no classifier and extension set. If classifier and extension are
Find an alias for the given variable name. If no alias is found return the variable name
Creates a new print stream for the current thread. This is a thread - safe operation.
Unsets the thread s output buffer and returns the result as a string.
Returns the current print stream or the wrapped print stream if none is currently active.
Write an optional field to a string writer.
Writes a string value to a writer field.
Create a new element and append it to the parent element.
Create and insert a new element before the given parent element with the given name.
Writes the next character to the given writer.
Sets the writer to be used to write output to. If the writer is null then the
Re - allocates the buffer to hold the specified number of characters. If the buffer is
Maps a page to a data source and a data source set. The data source and the
Returns the state with the same key as the given parent or null if there is no such
Registers a new model with the given priority and key. The model will be started with the
Create a stream for the given key. The key will be used as the key in the
Monitor a job and return a model and view that can be used to view the job.
Checks if the request is authenticated or not.
Finishes writing the XML document and closes the output stream.
Creates a new gson instance with the given pretty printing option. If pretty is set to true
Returns true if LZM encoding is enabled. Otherwise returns false.
Returns the union of the provided meta data and the extracted meta data.
Returns the throwable associated with the servlet or jsp exception.
Returns the checksum extension of the given coordinates or null if it is not a checksum extension.
Finishes the compression process. This method must be called after all data has been written to
Gets the exception associated with this request. The exception is returned by the JSP runtime.
Evaluates the given expression with the given expected type using the given page context and function mapper.
Get the prefix from the osgi properties. If the property is not present return null.
Checks if a file is an XML file.
parse tag file directives and return tag info.
Load a tag file and wrap it with a JSP servlet. If the tag file is
Removes all generated proto files with the given name. If no name is given all generated files
Sets the root path of the URI.
Scan the files in the given directory and add them to the list of files to be scanned
Locates the root of the given file. If the given file is a directory the root
Move to the next number in the chain. If there are no more numbers in the chain
Returns true if the given string matches the number of characters in the current position.
Checks if the given string matches any optional spaces followed by the given string. If the string
Skip characters until the limit string is reached or the end of the input string is reached.
skip characters until the end of the input string or the end of the input string is reached
skip until the first occurrence of the given tag or the end of the string is reached.
Parse the next token from the input stream and return it as a string. If the input
Pop a file from the file stack.
Returns a copy of this coordinates with the unclassified version. If the classifier is null
Filters a list of aspect information based on a predicate.
Get the list of factory ids that are required to create this aspect.
set schema resource prefix
Set the DTD resource prefix. If the prefix is null the default prefix is used.
Convert the given node into a new node with the given parent node as its parent.
Merge all errors from the given binding result into the given binding result.
Initialize the given binder.
Scan the bundle for aspect information.
Unqualifies the given path by replacing str with num and removing the last index of str
Invoke a custom tag handler.
Returns a byte array of the specified size filled with zeros if necessary. If the array is
Returns an array of the specified size filled with zeros if necessary.
Creates a new aether result from a collection of artifact results and a configuration.
Get the resource as a stream.
Validate this tag against the given page data. If the tag library is not available return null
Pushes a stream of characters to the stream queue. The stream will be pushed to the
Get the encoding of a JSP file. This method is intended to be called from the
Reports a fatal error to the error handler.
Get the real path for a given path. If the path does not start with the protocol
Get the resource at the given path. If the path does not start with str an exception
Get resource as stream.
Get the paths of the given resource. If the resource does not exist it will be created
Logs the given message and throwable to the log. The stack trace will be printed to the
Adds a new filter to the list of filters that will be applied to the given class.
Returns the buffer size to use for the given dictionary size extra size before and extra size after
Returns the memory usage in bytes for a given dictionary.
Set the preset dictionary to be written. The size of the dictionary must be equal to the
Moves the window to the current position.
Fills the window with the contents of the given byte array. This method does nothing if the
Process the pending bytes in the buffer.
Returns the number of bytes that would match the specified range of bytes.
Returns the number of bytes in the buffer that match up to and including the specified number of
Verify that the given matches are available and have the same length as the current available length.
Moves the cursor to the next available position in the buffer and returns the number of bytes that
Recycle the buffer. This is called when the buffer has been flushed or closed.
Flushes the buffer to the underlying output stream.
Clear the output buffer.
Flushes the output buffer to the underlying output stream. The output stream will not be flushed
Closes the connection.
Writes a string to the output stream. If the buffer size is equal to the number of
Throw a JASPER exception with the given error report and exception.
Make a key from the given meta data.
generates the class from the servlet context and the jasper compiler options.
Compile the given class into a JASPER file. If the file does not exist it
Initialize the java compiler.
Check if a jar is in the webinf. If it s in the webinf then
Returns a string with the given character quoted.
Generate the page declarations.
Compiles a list of tag handler pools into a list of tag handler pools.
Generate the XML prolog.
Generate common postamble.
Generate the postamble of a page.
Generate the jasper page.
Generate the tag handler attributes if the tag has dynamic attributes. If the tag has no dynamic
Read properties from the given input stream.
Export a channel to the given output stream.
Validate the given XML view using the tag libraries in the compiler. If any tag library fails
Returns the next tag in the stack.
Parse an expression string and return a list of el. nodes representing the parsed expression.
If the previous property group is null return the current property group otherwise return the previous property group
Checks if the specified URI is a jsp page. If the URI is not a jsp page
Prints a comment with the given start and stop marks. If the start and stop marks are
Prints a string in the current indentation level.
Prints a string in the current line with the given indentation level.
Print a multi - line string to the output stream.
Get the expression in XML.
Checks that the given scope is not null and that the given string is not the same as
Escapes a string for use in an XML document.
Validate a list of JASPER expressions. The expressions must be a list of JAS
Get tag handler class name.
Creates a java package from the given path. The path can contain multiple class names separated by
Splits a path into an array of strings where each string is a substring of the given pattern
Makes a java identifier from a string.
Mangles the given character into a string of the same length as the given character.
Checks if the given string is a java keyword.
Adds the given property to the given map if the given value is not null.
Returns a string representation of the given modifier with the given prefix appended to it if necessary.
Returns the metadata for the given namespace and key. If no namespace or key are specified then
Run the task. This method is executed in a background thread. It is expected that the
Returns the basename of the given name or null if the given name is null or empty.
Put a value into the cache. If the key already exists it will be overwritten. If
Load data from the database and store it in the cache. If the data is not found
Builds a collection of metrics from an aggregated payload.
Resolve a number to a long or double. If the number is lazily parsed it will be
Writes an object to a coded output stream. The object is written as a raw byte followed
Gets the TTL for the given rollup type granularity and rollup type.
Create the prepared statements.
Logs the delayed metrics for the given tenant.
This method is called when a metric is being aggregated for a given tenant. This method is
Reads a double or long from the input stream.
Writes a double or long to the coded output stream.
Returns a map of all the properties in the configuration.
Creates a new container in the store.
Schedule eligible slots for the given max age millis and rollup delay for metrics with short delay
Clear a coarser slot from the running state.
Adds a listener to the specified event.
Registers a listener that will be called only once for the specified event.
Remove an event listener from the emitter.
Emits the given event with the given arguments. If the event does not exist it will
Returns a list of listeners for the given event.
Returns the name of the remote machine.
Append a rollup event to the output stream.
Parse the timestamp from the file name.
Starts the server.
Get the rollup type for a given rollup type and granularity. The rollup type
Creates a new instance of the io class based on the configuration.
Put a value into the TTL map. If the value is greater than or equal to the
Computes the maximum number of characters that can be used to output the given headers and the number
Format an array of headers into a string with the given maximum number of characters per line.
Formats the input according to the given output. The output will be used to format the input
Register the metrics for the Zookeeper class.
Creates a new thread pool builder with the given name.
Adds a new metric to the set.
Returns the complete set of metric names from the given metric index map.
Gets the tokens from the metric name and tenant id. If the metric name is empty or
This method is used to put a value into a collection asynchronously. This method is intended to
Returns a granularity from points less than equal to the requested duration. If the requested duration is
Set the server time in milliseconds.
Returns a set of hosts that are unique in the cluster. This is a list of hosts
Get the maximum number of connections per host for a given number of hosts.
Returns an iterable of all the metric column families in the metric table.
Insert a collection of metrics into the metric store. The metrics will be sorted according to the
Insert the given metrics into the database using the given granularity. This method is intended to be
Returns a set of all locators for the given rollup execution context. This method is
Grab the current regex and the next level of the search.
Starts the file uploader thread. The thread is started in a new thread. The thread is
Stops the file uploader thread.
Returns true if the given locator is currently in a batch layer.
Returns true if the given locator is currently in the discovery layer false otherwise.
Returns true if the given locator is currently in the token discovery layer false otherwise.
Returns true if the given locator is already in the given slot or false if it is not
Sets a delayed locator for the given slot.
Returns a hash map that iterates over all intervals in the specified range. The returned map will
Returns an iterable over the ranges in the given interval.
Insert a full set of metrics into the keyspace. The full set of metrics can be delayed
Insert a set of metrics into a column family.
Returns true if the given metric is delayed due to exceeding the maximum age allowed.
Gets the bound statement for the given metric. If the metric is delayed the bound statement is
Gets the metadata values for the given key.
Returns true if the content type is set in the given HTTP headers otherwise returns false.
Check if the accept header is valid.
This method is called when a batch of objects is added to the index. This method is
Checks if the number of elements in the array is greater than the number of elements in the
Check if there are any unexpected errors and terminate the process if there are too many errors.
Creates a new instance of the extractor. If the configuration specifies a cached download the extractor will
Returns true if the given os name and version are the same as the given os name and
Starts the download and extraction process. The download and extraction process will be run in the background
Shuts down the Rabbit Mq process. This method should be called when the
Creates a default signaling params.
Add all ICE servers to the list of ICE servers associated with this peer.
Adds a new ice server to the list of ice servers associated with this peer.
Transmit a message to a user.
Transmit a message to all peers in the cluster.
Gets the value of the weitere adresse property.
Gets the value of the user defined property.
Gets the value of the user defined property.
Sets the value of the api suchfelder property.
Gets the value of the multimedia anhang property.
Returns the status of this object.
Returns the status of this object.
Get the status of this type.
Diese Methode d importieren. Diese Methode d
Gets the value of the adressdruck property.
Gets the value of the waehrung property.
Gets the value of the bodenbelag property.
Sets the value of the region property.
Sets the value of the area property.
Sets the value of the address property.
Sets the value of the description property. The default value is an empty string.
Sets the value of the rent collection period property.
Sets the value of the furnished property.
Sets the value of the phone1 property.
Sets the value of the phone2 property.
Sets the value of the contact name property.
Sets the value of the phone info property.
Sets the main email address.
Sets the value of the cc property.
Sets the value of the external id property.
Sets the value of the agent id property.
Sets the value of the energiepass. epart property.
Sets the value of the jahrgang property.
Sets the value of the gebaeudeart property.
Sets the buero type.
Checks if the given string is a numeric value.
Sets the value of the gebiete property.
Sets the value of the gruppe property.
Sets the value of the agent property.
Gets the value of the property property property.
Sets the status of the verkufstatus.
Gets the value of the user defined property.
Sets the value of the zeiteinheit property.
Gets the value of the zimmer property.
Gets the value of the haus property.
Gets the value of the buero property.
Gets the value of the gastgewerbe property.
Gets the value of the land und forstwirtschaft property.
Gets the value of the sonstige property.
Gets the value of the zinshaus renditeobjekt property.
Gets the value of the terrain property.
Sets the uebertragung umfang.
Sets the value of the wohnungtyp property.
Returns the ISO 2166 - 1 country code for the given country or null if it is
Returns the ISO 3166 - 1 country code for the given ISO 3166 - 1 code
Returns the ISO 3166 - 1 country code for the given country.
Returns the ISO 3166 - 1 country code for the given ISO 2166 - 1 country
Get the country name for the given country and language. Returns null if the country is not
Translate the given country to the given language. If the given country is not a valid country
Gets the value of the anbieter property.
Sets the value of the category property.
Gets the value of the pdf property.
Sets the value of the aktionart property.
Sets the value of the realestateitems property.
Sets the value of the pacht property.
Upgrade from a previous version of immo to a new version of immo 2. 7
Gets the value of the content property.
Returns the names of the fields in this struct.
Sets the value of the blick property.
Sets the value of the pauschalmiete property.
Sets the value of the monatsmiete property.
Gets the value of the parkplatz property.
Sets the value of the lastenaufzug property.
Sets the value of the zustand. art property.
Gets the value of the feld property.
Dump the record to the given writer using the given line separator.
Returns the value at the given position or the default value if there is no value at that
Returns a list of strings from the current record in the form of a list of strings.
Sets the value at the given position. If the value is null removes the value at the
Sets the value of the check. ctype property.
Sets the value of the haus. haustyp property.
Gets the value of the energiepass property.
Sets the keller.
Sets the grundstueck. grundst typ.
Sets the value of the geschl attribute.
Sets the value of the hallen field.
Gets the value of the wiederholungstermin property.
Gets the value of the teilungsversteigerung property.
Upgrade from a previous version of immo to a new version of immo 2. 3
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art property.
Sets the uebertragung modus.
Gets the value of the email sonstige property.
Gets the value of the telsonstige property.
Sets the handel type.
Sets the value of the jaxb property suchfeld1.
Sets the value of the suchfeld2 property.
Sets the value of the suchfeld3 property.
Gets the value of the row property.
Sets the value of the distanz zu sport property.
Gets the value of the anhang property.
Gets the value of the objekt kategorie2 property.
Gets the objekt zustand.
Gets the haus kategorie.
Gets the value of the ausstattungsqualitaet property.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Diese Methode der Wert. Diese Methode wird
Sets the value of the ackerland property.
Sets the value of the bauerwartungsland property.
Sets the value of the bootsstaende property.
Sets the buero.
Method called to set the value of the camping property.
Sets the value of the doppelhaus property.
Method to set the einfamilienhaus value.
Sets the value of the einzelhandel property.
Sets the value of the einzelhandel klein property.
Sets the value of the garagen property.
Sets the value of the garten property.
Sets the value of the gastronomie property.
Sets the value of the gewerbe property.
Sets the value of the hotel property.
Sets the value of the industrie property.
Sets the keine bebauung.
Sets the value of the kleingewerbe property.
Sets the value of the lager property. If set to null the property will be set
Method called to set the value of the mehrfamilienhaus property.
Sets the value of the obstpflanzung property.
Sets the value of the parkhaus property.
Sets the produktion value.
Sets the value of the reihenhaus property.
Sets the value of the stellplaetze property.
Sets the value of the villa property.
Sets the value of the wald property.
Sets the value of the anbieter property.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the list of hallen lager elements.
Gets the value of the parken property.
Gets the value of the freizeitimmobilie gewerblich
Gets the value of the objektart property.
Gets the value of the stellplatzart property.
Sets the value of the max property.
Gets the value of the feature property.
Sets the value of the zimmertyp property.
Upgrade from previous version 2. 5 to new version 2. 5.
Sets the value of the keine angabe property.
Sets the value of the erdwaerme property.
Sets the value of the solarheizung property.
Sets the value of the pelletheizung property.
Sets the gas value.
Sets the value of the OEL property.
Sets the value of the fernwaerme property.
Sets the value of the strom property.
Sets the value of the kohle property.
Generates a random string of the given length.
Generates a random string of the given length with only letters.
Generates a random string of the given length that is a sequence of numbers of the given length
Gets the value of the wohnung kategorie property.
Sets the value of the benutzer property.
Sets the value of the objekte property.
Gets the value of the feed property.
Sets the value of the moeb property.
Gets the value of the serviceleistungen property.
Sets the value of the sub - administrative area property.
Sets the value of the city property.
Sets the value of the locality property.
Downgrade to the previous version of the immo.
Upgrade from a previous version of immo to a new version of immo 2. 1
Sets the value of the landType property.
Gets the field meta data.
Upgrades a document from a previous version to a new version of immo 2. 0
Gets the value of the ad property.
Sets the value of the gastgew property.
Sets the value of the platzart property.
Liefert die Daten verkabelung. Diese Methode
Gets the value of the klimaanlage property.
Gets the value of the image property.
Sets the value of the price type property.
Sets the new development availability.
Sets the value of the directions property.
Sets the value of the co2 property.
Sets the energy rating.
Sets the value of the viewing details property.
Sets the property status.
Sets the value of the pictures property.
Method to set the value of the bebaubar attribute.
Upgrades an immo document from a previous version to a new version 2. 4.
Sets the parken type.
Sets the value of the alter attribute.
Sets the value of the freizeit property.
Sets the value of the telefonart property.
Sets the value of the emailart property.
Method to set the value of the overseas property.
Sets the value of the overseas attribute.
Create a simple field node.
Gets the value of the fehler property.
Sets the value of the erbpacht property.
Gets the value of the stp property.
Gets the value list.
Liefert ein neuen Min die Mietdauer. Diese
Sets the value of the zins field.
Gets the value of the photo property.
Sets the feed metadata.
Sets the value of the projects property.
Sets the feed properties.
Upgrade a Kyero document from a previous version of Kyero.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the value of the sonstige. sonstige. typ property.
Sets the value of the distanz zu property.
Gets the value of the distanzen property.
Gets the value of the distanzen sport property.
Checks if throwable is compatible with throws clause.
Sets the namespace bindings.
Binds a prefix to a namespace URI.
Remove a namespace binding.
Returns true if the current token is an opening tag and false if it is not.
Consumes the comment tokens from the given line and returns the original line if any.
Consumes a line of text from the beginning of a comment or the end of the line
Returns the index of the given token in the given line or - 1 if the token is
Initialize logging for the given location. If the location ends with. xml file the logging will
Start a namespace mapping with the given prefix and URI.
Adds an iterator to the list. If the list already contains an iterator this method will throw
Adds a new option to the list of options.
Add a string option to the command line.
Add an integer option to the command line.
Add an option with the specified form and long value.
Add a double option to the command line.
Adds an option to the command line with the specified form and long form.
Parses the given command - line arguments using the given locale. If the command - line argument
Creates a new instance of the given class. The class must be a subclass of the class
This method is called after a resource access. It is called after the resource access has been
Sets the target object. If the target object is null the class of the target object is
Prepares the target class and method for the method invocation. If the target class is not found
Find the matching method.
Convert an unsigned integer to a string.
Serialize an object to a byte array.
Deserialize an object from a byte array.
Returns the first child element with the given tag name or null if no such child exists.
Returns the text value of the first child element with the given tag name. If no child
Returns a list of all the child elements of the given element.
Returns true if the given node name matches the given local name or the local name matches.
Returns true if the node s local or node name matches the given set of names.
Set the length of a string. If the string is longer than the specified length print it
Monitor the release of an object. This method is used to log the release of an object
Adds an entry to the list of entries to be released. This method is thread - safe
Keeps the monitoring thread alive if there are tracked entries. If there are no tracked entries
Calculates the mobile city from the given mobile number.
Add a prefix mapping to the content handler. If the namespace is not the same as the
End the mapping of the given prefix.
Adds a callback to the list of callbacks that will be called when the future is completed.
Parse the jar file and return a tree of unique entries.
Returns the text color of the given item.
Sets the values of the column. This method is called when the column is set to null
Returns the selected color for the given scroll position. The selected color is determined by the proportion
Sets the text size.
Returns the x position in the array. If the x position is out of bounds it will
Gets the intro from the remote library.
Returns the names of the keywords in the library. The names are ordered by the number of
Get the arguments for the given keyword. If no arguments are found an empty array is returned
Returns the documentation for the given keyword. If the keyword does not exist in the library the
Entry point for the remote server.
Stop the server. If the timeout is greater than the number of milliseconds the server will be
Start the server and wait for it to be ready to accept incoming requests.
Convert properties from file to json.
Convert properties from file to json.
Convert the input stream to JSON and return the result as a string. If the input stream
Convert a properties object to a JSON string.
Converts a map of properties to a JSON string.
Converts a map of properties to a prettified JSON string.
Convert from values as string.
Convert properties to json string.
Returns the radius of a shadow in pixels. If the shadow has padding the radius will be
Creates a builder for the ocsp fetcher.
Find the intermediate certificate for the given certificate. If no intermediate certificate is found an exception is
Execute the mojo. If the mojo throws an exception the mojo will be re
Preprocess markdown files.
Substitute variables in the given template using the given pattern string and the given map of variables
Get the title from a list of lines.
Add the title to the html file. If the title is null the html file is returned
Replaces the variables in the given content with the new content in the given map.
Update relative paths in html string.
Copy files from one directory to another.
Check if the given path contains the given string. If it does return the original path.
Wrap the slider s content in a child view.
Fade up the animation by the specified duration. The animation will fade up after the specified
Fade down the animation by the specified duration. The animation will fade down as soon as
Calculates the percentage of the given width. The percentage is calculated based on the current width.
Check if there are any views that overlap with the given width. If so do nothing.
Creates an intent to launch an activity.
Launches an activity. If the activity is already running this method does nothing. If the
Get a list of all the sheets in the current user s account.
Download file from response.
Build the http client.
Create a new access control entity with the given body.
Update a data model.
Create a full export of the given type with the given start date and end date.
Set the host to use for the token provider.
Sets the API client credentials.
Process a graph in QL format and save it to a file. The file will be
Get a list of bookmarks for a given group key and sharing type.
Adds a set of permissions to a named graph.
Write the permissions for the named graph.
Mark the logic dataset graph with a set of rulesets.
Close the connection and release any resources associated with it. This method should be called when the
Execute a select query with the given query definition and stream handle. If offset or limit is
Create a new dataset graph using the given host port user password and authentication type.
Limit the number of threads per process to the specified number of threads per process.
Resample the image to the given width and height with the given annotations.
Adds a rotation to the GM command.
Sets the GM gravity.
Strips profiles from the command line.
Sets the font style point size and fill color.
Adds a source image to the chart.
Adds an image file to the command.
Parses the given arguments into a list of strings. If the target is an instance of the
Prints the usage of the given object to the given stream. The target object must be a
Extract time unit from string.
Parse the given target object with the given properties. The target object must be an instance of
Execute the slide at the given URL using the current screen region.
Execute the given file in the context of the current context of the current context of the current
Interprets a PPTX file and returns a list of actions.
Sorts a list of rectangles by their size.
Render the given template with the given parameters.
Get slide xml.
Checks if the given mouse event is within the screen region.
Selects the elements that overlap vertically with the specified slide.
Sends a message to the SQS queue. If the queue is null then the message will be
Sends a message to SNS and dispatches it to the proxy. If the proxy is not
Require a file with the given name and options. If the file is not found an exception
Get or create a temporary directory.
Creates a log value map with the given key and value.
Log a message at the TRACE level.
Log a trace level message.
Log a debug message.
Log a debug event with a message.
Log a message at the INFO level.
Log an informational event and a message with a level of INFO.
Record a info event with two parameters.
Log a warning message.
Log a warning event with a message.
Log a message at the error level.
Log an error event with a message.
Add to context line and method.
Start steno wrapper.
Write key - value pairs.
Serializes a throwable proxy to a JSON string.
Returns the log value of this object.
Gets the caller data from the given logging event.
Create a new database in the temporary folder. The name of the database is the name of
Checks if there are mappings for the given array position. If so removes the mapping from the
Parse save attribute.
Save data to object in context.
Refresh a sheet row from the given context.
parse save attr string.
Get the save attribute list from a row.
Get the save attribute from a list of attribute names.
Set the save objects in a hidden column.
Set save attributes for all rows in a sheet.
Set save attributes for each cell in the given row.
Prepare the context and attributes for a given cell.
Format a number. If the number is an integer it will be formatted as an integer otherwise
Put shift attributes for the given name with the given config range attrs and unit rows mapping.
Sets the workbook to use.
Get the wrapper xssf object for the writeback. If the writeback is null
Gets the formula evaluator.
Re calculate max column counts.
Load a web sheet from the given input stream.
Load a web sheet from the given workbook with the given data. The web sheet will be
Load work sheet by tab name.
Export the contents of the file to a streamed file. The file will be written to
Save the current state of the form. This method is called when the form is submitted.
Set the submit flag to true. If the button is set to false the button will be
Populate the given component with the current faces cell and the default control of the component.
Get current sheet configuration.
Reads an object from the given input stream.
Returns the locale for the given component.
Returns the picture for the current phase.
Returns the cell helper. If no cell helper has been created yet this method creates a new
Get the pictures helper.
Returns the validation handler. If no handler has been set the parent validation handler will be created
Get the chart helper.
Convert a shared formulas into a ptg array. The shared formulas are shifted by
Convert a ptg to a ptg array. If the ptg is a watch list
converts a watch list to a watch list.
Create a single ptg with the given class and number of operands and the given formula changed
Get the rows list from the current row. If there are no rows in the current row
Assemble rows list from rows mapping.
build dynamic row for ref ptg base.
Get the background color for the plot. If no background color is found a white color is
Returns the automatic fill color for the specified index in the specified theme table.
Find automatic fill color.
Returns the x component of the given color. If the color is null then null is returned
Get the x object from a color object.
Returns an automatic tint for the given index in the given theme table. The index is
Converts an xssf color to a clr color.
Get the triplet from an xssf color.
Get the bg color from a poi cell and a cell style. If the poi cell is
Find the component name from the component class.
Populates the attributes of the given component with the input attributes of the given faces cell.
Metodo permite obtener la metodo de la metodo de la metodo de
Set a property on an object.
Returns the value of the specified property of the specified object.
Sets the control attributes for the given cell.
Find validate attributes for a given cell.
setup faces cell pictures and charts
Sets the faces cell charts.
Setup faces cell pictures.
Initialize the charts map.
Get the pie title.
Set the style for a series.
create pie3 d
Setup the bar style for the given chart and data. This method is called when the chart
Initialize the xssf.
Get the chart id from the parent of the given chart.
Initialize the anchors map.
Generate a single chart from an xssf chart id and a chart data map.
Evaluate a collection expression and return the result. If the result is not a collection an exception
Get the full name from a row.
Rebuild the upper - level formula.
Sets up the upper level formula for the given cell.
Build a cell formula for shifted rows.
gather rows mapping by full name.
Change the index number in the shift map with the changes in the change map.
Change the upper level length of the given name by the given number of characters.
Change index number in hidden column.
Set the full name in the hidden column.
Gets original row number in hidden column.
Set the original row number in the hidden column.
Find parent rows mapping from shift map.
Find child rows mapping from shift map.
Returns the item at the given index in the given collection or null if the index is out
Build the current range with the given source range and insert position in the given sheet.
Returns true if the given row index is in the given source config range.
Returns true if the given row is a reference to a command in the given range.
Replace expression with cell value.
Returns a hash map mapping merged cells to the corresponding cell address in the sheet1.
Returns a list of all cells in the first sheet that are not merged into the second sheet
Add skip cells in the given cell range to the given cell list.
Build a sheet comment from a list of tie command aliases.
build cell comment from alias list.
Build the sheet configuration map.
Get the sheet configuration.
Build a form command from a sheet configuration.
Find the last non - blank cell in the given row starting at the given stoppoint.
Build the sheet.
Check and repair the last row of a sheet.
build command list from sheet comment
Sets the parent for a child command.
Has each command in the list?
Match command to sheet config form.
Copy template for tie commands.
build a command list from the given cell and the right column of the given cell and the
Process method line.
Process a single line of text and add it to a list of config commands.
Move comment to map.
create config command.
Build the attribute map from the command line and the index of the end of the parameter.
Get sheet configuration from form command.
Set footer of sheet configuration.
Sets the body of the sheet configuration.
Sets the header of the sheet configuration based on the form command and the header cell range.
Deletes a single row from a sheet.
Remove a list of ranges from a navigable map.
Returns a list of full names from the given sheet starting at the given index and ending at
Get each command from parts name.
Insert an empty object in the context.
Deletes an object from the context.
Prepare collection data in context.
Index all the commands in the given config range into the given map.
is row allow add
Insert each template in the source range. The source range is assumed to be in the source
Evaluates normal cells.
Evaluates the user formula and sets the cell s formula value.
Checks if the given string is a user formula.
Create a new cell comment.
Evaluates a boolean expression.
Remove rows in a sheet.
Remove a single row from a sheet.
Remove the cached cell for the given row. If there is no cached cell for the given
Remove rows in body.
Loads a picture from the faces cell with the specified row and column indices. If the cell
Returns the chart view id for the given row and column. If the cell does not contain
Assemble a new value from the given value and cell. If the value is a date
Get cell value with given cell formula evaluator and data formatter. If the cell is not a
Get cell value without format.
get cell string value with type.
Get cell string value with number type.
Set cell value.
Sets the value of a string cell.
Sets the value of the given cell to the given boolean value. If the given string is
Set cell value as date.
Sets the cell value as a numeric value.
Copy rows from the source sheet to the destination sheet.
Copy a single row from the source sheet to the destination sheet.
Copy a cell from source sheet to dest sheet.
Copy a cell value from a source cell to a new cell with a new cell style.
Copy a cell from source sheet to dest sheet with a new cell style from new sheet.
Clones the comment from the source cell to the new cell.
Create a client anchor for a comment.
Create or insert a comment in a cell.
Match comment settings.
Get the vml drawing from a cell.
Get the shape of a cell from a vml file.
Get cell style from source cell.
Convert a single cell from the given POI cell to the given faces cell fcell face
Get the component s row and column from the attributes of the given ui component.
Gets the init rows from the sheet configuration.
Get a faces row from a list of faces rows.
Gets the faces cell from the given top row and left cell coordinates.
Get poi cell from sheet.
Get skey from poi cell.
Get or add a tie cell in a hash map.
Get current data context name.
Evaluate the given expression with the given context. If the expression does not exist a new expression
Evaluates the JEXL expression with the given context and returns the result. If an exception
Writes an object to the given output stream.
Remove a row from the table.
Merge the given mapping into this mapping.
Recovers all rows in the table to the given sheet. This method is called by the
Returns the chart type of the given chart.
Create a stroke object with the specified style.
Initialize chart data from xssf.
Set up the chart data. This method is called when the chart data is added to the
Initialize the XSSF.
Initialize the xssf object.
Returns the chart id associated with the given anchor or null if the anchor is not associated with
Get chart id from child node attributes.
Build each object in the collection.
Save data in a cell in the context of the current context. The data will be saved
Re - calculate the result of the formula. This method is called when the formula has been
Get POI cell with row and column from a tab.
Returns the faces cell with the specified row and column from the current page.
Restore data context.
Get the last part of the given name. The last part is the last part of the
Check if we need to restore the current data context. This is done by checking if the
start restore data context.
Shifts a row in a sheet by a given number of cells.
Set a reference to the first cell in the table. If also create a serial cell address
Set a reference to the last row in the worksheet. If the last row is greater than
Builds the cells for a static row.
build single cell.
Reads an object from the given input stream.
build a list of parsed cells for a given category.
Builds a series list from a list of chart objects. The series will be added to the
build chart series in list
Get the color list from a list of parsed cells.
Returns the dpt with the given index or null if there is no such dpt.
Sets the command index map. If the given map is already a hash map it will be
Get pictrues from a workbook.
Get all the pictures in a xssf and store them in a map.
Index the picture in the map.
Generate a picture style string for the given faces cell and picture.
Generate chart style string.
Returns the pattern for this expression. If the expression has an alias the pattern will be compiled
Returns the chart for the current phase if the current phase is the same as the current phase
Recover the cell from the given sheet.
Get a row style string.
Returns the font style for the given cell in the given workbook. The font style will be
Get the cell color from the given font. If the font is an xssf object
Get cell font decoration.
Get the cell style for a POI cell.
Returns the column style for the given poi cell.
Get the alignment from a cell.
Get the vertical alignment from a cell.
Calculates the total height of a row in a sheet.
Sets the style of a cell. This method is called when a new cell is created.
Get input type from cell type.
Returns a set of resource paths for the given path.
Get a resource as a stream.
Removes a number from a resource path if it starts with the given prefix.
Evaluate the input string for the given type. The input string must be of the given type
Finds a bean by its name.
Join an array of shorts with a separator.
Round the given value to the given number of decimal places.
Returns the tab type of the currently active tab.
Returns the tab style for the current tab view. If the current tab view is not active
Returns the default date pattern. If no default date pattern has been set the default date pattern
Get decimal separator by default locale.
Get thousand separator by default locale.
Set the list of aliases for the tie command.
Build form watch list.
Build watch list for a cell.
Adds a row to the watch list if it is not already there.
Checks if the given string starts with the tie command prefix. If the string is null or
Parse widget attributes.
Returns the attribute key for the given cell or null if the cell is null.
Validate the attributes of a cell. This method checks if the comment starts with the method validate
Finds the position of the pair bracket in the given string starting at the given position.
Parse the command attributes from the given string and return a map of attribute names to values.
Parse input attributes.
Parse the validation attributes of a form control. This method is used to parse the validation attributes
Split by eual sign.
Parse the special attributes of the given type and add them to the given map.
Process calendar attributes.
Process select item attributes.
gather special attributes.
Parse comment to map.
Returns the position of the first non - letter or digit character in the given string starting at
Remove chars from a string.
Returns the name of the column with the given number.
Convert a column name to an integer.
Get cell by reference.
Convert a height in units to a pixel height in the given units.
Checks if the given string is a valid date.
Parse the date from the given string. If no date is found the string is returned.
Checks if the given string is a numeric value. If the string starts with the numeric value
Returns true if the given character should continue with the given parameter. If c is a comma
Set a property on an object.
Compares this cell to the given other cell and returns the result as an integer.
Returns true if the given child range is inside the given parent range.
Clear all hidden columns from a sheet.
Delete all hidden columns in a row.
Delete a cell from a row.
Log system event.
Refresh the faces cell after the status has been changed.
Validates that the given row and column are in the current page.
validate by tie web sheet validation bean
Check error message from object in context. If error message is not empty set error message.
Validate all rules for single cell.
Performs validation on the given cell value.
Validates the specified cell against the current page. If the cell does not exist in the current
Validates the current page against the rows in the body of the current page. If the page
Validates a single row in the current page.
Validates a single row of the faces.
Refreshes the cached cells in the current page.
Refreshes the cached cells in a row.
Sets the full submit mode in the view.
This method is called before any validation is performed. It is called before any validation is performed
Clear all of the elements from this cell.
Load the header rows from the web. xml file.
Load header row without configuration tab.
Fill to max columns.
Get header column style.
Get the width of the cell.
Get the style of a column.
Initializes the tabs property of the parent sheet.
Load the serial data. This method is called when the serial data is ready to be read
Refreshes the data for a given row.
Refresh data for a single cell.
Finds the tab index with the given name.
Load a work sheet from the given tab name.
Prepare the work shee for the given tab.
Sets the first page of the data table.
Setup the row info.
Loads the faces body rows from the given sheet configuration and adds them to the parent sheet.
Refresh a cached cell. This method is called when a new cell is added or removed from
Process the refresh of a cell. If the cell has changed it will update the request context
Create dynamic columns.
Add a new row to the current tab.
Refreshes the body rows in the given range.
Sets the unsaved status for the given request. This method is called when the status is
Returns true if the tie is in the unsaved state. If the tie is not in
Returns the most parameter constructor of the given type that is a common constructor of the given type
Write the source stream to the output stream. The output stream will be closed after this method
Writes a long value to the given writer.
Writes the given string to the given writer. If the line is null the string is written
Set converted traffic stats tag.
Adds a bitmap to the result.
Add a file descriptor to the result.
Remove the parameter with the given name.
Add a header to the request.
Clear the request.
Call the play service with the given uri volume and parameters.
This method is called when the service is being bound. It is called when the service is
Unbinds the connection from the context.
Drops the listener from the playback if it exists.
Store the image to disk. If the image is already on disk nothing is done.
Transfers the input stream to a string using the given character set and buffers pool.
Read a UTF - 8 encoded string from the given input stream. The input stream will be
Send the content to the given output stream.
Returns the number of bytes available to be read from the underlying input stream.
Closes the underlying input stream. This method should be called when the underlying stream is closed.
Returns the number of bytes read from the stream. This method is not thread - safe.
Reset the stream to its initial state. This method is called when the stream is closed.
Send the start of the message. This method is called when the message is being sent.
Send the Content - Disposition header to the given output stream.
Send the Content - Type header to the given output stream.
Send the transfer encoding header to the given output stream.
Send the end of the header.
Send the end of the message to the given output stream. This method is called when the
Sends the given part array to the given output stream. The part array must have the same
Get the length of the parts.
Checks if the URI is a redirect. If it s a redirect it will throw an exception
Sends a 304 Not Modified response to the client.
Set the date header.
Set the date and cache headers.
Set the Content - Type header for the given file.
Sends a flush to the given channel. If the channel is already connected it will be closed
Send the Content - Disposition header to the given output stream.
Send data to the client. This method is called when the client sends data to the client
Installs the given version of the cache. This method must be called before the cache is
Ensure that the working directory exists and is a directory. If it doesn t exist create it
Get an entry from the cache. If the entry doesn t match the request null is returned
Creates a new input stream from a snapshot of the entry body. The input stream will be
Resets the bitmap to a new size.
Get an instance of the websockify ssl context for the given keystore password key and password
Validates a keystore using the given password. If the keystore does not contain a valid key store
Replaces the current scale type with a new one.
Get a pending intent.
Disconnects the given connection from the server.
Bind the service to the context. This method is called when the service is bound to the
Unbinds the service from the context.
Notify about changes to the view.
Open a new channel. If the channel is already open this method will do nothing.
On accept data. This method is called when a new response is received from the server.
Called when the request is reset. This method is called when the request has been completed.
Wait for the loader to finish.
Set the text or hide the view. If the text is empty set the view visibility to
Hide soft input.
Show soft input.
Toggle soft input.
Calculate the width of a pixel given the density of the display metrics and the density of the
Log any exception that occurred during the unification process. This method is called when an exception
Clear the cache for the given url.
Populate a view with an image. The image will be created if it doesn t already exist
Cancels the image loading of the specified view.
Creates a new image consumer for the given view. The consumer will be created using the factory
Sets the image to be displayed in the dialog.
Sets the loading image for the given image consumer. If the consumer does not have a size
Start a new image loader task. If the current loader has not yet been started a new
Cache an image in memory.
Releases a buffer back to the pool. If the buffer is already at the pool it is
On url.
Adds a parameter to the request.
Try to connect to the server with a workaround to ensure that the client is connected to the
Returns the MD5 hash of the given text.
Returns a string describing the matrix type n.
Returns a string describing the status of the given matrix. If the matrix is not initialized or
Check if CUBLAS_STATUS_SUCCESS is the given result and throw an exception
Check if the result of the BLAS operation is the same as the last blas
Add a lexeme to the frequency.
Adds a new ending id to the frequency.
Returns the estimate of the number of occurrences of the given attribute in the given wordform.
Print a short description of this token and its attributes to the given print stream.
Verify and set kamols attribute.
Remove kamols markup formating from a string.
Get a list of metric data from the metric service.
Get the query string.
Process the node and return a list of metric data objects.
Parse a JSON string to a list of app info objects.
get connection config
Perform a series of data points for a set of applications and metrics. The data points are
Returns a genericode reader for GC04 code list.
Returns a genericode reader that reads a gc04 code list set.
Returns a genericode reader for GC04 column set.
Returns a genericode reader for GC10 code list.
Returns a genericode reader that reads a gc10 code list set.
Returns a genericode reader for GC10 column set.
Gets the column element s id.
Gets the value of the given row and column id.
Returns the column with the given id.
Gets all key from a column set into a collection.
Returns the key of the given id in the given column set or null if not found.
Returns true if s is a key column. If s is null returns false. If s
Creates a new column with the given parameters.
Creates a new key with the given parameters.
Set the number of lines to skip.
Adds a new column to the excel file.
Returns a writer that writes GC04 code documents.
Returns a writer that writes a gc04 code list set.
Returns a writer that writes a garbage collection column set.
Returns a writer for GC10 code list.
Returns a writer that writes a gc10 code list set.
Returns a writer that writes a garbage collection column set.
Validator for GC04 code list.
validator for gc04 code list set.
The gc04 column set validator.
Validator for GC10 code list.
gc code list set validator.
Returns a validator which validates a garbage collection column set document.
Send the logs to the server.
Sets the context to be used by the application. The context will be used by the application
Get the current log level. This method is thread - safe and should not be called directly
Get a boolean from the thread pool. If the thread pool is full the method blocks until
Sets the maximum size of the log store in bytes.
Prepends the metadata to the message if it is not already present in the metadata map.
Appends stack metadata to a JSON object.
Create a new json object with the given level message timestamp metadata and throwable.
Sets the user identity if it is not already set and is not initial context.
Get a byte array from a file. If the file does not exist it is created.
Start the location updates if the user has the required permissions.
Counts the number of entries in the specified region. If the specified region is a partitioned
Counts the size of a partitioned region. If the size of the partitioned region is
Counts the number of entries in a replicated or local region. If the number of entries is
Read a record from the input stream.
Dumps the time stamps to the given stream.
Get the time values since the given index.
Converts a chart from a file to a chart chart object.
Get a pool for a given server. If no pool is found a new pool is created
Get a pool for the given jmx. The pool will be created if it does not
Checks if the given region is already on the server.
Get a member from a JMX bean.
Returns a collection of host names from the given JMX bean.
Lookup a host in the network. If the host is already in the network it will be
Check if data is error and send exception to sender.
Executes a function and returns the results of the function. If the function throws a runtime exception
Flattens a collection of objects into a collection of objects. If an exception is thrown
Query a collection of objects. This method is intended to be used in conjunction with other queries
Creates a new cache listener for the given consumer after the put operation. The consumer will be
Creates a bridge for the given consumer that will be called after all entries have been deleted.
Handle an exception. This is the default exception handler that will be used to handle the exception
Returns a copy of the on region filter key facts.
Execute the function. The function is executed in the context of the given context. The context
Returns a list of all host names in the given JMX bean. If the bean is not
Execute the function with the given context. The context will be used to execute the function.
Get the application name from an array of resources.
Construct the security property.
Get a region from the cache or create a new one if it doesn t exist.
Get a region from the cache or create a new one if it doesn t exist.
Compares the keys in source map with the keys in target map. If source map is null
Returns true if the timestamp at the given index must be inserted at the given timestamp at the
Close the stream and release resources. This method should be called when the stream is closed.
Dump all files in a directory to cvs files.
The main method of this class. This is the entry point for the java. io.
Reconnect to the jmx instance. This method is called when a connection to the jmx
Stop all members on a given host.
Shuts down a member.
Shuts down all the members of the given JMX bean.
Shuts down all members in a given redundancy zone. The redundancy zone must be
Returns a list of strings that represent the results of a query. This method is intended to
Retrieve a page of results using the specified criteria and page number. If no results are available
Import a GemFire region into the data store.
Checks if the remote locators and the locators match.
Get the region from the cache and add it to the result. If the region is not
build a check sum map for a given region.
Returns the value of the column with the given name. If the column is a string it
Checks if the given type is an integer type or not.
Serialize an object to a byte array.
Deserializes the given byte array into a k object.
Create an instance of the given class.
Checks if the element is a table id. If it is it is a table id.
Check for fields.
Checks if the element s type is a super type of the given type.
Write the string to a java writer and emit a comment at the end of the line.
Emits the get id method.
Returns an observable view of the result of this query. The observable view will return a cursor
Checks that the given column exists in the table. If not an exception is thrown.
Returns the given string value or the given default value if the given string is blank.
Converts the first character of the string to upper case. If the string is blank returns the
Returns true if mirror is a subtype of the given type. If mirror is a subtype of
Add a DESC clause to the query and return a builder for the resulting object.
Returns the temperature in degrees celsius. The temperature is in degrees celsius.
Get the cursor for the given type. If no cursor is supported for the given type then
Log an error message with the given arguments.
Returns a list of all icon fonts available on the system.
Returns a list of all available icons.
Get the background decoration.
Returns the raise function of the given value with the given exponent. If the given value is
Sets the values of this matrix to the given array of float values.
Returns the power of the given decimal by the given exponent and scale.
Get the root of a decimal.
Returns the taylor of x with the given scale. The taylor
Returns the linear representation of x with the given scale.
Creates a new instance of the class with the given scale.
Calculate the angle between x and x + 1. 0 and 1. 0 and return the
Returns the taylor of x with the given scale. The taylor
Returns the square root of the given number with the given scale.
Prints the given string to the standard output.
Returns a string representation of the given timestamp.
Sets the minimum and maximum limits of the image.
Put a float value into the buffer.
Print the current state of the object to the console. This is useful for debugging purposes.
Adds two complex numbers and returns a new object with the summed result.
Returns the difference of this complex number and the given complex number.
Multiply this complex number with a complex number z and return the result as a new complex number
Divide this complex number by the given complex number and return the result as a new complex
Sets the values of this matrix to the values of the given matrix.
Get a row from the matrix. If r is out of bounds an exception is thrown.
Get a column from the matrix.
Sets the values of this matrix to the given array of floats. The values are assumed to
Returns the transpose of this matrix.
Adds the given matrix to the current matrix and throws an exception if the matrix is invalid.
Subtracts the given matrix from this matrix and stores the result in this matrix.
Multiply this matrix by a scalar k.
Multiply this matrix with the given matrix and return the result as a new matrix.
Print the matrix to the given print stream.
Sets the image resource.
Validates the coefficients of the curve.
Compute the next position in the linear function.
Clear the state of the SLD. This is called when the SLD is invalidated.
Converts a styled layer descriptor info into an XML string.
Convert a raw sld to a styled layer descriptor.
Validate a styled layer descriptor.
Validate a raw sld against this sld. This method will return true if the s
Calculate the area of a rectangle.
Sets this matrix to be equal to the given matrix.
Sets the values of this matrix to the given array of floats. The values are assumed to
Returns the inverse of this matrix. The inverse of this matrix is the inverse of this matrix
Returns the determinant of this matrix.
Returns the norm of the matrix.
Solve a column vector.
Print the matrix to the specified print stream with the specified width. The matrix is assumed to
Perform forward elimination.
Create a forward substitution for a column vector b. This is a forward substitution of a column
Create a back substitution for a column vector. The original column vector is the original column vector
Improve the transformation of a column b to a column x. If the transformation is
Converts a square matrix to a numeric matrix.
Returns the next von neumann.
Performs a single iteration of the iteration. If the number of iterations is equal to the number
Compute the next position in the linear function.
Checks if the current position is the same as the previous position. If it s the same
Compute the next position.
Checks if the given interval is valid.
Add a float to the end of the current value.
Multiplies two integers and returns the result as a new integer.
Generate an integer from a base exponent and a power of m. The result is a power
Performs a single iteration of the iteration. If the number of iterations is equal to the number
Get sld manager.
Convert a long to a char array.
Decomposes a bit vector into an N - bit vector and sets the m and n values
Print this string to the specified print stream.
Validates that the given number is a valid floating point number and that it is less than or
Validate that the unbiased exponent is within the range bias + num + bias + bias
Checks that the given number is a valid double biased exponent.
Validate that the given unbiased exponent is within the range bias and bias + num.
Returns the next value in the list.
Returns the next polar value in the range [ 0 360 ).
Returns the next ratio.
Creates a prime sieve of size n.
Returns the prime factors of the given prime number. If the prime number is not a prime
Performs a single iteration of the iteration. If the number of iterations is equal to the number
Compute the next position in the linear function.
Checks if the current position is the same as the previous position. If it s the same
Sets the JavaFX application in the JavaFX framework. This method blocks until the application thread
Sets the configuration of the parser. If the file is null the default configuration is used.
Sets the default configuration. The default configuration will be read from the specified reader. The default
Initialize the fxml loader with the specified location charset and resources.
Sets the latitude and longitude of the geocode request.
Get host and port pair from service metadata.
Get applicable attribute definition.
Evaluate the given attribute filter expression on the given event attributes and attribute definitions.
Sanitize a string for use in an HTML tag. This is useful when you want to
Sets the address to be geocoding. If the address is null the address will be
Query for the names of the objects in the database.
Query for all instances of a given type.
Returns a list of collaborations to which the user is a member of.
Get the meta data for a decimal value.
Changes the password for the logged in user.
Returns a list of all users.
Get the gravatar for the given email address and size.
Get the gravatar for the specified user and size.
Populate from elastic search.
Returns the type of the field to be indexed or null if the field is not indexed.
Create a new flow step.
Updates a flow step.
Get a flow step by it s id param flow step type param and service ticket.
Get a flow step.
Get a list of steps in a flow.
Deletes a flow step.
Force delete a flow step.
Populates the table fields from the given form fields. If the param parameter is true then the
Close the connection in a new thread. This method will close the connection in a new thread
This method is called when a message is received from the client. It is called by the
Called when the connection is closed. This method is called when the connection has been closed.
Get the echo messages from the return value.
Returns a list of items for the authenticated user.
Create a new table record.
Deletes a container.
Get a list of historic data for a given form.
Get a list of form and field historic data.
Get the most recent form and field historic data.
Lock a container form. The container will be placed in the job view. The container will
unlock a form container.
Unlocks a container.
map form container to form definition and title param param param param param param param param param param
Convert a role listing to a list of role objects.
Create a new form definition.
Updates a form definition.
Returns a form definition with the given id.
Returns the form definition with the given name.
Get a list of all form records for the logged in user optionally including table record types.
Deletes a form definition.
Returns the storage key for the given parameters. The storage key is generated from the given parameters
Initialize the memcached client. If the memcached client already exists return it. Otherwise create a new
Shuts down the underlying memcached client. If the underlying memcached client has not been shut down
Try to parse a string to a long. If the string cannot be parsed - return -
convert document to pdf
Returns the field values for the given form from the local cache.
Create a new flow step rule.
Create a new flow step rule.
Create a new flow step view.
Updates an existing flow step rule.
Update a flow step exit rule.
Updates a flow step rule.
Move a flow step entry up.
Move a flow step entry down.
Deletes a flow step rule.
Delete a flow step exit rule.
Delete a flow step.
Initialize the session with the password and the response. This method is used to initialize the session
Returns a listing of all user queries.
Returns a list of all roles.
Get the service ticket in upper case.
Create a text field with a mask value.
Create a new text barcode field.
Create a new decimal spinner.
Create a new decimal slider field.
Create a new table field.
Updates a text field with a mask value.
Update a text barcode field.
Update a decimal spinner.
Updates a field s value with a slider.
Updates a table field.
Gets a field by its name.
Get fields by form definition and logged in user.
Get fields by form type id and logged in user.
Deletes a field.
Force delete a field.
Get the meta data for a table field.
Updates a user field value.
get or create index
Create a new flow.
Updates a flow.
Returns a flow with the given id.
Get a flow by it s name.
Deletes a flow.
Force deletes a flow. If the flow doesn t exist it will create a new one.
Update a global field value.
Returns a list of all global field values.
Returns the form definition id and the form title as a mapping from form id to form title
Decrypts an init packet. This method is used to decrypt the data and the salt.
Close the connection and clean up the connection pool.
Creates a new request and adds it to the request queue.
Returns a verbose message for the given parameters.
Create a new admin user.
Get an access token for a user.
Get user profile info.
Execute a JSON request.
Execute a POST or PUT request with the given parameters and return the result as a JSON object
Get json response handler.
Returns true if the connection is valid and false if it is not.
Get the http client.
Returns the path to the system trust store. If the system trust store does not exist or
Closes the connection to the database. If the connection is already closed this method does nothing.
Returns a list of fluid items for the given view.
Send form to flow.
Called when the client closes the connection.
This method is called when a message is received from the client. It is called by the
Sends a message to the client. If the message is null an exception will be thrown.
Sends a message to the user.
Closes the user session.
This method is used to execute a native SQL query. It will throw an exception if the
Sends a license request to the server and returns the response as a string. The request is
Apply a license to a service.
create field with text type.
create field paragraph text
create field paragraph text. html
field multi choice select many
create field date time
update text field.
update field paragraph text. html
update field date time date and time
update decimal field.
update field value.
route field value to create.
Returns a configuration with the given key.
Returns a list of all configurations.
Create a new attachment.
Returns an attachment with the specified id. If the id is not found a 404 HTTP exception
Deletes an attachment.
Force deletes an attachment. You can forcefully delete an attachment by specifying a service ticket.
Parse a jar file from the given input stream.
Set the class loader for the given jar path. If the jar path does not end with
rule2. If the schema is not an xsd schema and the name is not null throw
rule 3. schema. schema. name is optional. Throws an exception if there is no
rule 3. reference. attribute. attribute. simple. type. form. type.
Get the schema node from the file at the given path. The schema is assumed to be
rule 7. schema. element. attribute. schema. element. attribute. schema. element
rule 3. schema. element. attribute. attribute. attribute. element. attribute. element
Convert an object to a fluent type. If the value is an iterable it will be converted
Create a new CLI interface instance.
Create a new instance of the CLI class using the given options.
Parse the command line arguments and return an object of the given class.
Parse the command line arguments using the given options object.
Creates a new url builder with the given path.
Remove a view from the footer view. If the view is fixed remove it from the view
Returns the value of the curve at a given point p. If attenuation is enabled
Returns a 3 - bit noise value.
Returns the 3 - dimensional noise of a 3 - dimensional array with the specified seed.
Cubic interpolation function.
Calculate the 5 - th curve of a number a.
Sets the lower and upper bounds of the scale.
Process a single cloud trail event. This method will loop through all plugins and process the event
Process the given event using the given plugin. If the plugin throws an exception log it.
Gets the account id of the given event.
Returns true if the given entity matches any of the predicates in the whitelist otherwise returns false.
Get the event serializer for the given gzip stream and log.
Creates a new file in the current folder with the given name.
Creates a new directory in the temporary folder. If the directory already exists it will be overwritten
Restores all properties that have been restored from the database. This method is called by the
Creates a new implementation of the delegate map. If the delegate is already an implementation of bool
Adds an object to the collection. The object will be added to the end of the collection
Sets the value of a property. If the property does not exist it will be created.
Get a property as an array of strings. If the property does not exist the default value
Returns the next state for the given action.
Removes all soft references from the garbage collector queue and removes them from the map.
Get the value of a parameterized type or variable. If the given type is a parameterized type
Gets the parameterized type.
Get the type variable for the given type declaration.
Prints the stack trace of this throwable to the given stream.
Prints the stack trace of this throwable to the given writer. If the parent trace is enabled
Replace the given object with a stub if it is a remote object. If it is a
This method is called when the application is started. This method is called when the application is
Sets the task that will be executed.
This method is called when a task is accepted. If the task throws an exception it logs
Called when a task is rejected with an exception. If the task throws an exception it logs
Called when the task has started.
Mark the task as completed. If throwable is not null log the exception and return false.
Stop the current task and log any exceptions that occur.
Returns the executable that will be used to run the job. If the job is interrupted the
Put a new executable job into the queue. If the queue is empty the current job will
Convert a blocking mode name to a blocking mode object.
Resolve an object from the input stream.
Copy the readers from the source catalog to the destination catalog.
Create a new catalog instance.
Loads the system catalogs.
Parse the catalog file at the given URL. If the file does not exist it will be
Parse the pending catalogs.
Parse a catalog file. This method is called when a catalog file is parsed.
Called when an unknown entry is detected.
Resolve a DOCTYPE. This method is used to resolve a DOCTYPE to a URL.
Resolve the URL to a string.
Resolve a system id to a URL. If the system id starts with str it will be
Resolve a local uri.
Make the given sysid absolute. If the sysid is relative it will be converted to
Normalize the URI. This method is used to convert a URI into a string. If the
Encodes a byte into a hexadecimal string.
Add an entry to the delegate list.
Creates a soft value reference. If val is null returns null. If val is non -
Fires a throwable to all registered listeners.
Add a throwable to the stack trace.
Creates the implementation of the delegate. If the delegate is an array it will return a new
Compares this task with another one and returns the number of times the two tasks were executed.
Returns the value of the field. If the field does not start with the given string null
Get the object at the given index.
Set the object at the given index.
Maintains the number of soft objects in the queue and removes them from the list.
Adds a new type to the registry and returns the index of the new type.
Returns the entry type for the given name.
Returns the number of arguments of the given type.
Returns the argument at the given index or null if the index is out of bounds.
Sets the context class loader for the given thread.
Swaps the two values of a and b. The values are swapped in place.
Remove the node with the given index from the list of nodes.
Clean up the timeout object.
Loads a class from the given name. If the class is not found an exception is thrown
Preloads all available protocols.
Create a new url with the given protocol.
Check if the current handler packages is the same as the last one in the system property.
Get the value of the property.
Returns the delegate set if it is a hash set otherwise it returns the delegate.
Returns a synchronized version of the given counter. This method is thread - safe.
Make the given counter directional or decreasing depending on the given boolean.
Checks if the current thread is in the extension namespace. If the thread is not in the
This method is called when a notification is received from the client. This method should be called
Get an instance of an object. This is a no - op if the object is not
Substitutes the given string with the given token range in the given buffer.
Splits a string into an array of strings using a specified delimiter.
Joins the given byte array into a single string.
Writes a string representation of the given object to the given buffer. If the object is null
Get the value of the object. The object is blocking if the object is not blocking.
Creates a new hash map. This method is thread - safe and should not be called from
Returns the value associated with the given key or null if the key is not associated with a
Returns the value associated with the given key or null if there is no value associated with the
Remove the entry with the given key from the map and destroy it if it exists.
Flushes the cache to disk. This method is thread - safe and should not be called
Returns a list of all keys in the cache that are valid for the current time.
Sets the resolution of the timer. If the resolution is greater than or equal to the current
Returns the entry associated with the given key or null if there is no entry associated with the
Returns an iterator over the children of the given element whose tag matches the given tag name.
Get a unique child element by tag name. If there are multiple children with the same tag
Returns the first child with the given tag or null if no such child exists.
Get the content of an element. If the element is null return the default string.
Get the unique content of a child element with the given tag name.
Returns the content of the first child with the given tag or null if no such child exists
Sets the maximum number of items in the queue. The maximum number of items in the queue
Set the blocking mode to the given name. If there is no blocking mode with the given
Set the blocking mode to the given string. If the string is not a blocking mode the
Executes a task in the thread pool. If an exception is thrown the task is rejected.
Resolve a system id using the given resolver.
Resolve an external public id using the given resolver. If no resolver is found null is returned
Get a resolver for the given command and arguments. The resolver is used to query the database
Append a vector to the end of the vector.
Resolve all system ids to the given system id. The system id must be unique within the
Resolve the given system id and return the result. If no result is found null is returned
Resolve all local system ids.
Read a catalog from a file. If the file does not exist it will be created.
Reads a catalog from the given input stream.
Connect to the file. If the file does not exist an exception is thrown.
Get the output stream for this connection. The stream will be closed after this method returns.
Delete a node from the linked list. If the linked list is the same as the linked
Returns the value of this field or null if the field is not set.
Creates a snapshot of the current value.
Creates a logger for the current class. If the logger is already created it is returned.
Write a list of objects to a buffer.
Get the class short name.
Returns the string representation of this class.
Returns an iterator over the names of the properties in the system.
Get the property group with the given name.
Returns a constructor that can be used to create a new instance of the given type.
Creates a copy of the given object. If the object is not serializable an exception is thrown
Dereference an object and cast it to the expected type.
Initializes the jndi map.
Update the jndi cache with the given name and value. If the name is a j
Returns a set containing all the keys in this collection. If include defaults is true then the
Returns a set containing all entries in the hash table. If the include defaults parameter is true
Removes a property listener. If the listener is an instance of bound property it will be removed
Fires a property added event to all listeners in the list.
Fires a property removed event to all listeners in the list.
Fires a property changed event to all listeners in the list.
Fires a property changed event.
Make a property name with the given prefix. If the prefix is null the base property name
Load properties from a property reader.
Loads a property from the given class name. The class name must be a fully qualified class
Get the property group with the given name and index.
Returns true if the value of the resolved property is true otherwise returns false.
Resolve the input source for the given system id.
Resolve the URL for the given system id. If trace is true the log will be logged
Resolve the classpath name from the given system id. If trace is true the log will be
Sets the text of the element in the document. The text is expected to be in the
Normalizes the given id so that it can be used as a reference to the given id.
Encodes a string into a URN. The URN is normalized and the original string is
Decode a URN string into a public ID string.
Replaces all occurrences of old in str with new in str. If old is not present in
Starts the timer. If the timer is already running it will be reset to the current time
Stop the timer and return the number of milliseconds elapsed since the last call to this method.
Wrap a stop watch in a synchronized object. This method is used to make sure that the
Compares this hash code with the given object. The object must be of type hash code.
Generates a hash code from the given byte array.
Generates a hash code for an array of objects.
Creates a new map and a new list. The new map and list are initialized with the
Sets the value of the field.
Returns the next token from the token stack or null if there are no more tokens.
Initializes the date formatter with the default format and locale. The default locale will be used if
Adds a vertex to the graph. If the vertex already exists it will be overwritten.
Sets the root vertex of the tree.
Removes a vertex from the graph. Returns true if the vertex was removed false if the vertex
Performs a depth - first search of the graph starting at vertex v using the specified visitor.
Performs a depth - first search of the spanning tree starting from the given vertex v.
Returns the vertex with the given data or null if there is no vertex with the given data
Returns an array of all the cycles in the graph.
Normalizes a string to a canonical form. If canonical is true the canonical form is returned.
Parse an XML string into an element.
Parse the given XML stream and return the root element.
Parse the given XML source and return the root element of the resulting document.
Create a new element with the given local part.
Resolve a qualified name into a q object. The qualified name must be in the form of
Copy attributes from src element to dest element.
Returns true if the node has at least one child of node. element.
Returns an iterator over the child nodes of the given node.
Returns the text content of the given node. If the node has no text content null is
Returns an iterator over the child nodes of the given node with the given name.
Returns the parent element of the given node or null if there is no parent.
Adds a resource to the list of waiting resources. If the list is full the resource will
Read a catalog from a file.
Get the local host address.
Set system property class value.
Display information about a given class.
Describes the given class and its interfaces. If the given class is null then the class
Strips the package name from the given classname.
Get the package name from a class name.
Forces a load of the given type. If the type is null throws an exception.
Get the wrapper class for a primitive type.
get all interfaces of the given class and all superclasses of the given class.
Returns an array of all interfaces of the given class and all superclasses of the given class
Checks if the given type is a primitive wrapper.
Instantiates an object of the given class. If the class is not assignable to the expected
Returns the getter method for the given attribute. If no such method is found an exception is
Returns the setter method for the given attribute.
Convert a class name to a java. lang. Class. The name must end with str
Returns the value of the system property. If the system property does not exist the default value
Returns the filenames for the given property or an empty array if the property does not exist.
Maintains the internal state of the set by removing all weak objects from the queue.
Returns an iterator over the weak set. The weak set is not modified by this method.
Create a new url with the given protocol.
Returns a set containing all entries in this set that start with the basename of this group.
Adds a property listener to the list of listeners that will be notified when the property changes.
Removes a property listener from the list of listeners bound to this property.
Checks if the given string is null or empty.
Find property editor by class name.
Register property editor.
Convert the given text to the given type. If the type is not found an exception is
Get the context class loader for the given thread.
If the throwable is an application deadlock exception return it. Otherwise return null.
Schedule a new timeout to be executed at the given time. If the timeout is already scheduled
Do the work in the queue. If the queue is full the work will be cancelled.
Create a new subcontext with the given name.
Looks up an object by its name and class. If the object is found it is returned
Checks if the given object is assignable from the given class. If not an exception is thrown
Append the class information to the given string buffer. The class name and the class loader are
Returns the allowed transition with the given name or null if there is no transition with the given
Read properties from the property file. If the property file does not exist print an error message
Query the verbosity of the application.
Returns true if the given string is a relative catalog. If the string is not a relative
query the catalog files from the system properties or the default catalog files if none is set.
Returns a vector of the files in the catalog. The files are relative to the properties file
Query the user s preference. If the preference is not specified in the system properties then the
Query the use static catalog property. If the system property is null then read the properties file
Resolve an entity to an input source. If the entity does not exist it will be created
Resolve the given href into a source. If the given base is null then the base is
Makes the given URI absolute. If the given URI is relative it will be relative to the
Resolve a class from a stream. This method is used to resolve a class from a stream
Set the value of the property.
Get the local tag name of the given element.
Get the namespace uri of the given node. If the node is not an element return null
Get the namespace URI of the given element.
Returns a list containing all the elements of the given enumeration.
Get the input stream for the given filename.
Loads properties from the specified file into the specified properties object. If the file does not exist
Read properties from the input stream.
Adds an edge to the graph. If the edge is the from of this node it will
Adds an outgoing edge to the graph.
Adds an incoming edge to the graph.
Returns true if the given edge is a child of this node. If the given edge is
Removes an edge from the graph. Returns true if the edge was removed false otherwise.
Finds an edge from the given destination vertex to the given destination vertex. If no such edge
Finds an edge in the graph. Returns null if the edge is not in the graph.
Returns the cost of the edge between this vertex and dest. If there is no such edge
Create a jar output stream for the given source file. If the source is a directory the
Returns true if at least one iterator in the list has a next element false otherwise.
Fires an event on the queue. If the queue is full the event will be processed
install jvm type provider.
Dispatch the given action on the JavaFX thread. If the platform is an application thread then
Returns a stream of actions of the given type. If no action of the given type exists
Returns a stream consisting of the left - to - right pairs of the given rights.
Returns a stream consisting of the left - to - right pairs of the given rights.
Returns true if the user is allowed to view the robots. txt file in the specified page
Checks that the instruction generated by the drink maker matches the given command.
Returns the sum of the degree of the words in the set.
Returns a copy of the given args with a copy of the original args. The original args
Informs the resource loader that the resource loader is ready to be used. The resource loader
Check if the datasource is valid. If not throw an exception. If the datasource is valid
Returns a list of all objects of the given type.
connect jdbc on with url driver class name username and password
run sql in the database. return true if successful false if not.
Executes a query with the given database and sql. If the given sql is null or empty
Filters the results by the given object. If the object is null then no filtering is performed
Upgrade the database to a new version.
Backup the table to a CSV file. If the file does not exist it will be created
Restore the table from a CSV file to a database.
Set the empty text to the specified character sequence. If the character sequence is not a text
Dump database to CSV file.
Unescapes the quotes in a CSV string. The quotes are replaced by double quotes.
Get a list of values from a row of a CSV file.
Convert a CSV string to a hash map.
Convert a map to a CSV string.
Join a list of strings into a single string.
Join an array of strings into a single string.
Read a database model from a buffered reader.
Write the database info to the given writer.
Inspects the id field of the entity. If the id field is not set it is
Get base dao model.
Get the bind type.
Imports data from a CSV file into the database.
Backup all tables to CSV.
Restore all tables from a CSV file.
Writes the index to the output stream.
Create a new query with the given entity manager. The query will be rendered with the current
Create a typed query from the current query string and the given entity manager. The type of
Render the query as a string.
Delete the record with the given id. If the id is null then nothing is done.
Save an object in the database. If the object is already in the database it will be
Update an object in the database. If the object does not exist it will be created.
Add a where not in clause to the query.
Add a subquery to the query.
Get the next stack in the stack stack.
get an empty intention from the top of the stack
Adds a plan to the set of belief bindings. If the plan is null nothing is
Select a plan based on the specified policy. If no policy is specified the current selection is
Select a plan at a random index. The index is the number of belief assignments in
Sets the plan variables for the given belief. The belief must have a field name
Returns the belief at the given index or null if the index is out of range.
Returns the array of parents of this node. The array will be empty if there are no
Returns the children of this node as an array of bytes. This method is thread - safe
Grows the length of the byte array by the given amount. If the byte array is
Creates a new logger with the given name level and file.
Move forward by one step in the body. If the body is empty no action is taken
Set the goals from the given byte array.
Pause for user input.
Initialize the pool size and number of cores for the intention selection. If the number of
Initializes the intention selection threads based on the given configuration.
Start intention selection threads.
Shuts down all intention selection threads.
Register a jill extension.
Reset the state of the class to its initial state. This is called when the class is
Load an agent from a list of agents. The class name is the class name of the
Process the plans for a given goal.
Create agents in the catalog.
Load a class by its name and check that it is assignable to the given class type.
Loads a Jill extension from the given class name. If the class does not exist it
Returns true if obj1 and obj2 have the same name as obj1 and obj2
Returns a string describing the usage of the application.
Parse the command - line arguments into a number of arguments.
Parse the given argument with the given option.
Evaluate the given query on the given belief and log its execution time.
Returns the object at the given index or null if the index is out of bounds.
Returns the object with the given name or null if no object with the given name exists.
Pushes an object onto the stack. If the object is null this method does nothing.
Returns the object at the given index. If the index is out of bounds null is returned
Pushes an object onto the end of the stack.
Removes and returns the last object in the list. If the list is empty returns null.
Get the type of the given object.
Returns true if the belief matches the given query.
The main method of the belief base.
Converts a string to a byte array. If the string is null returns an empty byte array
Post a new goal to the agent. The goal is pushed onto the stack. The goal
Sends a message to the agent with the given id.
Send a message to an agent.
Returns a byte array containing the current goals.
Create a new belief set with the given name and fields.
Adds a new belief to the current belief set.
Evaluates the given query against the current belief. If the query returns true the current bel
Suspends the agent by setting its idle state to val. If val is true the
Returns the belief set field with the given name or null if not found.
Register the given number of neighbours with the given random number generator. The number of neighbours is
Build a random name. If male is true then males will be generated otherwise f
This is the main entry point for the timer. It is run in a separate thread.
Checks if the stack is valid. If the stack is not valid it logs an error.
Remove the agents from the set of finished agents.
Manages the goal of an agent. This method is called when a goal node is
Mark the pool as shutdown and notify any waiting threads that the pool is no longer needed.
Sets whether or not the agent is in the idle state. This method is called when the
Moves the pin a to pin b.
This method is used to initialize a new instance of this class. This method should be called
Wait until the thread is idle. This method will block until the thread is idle.
Finishes the execution of the application. This method should be called at the end of the
Returns true if at least one of the pool interrupts are idle.
Returns the poolid for the given agentid.
Returns the expression associated with this node. If no expression is associated with this node null is
Sets the expression that will be used to evaluate the value of this expression.
Returns the path to the given attribute from the given from expression. If the attribute is a
Recursively joins the properties at the given index with the given join object. If the index is
Find or create a join for the given property. If the property is not found in the
Returns true if the range is at the end of the range false otherwise.
Returns the next upload stream part from the request. Throws an exception if there are no more
Handle the incoming HTTP request. This method is called when the HTTP request is handled by the
Returns true if the request has a parameter with the given name and value.
Returns the value of the parameter with the given name or null if there is no such parameter
Parses the given expression into a map of parameter names to their respective values.
This method is called to set the configuration of the transaction. This method is called by the
Get the target file for the given artifact name and filename.
Writes an artifact to the target file.
This method is called after processing an instance of a managed class. This method is called after
Returns the first declared constructor of the given implementation class or null if the class is null.
Builds the string representation of the given descriptor.
Get the interface method for the given method. If the method is not found return the given
Returns the type of the given field or null if the field is not a list.
Returns the value of the given type in the given managed class or null if it is not
This method is called when the entity is persisted. This method is called when the entity is
Sets the default link for the given rel. If no hrefs are given the default link
Sets the default link template for the given rel. If the href is null the default link
Handle the links in the response.
Handle header links.
Handle the links in the JSON body.
Parse a link from a JSON object.
Get or create a new map with the given key or create a new map if it doesn
Handles the capabilities response from the server.
Returns true if the given method is allowed to be called.
Register all the instance processors.
Register a new instance factory for the given instance type.
Register a new instance processor.
Register a class processor. This method will throw an error if a class processor is already registered
Adds an argument to the command.
Create target file list.
Convert the object to an XML string.
Initializes this producer with the given context and variables.
Checks if the given template has a reference to the given template file in the given directory.
Create a parameterized template model from the given XML reader.
Create a parameterized template model from a file.
Sets the request path. If the request path is null the method name will be used.
Returns an observable that emits the value at the given index in the range [ start index +
Create a new instance of the given type with the given string. The string is converted to
Sets the value of the given field to the given instance using the given parameter name.
Adds a capture appender to the given logger with the given name.
Remove the appender from the given logger with the given name.
Clear the log entries associated with the given appender.
Parse the model. This method will throw an exception if the model is not valid.
Resolve all proxies in the resource set. If any proxies are resolved they are removed from the
Get the files in the given directory. The files are filtered by the name of the file
Parse the given directory and its sub - directories. If the directory is a file it will
Returns true if the resource is fully resolved false otherwise.
Find all of the elements in the resource set.
Sets the directory where the model files will be stored.
Sets the file extensions.
Sets the list of resource URIs to be used for the model.
Reads the next record from the input stream and splits it into parts and sets the part index
Sets the array parameter to the given array of strings.
Convert the given string to an object of the given type.
Merge the content of the given template into the target file. If the target file is not
Returns the directory where the model files are stored.
Get the template directory.
Write the document to the response.
Starts the web application. This method will be called when the application is started. This method
Configure the window. If fullscreen is set to true the window will be fullscreen.
Print the contents of the given view. If the print flag is set to true then the
Writes the contents of the input stream to the output stream.
Invoke a method on the interface.
Attaches the servlet to the request and response. The servlet will be attached to the response
Detaches this instance from the context.
Returns the cookies associated with this request.
Dumps the current request information to the log. This is useful for debugging and debugging purposes.
Get the list of invocation meters.
Configures this event stream with the given configuration.
Sets the remote host. If the string is null it will be appended to the string.
Returns the value of the parameter with the given name converted to the given type.
Removes the prefix from the given path.
Returns the first parent of dir1 and dir2 or null if dir1 and dir2
Convert absolute path to relative path.
Convert a relative path to an absolute path.
Returns the directory depth of the given file.
Dumps the given throwable to the log and the request context. If the throwable is null then
Sends the given object to the client with the given status code. If the response is committed
Adds a parameterized template model to the list of template models.
Adds a list of parameterized templates to the request.
Initializes the parameterized template model with the given context and variables.
Find references to the given template file in the given template directory.
Enable or disable the save button.
Delete the file or directory.
Deletes the file from the file system. If the file does not exist it will be created
Creates a new instance of the managed class with the given arguments.
Returns an array of all the files in the distribution.
Get a summary of the results.
Get the summary row of a file.
Get the summary row for the given file path.
Create a new instance of a managed class.
Get the setup class.
Returns a list of all the model directories. If the model path is set this will return
Returns a list of all the resources in the model.
Sets the candidates for this query. The candidates will be sorted according to the order in which
Load the configuration from the given input stream. The configuration is loaded using the given loader.
Called when an error occurs. Shows a notification with the error message.
Checks if the formal parameter is an object type.
Reads a JSON object from the servlet request and returns the result as an array of objects.
Read an object from the given input stream. The input stream will be closed after this method
Extract the cell parameter from the fit cell.
Get the hints for this query.
Returns true if the request is an XHR request.
Returns true if the request contains a user - agent header or false if it does not.
If the message is of the same type as the current entity type refresh the entity.
Returns a list of all properties of the given type that are annotated with the given annotation.
Returns the annotation on the given property or null if no such annotation is present.
Log a message to the server s logger.
Perform a whois lookup with the given domain and timeout. If the domain does not exist
has parser for given whois host
Get a managed class from the container. If the class is remotely accessible throw an exception
Get a managed method by name. If the method is remotely accessible throws an exception.
Process not contains exception.
Process the not contains statement.
Serialize the response to the output stream.
Returns the value of the cookie with the given name or null if there is no cookie with
Adds a cookie with the given name and value. The name and value must not be null
Removes the cookie with the given name from the response.
Returns an iterator over the cookies contained in this response.
Returns the target file list producer.
Adds a field of the given type to the constant pool. If the constant pool already contains
Compiles the class into a Java class. If the class is not loaded yet it will be
Verify that the response is the same as the one stored in the tokened image file.
Returns the file name as a string. The file name will be converted to lower case and
Ensure that the URI path ends with a trailing slash.
Get the http servlet request.
Invoke a method on the target object. If the target object is a transactional object the method
Execute the managed method in a mutable transaction. This method is used to execute the managed method
Execute the managed method in an immutable transaction. If the managed method is a read - only
Returns an array of files in the directory that match the filter. If the filter returns null
Returns the last file in the directory. If the directory does not exist throws an exception.
Get the concrete config.
Returns true if the path component starts with the request path component.
Returns a list of factories that are assignable to the given model type. If no factories are
Get the http session for the given key. If there is no session for the given key
Serialize the response to the output stream.
Reads the metadata of the file.
Override this method in order to handle the incoming request. This method should be overridden by subclasses
Tear down the database connection.
This method is called before the application is destroyed. This method is called before the application is
Handles the allowed methods.
Upload the blob to the server.
Delete a file from the remote server.
Extract the column parameters from the given row.
Returns an array of the names of the arguments in this command - line argument set.
Schedules a periodic task for the specified number of milliseconds.
Add a timeout task to the queue. If a task with the same name already exists it
Configure the repository with the given configuration.
Returns the next file in the list. If there are no more files in the list then
Configures the application. This method is called when the application is started. This method is called
Prints welcome message to standard out.
Prints the stopped banner.
Create a chameleon instance from command line arguments.
Register a shutdown hook that will stop the chameleon instance when it is stopped.
Triggers the notification. This method is called when the notification is triggered. If the notification is
Trigger the endpoint. This method is called when the endpoint is about to be triggered.
Insert a new row into the result set and replace the existing row with the new row.
Get the total number of files in the result set. This is the sum of all the
setter for score - sets the score of the feature.
Gets the list of variants of the word.
setter for variants - sets a list of strings representing the variants of the symbol.
getter for question type - gets the type of the question.
setter for question type - sets the type of the question.
getter for token - gets the token associated with this token object.
getter for dep label
setter for dep label - sets the label of the dependency
getter for semanticType - gets the semantic type of the token.
setter for semanticType - sets the semantic type of the token.
Gets the sections of the document.
setter for sections - sets an array of sections of the document.
indexed getter for sections - gets an indexed value -
indexed setter for sections - sets the i th section of the code.
getter for uris - gets the list of URIs of the concept.
setter for uris - sets a list of strings representing the URIs of the concept.
getter for types - gets a reference to the concept s types
setter for types - sets
Gets the target type of the answer.
setter for target type - sets the target type of the answer.
getter for rank - gets the rank of the search result or - 1 if not found.
setter for rank - sets the rank of the search result.
getter for query string
setter for query string - sets
Gets the candidate answers of the search result.
Sets the candidate answers of the search result.
indexed getter for candidate answers - returns the i th candidate answer or null if there is no
indexed setter for candidate answers - sets the i - th candidate answer variant.
getter for query - gets
setter for query - sets
getter for hit list - gets the list of code hit lists.
setter for hit list - sets
indexed getter for hit list - gets an element of type type jcas. jcas. check array
indexed setter for hit list
getter for abstract query - gets the abstract query of the document represented by this node.
setter for abstract query - sets the abstract query of the document to be searched.
getter for id - gets
setter for id - sets
setter for doc id - sets
getter for begin section
setter for beginSection - sets the code offset in the begin section of a passage.
getter for end section
setter for endSection - sets the code offset in the end section of the passage.
getter for beginSection - gets the begin section of the code.
setter for beginSection - sets the name of the section of the code to start at.
getter for end section - gets the end section of the code
setter for endSection - sets the value of the end section of the code.
getter for aspects - gets the code aspects of the passage or null if not present.
setter for aspects - sets the value of the code aspects attribute of the passage.
getter for triple - gets the triple object corresponding to the address of the triple.
setter for triple - sets the value of the triple.
Gets the source relation of the triple.
setter for source relation - sets the source relation of the passage to which the triple is
Gets the subject of the triple.
setter for subject - sets the subject of the triple
getter for predicate - gets the predicate of the triple.
setter for predicate - sets
Gets the value of the is triple of type jcas.
Sets the value of the uri - sets whether or not the triple is an object URI.
getter for operator - gets the operator of a complex query concept.
setter for operator - sets the operator of a complex query concept.
getter for operator args
setter for operator args
getter for concept - gets the concept associated with this mention
Gets the score of the concept.
Gets the text of an answer.
Sets the text of an answer.
getter for id - gets
setter for id - sets
getter for name - gets the name of the concept.
getter for abbreviation - gets the abbreviation of the concept.
setter for abbreviation - sets the abbreviation of the concept.
setter for concept - sets
getter for variants
setter for variants - sets
Gets the list of named entity types.
setter for namedEntityTypes - sets a list of named entity types.
getter for concept type - gets the type of the concept.
setter for conceptType - sets
getter for occurrences - gets the occurrences of the candidate answer or null if the candidate answer is
setter for occurrences - sets the occurrences of the candidate answer to the given value.
getter for concepts - gets the concepts of the query.
setter for concepts - sets
getter for originalText - gets the original text of the concept
setter for originalText - sets the original text of the concept
getter for args - gets the list of arguments for the query.
setter for args - sets
getter for label - gets the label of the element
setter for label - sets
Returns the index of the next clear bit in the set. Returns - 1 if there are
Sets the bit at the given index to true if the bit at that index is set.
Free the given buffer. If the buffer is null nothing is done. If the buffer is
Creates a new instance of the cache value.
Rehashes the given array of objects to a new array of the given size.
Converts the notation to a helped notation string.
Check if the opening and closing braces are the same.
Adds the details of the unit from the given string. The number of the unit will be
Returns the hel representation of the unit.
Adds an element to the monomer notation.
Checks if the given polymer id is a valid polymer id. The polymer id
Checks if the polymerid is a valid polymerid. If it is it is
Checks if a string is a connection with a hydrogen or a hydrogen bond.
Checks if the group id matches the group id in the input string. If the group id
Checks if the given string is repeating. If it s repeating it will return true. Otherwise
Checks if the sequence is a peptide or rna sequence. If the sequence is not a
Convert the value to a JSON string. If the value cannot be converted to a JSON string
Get a simple polymer given a polymer id.
Returns the current grouping notation or null if there is no current grouping.
Returns a string that can be used to generate a helped version of the molecule.
Converts a list of polymers to a hel - notation string.
Returns a connection to the hel of the list of connections. If the list is empty the
Returns a string representation of the groupings in hel notation. If the number of groupings
Converts the annotation to a helped version of the string.
Get a list of polymer and grouping ids.
Returns the polymer with the given id or null if there is no polymer with the
Sets the polymer elements.
Convert a string to a real string.
Sets the annotation.
Sets the number of times a value should be counted. If the value is equal to the
Decide which monomer notation to use based on the given string.
Decide which monomer notation in a group.
Decide which helm entity to use based on the given string.
Returns the value of the interval.
Parses the given test string. The test string must end with a number or a regular expression
Set the RNA value from the input string. The RNA value is a list of
Define the ambiguity.
Get the statistics of the task.
Create a graph from a collection of edges.
Creates a graph from the given nodes and edges.
Initializes the internal list of incoming paths. This method is thread - safe and should only be
Returns a list of all nodes in the graph sorted by reachability.
Subscribes to the given pattern with the given class and method name.
Subscribes to the server and returns the number of events that match the given pattern.
Unsubscribes from a pattern.
This method is called when a request is received from the server. This method is used to
Send a SYNC command to the server. This command is used to send a SYNC
Poll for a response or return false if there are no more responses or the timeout is reached
Send a shutdown message with the given reason.
Throws the given throwable if it requires non - local handling. Otherwise returns the given throwable.
Unlocks the given run state. If the old state is the same as the new state
Creates a new worker thread. If a worker thread is created it will be deregistered.
Try to add a worker to the pool. If the worker is already in the pool it
Register a new worker thread in the work queue. The worker thread will be started when the
Deregisters a worker thread. If the worker thread is null then the worker thread is
This method is called by the worker threads to signal that a work has been queued to be
Starts a worker thread. The worker thread is run in a separate thread. The worker thread
Wait for a work to be done. If the queue is null or the queue is full
Returns the common submitter queue for the current thread or null if there is no common queue
Completes the given task with the given number of tasks. If there are too many tasks
Submits a task to the queue. The task will be executed in the order they were
Make a common join pool. This method is intended to be called from the main thread.
Returns a value or throws an exception if the thread is interrupted or the timeout is reached.
Builds a string from the given code.
Get the statistics for all workers in the pool.
Creates a new array with the given elements.
Reverses the order of the elements in this list.
Returns true if all of the elements in the collection pass the predicate ; false otherwise.
Folds the elements of the given collection into the given value using the given function.
Folds the elements of the given collection to the given value using the given function.
Push a task onto the tail of the queue.
Creates an instance from a nullable value. If the value is null an empty instance is returned
Creates an array from the given keys and values.
Returns an instance of a that is equivalent to the given equality object. If the equality object
Creates an array from the given keys and values. The returned array will be updated with the
Creates an object from the given keys and values.
Returns a set of the keys contained in this map.
Normalizes the resource name to include the protocol and the last part of the resource name.
Marshals a value to a string. If the value is a string it will be converted
Returns a sub - sequence of the current string. The start and end positions are inclusive.
Returns a binary search implementation for the given list.
Returns a binary search implementation for the given list using the given comparator.
Sends the given email message to the server. If the message is asynchronous the message will be
Binds the given route to the given application accept id and default version. The default version is
Binds a handler to a specific method. The method will be matched against the default version.
Returns true if the tag body has the given role or false if the tag body does not
Convert a long to an int.
Removes duplicate strings from the given string array. If the array is empty returns the original array
Returns a string that is like the given string.
Run the task. If the task is in an illegal state it will throw an exception.
Checks if the given password matches the given user and stores the result in the response.
Get the login user from the request.
Checks the password against the given salt and plain password. If the password matches the salt the
Saves a member in the cookie. If save is true the member will be deleted from the
Returns the login key for the given user IP and user agent.
Returns the user for the given uuid or null if the uuid is not valid.
Forward the request to the specified path.
Returns the value of a request parameter as a long or the default value if the parameter is
Log a debug message. If record is true log the message with the caller s class name
Get information about the caller at the given level.
Convert a char array to a simple byte array.
Convert a character sequence to a simple byte array.
Convert a byte array to a simple char array.
Convert a character sequence to an ascii byte array.
Lookup the locale data for the given code. If no data exists for the given code create
Schedules the execution of the callable in the given number of seconds. If the callable returns a
Crops the given image to a new location. The original image will be copied to the
Schedules the given invocation for the given amount of milliseconds. The invocation will be executed in the
Invoke the given direct invocation in a separate thread. This method will retry the invocation if it
Get rest operations.
Renders an error response in JSON format.
Renders an AJAX forbidden response with the given message and data.
Render the given template using the current template s attributes and return the result as a string.
Parse the path from the current action path and the url. If the current action path is
Renders the data tables for the given model.
Renders empty data tables.
Sets the list of items that should be displayed in the combo box.
Sends a redirect response to the given web context.
Returns a list of the type of the given injector. The injector must be a parent injector
Get the current method name.
Compacts the system memory.
Propagates the given metrics to the local metrics collection. If the local metrics collection is null
Encodes a string into a byte array. The byte array will be encoded as UTF - 8
Copy data from the input stream to the output stream.
Copy a number of bytes from the input stream to the output stream.
Copy the contents of the input stream to the output writer using the default encoding.
Copy the contents of the input stream to the output stream. The output stream will be flushed
Copy a number of characters from the input stream to the output stream.
Copies the contents of the given reader stream to the given output stream using the default encoding.
Copy the contents of the input stream to the output stream using the given encoding.
Compares two input streams and returns true if they are the same or false if they are the
Returns true if the two input streams are the same and false if they are the same.
Apply the stage to the given io. If the stage returns null then the io is returned
Returns the SQL for the given group and SQL ID.
Unmarshals the given XML string into the given class.
Unzips a file or directory into a file or directory specified by the patterns parameter.
Creates a new permission dialog fragment with the given bean and request code. The bean parameter is
Sets the key listener to be called when the user presses the enter key.
Registers a converter for the given class and adds it to the list of converters to be used
Returns true if the given value matches the given regular expression.
Returns true if the given string is a mobile string. If the string is a mobile string
Checks if the given value is a phone number.
Checks if the given string is a birth day. If the string is not a birth day
Checks if the given string is a URL or not. The string is case insensitive.
This is the main entry point for the web server. It is the main entry point for
Encodes the given string to base64 using the UTF - 8 encoding.
Decodes the given base64 string into a byte array. The UTF - 8 encoding is ignored
Converts a hexadecimal string to a byte array.
Read UTF - 8 properties from the given input stream. The input stream will be closed after
Read the content of an input stream as a string. The stream is closed after this method
Read the content of a file as a string.
Writes the given byte array to the given file. The data is written to the given file
Copy a directory from source to target. If target does not exist it will be created.
Serialize a DOM document to a string.
Get the document from the given file. If an error occurs during parsing null is returned.
Creates a document from the given XML string. If an error occurs during parsing null is returned
Get a document from the given input stream. If an error occurs during parsing null is returned
Returns true if the signature is valid or false if it is invalid. The public key is
Sign a document with a private key and public key.
Returns true if the given class loader is the same as the given class loader.
Returns true if the given class is an array and its component type is a primitive type.
Checks if the given class is an array and its component type is a primitive wrapper.
Resolves a primitive type if it is a primitive type. If it is a primitive type it
Returns true if the lhs type is assignable from the rhs type. If the lhs type is
Checks if the given value is assignable to the given type.
Returns an array of all interfaces of the given object.
Get all interfaces of the given object as a set.
Write the URL to a temp file.
Returns a map of the variables in the given URI. If the URI does not match the
Add a permission to the bean.
Binds the given implementation to the given extension point. The implementation will be loaded using the given
Returns a built - in object of the given type.
Returns a primitive value of the given type.
Convert the given object to the given type. If an exception occurs log it and return null
Convert user defined value to the specified type. If the user defined value is assignable to the
Returns a query parameter of the given type with the given name. If the parameter does not
Defines a parameter that retrieves the value of the cookie with the given name if it exists.
Creates a parameter that returns the value of the named session attribute. If the attribute does not
Initialize the data source.
Adds a set parameter to the query.
Adds a parameter to the query that must be set to the given value.
Show a permission dialog.
Returns true if all values have been granted for the given permission map.
Checks if any value is denied by the given permission map.
Finds all records matching the given SQL query. The query will return a list of records.
Finds a single record from the database.
Returns true if the value of the given column is greater than or equal to or equal to
Checks if the given method declares an exception of the given type.
Process the queue and return the first non - null soft value.
Puts a new key - value pair into the map. If the map already contains a mapping
Returns true if the string matches the given pattern. If the string does not match the pattern
Read the command - line arguments and return an instance of the given class. If the command
Returns the protobuf entity annotation for the given class or null if the class is not annotated with
Returns true if the given class is a protobuf entity or false if it is not.
Get all protbuf fields for a given class.
Gets the protobuf getter for the given attribute and field. The field name is the canonical name
Returns the POJO setter for the given protobuf attribute and field.
Get the thread - local mapper. If the thread - local mapper has not been initialized yet
Get the json factory.
Convert an object to a JSON string.
Sets the borders of this rectangle to the specified values. The borders will be placed at the
Get a user record from the database. If the record does not exist an exception is thrown
Copy out the attributes of the target object.
Copy out the attributes from the jmx attribute values to the target object.
Creates a new frame with the specified title and content.
Save the access token in the session.
Get the access token from the cache. If no token is found null will be returned.
Returns the default class loader for the current thread or the system class loader if none is available
Returns the URL of the named resource in the given class loader or the system resource if none
Get a resource as an input stream.
Get class as stream.
Initializes this instance with the values from the given uri.
Sets the scheme of this URI from the given URI specification. The scheme is assumed to be
Initialize the path with the given URI specification.
Sets the scheme of the URI.
Sets the userinfo.
Sets the host component of the URI. The host component must be a well formed address.
Set the port. If the port is - 1 an exception is thrown. If the port
append a string to the path. p add to path must start with str or end with
Sets the query string to the given string. If the given string is not a valid URI
Sets the fragment of the URI.
Returns the URI part of the URI.
Create a prepared statement from an iterator.
This method is called when the applet is created. This method is called when the applet is
get the muffin of the given param. return null if the param is not found
set muffin.
Returns the contents of the clipboard if it is enabled or null if it is disabled.
Sets the contents of the clipboard to the given transferable object. If the object is null
Load all services of a given type.
Set the service parameters in the given operation.
Get the parameters of the given parametrized operation as a hash map.
Find a parmetrized service by its id.
Finds the first instance of the given class in the given collection. If no instance is found
Parse the query response and convert it to the given class.
Returns an iterator over the elements in the buffer.
Returns the encoding of the given XML string or null if it is not a valid XML string
Creates a new proxy instance for the given connection.
Gets the authorization from the given authorization URL.
Visit a package declaration. This method will be called for every node in the tree that is
Visit a class declaration. This method will be called for every node in the tree that is
Visit an executable declaration. This method will be called for every node in the tree that is
Gets an option from a map of properties.
Returns a declaration filter that only accepts declarations that are contained in the given collection of modifiers.
Returns a declaration filter that only accepts declarations of the given type.
Creates a new declaration filter that returns true if this declaration filter matches the given declaration filter.
Creates a new declaration filter that returns true if this declaration filter matches the given declaration filter.
Returns the map. If the map has not been initialized yet it will be initialized and returned
Make the given constructor accessible if it is not public or the declaring class is not public.
Query the database for the given object. The object name must match the name of the object
Returns a copy of the origin with all slashes replaced with hyphens replaced with hyphens.
Convert a byte array to a hex string.
Get the list of indexes for the given name. Throws an exception if the name is not
Parse a named SQL statement into a string. The name map is a map of column names
Convert a collection of non - protobufs to protobufs.
Sets the value of a field in a builder.
Sets the value of a field in the given POJO using the given setter and attribute.
Returns true if the file should be included in the result. If the file does not have
Creates a new instance of the result set. The returned instance is proxied to the specified class
Convert a list of labels to a map of expected labels and a list of unused labels.
Returns the generic superclass of the given type at the given index.
Polls the queue until it is empty. If the queue is empty this method blocks until
Poll the objects in the queue and return true if all objects have been polled.
Returns the field with the given name from the given class or any of its super classes.
Get the declared methods of the given class including the super classes.
Get the declared method by name and parameter types. If the method is not found in the
Returns an array of all methods that are annotated with the given annotation. If the class is
Returns an array of constructor fields that are annotated with the given annotation.
Dumps a single byte to the standard output.
Returns the index of the first num characters in substr starting from index starting at index starting at
Removes all characters from a string that are not contained in the given string.
Clean the state of the state machine. This is used to clean up the state of the
Initialize the audit.
Initialize the message queue.
Initialize password validator.
Initialize password authenticator.
Resolve locale code.
Lookup the locale info for the given locale code. If no info exists for the given code
Creates a new statement instance for the given statement. The statement instance will be proxied to the
Removes all of the elements from the list and sets the size to the number of elements.
Pops an element off the stack and returns it. If the stack is empty an empty
Make input stream.
Parse the command line arguments into a properties object. If the properties object is null a new
Returns true if the given tokens match the given patterns. The number of tokens is assumed to
Move the cursor to the given position.
Returns true if this rectangle encloses the other rectangle.
Returns true if this rectangle contains the given point.
Returns the intersection of this rectangular with the other. If the two rectangles do not
Returns the union of this rectangular and the other rectangular.
Returns a new rectangular with the x - component of this and the x - component of
Returns a new rectangular with the y - component of this and the y - component of
Returns the offset of a column in the table. If the column is at the end of
Returns the offset of the specified row in the matrix. If the specified row is greater than
Get the bounds of a cell relative to the current cell.
Calculates the number of columns in the table based on the number of columns in the table.
Calculates the number of rows in the table based on the number of columns in the table.
Unwrap a throwable. If the throwable is an invocation target exception or undeclared throwable the
Entry point for the application. This is the main method of the application. It starts the
This method is called when a new line is detected. This method is called when a new
Copies and resizes the code buffer. This method is called when the code buffer has been
This method is called at the beginning of the constructor. It is called at the beginning of
Returns a copy of this query parameter with only the specified elements.
Adds a new child node to the end of the tree. The child node will be added
Clear the children of this node.
Returns the next element in the list.
Adds instructions to this node. The instructions will be added to the parent node of this node
Adds the given instructions to the parent. If the parent has already been added to the parent
This method is called when a property is changed. It is called when a property is changed
Register a new work panel. This method is called when a new work panel is added to
Update the flags of all components in the component map. This method is called when the flags
Creates a new decimal type with the specified precision and scale and minimum and maximum values.
Returns true if the term is a variable and is not bound or anonymous.
Returns a list of instructions that can be used to optimize the given list of instructions.
Compares two collections and returns the index of the first element in c1 to the index of
This method is called when the servlet is invoked. It logs the message at the fine level
Start the tag. This method is called when the start of a tag is encountered.
Renders a button.
Resets the state machine to train and sets the input and output properties to false.
Initializes the learning engine. This method is called by the learning engine when the learning engine is
Returns the value associated with the given key or null if there is no value associated with the
Returns the index of the given key.
Sets the value at the given index to the given value. If the index is out of
Remove the value associated with the given key from the map.
Remove the value at the given index.
Returns true if the object has a property with the given name. If the object has a
Set the value of a property on the given callee object.
Get the value of a property on a given object.
Checks if the given wrapper type is assignable from the given primitive type.
Initialize this object with the given callee object. This method is called when the callee object is
Decide the decision tree based on the current state of the decision tree. The decision tree
Initializes the lookup table with the given decision tree. This method is called when the lookup table
Returns a list of variables that match the query and the query statement.
Unify the left and right terms. The left and right terms are lists of variables.
Compiles the given query clause into the query source code.
Finds the maximum number of arguments in a clause.
Allocates permanent query registers for the given term clause.
Gathers position and occurrence information from the given clause.
Display the compiled predicate.
Display the compiled query.
Creates a string from a byte buffer and the length of the string.
Returns the value of the property as a string. If the property is not a string it
Sets the value of the field to the given string value.
Read the term and convert it to the appropriate type and call the appropriate handler for it.
Checks if the given class exists and is loadable.
Checks if the given class is a sub type of the given parent class.
Checks if child is a sub type of parent.
Checks if the given class is a sub type of the given class.
Returns a class instance for the given class name. If the class is not found an exception
Creates a new instance of the given class.
Creates a new instance of the given class with the given arguments.
Calls the given method with the given parameters overriding any illegal access. This method is intended to
Call a method on an object with an array of parameters.
Call a method with the given parameters.
Returns the constructor for the given class and arguments. If the class does not have a constructor
Returns a set of property types that match the given property name.
Creates a new transactional queue from a java. util. queue. This method is intended to
Creates a transactional re - queue. The re - queue will be re - added to the
Get the type of the given object.
Reset the state of the cache to its initial state. This method is called when the cache
Create a new instance of the type.
Add a supported time zone to the list of supported time zones.
Add a timezone to the dimension table. If the name is an alias it will be added
Adds a dimension to the database.
Returns a set of free variables that match the given query.
Searches for free non anonymous variables that match the given query.
Compares two nodes based on their heuristics. This method is used to compare two nodes
Writes the given object to the given file. If the file does not exist it will be
Read a string from a buffered input stream.
Create a new search node with the given state.
Generate a trace trace with the given number of indentation. Delta can be negative to increase the
Returns true if the term is the last body in the arg position.
Choose the best property to use based on the given examples and input properties.
Create a new functor with the given name and arguments.
Creates a new variable with the given name.
Execute the request with error handling. This is the main entry point for the forward action.
Returns the element at the given index in the list or null if there is no element at
Sets the texture of the image. The texture can be a gradient or a color
Override paint to enable double buffering.
Creates a buffered image of the given size and image type.
Create a binary image with the given width and height and pixel bits.
Create a buffered image of the specified width and height with the specified pixel bits.
Set the queue search algorithm. This method is called when the queue is full. The algorithm
The main method of the program. This is the main method of the program. It is
Returns the clause of the expression. The expression is evaluated in the context of the expression.
Parse a list of terms and return them as a list of terms.
Consumes a functor and returns it and its source code position.
Consumes a variable and returns it as a term. This is the name of the variable
Integer literal.
Parse a floating point literal and return it as a double.
Parse a string literal and return the result as a term object.
Consumes a directive from the source code and returns it or null if there are no more
Intern an operator with the given name and associativity. If the associativity is
Initializes the built - ins.
Consumes the next token of the given kind. If the next token is not of the
Consumes the next token of the given kind. If the next token is of the given
This method is called when the application is bound to the application. It is called by the
Rolls back the transaction to the previous state. This method is called when the transaction is
Collect all elements from the iterator into the target collection.
Converts a time in milliseconds to a time of day in milliseconds.
Convert ticks to years.
Returns the given ticks with the given number of hours set to the given number of hours.
Returns the given ticks with the given number of minutes set to the given value.
Returns the given ticks with the given number of seconds set to the given value.
Returns the ticks in milliseconds with the year set to the given value.
Returns the ticks in milliseconds with the month set to the given value.
Returns the given ticks with the given date set to the given date. The ticks will be
Returns the start of the given year in milliseconds.
Read a block of bytes from the source stream.
Returns the entry for the given key or null if there is no such entry.
Returns the cuckoo entry for the given key or null if there is no such key
Rehashes the hash table so that it can be rehashed later.
This method is called when an action is performed. It is called when an action is performed
Sets the next available item in the queue.
Sets whether or not the previous available value is available.
Sets the finished flag to true if there is data available in the queue or false if there
Get an instance of the WAM library. If the library cannot be found an exception is
Returns an iterator over the set of variables in this scope.
Returns the expected number of probabilities for the given probabilities.
Returns the probability for a given set of counts. The probability is the sum of the probabilities
Set the ticks.
This method is called by the servlet to perform the action. It is called by the servlet
Creates a new url object from the given string.
Returns the request info as a string. The string will be encoded as UTF - 8.
Returns a string representation of the headers of the current request. The headers are converted to HTML
Get all the cookies from the request.
Returns the parameters of the current request as an HTML string. The parameters are returned as a
Returns the request scope as a string.
Returns the current page scope as a string. The page scope is defined by the page context
Returns the session scope as an HTML string. The session scope is defined by the servlet context
Get the application scope.
Returns the principal of the user.
start tag.
Returns the HTML representation of the given property name and values. The property name is the property
Sets the current screen state.
Walks the tree starting at the root of the tree starting at the root of the tree
Compares two nodes based on their f - value.
Updates the internal state of the WAM with the given WAM registers. The WAM
Notifies all registered listeners that a set of changes have occurred.
Leave a clause. This method is called when a clause is left in the query.
Returns true if the current context is in the top level functor false otherwise.
Sets the arguments for this term.
Returns the fixity of this transformation.
Returns true if this transformation is an infix transformation.
Compare this object to the given object. The object must be of the same type as this
This method is called when a property is changed. This method is called when a property is
Register a work flow controller.
Returns an attribute factory for the given class. The factory will return the default factory for the
Create a component factory for the given class name.
Returns the storage cell for this variable in this context or null if there is no storage cell
Returns true if this variable is bound to the current context.
Set a column s attributes.
Sets the attributes for the given row. If the row does not exist it will be created
Returns the column attribute with the given index or null if the index is out of range.
Get the row attribute from the row attribute set or null if the row is out of range
Insert a new cell into the attribute set at the specified coordinates.
Create a new time - only type with the given name and minimum and maximum values.
Create a new string pattern type with the given name maximum length and pattern.
Returns true if the given character sequence is an instance of this class. Otherwise returns false.
Creates the initial context for the term.
Updates the registers of this WAM with the values of the given WAM layout.
Get the value of this variable.
Finds the goal node in the path of the search.
Returns a list of items in the cache with a block size of the specified number of items
Get the properties for the given resource.
Set the rate of the sound to be played at the given hertz.
Read data from the remote stream into the given byte array.
Skips the specified number of bytes from the current position in the source stream.
Gathers the disjunctions from a list of expressions.
Reads an int from a byte array at a specific offset in big - endian order.
Writes an int value to a byte array at a specific offset in big - endian order.
Writes a 24 bit int to a byte array at a specific offset in big - endian order
Read a 24 bit integer from a byte array at a specific offset in big - endian order
Read a short from a byte array at a specific offset.
Writes a short value to a byte array at a specific offset in big - endian order.
Get the child state of the current node that matches the given operator or null if there is
Returns an iterator over the valid operators in the tree.
Returns the id of the node. This is the id of the node in the cluster.
Gets the value of the property.
Sets the value of the field to the given value.
Converts a string to an array of strings using the given delimiter.
Converts an array of strings to a list of strings with the given delimiter.
Converts a camel case name to a camel case name. The camel case is the first letter
List the handlers in the given buffer. The buffer is appended to the given string buffer.
Resolve the call point for the given functor name.
Add a code address to the symbol table. The symbol table is used to store the code
Returns true if this category is a sub category of the given category.
Returns the id of the node. This is the id of the node in the cluster.
Get the value at the specified level.
Returns the last value in the path.
Writes an object to the given output stream.
Reads an object from the given input stream.
Computes the h - value of a heuristic search node in the puzzle. This is the
Returns the modulo of the given number with the given bucket size. If c is less than
Adds a user readable error message to the list of errors.
Writes a string to the output stream.
Classify the given state into a map of attribute names and their ordinal values.
Compares two elements according to the partial ordering. If the partial ordering is false the comparison is
Returns an iterator over the elements in this stream.
Calculate the logarithm of an integer base 2. This is the base of the logarithm
Convert a base - 2 integer to the logarithm of the integer.
Returns the logarithm of the given value in base 10 for version 2.
Returns the logarithm of the given value in base 10 for version 3.
Returns the base 10 logarithm of the given value in the range [ 0 num ).
Returns the logarithm of the given value in base 10 v2.
Returns the number of characters that would be needed to represent the given integer value.
Get the number of characters in a long value.
Returns the number of characters needed to represent the given decimal value. If the given value is
Sets the head of the list of instructions. The instructions are added to the end of the
Emmit code to the wam machine. This method is called when the wam machine
Sets the current screen.
Returns true if the expression evaluates to true. If the expression evaluates to false it returns false
Returns an iterator for the given key. The base is the base key the modifier is the
Create the array of properties.
Set the rate of the sound to be played at the given hertz.
Evaluate the type of the given number and return the result as a numeric type.
Find the properties of the bean.
Get the properties using the system property.
Get the properties using the classpath.
Get the properties from the current working directory.
Leave a functor in the body of a clause or a functor in a clause.
Get the value of this term.
Sets the substitution term to be applied to this expression.
Creates a queue with the given number of nodes. The queue will be sorted according to the
Clean up any resources associated with this object. This is called when the object is no longer
Append a logging event to the log file.
Starts the connector thread. This method is called when the connector thread is started. This method
Initialize the printers.
Commit the current transaction. This method should be called after the transaction has been committed.
Rolls back the transaction associated with this object. This method is called when the transaction is
Request a write operation for the given transaction.
Adds a cached operation to the cache. If the cache does not exist it will be created
Acquires a global write lock for the given transaction id. If the lock is already acquired
Release the global write lock.
Enlist the current transaction with the session associated with the current transaction.
Enter a new rule set. This method is called when a new rule set is entered.
Inserts the specified element at the tail of this queue waiting up to the specified wait time for
Retrieves an element from the queue waiting up to the specified wait time. If the queue is
Put an element into the queue. If the queue is full the element will be added to
Returns the next object from the source.
Get the value of the named property as a boolean.
Returns the value of the named property as an integer or null if the property does not exist
Returns the value of the named property as a long or null if the property does not exist
Call a mixin with the given arguments. If no arguments are given the default argument list is
Sets up the visitor to visit the addition of parameters and rules.
Backtrack the current state of the given node until it reaches the last unexamined
Retrieve the code associated with a given call point. The code is stored in a byte array
Execute the query and extract the bindings from the result.
Decode the heap. This method is used to decode the heap into a term that can be
Capture the current state of the event. This method is called when the event is captured.
Restores the value of this field from the given object. This method does nothing if the
Get the value of an attribute of a class. This method is used to get the value
Put an object into the hash map.
Returns a collection of all field names of the given class.
Executes the mojo. If the mojo fails the exception will be thrown. If the
Inserts an element into the queue. If the queue is full the element is added to the
Creates a new search node with the given state.
Creates a queue with the given number of nodes. The queue will be sorted according to the
Creates a simple walker with a depth first traversal. The visitor will be called for each term
Creates a walker with a goal predicate.
Creates a walker that traverses the term tree starting from the current position in the tree.
Creates a walker with the given goal predicate and the given visitor. The visitor will visit the
Returns a term walker that traverses a positional term after applying the given visitor to it.
Get the properties from the input stream.
Get the properties from the given file.
Get the properties of the given URL.
Get properties from a file or directory.
Compute the grid size.
Initialize the font metrics if not already done. This is done by reading the font metrics from
Adds a property change listener to the list of listeners that will be notified when a property changes
Add a property change listener to the list of listeners that will be notified when a property changes
Remove a listener from the list of listeners for a given property.
Fires a property change event.
Create a new instance of the class with the given name and minimum and maximum values.
Fade the timer with the given name. If the group does not exist it will be
Shows a horizontal bar on the screen.
Show the left bar on the left side of the dialog.
Show the right bar on the left side of the dialog.
Sanitize all radio controls in the given form.
Waits for the specified time to elapse and throws an exception if interrupted while waiting for the
Waits for the given time to elapse and throws an exception if the timeout is reached.
Executes the mojo. If the mojo fails the exception will be thrown. If the
Appends the classpath elements to the given command line.
Create a new instance of this type.
Print introduction to System. out.
Initialize the command line reader.
Evaluate the sentence. If the sentence is a query then evaluate the query. If the sentence
Evaluate the query and return the result.
Returns the multi type data for the given boolean value.
Get the multi type data for the given byte.
Returns the multi type data for the given character.
Get the multi type data for a short.
Get the multi type data for the given index.
Get the multi type data for the given long.
Get the multi type data for a floating point value.
Get the multi - type data for the given double.
Create a new multi type data object with the given string. The string is expected to be
Get the multi type data for the given object.
Sets the value of the named attribute in the current page context.
Clear the range from the given key to the end of the range. If the key is
Expands a key in the hash table. This is used to ensure that the key is
Insert a character at the specified position.
Compares two nodes based on their cost. This method is used to compare two nodes based on
Parse the operators in the given terms and return the result as a new term.
Get the operator with the given fixity.
Check and resolve a candidate symbol to one of the given fixities. If the candidate symbol
Make a new node in the tree with the given successor. If the successor is exhaust
Returns a string containing all the errors that occurred during the execution of the validation process.
Get the options as a string in the form of a string that can be passed to the
Returns the usage string for this option.
Adds trailing pairs to the given properties object.
Add options to a properties object.
Adds an option to the command line.
Check if the argument matches the format of the command line option.
Compares two iterators and returns an error message if they are not. The mapping function is applied
Returns a list of options for this tag. The list includes the tag name stemmer and
Returns an array of the options of this tokenizer.
Sets the selected stemmer.
Get the actual stemmer.
Returns the stemmed version of the given word or null if the word is not stemmed
Entry point for the stemmer script.
Create an instance of this type with the given name and minimum and maximum values.
Reset the state of the cache to its initial state. This method is called when the cache
Get the trace string for the current environment frame.
Trace the choice frame at the current position in the data buffer.
Call the given function with the given arguments and permissions.
Returns the index of the next stack frame in the stack trace.
This method is used to backtrack the current state of the state machine. This method is
Truncate the instruction at the given address. This is used to make sure that the instruction is
Unwinds the trail of a pair of integers.
Tidy up the trail for the next iteration.
Returns true if the two integers are the same and false if they are the same.
Unify a const value.
Print a slot in the stack. If the slot is on the stack and the mode is
Get a random start puzzle state.
Returns true if the given puzzle state is solvable to the given puzzle state.
Get the child puzzle state for the given operator.
Returns an iterator over the valid operators.
Returns a string representation of the board with all the characters in the board replaced with the string
Swaps the coordinates of the two specified tiles.
Convert a string to a list of characters.
Convert a puzzle state char list to a puzzle state char list.
Converts a log record to a log4j message.
Convert log4j level to org. apache. log4j. level. level.
Adds an element to the requeue queue. If the queue is full the element will be
Requeue an element to be requeued. If the element is already requeued
Increments the size of the record by one and increases the count by one.
Decrements the size of the record by one and increases the count.
Signal on size crossing.
Returns an enumeration of the given name. If the given name is the same as the current
Returns the list of bindings for the given name. If the name is the same as the
Add a new environment variable with the given name and value. If the variable already exists it
Remove the value of the given property from the environment.
Run the garbage collector.
literal | color | multi dimension | string
Resolve a mixin reference with the given name and arguments. If the parser translation is not enabled
Push a variable reference onto the stack.
Sets the maximum height of a row.
Updates the maximum width of a column. If the column is already at the maximum width the
Make a new node with the given successor. The successor is the successor of the current node
This method is called by the servlet to execute the action. It is called by the servlet
Substitute the built - in term in the given clause with the symbol table.
Initialise the symbol table with the term clause.
Checks the top level of a clause. The top level check is done by walking the
Converts a list of terms to a string. This method is used to convert a list of
Returns true if the two numbers are of the same type as the first and the second.
Sets the state to running if it is the initial state. If it is the initial state
Signals that the server is shutting down. This method is called when the server is shutting down
Mark the service as terminated. If the service is not running or shutdown the service will be
Inserts an element into the queue. If the queue is full the element is added to the
Returns - 1 if node1 is less than node2 - 1 if node2 is greater
Inserts a new node at the end of the list.
Restarts the application. This method is called when the application is about to be restarted.
Returns a set of objects that satisfy the given search method.
Returns a bag of objects that match the given search method.
Finds all solutions using the given search method and adds them to the given collection.
Moves the cursor to the next item in the sequence. If there are no more items in
Restores the values of an object from a map of field names to their corresponding values.
Returns the value of the given property of the given class. If the property does not exist
Put a multi - valued property into the map. The value is converted to a multi -
Put a property of a given class to a given value. If the property does not exist
Captures the current state of the state machine. If the state machine is in a state
Removes and returns the last element in the list. If the list is empty null is returned
Converts the given modifiers to a string.
Convert a string to an integer.
Convert a string to a date.
Returns true if the string s is a date.
Returns true if the string s is a time string false otherwise.
Checks if a string is a date time.
Returns a token source for the given string. The string is tokenized using the given tokenizer.
get token source for given file
Creates a token source for the given input stream. The input stream must contain at least num
Returns true if the instruction is a constant.
Returns true if the instruction is a variable in the instruction table. If the instruction is a
Checks if the instruction is a non - argument instruction.
Returns an iterator over the children of this node. If reverse is set to true the children
Returns the term at the given index or null if the index is out of bounds.
Returns an iterator over the children of this node.
Returns the string representation of the arguments.
Retrieve a summary of the results of a query.
Retrieve records from the database using the specified measure appender. The records are returned in the specified
Execute a query with the given query builder and return the results as a list of lists.
Emits the given code buffer with the given machine. The code buffer is assumed to be
Sets the basic type of the given class.
Consults the source code of the given input stream.
Print a variable binding. This is used to print a variable binding in the form of a
Expands a set of solutions into a set of maps.
Runs the reader. If the reader is at the end of the stream this method will block
Reads the document stream until the stream is closed. If the stream is closed this method will
Returns the current time. If the current time is greater than the last time the next time
Returns a unique identifier.
Update the track info.
Update the play info.
Render the music output. This method is called when the music output is ready to be play
Handle resource request.
Submits the event to the thread pool. If the thread is already running it will be
Fire the start music request.
Initializes the reader thread and sets the done flag to true. The reader thread will be started
Starts the XMPP reader thread.
This method is called when the server shuts down. It should be called when the server
Reset the parser to the initial state.
Parse packets from the inner reader and process them. If the connection is closed it will be
Process a single packet. If the packet is null nothing is done.
Set the command line option.
Create a chat for the given user. The chat will be sent to the given JID
Internalizes this content manager with the given content manager and read - only flag.
Resets the contents of this object to the given map. If the object is read - only
Sets the value of a property. If the property already exists it is overwritten. If the
Add a filter to the packet.
Process a servlet request. If the request is a multipart upload the file upload process is called
Reset all properties to their default values. This is useful when you want to reset the properties
Initialize the writer thread. This method is called when the writer thread is started.
Sends a packet to the client.
Moves to the next packet in the queue.
Open the stream for writing to the stream writer.
Returns a list of all the information about the type and descriptors.
Returns true if the given descriptor is a member of this class or if the given descriptor is
Adds a callback to be called when a new event is received.
Shuts down the executor and cancels the timer if there is one.
Returns true if the given entry is valid for the current thread. If auto commit is enabled
Returns the given key if it is null otherwise returns it. If the key is null returns
Returns true if x == y or x == y or x == y or x == y
Returns the entry associated with the given key or null if no such entry exists.
Resizes the table to a new size. If the new capacity is the same as the
Inserts all of the keys in the given map into this map. The size of the map
Removes the value associated with the given key. If no value is associated with the key null
Removes the entry associated with the given key. If no such entry exists an exception is thrown
Removes an entry from the hash table. If the object is not an entry null is returned
Adds an entry to the hash table. If auto commit is enabled the size of the table
Create a delegate map with the given keys and augmentation function.
Convert a binary string into an XML attrib string.
Encodes a byte array into a hexadecimal string.
Encodes the given string into Base64.
Encodes the given byte array into a Base64 string.
Iterate over the elements in the given collection and return the number of elements that were iterated over
Sets the track selector.
Sets the controller that will be called when a jump is requested. The controller will be called
Sets whether the playback is changeable or not. The controller will be called when the playback
Sets the volume controller to be used by this volume manager. If the volume manager is null
Broadcast a list of playlists that can be played by the user.
Handle command resources.
Handles a volume change. If the volume is not present an error is generated and the player
Handles a jump.
Handle a select track.
Returns the thread cache for the given name creating it if it doesn t exist.
Returns the request cache for the given name creating it if it doesn t exist.
Get the alt field name from the field name and the stream id.
Returns the path to the shard with the given id.
Adapts the given object to a session.
Calls a method with the given name with the given arguments on the given target object. If
Delete a content tree from the content manager.
Update a single entity in the database. If no properties are given the entity will be updated
Sets the ping interval. If the new ping interval is the same as the current ping interval
Schedule a periodic ping server task. If the interval is greater than or equal to the number
Adds an array of options to the application.
Returns true if the given option is in the list of used options. If the option is
Parse the command line.
Prints the command line help for the given app.
Parse the command - line arguments. If an exception occurs print it and return - 1.
Initializes the connection to the XMPP server. This method is called at the beginning of the connection
Start the TLS handshake.
Returns the compression handler if any. If no compression handler is found null is returned.
Send the request stream to the client. This method is called when the client sends a request
Start stream compression.
Notifies the client that a connection error has occurred. This method is called when a connection
Notify the client that a connection has been reconnected. This method is called when the client
Registers a SASL mechanism with the given name.
Get the registered SASL implementations.
Returns the output plugin for the given list of identifications. If no output plugin has been
Log an informational message and a throwable at the INFO level.
Log a message and throwable at the ERROR level.
Log a message to the given output stream with the given prefix. If the throwable is null
Create a new start event request with the given identification.
Creates a start event with the given identification source and whether or not java output is used.
Notifies the listeners that a string is about to be written.
Returns true if the given resource provides the given resource. If the given resource does not provide
Checks if the given source id is contained in the list of resources.
Returns true if the given list contains any of the given resources.
Provide a list of resources for a given array of resource ids.
Get the object from the cache. If the object doesn t exist in the cache it will
Returns the cache key for the given key space column family and key. If the client implements
Remove the key from the cache if it exists. If it does not remove it from the
Put a value into the cache. If the value is already in the cache it will be
Returns a map of URI - > String mapping of file names to their relative paths.
Include a file or directory in the jar. If the file is a directory it will be
Includes the given file into the map. If the file is a directory it will be included
Add a SASL mech to the list of supported SASL mechs.
Add a collection of SASL mechs.
Create the debug information for debugging purposes.
Activates the configuration. This method is called when the configuration has been changed.
Register standard event listeners.
Register an event listener. The listener will be notified when an event is received.
Register a new event id with a description key and value. If the event id already exists
do with a lock on the given channel and invoke consumer with the lock on the channel.
Returns true if the event can be run.
Creates a new dse session with the given cluster and keyspace.
Create a player error with the given source and error text.
Start playing a track. If the player isn t present or the player is not using java
Stop playing the music.
Send a command to the current player.
Create a playlist request.
Create a new broadcaster playlist with the given identification provider and playlist.
Append a string to the end of the url. If encode is true the string will be
Adds a query parameter to the request.
Adds a query parameter to the request. If the value is null null is returned.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Get the playlist from the source.
This method is called when the launch button action is performed. This method is called when the
Check if the startup is finished. If it is wait for the number of seconds to finish
Checks if the given URL exists. If it does not it will try to follow redirects.
The browser button action. This method is called when the user clicks on the localhost page.
Creates an image from the given path and description. If the path is not found an error
Entry point for the Nakamura launcher.
Sets the values of this int array to the given array of values.
Returns a hash map with the level present strict and known values.
Get the value at the given index.
Get a json value by key. If the value is an integer it will return the value
Returns the value as an integer. If the value is not an integer the default value is
Returns the value as a double. If the value cannot be converted to a double the default
Returns the value as a string or a default value if the value is not a string.
Creates a command resource with the given identification provider command and capabilities.
Verify that the given command is a valid command.
Verifies the capabilities for the given command.
Verifies that the given command is valid against the given capabilities. If the command is not valid
Execute a batch of statements asynchronously. The callback will be called when all the statements have been
Returns a set of all subclasses of the given class or null if the class is null.
Returns a set of all subclasses of the specified class or null if the class is not found
Search for the given class in the given location.
Search the given directory for classes that are assignable from the given class.
Returns a list containing this resource as the first element of the list. The first element is
Returns the number of elements in the set.
Process a packet and add it to the queue. If the packet is not null it will
Get the volume of the resource. If the resource does not exist it will return an empty
Create an error response with a RSM condition.
Create an error response.
Checks if identifiable is the target of the selector resource.
Sets whether or not the login period should be enabled for the given date range.
Decorates the given set with a synchronized object.
Sets the name of the service.
Update the state of the subscription.
Returns a list of all groups in the roster.
Append a RSM query to an existing query. The RSM query will have the same
Parse an RSM query element.
Create a leaving event request.
Reload the roster from the server. If the server is not authenticated an illegal state exception
Create a new entry in the store.
Returns a collection of all roster entries in this roster.
Get the user s presence for a given resource.
Set offline presences.
Fire roster changed event.
Sets the digest for the given connection id and password.
Generates a music resource based on the given resource model and optional event model.
Creates a new request to request a player from a playlist.
Get time passed.
Registers an update listener to be notified of changes to the assistant properties. The listener will be
Initializes the properties file. If the properties file does not exist it will be created.
Reloads the properties from the properties file. This is done by reading the properties file and
Parse a stream error element.
Parses a mechanism element into a collection of strings.
Parse the compression methods from the given compression element.
Parse a packet extension.
Decodes a string into an object of the given type. If the string is not of the
Verify that the event is a music request and that the player is the target of the music
Get the playback state from the given resource.
Get the secret key for the given subdomain.
Returns true if the given subdomain is allowed to access multiple subdomains.
Puts a key - value pair into the cache. If the key already exists it will be
Returns a reference to the key set of this map. If this map has no key set
Returns a collection of the values in this map. The values are ordered by key. The
This method is called when a reference is removed from the cache. This method should be called
Returns the entry associated with the given key or null if the key is null.
Returns the hash code for the given key and value.
Creates a new entry in the hash table with the given hash code key and value.
Returns true if the event is considered to be present or false if the event is not.
Sets the presence state of the player. If the player is not currently in the vague
Updates the vague.
Delivers the given message to all subscribers of this channel.
Generate a new run script with the given class and target map. The script is added to
Initialize the output directory.
Load properties from file.
Writes a file with the given content. The content will be written to the given file.
Returns the progress for the given event. If no progress is found an empty optional is returned
Decorate a collection with synchronized methods.
Discover all the hosts in a range of addresses. This method will return a collection of service
Get the current configuration. If the number of attempts has not been reached this method will attempt
Gets the thread pool.
Creates a stop request with the given source and target.
Verifies that the player is the target of the music.
Get a DSE cluster instance.
Adds a connection listener to the list of listeners that will be notified when a new connection is
Adds a packet listener to the list of listeners to be notified when a packet is received.
Adds a packet listener to the list of listeners to be notified when a packet is received.
Fire the listeners of a packet sending.
Adds a packet interceptor to the chain. The interceptor will be called when a packet is received
Notifies all registered interceptors of the given packet.
Convert a parameter to an array of values. The parameter name must end with a string.
This method is called when a connection has been lost. It is called when the connection is
Get the current thread id.
Returns true if the given node is valid for the given thread id. If auto commit is
Get the key associated with the given value.
Returns the object at the given index or null if the object is not present at the given
Returns the node at the given index that is valid for the given data and thread id.
Returns the node at the given index or null if there is no such node.
Compares two objects using the specified comparators. If one of the comparators is null then
Returns the least node with the given index or null if there is no such node.
Returns the most node with the given index or null if there is no such node.
Returns the next node greater than the given index or null if there is no such node.
Returns the most valid node after the given thread id or null if there is no such node
Returns the least valid node starting from the given node starting from the given thread id.
Copy a color from one node to another.
Returns true if the value at the given index is red.
Returns true if the value at the given index is black. If the node is null returns
Returns the grand parent of the given node at the given index or null if there is no
Returns the parent of the node at the given index or null if the node is null.
Returns the right child of the given node at the given index or null if the node is
Returns the left child of the given node at the given index or null if the node is
Rotate the left child of the node at the given index.
Rotate the right child of the node at the given index.
Insert a new node at the given index in the tree.
Do the red black deletion of the given node. The node is deleted from the tree.
Checks that the given object is non - null and that it is a comparable object.
Insert a new value into the tree. If the value already exists it will be overwritten.
Returns true if the map contains the given key. If the key is not found false is
Returns true if the given value is contained in this map.
Get the value associated with the given key.
Remove the value associated with the given key. If the key does not exist it is created
Clear the map. If auto commit is enabled then this method will commit the changes to the
copies all entries from this bidi tree into a new bidi tree.
Deletes all expired entries from the cache. This method is called when the cache is full.
Culls the cache from the cache manager.
This method is called when the component is activated. This method is called when the component is
Create a player request for the playlist with the given name. If the playlist does not exist
Initialize roster store.
Open roster store.
Scan a range of addresses. If addr is null then all addresses are scanned. If addr
Convert an IPv6 address into an IPv6 address within a given subnet of bits.
Exports the album data to a hash map.
Creates a track info object from a hash map.
Adds all applications from the given set.
Execute the application in the context of the given service object.
Print the list of classes and the application name.
Prints the usage information for this command.
Entry point for the command - line tool.
Create a mute event.
Create a mute event from an identification.
Get a schema by name. If the schema does not exist yet it will be created.
Writes a list of lines to a file. If the file already exists it will be deleted
Check if the script is in the exec jar. If the script is not in the jar
Adds an option to the command line.
Returns a sorted list of all the fields in the schema.
Get field by name. Return null if no field with the given name is found.
Get the package name from the given jar entry.
Map content to values.
Create an event listener.
Sets the state of the iteration. This method returns the previous state and returns the old state
Iterate over the elements of the given collection. The iteration stops when all elements are exhausted.
r Iterates over the elements in the given iterator and returns the value of the first element
Get track info.
Returns a hash map containing the length position and time stamp of this message.
Imports the given resource into the given resource model. If the resource is already imported it will
Creates an image with the given lines.
Get an image from the given url.
Make a GET request to the given URL and return the result as a JSON object.
Reverses the order of the keys in the source map to the order of the target
Returns the result of the multiplication of the two sets. The result is a copy of the
Start the thread. If the thread is already running this method will do nothing. If the
Return the object to the pool. If there is an exception in the pool log it and
Create a new ended event with the given identification source.
Get the current track info from the queue or null if there is no current track.
Creates a new playlist with the given old track info and new track info. The old track
Shuffles the playlist by a random number between 0 and the number of played tracks
Verify that the capabilities are compatible with the playback modes. If any playback mode is not supported
Returns a hash map containing the current state of the object.
Escapes the given string for use in an XML document. This method is intended to be used
This method is called when a challenge has been received from the client. It will evaluate the
Convert the object to a JSON stream.
Runs the event handling loop. This method blocks until the stop flag is set to true.
Handle an event. This method is called when an event is received from a topic.
Wait for all queues to complete and wait for them to finish.
Sets the value of a property. If the value is null the property will be removed.
Remove a property. If the property is not read - only it will be added to the
Adds a principal to the list of principals. If the list is not read - only the
Removes a principal from the list of principals. If the list is not read - only the
Called when the root window is closed. This method is called when the root window is closed
Called when the user enters the presence state. This method is called when the user ent
Called when an event is fired. This method is called when a new event is received.
Returns true if the resource is permanent. If the resource is permanent false is returned.
Set the name of the roster.
Returns true if the map contains the given key false otherwise.
Returns true if the hash table contains the given value. If the value is null this method
Associates the specified value with the specified key. If the key already exists the old value is
Removes all of the elements from the hash table.
Returns the hash code for the given object key.
Checks if two keys are equal.
Checks if two values are equal.
Ensure that the hash table has the given capacity. If the table has the same size as
Calculates a new capacity based on the proposed capacity. If the proposed capacity is larger than the
Creates an iterator for the entry set. If the set is empty an empty iterator is returned
Load a map from a binary input stream.
This method is called when a new context is added to the list of contexts. This method
Notifies the listeners that a reconnection has failed.
Notifies the listeners that the connection should be re - established in the given number of seconds