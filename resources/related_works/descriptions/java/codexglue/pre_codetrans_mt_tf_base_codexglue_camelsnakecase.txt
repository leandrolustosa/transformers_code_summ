Emits a value.
Wrap an observable.
Performs an insertion sort on the sequence. The resulting observable sequence will be sorted according to the
Create an observable that is connected to the supplied observable using the supplied scheduler.
Create a unicast processor with the given initial capacity.
Create a new unicast processor.
Try to apply a function to a subscriber.
Subscriber function accepting a value and a user - defined emission function.
Reset the state of the system to the initial state.
Construct a Maybe from a completable object
Create a Maybe from a single source
Retries at most the given number of times with a failure of the given predicate.
Require that the given object is not null.
Returns the identity function.
Creates a callable that just returns the given value.
Create a function that just returns the given value.
Returns a function that casts the given class to the given class.
Create a new unicast subject.
Create a unicast subject with the given initial capacity.
Create a unicast subject.
Create a new unicast subject.
Get the error.
Gets the error.
Blocks until the current thread is interrupted or the timeout elapses.
Drains the queue into a loop if no more items are available.
Request a number of items from a subscription.
Consumes and completes the next request.
Get the value of this annotation.
Gets the error.
Validates that the upstream is not null and that the next is not null.
Atomically set the next disposable to the upstream if not already disposed.
Validates that the next subscription is not null and that the upstream is not null.
Atomically set next to upstream.
Cap a long to a long.
Cap the multiplication to the maximum.
Caps the requested value and adds n to it.
Convert throwable to npe.
Add an object to the list.
Shutdown the pool.
Create a new scheduled executor service.
Sets the subscription to the given one.
Repeatedly emits objects from the queue.
Wrap the given throwable in a runtime exception.
Flattens a throwable into a list of exceptions.
Convert throwable to exception if it is an exception.
Removes all of the elements from this set.
Returns the number of elements in this set.
Try to convert a source observable to a scalar.
Subscriber function that maps an observable to a scalar source.
Subscriber is called with subscriber as argument.
Accepts an observer.
Starts the streaming.
Starts the streaming.
Offers a new object to the queue.
Gets the value of the resource.
Completes the computation with the given value.
Terminates or disposes of the stream.
Completes the stream.
Waits for the specified number of items to be available.
Requests n items from the upstream.
Add a subscriber to the list.
Remove a subscriber.
Create a replayable flowable that will replay on the supplied flowable with the supplied scheduler
Parse the annotations from the method.
Sets the amount of time to wait before giving up.
Create an error response.
Returns the delay based on the variance percent.
Create the sample data.
Returns the http method value for the given method.
search for a user
Encodes a password using the configured salt and suffix.
Returns true if the encoded password matches the salted password.
Performs version checks.
Helper method to determine if checks should be disabled.
Get the version from the properties file
Permits to define an exchange configurer.
OAuth2 client.
configure the oauth2 resource
Compares the specified value against the specified distinguished name.
Executes operations for the specified DN and attributes.
Returns a set of values for a single attribute.
Perform a search for a single entry.
Builds the search controls.
Lookup the primary keys.
build details for pre authenticated authorities web authentication
Create the embedded server.
Create the servlet api filter.
Create the jaas api filter.
Whitelisted default typing.
Create a filter chain and register it.
get token by series id
Returns a list of granted authorities for the given attributes.
Creates a new instance of a cipher.
throw e ; }
Authenticate the request if authentication is required.
Determines if the principal of the request has changed.
Authenticate the request.
Checks the content length.
Maps a collection of authorities to a set of granted authorities.
Set login processing url.
Update the default authentication settings.
Update the default access settings.
Maps a password value to a string if the value is not a string.
Extract remember me cookie.
Encodes a cookie.
Sets a cookie for the given tokens.
Resolves a method argument.
Gets the query string.
Gets the service port.
Gets the principal.
Invalidates the current session.
Authenticate a username password authentication token.
Sets the context properties.
Returns the full URL to redirect to.
return 0 ; }
Initialize the user details service.
get user details service.
Add the pkce parameters.
Determines if authentication is required.
Service ticket request.
proxy ticket request boolean.
Determines if the current token is authenticated.
Checks if the proxy receptor is configured and matches the request.
Create a new security expression root.
get jwk from server
URL - encodes the given value.
get the authorities for the current user
Load user by assertion.
get pre authenticated principal
Concatenates the given arrays into a single array.
Create a subarray from a byte array.
Returns a list of granted authorities for the given attributes.
Processes the given map and returns the granted authority map.
Gets the granted authority collection.
Recursive method to add granted authority collection.
Gets the pre authenticated principal.
Gets the shared object.
Builds the https redirect URL for the given request.
Invokes the method.
adds the given role to the given string
Add any number of roles.
On login success.
Switch to a new user.
exit user.
Sets the URL of the exit user.
Display a random contact.
Builds the security filter chain.
Attempts to decode a JWT token.
Authorize using an access expression.
Check if the current user is allowed to access the resource.
Convert the given JWT to a collection of granted authority objects.
Generates a CSRF token for the given request.
Display admin page for a given contact id
Display the add permission page for a contact.
Add a permission.
Gets the role with the default prefix.
Creates a user details resource from a string.
Returns the values of the given attribute.
Returns the value of the first attribute with the given name.
Encodes the given sequence of characters into a sequence of bytes.
Decodes the given bytes to a string.
Lookup the parameter names for the given object.
Handles adding a contact.
Finds all attributes that match the given criteria.
Add a method to the registry.
Get all attributes.
Returns true if the mapped name starts with the method name.
Configures any HTTP request.
Handle bind exception.
get a random contact from the database
Clear authentication attributes.
Gets field.
Create service url.
Create redirect url.
Extracts the prefix of the given string.
Called to commence the authentication process.
Checks for duplicates in the stack.
Get the registered throwables.
Extracts the cause of the throwable.
Register access manager.
Convert a collection of authorities to a set.
Compares two byte arrays and determines if they are the same.
Set default failure url.
Set the hidden inputs.
Build the request URL.
Checks if the given string is an absolute URL.
Create a list of attributes for the given identifier.
return identifier ; }
Creates the entries in the database.
Creates a new identity.
Update object identity.
save request.
Create a server web exchange matcher for the given path patterns.
Matches any exchange.
Encryptor.
AES text encryptor.
AES text encryptor.
Write the headers to the response.
Determine the target url for the given authentication.
Determine the target url.
Sets the target url parameter.
immediate parent populated.
Builds a distinguished name from the given username.
Creates a map of shared objects.
Loops through the security properties looking for duplicates.
Gets the current date.
Attempts to parse the given string using the given date formats.
Update the cache.
Set the authentication details on the request.
get security name from subject
get web sphere groups.
Builds the DN of a group.
Checks if the maximum number of sessions has been exceeded.
Copy the details from the source authentication token to the destination authentication token.
Get all filters matching the given request.
get list of filters from given url
Gets the web application context.
Gets the full dn.
Sets session attributes.
Create a preemptive basic authentication scheme.
Adds the given filters to the validator.
Add a filter to the list of filters.
Create a basic authentication scheme.
Creates an NTLM authentication scheme.
Create a new form authentication scheme.
Adds a proxy specification to the set of proxy specifications.
Prints a response to a stream.
Create a new redirect configuration.
Set query parameter charset.
Provide a custom object mapper type.
Provide a custom object mapper factory.
Create a new log config.
Create a new mock mvc config.
Create a new mock mvc config.
Create a new mock mvc config.
Create a new mock MVC configuration from XML.
Create a new mock MVC configuration.
Create a new mock mvc config.
Create a new async MVC config.
Create a new mock mvc config.
Create a new mock MVC configuration.
Create a new mock mvc config.
Create a new mock MVC configuration.
ONLY allow all hostnames.
Declare XML namespaces.
Declares a namespace for the given prefix.
Makes a HTTP request.
Sets the headers for the default request.
Set proxy for this request.
Sets the control name.
Adds a header to the request.
BASIC authentication.
Sends an NTLM request to the server.
Create a new headers instance.
Resets the state of the MockMvc instance.
Set a header on the response.
Builds the response.
Matchers that matches cookies whose value matches the given matcher.
Matchers that matches any comment of the current string.
Matchers that matches cookies whose expiry date matches the given matcher.
Matchers that match on the domain property of the first matched element.
Matchers that match on the path of the current request.
Matchers that match cookies that have a value matching the given matcher.
Matchers that return a cookie with a value that is http only.
Matchers that matches cookies with a version number property that matches the given matcher.
Matchers that matches cookies with a maximum age attribute.
Expect the header value to match the given matcher.
Expects a header.
Expect a cookie with the given name and value.
Create a proxy specification with the given host.
Create a new json path config with a number return type.
Provide the default parser type for this path.
Create a new log configuration with the specified print stream.
enable logging of request and response
create http request base.
Create a multi part config with the specified boundary.
Adds an attribute to the request.
Add a header.
Add multi part.
Add result handlers.
Set http client parameter.
add http client params.
http client factory http client factory.
HTTP multipart mode http client.
Perform a GET at the given path.
int.
; }
) ;
Returns the float value of the property path.
Gets the double.
; }
Get a list of objects from the map.
Get the map for the given path.
Retrieve an object by its path.
Sets the request body.
Adds a cookie to the request spec.
Adds a parameter to the request spec.
Adds a parameter to the request spec.
Params with update strategy
Creates a filter that logs a response if the response matches the given matcher.
Creates a list of cookies from the given cookie and the given additional cookies.
Synchronized on the backing map.
Index explicit bindings.
) ; } }
Convert a constant string binding.
Cleanup the given binding.
Remove a failed jit binding.
Returns the dependencies of the given binding.
Factory method for creating uninitialized bindings.
Gets all parameters.
Binds the given injector to the given implementation.
Binds a logger to the given injector.
Checks for misplaced binding annotations.
Returns true if method a overrides method b.
Sets the delegate injector.
return null ; }
Resolve all of the given types.
Canonicalizes a type literal.
Build in the built in converters.
Canonicalizes the given loader.
Checks if the given class loader has the same version of cglib.
Checks if a method or constructor is publicly callable.
Fixes the annotations of the given key.
Request injection.
Validates all pending injections.
Creates a new instance of the class.
Factory method for creating a scope.
Make a scoping injectable.
Normalizes the path.
Generate an annotation of the given type.
Checks if the given retention policy is retained at runtime.
Finds a scope annotation among an array of annotations.
Returns the binding key for the given member.
Returns the name of the given key.
Initializes the delegate.
Add a direct type binding.
Get a constructor injector from the cache.
Checks whether the given interceptor has a scope annotation.
Create a new real map binder.
Create a new value for the given key.
Provisions a new instance of the provider.
Replaces the source objects.
factory method for static module.
Gets assisted methods.
Checks if the type is not specified.
Checks if a constructor has matching parameters.
Returns the dependencies of the given implementation.
Remove assisted deps.
Optimized implementation of inject.
Create a binding from the injector.
Intercepts calls to the wrapped object.
Formats string with hint.
Install a multibinder with the given key.
get new item.
Find the next filter matching the request.
Checks if the constructor has at inject annotation.
Gets the internal constructor.
Gets internal dependencies.
Create a new module instance.
Get the annotation for the given method.
Returns the line number of the given member.
Initializes the injector.
Validate and canonicalize the given value for the given key.
)
Creates a new instance of the given type with listeners.
Returns the injectors for the given injection points.
Returns a key for the given class and annotation strategy.
Returns an instance strategy for the given annotation.
Strategy for the given annotation type.
Prunes the stacktrace elements that are not part of the aop internal classes.
Get the binding source.
Creates a new message with the specified format and arguments.
Creates an immutable message.
Creates a new message.
Convert the given object to its equivalent in the declaring element.
Returns true if the class should be skipped.
Returns a stack trace element for the given module class names.
Main method for running the manager.
Pushes the given dependency on the given source object.
Pushes the given object into the state.
Returns an initializable that can be used to serialize an initializable.
Provisions the given provider.
Dispatch connection event to all registered processors.
Add a connection event processor.
Gets the result of the given task.
Wrap a throwable in an illegal state exception.
Register a processor.
Registers default processor.
Gets the processor.
Tries to get the URL corresponding to the given string.
Decodes the protocol code.
Get all connections.
Scan all connections.
and exception.
or remoting exception.
remove a task from the pool
Heal if need.
Creates a connection or warmup connection.
Closes the connection to the given address.
This method is called when the connection is closed.
Closes the connection.
Sets the given attribute to the given value only if the attribute is absent.
Registers a user processor.
Registers a user processor.
Dispatch to user processor.
Deserialize a request command.
pre process remoting context.
Logs timeout information.
Log command with debug enabled.
Processes a message.
Sends a command to the remote.
Convert a bit set to a byte.
Convert an int value to a bit set.
Add a reconnect task.
) ; } }
Filter connections by service status.
Attempt to close fresh connections.
Retrieve a boolean property returning a default value if not found.
Logs the given message at info level.
Is request timeout boolean.
Get user processor by class name.
Get a random connection from the list.
Get a value from the context.
Returns the value of the given property.
Resolves a response to an object.
Converts a response to a response object.
Converts an RPC response to a throwable.
Detailed error message.
Create an rpc server exception from the throwable and the error message.
Prints a connection trace to the specified logger.
Create a new event loop group.
Parse the remote address of a channel.
Parses the local address from the given channel.
Parse the remote ip from the given channel.
Parse the remote host name from the given channel.
Returns the local IP address of the given channel.
Parse the remote port from the given channel.
Parses the local port from the given channel.
Parse a socket address to the host name.
Adds a connection to this pool.
Removes a connection from the pool.
Register a custom serializer.
Gets the custom serializer.
Register a custom serializer for the given command code.
Gets the custom serializer for the given command code.
Checks if the remote address is connected.
Initialize the water mark for the write buffer.
Create a new framedata instance for the given opcode.
Attempt to write more data to the socket.
Sets the status code.
validate utf8.
Update the payload.
Chooses the best match for the given protocol.
Checks if the given length is within the maximum frame size.
Checks the size of a single frame packet.
Hashes a key with SHA - 1.
Process a continuous frame.
Process binary frame.
log runtime exception.
Process text frame.
Process frame is fin.
Processes a framedata frame.
Processes closing frame.
Checks if the buffer size has been exceeded. If so clears the buffer.
Gets the payload from the list.
Gets the size of the list.
http server.
http client.
Decodes the socket buffer.
Handshake and close connection.
write response due to internal server error.
Generate the response due to an error.
Sends text to the client.
Resets the connection.
Connect to the read thread.
Gets the port.
Send a handshake to the server.
Set the timeout for the connection lost event.
Stop the connection lost timer.
Starts the lost timer.
Restart the connection lost checker.
Attempt to detect a connection lost detection.
Cancel the connection lost timer.
Client handshake builder.
Send a ping frame to the client.
Stops the background thread and waits for it to finish.
Returns the port.
Reads more data from the queue.
Accepts a new connection from the server.
Read data from the socket.
Attempt to write to the connection.
Setup the selector and server thread.
Attempt to ensure a single thread is running.
Shutdown the server.
Gets the socket.
Broadcasts data to all connected clients.
Broadcasts text to a collection of clients.
Broadcast data to a collection of clients.
Fill the given draft with the given data.
Transfers the contents of one buffer to another.
Starts the JPA process.
Get the entity manager for the given name.
Executes the given block in a transactional context.
Convert the given arguments to a scala buffer.
Wrap args to list if needed.
Gets the message for the given key.
Get a message.
Check if a message is defined at a specific language.
Provide the preferred messages for the given languages.
Returns the messages that are preferred for the given request.
Set the language for the given result.
Binds a set of modules to the container.
Bind a set of modules to the container.
Add a set of bindings to the container.
Returns a new GuiceBuilder that overrides the specified modules.
Provide a set of overrides for the given modules.
Add a set of bindings to the Guice context.
Disable the given modules.
Submits the request for execution and returns the result.
Gets an existing file from the environment.
Binds the binding to the given scope.
Creates a new tuple of the given elements.
Static factory method for creating a 5 - element HList.
Convert an execution context to an executor.
Creates a new jpa object with the given name and unit.
Creates a jpa object with two units.
Creates a JPA object from a map.
Create a flow from string.
Create a flow from a JSON node.
Mapped constraint validator factory method.
Creates a new validator instance for the given key.
Get matching accessible method.
Handles a client error.
Handles a bad request.
Handles a forbidden request.
Stage for not found.
Handles a server error.
Log server error.
Convert throwable to useful exception.
Handler for dev server error.
Handler for error in prod server.
Build doc handler from resources.
Builds a documentation handler from the given directory.
Build a doc handler from a directory and a JAR file.
Builds a handler from a directory and JAR file.
Builds a handler from a JAR file.
Consume the data of this pipeline.
Create an entity from the given content.
Creates an HTTP entity from the given content.
Creates a new chunked http entity.
Create a result with the given status code and the given JSON content.
Sends status code with given json node content
Creates a new result with given status code and content.
Sends status message with given status code and input stream.
Create a result with the given status code and content.
Find user by id.
Return a new lang that is preferred among the given candidates.
Get a unique view of this call.
Create a new call with the specified fragment.
Returns the full URL for the given request.
Returns the full url for the given request.
factory method for creating a connection function from a connection runnable.
Returns a function that executes the given block on a connection.
Creates a new server with the given mode http port and the given block.
Converts an object to a json tree.
Converts a json node to a value of a given class
parses the given string as a json node
parses a json object from the given input stream
Returns target path relative to start path.
Returns the canonical version of the given URL.
Convert a set of constraints to a list of displayable constraints.
Create a displayable constraint from a descriptor.
Timeout the given completion stage.
Parses a cron expression.
Returns the next cron expression for the given date.
Create a new ws instance.
Create a new guice application builder for the given context.
Renders a todo page.
Stores a key - value pair in the current session.
Flash a message with the given key and value.
Returns a key for the given instance.
Returns a key for the given annotation.
Binds the binding to the given implementation.
Binds this binding to the given provider.
Binds this binding to the given instance using the given supplier.
Binds this binding to the given key.
Binds the wrapped type to the given provider.
Returns a list of available langs.
Returns the preferred lang from the list of available langs.
Creates a new evolutions reader from a map of evolutions to evolutions.
Creates an evolutions reader for a given string.
Cleanup the evolutions database.
Create a new guice application builder with a custom configuration loader.
Creates a new guice application builder with a custom module loader.
Creates a new application builder with the given set of modules.
Eagerly load Guice modules.
Eagerly load Guice modules.
Bind a set of bindings to a Guice application.
Create a new guice application builder.
Encodes the cookie to a string.
Returns the entity manager on the stack.
Returns the current entity managers stack.
Push or pop an entity manager from the stack.
bypass a stream by applying a splitter.
Create a bypass flow from the given graph.
Convert the error arguments.
Fills the form with the given value.
Gets the global errors.
Convert errors to json.
Returns the value of the property with the given key.
Fill the form with the given value.
Parses the given text and returns an instance of the given class.
Parses the given text into an object of the given field.
Print t as string.
Prints a field - value pair.
Prints the string representation of the given type.
Add an optional converter.
Register a custom formatter for the given field type.
Returns the cookie as a string.
Returns a list of nodes that match the given path expression.
Convert a java. util. list to a scala list.
Convert an array to a sequence.
Create a scala. collection. immutable. seq from an array of values.
creates a mapped web socket acceptor that accepts JSON messages.
Accept or result web socket.
Gets the primitive promotion cost.
Get the total cost of the transformation.
Gets object transformation cost.
Returns the message at the given key.
Get messages at a list of keys
Creates a new database object from the given parameters.
Creates a parallel sorter for the given array.
Sorts the specified subset of the array using the given comparator.
Merges the specified range of the specified array into this array using the specified comparator.
Invoke the method.
Loads the argument at the given index.
Emits a field instruction.
Pushes a zero or null value onto the stack.
Unbox or zero.
Processes an array.
Compares two null values.
Resolve all bridged classes.
Filter constructors.
Sets the superclass of the object.
Generates the get field.
Adds the signature and exception types for the given method to the set.
Returns the cardinality of this BitArray.
Sets the naming policy.
Find methods.
Resolves a string relative to a base path.
Reads a string from the given path.
Sets the request host.
Create a new request with the given method and destination.
Create a new connect request.
HTTP GET request.
HTTP POST request.
HTTP PUT request.
HTTP PATCH request.
HTTP DELETE request.
HTTP HEAD request
HTTP TRACE request.
HTTP OPTIONS request.
HTTP request path.
Add cookies to the request.
Adds a query parameter.
Add query entries from map.
Set the query string of this request.
Returns the query string.
Returns the URL of the host.
Set HTTP Basic Authentication header.
Set the host header.
Buffer the response.
remove a range from a handler.
Get the length of the exception table.
Collects all action interceptors.
Collects all filters.
Collects all action results.
Collects all action runtimes.
Set a simple property.
Returns the value of the given property of the given object.
Extract the reference from the given property name.
Gets the writer.
Set a named object reference.
Gets a named object reference.
Lookup object by reference.
Gets the descriptor of a table.
find entity descriptor by column ref.
Gets the alias for a table reference.
register table reference.
get entity descriptor by table ref.
Registers a hint.
return true ; }
Injects request attributes to the target.
Inject request parameters.
Inject uploaded files.
Convert the given property name to the table name.
Convert a column name to a property name.
Transforms the given column name to the column name.
Store a value in a prepared statement.
Prepare get value.
Get all elements from the cache.
Resolves a wrapper.
Create a new wrapper instance.
Converts system separators to unix separators.
Get the path of the given filename.
Splits a filename into a prefix path base name and extension.
Returns the relative path of the target path.
Register a component.
Registers action config with action config manager.
start the web application
Registers the components with the madvoc container.
Exclude one or more jar files from being scanned.
Included jars.
Included entries are not scanned.
Excludes the given entries from the scanner.
Scan a jar file for classes.
Scan class path.
Returns the bytecode of the signature of the given type.
Scans the given paths for files to scan.
Start scan.
create a new jtx transaction.
Provide a default scope instance.
Get or init a scope of the given type.
Create a new scope and pass it to consumer.
Creates a CSRF token in the given session.
Ensures that the given set has at least the given number of tokens.
Checks for a given csrf token in the given session.
Create a copy of the given object.
Make a copy of this util.
Visits a property of the object.
Initializes the table reference.
Resolve a scope.
Register a new bean definition.
Register a bean definition.
Remove a bean from the container.
Resolves the bean names for the given type.
Registers a new ctor injection point.
Registers a property injection point.
Petite set injection point.
Register a method injection point.
Introspects the given init methods for the given bean.
Register a set of destroy methods for a bean.
Register a provider.
Registers a petite provider.
Iterates over all beans of the given type and invokes the consumer for each bean s name
Defines the parameters from the given properties.
Intercept an action request.
Returns the java version from the given version.
Pushes an int value on the stack.
Checks if the given argument index is within the method arguments count.
Returns the advice field name for a given field name and index.
Returns the advice method name for the given name and index.
Generate code to load special method arguments on the stack.
Generates method argument instructions for the given method.
Loads method arguments.
Loads the method argument at the given index.
Stores a method argument at the given index.
Prepare the return value of a method.
Create method signatures key.
Visits a new array of the given type.
store into array.
Extract encoding from content type.
Checks if the given flags are empty.
Gets the bearer token from the request.
Require authentication.
Prepares the response object with a file download.
Sets the response content type and content length.
Gets all cookies with the given name.
Read request body from reader.
Read request body from stream.
Store the context path for the given page context.
Store the context path in the servlet context.
Checks if is get parameter.
Prepares an array of parameters.
Copy request parameters to request attributes.
Invokes the body.
Renders the body of the given fragment.
Render the body of a jsp fragment to a string.
Invoke the init methods of the bean.
Call the destroy methods of the bean.
Create a new bean instance.
Inject parameters.
Rewrite action path.
Add a header.
Put a new entry in the map.
Add a base property.
Add a property to a profile.
Get a profile property.
Resolve macros.
Extract map.
Cyclically extract a word of key material
Hash a password with a salt.
Check that a plaintext password matches a previously hashed one
Copies all data from this stream to the given output stream.
Copies up to max bytes.
Parses the action definition.
Resolve action config.
Detect and register alias.
Read action interceptors.
Read action filters.
Read package action path.
Read method action path.
Parse method alias.
Create action runtime.
Set the last modified time header.
return target ; }
Inject target into proxy.
Visits an annotation of the field.
Resolve real name.
Resolve json name.
Lookup type data for the given class.
Lookup the data type for the given class.
return type ; }
Resolves the given name for the given class.
Resolve the real name of a class.
Get the content of the file.
Copy bootstrap methods.
Sets the major version and the class name.
Puts the constant pool into the given byte vector.
Put bootstrap methods on the given byte vector.
Create new field reference.
Create new method reference.
Adds a new reference to the constant pool.
Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant
Adds a new integer constant.
Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant
Adds a new entry with the given tag and value to the constant pool.
Adds a new CONSTANT_Double_info or CONSTANT_Float_info to the constant
Adds a new constant.
Adds a new CONSTANT_Double_info and CONSTANT_Float_info to the constant
Add a constant.
Adds a new CONSTANT_UTF8_info to the constant table.
Add a new method handle entry.
Create bootstrap method reference.
Create bootstrap method.
Add a dynamic reference to the constant pool.
Adds a new reference to the constant pool of this symbol table. Does nothing if the constant pool
Adds a reference to the constant pool of this symbol table. Does nothing if the constant pool already
Adds a new CONSTANT_UTF8_REFERENCE to the constant pool of this symbol table.
add bootstrap method.
Merged type.
Hashes a string.
Clear all the entries from the head.
Get all values for the given name.
Returns an iterator over the elements in this queue. The elements are returned in no particular order.
Returns all the entries in this map.
Grows the buffer by a given number of bits.
Appends the specified subsequence of the specified character sequence to this buffer.
Visit an annotation of the method.
Visit the end of the program.
Create first chain delegate.
Create the first chain delegate.
Parse a path from a string.
Pushes a field on the path.
Configure the servlet context.
Executes the operation.
Get all field descriptors.
Create a bean definition for registration.
Convert jtx transaction mode to db mode.
Read property.
Copies all of the mappings from the specified map to this one.
Append a buffer to the end of this buffer.
Writes the contents of this list to the given writer.
Writes this list to the given output stream.
Writes this response to the given output stream.
Get the string value for the given key.
Get the integer.
Get the long.
Get the double.
Get a float value from the map.
Get the value for the given key.
Add a string value to the object.
Use a folder.
Processes messages from the folder.
Update the flags for the given email.
Closes the given folder if opened.
find named parameter by name.
Performs the action.
Add a violation to the validator.
Set the mime type.
Specify download file name.
Sets the target.
Set the target class.
Set the target class.
Processes the target class.
Create the class.
Create a new instance of this class.
Dump class in debug folder.
Sets the from address of the email.
Appends to addresses.
Sets the recipient s email address.
Add a reply to recipient list.
Appends multiple CC addresses to the email list.
Create a new text message with the given text and encoding.
Sends an HTML message.
Sets a header.
Gets a system property.
Get boolean.
Returns the integer value of the given option or the given default value.
Returns the long value for the given name.
Get method parameters.
Serializes a key value pair.
Lookup action path by alias.
Resolve alias.
Resolve the given path and value.
Resolve string.
Get the last index of a slash followed by a dot.
Get the last index of a dot after a slash.
Gets the index of the dot after the slash.
Resolves the schema name.
Resolves the column descriptors.
Initialize the hash with the given key and tweak.
Merges x with y at the specified index.
Computes the determinant.
Compute the key schedule.
Initializes this CollationKey with the given key message and tweaks.
Encrypt block.
Convert a byte array to a long array.
Remove any bounding chars from the given string.
Returns the path of the link.
Compress a file using zlib.
Gzips a file.
Ungzips the given file.
Returns a list of strings from a zip file.
Unzip a string file to a directory.
Adds a file to the zip.
Add content to a ZIP output stream.
Returns the field descriptor for the given name.
Returns the property descriptor for the given name.
Set request bundle name.
Sets the session locale.
Gets the session locale.
Filter parameters by bean name.
Add multiple profile properties.
Gets a long from a big endian byte array.
Read stream.
Returns the label for the given offset in the given array.
Gets the annotation bytecode offset.
Read a bootstrap method attribute.
Inspect the constructors of the class.
Gets the ctor descriptor.
Get request map.
Create request map.
Convert array to array.
Initialized the filter.
Find file by uri.
Search for a file by url.
Include the given patterns.
Exclude files matching the given patterns.
Adds a path to the list of paths.
Finds all files in the directory.
Initializes the list of files and folders.
Returns an iterator over the elements of this stream in proper sequence.
Resolve bean wiring mode.
Resolve bean name.
get writer.
Get the output stream.
Returns the class name.
Returns the constructor descriptor.
Gets method descriptor.
Returns the method descriptor for the given method.
Appends the descriptor to the builder.
Returns the number of elements in this list.
Returns the number of arguments and the number of arguments.
Marks this transaction as rollback only.
Performs commit or rollback.
Rollback all resources.
Request a resource of the given type.
Consumes the current name and pushes it onto the stack.
Writes a quoted string value.
Writes a unicode character to the output.
Write a character sequence to the stream.
Set the parsing error log level.
Set the start of a region.
Checks if value is contained within include string.
Registers a new pseudo function.
Lookup a pseudo function by name.
Visit a proxy class. We will use this to build the proxy class.
Visit an annotation.
Generate the code for the static init block.
Create the proxy constructor.
Processes the super methods of this class.
Finds the index of the last occurrence.
Appends the given string to the current one.
Replace the asm instructions for the given class.
Get the attribute prototypes.
Register a sql type.
Lookup a sql type for a given class.
lookup sql type.
Create a new socks4 proxy info.
Create a new socks5 proxy object.
Create a new http proxy instance.
Returns the total number of transactions in the current thread.
Get the total number of transactions with a given status.
Associate a transaction to the stack.
Continue a transaction.
Lookup a resource manager.
Create a proxy for the given target class.
Append method name.
Pads the given text to the left with the given number of characters.
Convert a string to camel case.
Formats a paragraph of text.
Returns a string with the specified number of tabs replaced by spaces.
Escape a string for use in a Java String literal.
Unescape java. lang. String
Get bean by type.
Get bean by name.
Initialize the bean definition.
Invoke provider.
Register a new bean with the given name.
Set a bean property.
Gets a bean property.
Shuts down all the scopes and all the beans.
Resolve the parameters of the given method or ctor.
doAfterBody implementation.
Resolve the value with the given profiles.
End the current node.
Create element node.
Remove the last child node of the given parent node if it is empty text.
Gets the query string.
Gets the action class name.
Calculate to.
Replaces all occurrences of sub in s with with with s.
Replaces all occurrences of a character in a string.
Replaces all occurrences of sub in s with with with.
Replaces the first substring of the given string with the given string.
Replaces the first occurrence of sub with with with.
Replaces the last substring of the given string with the given string.
Replaces the last occurrence of a character with another character.
Remove a substring from a string.
Removes a character from a string.
Checks if all strings are empty.
Checks if at least one of the strings is blank.
Convert an object to an array of strings.
Change the first character case.
Converts the specified string to title case.
Removes all occurrences of c from s.
Returns true if src starts with sub ignoring case starting at index.
Determine if a string ends with a character.
Count the number of occurrences of sub in source ignoring case.
ignore case boolean.
Returns the index of the first non - whitespace character in the given string.
Strip leading char.
Strip trailing char.
Strips a character from a string.
Strips all occurrences of c from string.
Strips all occurrences of c from string.
Crops the given strings.
Returns a new string with all leading and trailing whitespace removed.
Returns a new string with leading and trailing whitespace removed.
Returns the index of a region of the given string starting from the given offset.
Joins a collection of strings with a separator.
Join an array of objects with a separator.
Convert charset.
Checks if the char at the given index is equal to the given char.
Surround a string with a prefix and suffix.
Add a prefix to a string if it does not already exist.
Add a suffix to a string if it does not already end with the suffix.
Cuts the string to the first index of substring.
Cuts a string from the index of substring.
Cuts the prefix from the string.
Cuts the suffix from the string.
Cuts the string from the beginning and ending with the given prefix and suffix.
Creates a new string by inserting the given string at the given offset.
Repeats a string a given number of times.
Reverses a string.
Returns the maximal prefix of two strings.
Finds the common prefix of the given strings.
Shorten a string by adding a suffix.
Converts a string to upper case using the given locale.
Removes the quotes from the given string.
Convert a byte array to a string of hex digits.
Gets the bytes from a string.
Detect quote character.
Visit a Enum. This method will be called for every node in the tree that is a Enum
Visits an annotation of the annotation.
registers a new entity descriptor.
Registers an entity with the given type.
remove entity descriptor.
create an instance of the given type.
Sets the target interface.
Inject target into wrapper.
Lookup all property descriptors for the given class.
detect database and configure oom database.
Flushes and closes the output stream.
Writes a byte to the output stream.
Invalidates the session.
Returns the name of the user.
Writes this sketch to a byte array.
Writes the content of this mail to the specified file.
Writes the content of this mail to the specified stream.
Append an argument to the given string.
Prepend a type argument to a method argument.
Change the return type.
Indent the given text removing leading and trailing whitespace.
Register a converter for a given type.
Lookup converter.
Parses the given query and returns a list of nodes.
Selects a collection of nodes.
Processes the selectors and adds them to the results list.
Returns the first node in the tree that matches the query.
Traverses the descendant nodes.
Recursive walk.
Select and add.
Unpacks the compressed character translation table.
Refills the input buffer.
Executes a query that returns a page of data.
Remove select.
remove to.
Remove last order by.
Decodes a string from HTML.
Detects the name of the first entity in the given input.
Build order sql.
Builds the SQL.
Resolve columns and properties.
Find by column name.
Find by property name.
Gets the property name.
Gets the column name.
Gets the id value.
Sets the id value of the given object.
Gets the string representation of the given object.
Appends a string to the end of the string pool
Sets the new index of the array.
Increases the capacity of the array by the given number.
Calculates the length of the array.
Create mixing message.
Create scoped proxy bean.
Initializes the cache.
} return true ;
use watch file.
Start the watch.
Called when a file is changed.
Adds an enumeration to the end of the list.
.
Declares a synthetic attribute.
Factory method for creating a new target instance.
Writes a property value for a given injection point.
Decorates a page with a given decora content.
Parses the given page.
Write decorated page.
Writes a region.
Starts the server.
Runs the given process and returns its result.
Create a new imapssl instance.
Create gzipped output stream.
Increments the hints count.
append column name.
Add a rule.
Applies the rule to the given value.
Process includes.
Process excludes.
Get pseudo class name.
Adds all elements from the given collection to this set.
Finds the insertion point for an element.
Bind annotation config.
Registers a new action configuration.
Lookup action config.
Executes the given consumer for the given type.
Set system mail properties.
Validates the given value within the validation context.
Find last table.
Fix the foster elements.
Create a new session bean and register it in the http session.
Gets the session map.
Initialization method.
Add advice init method.
Ends the current action.
Add a new key value pair.
Recursive method to extract the profiles and add it to the hashmap.
Add a value to the map if the operator is the same as the operator.
Returns the class name from the given type descriptor.
Returns the typeref2 name of the given type descriptor.
Convert a type to a typeref string.
Add all the given consumers to the list.
Create a collection of the given length.
Convert to single element collection.
Convert a value to a collection.
Convert collection to collection.
Add a line number.
Accepts a method visitor.
Puts a number into the given byte vector at the given offset.
Adds a forward reference to the list.
Marks this subroutine as belonging to the given subroutine.
Compares two digits.
Fix accent.
Puts a byte into this byte vector. The byte vector is automatically enlarged if necessary.
Puts two bytes into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a short into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a byte and a short into this byte vector. The byte vector is automatically enlarged
Puts two bytes into this byte vector. The byte vector is automatically enlarged if necessary.
Puts an int into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a byte value into this byte vector. The byte vector is automatically enlarged if necessary
Puts a long value into this byte vector. The byte vector is automatically enlarged if necessary
Puts a byte array into this byte vector. The byte vector is automatically enlarged if necessary
Enlarge this buffer by the given size.
Authenticate user via http session.
Authenticate user via token.
Authenticate user via basic auth.
Finds the default message for the given locale and key.
Gets the bundle.
Gets the element at the given index.
Sets the id of an entity.
Save an entity to the database.
Update an entity
Update a property of an entity
Update a property of an entity
find by id e.
Find by property.
find one entity by criteria.
Delete by id.
Delete by id.
Count the number of entities of a given type.
Increase the value of an entity property.
Decrease the value of an entity property.
Find related entities.
Return all entities of a given class.
Removes all entries from the map.
Returns a set of entries for this map. The set is backed by this map so changes to
Puts an object into the cache.
Removes the value associated with the given key.
Get the current stack trace.
Get the stack trace of a throwable.
Gets the stack trace chain of a throwable.
Gets the exception chain.
Converts a throwable s stack trace to a string.
Convert a throwable to a string representation.
Builds a message from the given message and cause.
Unwrap a throwable.
Register consumer.
Register a component class.
Get the system class loader.
Gets resource as stream.
Gets resource as a stream.
get class as input stream.
get class as input stream.
Creates a new route chunk and adds it to this route.
Find or create child chunk.
Parse the request into this request object.
Convert to collection.
Invoke setter.
Sets the value of the array at the given index.
Create a new bean property.
Extract the type of the property.
Stop authentication.
Start the authentication process.
Convert a local date to a local date.
Convert a local date time to a Gregorian calendar.
Define a proxy for the given class.
Add a check.
Resolves a validation context for the given class.
Adds all property checks for the given class.
Collects property annotation checks.
Collect annotation checks.
Copy the default check properties for the given annotation.
Encodes a URI component of a string.
Encodes the given string using the given encoding.
Encodes a URI scheme with the given encoding.
Encodes the given URI host with the given encoding.
Encodes the given URI port with the given encoding.
Encodes the given path with the given encoding.
Encodes the given query string with the given encoding.
Encodes a query param.
Encodes the given URI fragment with the given encoding.
Inspect class properties.
Get all property descriptors.
Get all cookies in the response.
Unzip the response body.
Closes the connection.
Returns true if the given scope is accepted by this filter.
Encrypts the given content.
Decrypts the given encrypted content.
Map to bean.
Generate a list of objects of the given type.
Sets the value of the property descriptor.
Generate map.
compare two entity column descriptors.
Sets the default header.
Send a request to the server.
send request.
Add the default headers to the request.
Read the cookies from the response.
Add cookies to the request.
Send mail.
Sets the subject.
Sets the sent date.
Sets headers for the given message.
Sets the people.
Sets the recipients.
add body data.
Sets the content of a part.
Create attachment body part.
Gets the content type.
Adds the given result set to the hash set.
close all result sets
Closes the query.
Detach the query from the session.
Sets the fetch size for this query.
Set the maximum number of rows.
execute update.
execute the query and return the first long
get generated columns.
Get the query string.
Create a proxy instance for the given target.
Create a collection from an iterator.
Create a stream from an iterator.
Compares two elements according to their natural ordering.
Set wiring mode to use.
Prints a message and throwable at the given level.
Gets the caller class.
Shorten a class name.
Exclude specified types from serialization.
Serializes the given object to the appendable.
Serializes the given object to a string.
Clones an object via serialization.
Writes an object to a file.
Reads an object from a file.
Converts an object to a byte array.
Reads an object from a byte array.
Resolves the entity names for the given types.
Create the names of the types.
read a value from a column.
cache result set entities.
Resolve provider definitions.
Returns the table name for the given table name.
Checks if the connection is valid.
Render view.
Finds the view target for the given path.
Get the writer to write to.
Get the response output stream.
Write content to response.
Sets the content type.
Prints a string.
Performs the login.
Return token as json object.
Authenticate using basic auth.
Converts a url to a file if the protocol is file.
Create a directory if it does not exist.
Create a directory if it does not exist.
Copies a file.
Copies a directory.
Moves a file from src to dest.
Moves a directory.
Deletes a directory and all its contents.
Read a UTF - 8 encoded file.
Read a file into a char array.
Writes chars to a file.
Writes string to file.
Append string to file.
Read count bytes from a file.
Writes an array of bytes to a file.
Appends the given bytes to the given file.
Copies a file or directory.
Deletes a file or directory.
Create a file in the given directory.
Checks if the file is binary.
Checks that the source and destination directories are the same.
Checks that the source file is a file and that the destination is a directory.
Prints the usage of the given command.
Resolve an action method.
Register an action method at the runtime.
Register a path alias.
Advances to the next value.
Create a sequence from a character array.
Executes the method.
Match upper case.
Create a character sequence from the input.
Returns all urls for the given class loader.
Appends multiple BCC addresses to the email.
Registers a new serializer for the given type.
Lookup the serializer for the given class.
Parses the request stream.
Get a request parameter.
Gets the values of a request parameter.
Get a file upload from the request
Get request files.
Initializes the filter.
Parses the given string and appends the result to the given sql builder.
Find the end of macro.
Count the number of escapes.
Build a query string from a multi - map.
Parse a query string into a multimap.
Prepare header parameter name.
Extract media type.
Renders the given node as an HTML string.
Renders the given node as an inner HTML.
Configured with a servlet context.
Resets the iterator to the beginning of the text.
Sets the lazy mode.
replace with mapped type
Parse as list.
Parse as map.
Resolve lazy value.
Skip object.
Parses a string.
Parse the content of the string.
Parse a Unicode code point.
Parse the content of the unquoted string.
Parse a number.
parse array content.
Create an empty ctor.
Create a simple method wrapper.
Resolves a raw type name.
Resolve a reference from the value of a property descriptor.
Resolve a reference from the given values.
Read references from annotation.
Build the default references.
Build the default references for a property descriptor.
Remove duplicate names.
Convert references.
Convert an ann value to references.
Runs the joys with the provided consumer.
Finds a method in a class.
Find a constructor of the given class that is assignable from the given parameter types.
Resolve all interfaces of the given type.
Compares two parameter arrays.
Force access.
Creates a new instance of the given class with the given parameters.
Get the superclasses of a given class.
Returns the child class of the given instance.
Gets the jar file of a class.
Causes the current thread to sleep for the specified number of milliseconds.
Causes the current thread to sleep with the specified wait time.
Waits until the object is interrupted.
Creates a thread factory that creates new threads as daemon threads.
Get the value from the supplier.
Visits a parameter of this method.
Visits an annotation of this method.
Visits a field instruction. A field instruction is an instruction that loads or stores the value of
Visits a method invocation. A method invocation is an instruction that invokes a method.
Visits a dynamic insn.
Visits a jump instruction. A jump instruction is an instruction that may jump to another instruction.
Visits a multia instruction.
Visits a try catch block.
Convert the properties to a writer.
Processes the input stream.
Returns the next element in the iteration.
return true
Joins the given arrays into a single array.
Joins the given arrays using the given component type.
Resizes an array to a new size.
Appends an element to the end of the buffer.
Remove a component of a given type from a buffer.
Finds the index of the first occurrence of the given value in the array.
Returns the index of the first occurrence of the specified value in the array or - num if not
Returns the index within the given array of the first occurrence of the substring starting at the given index
enable xhtml mode.
Parses the given content using the configured parser.
Parse the given lagarto parser.
stack.
End the current basic block with no successor.
Collect attribute prototypes.
Inject context.
Register a pseudo class.
Lookup a pseudo class.
Invoke an action request.
Returns all property names of the given type.
Visits all properties of the source object.
Accepts the given rule for the given property name.
Resolves the injection points for the given class.
Read configuration parameters.
Send bundle file.
Lookup a bundle file by bundle id.
GZip bundle file.
Register a bundle.
Creates the digest for the given source.
Create a bundle.
Deletes all the bundles and mirrors.
Rewrites CSS relative urls.
update value of given column of given entity
Create table ref name.
get db session.
Convert to single element array.
Parse a generics signature.
Resolves the set injection points for a given class.
Returns true if the given property type matches any of the ignored property types.
Opens a connection for a query.
Opens a transaction.
BEGIN TRANSACTION ;
Commits a transaction
Rollback transaction.
Create a new properties object from the given file.
Creates a new instance from the given string.
Load properties from a string.
Returns a subset of properties with the given prefix.
Create a new instance from the classpath.
Returns the string value for the given key.
Resolve all variables in the given properties.
Resolves the value of a property using the given map.
Resolves the scope pattern.
Returns the transaction mode for the specified method.
Register transaction annotation parsers.
Read transaction annotation.
Accepts the given node.
Returns true if the given node matches this pattern.
Accepts the node at the given index.
Unescape a string.
Build the list of packages for the given java version.
Clones this node to the given destination node.
Detaches this node from its parent node.
Add a child node.
Inserts a child node at the specified index.
Inserts the specified child before the specified child.
Inserts the specified children before the specified child.
Inserts a new child node after the specified one.
Inserts new child nodes after the given child.
Removes all child nodes of this node.
Returns the child node with the given name.
Filters the child nodes of this node.
Checks if the node is valid.
Initializes the child elements.
Initialize sibling names.
Initialize child nodes.
Changes the owner document of a node and all its children.
Gets the previous sibling node with the same name.
Gets the text content of the node.
Liefert ein HTML - Objekt in einer HTML - Objek
Visits all the children of this node.
Get the CSS path of this node.
Process a decora tag.
Processes a start tag.
Define the decora tag.
Add a proxy aspect.
Add a mapping for the given root package.
Adds the root package of the given class.
Find the root package for the given action path.
Resolve validation message.
Return a new bean references by removing duplicate names.
Add a new props file.
Executes the given consumer for each target.
Perform a consumer for each target and injection point in the given scope.
Execute a consumer for each target and injection point.
Extracts the values of the last parameter.
Builds the targets.
Create an action method argument.
Created http session.
Called when a http session is destroyed.
Adds an object to the array.
Appends all of the elements in the given array to this array.
Remove the element at the given position.
Resolves the target.
Called when a target is not found.
Converts the given object to string if it is not array.
Add an action filter.
Get the name of the pseudo function.
Resolves the properties of the given type.
Create a socks4 proxy socket.
Returns the total number of attributes in this list.
Gets all results.
Compares a character with a sequence of characters.
Find the first occurrence of match in source starting at index.
Find the first index of match in source.
Add more arguments to the command line
Set environment variable.
Runs the tool.
Invoke a listener.
Copy from another frame.
Gets the abstract type from a type descriptor.
Set input and output frame from the given internal representation.
return index ; }
Set the abstract type of the given local.
Push a new type onto the stack.
Push a new type onto the stack.
Pop a number of elements off the stack.
Pops a method descriptor from the operand stack.
Adds the initialized type.
Get initialized type for given abstract type.
Put an abstract type into the given byte vector.
Prune expired cache objects.
Visits a module. This method will be called for every module found in the class.
Visit an outer class. This method will be called for every class in the class file.
Visits an annotation of the class.
get db thread session
Closes the current session.
Creates the execution array.
Invokes the action method.
Read request body.
Calculates the first item index of a page.
Calculates the first index of a page.
Returns true if the given value matches this pattern.
Convert char array to byte array.
Find the index of the first non - equal character in the source array that is not equal to
Resolve node name.
Resolve attribute name.
Loads properties from a file.
Loads properties from a file.
Loads properties from the given input stream.
Loads properties from the given map.
Loads properties from a map.
Reload properties from classpath.
Get a value from the active profiles.
Sets a value for a given key.
Extract the properties from the map.
Extract properties from a map.
Extract sub props.
Create a map from the active profiles.
Add inner map.
Resolve the active profiles.
Get all profiles.
Get the profiles that match the given wildcard.
Add a property injection point.
Add a set injection point.
Add a method injection point.
Add the given points to the list of init methods.
Add the given methods to the list of destroy methods.
Resolve target class.
Inject target into wrapper field.
Return the type of the wrapper.
Find field descriptor.
Returns the type of this boolean field.
Resolve key type.
Resolves the component type.
Convert an object to a json object.
Builds a JSON result from an exception.
Resolve http method from method name.
Match string against pattern starting from index ndx.
Resolve loading.
Attempts to load a class from the classpath.
return null ; }
Blocks until the thread is interrupted or the end flag is set.
Detect annotation type.
Build an injection point.
Visit the type. Look for the class metadata name in the introspector.
Builds an array of urls for the given class loader.
Sets the bean.
Update the bean.
Load the property descriptor.
Connect to the oom database.
Add an iterator to the end of the chain.
Prints the logo.
Stop the game.
Create a socket.
Create ssl socket.
Returns the default ssl instance.
Get socket factory.
Creates a random string consisting of the specified number of characters.
Generate a number of random characters.
Randomly chooses from the given ranges.
Create a new instance of the given type.
Inject boolean value into target object.
Convert the given value to the given type.
Visits a provide method.
Create a default type instance.
Put t.
Get all method descriptors.
Resolve a hostname to an IP address.
Convert a string representation of an IP to an integer.
validate ip.
Returns the host name for the given IP address.
Downloads the given URL as a byte array.
Downloads a string from a URL.
Downloads a file from the given URL.
Connects to the given host and port.
Connects to the given host and port using the given timeout.
Returns the index of the given class.
load array class.
Load array class by component type.
Shutdown the bean manager.
Search for the element in the array.
Returns a binary search for the element in the given array using the given comparator.
Excludes given strings from validation.
Include any of the given strings.
Include all properties of the given class as the given template.
Set the start position of this element.
Register a component.
Resolves the sql type of a column.
Preprocess the given sql string.
Create result set mapper.
Find generated key t.
Populate generated keys.
Create a wrapper for the action interceptor.
Sets the bean.
Sets a map of query parameters.
Sets the specified objects at the specified index.
Inserts a chunk after the given one.
returns the descriptor for the given entity
find entity descriptor by column ref.
Resolves a table reference.
Resolves the class of the given object.
Append missing space.
Returns an enumeration of file parameter names.
Include a page.
Returns the full URL for the given request.
Gets request uri.
Resolve method parameter names.
Start the application.
Shutdown the Petite container.
Filter by subject.
Filter by message id.
Filter by from address.
Appends recipient string to the to recipient string.
Filter by cc address.
Filter by bcc address.
Filter by flags and value.
Filter by a flag.
Filter by received date.
Filter by sent date.
Filter by size.
Appends the terms of the given filters to the current one.
Appends the OR terms of the given filters.
Appends the given email filter to this one.
Concatenates the search term with the next term.
Base32 encodes a byte array.
Checks if is gzip eligible.
Validates the given object.
Validate the given target object against the given validation context.
Enables the given profile.
Enable the given profiles.
Matches the profiles against the check.
Parse the request body.
Convert this duration to milliseconds.
Add two julian dates.
Subtracts another julian date.
Sets the value of this element at the given index to the given value.
Emit a comment.
Print error message.
Create hash string.
Generate a PBKDF2 key from a password.
Convert a hexadecimal string to a byte array.
Resolve provider definitions.
Sets the name of the attachment.
Set content id from file name if not set.
Resolve content type.
Parse a field type signature.
The size of the module.
Put the attributes into the output byte vector.
Decodes a base64 encoded string.
Decodes a query string.
Starts the application.
Check connection provider.
Visit a method.
Visit the end of the node.
Create a method signature.
Convert an array of objects to a csv string.
Convert a line of text to an array of strings.
Resolve injection point.
Create a reader for the given advice class.
Returns a cached reader for the given advice.
Encrypt a string.
Decrypt a string.
Get a logger by name.
Sets the name.
Create a new action request.
Create a wrapper for the action filter.
Remove the bean from the list of beans to be destroyed.
Calls the shutdown methods on all registered beans.
Gets the messages from the server.
Entry point to the clustered service.
Run the report loop.
Prints an error message.
Print rate.
Maps an existing file to a read only buffer.
Close the archive.
Performs the work of the recorder.
Returns the current position in the log.
Offers a message to the buffer.
Append a padding to the message.
Closes the session.
Poll for error response.
Stops a replay session.
Print an image event.
Logs an unavailable image event.
Creates a reader that reads status indicators for a given channel.
Reads the status of a channel.
Sets the limit of the buffer.
Append a sequence of bytes to the buffer.
Return the next fragment from the assembler.
Creates a mapped byte buffer for a loss report.
Take a snapshot of the current state of the registry.
Create a default header.
Fill the given direct buffer with the given key.
Labels a message in the given direct buffer.
Sends a connect request.
Attempt to connect a message to a correlation id.
Sends a close session request.
Starts the recording of a message.
Sends a stop - recording request.
Adds a replay request to the queue.
Sends a STOP_REPLAY message.
Sends a list recordings request.
Produce a list of recordings for a given URI.
Sends a recording request.
Extends a recording request.
Requests the position of a recording.
Sends a stop position request.
Request a list of recording subscriptions.
Returns true if the tag matches the tag of the given channel.
Returns the destination address for the given URI.
Returns a description of this multicast group.
Add a destination to the list.
Attempt to insert a new packet.
Find the first control toggle counter.
Adds a parameter to the request.
Returns the channel tag associated with this message.
Returns the entity tag.
Adds a session id to a channel.
Returns the tag value of the param value.
Append a padding frame to the log.
Update the publisher limit.
Allocate a new buffer.
Returns the name of the type with the given id.
Scans for available space in the given buffer.
Clears all data in this builder.
Validates the builder.
Sets the prefix.
Sets the media.
Sets the control mode.
Sets the term length.
Sets the term offset.
Sets the linger.
Close the connection.
Check if a frame is valid for this header.
Receives an address from the datagram channel.
Occurs when a retransmit occurs.
Processes the timeouts.
Convert a long status to a string.
Allocate a new counter.
Resets the internal state of this vector.
Validates the offset and length of this vector.
Validates and computes the length of a vector.
Computes the length of the producer window for the given term buffer.
Validates the socket buffer lengths.
Validates the page size.
Validates session id range.
Validates the unblock timeout.
Set the error code.
Resets the state of this object to the initial state.
Encode cluster members as a string.
Add publications to members.
Closes all publications of cluster members.
Returns true if at least one member in the given quorum is active.
Get the highest position in the quorum.
Resets the log positions of the members.
Check if any of the members have a vote at or below the given position.
Returns true if at least one member has won the vote for the given term id.
Checks if a cluster has a majority vote for a given candidate term id.
Helper method to determine a member.
Validates a cluster member s endpoints.
Checks if two cluster members have the same endpoints.
Checks if a candidate is among the cluster members.
Checks if the candidate is a quorum candidate.
Checks if a cluster member has the given endpoints.
Finds the index of the member with the given id.
Removes a member from the cluster.
Returns the highest cluster member id in the cluster.
Maps an existing cnc file to a byte buffer.
Check if cnc driver is active.
Attempt to determine if the CNC file is active.
Checks if the driver is active.
Requests a driver termination.
Returns the length of the frame starting at the given offset.
Puts a frame length in the given buffer starting at the given offset. Frame lengths are
Puts a type into the given buffer at the given offset.
Puts the given flags into the given buffer at the given offset.
Puts a term into the given buffer at the given offset.
Puts a term id into the given buffer at the given offset.
Find counter id by recording id.
Find counter id by session id.
Get the recording id for a given counter id.
Checks if the given counter is active.
Feedback message.
Reloads the contents of the log file.
Find the last entry of the type term.
Create a recovery plan.
Create a recovery plan from a list of snapshots.
Appends a term to the log.
Append a snapshot to the log.
Commits a log position.
Write a tombstone entry.
Closes the context.
Offer a vector to the publication.
Unblock the term at the given position.
Get the channel name.
Sets the channel of the message.
Check term length.
Checks that the given page size is within the allowed range.
CAS the active term count.
Computes the position of a given term.
Computes the length of the log.
Store default frame header.
Apply the default header to the metadata buffer.
Rotate log.
Initialise the tail with the given term id.
Computes the offset of a term in a raw sequence.
Volatile long.
CAS a raw tail value.
Terminates the token storage driver by writing the token to the direct buffer.
Allocate a new counter.
Find the next available counter id.
Checks if a given counter has a replay state.
Get the recording id for a given service id.
Convert the given flags to the corresponding chars.
Set the channel name.
Offers a buffer to this queue.
Wraps the given atomic buffer.
Commits the current frame to the frame buffer.
Discard this frame.
Entry point to the media driver.
Closes all the runner instances.
Returns the current position in the buffer.
Allocate a new counter.
Find the counter id.
Allocate a new counter.
Closes the CNC file.
Dispatch a recording descriptor to a consumer.
add a new slab to the current slab.
Sets the byte at the given index.
Add a statistics object to the summary statistics.
convert array type.
Convert a struct type to a group type.
Annotate the given message with the given position.
end the run.
Reads a single struct from the input stream.
Reads the footers from the given configuration file.
Read the footers from the given summary file.
Read the parquet footer of a file.
return null if no more data
Read next filtered row group.
Read a dictionary page.
Adds a parquet record writer to the pool.
Remove a parquet record writer from the list.
Update the allocations.
Registers a scale call back.
Start writing magic.
Start a new block.
Starts a new column.
Write a dictionary page to the stream.
Writes a page of data to the underlying stream.
End a block.
Copies the given range of the given stream to the given stream.
End the parquet file with the given meta data.
Reads parquet files and merges them into a single parquet metadata object.
Processes a list of parquet files and merges them into a single parquet file.
Writes the metadata file to the given path.
Merges the given meta data into the given data.
Reads the next value.
Return true if the given schema is null.
Returns the first non - null object from the given objects or null if none.
Create a value from the given string and schema.
Create a new thrift meta data from extra data.
Produce thrift meta data from thrift class.
Return the extra meta data for this thrift instance.
Write null.
Write a single page of data.
Initialize from a page of input.
Allocate the values buffer.
check enum.
Calculate the widths of the delta block.
Throws the given throwable if it is an instance of the given exception.
Returns statistics for the given column type.
Get a builder for a given primitive type.
Merge the given statistics with this one.
Gets the non null schema.
Create a new task attempt context.
Invokes the given method on the given object with the given arguments.
Build a string representation of the members of this type.
Merges the fields of the given type with the fields of the given type.
Initializes the counter with a reporter and configuration.
Get the filter from the configuration.
Returns a list of footers.
Generate parquet splits.
Writes a message to the log.
Validates that the fields in the descriptor match the parquet schema.
Serialize a message descriptor.
return the list of events that are missing required fields
check that each set has the expected value
Read file meta data.
Closes the record writer.
Sets the schema for the given job.
Add a class to the parquet type.
Asserts that the given type is a valid parquet type.
Casts a long to an int throwing an illegal argument exception if the cast fails.
Creates a parquet schema from the given arrow schema.
Creates a parquet schema from the given parquet schema.
Maps a parquet schema to a arrow schema.
deprecated use writePageHeader instead
Discard records that are not matching the filter.
Writes the given object to the given configuration as a base64 string.
Remove a value from the cache.
Add a new value to the cache.
Get the current value for the given key.
Convert the given value to the given type using the given schema.
Set the glob pattern.
Outputs content to a file.
Returns an input stream for reading the given filename.
Creates a new column filter for the given column path and predicate.
Convert the given struct to a message type.
Creates a wrapper for a nested group type.
Creates a list of elements with the given name and type.
Gets merged key value metadata.
Read a parquet split from the file.
Gets the fields by name.
Resolve schema access.
Gets the input files from the given list.
Check parquet files.
Get the input files from a directory.
Creates a paged record filter.
Create a new list consumer from the given consumer.
Initialize the mrwork variable.
Merges the given tuple into a new tuple.
Sum up data.
Consumes a ENUM or ENUM field and calls the consumer for each.
Reads a map entry.
Writes an integer to the array.
Reads a big endian integer from the given offset in the given buffer.
Sets the avro schema for the given job.
Create a Kafka topic if not exists.
duplicate stage beans.
Create the interceptors.
Create a new interceptor.
Parses a string into a schema.
Convert milliseconds to days.
Retrieve an Avro schema from an Avro record.
upgrade from v1 to v2
Copy resources from blobstore to staging directory.
Resets the state of the statement.
Add a thread health report to the registry.
Register a new thread health gauge.
Stores control hub configurations.
Authenticates the user using the given credential.
Upgrades the library if necessary.
Performs upgrade if needed.
Upgrade the configuration if needed.
Upgrade the services if needed.
Upgrade the stage if needed.
get fields to null
Returns true if the given class name is a system class.
Adds the specified element to this set if it is not already present.
add and get evicted.
return null ;
Create a list of snapshots of all stages.
Gets the descriptor.
Gets all file descriptors from a set of protos.
Populates the given map with default values and extensions.
Gets the descriptor.
Convert a protobuf field to a sdc field.
Converts a SDC field to a protobuf message.
Convert a sdc field to protobuf msg.
Upgrade to jersey config bean.
Performs a connection to a kudu master.
Convert a kudu type to a field type.
Create a field from the given result.
Intercepts a list of records using the specified interceptors.
Get the text.
Add missing configs to a stage.
return record ;
Add the response headers to the response.
Writes the response header to the given record.
Write response header to record.
Saves the current metadata to the file.
Initializes the client with the given issues.
Parse headers only.
Increment the source offset.
Parse paginated result.
Add response headers.
Resolve request headers.
Processes the response.
Checks if the given property is defined in the given configuration.
Convert a recoverable data parser exception to a data parser exception
Convert a Streamsets pipeline lib generator exception to a data generator exception
Gets the credentials from the given path.
Use this method to preview outputs of a pipeline.
Copies data from the buffer to the underlying buffer.
Removes duplicates from a set of packages.
Find the next main line.
Find the next main line in the chunk.
Close the current connection.
Escape a string for use as a substring.
Get flow control settings.
Builds the gRPC channel provider.
Puts a batch of entries into the cache at the given offset.
digests and compiles the given expression.
Auxiliary digest expression.
Adds a dictionary to the dictionary store.
Adds a dictionary from a reader.
Stops the timer and returns the data.
Overwrites the current data with a new one.
Serializes an object to a string.
Deserialize a string to an object of the given type.
Deserialize an object from the given file.
write the record to the file.
Evaluate string.
Generate inner field from the list.
Get the table name from the metadata record
Get the database name from the metadata record
Get the boolean value of an internal field from a metadata record
Get the location from the metadata record
Get the custom location from the metadata record
Get the schema of an Avro record
Get the data format of a record
Create a new schema metadata field builder.
Validate partition information.
Generate the path for the given partitions.
Serializes an avro schema to HDFS.
set parameters.
Returns the configuration of the API.
Parses the given string as an RFC 3164 time.
Formats the given template.
Creates a new batch context.
Checks if the given record contains any solr fields.
Filter the list of autogenerated field names.
Sends an on record error event to the handler.
Parse a dependency from its name.
Parses the given URL as a dependency.
Get the singleton instance of couchbase connector.
Close the connection to the cluster.
Gets the label for a given numeric code.
Verifies that the given dependency exists.
Get the operation type from the header.
Builds a subdocument mutation.
Generate the alter table sql string.
Configure the kerberos client.
Consume messages from the queue.
Commits the batch at the given offset.
Sends an error to the channel.
Inject configurations for a specific stage.
Get definitions for a given stage
Get lineage publisher definition.
Format the name of the given column.
Helper method to format a string value.
Get information about a pipeline
Provisions a pipeline fragment.
Get a list of pipelines
Create a new pipeline fragment.
Returns the file path for the given path template.
get operation from sdc record
get field path string.
Retrieves an enriched event from the queue.
Get a runner from the queue.
; }
Return a runner to the pool.
This method is called when the engine is being destroyed.
Validate that the pipeline is not destroyed.
Checks if a stream with given name exists.
Get the last shard id of a stream.
Process a queue of records.
Handles a sql exception.
Computes a hash value for the given operation.
Compares the last modified time of two files.
Returns the pid of the given process.
Validate and extract fields to hash for this config.
) ; }
Roll all the timers by the given number.
Take a snapshot of the usage statistics.
Create the directory if it does not exist.
Performs the actual writing of the batch.
Performs the actual writing of a batch of records.
Writes a record to the cache.
generate no more data event
Detect new partition.
Update a record for HDFS.
Processes the given value with the given group.
Checks if two stages have the same version.
Entry point for the bootstrap cluster.
Builds a new authenticated client.
Resolves the headers.
Evaluates an expression as a http method.
Fills the bindings with null types.
Get the null value of a field.
Loads a schema from the registry.
Registers a new schema under the given subject.
Get the latest schema for the given subject.
Get the latest schema id for the given subject.
get schema by id
Writes a schema id to the given output stream.
Detect schema id.
Get the default values from an Avro schema.
Parses all the records in the given payload.
Logs the information about this version.
Get the bad records from the sink.
Initializes this stage.
Gets the outward edge vertices.
Gets the inward edge vertices.
Serialize offset map.
Deserialize a map from the last source offset.
Sends a report to the server.
Submits a report.
Checks if the check point file exists or not.
write offsets to file.
Deletes a blob from storage.
Handles an error in the GCS origin.
Handles an archive request.
get reader.
Discards the reader.
Sets the dpm base url for the authenticated user.
Add a default header.
Parses the given string as a date.
Escapes a string so it can be used as a URL query parameter.
Gets the client.
kinetica connection.
Get the metadata for the given table.
Create a new event builder.
Builds a schema from a map of fields.
Convert from oracle to sdc.
Adds jars to the job.
check field order by list.
Recursive method to check if there is a condition expression for a field.
Gets the lag time for the given file.
Run the premain method with the given arguments.
return num ;
Executes a query.
Get table description.
Validate that the table accepts all inserts.
get the type of the field.
Check if the type is nullable.
Get the schema of a table.
Get column properties.
Get class for a type.
Initialize the aerospike client.
Get the topic to publish.
Returns an input stream to the underlying file.
Returns a stream to write to the file.
Checks if the file exists.
Parses an fs permission string.
).
Creates a new simple aggregator instance.
Gets the unit.
Creates a new aggregator instance.
Create a new group by aggregation.
Start the data provider.
Stops the aggregator.
Rolls the data provider by the given window.
Releases a reference to a login instance.
Convert a glob string to a regex.
Returns a list of s3 objects in sorted lexicographical order.
Stop the capture phase.
Produce empty batches for runners with no runners left.
Create a failure batch.
Convert the given statement record to a bound statement.
Sets the values in the given configuration.
Generate kudu lookup key.
Reads a line and appends it to the string builder.
Rolls the timer back one millisecond.
Enables the given dpm.
Disabling DPM has no effect on the server.
Normalizes the base url.
Performs a login request to the given URL.
Logout a user.
Update token file.
Update dpm properties.
schema. field schema field.
Create complex schema for type.
DECIMAL SCALE or DECIMAL SCALE
Returns the default value for the given schema.
Initialize the metrics if needed.
Compares two files for order.
Returns the index of the group with the given name.
Returns the names of the groups this user belongs to.
Checks if the character at the given position is escaped.
Checks if the character at the given position is a slash escaped character.
Checks if the character at the given position is inside a char class.
Count the number of open parens.
Extract group info.
Replaces all occurrences of the given pattern in the given string with the given replacement.
Responds to GET requests.
refresh the schema for the given schema and table
start time ; }
Returns the current offset of the file.
Fast forward.
Convert string to number.
Parse a single part of the record.
Parse values.
Looks up the primary keys for this table.
Create custom field mappings.
Convert a field. type to a string.
Get the table name.
Sets the primary keys of the given record to the given statement.
Handles a sql exception.
Processes a single stage of the pipeline.
Prepare batch context.
Finish a batch with the given context.
Flattens the entire record.
Create a detached stage from the given bean.
Method to execute on record.
Get the columns to parameters map.
Returns the condition for the given partition and column.
Validates the specified offset against the specified table context.
Gets the definitions.
Gets non empty args.
Get the operation for the given operation type.
Convert a number of bytes to a human readable string.
Recursively scan a live file.
get the number of pending files
Checks if the given dependency is in the given whitelist.
Compares two version strings and returns true if they are the same.
Entry point for the spark example.
Propagates the runtime configuration to the listeners.
Validate report description.
Upgrade from v1 to v2.
Extract named groups.
Queues a commit message.
Creates an embedded sdc.
Sets the fields in the record.
get remote pipelines with changes.
Create a new remote data collector result from an ack.
Create a new gauge with the given name and gauge.
Builds a map of columns to parameters.
Generate header attributes.
Validates a single record.
Handle old temp parquet files.
get an Avro stream from a record
Creates a data file stream from the given input stream.
write parquet.
Checks that the given field is of the correct type in the given record.
Checks if the given field is of the supported type and if so throws an exception.
Checks that the given field is of type byte array.
Checks if the given field is of the correct type for decryption.
Prepare encrypt.
Use a new pattern.
Appends a replacement string to the given string buffer.
Returns a map of named groups.
Replaces all properties with the given replacement.
Gets the value of the given variable from the database.
Creates a start event.
Creates a stop event.
Adjusts the offset of a column.
Extract as runtime.
Add a partition query.
Execute an SQL alter table set tbl properties query.
describe database.
Execute a query.
execute a query
Execute a batch of jobs
Runs the consumer for each pipe in the pipeline.
Gets offset commit trigger.
Attempt to stop the pipeline if there is an error.
consumer. accept ( ) ; }
Gets the id for a record.
get value from field
Apply the given fragment to the given record.
Sets document in record.
CRUD operations on a record.
Partial s3 object for metadata.
Return true if the given sequence number is in the incomplete set.
Submits the given supplier for execution using the given class loader.
Logout of the subject.
Sets the stage lib exceptions.
Replace variables in the path.
Caller must be synchronized on cl.
Entry point for the program.
return dir path ;
rename to final name.
Checks if the roll should be applied for the given record.
Returns true if the given strings match the given pattern.
Returns the current offsets of the file.
Gets the remaining wait time.
Gets the offset for the given offset map.
Create a new delegate instance for the given library.
Create delegate instance.
Returns the value of the given metric element.
Find the end of the header.
Get the size of the body.
save bytes to a temporary file
Create an SSL connection to the given key and trust store.
Gets the mime type for a file.
Handle an incoming session.
Stops the server.
Add default handlers.
Sends the body of this message to the given stream.
Create a new fixed - length response.
Whether to use gzip when accepted.
Set a cookie in the cookie store.
Unload the cookie queue.
Decode base64 cookie value.
Encodes the given value as a base64 string.
Sets the name of the given table.
Returns the name of the given principal.
insert session repository filter.
Resolves the principal from the given session.
Gets a session from the cache.
Resolve JNDI name.
Returns the canonical parameter types of the given method.
Register an interposed synchronization.
) ;
return tx ;
Deploys the bean factories.
Does the given persistence unit metadata identify the cache region name?
Returns the dependencies of the server.
Decrement the read lock count.
Increments the read lock count.
Add a service to the deployment.
Handle the restoration of the cache.
Deploys the module.
Make all bean deployment archives visible from static modules.
Creates a new deployment.
Sets the config name and file.
get security meta data.
get servlet url patterns mappings.
Gets the mappings.
Resolve all views.
Get the set of connectors available for the given operation.
Parse the core environment element.
Parse process id environment element.
Returns the address of the given operation.
Sets the address of the given operation.
Returns the value of an operation.
Returns true if the given operation specifies include defaults.
Create a composite operation with the given operations.
Create add operation.
Create a new node with the given address and index.
Create a read - attribute operation.
Create a write attribute operation.
Create an undefine operation.
Lookup the value of this property.
Add a factory for the given scheme.
Remove a url context factory for a given scheme.
load providers.
Modified the deployment.
Configured endpoints.
Modify deployment context root.
Gets the transport class name from the deployment.
Set the outgoing run as the identity of the security context.
Pop the run as the identity.
Process servlets.
Injects a value to a property of an object.
Checks if the type argument matches the type argument.
Find a method.
Find field.
Derive useful info from the servlet request.
Run the report as a standalone instance.
Collects all JDK resources.
Register a resource adapter deployment.
Unregister a resource adapter deployment.
Register the transformers.
Writes the given parameters to the given output.
Reads an exception from the given stream.
Returns the object that owns the lock.
Releases the lock on the given instance.
Add a log entry.
Add cdi.
return cv ; }
Synchronously invokes an endpoint.
Gets the view method.
Checks if the method name and parameter types match.
Gets the ejb security meta data.
Compares two security domains and returns the first one.
Checks if two security domains are the same.
Sets the idl.
Gets the absolute name.
Create a new JNDI name from the given string.
Process the deployment descriptor.
Handles a request.
Checks if the current thread is in a transaction.
Gets the cached transaction synchronization registry.
Gets the connection factory.
Get the last component of the name.
Checks if the given name is empty.
Create a name not found exception.
Create a naming exception with a message and cause.
Create a new naming exception with a message and cause.
Create a cannot proceed exception.
Create a naming enumeration from a collection.
Rebinds the named object with the given value.
Get the active management resource.
Create a component instance.
Attempt to locate the spring integration jar.
Resolve the runtime name.
Create listener builder.
Gets the primitive analysis for a given class.
Shuts down the receiver. Any currently running value will be canceled.
Gets the url patterns.
Gets the servlets.
Gets servlet mappings.
Gets the security constraints.
Gets the login config.
Gets the context params.
get web resource collections meta data.
Gets servlet init params.
Creates a new security constraint.
Create a web resource collection meta data.
Create a new servlet.
Create a new servlet mapping meta data.
Creates a new authentication constraint meta data.
Factory method for creating a new user data constraint.
Create a new meta data param.
Creates a new param value.
Register session bean interceptors.
Stop the bootstrap service.
Get the JNDI name for the given model node.
Resolve the given attribute definition.
Get pattern type.
Returns true if connection factory should be used for pooled connections.
Matches an external pooled connection factory.
Get the active mq.
Returns the name of the default persistence unit.
Injects the SuspendController registers the activity with the SuspendController.
Called when the context is stopped.
Called when the server suspends the transaction.
Resumes the deployment.
Called when an invocation completes.
transaction created event.
Add the service to the naming store.
Remove the service from the naming store.
Get a capability service name.
Create resource roots.
Get all deployment module class loaders.
Checks if the given persistence unit need class transformer.
Checks if two phase bootstrap is allowed.
Checks if the given persistence unit metadata allows default data source use.
Skipped synchronization type check.
Get orb from server and port.
Initialization of applet.
Initialize method handles.
Set the active naming store.
Validate default values.
check param type.
Lookup the default value annotation.
Validate the base type.
Returns an array of deferred entity managers.
Converts an int status to a string.
Adds cache dependencies for the given cache type and properties.
Extract dialects.
investigate dialect.
Identify the dialect.
Checks the database.
Parses the given string as a date and returns the date object.
Set the name of the node.
Marks the given unit and all its parent units as having an attachment.
Read the parameters from the given stream.
Writes a return value.
Writes an exception to the output stream.
Recursive lookup method.
Starts the creation bean.
Ends the creation bean.
Gets the last num sfsb invocations.
Push a set of entity managers to the stack.
Removes the last n mappings from the stack.
Get the last call of the function.
Deploys a module.
Returns the idl of the given class.
Inserts a primitive into an Any object.
Converts a Java name to IDL.
is the string a reserved idl?
Gets the signature of a class.
Returns the signature of the given method.
Returns the string representation of a primitive type.
Get batch permission by name.
get or create transaction scoped entity manager.
Sets a new value for the given key.
Convert security role to model node.
Gets the most recent entity version of the given timer impl.
Gets the timers.
Gets the directory for the given timed object id.
Add a listener.
Remove a listener.
Fire an event.
Returns a consumer that closes the wrapped value.
Add a credential to the subject.
Get an object instance from the context.
add tx management interceptor for view
Replaces all occurrences of from with to in builder.
Create a transport configuration for a in - VM.
Add an ear prefix if relative name.
Gets the root deployment unit.
; }
Create a view configuration.
Create the injection source.
Returns the view interceptors for the given method.
Add a InterceptorFactory to the list of interceptors for all methods in this view.
Add a view interceptor.
Returns the client interceptors for the given method.
Add a client interceptor for each method in the factory.
Add a client interceptor for a method.
Puts the given data into the map.
Thrown when reading an unexpected XML element.
Gets jaxws deployment endpoints.
Gets jaxws pojos.
Gets the endpoint name.
Gets the endpoint class name.
Get servlet meta data by name.
Get required attachment value.
Get optional attachment value.
Get j.
Gets the j.
Gets the ejb metadata.
Gets the root of the context.
Returns the class object for the given name.
Attempts to load the resource with the given name.
Returns all resources with the given name.
List all resources under the given path.
Pops the top of the stack and closes all open entities.
Returns the entity manager for the given scoped name.
Register a clean up listener.
Deploy a war if the deployment type is not war.
Checks if all fields of a class are public.
Creates a new http endpoint.
Resolves a new deployment.
Checks if the deployment is a JAX - RS deployment.
Set the next time the timer should fire.
Set the state of the timer.
Merges the deployment data into this deployment data.
Deploys the module.
Add the remote transactions dependency.
Get the all container interceptors.
Returns true if the given method is on the method level.
Checks that there is only one of the elements in the set.
Gets the type.
Get component type from parameterized type.
Parse a name from the given string.
Convert a string to a vector of component names.
Parse a component from its string representation.
Shutdowns this object.
Converts a servant to a reference.
Authenticate the user using the given username and password.
Checks if is type matched.
Lookup a service by name.
Unbind a service.
Instantiates a bean.
Configures a bean meta data configuration.
Dispatch a lifecycle joinpoint.
Returns the current selector or the default selector if there is no current selector.
Build a service name from the given name and state.
Create a service name from the given class and state.
Returns the description of the class with the given name.
Process annotations.
Finish the steps.
Validates a descriptor.
Create a deployment.
Create web app descriptor.
Gets the auth method.
Deploy the service descriptor.
Handle a stateless session bean.
Create a stub class.
Returns the byte representation of an anonymous object id.
Gets persistence providers.
Clears all providers for the given deployments.
Add deployment specific persistence provider.
find parent module class loader
Deploy a service. xml descriptor.
Add persistence unit service.
Populate annotation indexes.
Gets the persistence provider adaptor.
Persist provider adaptor.
Lookup persistence provider.
Gets the annotated classes.
Create an EJB instance.
Build enterprise bean meta data.
Performs participant refresh operation.
Returns the analysis object for the specified class.
Lookup done.
Creates a new analysis instance.
Returns the idl module name.
Convert an integer to a hex string.
Converts a long to a hexadecimal string.
Returns true if the method is an accessor.
).
Returns true if the method has non app exceptions.
Extracts the name of an accessor from its name.
Extracts the accessor name from the given name
The overloaded operation names are the names of the methods that are overloaded. The overloaded
Fixup case names.
Escape the given name.
Parse an xts environment.
Parse the default context propagation element.
Process attributes.
Load provider modules by name.
Creates a new add operation.
Deploys the unit.
Writes an attribute.
Create a remote session.
Infers the destination name from the given address.
Registers endpoint handlers for the given endpoint class.
Get job xml names.
Initializes the class loader.
Get the request URI from the request.
Create a new result using the specified URL.
Lookup an object by its name.
Bind the given object to the given composite name.
unbind a path from the context
Returns an enumeration of the bindings for the given name.
Call the destroy method on the given naming context.
destroy a subcontext
Bind a new context.
Create a new subcontext with the given name.
Lookup a link by its name.
Add an environment variable to the environment.
return null ;
Add transformations.
Remove a security domain.
Lookup a JNDI object.
Create a new reference of the given type.
Create a new reference for a given class.
Create a new reference of the given type at the given factory.
Gets the idl for the given type code.
Wait for a security domain service to become available.
Computes the masked password.
Initialize the vault.
Starts a new vault session.
Display the created attribute.
Displays the vault configuration.
Returns the vault configuration as a string.
Check that the service is not null.
Get the deployment service name for a resource adapter.
Inserts the value of this element into the given any element.
Return true if the given permission implies this permission.
Get the action string.
Returns the name of the log.
Send a state change notification.
Gets the value of the given type.
Returns the context service name.
Gets all interceptors.
Add a new method interceptor.
Add a dependency.
Gets the interceptors for a given method.
Returns a list of interceptors around the given method.
Add a timeout view interceptor.
Add a single interceptor factory around this one.
Add a post construct interceptor.
Add a pre destroy interceptor.
Add a pre passivate interceptor.
Add a post activate interceptor.
Set the component create service factory.
Remove the specified number of jndi bindings from the given context.
Add the remote transport providers to the builder.
Returns the component context service name.
Create a service name from app and module names.
Bind info for a environment entry.
Lookup the bind info for the given name.
LRU cache.
Get the value members.
Get value members for this type.
Create a subsystem root node.
Parses a configuration element.
Starts the service.
Create a service name from a deployment name.
Add a component to the deployment.
Add a message destination.
Get the descriptions of all components for a given view type.
Get the descriptions of the given component.
Get the descriptions of the given component and view.
Resolve a message destination.
Builds the transformers 2. 0.
Rejects defined attributes with default value.
Pops the identity from the cache.
Loads the ids manually.
Checks that all the versions are valid.
Compute slot from jsf version.
Gets the constant type code for a class.
Add a type code for a class.
Attempt to create the module if it does not already exist.
Returns the interfaces of the given analysis.
Returns the abstract base valuetypes of the given analysis.
adds the class to the set if it is primitive.
add interface.
; } }
adds the exception to the exception table.
Gets the injection type.
Create the store if not already started.
Closes the root context.
Checks if the given method type is allowed by the current invocation context.
check transaction sync.
Get all component classes.
Get the waiting on tx completion timers.
Get the extra parameters that are not in the allowed keys.
Extracts the parameters from the model.
Converts a type to a class.
Convert the given value to the given class.
Get the types of the given values.
Checks that the array of class names and class infos are equal.
Returns the next element in the iteration.
get more.
Builds a naming object from a bndg.
Observe resources.
Shutdown all health checks.
Lookup the object handle for the specified ejb.
Converts the given model node to an enum value.
Skips the given amount of bytes in the given stream.
Checks that both elements are not already present in the seen set.
Add a component description.
Add a set of class loaders to the deployment class loaders
Unbinds a name from the last component.
Lookup object by name.
Return the list of pairs of the given name.
Returns the list of bindings for the given name.
Add a factory to the chain.
Create a new setup context handle.
Create the io subsystem if it does not already exist.
Create a welcome content handler.
Gets a bean from the pool.
calculates the operation analysis map.
Collect resource metrics.
Build the deployment unit.
Deploy the given service target.
Performs the publish.
Stops web application.
Start the service.
Registers endpoint configuration.
Retries the given timeout if it is active.
Perform timeout processing.
Get the declared methods of the given class.
Get the declared fields of a class.
Get the constructor of a class.
Get a method from a class.
Add messaging activemq if it does not exist.
return true ; }
Migrates a generic transport operation.
Attempt to cancel the task.
Run if not cancelled.
Set the type.
Returns true if this function can be executed without an index on the given object.
Recursive method to find all classes in a directory.
Returns all classes in the given package that implement the given interface
Gets the generic multivalue type.
Evaluates a record.
derives the requested field type from the given field name and requested field type.
Update a record.
Find a record by its id.
Get the minimal set of nodes for a query.
Flattens a where clause and moves equalities to the left.
Add order by to the planning info.
Extract sub queries from planning info.
Checks if the given rid belongs to any of the clusters in the database.
Handle class with index only.
Is the given class a diamond hierarchy?
Get the order direction.
Returns true if the given condition requires multiple index lookups.
Choose the best index for the given class.
Computes the common factor for all index search descriptors.
Create a new instance of the given strategy.
Check if this permission is allowed for the given operation.
Checks if a rule is defined.
Returns a compact representation of the server status.
init system database
Load local databases.
region > member removed
elect a new lock manager
Chooses a lock manager from the cluster.
Commits the current transaction.
Rollback the transaction.
Update the identity after record commit.
Update the record cache after rollback.
Prepare a path for deletion or replacement.
Move the source path to the target path if atomic move is not supported.
Returns the disjoint set of patterns.
This method only executes locally if the execution is idempotent.
Specified the characters of a character array.
Checks if the socket is connected.
Merges two buffers into a short.
Splits a short into two byte buffers.
Returns the number of properties in the source class
Add a single value to the dictionary.
Removes the given object from the set.
Run a command on the database.
Executes the command and returns the first result.
Creates a new channel.
Checks that the given region is within bounds.
Replace the content of the file with the new content.
Execute a command on the server.
Ends a request on the given network.
Add the host.
Submits a request to the specified network.
Gets the database.
get connection.
This method kills a connection.
Interrupts a connection.
Disconnects a client from a channel.
push messages to all clients
Swaps the element at the given index with the given new value.
Release all locks.
Synchronizes the schema of all registered entities.
Update the metadata.
Navigates to the last record in the list.
Reads the next character.
Executes the sub - query.
Sets the callback to be invoked when an async replication error occurs.
Register a compression class.
Return the number of open files.
Returns true if this expression allows indexed function execution on the given target object.
Moves the cursor to the given position.
Fills the buffer with a given number of bytes.
Execute until a return value is found.
Executes all the steps until return ( ctx ).
Evaluates a boolean expression.
Executes the query.
Loads a record from the store.
Parses the given request.
Executes the request.
Update the schedule starting at the given node.
Add an index definition.
Aggregation operator.
Maps the given source object to the given type.
Get the collate for a given document.
Gets the value of the property.
Advance probe.
Execute the command.
Build a json object from a file
Checks the given password against the given hash.
Hashes a string with the given algorithm.
Checks if the given algorithm is supported.
Create a new cluster.
limit = num ;
Returns the edges of the graph.
return null ; }
Distributed timeout.
Returns the current set of features.
Checks if the given changes are filled up to the given page index.
parse a timeout
Parse a lock strategy.
Creates a cluster.
Frees a cluster.
Startup the profiler.
Shuts down the underlying profiler.
Creates a new instance of the singleton.
Grant access to a specific resource.
Revoke a permission from a generic resource.
Returns true if the given record is valid.
Resets the size of the bit table.
Gets the index of the given item in the table.
Spread the provided value using the specified number of iterations.
Create a new index of the given type.
Drops all indexes related to this class.
Returns the first index in the schema.
Gets the linked class.
Eagerly load the document.
Removes a listener from the list of listeners.
Registers a database.
Timeout a request.
Creates a copy of the database.
Attempts to merge the given value into this value. If the other value is not an embedded
Replace the delegate object with a new one.
Transform result.
Execute cluster command.
Closes all open databases.
On storage unregistered.
Get the names of all registered functions.
Get all the names of all the factories.
Get all known command names.
Reads the size and type of the current field.
Write status.
write headers to response
Writes a batch of records to the response.
Writes a record to the response.
Send a message to the server.
Send a stream to the server.
Open a new database connection.
Closes the connection to the database.
Respond to changes in a collection.
Decrement the operation count of a component.
Push all counters for all components in this snapshot to the given map.
push write cache counters holder.
Pushes new counters to the end of the snapshot.
Push a new wal to the given holder.
Push a set of performance counters for a given component.
stop writing cache
Stops the timer for fuzzy checkpoints.
Stop the full checkpoint timer.
Stop the commit timer and update the statistics.
Stop the WAL.
Stop writing to the WAL.
Parses the given string and returns the result of the parsing.
Initializes the receive thread.
Disconnects from the Discoverer.
Remove the record from the graph.
Sets the value of the given property on this record.
Removes the property with the specified key from the record.
check for class in schema.
Wraps the given cursor with the given source object.
Define a new attribute strategy.
Define a new edge attribute strategy.
Get new record by class.
Get new record by cluster ids.
Add an index entry.
Merges the source set into the target set.
return true ; }
Returns true if the function can be executed without an index.
Creates a set of comparables from the given keys.
Write a page to the cache.
Read a single page from the file.
Truncates the page at the given index.
Opens the file.
Checks if replication is active for the given cluster.
Gets the new node strategy.
Checks if is execution mode synchronous.
Returns true if the cluster has read your writes.
Get a map of server names to servers.
Get the servers for the given cluster names.
Returns true if the given server contains at least one of the given clusters.
Check if a server belongs to a specific cluster.
return list ; }
Get all configured servers.
Get all clusters on a given server.
Get the set of clusters owned by the specified server.
return owner ; }
Gets the configured cluster owner.
Get the list of configured servers for the given cluster.
Get the names of the servers.
Get the data centers.
Get the quorum of a data center.
Returns true if this instance is sharded.
Returns the list of servers for a data center.
Gets the data center of a server.
Gets the global read quorum.
Get the quorum of the write.
Gets the cluster configuration.
get data center configuration.
Clear the initialization stack and the active stack.
Returns the element at the given index.
Drops an index.
Add a new vertex to the graph.
Add an edge to the graph.
Gets the vertex with the given id.
Get all vertices of a given class.
Get all edges of a given class.
Gets the edge with the given id.
Reuse a database.
Shuts down the database.
Get the base type of this vertex.
Get a vertex type by name.
Create a new vertex type.
Drops a vertex type.
Get edge type.
Create an orient edge type.
Gets the element.
Drops an index for a given key.
Remove a background exception listener.
Notify all listeners of an exception.
Stop monitoring.
Register a managed mbean.
Unregisters a previously registered mbean.
fetch write cache counters holder fetch write cache counters holder fetch
This method fetches system counters.
Fetch performance counters for a specific component.
Returns the value of the given property.
Detaches the given pojo from this one.
Get the version of a pojo.
Executes the given SQL command.
Set dirty.
Unset dirty.
Returns all the types in the index.
Get all algorithms from all factories.
Returns the list of nodes that have no responses.
Get the responses that conflict with each other.
Get the index of the group with the largest number of coherent responses.
Attempt to compute the quorum response.
Get the received responses.
Gets the result of the given SQL statement.
Returns true if the left - hand side allows indexed function execution on the given target.
get library.
Release a database engine.
Gets the next position.
Update the size.
; return null ;
Returns true if the index can be iterated.
Finds the first index of a character outside a set of strings.
Jumps to the next white spaces
Jumps a number of characters from the current position to the next.
Set the fetch plan.
Enqueue a record for the given rid.
Cancels a repair record.
Enqueue a cluster to be repaired.
Returns a map of alias to set of dependencies for the given pattern.
create pojo pojo.
Registers a collection of entity classes.
Recursive method to register entity classes.
Set the entity class handler.
Acquire a database from the pool.
Get the number of available connections to a user.
Acquire a database from the pool.
Execute cluster.
Lookup an iterator for the given class.
Check cache memory configuration.
Creates a new vertex from the given json object.
Creates an edge from a JSON object.
Create a json object from a graph element.
Create an object node from a graph element.
Submits a job to the pool.
Returns the current status of the job.
Returns a map from data center names to active data centers.
Split a cipher transform string into a cipher transform string.
Create an object from a config object.
Load an object from a file.
Create an object from a stream.
Encrypt the given bytes using the secret key.
save to stream.
save to keystore.
Sets the child.
Adds an object to the result if it is not already in the result.
get value as object or map.
Authenticate a user using the given username and password.
Recursively get a value from a map.
return reused
Processes the current record if the limit has been reached.
return g ; }
get no tx graph.
Create a new connection pool.
Returns the value of the given property.
Stops a transaction.
get the next token.
Returns the token at the given index.
Get a list of vertices in a given direction.
Removes this vertex from the graph.
Adds a new edge to the graph.
Add an orient edge.
Gets the connection class.
get connection o.
Processes the broken rids.
Returns the console methods.
Execute a task on the local node.
Returns the number of nodes in the collection with the given status.
Wait for next retry.
Gets the i th argument.
Checks if the request contains any of the given parameters.
Connects to the server with the given credentials.
Lists all available databases.
get info about the server
Check if a database exists.
drop a database.
Freeze a database.
Release a database.
Returns the status of the cluster.
get orient graph.
parse retry.
Synchronously saves a record to the database.
Deletes a persistent record.
Gets the authentication header.
Authenticates with the server.
Checks if a user is authorized to access a resource.
Shutdown the server.
Adjust line and column numbers for the start of a token.
Set a pointer in the bucket.
Get a pointer to the given offset in the bucket.
End an atomic operation.
Acquire the exclusive lock until operation completes.
Change the maximum amount of memory in the cache.
Listen for connections.
Read parameters.
Shutdown the log manager.
Add an item to the cache.
Remove a key and its value from the cache.
Acquire an entry from the cache.
Returns the value associated with the given key.
Clears the contents of this map.
Close the entry for the given key.
Empty the read buffers.
Drains the buffers after a write.
Drains the read buffers up to the entry s entry count.
Allocate space in read buffer.
Returns the closest power of two to the given value.
Process push request.
Convert the given key to an enum.
Convert all of the elements in the underlying map to enums.
Get the serializer for the given type.
Add shutdown handlers.
Get engine by name.
Add the current state.
Authenticate a token.
Creating the metadata.
Attempt to acquire a read lock.
Gets the vertex in the given direction.
Returns the id of the element.
Sets a property on the current graph.
Remove a property from the current graph.
Clears the contents of the cache.
Deletes the contents of this file.
Ends the importer.
Create a new vertex.
Parses the strategy word.
Gets the positions from an embedded collection.
Executes the command.
Checks if a link is connected.
Fills the given record with the given values.
Sets the version field of the given object.
Gets the record type.
Initialize the distributed database instance.
Prints an exception stack trace.
Convert link2 record.
Register a command.
Create server user.
Analyze condition.
Create an indexed property.
Attaches all fields of the given object to this one.
Gets the index class.
return value ; }
Truncates the cluster.
add base class o.
Add polymorphic cluster ids.
Link to stream.
Release an object back to the pool.
Check if there are any memory leaks.
Clears the contents of this map.
Convert a big endian 8 - byte to an int.
Reloads the given database.
Install clusters of a given class.
Dump the current status of the servers.
Finds the index of the given object in the given array.
Returns the index of the given object in the array.
get involved clusters.
Processes the next result.
get temporary rid.
Add a tip to the context.
parse fetchplan keyword
parse nocache keyword
Optimize sort.
Returns the current status of the batch.
Execute the command.
JVM error.
Puts an object into the data store.
Rollback a transaction.
Repeatedly invoke a command.
return id ; }
Sets a property.
Executes the CREATE CLASS.
Execute the update.
Delete an existing object.
Processes the hooks for the given type and id.
Delete an existing object.
Returns the number of instances of the given view.
Returns the number of instances of the given class.
Activates the thread.
Register an encryption instance.
get relative index.
Parses the next word.
Parses the next word.
Parse the next sequence of characters.
Parses the next keyword.
Checks if the given character is a separator.
Queries the database for the class.
Clears the configuration files.
Get the current position in the buffer.
Extract the value for the given token type.
Obtain an access token from the provider.
Copies the current access token.
Check if there are no more characters.
Reads the next line from the stream.
Skips over the given number of bytes by reading from the underlying stream.
Ensures that the given offset and length are within the given array.
Swaps num elements of a and b in the specified swapper.
MurmurHash3 128 - bit hashing for 32 bit values
MurmurHash3 64 - bit
Writes a byte buffer to the stream.
Truncates the file to the given size.
Sets the current position of the stream.
no fail refresh metrics.
Await successful completion of all tasks.
Searches for matches of the given query.
Finds the compaction targets.
Deletes all snapshots.
Returns a hash code for the given field.
Removes all references that are outside the closure of the given matches map.
Called when an announcement is completed.
Called when a cycle is completed.
Reads and returns the header tags.
Extracts the primary key of the given object.
Removes all of the elements from this set.
Reads the ordinals of the hollow type state from the given stream.
Returns the estimated number of bits in this set.
Gets the field value.
Copies length bytes from src to dest
Copies up to length bytes from the source position to the destination position.
Compares the specified range of this instance with the specified range of the specified array.
Copies the given segmented byte array into this buffer.
Copies the specified range of bytes from the source position to the destination position.
Reads a sequence of bytes from the given input stream.
Writes the contents of this buffer to the given stream starting at the given position.
Ensures that the given segment has enough memory.
Get the position for the given field name.
Calculates the deduped sizes and the number of buckets.
Checks if the dataset has any collections in it.
Generates all the files in the given directory.
Generates the files for the hollow schemas.
Returns true if the given ordinal matches any of the given keys.
Returns the array of object corresponding to the given ordinal.
Create a field path for a given primary key.
Create a field path for an index.
Puts an object into the set.
Initialize the field path.
Returns true if the string set contains the given key.
Add a field to the specified type.
Returns a list of schemas ordered according to their dependency order.
Initializing with default values
Gets the value at the given index.
Find matching records.
Find matching records.
Sets the paths of the matched elements.
Set the element paths.
Restore from the last state.
Cycles through the mutations.
Excludes the given key from the given hollow primary key index.
Excludes referenced objects from the graph.
Writes a hollow blob header.
Calculates the type metrics.
Writes all the fields in this record to the given buffer.
Writes a fixed length integer to the given buffer.
Writes a fixed length long to the given buffer.
Return an ordinal to the pool.
Sorts the elements of this array.
Hashes a key with a type.
Returns a hash code for the given key and field.
Resize storage.
Find the free ordinal for the given preferred ordinal.
Allocate space in the table for writing.
Compares the given serialized representation with the given key.
Grows the key array by a given size.
Rehash the data associated with the given key.
Create an empty key array with the given size.
Returns true if two traversers have the same match.
Return the unique instance for the given key.
Swaps the current and pending read states.
Returns the size of the hash table.
Runs a cycle of compaction on the current read state.
Writes a snapshot of the current state.
Writes the delta to the given output stream.
add to set if not primitive or collection
Normalize field path to param name.
Rebuilds the hash index.
Finds the first occurrence where the query object is in the set of matched objects.
Triggers a refresh with random delay.
Trigger a refresh with a delay.
Add a new type diff for the given primary key paths.
Writes the given value to the given output stream using the correct encoding.
Writes a value to the byte array starting at the given position.
Reads a variable size integer.
Reads a long from the given stream.
Derived classes should call this method to add views.
Refresh the size of loading views.
Update the UI.
Handles a pull event.
Builds new fact with given name and value.
Add facts to the rule.
Creates a new rule builder.
Creates a new golden rule.
Creates a new rule builder with the specified fact type.
Creates a new rule builder with the specified result type.
Create a new rule builder for a given fact.
Build a new auditable rule.
Builds a new auditable rule.
get rule instance.
Gets the annotated field.
Gets annotated method.
Get an annotation from a class.
Registers an auditable rule.
Update the status of an auditable rule.
Get the current rule status map.
Returns a new rule book based on this one with the specified result type.
Add an action to the rule.
Add an action to the rule.
Resets the value to the default.
Builds a new rule with the specified fact type.
Get rulebook pojo.
Read empty line or end table.
Convert a list of services to an array.
get ports from image configuration
Extract the ports from the configuration.
Parses the port mapping.
add port to list if not null
Remove the port at the specified index.
Add missing service parts.
Adds an image stream to the given file.
Checks if the given ports match.
Convert service to port environment variable or blank string.
Get service host and port.
Puts a value to the map only if the key is not present.
Merges all absent values in the given map into the given merge map.
Merges two maps.
Put all values from to ret if not null.
Watches until the pod is ready.
Validates the given kubernetes id string.
Converts an object to a list of has metadata.
Gets the resource version.
Check if a pod is ready to run.
Gets the current context.
Checks if a kubernetes list has a route with the given name.
Checks if the given paths have a resource.
Read and enrich a fragment.
Convert a map of environment variables to a list of env vars.
Merge resources.
Merge maps and remove empty strings from original map.
Checks if a pod spec has a local customisation.
Reads a config file.
Add port to map if valid.
Get docker json config string.
Get plugin configuration.
Lookup a secret configuration by id.
Downloads a file from the given URL.
Compare two version strings.
Blend profile with configuration.
Lookup a profile by name.
Recursively read profiles from the classpath.
Read all profiles from classpath.
Find profile yaml.
Get the list of profile paths for the given extension.
Convert a yaml stream to a list of profiles.
Gets the image pull policy.
Returns true if the shift mode is open.
Gets the replica count.
Returns the first child element with the given tag name.
install template.
Removes all tags with the given name.
Applies a namespace to an entity.
Request to update a project.
Processes a project request.
Returns the kubernetes namespace for the given metadata entity.
Apply an error to the context.
Create the namespace items.
Populates the given kubernetes list builder with the namespace information from the configuration.
Gets the mojo environment.
Parses a duration in seconds to an integer.
Converts a duration string into a duration in ns.
Scans the build output directory for files that match the given patterns.
Disabled open shift features.
Checks if a service has a ingress rule.
Parses the given mapping file and returns a map of kind - > scanned filetypes.
Returns the default icon ref.
Recursively copy app config files to the build directory.
Get properties from a resource.
Gets the spring boot version from the given maven project.
Build the enricher list.
Get raw configuration map.
Flattens a map.
Returns the singleton template.
; }
Returns the value for the given key or the given default if no value is defined.
Returns the map for the given name.
Prepares a list of named objects.
Add the from image.
Get from mode.
Get image name.
get registry string.
Returns true if the server is online.
Gets the external service url.
Returns the boolean value of the given property.
Create jest client.
Create an internal node.
Scan plugins.
american express rewards balance from json string
American Express rewards balance.
parse pay pal payment resource from json string
Performs a HTTP GET at the given path.
Performs POST to the endpoint.
Creates a venmo configuration object from a JSON object.
Collects device data from a braintree fragment.
Collect device data.
Collects client metadata from a braintree fragment.
get client metadata id string.
Checks if the signature of the given package is valid.
Get a property as a string or fallback.
Parse payment method nonces.
Recipe for browser checkout.
Browser billing agreement recipe.
Performs a HTTP GET request.
Submits a POST request to the specified path with the specified data.
Perform a POST request.
Approve payment.
Add a listener to the list of listeners.
Removes a listener from the list of listeners.
Request a billing agreement.
Processes the result of an activity.
Build paypal account builder from response.
Add a list of words to dictionary.
Remove word from dictionary.
Convert a sequence of korean tokens to a list of strings.
Extract phrases from a sequence of korean phrases.
Detokenize a list of tokens.
Fetch size bytes from channel ch.
Join a list of nal units into a single one.
Concatenates a list of nal units into a list of bytes.
Get the profile for the given index.
Approximate the taps by the given precision.
Reads to the next N bytes starting from the current marker.
Reads a buffer from the input stream to the next marker.
Get the maximum frame that can be played.
Modify the file.
Get the duration of a trak box track.
Converts a trak and a frame number to a timevalue
Get the frame for a given trak and tv
Convert a trak box media tv to a edited one.
Get the media time of a trak box edited tv
qt player frame no.
Convert movie time to qt player time
Convert a timevalue to a timecode frame
Returns a string representation of a timecode.
Create a 7 bit integer from eight bits values.
Set a value in a list.
Checks if the given color space matches this color space.
Get the size of a component.
Create a m from a seekable byte channel.
Reads the next word from the cache.
Create a wav header with the specified audio format and number of samples.
Create a wav header from an array of headers.
Parse aac data.
Encodes the given context.
Splits a movie box into a track and a movie box.
Decode a single frame from the stream.
Sets the endianness of this element.
Decompose the block from mb.
Convert a picture to a video frame.
Encode a long to an array of bytes.
Get the length of a value.
Add a packet to the stream.
Reads the next num bytes from the file and repositions them.
return bin ; } return 0 ;
Reads the next bin bypass.
Go to the specified number of markers
Returns the frequency of the i th entry.
Predict the plane at the given point.
Initializes the given block with the given number of bits.
Multiply a block by a coefficent.
Finish the block by dividing each block by the number of blocks.
Concatenates the bits in the buffer to this one.
Rewinds a 32 - bit unsigned integer to a 32 - bit unsigned integer.
Attempt to seek to the specified frame.
Get the picture from the store.
get change point id.
Convert byte array to int array.
Convert an integer array to a byte array.
Writes samples in the given format to the given buffers.
Adapted from Float.
Interleaves an array of buffers. Each frame is interleaved using the specified format.
Deinterleaves the input buffer into the output buffer.
Get the size of the video.
Build the wipe map.
Read an ul object from the given byte buffer.
Reads a batch of int32 values from the given buffer.
Computes the product of three vectors.
Encodes a single frame of the given picture.
Compress a picture into an output buffer.
Compress a picture into a byte buffer.
Returns a list of all codecs that are supported by this codec manager.
Returns a list of the codecs that are supported by this codec.
add reference.
Garbage collection.
Flushes the references.
Load the native jni library.
Unpack library.
Deletes all the temporary files.
Return the default layout for the given number of channels.
Get the channel from the layout at the given index.
Make a new media packet.
Gets the version info.
The default time base.
Make a demuxer.
Play a video file.
Displays the video at the correct time.
Returns a codec descriptor for the given codec. id.
Prints the given option to the given stream.
Registers a factory for the given protocol prefix.
Generate a unique name.
Create a new audio resampler.
Returns the supported video frame rates.
Supported video pixel formats.
Returns a list of the supported sample rates in the system.
Returns a list of supported audio formats.
Supported audio channel layouts.
Set the given flag to the given value.
Set the given flag to the given value.
Get the decoder for this function.
Get the demuxer handle.
Returns a set of all available formats.
Returns a new filter graph.
Returns the type of the filter.
Get a byte buffer from the buffer.
Makes a new audio frame of the given audio format.
Resamples a picture.
image.
Validate the picture.
Get the filter graph for this filter.
Get the meta data of this key.
Gets the cpu.
Convert a GNU string to a Cpu object.
Get the OS corresponding to the given string.
Get the operating system from the given gnu string.
Plays an audio file.
Loads a library only if it has not been loaded before.
Set the version of a library.
Load a library from a list of candidates.
Initialize search paths.
return true ; }
Deletes the object.
Returns the stream at the given position.
Get the current muxer.
Creates a transaction.
Decodes a base - 64 encoded string.
Generate a random seed string.
Get a transaction by id
Gets up to the given limit transactions from the given address.
Request a list of transactions from an address.
Get a list of blocks in a range.
Get a block by signature
Sends a request to the server and returns the response.
Submits a script to the channel.
Executes a script and returns the result.
Writes an array to the stream.
Flushes this buffer to the underlying stream.
Writes an object to the memory returning the number of bytes written.
Reads the class information.
Writes an object to the output.
Sets the mmf.
Returns the specificity of the specified class.
Store the given number of bytes in the file.
Remove the element at the given key.
Write a string in ascending order.
Set the output stream to be used.
Creates an fst configuration with the default settings.
Create a new struct configuration object.
calc object size bytes not a.
Clears all caches.
Returns an fst object that reads from the given stream.
Reads an array of bytes and returns an fst object containing the bytes read.
get object input from byte array.
Copies the contents of this fst into the specified output stream.
Registers cross platform class mapping.
Get the name of a class.
Writes an int to the stream.
Writes an int to the output.
Writes a variable - size integer followed by a variable - size integer.
Write a raw name to the stream.
Caller must be synchronized on refs
Notifies the registered listener that an object will be written to the stream.
Notify listeners that an object has been written.
Returns the serialization info for the given class
Writes an array.
Set the string to be parsed.
Writes a primitive array to the underlying stream.
Finish tracking changes.
Create a snapshot of the changes from the given base.
register object for write
Writes an object to the given byte array.
Reads an object from the input stream.
Reads up to len bytes from the underlying storage.
Reads the next num bits from the stream as an int.
Truncate the queue.
Sets whether the thread pool is enabled.
Starts the embedded cassandra daemon.
Clean data from embedded cassandra driver.
Copies a single resource to a directory.
take a remote port from a node
Return an empty subscriber state.
Get the descriptors of an onnx op.
Calculates the shape of the output of this function.
logical or of two complex numbers.
Performs a logical AND on a number.
Performs a logical AND operation on an nd4j vector.
Computes the bit - wise logical or of two numbers.
Apply where.
Returns the index of the first element of the array that satisfies the given condition.
Builds a flat representation of this property.
Convert flat properties to a properties object.
Flattens a collection of properties.
Set the throwable.
Sets the first throwable in the queue.
Merges two lists of coordinates.
Partitions an array into chunks of num elements.
Convert from onnx type to nd4j type.
Shutdown the server.
Returns the architecture of the current device.
Convert a column of a matrix to an image.
Pooling 2 - D
Creates a compression descriptor from the given byte buffer.
Splits the given list into batches of the given size.
Validates that the given arrays have the given dimension.
Set the data buffer type.
Returns an array containing elements of the specified range of values.
Convert a collection of matrices to a flattened nd4j matrix.
Computes the product of two matrices.
Create a complex vector with the given data.
Create a complex number with given value
Create a one - dimensional complex number with the given value
Returns true if the last synced timestamp is greater than or equal to the sync time.
Subtracts c from this vector and stores the result in result
Returns the arc tangent of a complex number.
Rounds a complex number up to the nearest whole number.
Negate a complex number
Returns the absolute value of a complex number.
Raises a number to a power.
Binarizes the dataset in place using a given cutoff value.
Samples from this data set.
Returns the required memory footprint of this data set.
Converts an exception to a string.
Returns the simple form of the hostname.
Convert a string array to a string.
Converts a byte array to a hexadecimal string.
Gets the strings.
Splits the given string around matches of the given separator.
Splits the given string around matches of the given separator.
Find the next escape char in the given string.
Escapes the given string for use in an HTML string literal.
Joins the given strings using the given separator.
Convert a string to CamelCase.
Get the stack trace as a string.
Inverts an ind array.
Returns the nth power of n.
).
device side
Create a new shape information object.
Create the shape information.
Check if num is a vector.
Get the order of the given array.
Returns the offset for the given indexes in the given array.
Convert an array of indices to an array of indexes.
Returns the i th short from the data at offset i.
Reallocates a buffer of the given length.
Copies n bytes from the given buffer to the given stride.
Returns a constant buffer on the specified array.
URI for the kafka connection.
Raises a number to a power.
log of an array
Maximum array.
Find the maximum of two strings
Element wise minimum function.
Find the minimum of two strings
stabilizes an ind array by a scalar k
Element - wise multiplication of an array.
1 - p logarithm of an array.
Prepare the bounds for the given x.
Get the next data set from the iterator.
Build an allocation shape for the given buffer.
Checks if the given name exists in the given path.
Reads the data from the given stream.
Sweep the tail of the queue.
Create an ind object from a npy pointer
Create an ind object from a numpy file.
Allocate a paged pointer.
Attaches an object to this view.
Determines if the server is started.
Compress and execute the given op.
Flushes all messages in the queue blocking until all messages are flushed.
Gets the input stream.
Get the device associated with the given thread.
Attaches a thread to a device.
return device ; }
Gets the current operating system name.
Calculates the architecture of the current machine.
Publishes an array of objects.
Create a new data buffer of the given type and length.
int.
Adds two complex numbers and returns the result.
Processes incoming messages.
Pooling 3d avg.
Depth - wise convolution.
Resets the statistics.
Get the op class for the given op
Allocate a new array.
Returns the shape of the vector.
Evaluate the expression.
Compress a double array
Expanded exponential function.
Centers the elements of an array.
Truncate an n - dimensional vector or vector to a given dimension
Returns a new nd element padded with zeros if the target shape is the same as the input nd
computes the element - wise maximum of elements in an array.
Broadcast an array to all devices.
Processes a single message.
Gamma function.
Euclidean norm of x.
Recursive binary tree search.
Returns the exponential of mc.
Raise x to y.
Returns x raised to the power of n.
Calculate the hyperbolic tangent of x.
hyperbolic sine of x.
Calculate the hyperbolic cosine of x.
Add d to x and return x.
Precision of x.
error to prec.
Add a function to the map by id.
Get the inputs for a function.
update array for given variable name
Add a new shape for the given variable name.
associate an array with a variable
Gets property for function.
Adds a property for a differential function.
Add a differential function to the list of outgoing arguments.
Add arguments for a given function.
Checks if the given function has incoming arguments.
Evaluates the differential function.
Create a variable with the given shape with the given name.
Add a like constraint with a string name. The input must be an instance of sd.
Return a new zeros array with the specified name and value.
Remove an argument from a function.
Set the gradient for the given variable name
pooling 3d avg.
Returns the output variable for a given gru configuration.
Executes a list of differential functions
Create a while statement with the given parameters.
Executes the given diff function.
Execute a differential function.
Returns the result of the backward computation.
Add a variable as a place holder.
Allocate a new pointer.
Get the length of the given array type.
Get string from data buffer allocation mode.
Get the data type from the context
Gets the op num by name.
Destroy all workspaces for the current thread.
Prints allocation statistics for the current thread.
Symmetric tridiagonal diagonal matrix update.
Computes the Z - operator for the given dimension
Threshold decoding.
Returns the name of the given node.
Invoke the given op along the given dimension.
Asserts that no workspaces are active for the current thread.
Negative log likelihood.
Request a new tick.
return true ; }
} } }
current state.
Processes this message by piping it to the clipboard.
Initialize the curr data set from the examples.
Initialize the host garbage collectors.
get pointer from device
Synchronizes the host data.
Learns the given learning rate on the given gradient.
Synchronizes to the host allocation point.
Creates a new nd array from a matrix or vector.
Gets properties for function.
Checks if there are any place holder inputs.
Computes the difference of two vectors i and v1.
Formats the given array with the given number.
Create a diff for a given graph.
Convert a complex nd to a blob
load complex from blob
Convenience method for calling the base class save method with the given id.
Copies the real to the given array.
Copies the imaginary part of the vector to the given array.
Computes the difference of two numbers using the Epsilon method.
Assign a vector to this vector.
Returns the rows in this matrix at the given indices.
Put a row in the ndarray.
Puts a single column of this matrix into another matrix.
Subtraction from this vector and store the result in result
Returns a new vector that is the sum of this vector and the specified one.
Subtract a complex number from this complex number.
Add two complex numbers and return the result
Assigns a scalar value to this vector.
Returns a new vector that is the square of this vector.
Compute the eigenvalues of a complex matrix.
Computes the generalized eigenvalues of two matrices.
finds the element of a vector that has the largest absolute value.
Copies a vector.
Computes the product of a vector by a scalar.
Processes incoming messages.
Count the number of non zero instances.
Reduce with pre - reduce.
Gets no arg constructor.
get constructor.
Invokes the handle method with the given parameters.
Searches for an annotation of the given type.
Get a declared annotation from the class.
Checks if a declared annotation is present.
Factory method for creating a new instance.
} } }
Save the pojo.
Create a new memcache service instance.
Gets the metadata of the entity.
Executes the query and returns only the results that match the query.
Runs a query on the data store and returns the results as a hybrid query.
Query normal.
Performs a projection query.
Counts the number of results that match the query.
Partitions the input iterator into chunks of the given size.
Loads the given keys from the database.
Format a message with the given path and msg.
Create a key from a pojo.
Compares two keys using the identity hash algorithm.
Converts a raw Google Cloud Key into a Cloud Key.
Converts a typed key to a raw key.
return null ;
Checks if the given type has missing type parameters.
Returns true if the given type is the super type of the given sub type.
get direct direct super types.
Captures the given type.
Get a translator by key.
Gets the populator.
Gets the index instruction.
Checks if the given method is annotated with
Get all declared properties of the given class.
Returns the metadata of the current object.
return sv ; }
Executes pending translation.
Pending fetch.
Recursive method to add indexed discriminators.
Registers a subclass.
Gets the collection component type.
Get map key type.
Creates a new forward path from the given path.
Returns the path from this node to the root.
Returns the current path as a string.
The number of nodes in this tree.
Present all updates to the cache.
Empty the specified keys from the cache.
Performs a cache put if untouched.
return null ; }
Get all keys from a collection of buckets.
Sets the key.
Sets the id of the given pojo
Gets the parent key.
Register a subclass.
Determines if two types have a common subtype.
Transform owner.
Get any annotation of the given type.
Add all elements from other session to this one.
Loads a value from the round map.
Executes the next round if there is one.
Translates the raw result into the raw result.
Fetches a set of entities from Google Datastore.
Loads the given entity.
Creates a raw key with the given parent key kind and id.
Gets the raw value of a key.
Gets the id or name value of a key.
Parses a key from its URL safe form.
Objectify impl.
Attempt to transact the given work with the given parent.
transact once.
Checks if the given conditions apply to the given value.
objectify ofy
Datastore for this registrar.
Gets the metadata for an entity.
Allocate a range of keys from the datastore.
Create a new objectify implementation and add it to the stack.
Pop an objectify off the stack.
homogenize indexes.
Create a new reference to the given value.
Returns the value or throws an exception if the value is null.
Add a new value to the list.
Returns true if the future is done and triggers it.
Generate if conditions.
Executes the engine and waits for all deferred tasks to complete.
Get container by type and path.
Gets the stat for the given kind.
Unwraps a throwable and throws it.
Get or create a translator.
Get the root of the path.
Create a translator.
Loads the property into the pojo.
Gets property from container.
Sets the value of the given POJO.
Save the entity.
Get value from pojo.
write extensions.
Writes the category.
Writes a list of categories.
Processes a snippet.
Returns an iterable over bids from the given response.
Gets the bid with the given id.
Applies the given updater to all bids in the given response.
Remove all bids in the response that match the given filter.
Recursive reading of the extensions of a message.
Returns true if the next token in the stream is null.
Register an extendable builder with the given factory.
Registers an extension to the factory.
Processes the snippet.
Processes the fields of the snippet.
Applies the given updater to all objects in the given iterable.
Filter a list of objects.
Get the name of the current parameter.
StartElement object.
Start array.
Peek a JSON token from the given parser.
Writes a boolean field to the JSON stream.
Writes a list of strings to a JSON stream
Writes a list of integers to a JSON array field.
Writes a list of longs
Emits a list of protocol message enums.
Resolves a URL from a base URL and target string.
If target starts with str replace it with str.
Returns the host segments of the URL.
Returns the host portion of the URL.
Gets the content of a URL.
load list from storm conf
Extract the first config element from the map.
Gets the protocol.
Generates a new warc file.
Extract refresh url.
get outlink metadata
Filter the given metadata and transfer it to the transferer.
Add a new url to the queue.
Clean field name.
Get charset from bom byte array.
Get charset from content.
get charset from meta
Sniffs the given content for the given clue.
Set the value for the given key.
Gets the first value for the given keys.
Gets a list of cookies from a list of strings.
check cookie domain match to url host name
Returns the cache key for the given url.
Get robot rules from cache.
Extracts the meta tags from the given document fragment.
Received an ack from the producer.
Filter url.
Filters the given string according to the rules in this instance.
Read rules from a file.
Processes the query elements.
get navigation filters from storm conf
add a gzipped record format to the HDFS.
return num ;
return true ; }
parse filters from storm conf
Append a node to the current node.
Receive notification of a processing instruction.
Adapt a SAX2 comment event.
Receive notification of the start of a document.
extract url and metadata from tuple
Trim the text if it is longer than max.
Checks if a custom interval is defined in the metadata.
Construct a url from storm conf
Set the wheel item count.
Resolves the size and state of the given measure.
Set the drawable of the empty cache item.
Set the angle of the wheel.
Update the selected position.
Invalidate wheel item drawable.
Convert raw position to wheel position.
Update the current velocity.
Get the contrast color of an entry.
Clamp the given value to the given upper limit.
Writes the coveralls file.
Returns the underlying data as a byte buffer.
Sets the string value of the specified element.
Returns a new array of length num with all elements filled in.
Make a char array from a string.
Make a char array from a string array.
Make a new array from a string array.
Get the forecast time interval offset for a given record.
Shows the particle system.
Show the frame if not iconified.
Estimate the size of a grid.
Reads records from a file and prints them to stdout.
Creates a new unit name.
Creates a new unit name.
Makes the plural form of the given name.
Checks if the given date is included in the range.
Return the intersection of this range with the clip.
Extend this range by another.
Extends this range by the given date.
Set the start date of the event.
Set the end date.
Set the duration of the event.
add map bean.
Prints an error message.
Get the name of the node.
Returns a string representation of the location parameters.
Opens a new DAP connection from rawdata.
Compute the bounds of the edge.
Synch the sliders with the ui.
Compute unlimited chunking.
Registers the given path as a watcher.
Process events.
Wrap an existing feature dataset.
Checks if the two feature types are ok.
Find the feature type of a given NCDF file.
Writes a catalog HTML file.
Convert catalog to HTML catalog name.
Get user CSS.
get user head.
Actual catalog generation.
Add global services to the catalog
Initializes the global credentials provider and user agent.
Performs a GET request with given session and urlencoded content.
Performs an HTTP PUT with the given urlencoded content.
return null ; }
catalog builder.
Extract the geospatial coverage from a grib collection.
get single dataset by type name.
Checks if two vertices are nearly equals.
Create a new unit id.
Parse a gradients attribute.
Reads the top.
Convert shorts to int.
Convert a byte array to an int.
Get a date from a julian days and msecs.
Makes a valid netcdf object name.
Returns true if the given string is a valid netcdf3 object name
Read the data for a single section of a file.
Read a subset of the data.
Fills in any non - record variables.
Create a new time struct from this gradient.
Makes a time struct from the given calendar.
Checks if the given string contains any time templates.
Add a function.
Get a named function.
get bt by name
Load a new function.
Gets the name of the level.
Gets the description of a given level.
Gets the level unit.
Get the projection type of a given GDS.
Checks if a level is a vertical coordinate.
Checks if record is a layer
Make a coordinate transform.
Creates a dummy Variable from a coordinate transform
Build a projection.
Prompts the user for preferences.
Save the current state of the window.
Returns a copy of this chronology with a different time zone.
Writes a count to the underlying stream.
Writes an array to the output.
Writes a byte array to the output.
Outputs an array of bytes to the underlying stream.
Finish initializing.
Create a new date range from the given date range.
Factory method to create a GDS from a template and data.
Parse a dds document.
Parse a string with the given das parser.
Swaps the header of the grid.
Read a grid of values.
Main method for testing this class.
Write a field to the output.
Write the headers and service info.
Write the operations.
Reads all files in a directory and calls the given closure for each file that passes the filter
Scans a log file for logs passing them to the given closure.
get grid packing type.
Returns the grid with the given parameter.
Word - to - Package converter.
Unpack data.
Approximates a power - of - two decoder.
Read the data from the grib1 file.
Reads data from the grib2 file into the array.
Print grids.
get next byte.
Obtains a new calendar date from the given calendar.
Creates a new calendar date from the given java. util. date.
Obtains a local date in this calendar system from the given milliseconds.
Obtains a new calendar date from the given calendar using the given msecs.
Parses a string of the form yyyyMMdd or yyyyMMdd to a calendar date.
Gets the difference between two dates.
Create a new cdm object with the given data.
Set up the handler.
Escapes a string for use in a URL.
Creates a list of slices from a list of ranges.
Unwraps a netcdf file.
Returns true if the given list contains at least one variable length dimension.
Computes the effective shape of a dimension set.
Add the given date to this one.
Multiply this unit by another unit.
Divide this unit by another.
Divide this unit into the given unit.
Raises to the given power.
Convert the given amount to this derived unit.
Convert the input array to the output array using the derivable unit if possible.
Converts a derived unit to this unit.
Returns the string representation of this value.
Reads data from this vindex into an array of section objects.
Reads 2D array from the vindex.
Flattens the time series into a new time series collection.
Find a service by its name.
Get the gate size for the given datatype.
Returns the start of the gate of the specified datatype.
Returns the gate count for the given data type.
Writes an XML file to the given output stream.
Returns the preferred dimensions for this layout given the specified target container.
verify descendant dataset.
Implement the catalog method
Creates a new calendar date unit from the given calendar name and udunit.
Creates a new date unit with the specified calendar and udunit.
Obtains a new unit of the given calendar date.
Returns the dimension of this quantity.
Checks if the file is a valid file.
read data1.
Read the data at the given regular index.
Reads num values from this vector to the given channel.
Calculates the elevation of a given angle.
Calculates the step of a histogram.
calc AZ value
calc the data coef
Calculate the nyquist of the wavelet transform
Make a new vertical transform.
Set the debug flags.
Extend index file mode.
Read xy.
Check if a point is missing from a grid variable.
Get the bounding box of this axis.
Finish the sequence by allocating new data structures.
Tabs a string with a character at a specified tab stop.
Pads the given string to the given width padding with the given string to the right if necessary
Returns the string representation of an integer padded with zeros if necessary to a specified width.
Returns the string representation of the given long value padded with zeros to the given width.
Converts a size in bytes to a string.
Print a double and its magnitude to standard out.
Prints a 2 - D FRAC diagram.
Get the string representation of the shape.
Finishes the slice.
Returns a string representation of this constraint.
Compose two slices.
Maps an element of a slice to a given index.
Dump the contents of a byte buffer.
Returns the earth ellipsoid type for the given name.
Returns the earth ellipsoid of the given epsg id.
decode vlen data.
extract a list of urls from the given url
Get the content of a URL.
Filter out tags from the input stream.
Reads data from the underlying store to the given channel.
Adds all of the given attributes to the end of this list.
Remove the given attribute from the list.
Remove the attribute with the given name ignoring case.
Gets the offsets in time units.
add listener.
Parses a date from a string.
Returns the standard or iso date for the given text.
Returns the origin of this unit.
Get the current date.
Convert a time value to a date.
Makes a value from the given date.
Convert a double value to a date string.
Get grid spacing in km.
Add the dimensions to the netcdf file.
Add a new axis to the dataset.
Create a projection of the given type.
) ;
Add a coordinate system variable to the dataset.
Make a lower bound.
Origin of point.
make mercator.
Compute the dx and dy of the grid.
parse a dataset element.
Reads the content of an object from a URL.
}
Checks if the file is a valid file.
Writes an array of bytes to the underlying stream.
Sets the name of the attribute.
Returns the name of the coordinate with the given axis type
Get the name of the coordinate
Builds the XML for the response.
Build a dap exception object.
Breakup the levels into a list of dimensions.
Make a z - coordinate.
Create a new variable in the given dataset.
Extracts a coordinate from a reference variable.
Shave float bit.
grib to netcdf writer.
Wrap a netcdf dataset if necessary.
Attempt to open the file at the given location.
Clear all coordinate systems for all variables.
Find the coordinate axis of the given type.
Find a coordinate axis by its full name.
Find a coordinate system by its name.
Find a coordinate transform by its name.
Returns true if at least one enhance mode is in want.
Sets the values of the given variable to the given values.
Sets the values of the given variable to the given values.
Make an array from a list of values.
Get the index of this vector.
Gets an existing file with the given name.
Gets the features that intersect the given bounding box.
Discretizes the data.
Adds a metadata object to this one.
Adds a new documentation entry.
Removes the documentation of the given type from this inv document.
Returns the maximum number of bytes in the segment.
Checks to see if the given netcdf file is mine.
Splits a convention name into a list of names.
Build a convention attribute.
Build the coordinate systems for this dataset.
Finds the coordinate axes in the dataset.
Finds coordinate systems in the dataset.
Makes all coordinate systems of the variables in this dataset.
Make the coordinate systems maximal.
Checks if the given variable is a coordinate axis.
Subset the given dataset.
Mark the top dataset as having been filtered by the given filter.
Mark a dataset as read.
init only once.
Counts the number of occurrences of the given value for the given name.
Adds a new symbol and definition.
Compares two rows based on their column numbers.
Compare two booleans.
Pass reserved events to a dap node.
return true ; }
Registers the class with the given name.
This is a no - op for dsp classes.
Checks if a dsp class is registered.
Unregisters a dsp of the given class.
get forecast time interval size in hours.
Get the forecast time interval offset of a record.
get vert unit.
Alphabetically sorts this tree.
Find a variable with a given attribute.
Finds a variable in the dataset with the given attribute value.
Finds the variable with the given name and value in the given dataset
Finds a variable with the given name and value.
Finds the first nested structure in a structure.
Checks if a netcdf3 record has a structure
Returns the literal value of the given key.
Get the feature type from the dataset.
Returns the variable name for a given key.
Returns the value of the j - th coordinate.
Returns the longitude of a point given its connect and its value.
Returns the values of this array as a double array.
Create a new section with the given ranges.
Finds the index of the closest point in a run to a given target.
return name ; }
Add an action to this menu.
Matches a path in the tree.
Entry point to the projection manager.
Find the index of the first occurrence of this pattern in the given byte array.
Add a picture to the cache.
Print the cache statistics.
Stops background loading.
stop background loading except for the specified url.
Make a GET request to a URL.
Create a new http. methods m.
Returns the next random float of the specified type.
Returns the next number in the range [ min max ).
Reads data from the file.
Gets the file system provider for the given URI.
Read the station table.
Returns the index of the given group.
Removes the data variable with the given name.
Meters to Meters
does the actual reading
Set the number of colors.
calc the affine transform
Convert a URI to an auth scope.
Finish computation.
Returns true if this factor is reciprocal to the given one.
Returns the catalog for the given directory.
Finds the index of want in the sorted array.
Reads the metadata from the given URL.
Read metadata content.
Add metadata content.
Validate the metadata content.
Read cat gen configuration.
Read a dataset source element.
Read a dataset namer element.
Read a dataset filter element.
Read a result service element.
return null ;
Create dataset source element.
Create dataset namer element.
Create dataset filter element.
Create result service element.
Checks if a flag is set.
Construct the menu.
adds parameters to a table
Makes a parameter from the given words.
return null ; }
Reads the contents of the stream as a string.
Read a number of bytes from the input stream.
Replace the template with the given filespec at the given index.
Set the station information for a given variable.
Accept the buffer.
Gets a bitmap from the file system
Sets the netcdf file to use.
Set the debug flags.
Parses the given name into its constituent pieces.
Returns true if the given dstruct is a group.
get netcdf length dim.
Gets the shared dimension.
Constructs a list of dimensions from an array of dimensions.
Checks if the given data type is an unsigned type.
get data from the server
Returns an icon from the classpath.
Gets an image resource by its name.
Creates a custom cursor with the given name.
Reads an array with a given fill value.
Read an array with a given value.
Read an array with a given value.
Make a primitive array of the given size for the given data type.
Converts a byte array to a char array using the UTF8 charset.
Converts a char array to a UTF - 8 byte array.
Convert a byte array to a char array.
Reads a section from the given section specification.
section array structure.
Returns a string value at the given record
Get a scalar structure from a member.
return the array at the given record number and member
Returns the members of a variable.
Adds the dimensions to the given netcdf file.
Normalizes the given path.
Add an explicit dataset to the cache.
Add a dataset scan.
Finish the scan.
Make the datasets.
Gets the typical dataset.
Factory method for creating a dataset.
put a dataset into hash map
Add a point to the polygon
Returns the bounding box of this polygon.
Returns the bounding box of this polygon.
Validates the string builder.
Matches an inv dataset against a dataset.
Add all points in the dataset to the model.
Parse constraint expression.
evaluates all clauses of this enumeration.
Prints a constraint to the given print writer.
Makes amends from an OCDL file.
If the number of dimensions in the list is equal to the number of values in the list then
Check if one of the dimensions in unknown dims is wanted. If so set it as unlimited.
Recursive method to find a nested group.
Get the content of the xlink.
Get the standard uri.
class pc )
Add a new component to the layout.
Invalidate the layout for the specified target container.
Removes the specified component from the layout.
Minimum layout size.
Layout a container.
Checks if is radial coord sys.
Returns the maximum radial value of the axis.
Latitudinal to sat.
return null ; }
Convert goes to geos.
Convert a string to a sweep angle axis.
Convert sweep angle axis to scan geom.
Sets the runtime coordinates.
Written a point obs dataset to a file
Rewrite point feature dataset.
Get array sequence by member name
Returns the full name of this node.
Returns a unique id for this security token.
Returns the first access of the given type or null if none found.
Find a dataset by it s name.
Gets the parent catalog.
Get all metadata of the requested type
Returns the inv service with the given name.
Get all variables for a given vocabulary
Recursive method to find all catalog references in a list of datasets.
Escapes a string so it can be used as a URL.
Add a stagger to the given array.
Interpolate an array with extrapolated values.
Computes the rho of a point.
Detailed info.
Create a structure from the given name and dimensions.
Make a missing variable.
Make a parameter variable.
Add the global attributes.
Returns the size of the variable with the given name.
Get 1D array of given data type and length
Actual lookahead function.
Produce a syntax error for a given token.
Print yyreduce.
Reads a string from the input stream.
Reads an error.
Reads into an array of bytes. This method will block until some input is available.
Reads the header bits from the stream.
Parses an ISO8601 formatted string to a date.
Read a table from a URL.
Copies a group from one dataset to another.
Gets the stn file.
Overwrites the default open method to use a random access file.
; }
; }
Create the runtime collections.
Sets the value of the edit field.
get data type by format
Longitude and altitude Longitudes are in degrees.
Clean the unit.
Clean name.
Checks if the given string is unitless.
Factory method for creating notes instances.
Returns the variable ID for the given note.
Parse a DAS file.
find children v.
Recursive method to find data v.
Find by index.
Get the parent group of this node.
Returns the i th dimension.
Returns the index of the dimension with the given name.
Returns the string value of the units attribute.
Returns this shape as a section.
Slices a dimension of this variable.
Sets the typedef of this enum.
Reads an array of ranges from this file.
Read string.
Reads data from the input stream.
Reads the next section from the file.
Writes a CDL definition to the output.
Returns a string representation of this NCFile.
Sets the data type.
Sets the dimensions of this shape.
Resets the shape of the graph.
Sets the dimensions of this element.
Resets the dimensions of this group.
Set the dimension at the given index.
Set cached data.
Returns a list of all dimensions in this model.
Set the largest bounding box.
Finish the computation.
Get all datasets in this dataset grouped by type.
Returns true if the path ends with one of the synextensions.
Opens a new CDMDSP instance with the given netcdf dataset.
Builds the DAP file.
Recursive method to build the sequence types for a given CDM variable.
Builds the dimension references.
Finds a matching enum typedef.
Returns the core dimensions of a list of dimensions.
Scan bufr file.
Processes a bufr message as a dataset.
Handle a POST request.
Gets the affine transform.
Return true if we want to rotate the map.
Get the area of the map
Convert a point from world space to screen space.
Pan the map by the given distance.
Zoom in or out.
Recalculate the size from the bounding box.
Add a listener.
Remove an object from the list of listeners
Send an event to all registered listeners.
Send an event to all listeners except the source.
Prints a command to the given writer.
Prints a variable to a string.
Print a variable data section.
Prints the given structure to the given writer.
Prints the elements of an array to a writer.
Prints an array to a print writer.
Writes an NCML file to a writer.
Read double.
Add a parameter to the transformation
return null ; }
Checks if the level is positive up.
Checks if this unit is compatible with the given unit.
Makes a string with the given id.
Sets the offset of a bit in the file.
Unsigned long.
signed long.
Open a connection to the server.
return command ; }
Get the complete CE string from the string.
Convert from world coordinates to lat lon.
Get the idv dataset from the catalog.
Returns a new range based on the given range.
return true ;
Handle the satellite information.
Handle the sensor information.
Reads the root element.
Remove invalid XML characters from a string.
Unescapes a string using the given escape character.
Escape a string for use in a URL.
Unescapes a character from a URL.
Decodes a backslashed string.
Encodes a string with a backslash.
Add the attributes to the given netcdf file
Byte swap a short.
Swaps the specified int values in the specified byte array.
Swaps the bits in the given byte array of the given offset.
Swaps a float value.
Swaps a double value.
Convert a short to a byte array.
Convert an int to a byte array.
Convert a long to a byte array.
Subset of this transform.
Returns a pretty - printed XML document.
if a == b return s ;
Starts the XML file.
Write the feature list.
Add levels from list of records.
Add the dimensions to the given netcdf file.
Add this dimension to the given netcdf file.
Find a coordinate transform.
Gets the index of a given record.
Exits the program.
Gets a file from its location.
Get an existing file or cache it.
Show the contents of the cache.
Recursively remove files from cache.
Calculates the bearing of two points on the earth.
Calculate the bearing of two points.
Command - line entry point.
Find a point on the earth with the given parameters.
Find a point on the earth.
Find a point on the earth.
Starts the picture loading thread.
Loads the picture from the given url with the given rotation
load the picture and log it.
Stops loading the image.
Unload the image.
Returns the size of the image.
Set the source of the buffered image.
Gets the standard uri.
Transfers information from one list to another.
Count the number of bits in this key.
Compares two data descriptors for equality. Two data descriptors are considered equal if they have the same
Load the header.
Loads the data.
Returns the value of the field with the given name.
Get double array by name.
Returns a string array by name.
Returns the boolean values of the specified field.
Returns the name of the i - th field.
Get the names of the fields.
Command - line entry point.
Returns a map of attributes.
Sets an attribute for this element.
Removes an attribute from the element.
get the group of this sort
Returns the parent node of this node.
Replies the escaped short name.
Returns the path from this node to the current node.
Returns the path of the group.
Returns the FQN of this node.
Builds the DAP file with the given parameters.
Add a collection to the request.
Gets list.
return null ; } return result ; }
Reads the data.
Prints the variables in the DSP dataset.
Print a compound instance.
Writes the given element to a string.
Writes to a file.
Writes the given element to the given output stream.
Set the outputter and detach the element.
Creates a shared element for the given dimension.
Transforms the given coordinate vector using this transformation.
get int array.
Create a new bu unit.
Create a new unit definition.
Create a database with all units.
Get si instance.
Find the coordinate of the target coordinate.
Finds the index of the midpoint which is closest to the given target.
Subset values along the axis.
Facade method for opening a feature dataset.
Open a feature dataset.
Annotate a dataset.
Reads a float array from a file.
Assembles a URI from the given parts.
Returns the string with no spaces or null if the string is null.
Normalizes the given string so that it can be used as a unit name.
Finish the compiling process.
Returns the value associated with the given key.
Associates the specified value with the specified key in this set. If the set previously contained a mapping
Gets the date.
Print xml.
Prints an XML element with the given name and value.
Checks if an attribute is special.
Prints all the dimensions of a variable.
Checks if the file is a valid area file.
Set area directory attributes.
Set the nav block attributes.
Gets the cal type.
Set the cal type attributes.
Finds the coordinates in the given dataset.
Find the name of the axis with the given type
Find a coordinate of a given type along a given axis
return null ; }
Find the dimension of a coordinate of a given type
Helper method to find the best coordinate system for the given dataset.
Find the dependent axis.
return null ; }
Reads the marker.
Writes a marker to the data output stream.
Entry point for the demo.
Get a string array from a member.
Get the parameter list.
Set the list of stations to render
Sets the currently selected station.
Redraws the current image.
Reads a rectangle.
Writes an object to the given stream.
Add the contents of another db to this one.
Add a unit.
Add a symbol to the unit.
Get a unit by its id.
Add a new unit with the given name.
Adds a new unit with the given symbol.
Add a unique entry to the map.
Add plaf to the menu.
Finds a record by its file position.
Reads a single variable from the dataset.
Serialize this object to the given string sink.
Create a copy of this projection.
This method creates a new result from the supplied dataset.
Open a feature dataset.
Creates a new dataset from an inv dataset.
Annotate a dataset.
Add a new partition to the partition list.
Create a new grib collection.
Create an instance of the regex and duration time coverage enhancer.
Coverage enhancer.
Write the XML for a query capability to a file.
Read the data for a single section.
Set the picture from a URL.
Set the image to be displayed.
Zoom to fit the image.
Paint the component.
Convert a time series into a time series.
OGATATATATATATATATATATATATATATATATAT
TI itoc string.
daym ti year imon
LV ccrd string.
Reverses the specified range of the specified array of bytes.
Returns the name of the grid packing type.
Returns the data type for a given numeric type
Reads data from the given stream.
Externalizes this output stream.
Returns the tag object for the given short code.
Get the next image.
Returns the size of a dap type.
Returns the sum of an array.
Sets the grid to a given bounding box.
Sets the overlap.
Clear the contents of the matrix.
Mark the point if clear.
Find the intersection of the given rectangle.
Find intersection of a point with this shape
Finds the closest point on the grid.
Returns the squared Euclidean distance between the given points.
Get or create a base unit.
Search a fragment for a service type.
return ; }
return null ; }
Checks if the location is a DOS location.
send a variable to a named section.
Returns the suffix of the given string.
Returns the prefix of the given FQN.
Locate a file in the filesystem.
Locates a relative path.
Extracts a byte array from a buffer.
Returns the structure path of a variable.
Returns null if the path is empty.
Joins an array of strings using the given separator.
Checks if the path contains a drive letter.
Returns the protocols for the given URL.
Converts an index to a list of slices.
Converts an offset in a template to a list of slices.
Checks if a list of slices is contiguous.
Checks if a list of slices contains a single point.
Converts a list of slices to an index.
Reads data from an input stream.
Provide information about a specific station.
Read a feature collection from a given catalog and path.
Update the group list.
Returns the variable with the given name.
Gets the axis type.
Gets the grib stat type.
Subset lon.
Returns the ranges of this vector.
Set the default values.
Gets the session id.
Set the maximum number of redirects.
Sets whether sessions should be used.
Closes this instance.
Set authentication and proxy.
Tracks a session.
DEPRECATED use setGlobalCredentialsProvider instead
Validates the contents of the textfield.
Create an index of the given shape.
Compute the strides for the given shape.
index section.
Reduce index.
Reduces an index to a given dimension.
Transpose a two - dimensional array index.
Returns a new index that is the permuted version of this index with the specified dimensions.
Get an iterator for the array.
Returns the current element in the iteration.
Set the index to the given array.
Set the given dimension to the given value.
Sets the components of this index to the specified values.
Name of the time interval.
Create a calendar date range from this range.
Make the date list.
Builds the parameters from the DM part.
Get the list of stations from the headers.
Returns a list of station names.
Gets the dates.
Returns the index of the station with the given id.
Gets the file type.
Indent the current line n times.
Set the indent depth.
Reads or creates a GRIB index from a single file.
Add a scan for a directory.
??
Scan first time.
Set the debug flags.
Add a variable to the model.
Attempts to write the current model to the file. If the version of the model is extended
Validates an XML object.
Returns a string representation of this constraint.
Sets the original variable.
Reads this array from the underlying store.
Recursive method to check if any of the variables in the structure need conversion
Converts the given data to a structured structure if necessary.
Convert member info.
Find the variable with the given org name.
Returns true if the given variable has data.
Enhances the dataset in the specified mode.
Return true if resource control is ok.
Create an empty sequence.
Create a new array sequence with the given values.
Create a sequence for the given name.
Add a vertical coord attribute to the given variable.
parses an XML file and returns the corresponding catalog object
Reads an XML catalog from a string.
Parses an XML document from a string reader.
Convert a catalog to an XML file.
Get converter by key
Create a dimensionless unit name.
Multiply this unit by the given unit.
Divides this unit by the given unit.
Convert an array of floats to a derived unit array.
Returns true if the given unit is compatible with this one.
Write a single feature.
Write a point to the string.
Writes a line to the output.
write polygon to string
Returns the subnodes of the given parent node.
Pass reserved attributes from node to dap.
Get a subset of a variable as a string
Creates a ma object if not already one.
Set array data of a member.
Create a ma object from a structure.
Returns the geometry type for the given variable name.
Create a station feature.
Recursive method to compile a ceast tree.
if ceast. sort. segment == segment then do nothing
dimredef ceast node.
Create a view for the given index.
Is this rectangle contained in the other?
Extends the envelope by the given point.
Extends a rectangle.
Intersect the clip with this rectangle
Creates a new array by appending elements of two arrays.
Returns true if the two arrays are conformable.
Returns true if a is conformable to b.
Convert an array to another array.
Copies the elements of the given array to the given result array.
Copies the elements of an array to another array.
Copies elements of an array to another array.
Get the minimum and maximum values in the given array.
Sets the value of the given double array to the given value.
Make a builder for the local catalog.
Factory method to create projection impl.
Unescape a DAP identifier.
URL decodes a string.
Unescapes a URL.
Escape a string for use in a backslash.
Unescapes a backslash.
Splits an escaped name into a list of strings.
Find the index of the first occurrence of the given character in the name.
Convert backslash to dap.
Reads an atomic scalar.
Get the path of a cursor.
Get a ui by class and property name
Gets the j.
Compiles the dataset and databuffer.
Builds an array cursor from a dap variable.
Recursive method for compiling a structure.
Recursive method to compile a sequence array.
Compiled a dap sequence.
Read bits and return as a long.
Returns the resizable field for the given name.
Returns the value of the specified field.
Sets the value of the specified field.
Adds the specified field at the current position.
Adds a new check box field to this model.
Adds a date field to this document.
Adds a double field to this model.
Adds a new integer field to this record.
Adds a password field to this document.
Adds a text field to this document.
Adds a new text field to this widget.
Add a text area field to this form.
Add a heading to the table
Add a component to the layout.
Adds a new row to the end of the layout.
Finds the first frame that is visible.
Returns the spacing of the cell.
Returns a copy of the factors.
Multiplies the given dimension by this factor.
Raise each factor by a given power.
Checks if the given dimension is reciprocal of this dimension.
Returns true if all factors are dimensionless.
Returns a new grib1 param tables instance.
grib1 param table factory.
Read a table and add it to the parameter table list.
Adds a parameter table to the lookup table.
Raises to the given power.
Convert an array of floats to a derived unit.
Initialize the unit table.
Make a vertical variable.
Peeks a name from the given file.
Reads a short from the given byte array at the given offset.
Grabs a big endian integer from the given byte array.
Reads a float from the given byte array at the given offset.
Reads a double from the given byte array at the given offset.
Add an alias to the list of aliases.
Add a symbol to the unit.
Create a converter from one unit to another.
Sets the structure data.
Sets the feature data.
Draws this sprite on the given graphics context at the given pixel location.
Get the shapes.
Process the input stream.
Reads the next N bytes from the stream.
get more bytes.
Reads up to len bytes of data from this input stream into the specified byte array starting at
Skips the given number of bytes.
Add the vert dimensions to the netcdf file.
Finds the index of a given record in the level list.
Checks if the file is a valid one.
Overwrites the default behavior of nc2. nc2. nc2HeaderParser.
Reads data from the file.
Read xt rows of data from the input stream.
This method is used to create an instance of this class from a dataset.
Create a new variable in the dataset.
Set the area of the map
set map area
Set the area of the map at the given latitude and longitude.
) ;
Adds the zoom and move actions to the given menu.
redraw later in the future
Update the screen size.
Set the selected.
Returns the double value of the specified offset in this variable.
Reads a double.
Reads an atomic object from the data.
Returns the name of the given id.
Read a scaled int from the given buffer.
Find parameter by name ignoring case.
Swaps the byte order.
Get the number of steps per file.
Gets the file name.
get file names.
Gets the ddf.
Get the full path of a file.
add a chsub to the list
Convert a reference date to a time coord intv.
Reads a random object from a file.
Get the uncomp data starting at the given offset.
Variant of pcode 12n13n14.
Code for the 25 - bit PCP code.
check the header of the file
Code for the 5th dimension.
{ return 0 }
Gets the levels.
Gets the dualpol levels.
Adds a new variable to the dataset.
Adds a parameter to the netcdf file.
Create uncompressed data stream from buffer.
get unsigned int from unsigned byte array
Gets the int from the given array of bytes.
Convert a byte array to an object of given data type.
Do the DMR.
get request state.
Sends an error response to the client.
Anchor the line to the given point.
Stretch the component to the given point.
Format the given text and return a date.
replace data vars.
Ensures that the memory array size is okay.
Reads two ints from the raf.
Reads a unsigned short from the file.
Reads a 3 byte int from a file raf.
Reads a 32 - bit unsigned integer from the file.
Reads a 32 - bit unsigned integer from the file.
Reads a float from the file specified by the raf.
Compute 4 - bit float from four bits.
Reads a big endian 8 - bit integer from the file.
Count the number of bits in the given bitmap.
Create a copy of this projection.
Return the WKB representation of the location.
Escapes a string for use in an HTML entity.
Unescape a string.
Splits a string by a backslash. The backslash is not escaped.
make a new fmrc inv.
Get service special string.
Returns the number of projected components of this vector.
Returns the time in seconds since the epoch.
Returns a new instance of the bb with the given section.
Main method for running the indexer.
Reads a single record from the grib1 file.
Test to see if a given netcdf file is mine
Create a transformation for the UTM.
Reacquires the area file.
Checks if this date is before the given date.
Checks if this date is before the given date.
Checks if this date is after the given date.
Set the value at the given index.
Add a coordinate system to this variable.
Sets the units.
Returns the string value of the units attribute.
Initializes this object with the given read mode and preferences.
return null ; }
Process a list of datasets.
Read cats in directory.
Return true if lon is between beg and end
Convert a latitude to its string representation.
Convert a longitude to its string representation.
Compares this quantity to the specified quantity.
the currently selected dataset
Set the currently selected dataset.
Builds a tree path from the given node.
Open all the catalogs in the tree.
Sets the catalog from the given location.
Sets the name of the catalog.
Finds the alias of the variable.
Writes an integer to the stream.
Writes a range of characters to the underlying stream.
Reads characters into the buffer.
Set the debug flags.
Add a member to this group.
Remove a member from the set and return its index.
Returns a list of the names of all members in this group.
return null ; }
Gets a bitmap from the buffer.
Restore the state of the table from a previously saved value.
Get the selected rows.
Returns the index of the model.
Returns the array of the given member.
Returns the double value of a member.
Get a double value from the array.
Returns the float value of the given member.
Get a float value from the matrix.
Returns the byte value of the given member.
Returns the value of a member as a byte.
Returns the int value of the given member.
Get an int array from the data.
Get a scalar value.
Get a short array from the data.
Returns the long value of the given member.
Get a long array from the data.
Returns the char value of the given member.
Get a char value from the array.
Do one dataset.
Creates a copy of a dataset.
Transfer metadata from one dataset to another.
Get the metadata object that inherits from this object.
Adds a record to the list of records.
Prints a message indicating that some data is missing.
Prints a summary of the records in the tracker.
Finds a record in the tracker.
Dumps the grid to a string.
Makes the name of the grid.
Subset by intervals.
Compare two byte arrays in mem - equality.
Parse a DAP dataset from a string.
Processes the attributes of a given dataset.
Add a list of coordinates.
Set the Gaussian latitudes parameter.
Parse a variable selector.
Returns a string representation of a range specification.
Search for a box that contains a certain point.
Closes this instance. No further calls will be accepted.
Executes the request and returns the response code.
Identify the encoding station.
Matches a coordinate of the given type with the given outer dimension.
Set input stream.
Reads a character from the stream.
This method is called when a new task is started.
Parse a string to a URI.
Excludes a URI from a list of URIs.
Nullify a string if it is of a certain length.
Joins the given strings using the canonical path algorithm.
Crawlable dataset to determine if it should be crawled.
Copy info from another grib collection.
Get the list of all filenames.
Sets the index file handle.
get index filepath in cache.
Get the number of counters in this bit field.
Add a new attribute to this element.
DTD subset attribute
Delete a global attribute.
Renames a global attribute.
Adds a new variable - valued attribute to the end of the list.
Adds a new variable attribute to the end of the list.
Delete a variable attribute.
Renames an existing attribute.
make file sub type.
Write the headers and bb.
Write the members of the list.
Writes the station obs dataset as XML.
Returns the XML representation of the station collection.
Writes a string to the stream.
Sends dxr8 to the remote device.
Sends an error response.
Sends the DMs to the device.
Flush any buffered data to the request.
Check if the given value is contained in the array.
Returns the element at the specified index.
Shift this range by the given origin.
Reads a single data object from the file.
Reads data from the file.
Create a subset of this vector.
Set the values of this parameter.
Convert an array of ints to a double array.
Get dataset boundaries.
check requested vars.
Get a structure by name
Gets the resource path for the given request and location.
Make the vertical dimensions for the given list of coordinates.
Reads the PIB from the file.
Finish the canonicalize process.
Copies the metadata from the parent dataset to this dataset.
Transfer metadata from one dataset to another.
Copy metadata from one dataset to another.
Set the contributors.
Add a dataset to the datasets list.
Removes a dataset from this catalog.
Replace a dataset in this catalog.
add a service to the service list
Remove a service from the registry.
Set the local services.
Remove a metadata object from the local dataset.
Gets the user property.
Validates the string builder.
Returns a list of string representations of the descriptors.
Construct the server path from the given request.
Gets the capabilities.
Get a feature.
return null ; }
Handle a servlet request.
Gets the capabilities.
}
Get the last modified date of the object.
Return a file from the request.
Return the contents of a string as a stream.
Sets the response content length.
Gets the request URI.
Gets the request path.
get request string.
Returns the value of the first parameter with the given name ignoring case.
Save the current state of the split.
write directory int.
Allocate a nested bit counter
Count the replication count.
Append a line to the buffer.
make station collection document.
Get the capabilities document.
Retrieve a record at the given coordinates.
Get the coordinate at the given index.
Add an item to the list.
Handles the throwable.
Get the next number in the sequence.
Get the NCEP gen process map.
CDMRF endpoint.
Set the value of this property.
Creates a new GRID instance with the specified center and grid numbers.
Copy a number of bytes from an input stream to an output stream.
Reads the contents of the given stream.
Reads the contents of an input stream to a byte array.
Writes the contents of a string to an output stream.
Copies the contents of a file to an output stream.
Copies a number of bytes from the file starting at the given offset to the given length.
Copies a directory tree.
Read the contents of a file into a byte array.
Reads a file and returns the content as a string.
Writes the given contents to the given file.
Writes a string to a file.
Writes the given stream to the given file.
Handling of parse exception.
) { }
Log a bad url.
Gets the catalog.
Print the catalog.
Print the status of the server.
Print bad url.
Gets the reference date.
Reads vlen data.
Read an NCML document from a string.
Opens an NCML document at the specified location.
Checks if a string is allowed by a set of characters.
Truncates the given byte array and returns a new UTF8 string.
Filters a string if it contains only letters or digits.
Removes all 7 bits from a string.
Makes a cdm object name from the given string.
Match two strings and return the index of the first match.
Pads the string to the left with the given string until it is at least the desired length
Pads the given string to the right with the given string until it is at least the desired
Remove sub from s.
return s ; } return null ;
Removes the character from the end of the string if it is present.
Collapses all leading and trailing whitespace from a string.
Replaces all occurrences of out in string s.
Replaces all occurrences of the given char array with the given string.
Replaces all occurrences of pattern in string with value.
Substitutes all occurrences of match in original with subst.
Substitutes match in original for subst.
Remove a number of characters from string builder.
Replaces all occurrences of a character in a string with another character.
Replaces instances of each character in sb with the corresponding character in in sb.
Replaces all occurrences of match in sbuff with subst.
Remove all occurrences of bad characters from s.
Processes the event.
Checks the current state of the store. If the store is already in a state it will be
Update a collection.
Returns the inv datasets.
This method is called by the pool when it is no longer needed.
Returns a deep copy of the given structure.
Copies the content of an array to a bb.
Copies an array to a bb.
Copies the members of a structure to a new array.
Copies the contents of a structure to a byte buffer
get forecast time interval size in hours.
Create a new section with the given range.
factory method for the table analyzer.
This method analyzes a single feature type.
Synchronise the data.
Returns the start latitudes of a Gaussian regression line.
Byte array to long.
Swaps the bits in the given byte array at the given offset.
Swaps the specified char.
Figure out the coordinate axes to use.
Add a parameter to the transformation
Returns the common parent of this group and the given group.
Returns true if this group is the parent of the other group.
Sets the parent group of this node.
Adds a shared dimension to this group.
Adds a dimension to this group.
Adds a new group to this group.
Adds an enumeration to this group.
Adds the given variable to this set if it does not already exist.
Removes the dimension with the given name.
make a relative group
Convert dds das.
Print this exception to the specified print writer.
Returns the variable with the given name.
Write a grid to the current file.
Replace missing values in an array.
Replace missing values in the array with the given value.
Get the x - shift of a longitude array.
Writes a grid to the current file.
Writes the message to the response.
make top index file from config
Returns the grib collection type.
update grib collection.
Update leaf collection.
Opens a grib collection from the given data file.
Create a new grib collection from the given data file.
Checks if the given url matches the given pattern.
Add a triple to the triple store.
Looks up a key in the triple store.
if the number of triples in the triplestore is known then do nothing
Insert a triple into the store.
Gets the local datasets.
Find a dataset by its name.
Set the project to use.
Get the shapes.
Create a list of shapes from the list of features
Compares this string to the specified string ignoring case.
Start a progress monitor task.
check if a new file needs to be updated
Normalize the data in the list of coordinates.
Set the object at the given index.
Get the data at the given index creating it if necessary.
Copies the given structures to the given result.
Get scalar object.
Converts a scalar to a double.
Convert a scalar to an int.
Gets float from a matrix.
return byte from a scalar
Gets short.
Gets char.
Get string from a scalar
get array structure.
get sequence.
get array object.
Returns the smaller of the two given values.
Evaluates a ceast expression.
Returns a string representation of the constraint.
Checks if a given node is references to this node.
returns true if the filter evaluates to true
Returns the number of expansions in the given structure.
Computes the enums.
Compute the groups.
compile a string to a CE object
return true ; }
Makes actions system.
Returns the byte order for the given KMachn.
) return ; }
Find the key with the given name.
Find a file header by name.
get the header of a file
Print the parts of this path.
Get a data pointer.
Returns the distance between the specified word and the specified label.
Reads a string from the stream.
Uninstall a PKD on a given set of bits.
Gets the string representation of the given bit.
Write to a writable channel.
Parse the base of an element.
Parse a grid.
Parse aliases.
Recursively decodes the given key descriptor.
Replicates a set of keys.
Get the dataset filename.
Coverage information.
Compares two float values and returns true if the absolute value of the values is less than or
Returns true if the given node is a reference to this node.
Parses a string and returns the corresponding unit object.
Checks if a variable is tiled.
Determine the best coordinate from the time coordinate.
Convert a lat lon rect to a projection rect
show time series all.
Make a map from a list of attributes.
Returns the values of the array.
return num ; }
Writes the CDL.
Sets the value.
Sets the values of the array.
Scans the input.
generate proxy catalog inv.
Add a message to the queue.
Set the datatype of a dataset
Jump to the data type
Prepare the gui.
Create the tools frame.
Convert a list of axis to a name.
Returns the lesser rank axis.
Find the axis with the given type.
Get the projection of this coordinate.
Returns true if this element is a XY element.
Check if this shape is a regular shape.
Returns true if subset is not contained in set
Returns true if the given list of axes is not already contained.
Check if the coordinate contains the given axis.
Returns true if the domain of the wanted dimensions is not contained in the domain.
Returns true if the given list of axis types is not already contained.
Check if the coordinate contains the axis of the given type.
Implement DAG clone method
Get the selected bean.
get the selected beans.
Returns a list of the selected cells.
Set the bean currently selected.
Restore the state of the table.
Creates a new unknown unit with the given name.
Consumes and closes this stream.
Returns true if the given variable is an extra variable.
Checks if the given variable is a coordinate variable.
Find a coordinate axis in a table.
Recursive method to add all data variables in a table.
if there are extra joins add them to the cursor.
Make a station feature.
Creates the node map.
Attempt to create a simple unit factory with an exception.
Creates a new unit factory with an exception.
Checks if one unit string is compatible with the other.
Checks if the given ucar unit is compatible with the given date reference unit.
Checks if the given string is a valid time unit.
Returns the conversion factor for the given input and output units.
Converts the given value to the given unit.
Returns true if this unit is unknown.
Returns the value of this offset.
DL4J relop clause.
Declare a new function clause.
Declare a new bt clause.
Reduce an array to a gray scale image.
Crawl the catalog.
Crawl a dataset.
Crawl direct datasets.
Get file from cache or from disk.
return null ; }
Set the debug leaks.
Gets a list of all files in the system.
Releases this object and releases any resources associated with it.
Sets the current position in the stream.
Flushes the buffer to the underlying file.
Reads a byte of data.
Reads a number of shorts into an array.
Reads an int from the underlying stream.
Reads an array of integers.
Reads an array of longs.
Reads up to n bits and stores them in the given array starting at the given offset.
Reads an array of doubles
Reads a UTF - 8 encoded string from the underlying stream.
Reads the next nbytes characters from the stream and returns as a string.
Writes an array of booleans to the stream.
Writes a sequence of shorts to the underlying stream.
Writes a range of characters.
Writes an array of ints to the stream.
Writes an array of longs to the stream.
Writes floats from an array to the underlying stream.
Writes a sequence of doubles to the current position in the array.
Writes a string to the underlying output stream.
Writes a character array to the underlying output stream.
Search forward in the file starting at the current file pointer.
Append a query to the buffer.
Factory method for creating a new m instance.
Find the index file.
Checks if the file is a leaf.
Build the children if necessary.
Scan the directory for children.
Returns a list of files from the given index.
Returns a list of gridsets.
Acquire a cacheable file from the cache.
remove file from cache
Evict an object from the cache.
Release a cacheable file.
Converting four ints to their corresponding ints.
Update the element in the cache.
Clear the cache.
Make a vertical transform.
Returns true if the axis is a global longitude.
Is this a z - axis?
Find the x - coordinate.
Find the x - coordinate.
Find the x - ordinates of a point.
Find the x - ordinates of a point.
get the current position of the item
Get the item for the given pixel.
Iterate over m.
Download files from the remote server.
Get the name of a subcenter.
Parses a period from its string representation.
Factory method for creating a new period instance.
Create a period from a string representation.
Subtract two dates.
Gets the conversion factor.
Returns the value of this period in milliseconds.
Get the offset between two dates.
Synchronise the index file.
Initializes the tables.
add a new extension to the map
Find the longest path match.
Find data root.
convert 2 data root ext.
Gets the date range.
Reindex a list of coordinates.
Create a new netcdf file writer.
Create a new group and add it to the specified parent.
Add an extended type definition to the given group.
Delete an attribute from a group.
Rename a named attribute of a group.
Returns the structure of the Netcdf3 file.
Aborts the SPI stream.
Writes the properties of the object to the specified print writer.
Extract coverage data from a dataset.
Returns the result of dividing this unit into the given unit.
Convert to derived unit.
Subtracts the offset from the derived unit.
Convert a nested variable.
Convert a top variable.
convert a V object to an array
Close all open databases.
Opens a database if not already open.
Convert an int value to an org. joda. time. period.
Ensures that the internal array has at least the given capacity.
Returns the string at the specified index.
make a catalog for a given directory.
return null ;
Get the data type of the coordinate.
Factory method for creating a new Grib2 pds instance.
Calculates the time from the given start index.
Apply a scaling factor to a value.
Parses a single concept from a file.
Add a local concept to the dictionary.
Cleans a line of text.
Stores a concept.
Writes the local concepts to the grib1 files.
Writes a lookup table file.
Prints the local concepts.
Entry point for the example.
Get a dataset source type by name.
Expanded dataset.
expand the dataset to a full inv catalog
Name all the datasets in a dataset container.
Name dataset list.
Name the dataset tree.
Load a picture from an URL.
Stops the picture loading for the given url.
Source status change event.
Notify all registered listeners of a progress notification.
Create a scaled picture in a thread.
Get the size of this image scaled to the original image size.
Returns the string representation of the scaled size of the image.
Get the list of merged parts.
Create a header for the given station.
Proof - of - Work.
Checks if the given part belongs to a valid group.
Set the root directory.
Create root directory.
Get file from cache.
Deletes all files in the cache after a given date.
Deletes files with length > = max bytes.
Is this a bufr table?
Factory method to create a coordinate axis from a netcdf dataset and a dataset.
Create a copy of this coordinate axis with no cache.
Returns true if the attribute is numeric.
Prints the information of this object to the given buffer.
return null ; }
Sets the list of rows.
Gets the currently selected row.
Increment the selected index by the given amount.
Returns the index of the model for this table.
Set the selected index.
quick sort algorithm.
Swaps the elements of a [ i ] with elements of a [ j ].
Get an existing file.
Rotate an array of longitudes.
Creates an xml object from a file.
Create an xml object from two input streams.
Create an xml object from a resource.
Make a standard filename for a given app name and store name.
Saves the current state of the preferences to the file.
Saves the exception message to the given stream.
write atomic variable.
Writes a structure to the given writer.
Writes a structure to the given writer.
Writes a single sequence to the output.
Writes a record to the specified destination.
Checks if the file is a valid one.
Gets the wmo id.
Reads a row from the data stream.
Returns the data at the given index.
Reads the data of type 0 from the file.
Reads a 4 - bit GRIB data file.
Write the grid to a file.
Estimate the size of a grid file.
Writing to a file using the default version of the file.
Set the stations.
Set the currently selected station.
Pick a station from this world.
Return the closest station to the given point.
station in the selection
Returns the name of the projection of the specified type.
Get the stations within a bounding box.
Get a station by name.
Get a station data iterator.
Get a date iterator for the given station.
Reads the data for the given abbrev.
Computes the dot product of this vector with a vector.
Returns the Euclidean norm of this vector.
Normalize the vector by dividing each element by the norm of the vector.
Recursive method to set the services from the dataset builders.
Returns the parameter with the given id.
Returns the parameter with the given id.
Add a new name with the given double value.
Add a symbol and its associated value.
Gets the prefix.
check if the email is ok
Returns the double value of the given parameter.
Calculates the CRC value.
Tests if the next four bytes of this buffer are thin.
Returns the index of the field with the given name.
Gets the time type name.
Time coord string.
Sets the next polygon.
Sets the previous polygon.
Find a property by it s name.
Set the current projection.
Coverage from time.
Registers an io.
Registers an IOSP instance.
Checks if an iosp provider is registered for the given class.
De - registers an IOSP implementation.
Checks if the file at the given location can be opened.
Creates a new netcdf file with the given name and data.
Creates a new netcdf file with the given name and data.
Opens a netcdf file in memory.
Open a netcdf file in memory.
Returns the attribute with the given name ignoring case.
Converts this dataset to an NCML dataset.
Writes the CDL to the given output stream.
Writes the CDL to the given print writer.
Writes the CDL to the formatter.
Adds the given attribute to the given parent group.
Adds the given attribute to the given parent group.
Adds the given group to the given parent.
Add a dimension to a parent.
Removes the named dimension from the specified group.
Adds the given variable to the given group.
Adds a variable to the given group with the given name data type and dimensions.
Adds a string variable to the given group.
Removes the given variable from the given group.
Sends a message to this group.
Make the record structure.
Finish the transformation.
Read a section.
Reads data from the given channel to the given section.
Reads a list of arrays.
Reads an array from the current position with the specified section.
Returns the name of the given cdm node.
make full path with given name
Returns true if the given file should be included.
Returns true if the given file should be excluded.
Returns true if the given mfile matches any of the filters.
Append a value to the end of the vector.
Dispatch value to appropriate check method.
Unchecked check for bad value.
return true ;
Check if string is a valid short value.
return true ;
check u.
return true
return true
return data type ;
Return true if the given dataset is viewable.
Checks if a string is a valid boolean string.
Test if string is a valid alphanumeric string.
Checks if a string is in a constrained set.
Descend only on file path.
Converts a unicode code point to its hexadecimal string representation.
return null ; }
Compares two grid def records.
Process the input stream.
Process the buffer.
Removes the quotes from a string.
) ;
Writes an NCML file.
Get a value from thredds config.
Writes a CDL block.
Creates a station helper.
Validates the string builder.
Returns the azimuth of the message.
Gets the elevation.
Returns the latitudes of all the rays.
Returns the longitudes of all rays.
Returns the altitudes of all the rays.
Returns the azimuths of the rays.
Gets the elevations of the rays.
Selects a subset of the variables with the given names.
Select a variable from this structure.
Adds a new variable to this structure.
Sets a list of member variables.
Sets the parent group of this variable.
Calculates the size of this vector.
= null ; }
Read a structure from the file.
Gets the data category.
Gets the class name.
Add a parameter to the request.
Gets the header.
Convert a rect lat lon to proj b.
Returns the version of the given convention.
Get the positive value for a zaxis.
Set the color scale parameters.
Renders the plan view.
is this group a child of another group?
Returns the type associated with the given name.
Install in all columns of the table.
Set the API key and secret.
Creates a new boolean label with the given string value.
Create a new label from the given lines.
Creates an HTML label with the specified value.
Connects to a remote socket.
List the ip types.
Connects to the MySQL server.
Purges a logger.
Compiles the given source code for the given class.
Add a source file to the compiler.
) ;
Get the next frame in the gif.
The persons property.
} ; }
Get a person by id.
Add a list of validation messages.
Set the person id.
Create a view model type.
Loads the countries.
Step to create a new view model.
Factory method to create a new fxml view step.
Performs the given consumer for all observables in the given map.
Create index events.
Performs an access to a member of an object.
Create a view for the given view type.
Query for a style row
Reads a single pixel from a PNG image.
Reads a PNG image and returns the pixel values as an integer array.
Validate the image type.
Create a PNG image from this coverage data.
Set the tile data of a bitmap.
Executes a raw query.
Wraps a query in a cursor result.
Executes the query in the previous result and returns the result.
Query for rows matching the given query.
Handles a cursor.
Get the row for the given index
Register a new table.
Query for tile row
Get the coverage data from the database
Get the coverage data for the tile coverage data.
Get the coverage data for the tile table.
Get the coverage data tile matrix results.
Zoom in and out.
Zoom in.
Zooms in and returns the coverage data tiles.
get tile matrix.
Get the value at the given tile row.
Set the icon row.
Get the icon row for the given geometry type.
Open or get the SQLite database.
Convert a byte array to a bitmap
Convert a bitmap to a byte array.
Create a new row in the database.
Delete a table from the GeoPackage
Get or create a table metadata.
Get the id of a geo package.
Create table metadata from cursor.
Create a new extension in the database.
Get the feature row.
raw query cursor.
Query for features within the given bounding box and projection
Query for features within the envelope
Returns the number of vertices in the envelope.
Query for rows within the given bounds
Builds the where clause.
Query by bounding box and projection
Count the number of features within the bounding box.
Query for features within the envelope
Query for features within the specified bounds.
Count the number of pixels within the bounds.
Set the data in this buffer from the given bitmap.
Set the data from the given bitmap.
Set the compression configuration to use.
Get the number of tiles in the map
Adjust the bounds of the bounding box based on the zoom level
Adjust the bounds of the google map.
Adjust geo package bounds.
Adjust geo package bounds.
Get the bounding box for the tile matrix tile grid tile at the zoom level
Get the grid for the zoom level
Query for a tile row in the table.
Query for tiles in descending order.
Get the zoom level with the closest length.
Get the approximate zoom level for the given length.
Query for tile grid.
Delete a tile from the database.
Count the number of tiles in the tile table at the zoom level
Google tiles.
Reads a single pixel from an image.
Returns the pixel values of the tiff image bytes.
Validates the image type.
Create a tiff image.
Set the value of a single pixel.
Get or open a geo package.
Gets the current row from the table.
move to next invalid.
Query by base id
Delete by base id.
Get a rectangle from its width and height.
Get a rounded rectangle from the given bounding box and section.
Delete missing databases.
Create and close geo package connection.
Checks if a database exists.
Validates a SQLite database.
Validate and close the database.
Validates a SQLite database.
Validate the database header.
Checks if the database header is valid.
Add the databases from the GeoPackage metadata
Add external databases.
import geo package.
Get the geo package metadata for a database.
Get the geo package metadata at the given path.
Create a new geometry in the database.
Populates the metadata from the envelope.
Deletes the row with the given geo package id.
Creates or updates the given geometry metadata.
Update a geometry in the database.
Returns the number of rows in the table with the given name geo package and bounding box.
Create a new geometry metadata from the cursor.
Update rows in the table.
Draw a tile bitmap.
Get a list of rows by their ids
Checks if the cursor points to the expected value and if so closes it.
get user mapping dao.
Get simple attributes dao.
Gets the mappings for the given base.
Gets the mappings for the given related id.
Checks if a mapping exists for a given base id and related id.
Counts the number of rows in the cursor.
Register a custom cursor wrapper.
Read a custom table from the GeoPackage
Get the tile for the bounding box.
Draw a single tile.
Reprojects a tile to the requested projection.
Get the tile cursor tile results.
Calculate the overlap.
Set the density of the rasterizer.
Set the paint to use.
Set polygon paint.
Draw a tile from the current bitmap.
Draw a tile bitmap at the x y and zoom
Query tile index bitmap.
Query for the number of features in a zoom level
) ; }
Query for features.
Queries for indexed features in the web mercator bounding box
Draw a tile bitmap from the x y and zoom level
Simplifies the given points.
Get the paint for a point style.
Get the paint for the feature style.
Get the polygon paint.
Get the paint for a polygon
Get the paint for a feature style.
Get the paint for the given row style and draw type
Get the paint for a given row.
Get the paint for the given style id and type.
Add a bitmap to the cache.
Wraps the given values.
Create a bitmap.
Recycle all the bitmaps in this canvas.
Get the bitmap for the given layer.
Get the canvas for the given layer.
Create a bitmap and a canvas at the specified layer.
Gets the mapping dao.
Get style dao.
get icon dao.
Get the styles for a feature table.
Get the styles for the given feature table.
Get the style row for the feature table and geometry type
Get the icons for the feature table.
Get the icon row for the feature table and type
Get the styles for a given row
Get the styles for a feature id.
Get the styles for a given row.
Get the icons for a given row.
Gets the styles.
Gets the icons.
Set table feature styles.
Set the table styles for a feature table
Set the table icon for a table
Set the style for a row
Set the feature styles.
Set the styles for a row of data.
Set the styles for the given feature id
Set the style for a row of geometries.
Set the default style for the given row.
Set the default style for the given id.
Set the icons for a row of the table
Set the icons for a feature id
Set the icon for a row.
Set the default icon for the row
Set the default row icon for the feature table.
Get or insert a style row.
Get or insert icon.
Insert a style mapping.
Delete the style for the table
Delete the icon for the table
Delete by feature table.
Delete a table mapping
Delete the mapping for the given id and geometry type
Get all unique style ids for a feature table.
Get all unique icon ids for a feature table.
Get all style ids for the given feature table.
Get all icon ids.
Gets the image bytes.
Flush output stream.
Get the pixel at the given coordinates
Reads the pixels from the image file.
Draw a single feature tile
Draw the path on the canvas
Draw polygon path.
Add a line to the list of points.
Add a polygon to the map
Gets the cache for the given table name.
Remove a row from the feature table
Resizes all caches to the given size.
Get the cached table feature styles.
Get the table icon.
Get table dao r.
Set the width of the line
Set the height of the line
Returns the dimensions of the bitmap. This is the same as the dimensions of the original bitmap.
Computes the density of a tile given its density value.
Read blob value.
Read a table from a Geodatabase
Gets the color.
Validate the given color.
Create a color from hex color and opacity.
Get a geo package manager for the current thread.
Set the progress.
Get the max index for the given types.
Index a row.
Deletes the index for the given collection of types.
Delete a row from the index.
Delete the index for the given types for the given geometry
Delete a feature from the index
Returns true if this query is indexed.
Get the types that are indexed.
Query for feature index results.
Returns the number of features in the index.
Get the bounding box of the feature index.
Query the index for features within the bounding box.
get indexed type.
Gets the internal file.
Gets the path from the internal file system.
Gets the geometry type.
Sets the geometry type.
Checks if the url has a bounding box.
Replace the xyz values in the url string.
Checks if the given URL has a xyz in it.
Replace the bounding box of the tile with the tile bounding box.
Replace the bounding box in the URL.
Get the geometry.
Index a row of a feature
update the last indexed time for the feature
Deletes the index.
Delete a geometry from the index
Return true if the feature is indexed.
Query for feature data
Query for features within a bounding box
Count the number of features within the bounding box
Query for features in the given envelope
Count the number of features in the geometry envelope
Query for features within the given bounding box in the given projection.
Get the count of features within the bounding box in the given projection
Get the feature bounding box from the bounding box and the projection.
Gets the geometry metadata.
Get the row for the cursor.
Get the row for the given geometry metadata
Get the tile dao for a feature table.
Get the feature dao for a tile table
Get the bounding box for the feature tiles.
Query by foreign key
query for unique base ids
query for unique related ids
Delete by base id.
Delete by related id.
Delete by ids.
Builds a where clause for the given ids.
Create a new row in the database.
Delete a database.
Rename the metadata to the new name
Update the name of a field in the GeoPackage
Get all Geo package metadata.
Get the geo package metadata for the database
Gets the metadata for the given id.
Get or create a geo package metadata.
Checks if the database is external.
Get the metadata for the external path
Get metadata where name like like and sort.
Get metadata where name not like like sort column.
Get metadata where name like like str and sort column.
Create a new geo package metadata.
Called when a view is created.
Add a parallax view if it is a view group.
return null ; }
create custom view internal.
Append an event to a cyclic buffer.
Find logback config file from system properties.
Gets a resource from the class loader.
Automatically configure the application.
Add a status update for a resource search.
Convert a socket address to a string.
Create a new executor service.
Start converters from the given head.
Append an event to the end of the list.
Adds a substitution property.
Returns the value for the given key.
Compiles the top node into a converter.
Consume a token and return it.
Convert a date to a regular expression.
) { }
End the current evaluation.
Initializes this context with the given key.
Create dynamic context selector instance.
Set up properties for this logger.
Get the path to the mounted external storage directory.
Gets the database directory path.
Gets the absolute path of the given filename.
Evaluation of a single event.
) ;
Update the mask if necessary.
Choose a filter from the chain.
Create the key managers.
Create the trust managers.
Get the key store from the system properties.
Gets the location from the system property.
Returns a resource URL for the given location.
Traverses the chain of converters to see if any of them handle throwables.
Stop hook.
Prints the given message if the status manager is available. If the status manager is not available
Print status manager if errors occured.
Prints the status of the context to the system.
Gets an entry from either the live or lingerers map.
Removes the entry from the live map and associates it with the given key.
Parses the given string into a format info object.
Rename a file.
Checks if the files are on different volumes.
Gets the value of the given environment variable.
Returns the value of the given key from the Android system properties.
Sets the property map.
Returns a string representation of the given property map.
Extract the stack trace elements from a throwable.
Checks if the current class is in the framework space list.
adds a status to the list
Add a listener to the list.
Lookup implicit action.
Get the applicable actions for the given element path.
Sets the class loader.
Gets the value of a system property.
Returns the given name with the given number decapitalized.
Get the method descriptors for the given class.
Gets the property descriptors.
Starts the output.
Adds a new on console status listener.
Ends the current interpretation.
get discriminating value.
Is event discardable.
Initialize a shutdown hook.
Ends the execution of the hook.
return null ; }
return default ; }
Returns the included and excluded strings for the given defaults.
Convert a string to a scope.
Set properties.
Add a appender to the list.
Detach appender from the list.
Detaches the appender with the given name.
Handle a parent level change.
Call all appenders for this logger.
Detach appender from this anchor.
Create a child logger by last name part.
get turbo filter chain decision 0 or more
Log an event.
Calls the method and returns the resulting socket.
return false ; }
Convert this log level to an integer.
Convert an int value to a log level.
get resource occurrence count set.
Gets a resource from the classpath.
get class loader of object
Get class loader as privileged action.
Gets the class loader.
Starts the output.
event.
Starts a new interpretation.
Returns the separator index of the given name starting at the given index.
Returns true if the event contains any marker.
Gets the client thread name.
Checks if two files are on the same disk.
Append an event to the cache.
send a cyclic buffer to the client.
Add a new value level pair.
Create a converter from a simple keyword.
Create converter.
Determine the compression mode.
Configures the connection to the given URL.
Configures the context with the given file.
Configure this instance from an input stream.
Builds the interpreter.
Configures the source.
Builds the interpreter.
Get the value for the given key.
Sets the name.
Checks if the given context has status listeners.
Returns the time of the last reset.
Attempt to start parsing.
Get the effective converter map.
Get the header of the file.
Returns the file footer.
with a warning.
End the current appender.
Returns a copy of the clients.
Adds a client to the list of clients.
Removes a client from the list of clients.
Get a copy of the current context map.
Gets value of method.
get turbo filter chain decision.
Checks if the current OS is android.
Initialize the context.
Returns an array of files in the given folder that match the given stem regex.
Prints the status list in retrospective order.
Gets the database file.
Cleanup expired logs.
Check if the last check has expired.
append event to insert statement
Appends an event to the secondary inserts.
Bind a logging event to the statement.
Convert an object to string truncated to 254 characters.
compute mask for i event
Merges the maps for the given event.
Inserts an exception.
Returns the length of the longest prefix of this path and the specified path.
Returns the effective level of the status set.
Returns true if the given class is an instantiable interface.
Create a new child map with the given value.
Processes an include.
Opens a stream to the given URL.
trims the head and tail tags from the given recorder.
should start.
Returns true if the exception is a transient exception.
Set the default list of hosts.
Create local index if it does not already exist.
Synchronize the underlying data source with the data source.
Sync the database if needed.
Waits for a task to finish.
Synchronously lists all indexes for offline data.
Reads the given number of characters from the given stream and returns them as a string.
Converts an input stream to a byte array.
Quietly consumes the input stream and error stream from the given connection.
Returns the hosts that are up.
Sets the type of the place.
Starts asynchronous browse.
Add a value to the cache.
Get a value from the cache.
Waits for all threads to complete.
Reports a test case with a throwable.
Copies all files from src to target.
Initialize simulator properties from a file.
Gets the value of the field.
Gets method by name.
Formats a percentage value as a string.
Formats a double as a string.
Format a long as a string.
Write a JSON string.
Writes an integer to the JSON stream quoting it if necessary.
Write a double as a JSON string.
Reads a sequence of json numeric characters.
Reads a JSON integer.
Reads a double.
Reads a JSON string and decodes it as base64.
Executes the given method call.
Submits a request to the server.
Enqueue a method call.
Get a resource from the given location on the filesystem
Update the decoration.
Refresh repository view.
get resource history view
Opens an editor with the given contents and name.
Displays an error message and fails the authentication attempt.
Prompts the user for authentication.
Creates the default page.
Start the background thread.
Set the keep all alive.
Set if this element should be omitted.
Set the owner of this node.
Adds a factor to the list of factors.
Create a new term
Returns true if this term matches the given condition.
Get the DSL for the given rule source and input.
Load the configuration from the given input.
Reads the configuration from the given stream.
Gets the menu.
add response.
Appends a new href child element.
Insert a new href before the existing one.
Remove the link with the given href.
get or create stat property.
Get the href of the element.
Get the status of the current element.
Returns the stack frame for the given status.
Checks if class1 is a subtype of class2.
Check if proposal collection contains specified proposal.
Resets the reader to the beginning of the file.
Create the text operation actions.
Adds a connection to the list.
Returns the value of the given property id.
Removes a connection from the list.
Sets the location of the node.
Sets the value of the specified property.
Sets the dimension to a new value.
Dumps the constraints.
add a new lock entry
Adds a child to this vertex.
Removes a child from this vertex.
Override start to register a listener for parsed rules.
Stops the plugin.
Get a string from the resource bundle
Gets the resource bundle.
Get rule builder form colors.
Set the date with a string.
Set the date time using the given pattern.
Create an error status with a throwable.
Log with error level.
Adds a new field editor.
Adjusts the grid layout.
Applies the font to all the fields.
Calculates the number of columns.
Initializes the field editors.
Notify all registered listeners of a property change event
Set the active editor for the given part.
Add the zoom combo to the given tool bar manager.
Determine the dialect.
Create a new context instance.
Saves the current file.
}
Adds the given object to this request at the given URL.
Asserts that the given object is not null.
Add a token to the tree.
Add a child node.
Sets the file to be read.
Adds a condition to the list of conditions.
Adds a condition term to the list of conditions.
Returns true if this condition matches the given condition.
Gets the property.
Gets the current status of the element.
Set the current property of this node.
Get the last line from the back text.
Get the last non dash line.
Bind the given id with the given binding.
Binds two strings together and returns the resulting string.
Binds an id to a string.
Create the process.
Create a compilation unit for j.
Returns the current runtime id.
Visit a rete.
Visit a node.
Returns the dot id of the given object.
remove = append.
add set.
Factory method to create new locator.
return null ; }
Returns true if the given object is the same as this object.
Checks if the set contains the given term.
Create a new factor from a tokenizer
Add pages to the wizard.
Makes a http delete request.
Performs http post.
Gets the status of a job.
Executes the pull operation.
Handle pull results.
Set the value at the given index.
Increases the reference count for the active lock.
Filter proposals based on a prefix.
Reads a string from the given document starting at the given offset.
Retreives the rows of a graph.
Gets the edit part for a given model element
Returns the image descriptor for the given path.
Declare an image in the registry
Add a vertex to the graph at a particular depth.
Gets the row index of the given vertex.
Get the width of the table.
Dump the matrix to stdout.
Optimize the matrix.
Initialize the graphical viewer.
draw a graph
Returns the breakpoint for the given source.
Set the href of this element.
return true ;
Copies a list of properties from this node to the specified destination.
Examines a multi status response.
Extract the property stats from the response.
Get the content of the resource.
Returns an enumeration of all the locks currently held by the user.
Get the status of a property.
HEADs the resource specified by locator.
Implement LockManager interface
Moves this property to the specified destination.
Performs the checkin.
Renews the lock associated with the token.
Removes a collection of properties
Removes a property from this object.
Sets the content of the resource.
Sets the properties of the resource.
Sets the property.
This method unlocks a previously acquired lock.
Update the version of the resource
Sends a version control command to the dav server.
Deletes the resource specified by locator.
Examines the status code and throws appropriate exceptions.
Returns true if the property has a child.
Writes the request body.
Convert a byte array to a hex string.
Convert an array of ints to a hexadecimal string.
set if all the properties of the first child of the first child
Set if a property name is already set
Set the current property of this node.
Strip last word.
Update the tree.
Writes the content of this string to the specified output stream.
Synchronized to prevent multiple threads from running in parallel.
Marks the errors in the given list of build markers.
Skip over any white space characters.
add a resource to guvnor
changes of a selected file.
Returns the age of the user.
Returns the length of the content.
Returns the maximum number of forwards.
Gets overwrite.
Gets the passthrough.
Returns - num if not found.
Puts a property. If the value is null or empty the property is removed.
Set the timeout value. If the value is - num then the timeout will be set to the
Create a buffered reader by using the given filename as a source.
Parses the given file and adds all entries.
Get the metadata from the given text.
Strip the metadata from the given text.
Add tokens to the tree.
Get children.
Get the children that start with the given object.
Add a child node to a list.
Print the tree.
Recursively print a node and its children.
Prints the tabs.
Read json value from text.
Get image descriptor by id
Invokes the request and returns the response.
Set request header field.
Create the launcher.
Create the rule.
Create the flow.
Create launcher.
Gets the selected i.
Create an image from the printable part.
Returns the name of the field.
Returns the mvel evaluator.
Returns the value of the mvel constraint.
Add properties from guvnor resource.
Baseline control.
Binds an i value to a member.
get member i.
Optimize the list of vertices.
Initializes the controls.
Validate page.
Generate entity tag.
vertex.
Validates a list of OTPs.
Is the right user.
get username by public id
Add the yubikey to the user.
Attempt an OTP authentication.
Clears the password.
Get the public ID from an OTP address.
Checks if the given string is a valid OTP string.
Create an evaluation from the given simple node and source.
Create the evaluation.
Clears the cache.
Is the current JDK 15?
Gets the package name of an object.
Get the package name of a class.
Returns a unique descriptor for the given object.
Gets the type of an argument.
Is more specific.
Returns the value of the given property on the given object.
Returns a map of property descriptors for the specified class.
Returns the property descriptor of the given class and property name.
Gets the read method.
Read a character.
PROJECT = Expression Expression
Select all.
Convert an object to a long if possible.
Convert an object to a double.
Convert an object to a big integer.
Convert an object to a big decimal.
Returns the string representation of the given value.
Returns the numeric type of the given value.
Converts the given value to the given type.
Gets the int value.
Gets the numeric type.
Gets the numeric type.
Creates a number of the given type and the given long value.
Pops an evaluation from the tree.
Generate ognl getter.
Generate OGNL setter.
Flatten the tree.
Initializes this UnsafeNode with the given properties.
Escapes the current character.
Set the root object in the given map.
Returns the value of the given expression at the given root.
Sets the value of the given accessor expression.
Set the value of the given tree at the given root.
Returns true if the given expression evaluates to a constant value.
Gets the default watch service id.
Reload the current application class loader.
Get an archiver by name.
Checks the archiver for problems.
Reads the given file as a string.
Create the project.
Add a system property to the java object
Add a system property to the java.
Change directory.
Update the state of the refresh button.
Create file observer.
Return the selected folder.
Create a new folder.
Checks if the given file is a valid file.
This method is used to start a job.
Start a list.
End list.
Handle motion.
Gets the current crop rect.
Computes the layout of the rectangle.
Registers the listener and media factory.
Watches for changes in the span.
Get the view for the given position.
Get drop down view.
Convert the spanned text to the specified format.
Consumes a paragraph of text.
Create a unique file with the given name in the given folder.
Determines the original file.
Returns the namespace of the given name.
Returns the local name of the given name.
Set the value of an attribute.
Set the given attribute to the given value.
Get the name of the font.
Get a font name from a ttf file.
Checks if we need a new buffer at the end of the list.
Writes an array of bytes to the stream.
Writes a byte to the buffer expanding if necessary.
Writes the data from the given input stream to this buffer.
Writes the contents of this buffer to the specified output stream.
Returns the contents of this buffer as a byte array.
Set the font size
Replace windows separators with unix separator.
Recompute focus.
Ensure that the highlight view is visible.
Zooms in and out of the given highlight view.
Reset the locator.
Validates a string against this pattern.
Add an element type.
Set the value of an attribute for a given element.
Set the parent of a child element.
Get the element type for the given name.
; }
Recursively removes paragraphs from the editor.
Apply this rule to the given selection.
Validates the given domain.
Called when an operation is executed by the editor.
Redos all changes made to the given editor.
Replaces all occurrences of search with replace in source.
Get or create a thread status.
Sets the decoding options for the given thread.
return false ; }
Decode a bitmap from a file descriptor.
Get all fonts.
Get the fonts by name.
Get a map of all system fonts.
Sets up the parser.
Get a reader from a source.
Gets the input stream.
Copies the value of the attribute to the new element.
Expand the entities in the source string.
Looks up the next entity in the buffer.
Restarts a previous saved element.
Undeclare the top of the stack.
Pops a previously popped element from the stack.
Returns the prefix of the given name.
PREFIX + namespace + prefix + namespace is foreign.
Removes leading and trailing quotes from a string if present.
Split a string into an array of strings.
Recurses the stack to find a parent that can contain the given element.
On save instance state.
Unregisters all listeners and removes all toolbars.
subscribe to media event
link event.
Get proper base matrix for this view
Zoom in and out.
Returns true if the given selection exists in the given editor.
Finds all the spans of the given string and removes them from the given paragraph.
Picks up a directory and starts it.
Rotate image.
Set the output writer.
Writes a single character.
Writes a string.
Returns true if the given name is equal to the given value.
Write out a string as an HTML UT.
Writes out the namespaces.
Writes a name.
Create stream if not exists.
Attempt to activate a stream.
Complete with missing instance snapshots.
Attempt to wait the minimal amount of time to execute the next provisioning request.
Performs a kinesis get records operation.
Performs an action retrying if necessary.
Performs an action with exponential backoff.
Checks if a bucket is accessible.
Loads the latest snapshot from the store.
Triggers the wildcard expander.
Replaces all occurrences of a pattern in a string.
Delete any of the chars from the given string.
Add a resource lint report.
Update properties with current configuration.
Gets the config properties.
Automatically detects the wro file.
Create a map from the pre processors to the post processors.
Compile the given content.
Reload cache with new value.
Reload model with new value.
Wraps a http servlet request with location information.
Transforms a string by appending a suffix to the filename.
Log an error.
Redirects the request to the specified location.
Process a resource.
create expander function.
Locates an input stream for the given uri.
Create the configuration.
} ) ; }
Processes a request.
Sets the configuration.
Identify duplicate group names.
Merges the imported model into this model.
Locates an input stream for the given URI.
Apply post processors.
Decorate processor.
Process the given request.
Splits the given option on the given string.
Loads properties from the given stream.
Parse properties.
Create a wro manager factory.
Persist fingerprints for a list of groups.
Checks if is target group.
Extend plugin classpath.
Get model resource as stream.
Initialize wro manager factory.
Sets the model transformers.
Compile the function.
Merge a list of resources.
Merges a list of resources using pre - processors.
Run a list of resources in parallel.
Apply pre processors to a resource.
Decorates a resource pre processor.
Persist the string in the fallback storage.
Returns a collection of all declared fields of the given object.
Rewrite image.
Compute new image location.
Add a model transformer.
Processes the bundle and generates the output stream.
Initializes the aggregated folder path.
Extract variables.
Parses the given CSS string.
Replaces all the variables in the given string.
Convert post processor to pre processor.
Determines if the search resource type is eligible to be included in the search.
Gzip response.
Decorate a processor with a list of include patterns.
Decorates a processor with a list of exclude patterns.
Create a resource change handler.
Attempt to remember the given resource.
Apply the given function to the given resource.
Filter out nulls.
Checks if the minimize parameter is set.
Find imported resources.
Returns the absolute url for the given resource uri.
Create items as string.
Gets the alias list.
Create the optimization context.
Evaluates the template using the given reader and returns the result. Closes the reader when done
Evaluates the given script.
Process the input.
Checks if the request is a handler request.
Create handler request path.
Renames a group.
Computes the destination folder.
Processes a group.
Check if a change is required for a group.
Locates a stream for the given URI.
Create an object pool.
Attempt to locate a resource in the given folder.
Opens a new jar file.
Extracts the path from the URI.
Determines if the group extractor should be minimized.
Add uri locators.
Decorate a model factory with a list of model transformers.
Add a require statement.
Processes the given string using the build update script.
Log summary.
Process a single resource.
Returns the read write lock for the given key.
Create a process for the given file.
Parses the given string into an array of properties.
Get the list of tasks.
Gets the compilation command.
Parse a single header.
Add no cache headers.
Gets the path info from the given location.
Gets the servlet path from the given location.
Checks if the given path matches the given url.
Load a regexp with a given key.
Copies the reader to the writer quietly.
Create a new temporary file with the given extension.
Clean image url string.
Sets the object attribute.
Generate data uri string.
Generate data uri.
Sets the context with the given configuration.
Unset correlation id.
Checks if the given cache key has changed.
Invoked when an exception is thrown.
Check if a resource has been changed in the group.
Update hash for a specific group.
Checks if the resource list has resources of a given type.
Create a process from source file and destination file.
Parse the group.
Create a group from a XML element.
Parse a resource.
Gets the resources for a given group.
Stops a timer of the given name.
Returns the timer with the given name for the current thread.
Returns the previous timer registered with the given name.
Print the saturation statistics.
Wake up all the workers.
Update the processed counters.
Update the finished counters.
Atomically update the counter if the current value is smaller than the given value.
Produce a trace message.
Instert into taxonomy.
Ensures that the input stage is loading.
Reduces the saturation of the taxonomy tree.
Determines if the cluster is in a consistent state.
Restores the current taxonomy.
Restores the taxonomy of the current instance.
Gets the evidence.
Initializes the worker.
Recursively invalidates this reasoner stage and all its sub - stages.
return null ;
return null ;
Create an unsupported owl api method exception.
Remove the element at the given position.
Remove a key and value pair at a given position.
Get the index of a moved element.
Returns true if the specified array contains the specified element.
Add an element to an array if it does not exist.
Checks the number of occurrences.
Adds a timer to this one.
Add a new timer to the rule set.
Puts the given key - value pair into the given arrays if not already present.
Removes the entry for the given key.
Enlarges the internal arrays to accomodate a new capacity.
Reduces the size of the internal arrays to a power of 2.
Saves the given configuration on disk.
Prints the declarations of the classes in a taxonomy.
Gets all instance nodes of the given node.
Removes all of the elements from this set.
Combines a list of hashes into a single hash.
Copy the contents of the given streams into the given output stream.
Creates a new delegating incompleteness monitor.
Process a taxonomy.
Submits an i to the queue.
Appends the given elk object to the given appender.
Marks the given query class as not computed.
Add a direct type node.
check if chain match.
Returns a new set that maps the elements of the input set to the elements of the functor
Add an element to the set.
Removes the object from the set.
Add a conclusion counter.
Log memory usage.
Sets the configuration of this reasoner.
Shutdown the logger.
Print header.
Prints the string representation of the given values to the logger.
Get a string from a char.
adds a counter to this rule set.
Recursively write a resource.
get input parameter.
get property descriptor by property path.
Gets the required parameters.
Checks if is single value type.
Add a link to this document.
Set the media type of the link.
Add hreflang parameter.
Add a revision to the link.
Add a parameter to the link.
Expand the given arguments using the given URI template.
Gets link rels.
Gets link revs.
Checks if any of the required variables have been satisfied.
Convert the value to a string.
Checks if the given property is hidden.
Returns true if the annotation contains the given property false otherwise.
boolean.
Determines if this request element is required.
Returns the default value of the parameter or header.
Returns the name of the parameter.
Gets the exposed property or parameter name.
Get the vocabularies of a bean
Get the query string.
Append the form information from the given action descriptor.
Outputs an input button with the given type and value.
if possible values. length > num ) { return ; } } }
ANDs the given affordance builder.
Partial URI template components.
Strips the optional variables from the uri template.
get first node by its name
get by rel.
Returns an iterator over the nodes in this graph.
Returns an immutable hash map where the keys and values are the same.
Returns a new tree map populated with the given elements.
Returns an empty map.
return this ; }
Returns the key in this map.
Attempt to fold an iterable.
Create an xform for a drop while the predicate holds true.
Folds the elements of this stream using the supplied function.
Of tuple 2.
Matches the current element with the specified functions.
Registers the given classes.
Get the element at the given index.
append a value to the vector
Concatenates the given iterable of items into a new vector.
Creates a mutable set with the specified items.
Creates a mutable vector with the given items.
Creates a set from the given items.
Returns an immutable list with the specified items.
Create an iterable from an existing array.
Returns a string with the specified number of spaces.
Convert an array of objects to a string.
Construct a lazy ref from a producer.
apply ex t
Inserts the given item into the given array at the given index.
Copies the given array.
Suspend the execution of the current thread.
Suspend the transaction before an async operation is started.
Build the service components.
Validates that the given file is a directory.
Create an inheritance link between two classes.
Copies methods from one class to another.
Copies the given methods to the given destination class.
remove sbb entity with current class loader.
return enabled ; }
Get the ra links referenced by a service component
Install service.
Uninstall service.
Checks if a link is a resource adaptor link.
Returns the usage parameter sets for the given sbb.
reset all usage parameters to their default values.
)
unfold array.
Executes an event.
Binds an object to the cache under the given name.
Unbinds the named object.
Looks up an object by its name.
Returns the name bindings of this node.
Processes the next event.
returns true if this trace level is higher than the given one
Extracts a jar file to the target directory.
Copies the data from the input stream to the output stream.
Implicitly add the key and value to the node.
Attach a sbb entity to this node.
Detaches a sbb entity from this node.
Return true if there are no sbb entities attached to this node.
Gets the sbb entities attached to this node.
Attaches a timer to this node.
Detach the timer with the given id.
Check if there are any timers attached.
Get the names of all timers attached to this node.
Binds a name to the node.
Remove the named child.
No names bound.
Copies the names of this node.
Set a cmp attribute.
Get a cmp attribute.
Returns a copy of the current node s attributes.
Initialization of notification info.
send a usage notification.
Downloads the remote du.
} }
install deployable unit.
Uninstall a deployable unit.
Processes the undeploy.
Displays the current status of the application.
Checks if a log record is loggable.
Gets the logger.
Returns a set of all sbb entities in the tree.
Gets the permissions.
Gets the code sources.
Checks if a profile with the given name exists.
Remove this profile from the table
Update configuration properties of this component.
Called when the slee is running.
Indicate that the object is in a stopped state.
Activates the adaptor.
Deactivates the entity.
end of all activities
Remove this instance from the trace.
get resource adaptor interface by id
Activate a service.
Get an activity handle from a handle reference.
Called when an activity has ended.
Update ra configuration properties.
Verifies the new properties.
Adapt a resource adaptor object into stopping state.
Activates the resource adapter.
Unconfigures the resource adaptor object.
Unset the resource adaptor context.
Unset fault tolerant resource adaptor context.
Build the profile attribute map.
Resume the playback of the animation.
Get the activity context handles of the node.
Gets the usage for a given parameter set.
Decorate abstract class.
Fire an event with no payload.
Deliver an event to the slee container.
Gets a profile from the database.
Returns all abstract methods declared in the given class and its superclasses.
Returns the interface methods from the given interface.
create object pool.
remove object pool
Checks if the given notification source is the owner of the given alarm.
Raises the alarm if it is alive.
Gets the usage parameter set for the given profile object and profile name.
Gets the event type descriptor.
Checks if this filter accepts the given deployable unit.
Initialize the deployable unit wrapper.
Start the deployment.
Deploy a deployable unit.
Show the status of the deployment.
Executes the after commit actions.
Executes the after commit actions.
Executes the after rollback actions.
Executes the before commit actions.
Executes the before commit actions.
Get the names of all tracers.
Create a tracer by name.
Remove the replication data.
Processes a slee component with usage parameters
Gets a pool by its id.
Create a new object pool.
Execute the given activity handle.
Create an activity context handle.
Finish an activity.
Checks preconditions for firing an event.
Deliver an event to an activity.
generate sbb local class
Makes the getter.
Converts a string argument to an object.
Sets the profile id.
Extracts the message from the result.
Returns true if the given object is a child of this sbb entity.
Does this set contain all of the elements in the given collection?
Removes all of the elements in the specified collection.
returns true if this level is higher than the other level
Attempts to resolve the object at the current level.
Detach all resources.
add a profile call
Get or create a profile object.
passivate a profile object on tx end
Sets the text value of this id.
Generate activity context interface.
Generate concrete methods.
Set the value of an attribute in the cache.
Add a name binding.
remove all names from the naming facility
Remove a name binding.
Attempt to attach a timer to this context.
remove the timer facility from the container
Attach a sbb entity to this activity.
Detach a sbb entity from this activity context.
Returns a sorted set of sbb attachements.
end an activity
Add a new component to the deployment
Returns the external dependencies of this module.
Returns true if all of the dependencies are satisfied.
Returns true if there are no duplicate strings.
get install actions.
Gets the uninstall actions.
has referring du.
Close a profile.
Gets the object name.
write mode.
Resumes the current profile.
after set cmp field.
before get cmp field.
after get cmp field.
Invoke before management method invocation.
Called after management method invocation.
Recursively delete a file or directory.
Create the default constructor.
Create the default usage parameter getter.
Creates the getter and setter methods.
Create fire event methods.
Create get sbb activity context method.
Adds the given expression to this query.
Bind a name to an object.
Rebinds the named object to the specified target object.
Decorator for abstract sbb.
Proxies a method invocation on a proxy that does nothing.
Gets the real field name.
Sets the value of the given field.
Returns the value of the given field.
Initializes the profile.
unset the profile context
get profile local object.
Fire add or updated event if needed.
get profile cmp slee10 wrapper
Allocates a class with the given name and interfaces.
Create an inheritance link for the given concrete class and super class name.
add member values to annotation
Get the activity context interface for the given activity.
get class pool.
Set the deployable unit.
Called when the server is undeployed.
Executes an activity.
check if there are any interfaces of the searched class or interface
Get all methods declared in an interface and its super interfaces.
Checks if the given tracer name is compatible with the given notification source.
Queries a static query on a profile table.
} } }
get entity manager.
Starts the resource manager.
Convert a class loader to an access controller class loader
Call a method on a proxy.
Checks if the current transaction is the same as the current one
Convert last access time to TTL.
Is profile class visible.
local exception.
Returns a list of loggers that match the given regular expression.
reset the logger levels
Clear all loggers for the given name
Add a new logger.
Remove a handler from a logger
Convert the given notification source and tracer name to log4 j string.
) ;
Set the log4j level.
Sets the flags for the trace level.
Sends a notification to Slee.
Checks if the given tracer name is equal to the given one
Writes the vendored data to the output stream.
Reads an object from an input stream.
add a direct dependency
Returns all the dependencies of this resource.
Attempt to find a class by its name.
Attempt to find a resource locally.
Searches the classpath for the resource with the given name.
Create and register profile m.
Resume a suspended transaction
Gets the sbb i.
Gets the resource adaptor entity links.
Init slee.
Shutdown the slee.
Validates a transition from a slee state to a new one.
generate named usage parameter getter.
Update field with new value.
Builds a new jdbc instance.
Add a value to the query.
Runs the given operation within the given transaction.
Creates a region request from a string.
Gets the region.
) ;
Sets the viewing hints.
Adds a viewing hint to the resource.
Sets the list of renderings to use.
Adds multiple renderings to the resource.
Merges the given profiles into a single profile.
Creates a rotation request from a string.
Creates a size request from a string.
Initialize the adb connection.
Dumps the current contents of the device to a string.
Attempt to pop a box from the gps device.
Attempt to push a gps2 device.
TEMPORARY CALLS
Copies a dump of the device to a temporary location on the local machine.
get crash log file name.
Detabifies the contents of the current line with the specified tab width.
Indents the current line with the given number of spaces.
Tokenize the text with HTML tags.
Sets the markdown for the given text.
Escape special chars within tag attributes.
Add an exception.
Close the cache.
Find the parent fqcn.
Write to filer.
Writes a bit divider to the stream.
Appends the strings in the given bit vector to the bit vector.
Reads the data from the given stream.
Gets a list.
set klov report.
Add a screen capture from the given path.
Set system info.
Create a selector that selects the given property.
Create a selector that applies the given transform to the given property.
Extract validation annotation data.
Find all annotations for a given property.
Finds property annotations.
Returns the property descriptor for the given property name in the given class.
Convert a map to an object of a given class.
Convert a map to a complex type.
Creates a map from the given object using the given ignore strings.
Convert a complex object to a map.
do get values.
Create the validator.
Creates a list of validators from a list of meta data properties.
Lookup validator in registry.
Apply validation meta data properties to validator.
Remove the property from the map.
Tick the timer.
Returns the number of key - value pairs in this map.
Implementation of MurmurHash 64 - bit hashing.
Tries to open the database.
Put all values in the map.
Deletes the given keys from the database.
Searches the database starting at the given key and returns a key value iterable.
Load all by keys.
Flushes and closes the database.
Reduce by double.
reduce by r.
Variance of a number from a set of numbers.
Returns the mean value of the array of longs.
Invokes a method from an object argument.
Reduce by a function.
Convert a timestamp in UTC to a euro zone string.
Checks if an object matches a set of criteria.
Creates a criterion using the not in operator.
Create a criteria from a list of objects.
Parses a json string and returns a criteria object.
Add an array of doubles.
Finds and returns the maximum element in an array.
Returns the first N elements of the given list with the specified sorts.
Returns the last element of the given list according to the given sorts.
Returns the last N elements of a list.
Returns the least of the given elements.
Returns the minimum element of the given list.
Finds the minimum value in an array.
Processes an array of maps.
Handle collection of maps.
Loads a class from the given map.
Get the value for the given key.
Create the tool tip from the resource bundle.
Appends the hex value of the given int to the end of this sequence.
Process the write queue.
Starts the writer.
Gets the character at the specified index.
LCS of a string.
Checks if the given character array is in the given string.
Add the given character to the given string.
Adds the given objects to a string.
Compacts the given string.
Splits a string into an array of strings.
Split by space.
Split by pipe.
Converts an array of array of array to an array of string.
Converts a string to CamelCase.
Checks if the given substring is inside of the given substring.
Returns the under bar case of the given string
Convert a number to a string.
Combines several sorts into a single one.
Sorts the given list according to the given fields.
Returns a comparator for the given fields.
Recursive method to get the child comparators.
Checks if the given value is in the given map.
Compares two ints and die if they are different.
Compare two int arrays and die if they are different.
Get the sum of an array of values.
Rounds the given number up to the nearest power of 2.
Sorts the given list using the given field sort order and ascending order.
Sorts a list according to a field.
Recursively set field value.
Converts an object to a list.
Create the SQL to load all version data by keys for the given table.
Deep copy of list.
Checks if object has string field with given name
Check if class has string field with given name
Check if class has field with given name
Get first comparable or primitive field from class.
Gets the sortable field.
Compares two cache entries according to their type.
return 0 ; }
Sorts the given list according to the given sorts.
Sorts the given list according to the given sort by string.
Sorts the entries of the given map by the given component type.
Sorts the values of the given map by the given component type.
Sort keys collection.
Sorts an array using a universal comparator.
Returns a universal comparator for the specified field.
Returns a universal comparator that compares based on the given ordering.
Get the value for the given key.
Returns the value associated with the given key. If there is no value associated with the key null
Evict if needed.
Initializes this range with the given value.
Allocate a direct buffer.
Determines if we should exit.
Manage the input writer channel.
Check if we need to flush the queue.
Starts the monitor.
Instrument the receiver.
Get an object from the map.
Main query plan.
Performs a group operation.
Tick the timer.
Sync the output stream to disk.
Closes the output stream.
Writes the buffer to the underlying stream.
Write to the output stream.
Initialize the output stream.
Puts all the values in the given map into the cache.
Convert the given key to a byte array.
Reads the meta data of the given property from the properties file of the given class.
Extract validator meta data from string.
read meta data.
Extract validator meta data.
Extract validator meta data from annotations.
convert annotation data to validator meta data
Splits the given string around the given split character using the given limit.
Split by white space.
Split by delimiters.
Splits the given string by the given delimiters.
Splits the given string into an array of strings using the given delimiters.
Parse a double from the given buffer.
Parse an integer from the given buffer.
Parse a long from a string buffer.
Get a property by its path.
Returns a map of field access for the given object.
Returns the type of the given property.
Injects the given value into the given property path of the given object.
Set an indexed property of a class.
Recursive method to get a value from a collection.
Get object property value.
Get int.
Initializes the message fields.
Creates a message with the specified key and list of arguments.
Creates a validation message.
Convert a list of keys to values.
The subject of the validation context.
Parses the given text as a JSON object.
Sends a request to the server.
Deletes a database.
Creates a new database.
Get a list of uuids.
Triggers a replication request.
Query for a single value.
Filter the results by descending or ascending order.
Synchronize all design documents with the database.
Get a design document from the db.
Get all design documents from desk.
Get a design document from the desk.
Saves the replicator document.
Finds a replicator document.
Find all replicators.
Deletes a replicator document.
Finds an entity by its id.
Find documents by query.
Checks if the collection contains the given id.
Bulk Deletion of multiple objects.
Responds to put requests.
Performs a HTTP PUT request.
Perform a POST request.
Performs a HTTP DELETE request.
Validates the response.
Sets the request entity.
Add an attachment to the message.
Returns the changes for this object.
Reads the next row.
Convert the money to the currency.
Shuts down this instance of the system.
Writes the given observable sequence of bytes to the given output stream.
Adds tags to a metric.
Automatically creates the temp tables.
Get the id of a namespace.
Checks if request is a query.
Send authentication request.
Get the verb of the request
Generate subject access review.
Handles a request result.
Handles a connection failure.
Initializes this instance with the given session.
Finds all scheduled jobs.
Returns a list of buckets from the given map.
Ends the exchange with the given status code and reason phrase.
Queries for all rows in the table that match the given timestamp.
Creates a histogram from the given start and end points using the given step.
Send a message to this producer.
Send one way message
Send a message to a Kafka topic.
Perform a scan.
Add a file to the zip.
Replaces the entry for the given file with the given text.
Builds the zip file.
Generate the metrics for a single component.
Fetch content by id.
Fetch the content of an order item.
Upload a transformation to a container.
Generate file generation metrics for the given components.
Creates a new file in the given parent directory
Ends the current node by adding the object to the parent node.
Registers an adaptor for the given type.
Registers a renderer for the specified type in the specified renderer group.
Prepares a template.
Add a domain object to the container.
Sets the given property to the given value.
Add a child object.
Returns a supplier that creates files in the given directory.
Copy the contents of the given stream to the given output stream using the given hash assembler.
Parses the given file into a DOM.
Parses the given reader into a DOM.
Returns the stream of elements in the given element.
Returns a stream of nodes in the given parent element.
Gets the first child element.
Returns a stream of elements in the parent element whose names match the given names.
Validates an XML against a given XML schema.
Entry point for the archiver.
Creates a new content builder with the contents of the given stream.
Creates a builder from a resource.
Process a single entry in the ZIP archive.
Encodes the given string using the UTF - 8 charset.
Sets the signature for the given access key.
Returns the number of spaces if the array is null ; otherwise returns the number of spaces.
Signs the request handler with the call back function.
Sets the data for the given object key.
Creates a complete multipart upload request.
Responds to the Favorite notices action.
Update the state of an entry.
Checks if the timeout has expired.
Get a notification by id.
GETs all addressees of a user
Get a specific addressee by id
GET / notifications by notification id
Get an event by id.
Gets the rest of the notification.
Gets the entry.
Get the authentication token.
Size of notifications.
Adds the new categories if the new categories is null
Get the person id for the request.
Create a response notification with an error.
Convert notification response entity to notification response map.
Create a notification entry from the database.
Attach the actions to the notification entry.
Normalize link.
Gets the notification category from the request.
get notification source from request
Handles a notification request.
Read a notification from a file.
Get the school id from the request
Extract the user id from the response.
Invokes the action.
Get notification attributes as a map.
Normalizes the vector p.
Checks if two boxes are contained.
Adjusts the distance to the closest point.
Returns the sign of this vector.
Sets this to a copy of the passed in se.
Sets the value of this transformation to the specified rotation matrix.
Convert a 3D point to another 3D point.
Convert a quadrilateral to a quadrilateral
Computes the bounding rectangle of a quadrilateral.
Calculates the bounding rectangle of a polygon
Computes the center of a quadrilateral
Computes the average value of a vertex.
Calculates the convex hull of a list of points.
Removes polygons that are almost parallel to the given tolerance.
Calculates the error of the closest point on a line.
Computes the area of the triangle formed by the two points.
Checks if a point is inside a quadrilateral.
Checks if a triangle contains a given point.
Intersect two lines
Intersect two lines
Computes the intersection of two lines.
Intersection of two lines
Computes the intersection of two points.
Checks if a point is contained within a rotated ellipse.
Computes the area of the intersection of two rectangles.
Gets the nth value from the matrix.
Convert a matrix to a quaternion.
Rotate a rectangle by an angle.
Sets the value of the rotation matrix to the x value.
Rotate the vector by the y axis.
Rotate a 3x3 matrix by the z component.
Sets the z component of a rotation matrix.
Rotates a 3x3 matrix of the specified type.
Rotates a rectangle about an axis.
Sets the angle of the slope.
Creates a twist from the given motion.
Sets the transformations of the rotation.
Interpolates the se3 based on the given where value
Computes the SVD of a list of points.
Solves the plane of a point.
Returns the length of the side at the given index.
Checks if a point is inside another point.
Convert a general f64 to a d r.
Convert a general f64 to another.
Convert a conic to a parabola.
Convert a parabola general f64 to another conic.
Divides a vector by a scalar.
Converts a row vector to a row vector.
To tuple 3.
Sets the vector of rotation and translation.
Distance between two points.
Returns true if the two lines intersect.
Checks if the given plane is contained in the given plane.
Replies if two spheres are intersecting.
Interpolates two images.
Extracts the quaternion from the q matrix.
Processes the convex hull.
Sets the value of the motion to no motion
Converts a se3 f64 to homogeneous.
Converts a rotation matrix to homogeneous coordinates.
Computes the 3 - dimensional Perlin rotation about the given axis.
Checks to see if two se3 matrices are identical.
Convert a Lat Lon to a unit vector.
Draws a circle.
Square radius of circle
Gets the point on the 3 - dimensional plane closest to a given point.
Finds the point on a line that is closest to a point.
Finds the closest point on a plane to a given point.
Finds the point on a line that is closest to a point.
Finds the point on a triangle with the given point.
Transforms a Se2f64 object into a d.
Transforms a se.
Checks to see if this quadrilateral is the same as the given quadrilateral
Returns the acute angle between two vectors.
Convert the source d to the destination d.
Convert a d to another d.
Convert the source d to the target d.
Convert the two values into an object.
Convert two vectors to a scalar.
Convert two points.
Convert a d from src to ret
Convert a d to another.
Convert the source d to the target d.
Convert a 2D d value to another
Convert a d object to another
Convert a se3 f64 plane to a world
Point2 dto3.
Convert a se3 f64 plane to a world.
Returns true if t is identical to this t within the tolerance.
Returns a copy of this vector.
Computes the square root of the vector
Computes the t - coordinate of a point on a line.
Returns true if the matrix has uncountable elements.
Is this parabola equivalent to the given one?
Computes the center of this vector.
Returns the acute angle between two lines.
Determinism of a point p if it is infinite.
Returns a list of random points with the given center.
Extend h to e.
Subtraction of two vectors
Checks if two points have the same sign within a tolerance.
Sets this rectangle to be equal to the supplied rectangle.
Converts a rotated ellipse to a quadratic f64.
Computes the point of a rotated ellipse.
Computes the angle of a point p given the rotated ellipse ellipse.
Computes the tangent of a rotated ellipse.
Select the tangent of the line which is closest to the given ellipse.
Gets the corner.
Computes the Euclidean distance between two points.
Distance between two points.
Distance between two points.
Replies the distance between a point and a plane.
Returns the distance from a point to a cylinder.
Distance between two segments.
Returns the Euclidean distance squared of two segments.
Distance between a point and a quadrilateral.
Returns the square of the distance between the given quadrilateral and point p.
Distance between two points.
Square distance between a point and a polygon.
Computes the distance from the origin to the line.
Computes the Euclidean distance of a point p to an ellipse.
Returns the distance from the specified ellipse to the specified point p.
Add a new node to the path.
Finds the point on a line that is closest to a point.
Finds the point on the curve closest to a point.
Processes the polynomial using the GBM algorithm.
Creates a random point with the given minimum and maximum.
Computes the perpendicular canonical version of d a.
Checks if two points are identical within a given tolerance.
Normalizes a vector.
Create a matrix from a vector.
Convert a matrix to a vector.
Returns the Euclidean distance between the specified two points.
Sets the ellipse of the rotation.
Normalizes this quaternion.
Computes the magnitude of the triangle formed by the three points.
Computes the triangle formed by the quadrilateral.
Calculates the simple determinant of a polygon
Computes the mean of an array of points.
Returns the order of points in CCW order.
Computes the normal of a set of points with a mean and a covariance matrix.
Checks if a polygon is convex.
Multiplies each element of this vector by a scalar
Returns the maximum absolute value of this vector.
Distance between two points.
Returns the square of the Euclidean distance between two points.
Generate a list of random points in the plane.
Creates a list of random points with the given mean.
Generate num random points with the given mean.
Calculates the mean value of the list of points.
Calculates the mean value of a list of points.
Invalidates all the given credentials from the cache.
Invalidate all the jwts in the cache that match the given predicate.
Combines a collection of strings to a set.
Get features.
Attempt to locate the dropins features in the specified folder.
Canonicalize the server file.
Parse include node.
Parse feature manager node.
Download jsons.
get liberty features from json files
Installed features are only open liberty features
Checks if target collection contains all string in reference ignoring case.
Returns the next product version from the given version string.
Extracts a symbolic name from a JAR file.
Gets the install map based install kernel jar.
Compare two jar files to determine if they are the same.
Extract the version from the given file name.
Compares two version strings.
Returns the product information for the specified install directory.
Checks if an artifact is a spring boot uber jar.
get arquillian property i.
Is working in this environment?
Moves the tortoise clockwise to the center.
Checks if two possibly null objects are equal.
Loads an integer from a string.
Throw pizza party.
Verify the turtle image.
Swaps the blank cells of the given target cell with the blank cells of this puzzle.
Get the distance to the goal.
Printf to standard output.
Prints a formatted string to standard output using the specified format string and arguments and flushes the
Generate a random number of fish.
Prints a variable to System. out.
Returns a random integer uniformly in [ a b ).
Returns a random double uniformly in [ a b ).
Throws an illegal argument exception if lambda is not a power of 2.
Checks to see if the array is discrete.
Capitalize first letter.
Capitalize first letter.
Appends the given string to the given path if it does not already end with the given string
Convert a join criteria to a string.
get token sentence.
Processes the incoming request.
Extract the auth token from a list of cookies.
Find all guice bindings in the injector and register them.
Recursively gets all permissions of a role.
Add a projection with an alias
Convert a job info to a job detail.
Convert trigger info to trigger object
Sets the repeat count and interval values.
Sets the start and end time of the trigger.
Add mail to queue.
Writes the output to the given stream.
Initializes the scheduler.
Gets all the fields of the given class sorted by their natural order.
Returns a map of all fields of the given class.
Configure the encryptor with the given configuration.
Generate attributes hash.
Generate token string.
Sends a message.
while ( true )
Get user by username.
Hashes a password.
Verifies the strength of the given account name.
Indicate that the hibernate transaction was successful.
Rollbacks the hibernate transaction if it is still active.
Starts the transaction.
Authorizes the request to access the requested resource.
Parses the given object to a date.
Builds the response.
Create a restriction that tests if the given object is equal to the given value.
Create a restriction that tests if the given object is not equal to the given value.
Apply a less than constraint to an object.
Create a restriction that tests if the given object is less than the given value.
Create a restriction that tests if the given value is greater than the given value.
Create a restriction that tests if the given object is greater than the given value.
Create a restriction that tests if an object is an ilike.
Create a restriction that will check if the given value is in the list of values.
Creates a new namespace manager with the given namespace and href.
Return a resource representation with the given content.
Return a new representation with the given relation.
Returns a new resource representation with the given value.
Create a new representation with a different namespace.
Decodes a byte array and checks if it can decode the given bytes.
Base64 encodes a string to a byte array.
Compares two Readers for equality.
Copy a file to a destination.
Create a new file with the last modified time of the given files.
Gets the base name of a file.
Add padding to the current block.
Gets the short name of the given class.
Get all super types of the given class.
Verifies a password.
Reads a string from the system input.
Append a byte to the buffer.
Appends bytes to the buffer.
Creates a deep copy of the given array.
Add another fraction to this fraction.
Subtraction from another fraction.
Multiply this fraction by another fraction.
Returns the result of this fraction divided by the given fraction.
Finds and returns the maximum value in the specified array.
Get the smallest of the specified values.
Checks a condition throwing an illegal argument if the condition is not met.
Use this method to fetch weather data for a given location.
Queries the meteo service for the given location and local date.
Queries the meteo service for the given parameters.
Finds the best forecast for the given number of hours ahead of the current date.
Find the nearest forecast for a given date.
Use this method to fetch weather data for a forecast.
Creates a forecast with the given number of days.
Create long term forecast.
Creates a location from a string of coordinates.
Requests the content of the resource.
Create a wind symbol name from the given forecast
Find the beaufort level for the given forecast
Creates a new uri from the given string.
Determines if the specified time is sunrise or sunset.
Returns the forecast for the given date time.
Get the best fit period forecast for the given time range.
Use this method to fetch weather data for a specific location.
Use this method to fetch weather data for a specific location in a specific language.
Update the database.
Invokes a method on the given object.
Acquires an object from the given source.
Gets a referenced object.
Gets the wrapped object.
Get a configuration from the service.
get is substitutor enabled.
Create an iterator for the given service and service name.
return decoder ; }
Get all services of a given interface.
Get module object.
Acquires an input stream from the given source.
Returns the size of the data in the given source.
Wraps the given data with the given reference.
Gets the component at the given index.
Returns the name starting at the given index.
Returns true if the type is colored.
Matches the given regular expression against the given character sequence.
C findloop loop.
Subset a subexpression.
CBR dissect.
Clones all outgoing edges from old to to to.
Recursive depth - first search.
Recursive marking of a subtree.
Optimize a subre of a node.
Parses the given string as a subre.
Recursive deltraverse.
Generate a nonword colored gradient.
word.
Scans a number.
Match a bracket.
Scan plain text.
return pos ;
Processes a single character.
Performs a vector of characters.
Get the color for a given color
Generate a pseudocolor.
Processes subranges of the current color.
okcolors.
Color chain a.
Uncolorchain a.
Dump all the color descriptors.
Lex the beginning of the string.
Interpolates the given string with the given interpolated string.
Get the color for the given codepoint.
}
Find the last cold state.
Returns a set of unicode classes for the given character.
Returns the unicode code of the given cclass.
Sorts the arcs according to the Carcsort algorithm.
create a new state with the given flag
Moves all outs from old to new state.
Moves all arcs from old to new state.
Copies all ins from old to new.
Copy the outs from old to new state.
Drop a state.
Free a state.
cparc.
Recursive depth - first traversal of a state.
Sets the pseudocolors of the current node.
Dump the state of this NFA to the log.
Dump a state.
Recursive arc - dumping routine.
Recursive arc dumper.
Performs the optimization.
Performs the actual analysis.
combine two arcs
Reduces the number of unreachable states.
Recursively mark all reachable states of state s as reached by okay.
Traverses the inchain of s and marks all reachable states as okay.
Reduces the number of empty chains in the shortest path from the current freestate to the
Return true if the arc is empty.
Gets the rule parameters.
Gets the rule interpreter plugins.
Gets the report plugins.
Gets the rule selection.
Runs the command line tool.
Gets the error message.
Add standard options.
Gathers tasks and options from a task factory.
Gathers the task names.
Interprets the command line.
Gets the command line.
Executes the given task.
Reads properties from the command line.
Prints usage information.
Get the home directory.
Create plugin class loader.
Get the ids of all cells containing the given coordinates.
Get the ids of all cells intersecting the given bounds.
Set the uri for the given target.
Add a route to the router.
Returns the number of routes in this itinerary.
Add a route to the first method of the router
Add a route to this router.
Add a route to the last matched route.
Returns true if at least one of the matched routes matches the request path tokens.
Returns a criterion that matches when the given property is equal to the given value.
Gets the store file name.
Compare folders.
Compares two entries.
Compare bookmarks.
Set the last modified time of this servlet class.
Returns the names of all the dependants of this servlet.
Lookup a class by name.
Parse the authorization header.
Get an instance of the mapper.
Maps a function to a method.
Get the mapper for a function.
Lookup a method in the function map.
Sets the values in this instance from the given array.
Resolve a variable.
Parse a report from a file.
parse a report from a file
Parse a tag file and return a node. nodes object containing the parsed page
Create a new compiler.
Get a resource as a stream
Calcualte the last modification timestamp of all channels.
Find all class loaders.
Checks if this class loader is the same as the given class loader.
Attempt to start loading the given name.
Read stream header.
Paginates through a full data set.
Produce a meta key from a string.
Fills the requirements.
Get the tag file for the given name.
Parse an implicit tld.
Get the checksum for the given file name and algorithm.
Returns the size of the given file.
Validate channel name.
Seeks to the specified block number.
Locate a block by its uncompressed position.
Gets a list of maven artifacts.
Update opt state and reps.
calculate 1 byte prices
Calculating prices for reps.
Calculating match prices.
Throw an exception for an expected byte.
throws an exception for invalid byte
Scan the template tlds to find template tlds.
Scan for a tld.
Add a wrapper.
Gets the parent class loader.
Sets the bytecode for the given name.
Returns the bytecode birth time for the given name.
Saves the bytecode for the given class name.
check compile.
Initialize the class path.
Start the background thread.
Stops the thread.
) ;
Find by name.
Find a channel.
Update the deploy group cache.
Copy the contents of the given stream to the given output stream.
Create a new node.
Parse the attributes of the given jsp reader.
Add an include to the node
return result ; }
Add an attribute to this element.
Add a child node
Returns an iterator over the attributes.
Returns an iterator over the children of this node.
Returns all children with the given name.
Convert to a base maven coordinates.
Finds the alias for the given variable.
Sets the thread.
Unsets the thread.
Find the wrapped stream.
Writes an optional value to the writer.
Writes a string to a writer.
Create and append a new element to a parent element.
Create a new element and insert it before the given parent.
Writes the contents of the buffer to the given writer if the buffer is not null.
Sets the writer.
Reallocate the buffer to hold len characters.
Create a new map and visit it.
Returns the state that has the same key as the given parent.
Registers a new model.
Stream a value from the store.
Monitor a job.
Check if the request is authenticated.
Finish the writing of the XML file.
Make a new Gson instance.
) ;
Returns the union of provided meta data and extracted meta data.
Get the throwable from the request.
Check sum of coordinates.
Finish uncompressed data.
return t ; }
Evaluates an expression.
Get the prefix from the OSGi properties.
Checks if the given path is an XML file.
Parse the tag file directives.
Load a jsp file.
Remove all generated class files of the given name.
Set the URI root.
Scan files.
Find the root directory of a file.
Moves the current position to the next available position.
Checks if the next character in the stream matches the string.
Match a string with optional spaces followed by the given string.
skip until a character in limit is found.
skip until ignore esc.
Skip until the end of the string. Return null if there are no more tags.
Parse a single token.
Pop the file off the stack.
Make this coordinates unclassified.
Filters a list of aspect information by its factory id.
Get missing factory ids.
Set the schema resource prefix.
Set the dtd resource prefix.
Convert the given node to a tree node.
Merges the errors of the binding result with the errors of the binding result.
Binds all annotated methods in the given binder.
region > scan aspect informations
Unqualifies a path.
Invokes a custom tag handler.
Get a byte array from the cache.
Get an array from the cache or create it if it doesn t exist.
Create a aether result.
Get resource as stream.
Validates the given data against the tag library.
Pushes a new stream into the stack.
Get the encoding of a file.
Print a fatal error to the error log
Get the real path of a resource.
Get a resource from the classpath.
Get resource as stream.
Get the resource paths for a given path.
Logs a message with an exception.
Add a filter.
Get the size of the buffer.
return 0 ; }
Set preset dict.
Moves the cursor to the next window.
Fill the buffer with data from the given byte array starting at the given offset.
Processes pending bytes.
Get a match by distance and limit.
Get the number of bytes that match the given distance and limit.
Matches this buffer against the specified array of matches.
Moves the current position in the buffer to a new location.
Recycle the output stream.
Flush the current buffer to the underlying stream.
Clears the buffer.
Flushes the output stream.
Closes the response.
Writes a string to the underlying stream.
Thrown when an error occurs in the template.
Make a key from a map of meta data.
Generate the class.
Compile the report.
Initialize the java compiler if the number of compilers is greater than or equal to the number of
Check if system jar is in web. inf.
Quote the given character.
Generate a page directive or a declaration.
Generate a tag handler pool for the given node.
Generate XML prolog.
Generate common postamble.
Generate the postamble.
Generate the report.
Generate tag handler attributes if tag has dynamic attributes.
Reads properties from the given stream.
Exports a channel.
Validate the xml view.
get a handler from the stack.
Parse an EL expression.
return curr ; } return prev ; }
Checks if the given URI is a jsp page
Prints a comment to the underlying stream. One character per line.
Prints a string to the underlying writer.
Print a string in the current line.
Print multiline string
Get the expression in XML.
Check if the given scope is not equal to the given string.
Escapes a string for use in an XML document.
Validate a set of expressions
Get the tag handler class name.
Create a legal class name from the given path.
Splits the given path by the given pattern.
Make a java identifier from the given string.
Mangles a character.
Checks if the given string is a java keyword.
Helper method to add a property to the map.
Convert a modifier to a string.
Convert a metadata map to a sorted set.
Runs the update.
Get the basename of the given name.
Puts a value in the cache.
Loads metadata from the database.
Build a collection of metrics from the given payload.
Resolves a number.
Writes the object to the output stream.
Gets the ttl.
}
Log delayed metrics for a tenant.
Log delayed aggregated metrics.
Reads a double or long.
Puts a double or long value to the given output stream as a varint.
Gets all properties.
Creates a new container.
Randomly shuffles the list of managed shards and schedules eligible slots.
Clears the running slots for the given key.
Add a listener to the specified event.
Register a callback to be called once for a given event.
Remove a previously added event.
Emits the given event with the given arguments.
Returns the listeners for the given event.
Get the name of this instance.
Appends a rollup event to the output.
Parses a timestamp from the given file name.
Starts the HTTP server.
Convert a computer type to a rollup type.
Get io instance from configuration.
Add a TTL entry to the builder.
Computes the maximum lengths of the headers and outputs.
Formats an array of headers.
Formats an array of output formatters.
Gauges for the given object name.
builder method for the thread pool builder
Add the given index to the set.
Gets the complete metric names.
Gets the tokens.
Asynchornously put a value into the cache.
Computes the granularity from the requested duration and points. If the requested duration is
Set the server time.
Get unique hosts.
Get the maximum number of connections per host.
Returns an iterator over the metric column families.
Inserts a collection of metrics into the store.
Inserts a collection of metrics.
Gets the locators.
Gets the regex to use for the given query.
Starts the upload.
Stops the uploader thread.
Checks if a locator is currently in a batch layer.
Checks if a locator is currently in the discovery layer.
Checks if a locator is currently in the token discovery layer.
Returns true if the locator for the given slot has been inserted into the cache.
Set the delayed locator for a given slot.
Returns a map from finer ranges to iterable of ranges.
Returns an iterable over the ranges for the given granularity.
Insert a full set of metrics.
Inserts the given metrics into the given column family.
Checks if the given metric should be delayed due to the current time.
Gets the bound statement for the given metric.
Get metrics metadata values.
Checks if the content type is valid.
Checks if the accept header is valid.
Insert discovery results into elasticsearch.
Checks that the number of elements in this array is valid.
Do the check.
Get a new extractor instance.
Gets the os.
Starts the process.
Shutdown the running process.
Creates a new instance of the default parameters.
Add ice servers.
Add ice servers.
Send a message to a user
Sends a message to all peers.
Gets the value of the weitere adresse property.
Gets the value of the userDefinedSimplefield property.
Gets the value of the user defined anyfield property.
Set the value of suchfelder.
Gets the value of the multimedia anhang property.
get VBM status.
get status i.
get status.
Liefert den Importmodus.
Getter for the adressdruck property.
Liefert den waehrungen typ.
gets the bodenbelag typ.
Sets the region.
Sets the area.
Sets the address.
Sets the description.
Sets the rent collection period.
Sets the value of the furnished property.
Sets the phone1.
Sets the phone2.
Sets the contact name.
Set the phone info.
Sets the main email address.
Sets the cc address.
Sets the external id.
Sets the agent id.
Sets the value of the epart.
Sets the value of thejahrgang property.
Permite obtenir la propriete gebaeudeart.
Permite obtenir la buero.
Checks if a string is numeric according to a locale.
Setzt die gebiet. gebiete.
Sets the value of the gruppe.
Sets the agent.
Gets the value of the property property property.
Sets the stand value.
Gets the value of the userDefinedExtend property.
zuiteinheit.
Gets the value of the zimmer property.
Gets the value of the haus property.
Gets the value of the buero praxen property.
Gets the value of the gastgewerbe property.
Gets the value of the land und forstwirtschaft property.
Gets the value of the sonstige property.
Gets the value of the zinshaus renditeobjekt property.
Gets the value of the terrain property.
Sets the value of the umfang property.
setter for wohnungtyp.
Returns the country code for the given country.
Returns the country code for the given iso3 code.
Returns the country code for the given country.
Returns the country code for the given iso2 code.
Gets the country name.
Translates a country name.
Gets the value of the anbieter property.
Sets the value of the category property.
Gets the value of the pdf property.
Sets the value of the aktionart property.
setter for realestateitems property
Set the pacht.
Upgrade document to new version
Gets the value of the content property.
Get field names.
Sets the blick value.
Permite obtenir la propriete pauschalmiete
Permite obtenir la monatsmiete devuelve un valor
Gets the parkplatz.
Permite obtenir la optional lastenaufzug.
Sets the value of the art property.
Gets the value of the feld property.
Dumps the contents of this table to the given writer.
Returns the value at the given position or the default value if the value is null.
Print the contents of the matrix.
Set the value at the given position.
set the value ctype
Sets the value of the haustyp property.
Gets the value of the energiepass property.
Sets the value of the keller.
Set the grundst type.
Set the geschlecht attr.
setter for hallen typ
Liefert den Wert in den Wert.
Liefert den Wert der teilungsversteigerung.
Upgrade a document to a new version
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art.
Sets the value of the modus.
Gets the value of the email sonstige property.
Gets the value of the sonstige property.
Sets the handel typ.
Sets the value of the suchfeld1 property.
Sets the value of the suchfeld2 property.
Sets the value of the suchfeld3 property.
Gets the value of the row property.
Sets the value of the sport property.
Gets the value of the anhang property.
Gets the kategorie2.
Gets the value of the objektzustand property.
Gets the haus kategorie.
gesetzungsqualitaet
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Sets the wert.
Sets the ackerland.
Sets the bauerwartungsland.
Sets the bootsstaende.
Permits to set the buero value.
Sets the camping.
Set the doppelhaus.
Sets the value of the einfamilienhaus property.
Sets the value of the gross property.
klein.
Sets the garagen.
Sets the garten.
Sets the gastronomie.
Setzt die gewerbe.
Sets the hotel.
Sets the industrie.
Permite obtenir los valores de la excepcion de la
kleingewerbe.
Sets the lager.
Sets the value of the mehrfamilienhaus property.
Sets the value of the obstpflanzung.
Sets the parkhaus.
Sets the produktion.
Sets the reihenhaus.
Sets the value of the stellplaetze.
Sets the villa.
Sets the wald.
typ. anbieter.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the value of the hallen lager prod property.
Gets the value of the parken property.
Gets the value of the freizeitimmobilie property.
Gets the value of the objektart zusatz property.
Gets the value of the stellplatzart property.
Sets the max dauer.
Gets the value of the feature property.
Sets the zimmertyp.
Upgrade a document to a new version.
Permite obtenir la propriete angabe.
Sets the value of the erdwaerme.
Sets the value of the solarheizung.
Permite obtenir la propriete pelletheizung.
Sets the gas.
Sets the value of the oel.
Sets the fernwaerme.
Sets the strom.
Sets the kohle.
Generates a random string of the specified length.
Returns a random string of letters of the given length
Returns a random string of the specified length that is limited to the specified numbers.
Gets the wohnung kategorien.
Sets the benutzer value.
Sets the value of objekte.
Gets the value of the feed property.
Sets the moeb.
Gets the value of the serviceleistungen property.
Sets the sub administrative area.
Sets the city.
Sets the locality value.
Downgrade a document to the previous version.
Upgrade a document to a new version
Sets the land typ.
Gets the value of the field property.
Upgrade document to new version
Gets the value of the ad property.
Set the gastgew typ.
Sets the value of the platzart.
Liefert den zugebenen Daten.
Liefert den klimaanlage.
Gets the value of the image property.
Sets the value of the price type property.
Sets the new development availability.
Sets the directions.
Sets the co2 rating.
Sets the energy rating.
Sets the value of the viewing details.
Sets the value of the property status.
Sets the value of the pictures property.
Sets the bebaubar attr.
Upgrade document to new version.
Set the type of the parken.
Set alter attribute.
Set the freizeit typ.
Sets the value of the telefonart.
Permite obtenir la emailart escriber y genera una nueva
Sets the value of the overseas sales.
Sets the international rental.
Create a new simplefield node in a document.
Gets the value of the fehler property.
Sets the value of the erbpacht.
Gets the value of the sonstige property.
Gets the value of the valuelist property.
Sets the min dauer.
Setzins typ.
Gets the value of the photo property.
Sets the feed metadata.
Sets the value of projects property.
Sets the feed properties.
Upgrades a kyero document to the latest version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the sonstige typ.
Sets the value of the distanz.
Gets the value of the distanzen property.
Gets the value of the distanzen sport property.
Checks if the given throwable is compatible with the given exceptions.
Binds the given bindings.
Binds prefix to namespace uri.
Remove a binding.
Checks if the content contains an opening tag.
Consumes a line of text that starts with a comment.
Consumes a line of text.
Returns the index of the first occurrence of the specified token in the line or - num of the
Initialize logging.
StartElement a prefix - URI mapping.
Adds an iterator to the set.
Add an option to this command line.
Add a new option with a short form and a long form.
Add an option that has an integer value.
Add a long option to the list.
Add a double - valued option.
Adds a boolean option.
Parses the given command - line argument.
Returns a new instance of the given class.
Decrement the concurrency count.
Sets the target object.
Prepares this instance for execution.
Finds a matching method.
Convert an unsigned integer to a string.
Serialize an object to a byte array.
Deserialize an object from a byte array.
Get the first child element with the given tag name.
Get the value of the first child element with the given tag name. If no child element with
Returns all child elements of the given element.
Returns true if the node name matches the desired name.
Returns true if the node name matches the desired names.
Set the length of a string.
Monitors the release of an object.
adds an entry to the monitor.
Checks if the monitoring thread is alive.
calc mobile city by mobile number
Starts a prefix mapping.
Ends a prefix mapping.
Adds the given callback to the list of callbacks.
Parse the JAR file into a tree.
Returns the color of the specified item.
Sets the values of the preference.
Get the color for a specific position.
Set text size.
Get in bounds x.
Gets the intro.
Returns a list of keyword names.
Returns the arguments for the given keyword.
Returns the documentation for the given keyword.
Entry point for the remote server.
Stops the server.
Starts the server.
Convert properties from a file to a JSON string.
Convert properties from a file to a JSON string.
Convert input stream to JSON string.
Convert properties to json string.
Convert map to json string.
Convert from values as object map.
Convert from values as object map.
Convert properties to json string.
Get the radius of the shadow
Creates a builder for an OCSP fetcher.
Gets the intermediate certificate from the certificate.
Executes the mojo.
Preprocess markdown files.
Substitute variables in the template string.
Get the title from a list of strings.
Add the title to the html string.
Replace the variables in the initial string with the values from the map.
Update the relative paths in the HTML.
Copy files from one directory to another.
Checks if the given path contains the given string.
Slider content.
Fades this image up by the specified duration
Fades this image down with the specified duration.
Calculates the percentage.
Overlap views.
Builds an intent to launch an activity from the given class.
Launches the current activity.
Returns a list of fact sheets.
Download file from response
Build http client.
Create an access control entity response.
Submits a new data model.
Create a new export job.
Set the host of the token provider.
Sets the client id and client secret.
Process graph ql.
Get a list of bookmarks.
Adds the given permissions to the given graph.
Writes the permissions for a given graph name.
Specifies the rulesets for the logic dataset graph.
Closes the connection.
executes a select query
Create dataset graph.
Limit the number of threads.
Resize the geometry.
Rotates the image by the specified degrees with an annotation.
Sets the gravity of the geometry.
Run the command with profiles removed.
Sets the font and fill the circle with the given color.
Create a source gmt from a file.
Add an image to the image manager.
Parses the given arguments into the given target object.
Prints usage information for the given object.
Extract time unit from string.
Parses the given target object with the given properties.
Execute the slides from the given URL.
Execute a file as a slide.
Interprets a PPtx file.
Sort by size list.
Render the given template with the given text.
Get slide XML file.
Checks if the event is in the range of the current screen region.
Selector that will overlap vertically with the given slide element.
Execute outbound operation.
Sends a message to SQS.
Finds a file by its name.
Gets or creates a temporary directory.
Create a new log value map.
Logs a message with trace log level.
Logs a message with trace log level.
Logs a message with debug log level.
Logs a message with debug log level.
Logs a message with log level info.
Log a message with info log level.
Emit an informational message.
Logs a warning message.
Logs a message with warning log level.
Logs a message with error log level.
Logs a message with error log level.
Add to context line and method.
Generates a steno wrapper for an event.
Writes a list of key value pairs.
Serialize throwable.
Returns the value to log.
Get the caller data.
Create a database in the temporary folder.
Check if there is a mapping for the given position.
Parse save attribute string.
save data to object in context.
Refresh the row from the context.
Parse save attr string.
Gets the save attribute list from a row.
Get attribute from list.
Set the value of a hidden column.
Set attributes for a sheet.
Sets the save attributes for a given row.
Prepare the context and attributes for a cell.
Format number.
Put shift attributes.
Set the wrapped workbook
The wrapper of the wrapped xssf.
Gets the formula evaluator.
Re calc max col counts.
Sheet from input stream.
Loads a web sheet.
Load a work sheet by tab name.
Do export.
Saves the sheet
do submit.
Populate component.
Gets the current sheet configuration.
Read an object from an input stream.
Get the locale for the given component.
get picture.
Gets the cell helper.
Gets the helper.
Gets the validation handler.
Gets the chart helper.
Convert a set of shared formulas to a set of ptgs.
Converts a ptg array to a ptg array.
Convert ptg for watch list.
Create a ptg array from a ptg object.
Gets a list of rows from a mapping list.
Helper method to assemble rows list from mapping.
Builds a row for a ptg base.
Returns the automatic fill color for the plot.
Gets the color from a color table.
Find automatic fill color.
Get x.
Returns the x value of the given color.
Get the x value for the given index using the given theme.
Convert an xssf color to a color.
Get triplet from xssf color.
Get the bg color from a cell.
Finds the component name from the class.
Populate the attributes of the given component.
Matching of attributes type.
Sets a property on an object.
Gets the value of a property from an object.
Setup the control attributes of a cell.
Find cell validate attributes.
Setup the faces cell picture and charts.
Sets the charts of a faces cell.
Set the picture of a faces cell.
Init charts map.
Gets the pie title.
Set the style of a series.
create pie3 d.
Setup the bar style.
Initialize the xssf drawing.
Gets the chart id from its parent.
Init the anchors map.
Generate a single xssf chart.
Transform to collection object.
Get full name from row.
Rebuild upper level formula from build ref.
Sets up the upper level formula.
Build cell formula for shifted rows.
gather rows mapping by full name
Change index number in shift map.
Change the length of the given full name in the given map.
Change the name of a hidden column.
Set full name in hidden column.
Gets original row number in hidden column.
Set original row number in hidden column.
Find parent rows mapping.
Find child rows mapping.
Finds an item in a collection.
Builds a new range with the given source range and insert position.
Checks if the given row index is in the given range.
Checks if a row is a reference to another row.
Finds the first non cell name in the given sheet and replaces it with the cell value
Get the cell range index of each merged region.
Returns the list of skipped cells in the given sheet.
Add the skip cell to the list.
Build a sheet comment from a list of alias.
Builds the cell comment from the alias.
Builds the configuration map.
Gets the sheet configuration.
Builds the form command from the given sheet configuration.
Verifies that the cell at the given stoppoint is the last cell in the sheet.
Build a sheet.
Repair last row.
Build command list from sheet comment.
Find and set parent for child command.
Checks if the given list has at least one command.
Match a command to a list of sheets.
Copies template for tie.
Build the command list.
Process method line.
Process a single command line.
Move comment to map.
Creates a new command instance.
Build attribute map.
Gets the sheet configuration from the command.
Sets the footer of the configuration sheet.
Sets the body of the sheet configuration.
Sets the header of the configuration sheet.
Delete a row.
remove ranges from shift map.
Finds the list of full names from the given sheet.
Gets the each command.
Insert empty object in context.
Delete object in context.
Prepare collection data in context.
Indexes a command range.
Checks if is row allow add.
Insert template.
Evaluate tie cell.
Evaluates a user - specified formula.
Checks if the given string is a user formula.
Create cell comment.
Evaluates an expression.
Remove the specified range of rows from the specified sheet.
Remove a single row in a sheet.
Remove a cell from a row.
Remove the specified number of rows from the body.
get picture view id
get chart view id.
Assemble the new value.
Get cell value with format.
Get cell string value without format.
Get cell string value with type.
Get cell string value with numeric type.
Sets the value of a cell.
Sets the string value of a cell.
Sets the boolean value of a cell.
Sets the value of a date cell.
Sets the value of a number cell.
Copies the specified range of rows from src sheet to dest sheet.
Copy a single row from one sheet to another.
Copy a cell to another sheet.
Copies a value from one cell to another.
Copies cell style.
Clones a cell comment.
Creates an anchor for a comment.
Creates or inserts a comment to the given cell.
Match the comment settings from the source cell to the target cell
Get the vml drawing from a cell.
get cell shape from vml.
get cell style from source cell.
Convert a single cell.
Gets the row and col from the component attributes.
Gets the initial rows from the configuration.
Gets the faces row from the body row.
Gets the faces cell from the body row.
Get a cell from a sheet.
Get the key from a POI cell.
Get or add tie cell.
Returns the current data context name.
Evaluates the expression with the given context.
Evaluate the expression with the given context.
Writes an object to the given output stream.
Remove a row from the matrix.
Merges the given mapping into this mapping.
Recovers all the rows in the sheet.
Gets the chart type.
Convert a string to a stroke.
Create chart data from xssf.
Populate chart data.
Initialize the xssf.
Initialize the xssf sheet.
Gets the chart id associated with an anchor.
Get chart id from child node attributes.
Build each object.
Save data in context.
Recalculate all formulas.
Get a cell from a named tab.
Gets the faces cell from the current page.
Restore data context.
Get the last collection from the given name.
Checks if a restore is needed.
Attempt to restore the data context of the current sheet.
Shifts the specified row.
Set the first row of this cell.
Set a reference to a cell in the last row of this table.
Build cells for a row.
Build a single cell.
Reads the object from the given stream.
Builds the category list.
Builds the series list.
Build chart series in list.
Gets the color list.
Gets the d.
Sets the command index map.
Gets the pictrues map.
Get the pictures from an xssf.
Index a picture in a map.
Generate picture style.
Generate chart style.
Gets the pattern.
Render the chart.
Recovers this cell from the given sheet.
Get row style string.
Get cell font style.
Get cell font color.
Gets the cell font decoration.
Gets cell style.
Get column style.
Get the alignment from a cell.
Get the vertical alignment from a cell style.
Calculate the total height of a sheet.
Setup cell style.
Gets the input type from the cell.
Gets the resource paths for the given path.
Get the resource as an input stream.
Removes the prefix from the resource.
Evaluate type boolean.
Find bean by bean name.
Joins an array of shorts with a separator.
Rounds the given value to the given number of decimal places.
Gets the tab type.
Gets the tab style.
Gets the default date pattern.
Gets the decimal separator by default locale.
Returns the thousand separator by default.
Sets the tie command alias list.
Build the watch list.
Build the watch list for a cell.
Add a row to the watch list.
Checks if the given string starts with the command prefix.
Parse widget attributes.
Get attribute key in map by cell.
Parse validate attributes.
Finds the position of the tie in the string.
Parse command attributes.
Parse input attributes.
Parse validation attributes.
Split by eual sign.
Parse the special attributes.
Process calendar attributes.
Process select item attributes.
gather special attributes.
Parse comment to map.
Finds the position of the first non - cell name in a string.
Removes characters from a string.
Gets the name of the specified excel column.
Convert a column name to an integer.
Gets cell by reference.
Convert the specified height in pixels to the specified height in pixels.
Checks if a string is a valid date.
Parses a date string.
Checks if a string is numeric.
Checks if the given character should continue.
Sets a property on an object.
Compares two cells to determine their relative order.
Checks if a cell is contained within a range.
Deletes all hidden columns in the given sheet.
Delete the hidden columns in the given row.
Deletes a cell from a row.
Processes system event.
Update the cell with the new status.
validate with row col in current page
Validate by tie web sheet validation.
Check error message from object in context.
Validate all rules for a single cell.
Do validation.
Validates cell.
Validates the current page.
Validate row in current page.
Validate each row.
Reload the cached cells in the current page.
Reload cached cells in row.
Set submit mode in view.
Performs pre validation of the configuration.
Clear the cell data.
Load the header rows.
Load header row without configuration tab.
Fills the list with the maximum number of columns.
Gets column style.
Gets the width style.
Gets the column width.
Initialize the tabs.
load data.
Refresh the data for the given row.
Refresh data for cell.
Finds the index of the tab with the given name.
Loads a sheet into the current page.
Prepare work for a tab.
Set the first index of the page.
Sets the rendered flag and the origin row index.
Load body rows.
Refresh the cached formula cell.
Process refresh cell.
Create dynamic columns.
Add a repeat row.
Reassemble body rows in a range.
Sets the unsaved status.
Returns true if the current state is unsaved.
Finds the most common constructor of the given class.
Writes an input stream to an output stream using a buffers pool.
Writes a long to the writer.
Writes a string to a writer.
Set converted traffic stats tag.
Adds a bitmap to the result.
Add file descriptor.
Removes the parameter with the given name.
Add a header to the request.
Clears the content of this request.
Plays a stream.
Bind to the service.
Unbind the service.
Drops a streaming listener.
Stores the image to disk.
Convert an input stream to a string using a pool of buffers.
Convert an input stream to a string using the UTF - 8 encoding.
Sends the content of the response to the output stream.
Returns the number of bytes that can be read without blocking.
Closes this stream releasing any system resources associated with the stream.
Reads a single byte from this stream.
Resets the stream.
Send the start part of the multipart message.
Send the disposition header.
Send the content type header.
Send the transfer encoding header.
Send the end of the header.
Send the end of the string.
Sends the given parts to the given output boundary.
Gets the length of the parts.
URI is a redirect.
send not modified response
Sets the date header.
Set the date headers.
Sets the content type header.
Writes to the given channel and then closes it.
Send the disposition header.
Send data.
Installs the cache.
Creates the working directory if it does not exist.
Get a cache entry from the disk.
Creates a new input stream for the body.
Resets the image to the given size.
Gets the ssl context.
Validates a keystore.
Replace the current scale type.
Get a pending intent.
Disconnects the http connection.
Bind the service.
unbind service.
Notify about view changes.
open ( ) ;
On accept data.
On reset.
Wait for loader to finish.
Show or hide the given text view with the given visibility.
Hide soft input.
Show soft input.
Toggle soft input.
Get the width of a pixel based on density density.
Logs the exception.
clear cache for url.
Populate image.
Cancel image loading.
Factory method to create an image consumer.
Set result image.
Sets the loading image.
Starts a new image loader task.
Cache image.
Adds a buffer to the pool.
Adds the request properties to the url connection.
Add a simple parameter to the request.
workaround for gingerbread m
Computes the MD5 hash of the given text.
Cublas gemm algorithm tensor op for tensor n.
Returns a string representation of the given cublas status.
If the given result is different to cublas status success and exceptions have been enabled this method
If any errors occur this method will throw a cudaException with an error message that corresponds to
Adds the number of occurrences of the specified lexeme.
Adds the ending to the frequency table.
Returns the estimated value of the given wordform.
Prints a short description of this token.
Verifies and sets the kamols attribute.
Removes kamols markup from a string.
Performs a GET request against the specified endpoint.
Gets the query string.
Process a JSON node and return the metric data.
Parses a list of app infos from a json string.
Gets connection config.
Performs the request to SignalFx.
Creates a genericode reader for the code list.
Creates a genericode reader for a code list set.
Creates a reader for a GC04 column set.
Heapify the code list.
Creates a genericode reader for a code list set.
Garbage Collection reader.
Gets the id of a column.
Gets the value of a row.
Gets the column of the given id.
Gets all i.
Gets the key of the given id.
Checks if is key column.
Create a new column.
Create a new key.
Sets the number of lines to skip.
Add an excel read column.
Create a genericode writer.
Creates a genericode writer.
Creates a writer for a GC04 column set.
Create a genericode writer.
Create a genericode writer.
Creates a writer for a Gc10 column set.
Creates a genericode validator for a code list.
Creates a genericode validator for a code list set.
Creates a genericode validator for a column set document.
Creates a genericode validator for a code list.
Creates a genericode validator for a code list set.
Creates a genericode validator for a v10 column set.
send log to server
Sets the current context.
Get the current log level.
Submits a task to the thread pool to capture the result.
Sets the maximum size of the log store.
Prepend the metadata to the given message.
Appends additional metadata to the stack.
Create a json object from the given parameters.
Sets the user identity.
Gets the bytes from a file.
Check if we have permission to access fine location.
Allocate space in the table for a particular region.
MemoryUsage for a partitioned region.
Estimate the sizes of a local or replicated region.
Reads a snapshot record from the input stream.
Dumps this timing information to the given print writer.
Returns the time values since the given index.
Convert a file to a chart.
Gets the pool for a given server.
Gets the pool for the given jmx.
Checks if the given region exists on the given jmx.
Gets a mx object from a jmx object.
Returns a list of all host names for the given object names.
Lookup network host.
Checks if the given data is an error and sends an exception.
Executes the given function and returns the result of the function.
Flatten a collection.
Queries a collection of domains.
Created bridge for after entry.
build a bridge for after delete listener.
Handles an exception.
Get the on region filter key facts.
} } ; }
Returns a list of all host names for all objects in the JMX cluster.
Intercepts the execution of the function.
Get application name from resources
Configure security.
Get a region by name.
Get a region from the cache.
Performs a comparison between two checksum maps.
Checks if a given time stamp must be inserted at the given insert point.
Close the stream.
Dumps the contents of a directory to a cvs file.
Main method to run the reader.
Reconnect to the JMX server.
stop members of a host
Shutdown member.
shut down all members of a JMX cluster
Shutdown all members in a given redundancy zone
Stores pagination map.
Read results by page.
Imports the given region.
Checks if the remote locators match.
Executes the function with the given context.
Builds the check sum map.
Returns the value of the given column name.
Returns true if mirror is of integer type.
Serializes an object to a byte array.
Deserializes the given byte array to an object.
Create an instance of the given class.
table id.
Check for fields.
Checks if the given type is a direct super type of the given element.
brew java.
Emits get id.
Convert this query to an observable sequence.
Checks if the given column name exists in the object.
Returns the value of the string or the default if the string is blank.
Capitalizes the first letter of the given string.
Checks if the given type mirror is of the given type mirror.
Descending order of the query
Reads the current temperature from the device.
Returns the cursor method for the given type.
Shortcut for error messages.
Gets the icon fonts.
Get all icons.
Get the background decoration.
Raises a number to a given exponent.
Set this matrix from an array of values.
Calculate the power of a number.
Calculates the root of a given subtree.
Taylor exponent.
log of x.
Derivative of Newton s method
Returns the arctangent of x.
Derivative of the taylor function.
Returns the square root of x.
Print pi.
Convert a timestamp to a string.
Set the limits.
Put a float value.
Prints the stack to the console.
Add two complex numbers.
Subtracts z from this complex number.
Multiply this complex number by a complex number.
Divide this complex number by another complex number.
Sets this matrix equal to the contents of another matrix.
Returns a row of this matrix.
Get a column of this matrix.
Sets this matrix equal to the given matrix.
Transpose this matrix.
Add another matrix to this one.
Subtract a matrix from this matrix.
Multiply this matrix by a scalar.
Multiply this matrix by another matrix.
Print matrix to a stream.
Set the image to be displayed.
Validate the coefficients.
Computes the next position.
Clears the state of this instance.
Convert a styled layer descriptor to its XML representation.
Convert raw sld to styled layer descriptor.
Validates the descriptor.
Validates the given sld against this sld.
Returns the area of the specified rectangle.
Sets this matrix equal to that of the given matrix.
Set this matrix from a 2 - d array of values.
Inverse of this matrix.
Returns the determinant of this matrix.
Compute the L2 norm of this matrix.
Solves the linear system of equations A x = b for A
Print the decomposed matrix to the given print stream.
Perform forward elimination.
Perform forward substitution on a column vector.
Back substitution.
Given two vectors b and x improve by one.
Convert a square matrix to a matrix.
; } }
Iteration procedure.
Computes the next position.
Checks if current position is equal to the previous position.
Compute the next position.
Checks if the given interval is valid.
Add addend.
Multiply two polynomials.
Raises the power of a number.
Iteration procedure.
get sld manager.
to char bit array.
Decomposes the given character array into m n and bias.
Print this string to the specified print stream.
Validate the biased exponent.
Validates the unbiased exponent.
Validate the biased exponent.
Validate the unbiased exponent.
)
)
return 1 }
Generate a prime sieve.
Returns the prime factors of a prime number.
Iteration procedure.
Compute the next position.
Checks if current position is equal to the previous position.
Sets the JavaFX application.
Sets the configuration.
Sets the default configuration.
Initializes the given fxml loader with the given parameters.
Add a latitude and longitude to the request.
Get host port pair.
Gets the applicable attribute definition.
Evaluate the expression against the given attribute definitions.
Sanitizes a string so it can be used as a tag.
Sets the address of the geocode request.
Query for names.
Query for service instances by name.
Gets all collaborations to the logged in user.
Returns the meta data for a decimal as a string.
Change password for logged in user.
Gets all users.
Get gravatar data by email address.
Get gravatar for a user.
Populate json from elastic search
Returns the type of the field.
Creates a flow step.
Updates a flow step.
Gets flow step by id.
Gets a flow step.
Gets all steps by flow.
Deletes a flow step.
Deletes flow step.
Populate the form fields.
Attempt to close the connection.
Handles incoming messages.
Called by the connection when it is closed.
Get the list of messages from the return value
Get all personal inventory items.
Creates a new table record.
Deletes a form container.
Requests historical data of a form flow.
Gets form historic data.
Gets the most recent form and field historic data.
Submit a form for editing a job view. The form parameter is used to specify a container
Use this method to un - lock a form container.
Unlock a container.
Create a form map from the given parameters.
Convert a comma separated list of roles to an array of roles.
Creates a form definition.
Updates a form definition.
Gets a form definition by id.
Requests form definition by name.
Get all form by logged in user.
Deletes a form definition.
get storage key from string builder.
Create a new memcached client.
Shutdown the memcached client.
Safely parse a string to a long.
Converts a document to PDF.
Get form values from cache.
Creates a flow step rule.
Creates a new flow step rule.
Creates flow step rule.
Update flow step rule.
Update flow step rule.
Update flow step rule.
Moves flow step rule up.
Moves flow step entry rule down.
Deletes flow step rule.
Deletes a flow step rule.
Deletes flow step rule.
initialize the session
Gets all user queries.
Gets all roles.
Returns the service ticket converted to a hex string.
Creates new field. Masks given param value.
Creates new barcode field.
Creates new decimal spinner.
Creates a slider field.
Creates a field on a table.
Masked field update.
Update field barcode.
Creates decimal spinner.
Slider field update.
Updates field definition for a table.
Retrieves a field by its name.
Gets fields by form name and logged in user.
Gets fields by form type id and logged in user.
Deletes a field.
Deletes a field.
Gets the meta data for a field.
Updates user field.
Creates or gets an index.
Creates a flow.
Updates a flow.
Gets flow by id.
Gets flow by name.
Deletes a flow.
Deletes flow.
update field value
get all global field values.
id and title
Decrypt init packet.
Close and clean.
Create a new request and add it to the message handler.
Verbose exception message.
Creates a new admin user.
Request an access token.
get user profile info
execute json.
execute a form request
get json response handler.
.
get http client.
Gets the path to the fluid specific trust store.
Closes the current connection.
Get all fluid items for a given view.
Sends a form to flow.
Called when the connection is closed.
message event handler
Sends a message to the chat room using a json object.
Sends a text message to the remote user
closes the session
native sql.
Request a license.
Apply a license to your account.
Create field with plain text value
Create field paragraph text.
Create field.
create multi choice select many field.
Create a new field.
Update field plain text.
Update field paragraph text html.
Update route field.
Update field decimal plain.
Update field value.
Create a new field value.
Gets a configuration by key.
Gets all configurations.
Creates an attachment.
Gets an attachment by id.
Deletes an attachment.
Deletes an attachment.
Parses a. jar file.
Set the class loader.
throw exception if parent is not xsd schema
if parent is xsd schema and name is null throw exception
Throw an exception if the xsd tag is missing.
Get the node corresponding to the schema.
if parent is xsd schema and form tag is not in map throw exception
if parent is xsd element and ref tag is in map throw exception
Converts the given value to an instance of this type.
Create a CLI interface instance.
Create a new cli instance with the given options.
Parses command line arguments.
Parses the given arguments using the given options.
Returns a builder for the given path.
Remove footer view
Get the value of a point.
Generate 3 - dimensional Perlin noise.
Compute 3 - dimensional Perlin noise.
Interpolates a cubic spline.
Curve 5 function.
Sets the bounds of the scale.
Processes the given event.
Process the event.
Gets the account id from a cloud trail event.
Apply the rules.
Get event serializer.
Create a new file.
Create a new directory.
Restores all previously saved properties.
Create implementation.
Add an object to the collection.
Sets the value of the given property.
Get array.
Get the next state for the given transition.
Remove garbage collected objects from the map.
Get t for given type.
get parameterized type t.
get type variable t.
Prints the stack trace of this throwable.
Print stack trace.
Replace the remote object with a stub.
) ;
Sets the task.
Attempt to call the accepted task.
Called when the task is rejected due to an exception.
Attempt to start the task.
Calls the completed method of the task.
Stops the task.
Returns the implementation of the executable.
put job impl.
Convert a string to a blocking mode.
.
Copies the readers to the new catalog.
Create a new catalog instance.
Load the system catalogs.
parse a catalog file from a url
Parse pending catalogs.
Parses a catalog file.
Print an unknown entry in the catalog.
Attempt to resolve a doctype.
Returns the text of the current document.
Attempt to resolve a system identifier.
Attempt to resolve the given uri in the catalog.
Make the given system identifier absolute.
Attempt to normalize the given URI reference.
Convert a byte to a string.
add delegate.
Create a new soft value ref.
Notify all listeners of a throwable event.
Adds a throwable to the log.
Create implementation.
Compares two timer tasks by execution time.
Returns the value of the property if it is a text value.
Get the object at the given index.
Sets the object at the given index.
maintain the list by removing all objects from the queue.
Add a new type and its number of arguments.
Returns the type of the given entry.
Returns the number of arguments of the given type.
Gets the arg at the given index.
Set the context class loader for the given thread.
Swaps the positions of the specified elements.
remove node at given index
clean up timeout impl
Loads a class from the classpath.
Preloads the protocols.
Create a new url instance.
Check if the last handler pkgs property matches.
Gets the value of the property.
Create implementation.
Make a new counter object.
Turns a counter into a directional one.
Determine if the current namespace is in an extension namespace.
notification.
get object instance.
Substitutes a substring of a string.
Splits a string around matches of the given delimiter.
Joins the given byte array into a single string.
Default to string.
Returns the value of the option.
Create a new cache.
return null ; }
Returns the value associated with the given key or null if there is no such key.
Remove a timed entry from the cache.
Flushes the cache.
Get the list of valid keys.
Set the resolution to the given value.
Get the timed entry from the map without removing it.
Gets children by tag name.
Get a unique child element by tag name.
Returns the first child element of the given element with the given tag name. If no such child
Returns the content of the given element.
Gets unique child content.
Gets the content of the first child element with the given tag name. If the child does not
Set the maximum queue size.
Set the blocking mode for the given name.
Set the blocking mode for the given name.
Executes the wrapped task.
Resolves a system using the given resolver.
Resolve external external string.
query resolver.
Appends a vector to another vector.
Resolve all the system IDs in reverse order.
Resolve a string from a given system id.
Resolves all local system names.
Reads a catalog from a file.
Reads a catalog from an input stream.
Connects to the remote file system.
return null ;
Delete node f from node b.
return null if value is null
Creates a snapshot of the current value.
Creates a logger for the given class.
Convert a collection of objects to a string.
Get the class name.
Returns the string representation of the object.
Returns an iterator over the names of all the properties.
Get a property group by basename.
Gets compatible constructor.
Copies the given serializable object.
Dereference an object and cast to an expected type.
Initializes the context.
Update the jndi cache.
Returns the key set.
Synchronized set implementation.
Remove a property listener
Notifying listeners that a property has been added.
Notifies all registered listeners that a property has been removed.
Notify all listeners that a property has changed.
event.
Create a property name from the given base name and prefix.
Loads the properties from the given reader.
Loads a property reader for the given class.
Get a property group by basename and index.
Returns true if the entity has been resolved.
Attempt to resolve the given system id.
Attempt to resolve system i URL.
Attempt to resolve a classpath name.
Sets the value of the property to the given text.
Returns the normalized version of the given string.
Returns a URN encoded string.
Decodes a URN.
Replaces all occurrences of old with new.
Starts the timer.
Stops the lap and returns the amount of time elapsed.
Make a synchronized stop watch.
Compares the specified object to this instance.
Generates a hash value for the given byte array.
Generates a hash code for an array of objects.
Creates the internal data structures.
Sets the value of the field.
Get the next token from the stack.
Initializes the static variables.
Add a vertex to the graph.
Set the root vertex of the tree.
Removes a vertex from the graph.
Depth first search.
DFS spanning tree.
Finds a vertex by its data.
Finds all cycles in the graph.
Normalizes a string.
Parse XML from string.
Parses the given XML stream and returns the root element.
Parses the given source.
Create a new element.
Resolves a qualified name against an element.
Copy attributes from source element to destination element.
Returns true if the given node has at least one direct child node of its type.
Returns an iterator over all child nodes of the given node.
Gets the text content of a node.
Returns an iterator over all child elements of the given node with the given name.
Gets the parent element.
Add a waiting resource.
Reads a catalog from the given file.
Get the local host address.
throwable. set system property value
Display class info.
Provide a human readable description for the given class.
Strip package name from class name.
Returns the package name of a class.
Force load.
Gets the primitive wrapper.
Get all interfaces of a class and add them to the given list
Get all unique interfaces of a class.
Checks if the given class is a primitive wrapper.
Instantiates an instance of the given class with the given property.
Get attribute getter.
Create a setter for an attribute.
Convert to java class.
Gets the value of a system property.
Gets the filenames.
Removes weak objects from the set.
Returns an iterator over the elements in this set. The elements are in no particular order.
Create a url instance for the given protocol.
Returns a new set that is the same size as this one except that its elements are grouped
Add a property listener.
Remove the given property listener from the list of listeners.
Checks if a string is null.
Finds property editor by type name.
Registers an editor for the given type name.
Convert the given value to the given type.
Gets the context class loader.
Checks if the throwable is a deadlock exception.
Add a timeout to the queue.
Attempt to do the work.
Create a subcontext from the given context with the given name.
Lookup an object by its name.
Checks if the given class is assignable from the given object.
Append class info.
Gets the transition with the given name.
Read properties.
Queries the verbosity.
Queries the relative catalogs.
Query the list of catalog files.
Returns a vector of all the files in the catalog.
Query the prefer system property.
Query whether the static catalog is used.
Attempt to resolve the given entity.
Attempt to resolve the given href.
Make the given URI absolute.
Resolves a class.
Invokes the setter.
Gets the local name.
Recursive method to get the namespace URI of a node.
Gets the namespace URI of the given element.
Creates a list from the given enumeration.
Gets the input stream.
Loads properties from the given file.
Populates the properties map.
Add an edge to the graph.
Add an outgoing edge to this vertex.
Adds an incoming edge to the graph.
Checks if this node has the given edge.
Removes an edge from the graph.
Finds the edge between the given vertex and this one.
Finds the given edge in the graph.
Returns the cost of this vertex and the destination vertex.
Compress a single jar file.
Returns true if the iterator has a next element.
Dispatch an event to all registered listeners.
install jvm type provider.
Dispatch on fx thread.
get event stream.
Strict many to one.
Returns a stream consisting of the given rights.
Allow robots.
a command string.
Gets the sum degree.
Create a new hash map from the given arguments.
Informs this resource adapter that a resource has been read from the underlying reader. The reader
Checks the datasource.
Creates a list of parameterized instances of the given class.
Connects to the database with the given parameters.
Executes the given SQL in the given database.
Query in with the given SQL.
query by example
On upgrade.
Dumps the contents of this table to a CSV file.
Restores a dataset from a SQLite database.
Set the empty text.
Dumps the contents of a database to a CSV file.
Unescapes a CSV string.
Returns a list of strings from a row of CSV.
Convert a CSV string to a map
Convert a map to a csv string.
Joins a list of strings.
Joins an array of strings.
Read a database model from an index file.
Write to index.
Inspect id.
Gets the base dao class.
Gets the bind type.
Import a database from CSV format.
Backup all tables to csv.
Restore all tables from csv.
Create the index file.
Create a query with the specified manager.
Executes a query with the specified entity manager.
Renders the query.
Delete the row with the given id.
Update or insert the given object.
Update the given object in the data store.
Appends a where not in clause.
Create a new subquery.
Get the next active stack.
empty intention stack
Adds a plan to the collection of plan bindings if the plan is not null.
Selects a plan based on a policy.
Selects a random plan.
Sets the plan variables.
Gets the result at the given index.
Gets the parents of this node.
Get the children of this node.
Grows the given byte array by the given amount.
Create a logger with the given name and level.
Advances the iterator one step.
Sets the goals.
Pause for user input.
Initializes the intention selection pools.
Initialize the thread pool.
Start all intention selection threads.
Shutdown all intention selection threads.
Register an extension.
Resets the state of the classifier.
Load an agent.
Processes the plans for a given goal.
Create agents in catalog.
Load class.
load extension.
Checks if two objects have the same name.
Prints usage of this program.
Parse the command line arguments.
Parse the command line argument with the option.
Performs a single evaluation of a belief base.
Gets the object at the given index.
Find an object by its name.
Push an object onto the stack.
return null ;
PUSH an object onto the top of the stack.
Removes the object at the top of the stack and returns it.
Gets the type of an object.
Returns true if the given belief and query match.
Main method for testing this class.
Convert a string to a byte array.
Posts a goal to the pool.
Send a message to an agent.
Send a message to an agent.
Returns the current set of goals.
Convenience method to create a belief set.
Adds a belief to the beliefbase.
Executes a query.
Suspend the agent.
Returns the field with the given name.
Registers a number of neighbours with the belief set.
Builds a random name.
WorkerThread. run ( ) ;
Check if the stack size is valid
Remove the finished agents.
) ; }
Shutdown the pool.
Sets whether an agent is idle.
Moves the pin a to b
Inits the library with the given configuration.
Causes the current thread to wait until the idle state becomes available.
Finish the current run.
Return true if all pools are idle.
Get the poolid of an agent.
Selects an expression.
Sets the expression.
Create a join expression.
Recursive join.
Find or create a join.
return false ;
Gets the upload stream.
Handle a request.
Returns true if the given parameter exists with the given value.
Returns the value of the given parameter.
Parses the given expression as a set of parameters.
Configures the transaction manager with the given configuration.
Gets the target file.
Writes an artifact to the generated file.
Processes a managed instance.
return constructor ; }
Build a string representation of the given descriptor.
Gets the method from the interface.
Returns the list type for the given field.
Gets the dependency value.
Persists the state of this object.
Set default link.
Set the default link template.
Handle links.
Handle links in the response.
Handle links in the body.
Parse a link object.
Get or add a map.
Handle capabilities.
Checks if the given method is allowed.
register instance processor.
Registers an instance factory for the given type.
Register an instance processor.
Register a processor.
Add an argument.
Create the target files.
Convert this object to an XML string.
Initializes the template.
Returns true if the given template has a reference to the given file.
Create a parameterized template model from a reader.
Create a parameterized template model from a file.
Sets the request path.
Returns an observable sequence of values from the specified range.
Scoped scope.
Sets field value.
Attaches the given appender to the given logger.
Remove appender from attachable logger.
Clear the contents of the appender.
Parse the model.
Resolve all proxies.
List files in a directory.
Recursive method to parse a directory.
Checks if the model is fully resolved.
Find all e.
Set model directories.
Sets the file extensions.
Set model resources.
Advances to the next record.
Set the values of an array parameter.
Convert a string to an object.
Merges the given artifact with the given template.
Gets the model directory.
Gets template dir.
Write the document to the response.
Starts the browser.
fullscreen mode.
Print a view to the console.
Writes the given number of bytes from the input stream to the output stream.
Invokes the method on the proxied object.
attach http servlet request and response to this request
Detach this object from the request.
Get the cookies associated with this request.
Dumps the contents of the HTTP request to the log.
Gets the invocation meters.
Extracts the parameters from the given configuration.
Set the remote host.
Get the parameter value converted to the given type.
Removes the prefix from the path.
Gets the first common ancestor of two files.
Convert an absolute path to a relative one.
Convert relative path to absolute path.
Returns the depth of the given file.
Dump error.
Send json object.
Add a template to the list of templates.
Add a list of parameterized templates.
Initialize all the templates in this template model.
Finds all the parameterized templates that have a reference to the given template.
Enables or disables the save button.
Prompts the user for confirmation to delete the file.
Handles a delete.
Create a new managed instance.
Returns the sorted list of files.
Get a summary of the results.
Gets the summary row.
Get sub summary row.
Create an instance of the managed class.
Get the setup class.
Get the model directories.
Get the model resources.
Set the candidates for this query.
Load xml.
Show an error notification.
Is object boolean.
Reads a JSON - encoded array of objects from the http request.
Reads the object from the given input stream.
Extract the parameter from the cell.
Returns the hints associated with this query.
Returns true if the request is an XHR request.
Returns true if the request contains an android user agent.
Handles an element event.
Gets all properties that have an annotation of the given type.
Gets an annotation on a property.
Logs the given message with the given arguments.
Lookup a web interface.
has parser for whois host boolean.
Gets a managed class from the container.
Get a managed method.
Process an event that does not contain an exception.
Process an event that does not contain a specific message.
Serializes this cache header to the given http response.
Get cookie value by cookie name.
Add a cookie to the response.
Remove the cookie with the given name.
Returns an iterator over the cookies in this collection.
Gets the target file list producer.
Add a field to the class.
Compiles the class.
Verification of response from token
Gets the value of the file.
Returns a new URI with the trailing slash appended.
get http servlet request.
return null ; }
Executes a managed method in a mutable transaction.
Executes a read only transaction.
List the files in the directory.
Gets the last file in the directory.
Gets the concrete config.
Checks if the given path starts with the given string.
Get all artifact factories of a given type.
get http session.
Serializes the contents of the file into the http response.
Reads metadata from the server.
Override handleRequest in order to perform processing for this interceptor.
Tear down the database by closing the statement.
Called before the component is removed from the server.
Handles the allowed methods.
Triggers blob upload.
Prompts the user to delete the endpoint.
Extract column parameters.
Get the argument names.
Causes the specified periodic task to be executed periodically in the background.
Schedules a timeout task.
config repository.
Advances to the next file.
}
Print the welcome message.
Print stopped banner.
Creates a new chameleon instance.
Register shutdown hook.
Trigger the notification and display the notification.
Triggers the endpoint.
Inserts a new row into the fit table.
Get the counts of all files in the result set.
setter for score - sets
getter for variants - gets
setter for variants - sets
getter for question type - gets
setter for question type - sets
getter for token - gets
getter for depLabel - gets
setter for deplabel - sets
getter for semantic type - gets
setter for semantic type - sets
getter for sections - gets
setter for sections - sets
indexed getter for sections - gets an indexed value -
indexed setter for sections - sets an indexed value -
getter for uris - gets
setter for uris - sets
getter for types - gets
setter for types - sets
getter for target type - gets
setter for target type - sets
getter for rank - gets
setter for rank - sets
getter for query string - gets
setter for query string - sets
getter for candidate answers - gets
setter for candidate answers - sets
indexed getter for candidate answers - gets an indexed value -
indexed setter for candidate answers - sets an indexed value -
getter for query - gets
setter for query - sets
getter for hitlist - gets
setter for hitlist - sets
indexed getter for hit list - gets an indexed value -
indexed setter for hitlist - sets an indexed value -
getter for query - gets
setter for query - sets
getter for search id - gets
setter for search id - sets
setter for docid - sets
getter for offset in begin section
setter for offset in begin section
getter for offset in end section
setter for offset in end section
getter for begin - section - gets
setter for begin - section - sets
getter for end section - gets
setter for end section - sets
getter for aspects - gets
setter for aspects - sets
getter for triple - gets
setter for triple - sets
getter for source relation - gets
setter for source relation - sets
getter for subject - gets
setter for subject - sets Subject
getter for predicate - gets
setter for predicate - sets
getter for is obj uri - gets
setter for is_obj uri - sets
getter for operator - gets
setter for operator - sets
getter for operator args - gets
setter for operator args - sets
getter for concept - gets
getter for score - gets
getter for text - gets
setter for text - sets
getter for id - gets
setter for id - sets
getter for name - gets
getter for abbreviation - gets
setter for abbreviation - sets
setter for concept - sets
getter for variants - gets
setter for variants - sets
getter for namedEntityTypes - gets
setter for namedentitytypes - sets
getter for concept type - gets
setter for concept type - sets
getter for occurrences - gets
setter for occurrences - sets
getter for concepts - gets
setter for concepts - sets concepts
getter for original text - gets
setter for originaltext - sets
getter for args - gets
setter for args - sets
getter for label - gets
setter for label - sets
Returns the index of the next clear bit.
Set the bit at the given index.
Frees a buffer.
Create a new cache value.
Rehash an array to a new size
Returns a helical representation of this monomer.
Checks if brackets are the same.
Parses the given string and extracts the units source and target.
Convert to hel.
Adds an element to the group.
Checks the validity of the given polymer id.
Checks if the given polymer id is connected to this one.
Checks the connection and hydrogen bonds of a string.
Checks if the given string is a valid group id.
Checks if the given string is repeating.
Checks if the string is a peptide or rna
Convert the value to json.
Returns the polymer with the given id.
Notation of the current grouping.
Returns a helical representation of this object.
Returns the HELM string of the Polymer.
Returns the connection string in hel format.
Returns the string representation of this grouping.
Returns the annotation in hel format.
notation for groupings and polymers
Returns the polymer with the given id.
Sets the elements of the polymer.
Do convert.
Sets the annotation.
Set the count.
Determines which monomer notation to use based on the given string.
Returns the monomer notation group element for a given string and type.
Attempts to create a helm entity from a string.
Returns the value of the vector.
Parse a test string.
Sets the rna.
Define ambiguity.
Returns a snapshot of the statistics for this job.
Creates a new edge collection from the given edges.
Create a new instance with the given nodes and edges.
Initialize incoming paths.
Returns a list of nodes sorted by reachability.
Subscribe to a pattern with a specific class and method name.
Get the number of subscriptions for a pattern in the system.
Unsubscribe from a pattern.
Calls the appropriate return method based on the request type
Send a sync response to the external system.
Attempt to get a boolean from the queue.
Send a shutdown message to the device.
Throws the given throwable if it requires local handling.
Lock run state.
Create a worker thread and start it.
ctl = c ; } } while true ;
add worker.
Deregister worker thread.
; } }
Actual worker function.
Await work.
Get the common queue.
Return the number of tasks that have completed.
Submits a task to the external queue.
Choose the pool to use.
Get a value from the result.
Builds a UTF - 8 encoded string from the supplied code.
return worker statistics.
Creates a new instance with the given elements.
Reverses the order of elements in this list.
Returns true if all elements of the given iterable match the given predicate.
Perform a left fold of an iterable.
Performs a right fold of a list vs a given function starting from a given value.
Push a task onto this queue.
Construct a Maybe from a nullable value.
Create a new map from the given keys and values.
Returns an empty instance for the given equality.
Creates a new instance with the given keys and values.
Create a new map from the given keys and values.
Returns a new set containing the keys contained in this set.
Normalize the resource name.
Marshals the given value to a string.
Returns a subsequence of this string.
Returns a binary search for the elements in the given list.
Returns a binary search for the element in the given list using the given comparator.
Sends a message.
Bind a route handler.
Bind a filter handler.
return true ; }
Gets the int.
Remove duplicate strings in an array.
Like string.
Executes the runnable.
Login a user.
Gets the login user from the session.
Compares the given password with the given salt.
Save member in cookie.
Encrypt the key for a user.
Attempts to find a user by its UUID.
Forwards the request to the given context.
Get a long parameter from a request.
Log a debug message.
Get the caller informations at the specified level.
Convert char array to simple byte array.
Converts a char sequence to a byte array.
Convert byte array to simple char array.
Converts a char sequence to a byte array.
Lookup the locale data for the given locale code.
Causes the current thread to wait for the given number of seconds for the job to finish
Crops the given image to the given location.
Invokes the given invocation in the given time unit.
Runs an invocation in a separate thread.
Get the rest operations.
Renders a json error page with the given error message.
Renders a forbidden error with the given message and data.
Renders the given string with the given template.
Parses the path.
Renders the data tables.
Renders the empty data tables.
Sets the list of items in the combo box.
Sends a redirect to the given context.
Returns a list of all providers that have the same type as this type.
Get the current method.
Garbage collect memory.
Propagates the given metrics to the local collection.
Encodes a string.
Copy all data from the input stream to the output stream.
Copy bytes from the input stream to the output stream.
Copies the content of the given stream to the given writer using the default encoding.
Copy characters from the reader to the writer.
Copy characters from the reader to the writer.
Copies the reader to the output stream using the default encoding.
Copies the reader to the output stream.
Compares two input streams.
Compares two Readers.
Applies all the stages of the pipeline to the given input.
Get the SQL for the given group name and id.
Convert a string to an object of a given class.
Unzip a file to a directory.
get instance of permission dialog fragment.
Attaches key listener to the wrapped dialog.
Registers a converter for the given class.
Matches a string against a regular expression.
Checks if the given string is mobile.
Checks if the given string is a phone number.
Checks if the given string is a birth day.
Checks if the given string is a URL.
do filter.
Encodes the given string using the UTF - 8 encoding.
Decodes a byte array from Base64 format.
Converts a hexadecimal string to a byte array.
Reads properties from a UTF8 encoded stream.
Reads the content of the stream as string. Closes the stream after reading.
Reads the content of the given file as a string using the given encoding.
Writes data to a file.
Copies a directory.
Serializes the given document to a string.
Get a DOM document from a file.
Builds a document from the given XML string.
Get a DOM document from an input stream.
Validate XML signature.
Sign a document.
Checks if the given class is cache - safe.
Checks if the given class is an array of primitives.
Checks if the given class represents an array of primitives.
Resolves a primitive type to its wrapper class.
Checks if a type is assignable from another type.
Checks if a value is assignable from the given class.
Returns an array of all interfaces of the given instance.
Returns all interfaces of the given instance as set.
Write to a temp file.
Returns a map of variables mapped to their values.
put permission with message
Binds the given implementation to the given extension point.
Returns the builtin object for the given type.
Get a primitive of the given type.
Convert the given object to the given type.
Convert user defined value type.
Queries a request parameter.
Adds a cookie parameter to the request.
Gets the session parameter.
init druid db.
Add a query parameter to the query.
Sets the given parameter to the given value.
Shows a permission dialog.
Returns true if all values have been granted.
Returns true if any of the values is denied by the result map.
Selects records from database.
Selects a single record from the database.
Checks if the value of the given column is new.
Checks if the method declares an exception of the given type.
Process the queue of soft values.
Stores the given key - value pair in the cache.
Returns true if string matches pattern false otherwise.
Read command line arguments.
Gets the protobuf entity.
Returns true if the given class is a proto entity.
Gets all fields of a class and its superclasses.
Gets the protobuf getter.
Gets pojo setter.
Gets the mapper.
get json factory
Convert an object to a JSON string.
Set the borders.
Gets the user record.
Copies out the attributes of the given object.
Copy out the attributes.
Create a new application in the frame.
Saves a token.
Gets the token.
Get the default class loader.
Returns the URL for the given resource name.
Gets resource as stream.
get class as input stream.
Initialize this instance with values from another instance.
Initializes the scheme.
Initialize the path.
Sets the scheme of this URI.
Set the userinfo property throwing an exception if not.
Sets the host.
Sets the port.
Appends a string to the current path.
Sets the query string.
Set the fragment of this URI.
Returns the URI of this URI.
Create a prepared statement from an iterator.
Initializes the applet.
Gets the muffin of a parameter.
Set the muffin of a string parameter.
Returns the contents of the clipboard.
Set the clipboard contents.
Load services by type.
Sets service parameters.
Get the service parameters for a given operation.
Find a parmetrized service by its id.
Find by class t.
Parses a query response.
Returns an iterator over the elements in this buffer.
Gets the encoding of a string.
Get an instance of a connection.
Get the authorization URL from the command line
Visit a package declaration. This is called by the parser whenever a package is found.
Visit a class declaration. From here interesting information is gathered from the class declaration.
Visit an executable declaration. This is the primary focus of the visitation. From here interesting information
Get an option by key.
Creates a filter from a collection of modifier.
Returns a filter that matches declaration instances of the given kind.
Matches this filter with the given filter.
Returns a declaration filter that performs the logical or of this filter and the given filter.
Get as map.
Make the given constructor accessible.
prepare object query info.
Replaces all occurrences of a slash with a hyphen.
Convert a byte array to a hexadecimal string.
Gets the indexes for the given name.
Parse a named SQL statement.
Convert a collection of protobufs to a collection of protos.
Set a field value.
Sets field value.
Returns true if the file should be included.
Returns a new result set instance.
Converts a list of labels to a map.
Gets the generic supertype.
Drains the queue.
Run the poll on each object in parallel.
Recursively gets a field from a class.
Gets the declared methods of the given class.
Gets a declared method from a class.
Gets all annotated declared methods of the given class including ones marked with the given annotation.
Returns all constructors of the given class that are annotated with the given annotation.
Dumps a single byte.
Returns the index of the first occurrence of the specified substring in the specified string ignoring case.
Removes chars from string.
Sanitize the state.
Initialize audit.
Initialize the message queue.
Initialize password validator.
Initialize password authenticator.
Resolve locale code.
Looks up a locale by its code.
Gets an instance of the statement.
Removes all elements from this set. The set will be empty after this call returns.
Pops an element off the top of the stack.
get input stream.
Parses the given arguments into properties.
Match tokens.
Moves the mouse by the given coordinates.
Checks if this rectangle encloses the specified rectangle.
Check if this rectangle contains the given point.
Intersects this rectangular with another.
Creates a new rectangular that is the union of this rectangular and the specified rectangular.
Replace the x value of this rectangular with the x value of another rectangular.
Replace the y value of this rectangular with the y value of another rectangular.
Get the number of the given column.
get row ofs int.
Returns the bounds of the cell at the given coordinates relative to this cell.
Calculates the columns.
Calculate the number of rows.
Unwrap a throwable.
Entry point to the JVM.
Called when data is read from the underlying byte buffer.
Resize the code buffer.
Initialise the log.
Creates a copy of this query parameter but excluding the excluded elements.
add a child to this node
Removes all children from this node.
.
Add num instructions and this to the body.
Add this wam to the parent wam list.
; }
) ;
Update the present component flags.
Create a new decimal type.
Returns true if the given term should be evaluated.
Optimize a list of instructions.
Compares two collections.
Processes the request.
do start tag
method to render a button
Resets the state machine to the initial state.
Initializes the learner.
Map. get Map. put
Gets the index of the given key.
Set the value at the given index.
Map. remove Map. values
Removes the value at the specified index.
.
Set the value of a property on an object.
return null ;
Determine if a primitive type is assignable from a wrapper type.
}
) ;
Initialize lookups for this decision tree.
unify a query
unify internal function.
Compiles a query.
Finds the maximum arity of the given clause.
Allocate the permanent registers.
gathers position and occurrence information from a clause
expression.
results.
Convert a byte buffer to a string.
)
Sets the value of the given attribute.
Read a term.
Checks if class exists and is loadable.
Checks if the given class is a subtype of the given parent.
Checks if parent is a subtype of child.
return true ;
Lookup a class by its name.
Creates a new instance of the given class.
Creates a new instance of the given constructor with the given arguments.
Calls a method and returns the result of the call.
Calls a method on an object with the given parameters.
Call static method.
Gets the constructor.
Find matching setters.
Creates a new queue backed by the specified queue with a transactional view of the queue.
Creates a new queue with the given queues and requeues.
Gets the type from object.
Resets the state of this object so it can be used again.
Create a new instance of the type.
Add a supported timezone.
Add a time zone.
Adds a dimension to the database.
Searches for free variables that match the given query.
Searches for free variables that match the given query.
Compares two search nodes using the heuristic search algorithm.
Writes an object to a file.
Read stream as string.
Create a new search node.
Generate a trace string with the given indentation.
is body term in arg position?
return output ; }
Create a new functor with the given name and arguments.
Create a new variable with the given name.
execute with error handling
; }
Set the texture to use.
Overrides default paint to enable double buffering.
Create a buffered image of the desired type.
Create a buffered image from a binary image.
Create a sgi image.
Set the search algorithm to use.
Entry point for the program.
This method is not part of the public API.
Parses a list of terms from the source.
Parse a functor.
Consumes a var token and returns its value.
Consumes an integer literal and returns the value.
Consumes a floating point literal and returns the literal value.
Consumes a token and returns the literal value.
Consume a directive from the stack.
Interns an operator with the given name and priority.
here.
Consumes a token of the given kind.
Consumes a token of a given kind.
Binds the service to the context.
Rollback the transaction
Collects the elements returned by the iterator into the target collection.
Convert time of day to milliseconds.
Convert ticks to years.
Change the ticks to the given number of hours.
Convert the given ticks to the given number of minutes.
Convert ticks to milliseconds with specified seconds.
Returns the number of ticks in the given year.
Returns the number of ticks in the specified month.
Converts the given ticks to the given date.
Returns the number of milliseconds to start the specified year.
Reads a block of data from the underlying source.
Returns the entry associated with the given key.
Cuckoo entry.
Rehash the hash table.
Called when an action is performed.
Set the next available.
Set the prev available.
Set the status as finished.
Returns a wam instance for the given symbol table.
Returns an iterator over the variables in this set in proper sequence.
Expected i.
Generate the probabilities for a single distribution.
Set the ticks.
Perform the actual forwarding.
Creates a new URL instance.
get request info string.
Returns the headers of the current request.
get the cookies from the request
Get the parameters from the request.
get request scope.
Renders the attribute values in the current page scope.
Gets the session scoped string.
Get the application scoped string.
}
doStartTag implementation.
Returns the HTML representation of the given properties.
Set the current screen state.
Traverses a term.
Compares two search nodes based on their f value.
Update this wam with the given registers.
Notifies all registered listeners of the changes.
clause.
Returns true if the given context is in the top level functor.
Sets the arguments.
Get the fixity of this node.
Returns true if this transformation is infix.
Compares this symbol to the specified symbol.
property change event.
) ;
} }
Create a component factory by class name.
Returns the storage cell for the given variable.
Is this a bound variable?
Set column attributes.
Set a row attribute.
Gets the attribute for a given column.
Get a row attribute.
Inserts a new cell at the specified location.
Create a new time type with the given parameters.
Create a new instance of the pattern type.
Checks if the given value is an instance of the given char sequence.
Create the initial context for the given term.
Update the registers of this wam and the given layout.
Get the value of this variable.
search goal path.
Blocking call.
Get the properties for the given resource name.
the rate
Reads data from the source stream into the specified byte array.
Skips specified number of bytes in this stream.
gather disjunctions and expressions
Reads an int from the given byte array at the given offset.
Writes the given 32 - bit Integer to the given byte array at the given offset.
Writes the 24 bit int to the byte array starting at the given offset.
Reads a 24 bit integer from the given byte array at the given offset.
Reads a short from the given byte array at the given offset.
Writes the given signed short to the given byte array at the given offset.
get child state for operator.
Iterator over valid operators.
}
}
Sets the value of this attribute.
Convert a string list to an array.
Convert an array of strings to a list.
Convert a name to camel case.
Appends a list of handlers to a string buffer.
Resolve a call point.
Sets a new address for a given function.
).
}
Returns the value at the given level.
Get the last value.
Writes the object to the stream.
Reads the object.
Computes the h value.
Returns the modulo operation for the given mod number.
Add an error message for the given key.
Writes a string to the underlying stream.
Classify a given state.
Compares two elements according to their partial ordering.
Returns an iterator over the elements in this collection. The elements are returned in no particular order.
base 2 log base 2.
Returns the log base 2 of the given value.
Returns the base 10 log base 2 of the given value.
Returns the base 10 log base 10 v3.
Returns the base 10 logarithm of the given value.
Returns the base 10 logarithm of the given value.
Gets the character count for a 32 - bit integer.
Gets the character count of a 64 - bit integer.
Gets the character count of a decimal number.
Sets the functor head.
Emits the given code.
screen.
Attempt to evaluate this function on the given object.
Gets the key iterator.
Create array properties.
the rate
Derived classes may override this method in order to customize the return type.
Finds the properties.
s.
paths.
directory.
Leave the functor at the current position.
Returns the value of the term.
Sets the term to bind to.
Create a new priority queue.
Clean up resources.
Append an event to the log.
Fire connector event.
Initialize the printers.
Commits the transaction.
Rollback the transaction.
Request a write operation.
Add a cached write operation to the cache.
Acquire a global write lock.
write lock
Enlist with the current session.
Enter a rule set into the parser.
Inserts the specified element into this queue waiting up to the specified wait time for space to become
Retrieves and removes the head of this queue waiting if necessary up to the specified wait time for another
Inserts the specified element into this queue waiting if necessary for space to become available.
Returns the next object from the source iterator.
Returns the boolean value of the given property.
Returns the integer value of the given property.
Returns the value of the given property as a long.
Apply a mixin to the given node.
ONLY USED BY RULES
Backtracking.
Retrieves the code associated with a given call point.
execute and extract bindings
decodes the heap.
Captures the event.
restore from an object
get an attribute from a class.
Set the value of an attribute.
} }
Executes the task.
Inserts the specified element at the tail of this queue.
Create a new search node with the given state.
Create a new priority queue.
Follows the search path starting from the current node visiting each term using the given visitor.
Creates a new term walker for the goal term.
Creates a new term walker for positional terms.
Creates a positional term walker for the given predicate and visitor.
A post fix walker.
Reads properties from an input stream.
Gets the properties.
Get the properties for the given url.
Loads properties from a file.
Compute the grid size.
Initializes the font metrics.
adds the given listener to the list of listeners for the current property.
adds a new listener to the list of listeners for a specific property
Remove a property change listener.
PropertyChangeEvent. getPropertyChangeListeners. firePropertyChange
Create a new type with the given name min and max.
Smoothly fades in the specified group with the specified color.
Show the horizontal bar of the view.
show left bar
Show the right bar on the page.
Sanitize radio controls.
Awaits the termination of the evaluation of this circuit breaker for the given t.
Awaits until the interrupted state changes.
Executes the task.
Append the classpath to the command line.
Create a new instance of this type.
Prints the introduction.
Initialize console reader.
Evaluates the given sentence.
Eagerly evaluate the query.
get multi type data.
get multi type data by byte
get multi type data by char
Gets multi type data.
get multi type data.
get multi type data.
get multi type data by given float
get multi type data by given double
Gets multi type data.
get multi type data.
Sets an attribute on the page context.
clear up to the given key.
Increases the expansion by one.
Inserts a character at the specified location.
Compares two nodes by cost.
Parses the given operators.
Returns the operators with the given name.
Checks and resolves the fixity of a candidate symbol.
return null ; }
.
Returns the command line options in force
Get the usage string.
Add any trailing pairs to the given properties.
Add options to the given properties.
Add an option to the command line.
Checks the format of the argument.
Compares two iterators.
Returns an enumeration of the available options.
Gets the options.
Set the selected stemmer.
return null ;
Stem a word.
Main method for running the stemmer.
Create a new type with the given name min and max.
Resets the state of this object so it can be used again.
Get the current frame of the environment.
Get the choice frame.
Call internal.
;
backtracking.
}
Partial unwinding of the trail.
tidy trail.
unify if a1 == a2
unify const.
Print slot.
Random start state.
Checks if the given state is solvable.
get child state for operator.
Returns an iterator over valid operators.
Prints the current board to a string.
Swap the tiles.
Convert a string to a list of characters
Convert a list of character to a state.
Extracts the message from the log record.
Convert the given level to the corresponding apache log4j level.
Adds an element to the requeue.
Creates a requeued element and adds it to the requeue list.
record.
Decrement the size and count of a record.
Signal the signalable if the new size is crossing the low or high water thresholds.
Returns the enumeration of the given name.
Returns a list of bindings for the given name.
Add a property to the environment.
Removes a value from the environment.
Runs the garbage collector.
Matches a literal node.
Resolve a mixin reference.
Push a reference to a variable.
Set the height of a row.
Update the max column width.
Constructs a new search node from the given successor.
Handle forwarding of the request
Replace built ins in the given clause.
initialization.
Performs a top - level check on the given clause.
Convert a list of arguments to a string.
Evaluates the two given numbers.
Indicate that we are running.
Signals that the thread is no longer running.
Signals that the program is terminated.
Inserts the specified element at the tail of this queue.
Compares two nodes.
Insert nodes.
Restarts the server.
Finds all documents that match the given search method.
Finds all documents using the given search method.
Finds all solutions using the given search method.
Returns the next element in the iteration.
This method restores the values of an object from a map.
Get a field from a class.
Set the value of a multi - type property.
Set the value of the specified property on the specified class.
Capture a null or null value.
Removes the element at the specified position in this Bag.
Convert modifiers to string.
Parses the given string as an integer.
Convert a string to a date.
Checks if the given string is a valid date.
Checks if a string is a time literal.
Checks if a string is a date or a time.
Creates a token source for the given string.
Token source for given file.
Create a token source for an input stream.
Checks if the given instruction is a constant.
Is this instruction a variable instruction?
is non arg boolean.
Returns an iterator over the children of this node.
Get the argument at the given index.
Returns an iterator over the children of this node.
Returns the string representation of the arguments.
Returns the specified summary appender.
novie runtime exception.
Executes a query and returns the result.
Emit this code with the given code buffer.
Sets the basic type.
This method consults input stream.
Prints a variable binding.
Returns a new iterable over the results of the expansion of the given solutions as a map.
Reads the stream.
Read the XML stream.
Returns the current time in milliseconds.
Get a unique id.
Update the specified track on the specified playlist.
Update play info.
Actual output method.
Handle permanent resource request.
} ) ; }
Fire the start music request event.
Initializes the reader.
Starts the reader thread.
This method is called when the server shuts down.
Reset the parser to the default one.
Parse all the packets in the stream.
Processes a packet.
Sets the option to be used by the command.
Create a chat with the given user jid.
Internalizes the state of this object.
Resets the content of this object to the updated map.
Sets the value for the given key.
Adds a filter to the packet.
Process the request.
Clears all properties.
Initializes the connection.
} } }
next packet.
Opens the stream to the connection.
Returns a list of all the informations for this object.
Returns true if the given descriptor is contained in the descriptor list.
Add an event life cycle listener.
Shuts down the background thread pool.
Returns true if the given entry is valid.
Mask null.
Compares two objects for equality.
Returns the entry associated with the given key.
Increases the size of the backing array to acommodate the specified capacity if necessary
Copies all of the mappings from the specified map to this map. These mappings replace any mappings
Removes the value associated with the given key.
Removes the mapping for the given key.
Removes the mapping for the given object.
Add an entry to the table.
Creates a delegate map.
Encodes a binary value.
Convert a byte array to a hexadecimal string.
Encodes the given string as a base64 string.
Encodes a byte array to a base64 string.
Iterate over a collection.
Set the controller to use for selecting tracks.
Set the progress controller to consume progress from.
Set the controller to be used when playing or looping.
Set the volume changeable controller.
Broadcasts the available playlists to all registered listeners.
Handle command resources.
Handle volume changes.
Handle jump.
Handle select track.
Get a thread cache by name.
Gets request cache.
Gets the alt field.
Returns the shard path for the given id.
Adapts to a session.
Invokes a method on the given object without throwing an exception.
Recursively delete a content tree.
Update an existing entity in the store.
Sets the ping interval.
Starts the periodic ping task.
Add all options.
Checks if the given option is currently used.
Parses the command line.
Prints usage information for the given application.
Parses the command line arguments.
Initializes the connection to the server.
Start TLS if required.
Returns the compression handler.
Send compression method to the connection.
Compress the incoming stream.
).
This method notifies the connection manager that a reconnection has occured.
Registers a SASL mechanism.
Returns a list of registered SASL mechanisms.
Gets the behaviour for the given identifications.
Log an info message and the throwable.
Log a message and throwable with error level.
Logs a message with a stack trace.
Creates a start event.
Creates a start event.
Notify all listeners that a string has been added.
Returns true if this provider provides the given resource.
Checks if this collection contains resources from the given source.
Checks if this provider provides any of the given resources.
Provide a list of resources.
Gets a map from the cache.
Returns the cache key for the given key.
This method is called to remove a cached item from the cache.
Puts the given properties into the cache.
Get the cf locations.
Recursively include a file or directory.
Includes a jar file.
Add a mech to the list of default mechs.
Add a collection of SASL mechs.
Create the debug log.
Activates the post processor.
Registers the standard events.
Registers an event listener.
Register a new event id.
Attempt to acquire a file lock.
can run.
Creates a new dse session.
Create a music player error.
Request to start playing a track.
Stops playing the music.
Sends a command to this player.
Create a new playlist request.
Create a broadcaster playlist answer.
Appends the given post fix to the URL.
Adds a boolean query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Gets a playlist.
Invoked when the launch button has been pressed.
Check if startup is finished.
Checks if the given URL exists.
Browse to the given URL.
Create an image icon from a resource path and description
Entry point for the application.
Sets this array to a copy of the given array.
Exports the current state of this object to a hash map.
Get the element at the given index.
Returns the value for the given key.
Returns the integer value of the given value.
Returns the double value of the given value.
Converts value to string or returns default value.
Creates a command resource.
Verifies the given command.
Verifies the capabilities of a command.
Verifies the given command and capabilities.
Executes a batch of CQL statements asynchronously.
get subclasses of a given class
Gets all subclasses of the given class.
Search for classes in the given location.
Searches the given directory for classes in the given package.
Convert this resource to a list.
Returns the number of elements in this list.
Processes a packet.
Get volume from event model.
Creates an error response from an iq.
Create error response iq.
Checks if the given identifiable is the target of the given event model.
Sets the login enabled.
Returns a set that wraps the given set.
Sets the name of the user.
Update the state of this AskRequest.
Gets the groups.
Appends a RSM to a query element.
Parse rsm.
Create a leaving event.
Reloads the user s roster.
Creates a new roster entry.
Returns a collection of all entries in the roster.
Get the presence information for a given resource.
Set offline presences.
Fire the roster changed event.
Set the digest value for the given connection id and password.
Generate a resource.
Creates a player request.
Gets the time passed.
Register an update listener.
Initializes the properties.
Reload the properties.
Parse an error element.
Parse the mechanisms element.
Parse compression methods.
Parses a packet extension.
Decodes the given string into an object of the given type.
Verifies the given event model and capabilities.
Get playback state from a resource model.
Get the secret key for the given subdomain.
Check if a subdomain is allowed.
Overwrites the put method to ensure that the value is not null.
Gets the key set.
Returns a collection view of the values contained in this map. The collection is backed by the map
Purges the specified reference.
Returns the entry associated with the given key.
Returns the hash code for the given key and value.
Create a new entry with the given values.
Control events.
Sets the presence of this node.
Update the most vague presence.
Delivers a message to all registered listeners.
Generate script.
Initialize the output directory.
Loads properties from the given file.
Writes a string to a file.
Get list resource progress.
Decorates the given collection with a new collection.
Discover services in a range of addresses.
} } }
Gets the thread pool.
Creates a stop music request.
Verifies if the event model is a stop music event for the specified player.
Gets a cluster by its identifier.
Add a connection listener.
add a packet listener to the receive list
add a packet sending listener to the send list
event.
Add a packet interceptor.
Notify all registered interceptors of a packet.
Convert a request parameter to a value.
Called when the connection is lost.
Get the current thread id.
Return true if the given node is valid for the given thread.
Get the key for the given value.
Gets the value at the given index.
Find a valid node.
Lookup the node at the given index.
Compares two objects based on their status.
Finds the least key in a subtree of a given node.
Finds the node at the given index in a subtree.
Find the next node after the given index.
Finds and returns the node with the largest key strictly greater than or equal to the given node
Finds and returns the least valid node in a tree with the given id.
Copies a color from one node to another.
Determines if a node is red.
Check if a node is black.
Returns the grand parent node at the given index.
Returns the parent node of the node at the given index.
Returns the right child of the node at the given index.
Returns the left child of the node at the given index.
Rotates the right child of the given node to the left.
Rotates the subtree so that its right child is the given node.
Performs a red insert at the given index.
Delete a node from the ring.
Checks that the given object is non - null and of a comparable class.
Inserts a value into the tree.
Returns true if the map contains the given key.
Checks if the map contains the given value.
Get the value associated with the given key.
Removes the given key and its associated value from this map.
Removes all of the mappings from this map.
Copies the entries of this map to new map.
Expire entries in the cache.
Culls the cache.
Activates this component.
Get player request by playlist name.
Create a new roster store.
Opens a roster store.
This method returns a collection of inet addresses within the specified range.
Given an address represented as an inet address and the number of subnet bits return the IPv4 address
Exports the data to a hash map.
Create a track info object from a hash map.
Add all applications for the given set.
return 0 ; }
Prints the list.
Prints usage information to standard out.
Entry point for the s program.
Create a mute event.
Create a mute event.
Get a schema by name.
Write lines to a file.
Return true if this app is in the exec jar.
Add an option.
Gets the schema.
Get field by name.
Gets the package name from a jar entry.
Copies all entries from the base map to the new map.
Create event listener optional.
Sets the current state of the iterator.
Iterate over a collection.
Iteration from the iterator.
Get track info from event model.
Exports the contents of this buffer to a hash map.
return null ; }
Create an error image with the given lines.
get image from url
get data from url
Reverses the keys and values of the source map.
Computes the multiplication.
Starts the daemon if not already started.
Return this object to the pool.
Create an ended event.
Gets the current track from the queue.
Update a playlist.
Shuffles the tracks in the queue.
Verifies the capabilities.
Exports the queues and playback modes to a hash map.
Escapes a string so that it can be used as an XML document.
Received a challenge from the server.
Convert this object to an array of bytes.
} } } }
Handle event.
Join all the queues.
Sets the value of the given property.
Remove the property with the given key.
Adds a principal to the list of principals.
Removes a principal from the list of principals.
Notification that the root window is closing.
Processes a user encountered event.
Processes the given event.
Returns true if the resource is permanent.
Sets the name of the group.
Checks whether the set contains the given key.
Checks whether the set contains the given value.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Removes all of the elements from this set.
Hash the given key.
Checks if two keys are equal.
Checks if two values are equal.
Increases the size of the backing array to acommodate the specified new capacity.
Calculates a new capacity.
Create an entry set iterator.
Loads a map from a binary stream.
Initialization method.
Notifies all connection listeners that a reconnection has failed.
Notifies all connection listeners that an attempt to reconnect is allowed.