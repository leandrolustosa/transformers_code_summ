Emits the value without consuming it.
Wrap an observable.
Sorts the elements in an observable sequence according to the order induced by the elements in the
Return an observable that mirrors the source observable and emits only the values emitted by the source
Create a new instance with the specified capacity.
Create a new instance.
An extension point allowing the use of anonymous functions.
Create a new scalar flowable that contains the supplied value using the supplied mapper
Reset all schedulers to their default state.
Create a Maybe object from the given completable source.
Construct a Maybe which contains a single element
Retry at most times or until the predicate evaluates to true.
Throws a NullPointerException if the given object is null.
Returns the identity function.
Creates a callable that returns the supplied value.
unary operation that returns a function accepting a single argument.
Returns a function that casts its argument to the type of the target argument. The return value
Create a new subject that can be used with a single consuming operation.
Create a new subject with the specified initial capacity.
Create a new subject with the specified initial capacity and the specified runnable.
Create a new unicast subject.
Returns the error that was returned by this call or null if this call failed.
Returns the error if available or null if the thread was interrupted before the error occurred.
Wait for the Future to complete without blocking.
Drains the queue down to the maximum allowed value.
Send a prefetch request to the given subscription.
Complete with a single result.
Get the current value of the attribute.
Get throwable for the value.
Validates that the two disposables are not null and that the upstream is non - null and
Atomically set a disposable object to be the next one only if the upstream reference is not null
Verify that the upstream is not null and the next is not null
Atomically sets the next subscription as null and cancels it if the current subscription is not already
Cap an addition to the max value
Cap a multiplication to the maximal result of the multiplication
Add n to requested and return the updated value.
Create a null pointer exception for the given throwable.
}
Shuts down the task engine service.
Create a new scheduled executor service.
Set the new subscription if the current one matches the current one. This method is thread safe.
loop until there are no more elements to emit
If the given throwable is an instance of error or runtime exception wrap it in a new instance of
Flattens a throwable into a list
If throwable is a Throwable then throw the throwable ; otherwise return the throwable unchanged.
Remove all resources and dispose them.
Returns the number of items currently in the set.
Allow an observer to be subscribed to an observable sequence and a mapper function. The mapper function
Return an Observable that emits the value supplied by the mapper function on a particular value.
Return true if the subscriber is accepted by the queue.
Return true if the queue should be traversed.
start the consumer
Start the consumer if the source is unbounded.
Offer an item to the queue if the queue is not full.
Get the current value of the resource.
Completes the stream with the given value.
Called when an error occurs. Notifies all registered listeners of the error.
Complete the consumer and notify the downstream.
Wait for the given number of messages.
Issues a request to the upstream subscription.
Add a publisher to the current subscribers if there is one.
Remove a subscription.
Create a flowable that is the same as the supplied flowable but observes on the supplied
Parse annotations and adapt to http service method.
Sets the delay for the request.
Create a response object that represents an error.
Calculate the delay based on the variance of the data
Method to create a user and password.
Gets the http method value for the given HTTP method name.
search for a specific user
Encrypt a password.
Returns true if the raw password matches the encoded password.
If the spring version is not null do nothing. If it is null do nothing.
If the spring security version is null or equal to the security version disable all checks.
Get the spring security core version
Adds an attribute exchange configurer to this builder.
OAuth2 client.
Configure the oauth2 resource server.
compares the specified dn with the specified attribute name of the specified object.
retrieve an entry from the directory.
Performs a search for multiple attribute values or a set of attribute values
search for single entry using the specified search controls and a base DN.
Build a new search controls from the given original controls.
lookup the primary keys
Build details pre - authenticated granted authorities web authentication details.
Create embedded Jetty server.
Create servlet api filter if it does not exist.
Create filter of jaas api.
Default type resolver.
Insert a spring security filter chain.
Get token for a series by series id.
Get the authorities that have been granted to the given attributes.
Create a cipher instance for the given algorithm.
{ } } }
This method is called by the container each time a request is processed by the container.
Check if the principal has changed.
Authenticate a request. Handles pre - authenticated principal and credentials.
Checks whether or not the content length is sufficient for the response to be written.
Maps all authorities to their respective values.
Set the login processing url for the connector
Update authentication default values.
Update the access level based on the configured value.
return null ; }
Extracts the remember me cookie from the request.
URL encodes a list of cookie tokens.
Sets a cookie based on the tokens.
Attempt to locate the adapter for the given method parameter.
Replace placeholders in the query string.
Get service port.
Returns the principal of the current authentication token.
Invalidates the current session and clears the authentication context.
Authenticate the given authentication token. If the given authentication token is an instance of username password authentication
Set the environment properties for this context.
Returns the full request url including scheme server name port request uri and parameters.
Ends the tag. This method is called when a end tag is encountered.
This method initialises the user details service.
Get user details service.
Add the PKCE verifier and challenge information to the additional parameters
Determines whether a request requires authentication and if so whether a proxy is required to access the resource.
service ticket request boolean.
Determines if the request is a proxy ticket request.
Determines if the current client is authenticated.
Check if a proxy receptor is configured and matches the request.
Create a security expression root for the given method invocation. Subclasses can override this method to customize
Extract JWK from server using web client
URL encode a value.
get web sphere groups and granted authorities
Load user by assertion.
Get pre - authenticated principal.
Concatenates a number of byte arrays.
Returns a new byte array that is a subarray of the given byte array.
Get all granted authorities for the given attributes
Convert the map to a hash map with keys as the key and values as the value for the
Convert value to granted authority collection.
Add granted authority collection.
Get pre - authenticated principal.
Gets the shared object with the given shared type.
Build https redirect URL for request
The invoke method is called when the method is invoked.
Returns a string that has the specified role appended to the current one.
Add one or more roles to the existing ones.
On login success.
Get the user from the request and check if it is a valid user.
throws IOException {
Sets the url of the exit user.
Get a random contact from the server
spring security filter chain.
Parse a JWT string and return a JWT object.
Authorize using an access expression.
Authorize using url check.
Convert JWT to collection of granted authority
Wrap the request in a csrf token object
Display admin page.
Display add permission page for contact
Adds a permission to a user
Get a role with a default prefix appended to it.
Creates a new user details resource from the given string.
Get the attribute values for the provided attribute name.
Returns the first attribute value for the given attribute name.
UTF - 8 encodes the provided character sequence.
Decodes a string from a byte array using the default character encoding.
Returns an array of parameter names for the given type.
Add new contact.
Override find attributes that match the given method and target class
Add a new method to the map.
Get all config attributes
Determine if the method name matches the mapped name.
Configures a new any request.
Override handleBind exception to log when debug is enabled.
Returns a random contact
Clear the authentication attributes from the session.
{ return null ; } }
Create service url from request and response.
Create redirect url.
Extracts the prefix of the target string if it exists.
Always returns a 401 error code to the client.
Check the filter stack for duplicates.
Returns an array of all registered throwable types.
Attempts to extract the cause of the given throwable from the registered extractors.
Register a new access manager with the parser context
convert granted authority list to set
Compare two byte arrays for equivalency. The arrays must have the same length.
Set the default failure url.
Sets the function that will resolve hidden inputs.
Builds a request url from the given parameters.
Checks if is absolute url.
Create a new attribute list that matches the given identifier.
Converts an identifier of a serializable identifier to a serializable identifier.
Creates the entry for the given mutable acl.
Create or update a single object identity.
Update the given mutable object identity with the values from the given mutable ACL.
Save a request if it matches.
Create a new or server web exchange matcher for path patterns.
{ }
Creates a text encryptor for the given password with the given salt.
Encryptor for standard password
Encryptor for queryable text strings using aes encryption.
Write the X - Frame - Options headers to the response.
Determine the target url for this request. Subclasses can override this method to customize the target url
Determine target url. Subclasses can override this method to customize the target url.
Sets the target url parameter.
Populate directory with immediate parent populated.
Build a distinguished name from a username
Create shared objects map.
Configure jaas using loop.
Get the current date as a string.
Parse a date using an array of formats.
Add an entry to the cache. If the cache is full clear it first.
Set authentication details to the request.
Get security name.
Get list of groups for the given security name.
Build a distinguished name from a group string.
Throws session authentication exception if maximum number of sessions has been exceeded.
Copy details from one authentication token to another.
Returns the first filter chain that matches the given request.
get list of filters for a given url
Get the application context from the page context.
Get the full distinguished name from a distinguished name.
Update session attributes with those provided in the request specification.
Returns a basic authentication scheme for the given user name and password.
Add the specified filters to the list of filters.
Add a filter to be added to the list of filters. If the filter is null then the
Create a basic authentication scheme.
Create an authentication scheme for NTLM authentication.
Creates an authentication scheme for a user using a form authentication config.
Specify the URI of a proxy server.
Print a response options and response body to a string.
Redirect to another config
Sets the charset to use when sending the request.
Configure object mapper to use a specific type.
add jaxb object mapper factory
new rest assured mock mvc config
new rest assured mock mvc config with session
new rest assured mock mvc config
REST assured mock mvc config json config
new rest assured mock mvc config with xml config
rest assured mock mvc config.
header config rest assured mock mvc config
REST assured mock mvc config async config
rest assured mock mvc config.
add multi part config rest assured mock mvc config
rest assured mock mvc config param config
rest assured mock mvc config matcher
Set the certificate auth settings to allow all hostnames.
Declare the namespaces for the path.
new xml path config with declared namespaces
Issues an HTTP request to the configured URI using the configuration closure handling the request body as the
Sets the headers for this request.
Specify a proxy for this client
Sets the name of the control.
Adds a header to the multi part spec.
Performs an HTTP basic authentication on the given host and port using the given user and password.
Perform NTLM authentication for the given host port user and password.
Create a new headers object with the given header.
Reset all the static variables to their default values.
Add a header that will be in the response.
Build the final response object.
Add a value matcher to a cookie.
Add a comment matcher to a given cookie.
Matches the expiry date of the cookie.
Add a domain matcher to a cookie.
Add a path matcher to a cookie.
Add a secured matcher to the set of existing cookies.
Matches a cookie header value with the given matcher.
The version of the cookie defined by the given matcher.
The max age for the cookie in the request header.
Adds an expectation for an exact header matching the given name and value.
Adds an expectation for an HTTP response header
Expect the provided cookie to be present in the response.
Returns a proxy specification with the given host.
new json path config with number return type
new json path config with default parser type
Provide the default stream for the server.
enable logging of requests and responses if validation fails
http request base factory
Set default boundary for multipart request.
Adds an attribute to the spec.
Add a header to the request.
Adds a multi part control.
Adds one or more result handlers to the spec.
Set a parameter for the http client.
add http client params
config http client factory
Configure multipart upload mode.
Perform a GET request and return the result.
}
return null
return 0 ;
Get the float.
Gets the double.
}
Get a list of values for the given path.
Get the value for the given path as a map.
Get the first node matching the given path as an object. The type of the object returned is
Adds an object to the body.
Adds a cookie to the spec.
Adds a parameter to the spec.
Adds a parameter to the spec.
Generates a mockMvc param config with the given values for the update strategy.
Matches the response to the given matcher and prints the response to the given stream.
Create a new cookies collection with the specified cookie adder and additional cookies
Clean up the backing multiset for the given set of keys and sources
Indexes all the explicit bindings by type literal.
jit limitation jit type )
{ return null }
Attempt to clean up the dependencies of the given binding.
Remove a failed jit binding.
Returns the internal dependencies of the binding.
Create uninitialized binding.
Provide an array of all the injectors in the order they would be provided.
Create a binding that will be passed to the constructor of the injector
Create a logger provider and bind it to the injector.
Returns true if the member member has a misplaced binding annotation.
; }
Sets the delegate injector instance.
{ return ; }
Resolve all the types in the given array.
Canonicalize a type literal according to the javac specifications.
{ }
Canonicalize the given class loader. If the given loader is null we use the system bridge
Returns true if cglib and the specified class loader are compatible with the current version of c
Checks whether the given member is publicly callable i. e. whether it is public or not.
Returns a key with the same type literal and annotation type as the given key but with the annotation
Manually request an injection from the given source.
Validates all pending injections.
Create a new instance of the target constructor with the given arguments.
Scope a factory with the given key and source.
Make scoping injectable.
Removes leading and trailing query string from the supplied path.
Gets a generated annotation.
Checks whether the given annotation is retained at runtime.
Returns the first matching scope annotation in the given annotations.
Returns the key for the given annotation or null if the key does not exist.
Returns the name of the given key.
Sets the delegate provider.
Add a direct type binding to the given binder
Return the cached instance of the given constructor injector.
Check if an interceptor class has a scope annotation.
creates real map binder with given binder
Get a key for a new value.
Provision a single instance of a class.
Returns a new message that is equivalent to this one but with the original contents untouched.
;
Gets all methods the user has access to.
Checks if the type literal is not specified in the exception.
Checks whether the given constructor has a matching parameter types.
Returns the dependencies of the given implementation.
Remove assisted dependencies from the given set of dependencies.
Optimized injection strategy for the case where no explicit dependencies were found.
Returns the binding from the injector for the given method and arguments.
{ return null }
Add a hint for an implementation by key.
Create a new real multibinder with the given binder and key
Returns the key for a new instance of the element type.
Find the next filter matching the given request.
Check if a constructor has at inject annotation
Get internal constructor injection point.
Returns the set of internal dependencies associated with this factory as a set of dependencies.
Create a module instance for the given module instance and method scanner.
Returns the first annotation found on the method or null.
Returns the line number of the given member.
Initialize the injector.
Returns the canonicalized object for the given key. If the object is null or an instance of
) ;
Creates a new injector for the given type.
Builds the injectors for the given set of injection points.
Static factory method to create a new key for the specified class with the specified annotation strategy.
Returns an annotation strategy for the given annotation.
Returns an annotation strategy for the given annotation type.
Remove internal classes from the stack trace of the given throwable.
The source of the binding.
Create a static logger message from the given message format and arguments.
Creates a formatted message for the given cause and message format.
Create a new JSON - RPC message instance with the given message format and arguments
Converts the given object to an element. If the object is an element source then the declaring source
Returns true if the class should be skipped.
Gets a source from a given list of class names.
Entry point for the example application.
Replace current dependency with new one and pushes old dependency state to stack.
Pushes the state for the given key and source.
Returns an initializable that gets the value of the given instance and converts it to a string
Provision a value.
Process the connection event.
Adds a connection event processor to the pipeline. This method will create a new list if the processor
Get the result of the given future task.
Throws checked exceptions in unhandled cases of checked exceptions. Throws runtime exceptions in unhandled
Register processor.
Registers the processor as the default if no other processor is registered.
Gets the processor for a given command.
Attempt to get the url from the registry.
Decode the protocol code if present.
get all connections from all connection pools
Scan connections from all connection pools.
Creates a connection if absent.
throws IOException { }
Removes a connection pool from the pool map.
Heal the connection if need.
Do the create.
Remove a connection from the connection manager.
close the connection to the remote node
Close the connection.
Set attribute if absent.
Register a user processor in the user processors hash map
Register user processor.
Processes the given rpc command to the user.
Attempt to deserialize the given request command.
Pre process remoting context.
Log timeout information.
Debugging log.
Overrides the default implementation to execute a task based on the configured executor service.
Handles one - way communication with the client.
Converts a bitset to a byte.
Converts an integer to a bit set.
add a reconnect task to the queue
convert a object to a command
filter the connections
Close fresh select connections.
system properties boolean
Log info message.
check whether the request timed out
Get user processor by class name
Returns a random connection from the given list of connections.
Get a value from the context or default if not found.
Get the value for a given property.
Resolves the given response command to an object.
convert response command to response object
Decodes the rpc response and returns the exception if it is a throwable.
Get detailed error msg from rpc response
Create an rpc server exception from a throwable.
Log connection details.
Create a new event loop group with the specified number of threads and thread factory.
Extract the remote address from the remote side of the channel.
Parse the local address of the given channel.
Get the remote IP address of the target server of the channel.
Returns the remote host name of the remote peer of the specified channel.
Get the local IP address of the target server of the channel.
Get the remote port that the channel is connected to.
Return the port of the local endpoint of the channel or - num if the channel is null or
Parse socket address to hostname.
Add a connection to the pool.
Remove a connection from the manager and close it.
Register a custom serializer.
get custom serializer by class name.
Register a custom serializer for the given command code.
Get custom serializer for a given code.
Check whether the remote address is connected.
Initializes the write buffer water mark.
Creates a frame object for the given opcode.
send all available data to the client
Sets the code.
Checks that the payload is a valid UTF - 8 string.
Updates the payload in the header.
Checks whether the handshake state contains the requested protocol.
Throws an exception if the length exceeds the maximum length of a single frame.
Translate single frame check size.
Generate the final key.
Processes a frame that was continuously received and is not a fin.
Process binary frame.
Log a runtime exception.
Processes a text frame.
Processes the next frame that was received.
Processes the next frame that is not a fin.
Processes a closing frame.
Checks that the buffer list is not exceeding the limit. If it is an exception is thrown.
Get the payload from the list of buffers.
Get the total number of buffers in the list.
Attempt to translate the first line of a HTTP or HTTPS handshake into a proper handshake builder
Attempt to translate the first line of an HTTP client into a handshake builder.
Decode the socket from the given buffer.
Sends an http response and closes the connection with an exception.
Sends an internal error response and closes the connection.
Generate a response due to an error.
Send a text frame to the client.
Interrupts the write thread and the read thread and closes the socket.
Connect the socket to a remote socket.
Returns the port that this request is bound to.
Starts a handshake.
Set the timeout in nanoseconds for the connection lost case.
Stop a lost connection timer.
Start a timer to restart the connection lost case.
restart the connection lost checker
Execute connection lost detection.
Cancel connection lost checker timer if any.
Handshake on a client initiated by a server.
On ping.
Stop the monitor.
Returns the port that this socket is bound to.
Performs additional read operations on the underlying socket connection. This method is not thread safe.
Accept a connection from a client.
Actually read from the socket.
actually write to the socket.
create the web socket selector and server thread bind to address and start the decoders
Ensure that there is a single thread for selector.
Do server shutdown.
get a socket for the connection
Broadcast raw data to all connected clients.
Broadcasts a text message to a set of clients.
Broadcasts the given object to all clients.
If the key is already in the map it is not in the map. If the key is
Transfers the contents of the source buffer to the destination buffer. The contents of the destination buffer
Initialize jpa instance from config.
Get entity manager by name.
Executes the given block within a new transaction in the current thread.
Convert arguments to a buffer
If the last argument is a list then wrap it in a list. If the last argument is
Retrieve localized message for the given language.
Retrieve the translation for the provided keys.
Check if a message is defined in a specific language
Return a new messages object with a list of preferred languages from the supplied collection of languages.
Get the messages for the preferred language based on the request header information.
Set the language of a result.
Add the bindings for the given modules.
Add the bindings for the given modules.
Set explicit bindings for all guiceable bindings.
Specify the modules that the returned object should override.
Add overrides for the given modules.
Provides a list of overrides for the binding types in the guiceable.
Enable the given modules.
{ }
Gets an existing file from the environment or null if the file does not exist.
Gets the annotation instance for the given scope.
Static factory method for creating a new tuple
Static factory method for creating a 5 - element HList.
Convert from an execution context to an executor if necessary.
Creates a new JPA instance with the given name and unit
Static factory method to create a jpa descriptor
Creates a new jpa instance from the given map.
Pass a string down a chain to a callback accepting a byte string
create a json flow from a json node
Add mapped constraint validator.
Returns a new instance for the given key.
Get accessible method get matching method.
Invoked when a client error occurs.
Asynchronous handling of a bad request.
Override to customize the behavior of a forbidden request.
Render a not found page for the given request.
Invoked when a server error occurs.
Log a server error.
convert throwable to useful exception.
Override for custom error handling.
Invoked when an error occurs on the production server.
Create a handler from a list of files and directories.
Creates a handler from a directory.
Build doc handler from directory and jar file
Create a handler from a directory and jar file.
Builds a handler from a jar file
Consume the data.
Convert a content object to an http entity.
Construct a http entity from a string.
Create a new http entity with a chunked body with the given data.
Generate a result with the specified status and the specified json node.
Send a JSON response with status and the specified content.
Creates a new result with the given status code and the given content.
Send a status with the given status code and the given content and the given content length.
Write a file with the given status code and content.
Find user by id.
Select the preferred language from the given candidates.
This method returns a new MVC call with the same parameters as this one but with a unique
Creates a new mvc call with a fragment
Returns the absolute url for the given request.
Returns a full URL for the web socket connection based on the given request.
Return a connection function that executes the given block for the given connection.
Create a connection function that execute the given block within the context of a connection.
Create a server instance for the given mode and port.
Convert an object to a json node.
json to a
Parse a json string into a json node.
Parse a stream to a json node tree.
} }
Returns the canonical version of the given URL.
Convert a set of constraints to a list of displayable values
Returns a tuple containing a display annotation for the given constraint.
Timeout the completion stage with the specified time limit.
Parse the given cron expression and return the next date.
Calculate the next interval using the given cron expression
Create a new WS instance with the provided configuration.
Return a new guice application builder that will be used by this builder.
Create a todo page
Add a value to the current session.
Flash a value to the session.
QUALIFIED_KEY ;
Provide a binding key for the annotation type determined by the type of the annotation.
Convert the binding to an implementation of the given class.
Create a binding that transforms the value of the underlying binding into the given provider.
Create a binding that uses the supplied instance for the value.
Bind to a given key.
Create a binding that uses the supplied provider when creating a binding.
Provide a list of available languages from the application.
Select the preferred lang from a list of available langs
Convert a map of evolutions to a play evolutions reader instance
Return a new evolution reader with the specified evolutions.
Clean up the evolutions of a database.
guice application builder with custom config loader.
Facilitates loading guice modules via a loader function.
Load one or more modules.
Load Guice modules with default constructor
Add play api inject modules to application builder.
Add the given bindings to the Guice application.
Override this method to inject a custom guice application builder.
Get the encoded version of the supplied cookie.
Retrieves the entity manager on the top of the entity manager stack.
Returns the current entity manager stack for the current thread. If the current thread local fallback is true
Push an entity manager on top of the entity stack of the current one. If the current entity
Simulates a pipeline where the input and output are split up into a single stream and the
) { ( ( ) ) ) ) ; }
Convert error arguments.
fill a form with the given value
Gets the global errors for all fields that have no errors.
Convert node errors to json
Extract a value from the wrapped value or null if the key is absent.
Return a new form based on the values in the provided map
Parse the given text into an object of the given type.
Parse a string into a type.
Prints the given type to the output.
Prints a single field value.
Prints a type to a string.
Add a converter for optional fields.
Register a simple formatter for the given field type.
Convert a cookie to its string representation.
Create a new node list from a given path and node.
Convert a java. util. List to a scala. collection. immutable. seq
Returns a scala. collection. immutable. seq backed by the specified array.
Varargs convert an array of objects to a scala. collection. immutable. seq
Acceptor that accepts JSON messages.
Create a new web socket accepting or returning a result.
Returns the primitive promotion cost of a class.
Calculate the total cost of the transformation.
Calculates the cost of an object transformation.
Get the translation of the given language and key
Get the translation of a given key
Create a new database from the given configuration.
Create a parallel sorter for the given arrays.
Sorts the specified range of the receiver into ascending order. The sorting algorithm is a tuned
Sorts the specified range of the receiver into ascending order. The sorting algorithm is a tuned
overrides the default implementation for the invocation method.
Loads the argument at the given index.
Emit a field instruction.
Pushes a zero onto the stack depending on the type of the argument. If the type is
unbox the value or zero if the value is null.
Generate code to process an array.
Emits code to compare a null with a null. Assumes that the null is not equal
Find all the bridge methods that are being called with invokespecial & returns their output
This method filters the list of constructors for the supplied class.
Sets the superclass of the class.
Get the value of a field.
Adds a new method to the set of methods to check.
Returns the number of bits set to 1.
Set naming policy.
Find methods by name and descriptor.
Resolves a child path against a base path. The child path is assumed to start with the
Read the file content as a string.
Sets the host header.
Create new http request with method and destination.
Creates a new connect request.
Creates a new GET request.
Creates a new POST request.
Creates a new PUT request.
Creates a new http request with the method PATCH and the specified destination.
Creates a new DELETE request.
Creates a new HTTP request for the HEAD method.
Creates a new HTTP request with the HTTP method trace and the specified destination.
Creates a new http request with the method set to OPTIONS and the destination provided
}
Add many cookies to the request.
Add a query param to the url.
Sets the query parameters for the HTTP request.
Sets the http request query string.
Gets the current query as a string.
URL of the port.
Set authorization header with username and password.
Sets the host header.
} }
Removes the range between start and end from the given handler.
Calculates the length of the exception table in this set of exception handlers.
Collects the action interceptors.
Collects the action filters.
Collects the results of the action.
Collects action runtimes.
Sets a simple property.
Returns the property value for the given name.
Extract this reference from the property name
get writer.
Adds an object reference.
Returns an object reference.
Looks up an object by reference.
get table descriptor by table ref.
find table descriptor by column ref
Gets the alias for a table reference.
Register table reference.
Returns the entity descriptor for a table reference.
Register a custom hint.
return true ; }
Inject the servlet request attributes into the given targets.
Inject parameters into the servlet request.
Inject uploaded files.
Convert property name to column name.
Convert a column name to a property name.
Apply the operator to the given column name.
Stores an object in the prepared statement.
Convert the given value to the correct type.
Get all the elements in the map.
Looks up the wrapper instance for the given wrapper class. If a wrapper with the same name
create a new wrapper for the given class
Converts all separators to the system separator.
Does the work of getting the path.
Splits a filename into the prefix path base name and extension.
Returns target path relative to base path.
Register a component with the web application.
Register action config.
Start the web app
Register the components with the container.
Add jars to be excluded from scanner.
Add jars to be scanned.
Add a list of entries to the scanner.
Add a list of excluded entries to the scanner.
Scan jar file.
Scan class path.
Returns a bytecode signature for a type.
Add files to scan.
Start the detector.
creates a new transaction.
Get or create a scope of a given type.
Get or init the scope of a given type.
Register a scope consumer for a specific scope type.
Create a unique CSRF token in the session.
Ensure the set size is at least max tokens per session.
Check csrf token in session.
Create a new bean copy based on the source bean.
copy the bean to the visitor
Visit a property.
Set up the table reference for the current template data.
Resolve scope of given type.
Register a bean with the petite bean resolver.
Register bean.
{ }
Resolve bean names for the given type.
Register ctor injection point.
Registers a property injection point for a given bean with the given name.
Register set injection point.
Registers a method injection point for a bean with given name.
Register init methods for a given bean name.
Register destroy methods for the given bean name.
Registers a provider for a particular bean and method name.
Registers a provider for a class.
Iterate over the bean definitions of the given type. The consumer will be called with the bean name
Define parameters from property map.
Intercept the request and return the result.
Resolve java version.
PUSH int.
Checks that the argument at the given index is in the method info.
Create proxetta advice field name.
Advice method name.
Generates the instructions to load all the special method arguments on the stack.
Loads the method arguments of the given method.
Loads the method arguments of the given method.
Generates the instruction to load the method argument at the given index.
Makes the given method visitor visit the specified argument of the method.
Prepares the return value of a method.
Create method signatures key string.
Visits an array of the given component type.
store into an array
Extract encoding from the content type and return the default encoding if the content type could not be extracted
Checks whether flags are empty.
Resolve auth bearer token.
Sends a 401 error to the client. This forces the server to authenticate the client with the
Send file download response.
Set response headers based on file name mime type and size if needed.
Get all the cookies for the given name.
Read the request body from the reader of the given request.
Read request body from stream.
store context path of request and servlet context
Store the current context path as a servlet context attribute.
Check if the given request parameter is a GET parameter.
Prepare query parameters.
Copy parameters from the servlet request to the request attributes.
Invokes the body of the given fragment.
Render the JSP body into a char array.
render the given jsp fragment as a string.
Invoke init methods.
Call destroy methods on the bean
create a new bean instance
Inject params only if the bean does not have a name.
Rewrite action path.
Add a header. If there are already headers with the name and value pair set then the value
Put a new value into the props map
Put base property.
Put profile property.
Get profile property.
{ }
Extract into a target map. This method will return an empty map if the target is null.
Cyclically extract a word of key material
Hash a password using the specified salt.
Check that a plaintext password matches a previously hashed one
Copies all of the bytes from the input stream to the output stream.
Copies max bytes from the current position to the output stream.
action parser.
Resolve action config for given annotation.
Detect and register alias.
Read action interceptors from the given annotated element.
Read action filters from the given annotated element.
Read class package action path.
) { }
Parse method alias.
create action runtime.
If the last modified date has passed since the request it will set the response status to 304
Applies advice to given class.
Inject target into proxy object
Visits an annotation of the field.
Resolve real name from name.
Resolve json name to real name
Looks up type data for a class.
Looks up type data for a class.
Find subclass type data.
Resolve json name for the given class.
Resolve real name for the given class and json name
Returns the file content.
) { }
Sets the major version and the class name and adds the constant to the constant pool of the
Puts the current constant pool state into the specified byte vector.
Put the bootstrap methods of this option into the given byte vector.
Adds a field reference to the symbol.
Adds a method ref to the symbol table.
Adds a new constant reference.
Adds a new constant reference.
Adds an integer or float constant to the symbol table.
Adds a new CONSTANT_Float_info or CONSTANT_Float_info to the constant
Adds a new CONSTANT or double constant.
Adds a new CONSTANT_Double_info or CONSTANT_Double_info to the constant
Adds a new constant. Returns the constant index of the new constant.
Adds a new constant to the constant pool of this symbol table.
Adds the given string constant to this set if it is not already present.
Adds a new constant value to the constant pool of this symbol table.
Adds a new constant method handle to the symbol table.
Add static initializer for a dynamic field.
Add a dynamic invoke dynamic reference.
Adds a reference to the constant pool of the given tag with the given name, type and bootstrap
Adds a new constant or invoke dynamic reference.
Adds a reference to the symbol table. If the reference is already in the symbol table it is
Adds a new reference to the constant pool of this symbol table.
Adds a bootstrap method to the symbol table.
) ; }
Returns a hash value for name.
remove all elements in the multimap
Get all values for the given key.
Returns an iterator over the elements in this list in proper sequence.
Return a list of all the entries in the list.
Grows the buffer by at least the given number of bits.
Appends the characters in the specified character sequence to this buffer.
Visits a nested annotation value of the method.
Creates the first chain delegate and the rest of the method invocations.
{ }
Creates the first chain for the delegate.
Parse path.
Adds a field to the current path.
Configure servlet context
Execute the action.
get all field descriptors ordered by field name
Use proxetta proxy if available otherwise delegate to super super implementation
Convert JTA transaction mode to db mode.
Read a property from the source object.
Copies all of the mappings from the specified map to this one. These mappings replace any mappings
return this ; }
Write the contents of this buffer to a writer.
Write the buffer contents to an output stream.
IOException { }
Get string.
Get integer.
Get long.
Get double.
Return the float value or null.
Returns the value associated with the given key.
put a new value to the object
Use the given folder.
Returns an array of email messages that match the given filter. If envelope is set the messages will
Updates the flags for the given email.
Closes a folder if it has been opened.
Returns the named parameter with the given name.
Validate action.
Add validation violation.
Set the mime type of the raw data.
make this raw data downloadable as a file.
Sets the target.
Sets target.
Set target class to be processed.
Processes the request and throws an exception if there is no input stream.
Creates the class and returns the byte array of the class definition
Creates a new proxetta class instance.
Dump the byte array to a file in the debug folder.
set the from address of the contact
Add a recipient email address.
Adds a TO address to the list of recipients.
The email addresses to reply to.
Set cc recipients.
Send a text message.
Create a html message.
Add a header to the response.
Get the string property or the default value.
Returns the boolean value for the given name. If the name does not exist or the value for
Returns the long representation of the value for the given name. If the name does not exist or
Returns the long representation of the value. If the name does not exist or the value for the
Returns the resolved method parameters.
serialize a single key value pair
Looks up the action path for the given alias.
Resolve alias for given value.
Resolve result path.
Resolve result path string.
Gets the last index of a trailing dot in a string. If no trailing dot is found return
Returns the index of the last occurrence of a dot after a slash.
Returns the index of the first occurrence of a dot after a slash.
Resolve schema name.
db entity property descriptor resolve column descriptors.
Initialize the HMAC with the given key and tweak.
Increase by x [ j ] and store the result in y
Demix the nth element of y.
Schedules the next key events
Initialize this cipher with a message and a couple of tweaks.
Encrypt the given block starting at the given offset.
Convert a number of unsigned bytes to an array of longs.
Remove any bounding chars from string.
Returns the path of the request.
Returns a zlib version of the specified file.
Compress a file with the gzip algorithm.
Ungzip a file.
Returns a list of the entries in the specified zip file.
Unzip a file to a directory using a specified pattern.
Adds a file or directory to the zip stream.
Adds a file to the zip output stream.
Returns the field descriptor for the given name if it exists and is declared.
Returns the property descriptor with the given name.
Sets the request bundle name.
Sets session locale.
get session locale.
Filter parameters for a bean name.
Add more than one profile to the existing set of properties.
Get a little endian long from the buffer
Read input stream into byte array.
Reads a label.
Returns the bytecode of the type annotation at the given index.
Read bootstrap methods attribute.
Returns a ctor descriptor for each constructor declared on the class.
Returns the ctor descriptor that matches the specified arguments.
Get request map.
Create request map.
Convert array to array.
throws ServletException
Add file to the search path.
Add file to the search path.
Add include patterns to the find file.
Add a pattern to be excluded from the find file.
Add a path to the finder.
Returns all found files.
Initialize the iterator.
Returns an iterator over the elements in this directory in proper sequence.
Resolve bean wiring mode.
Resolve bean name string.
Returns a writer that can be used to write to this string.
Get output stream.
Returns the class name of the type.
Get constructor descriptor string.
Get method descriptor string.
Returns the descriptor of the given method.
Append the descriptor corresponding to this type to the given string builder.
Returns the number of elements in this list.
Gets the number of arguments and return sizes.
Set rollback only.
Commit or rollback the current transaction depending on whether a commit or rollback is requested.
Rollback all resources.
Obtain a resource of the specified type from this transaction. If the transaction has not yet started a
This method pops a name from the stack.
Write a string to the stream.
Write unicode code point.
Write a character sequence to the output stream without the trailing newline.
The name of the log level that should be used for error messages.
Start a new region.
Check if the value contains the given string.
Register pseudo function.
Look up a pseudo function.
Visit the header of the class.
Visits a nested annotation value of the annotation.
Generate the static init block.
Generate the proxy constructor
Processes all the super methods that were found in the given class.
Find the last num in a range of integers
Add prefix and suffix to string
Replaces the asm instructions in the class file with the new instructions.
Returns an array of all attribute prototypes for all fields and methods.
Register a new type.
Returns the SQL type for the given class or null if it can t be found.
returns the sql type for the class
Create socks4 proxy info.
Create socks5 proxy info.
info http proxy
Returns the total number of transactions in the stack.
Count the number of transactions in the stack with a specific status.
Associate a transaction with the current thread.
Continue a single transaction.
{ return null }
Create a proxy object for the target class
Appends a name to the end of the path.
Align the text to the left with specified padding. If the text is longer than the specified
Convert a string to a camel case string.
Cuts the given string from the given number of characters to the given number of characters.
Convert tabs to spaces.
Convert a string to a Java string literal.
Unescape java.
Returns the bean of the given type.
{ return
{ }
return provider ; }
Adds a new bean to the container.
Sets a bean property.
Get bean property.
Shutdown the bean manager clean up all internal state and release all resources.
Resolve the method parameter types with the given access object.
Prints the body of the JSP without any HTML tags.
Get the property value.
Add an end tag.
Create element node from tag.
Remove last child node if empty text.
Get the full query string.
Resolve action class name.
Calculates the destination index.
Replaces all occurrences of a string in a string.
Replaces all occurrences of a character in a string.
Replaces all the occurrences of a characters in a string.
Replaces the very first occurrence of a substring with supplied string.
Replaces the very first occurrence of a character in a string.
Replaces the very last occurrence of a substring with supplied string.
Replaces the very last occurrence of a character with a character.
Removes all occurrences of the given substring.
Removes the specified character from the specified string.
Check if any of the strings are empty
Check if any of the strings are blank
Converts the specified object to an array of strings.
Changes the first character of the string.
Return a copy of the string in title case.
Compress the given string for the given character.
Checks if a string starts with another string ignoring case.
Check if string ends with char.
Count the number of instances of a substring in a string ignoring case.
Compares two strings ignoring case.
Returns the index of the first whitespace character in the given string from the given index. Returns -
Strip leading char.
Strip trailing char.
Removes the given character from the given string. If the given string is longer than the given string
Strips everything from the right side of the string that starts with character c.
Strips the string from the first instance of the given character.
Modifies all strings in the array to have the same size.
Removes all whitespace characters from the left side of the string.
Returns a string with whitespaces removed.
Returns the index of the first occurrence of the specified left boundary and right boundary.
Join a collection of strings with a separator.
Join an array of objects using a separator.
Converts a string from one charset to another.
Checks if the character at the given index is equal to the given char.
Surround a string with a prefix and suffix if it does not already start with the prefix.
If the given string starts with the given prefix add it to the beginning of the string.
Appends the given string to the end of the string if the string does not end with the
Cuts the string from the given index of the given substring.
Cuts the string from the index of the given substring.
Cuts prefix if present.
Cuts the suffix from the string.
Cuts a string around a prefix and suffix.
Inserts a string into another string at a given offset.
Repeat a string a number of times.
Reverse a string.
Returns the maximum common prefix of two strings.
Find the common prefix of the given strings.
Shorten a string to a specified length by adding a suffix.
Convert a string to upper case according to the specified locale.
Removes any surrounding quotes from the string.
Convert an array of bytes to a string of hexadecimal values
Gets the string as a byte array using the default character encoding
Detect quote char.
Visits an enumeration value of the annotation.
Visits a nested annotation value of the annotation.
Register entity type.
Registers the entity for the given type.
Removes the entity descriptor of the given type and creates a new one if necessary.
Creates a new entity instance of the given type.
Sets the target interface for the proxetta factory.
Inject target into wrapper field name.
Lookup the property descriptors for the given class.
Configure db oom database server.
Flushes and closes the underlying stream.
Write a byte to the stream.
Invalidates the session when the request is made.
Gets the encoded name of the mail.
Returns this element as a byte array. The returned array is a copy and any modifications made
Copies the message to a specified destination.
Send the message to a given stream.
Appends a type argument to the end of the string.
Prepends a type argument to the end of the formatted descriptor.
Change return type.
Overriden to automatically strip whitespace from the end of the text.
Register a custom type converter for a specific type.
Lookup a converter for a given type.
Select nodes matching a query.
Select node collection.
Processes selectors and adds them to the results.
Execute a query and return the first node.
Walk the list of nodes and add each node to result.
= null ; }
= null ; }
Unpacks the compressed character translation table.
Refills the input buffer.
Return a single page of the result set.
remove select statement from sql
remove to... from...
remove the last order by statement from the sql statement
Replaces all the occurrences of the given HTML tag with the given string.
Detects a name from an input.
Build an SQL ORDER BY clause
Add select statement to sql and page number sql.
resolve columns and properties for a given class
Find by column name.
Find by property name.
Returns the property name of the entity with the specified name.
Gets column name for a property.
Gets the id value.
Sets the id value of the object.
Get key value string.
Appends a string to the band of a null or empty string.
Set the index of this array to the given index.
Expands the capacity to the current maximum.
Calculates the length of the FIFO.
Create mixing error message.
Creates a scoped proxy bean of the given type.
Initializes the statistics for the directory.
Whether to include the given file as a source.
Use watch file.
Start monitoring the input stream.
on change event.
Adds an enumeration to this composite.
;
Put field info.
Creates a new target for the given value.
Write property value.
Parse decora tags and write result to writer.
Parse page.
Write decorated page.
Write out a block region.
Start the server and accept incoming connections.
Run a process and wait for it to finish.
Create an imapssl resource.
Create a new GZIP output stream.
Initialize the template with the given data
Append column name.
Adds a rule to the rule set.
Applies the rule set to the given value.
Process includes.
Process excludes rules.
Get pseudo class name.
Add all elements in the given collection to this store.
Find the index where an element should be inserted.
Bind action config for an annotation.
Register new action configuration.
Lookup action config.
Invoke the consumer with the given action config type.
Setup the system properties.
Validates the field with the given name.
Find last table.
} } }
Create and register session beans and return a mapping of session bean name to bean data.
Get session map.
Initialize class fields.
Add advice init method name.
Ends the process of registering a bundle for the new action.
) { } }
Extract profiles and add to the key if the key is not already present.
Add a value to the map if the operator is not copy.
Convert a typedesc string to a class name.
Returns the typeref2 name for the given type descriptor.
Convert a class to a human - readable type reference.
Add all consumers.
Creates a new collection of the given length.
Convert object to single element collection.
Convert object to collection.
Convert a collection to a collection
add a new line number to the current one.
Makes the given visitor visit this label.
Put in the given byte vector.
Add a forward reference to the list of forward references.
) { }
Compare digit.
Fix accent.
Puts a byte into this byte vector. The byte vector is automatically enlarged if necessary.
Puts two bytes into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a short into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a byte and a short into this byte vector. The byte vector is automatically enlarged
Puts a short into this byte vector. The byte vector is automatically enlarged if necessary.
Puts an int into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a value and two shorts into the vector.
Puts a long into this byte vector. The byte vector is automatically enlarged if necessary.
Puts an array of bytes into this byte vector. The byte vector is automatically enlarged if
Enlarge this byte vector so that it can contain given size.
Authenticate user via http session.
Authenticate user by token.
Authenticate user via basic auth.
Finds the default message for the given key.
Get a resource bundle.
get value from a sub - array.
Sets the id value for the entity
Save an entity to the database.
Update the given entity in the database.
Update the given property of the given entity.
Update property or entity with new value
Find a single entity by its id.
Find one entity by a given property value.
Find a single entity matching the criteria or null if there are none.
Delete an entity by id.
Delete an entity by id.
Count the number of oom entities for a given type.
Increase a property by a given delta.
Decrement a property by a given delta.
Find all the entities related to the given target and source.
Get a list of all the entities in the database.
Clear all entries from the map.
Returns a set of entry for each attribute.
Puts an object into the map.
Removes the entry for the specified key.
Returns the current stack trace.
Gets the stack trace of a throwable as array of stack trace elements.
Get stack traces of a throwable up to a maximum of allow and deny.
Get the exception chain of the given throwable.
Gets the stack trace of an exception as a string.
Returns the stack trace of the throwable as a string.
Build a message for the given message and root cause.
Unwraps a throwable.
Register the consumer as consumer.
Register component class with the madvoc container.
Returns the system class loader.
Get resource as stream.
Get the resource as a stream.
Get class as input stream.
Get class as stream.
Add a new value to this route chunk.
Find or create a child with the given value.
Parse the request.
Convert to collection.
Invoke setter method and convert value if needed
Sets a value into an array.
create a bean property instance
Extract the type of the property.
Expire a session or cookie.
Start the authentication process.
Create a date from a given date.
Create a gregorian calendar from the given local date time.
Define a proxy for a class.
Add the check to the check list if the check is not already present.
Resolve validation context for the class for the given target.
Add class checks.
Collect all annotation checks for a property.
Collect validation checks from ann annotations.
Copy default properties from annotation to destination check
Encode a URI component.
Encodes the given string with the given encoding.
Encode the scheme.
Encode the host name of the URI with the given encoding.
Encode the port with the given encoding.
Uri encode a path.
Encode a string for use in a URI query.
Uri encode a query param.
Encode a URI fragment with the given encoding.
Iterate over the properties of the class and return a mapping of each property name to the property descriptor
Returns an array of all property descriptors.
Gets all the cookies in the message.
Unzip response body
Close the connection to the request.
Override accept to filter out scopes that are singletons singletons and thread local.
Encrypt the given content.
Decrypt the given content.
convert map to bean
Convert all elements of the list to a bean of the given type.
Sets a value for a property on a target object.
Generic generify map.
compare object to another object.
Add a default header.
Sends the specified request and returns the response.
Send http request.
Add default headers.
Read all the cookies from the response.
} }
Send email.
Sets the subject of the message using a mime message.
Sets the sent date in the mime message.
Set the headers on the mime message.
Set people for the message.
throws MessagingException {
Adds the body data.
Set content for the given part.
Create attachment body part.
Extracts the content type from the header.
Saves a result set.
Close all result sets.
Close the query.
Detach the query from the session and close the connection.
Set the fetch size.
Set the maximum number of rows that the query will execute with.
Execute update query.
returns the number of rows affected.
get generated columns.
Gets query string.
create a proxy object from target object with aspect class
Create a collection from an iterator.
Return a stream of the elements returned by the supplied iterator.
Compares the two objects using the nested comparators.
set default wiring mode.
print a message at the out level
get the caller class name.
Returns a shortened version of the class name.
Exclude data types from serialization.
Serializes the object to the appendable.
Serialize an object to a String.
Performs a deep clone using serialization.
Writes an object to a file.
Reads an object from a file.
Converts an object to a byte array.
Converts a byte array to a java object.
Creates the mapping table names for the given types.
Finds the names of the tables that the given types are mapped to.
read a column value from the result set.
This method is used to cache entities for a given result set.
Resolve provider definitions for the given class and method name.
Apply the filter to the table name.
Is connection valid.
Renders a single resource with a response.
Attempt to locate a view that matches the given path.
Get a writer for this response.
Get the output stream for this response.
Writes the content to the response.
Set the content type.
Print the string as the next line of text.
Start a new user session on the configured web application.
Convert a token to a json object.
Perform a login via basic auth.
Convert url path to file.
Create a directory with the specified name.
Create a directory if it does not already exist.
Copies the file from src to dest only if the destination file does not already exist.
Copies the given source directory to the destination directory.
Move file to directory.
Move a file or directory from one place to another.
Deletes all files in the given destination directory.
Read the contents of the given file as a UTF - 8 string.
Read file chars.
Writes chars to a file.
Writes a string to a file.
Append a string to a file.
Read number of bytes from the file.
Write bytes to a destination file.
Append bytes to a file.
Copies the src file to the dest. If the src is a directory the dest file is
Deletes a file or directory.
Create a temporary directory that is a child of the given directory
Returns true if the file is binary.
Checks that the source directory can be copied to the destination directory.
Checks that the source file can be copied to the destination file.
Prints the usage for a given command.
Returns the action method with the given name.
Register action.
Register a new alias and path.
Advances the iterator to the next value. Returns false if there are no more values to
Create a new char array sequence from the specified character array.
Executes the method call.
Match upper case input.
Returns a char sequence of characters of the input from from to index.
Find all the URLs of a given class.
Set the bcc addresses for the email.
Register a serializer for a class type.
Find serializer for a given class.
Parse a request stream and store the results in this object.
Returns the value of the given request parameter or null if such parameter is not present in the request
Gets all the values for a parameter or null if the parameter does not exist.
Get a file upload parameter.
Gets the file uploads for the request param name.
Read the ignore list from the configuration.
parse a string into a sql builder
Find the end of the macro or template.
Count the number of escapes required in a macro.
Build query string.
Parse query string into a map.
{ }
Extract media type string from content type.
Renders the given node to the appendable.
Renders the given node and its children to the appendable.
Configure with servlet context.
Resets the state of this object to its initial state.
If true the parser will use a lazy parser when it s available.
Protected method to replace the type mapping with the mapped type for the given class.
Parse as list.
Parse json into a Map.
Resolves the value if it is an instance of the Supplier.
Skip characters inside an object.
Parse a string.
Parse string content.
Parse unicode.
Parse unquoted string content.
Parse number.
} }
Creates a new empty constructor.
Create a simple method wrapper
Resolves a raw type name from a type name.
Resolve reference for a property descriptor and a reference name.
Convert references from strings to references and validate them.
Read references from annotation on a method or ctor.
Build default references for an executable method
Build default reference.
Method to remove duplicate names in the given array.
Converts an array of references to an array of references.
Convert an annotation value to an array of bean references
Run a joy runtime.
Finds a method with the given name on the given class.
Find a constructor that is assignable from the given parameter types.
Resolve all implemented interfaces of a class.
Compares two parameters.
Force access of an object. This method is idempotent.
Creates a new instance of a class by using a constructor that matches the supplied parameters.
Get all superclasses of a class.
Finds the child class of the given instance in the given parent class and any of its super
Returns a jar file for a given class.
Causes the current Thread to sleep for the specified number of milliseconds. If the current Thread
Causes the current thread to sleep for the maximum value. If the current thread is interrupted
Wait for the specified object to be ready to be used.
Creates a thread factory that daemonizes the created thread and sets the name and priority to the
Returns the value if the supplier is not already initialized.
Visits a parameter of this method.
Visits an annotation of this method.
Visits a field instruction. A field instruction is an instruction that loads or stores the value of
Visits a method instruction. A method instruction is an instruction that invokes a method.
Visit an invoke dynamic insn with the given bootstrap method handle.
Visits a jump instruction. A jump instruction is an instruction that may jump to another instruction.
Visits a number of multia - style instructions. This method will be called for each class
Visits a try catch block.
Convert properties to writer.
Copies data from the input stream to the output stream.
Returns the next element in the iteration.
} }
Joins arrays using type information.
Joins arrays in to one.
Resizes an array to a specific size. Both the number of elements in the array and
Append an element to the end of the array.
Removes a component from the array.
Finds the first occurrence of an element in an array.
Finds the first occurrence of an object in an array.
Finds the first occurrence in an array from specified given position.
Specifies that XHTML tags ( such as &lt ; head&gt ; and &lt
Parse the given content.
Do the actual parsing of the file.
int i ;
Ends the current basic block with no successor.
Collects the prototypes of the attributes.
Inject object into scope.
Register pseudo class.
Lookup pseudo class.
Invoke the action request with the async context
Get all property names for the given type.
overrides the visitor to look for properties that match the blacklist and matching rules.
Return true if the given property name matches the given rule.
{ }
Read filter initialization parameters.
Send the bundle file to the client.
Creates a file for the given bundle ID.
Returns the gzip file for a given file.
Register a bundle for an action.
Creates a digest from a source string.
Create a new bundle if it does not exist yet.
Remove all cached files.
Fix css relative urls.
update column db sql builder.
Create table ref name.
get db session
Convert the value to a single element array.
Parses a trace signature and returns a map of generic names to signature.
Find all field injection points for a given class.
Matches property types to ignored property types.
Open the connection for query execution.
open a new transaction
Indicate that we are finished with the transaction.
Commit a transaction.
roll back a transaction.
Create a properties object from a file.
Creates a new properties instance from the given data.
Load properties from a string.
Returns a subset of the given properties starting with the given prefix optionally striping out the given prefix
Creates a new Properties object loaded from the given template.
Get a property from a map.
Resolve all variables in a properties
Resolve property value.
Resolve a scope for the class and method name.
Returns the transaction mode for a given method. If the method does not exist in the map it
Register an array of annotations.
Read transaction annotation for a given method.
} }
Match element.
) { } }
Unescape a value
Build the list of JRE packages for the given java version.
{ }
Detach this node from its parent.
Add child nodes to this node.
Insert a new child node at the given index.
Insert a new child node before the given child node.
Insert the given new childs before the given child.
Insert a new child after the current child
Insert the given new childs after the given child.
Removes all child nodes and element nodes of this node.
Find child node by name.
Return the subset of the children that match the predicate.
Returns true if this composite is not empty.
Initializes the child element nodes array.
This method initializes sibling names field.
Initialize the child nodes.
Sets the owner document of the node and all of its children to the given document.
Returns the previous sibling name.
Returns the current text content of this node including its child nodes.
Returns the inner html of the current node.
Visit all the children of this node.
Get the full CSS path for the node.
Process decora tags.
Called when the id attribute is started.
Define decora tag.
Add proxy aspect
Add a root package to the list of packages and mapping.
Add root package of this class.
Find root package for action path.
Resolve validation message for the given violation.
Remove duplicate names.
add props file name pattern
Execute the consumer for each target.
Traverse each injection point in the scope and invoke the consumer for each target and injection point.
Iterate over all targets and injection points of the given scope.
Return an array of the parameters for this link.
return null ; }
return action ; } finally { }
http session created event.
remove the http session from the map.
Add a value to the array.
add values from another json array
Remove an element from the array.
Resolve target.
Handle not found target.
To string.
Register an action filter.
Get pseudo function name.
Resolve property injection points.
Creates a socks4 proxy socket.
Get the number of attributes in this address.
Returns a set of all action results.
Compares the specified character to the specified character ignoring case.
Find the first occurrence of the given sequence that is equal to the given sequence.
Finds the first occurrence of the given character in the given character array starting at the given index
Set the command line arguments
Set environment variable.
Run the process defined by this command.
Invoke the listener.
Copies the contents of the given frame into this one.
Get abstract type from descriptor.
Set input frame from API format.
return 0 ; }
) { }
} }
Push the current type from the given type descriptor.
Pops the given number of types from the output frame stack.
Pops the type from the output frame stack.
) { }
Get initialized type for an abstract type.
Put an abstract type into the given symbol table.
Prunes the cache.
Visits a module. This method will be called only if the current opcode is as.
Visits the outer class of the class. This method must be called only if the class has
Visits an annotation of the class.
get thread session
close current thread session
Creates the execution array.
Invoke action method.
Gets the request body from the request.
Calculates the index of the first item on a page.
Calculate first item index of a given page.
Check if the specified value matches this pattern.
Converts char array into byte array by replacing each digit with bits.
Finds the first different value in a given range of characters in a given array.
Resolve node name.
Resolve attribute name.
Loads properties from a file.
Loads the props from the given file.
Loads properties from the given input stream. The input stream is not closed by this method and
Load props from a map
Load the props from the map. The prefix is added to the name of the property.
Scan default classpath and load properties from them.
Returns the value for the given key. If the key does not exist it will return the default
Sets the value of a property for the given key.
Extract props from the current configuration into the target map.
Extract props from the current properties file into the given target
Extract sub props from the current configuration.
Get a copy of this configuration as a map.
Add inner map.
Resolve active profiles.
Returns an array of all profile names.
Returns a list of all profiles that match a given property name or wildcard
Add a property injection point.
Add a set injection point.
Add method injection point.
Add init method points.
Add destroy method points.
Resolves the target class for a proxy class.
Inject target into wrapper field name.
Returns the target wrapper type.
Find field descriptor.
Returns the type of the field.
Resolve key type.
This method attempts to resolve the component type.
Create a json result from a json object
Return a json result for an exception.
Resolve http method from method name.
private static final int num = 5 ;
Create a loading object for the given class.
{ return null }
Gets the URL of the given resource name.
Blocks until the interval ends or the thread is interrupted
Detect annotation type.
Build injection point.
Visits this type. The type to be visited is obtained by looking up the class descriptor.
for a given class and all of its parent classes return an array of url for all of its
Sets the bean.
Update the underlying bean
Load the property descriptor for the property of this class.
Connect to database and configure oom configuration.
Adds an iterator to this composite.
Prints the logo
stop all the components of the engine
Create a socket.
Create ssl.
Get ssl instance depending on the trust all certificates.
Get socket factory.
Returns a random string consisting of the given number of characters.
Get a number randomly generated string.
Returns a string consisting of randomly selected characters within the specified range.
Creates a new instance of the collection type.
Converts the object to a boolean and calls the appropriate setter method to set the boolean value into the
Convert the specified value to the specified type.
Visits a provide.
Returns the default cache.
Associates the specified value with the specified type. If the map previously contained a mapping for the type
Returns all method descriptors.
Resolve the IP address of a hostname or null if not found.
Parse an IP address string and return as an integer.
Validate againt ip.
Resolve host name by IP address.
Downloads the bytes from a URL.
Download string from URL.
Download a file to the specified file path.
Connects to the given hostname and port.
Connect to a server.
Returns the index of the given primitive class name.
Loads the class with the given name using the given class loader
creates a new instance of the array class by component type
Destroy all registered bean data instances.
Returns a searcher that searches an array for the given element.
Returns a search function that searches an array for the element matching the given comparator.
Add a list of patterns that should be excluded from the resulting patterns.
Add a list of include rules to the existing set of rules.
include a bean properties as the specified class
Sets the start index of the attribute.
Register a component.
Resolve column db sql type.
{ }
Create a new instance of a result set mapper.
Find the first generated key of the given type.
Populate generated keys.
Create a wrapper for a given action interceptor type.
Set bean.
Set the named parameters to the given values.
Add objects to the queue. Objects are copied if they are not already stored.
Insert this SQL chunk after the given previous chunk.
returns the entity descriptor for the class or null if there is none.
find db entity descriptor by column ref
Resolves table alias for the given table reference.
Attempt to resolve the class of the given object.
Append a space if there isn t one.
Returns an enumeration of the file parameter names in the request.
Include a single page.
Gets the url from the request.
Gets the request uri.
Resolve param names in the given action class.
create a new instance and register it
Shuts down the Quartz container.
Filter by subject.
Filter by message id.
Filter by from address.
Filter the email to recipient.
Add cc recipient address.
Add bcc recipient address.
Add a flag to the filter.
Add a single flag to the filter.
Filter the query on received date.
Search for email sent date with the specified time.
Filter by size.
Append the logical AND of the specified filters.
Appends the OR of the specified filters.
Add a NOT search term to the filter.
Concatenates the given term to the current one
Encode a byte array as a base32 string.
{ }
Validates the given target object using the current validation context.
Validate target object with field validation.
Enable a profile.
Use the given profiles.
{ }
Parse the request body into an object.
Convert a time value to milliseconds.
Add another julian date to this one.
Subtract another julian date from this one.
Set the fraction of an integer and its fractional part.
Emit a comment.
print error message with stack trace
{ }
Computes the PBKDF2 hash of the given password.
Converts a hex string representation to a byte array.
Resolve provider definitions.
Set the name of the attachment.
set the value content id from the given file name
Resolve content type.
Parse a type from the given signature.
Calculate attributes size.
; }
Decodes a string with the given encoding.
Decode query string.
Start the database if it is enabled.
Check connection provider.
implements the visitor to find methods
{ } }
Create a method signature visitor for the given method name description and signature.
Convert array of objects to csv string.
Convert a line of text to a string array.
) { }
Creates a reader for advice class.
Returns the cached reader for the given advice creating a new reader if necessary.
Encrypt a string.
Decrypt a string.
Get logger instance by name.
Sets the name of the property.
create action request instance.
Create a wrapper for an action filter.
Calls the destroy methods on the bean data if the type of the bean is destroyable.
Calls the destroy methods of all beans which have been added to this registry.
Get received email messages from the session.
Main entry point to the Kubernetes CLI.
Run the reporting loop.
Print a error message to the console.
Prints the given message rate to the standard output.
Attempts to map an existing file.
Closes the archive and restores the state to the previous closed state.
Perform a single iteration of work.
Return the current position in the log.
Offer a new direct buffer to this partition.
Add padding to the message.
Close the archive. This method is idempotent.
If the control response poller returns an error response or null if the poller returns null,
Stop a replay session.
Prints the information for an available image to stdout.
Prints an event when an image is unavailable.
Returns a reader that can read the status indicator of a channel.
Create a status indicator reader.
Sets the limit.
Append a number of bytes to this buffer.
control session id - > relevant id - > template id - > completed
Create a new mapped byte buffer from a loss report file.
Returns a snapshot of the current counters
Create a header for a new cache file.
Add a key buffer to the message.
Add a label buffer to the message.
Write a connect message to the given channel.
Try to open a connection to the given channel with the given correlation id.
Send a close session request to the peer.
Start a new recording and send it to a specific channel.
Sends a stop recording request to the server and closes the connection.
Send a replay request.
Sends a stop request for a replay session id and control session id.
List the recordings of a specific recording id.
List recordings for uri request.
This method allows to list all messages of a particular recording id.
Extend a previously sent recording to a remote peer.
Retrieves the current recording position of a specific recording.
Sends a request to get the current stop position of a recording.
This method is used to list the existing recording subscriptions in the synchronous mode.
Tests if the given udp channel matches the tag.
Return the inet socket address for the destination uri.
Returns a description of the configuration.
add a destination to the connection list
Insert a new packet into the FASTA.
Find a control toggle from the given counters reader
Adds a string parameter to the request.
Returns the current channel tag.
Get the entity tag.
Add session id to uri of a channel.
Get the tag for the parameter.
Append a padding frame for the given term
Update the publisher limit for the sender.
Allocate a position for the given counters manager from the given direct buffer.
Returns a label for a given message type id.
Scans for available space in the given buffer starting at the given offset.
Reset all of the fields to their defaults.
Validate this URI builder against the current context.
Sets the prefix.
Sets the media to send to the server.
Set the control mode for the channel.
Set the length of the term.
Set the term offset.
Set the linger on the channel uri.
close the connection.
Check if a frame is valid or not.
Receive a datagram packet from the remote host.
Notification about a NAK.
Processes retransmit timeouts.
Convert the status to a string.
Allocate a new atomic counter.
Reset this vector to be the same as this vector.
Throws an exception if this vector is invalid.
Calculate the number of bytes required to encode the given direct buffer vectors.
Calculates term window length.
Validate socket buffer lengths.
Validates the page size.
Validates the session id range.
Validate unblock timeout.
Sets the error response code.
Resets the internal state of this class to the initial state.
Encode cluster members as string.
Add member publications.
Close member publications.
Checks the number of cluster members in the given array to determine if there is an active quorum.
Compute the quorum position of a given set of members.
reset all cluster member log positions
have voters reached a certain position.
check if one of the cluster members has won the vote on a single candidate term.
Check a list of cluster members for a given candidate term.
Determines the member with the given id and endpoints.
Validate that a cluster member has the correct endpoints.
check whether two cluster members have the same endpoints.
Determines whether a candidate is a unanimous member of a set of cluster members.
Check if a candidate is a quorum candidate.
Check if a member has the same endpoints as a given endpoint.
Find the index of a member with a given id in the array.
Remove member by id.
Computes the highest member id of the given cluster members.
Tries to map an existing cnc file to a byte buffer.
Checks whether the CNC file in the given directory exists and if it is longer than the timeout
Checks if the driver is active for the given timeout.
Determines whether the specified CNC file descriptor is active or not.
Request driver termination.
Returns the number of bytes that would be needed to write a volatile frame to the given term.
Puts the given frame length in the buffer at the given term offset.
Write a frame type into the given buffer at the given term offset.
Frame with a given term and flags.
Frame with term offset.
Write a term id frame.
Find a counter id by recording.
Find the current counter id for a given session.
Get the current recording id from meta data.
This method checks if the specified counter id and recording id is active.
Send application specific feedback.
Reloads the configuration from the file.
Find last term in the index.
Create the recovery plan.
create a recovery plan with the given snapshots.
Add a term to the log.
Append a new snapshot event to the log.
commit a new log position for the given leadership term
Add an entry to the tombstone.
Closes the current session and subscription.
Submit a batch of vectors for publication.
Unblock a log meta data stream.
Get the channel name.
Specifies the channel that the message should be sent to.
Checks the length of a term.
Sanity check the page size
CAS active term count.
Computes the position of a given term given the term offset and the number of bits to shift
Computes the log length of a term for the given length and file page size.
Store a default frame header.
Applies a default header to the term buffer.
Rotate log.
This method initialises the tail with the given term id and the number of items stored in the
Returns the index of the term that contains a specified length from a specified tail.
Get the tail of a volatile region.
CAS tail function.
Add a token to an existing direct buffer.
Allocate a counter that uses a mutable direct buffer.
Find the current counter id.
Indicate whether the given counter has a record that has been replayed.
Get snapshot recording id from meta data.
Convert a short into a char array.
Specify the channel that the message should be published on.
Submit a buffer for publication to the cluster.
Wrap a range of an existing buffer.
Commit the current frame to the stream.
Finishes writing the header to the stream.
Entry point for the example application.
Close all connections.
Returns the current position of the term.
Allocate a new counter with the given service id. The counter is not thread safe and
Find the current counter id for a given service.
Allocate a new counter with the given parameters.
This method will close the connection to the input stream.
Dispatch a single recording descriptor.
Increases the slab size if necessary to meet the requirement.
Sets the byte in the specified slab to the specified value.
Add the given statistics to the container.
convert array type.
Convert struct type to parquet type.
Appends the specified number of characters to the end of the message.
pointer -- ; }
Deserialize a single object from the input stream
Get the list of file footers.
Read a parquet summary file.
Returns the parquet metadata from the footer of the specified file.
the next row group.
returns null if there are no more rows to read
If the meta data does not contain encodings for the dictionary or if the meta data is not
Adds a writer to the parquet file allocation.
Remove a writer from the pool.
Updates the allocations. If the total allocations is below the total memory pool threshold a warning
Register a scale call back.
Starts the parsing process.
Start a new block.
Indicates the beginning of a new column.
Write dictionary page to output stream.
Write a data page to the underlying stream.
Finish a block.
Copies the content from one stream to another stream.
Writes the parquet file header and closes the file.
Reads the metadata from the specified files and merges them together into a single parquet metadata
Write parquet metadata from the specified files to the specified output path.
Create a new metadata file and write it to the given path.
Merges the given file meta data into the given merged metadata.
Reads the value of the binding.
Returns true if the given schema has a type that is not null or if the type is a
Similar to SQL coalesce returns the first non - null object in the given array
Convert a string to an object according to a given schema
Construct thrift meta data from extra meta data.
Gets the Thrift meta data from the given Thrift class.
Get the extra meta data for the current thrift result.
Records null values
Write a parquet page to the file.
Set up from an existing byte buffer.
Allocate a value buffer for the next N mini blocks
Check whether the expected enum is present at the given index.
Calculate the width of each bit in each buffer
throw t ; }
Get statistics based on the column type
Create a builder for reading the given primitive type.
Merge statistics.
If the given schema is a union with null type returns that type. Otherwise returns the original schema
Create a new task context
Invokes the given method with the specified arguments.
Generate a string representation of the members of this type.
Create a new list of fields to merge with the given group type.
Initialize the Counters from a reporter
Get the filter from the configuration
Return a list of the footers for all files with the given status.
generate splits for parquet file
Write a single record to the log
Confirm that the parquet schema is compatible for the given group type.
Serialize the descriptor for a given class.
Check that all the events have a required struct with the right thrift type. If so return the
check whether the set is correctly defined
Read file meta data.
Close the writer and release any associated resources.
Set the schema for the given job.
Add a primitive type to a class and associate it with a parquet type.
Throw exception if type is not valid.
Throws an exception if the specified value is not an integer.
Builds a new schema mapping from an existing schema using the fields of the given schema as par
Creates a new schema mapping from a parquet schema
Builds a schema mapping that maps the fields in the parquet schema to the fields in the
Write a data page header.
Skip over records that do not match the current state.
Write the given object to the configuration as a base64 encoded string.
Removes the entry for the given key.
Add the entry to the cache.
Returns the value that is currently mapped to the given key.
Convert the given value to an Avro type using the current model.
Sets the glob pattern.
Output a string to a file
Opens an input stream to the given filename.
Filter a record using a column path and a predicate.
Convert a type to a thrift message type
Recursive creation method for list types. Requires that the type is a repetition.
Create a list of elements from a list repetition.
Gets the merged key value metadata. If the metadata is already computed it is reused.
Get a new split for a file or a file split
Get fields by name
If parquet column index access is enabled use the configured parquet file schema to access the columns
Get the input files from the input string list.
Checks the validity of the given list of files.
Get input files from directory.
create a page filter for a stream.
Create a list consumer that wraps another consumer.
if the plan is greater than the number of tasks to execute then the work is created and initialized
merge all tuples inside a tuple
sum up the tuples with the same number of fields
Read an embedded struct object.
Read a map entry.
Write an integer to the stream.
Reads a little endian int from the given buffer
Set the schema for the given job.
Create a Kafka topic if it does not exist.
Duplicate the given pipeline stage beans and return a new list of the duplicate beans
Create interceptors from a list of interceptor definitions
Creates a new interceptor bean.
Parse a schema from a string.
{ }
Extract an Avro schema from a record header
upgrade v1 to v2
Copies a blobstore to a staging blobstore.
Reset the state of this statement builder.
Adds a thread health report to the metric. Returns true if the metric was updated false otherwise.
Register a thread health monitor
store control hub configurations for a given runtime
Credential login method
Upgrade a configuration from a previous version to a new one
Use the given configuration to upgrade the given configuration.
Upgrades the configuration to the latest version.
Upgrade service configuration if needed
Upgrades a stage from a configuration to a definition.
to null.
Determine whether the given name is a system class in the given package.
Adds the specified element to this queue if it is not already present.
Adds the given element to the queue.
= null ; }
Add errors that have been reported to the pipeline.
Gets the descriptor for a given protobuf message type.
Returns all file descriptors in the set.
Populates the given maps with the default values and file descriptors for the given file descriptors.
( ) { }
Convert a protobuf message to a field protobuf.
Convert a field to a protobuf message.
Convert a field to a protobuf message
Add jersey config bean to list of configs
Check connection issues.
Convert type from kudu type to Spark type.
Creates a field based on the type of the field.
Intercepts the records with the given interceptors.
This method is not thread safe and should only be called from the event thread
Add missing configs to the given configuration
Parses the response and returns the relevant data.
Adds the response headers to the record.
Overwrites the current field with the response header information.
Extract values from response and write them to record header
{ }
Method to configure the client based on configuration issues.
Parses the headers only and returns the resulting string.
Increments the source offset by the given amount.
Parse a paginated result.
Adds the response headers to the header.
Resolve the headers to be sent in the request.
Processes the response of an operation and returns the offset of the first record in the response.
Checks if a property has been defined in the configuration
Converts a libparser exception into a data parser exception.
Convert a data generator exception to a data generator exception.
Gets the credentials from a file.
Override a previously initiated stage of a pipeline.
Copies from current char to buffer and returns the number of characters copied.
Remove logical duplicates in the set of packages
Find the next main line in a chunk
Resolve a single chunk.
Close a connection to the database.
Splits the given string at the given delimiter and escapes the given string at the appropriate times
Builds the flow control settings.
instantiating grpc channel provider.
Consume the batch and add the offset to the result.
Compile the expression into a grok object
Auxiliary method to digest the given expression.
Add a new lexicon from an input stream.
Add a lexicon from a Reader. The reader is not closed by this method.
Stop the window aggregation with the current time.
Discards the current data and creates a new one each time the window expires
Serialize an object to a JSON string.
Deserialize a string to an object of a given return type.
Deserialize a file to a new object.
{ } }
eval a single el with a set of variables
generate inner field from a list of items
Get the table name from a Hive metadata record.
Get the database name from a Hive metadata record.
Get the value of an internal field.
Get the location from a Hive metadata record.
get custom location boolean from record
Get the Avro schema from a metadata record.
Get the data format of a record
Builder for schema metadata field.
Validate the partition information for a table.
generate partition path string from hash map
Serialize schema to HDFS.
Sets the parameters for a given operation.
Returns the current configuration.
Returns the millisecond value of the rfc3164 time argument
Returns the result of the given template applied to the given arguments
Start a new batch.
{ return true }
Filters the given list of field names to those that are not autogenerated field names.
Send on record error exception to the handler.
Parse a JAR name into its dependency and version.
Parse a url into a dependency.
Get singleton instance of couchbase connector.
Close this bucket and all associated resources.
Gets the label from a numeric code.
Checks that a dependency exists.
Extract operation type from record header.
Build a single document mutation.
Build the SQL string describing a table alteration.
Set up all the instance variables for this context. This method is called once for each configuration that
Take an entry from the consumer and return its offset and result.
This method commits the current batch and updates the last committed offset.
Call this method when an error is received.
Injects a stage definition and configuration into the given object.
Get definitions.
Get lineage publisher definition for a given name.
Format the name of the column.
; }
Get info about a pipeline
API to create a new draft pipeline fragment.
Returns a list of pipelines that the authenticated user has access to.
Create a new fragment envelope
Gets file path.
Returns the operation corresponding to the given single record.
Get the field path for the given mapping
Poll the queue for events up to the specified timeout.
Get a runner from the head of the queue or null if the queue is empty
{ }
Add a runner to the queue.
{ }
Validate that the queue is not being destroyed
check whether the stream exists or not.
get the last shard for a kinesis stream.
Processes the queue.
If the SQL exception is a data error report it. If the SQL exception is a custom data
Computes the hash code of the given record for the specified operation.
Compares two files.
retrieve the pid of a unix process
Return a set of valid fields to hash based on the supplied record and the supplied field paths.
String pass )
Use this method when you want to roll the active stats over to a new bean
Returns a snapshot of the current active stats.
Ensures that the directory exists by creating it if necessary.
Write a batch of records to the given output stream.
Write a batch of records to the given record writer. Each record written to the writer is a
Write a record to the cache.
generate no more data event
detects a new partition from the given partition info cache
Update a record for HDFS.
Process the value for the given group.
Class a and b have the same annotation version.
Main entry point for the Mesos cluster.
Configure auth and build the Jersey client.
Resolve headers.
Evaluate and get http method.
Fills in null values for all the simple types
Returns the value at the given field path of the given record as an object. Returns null if
loads a schema by subject and schema id
Register a schema with the given subject.
get a schema from the registry
get schema id for a subject
get a schema from the registry by id
Write a schema id to the output stream.
Detect schema id.
Get all the default values for a given schema.
Parse the payload using the data format parser service.
Log the details of the dependency.
Collect all the bad records from the error sink
Initialize the configuration
Returns the outward edge vertices for the given outward edge vertex.
Gets the inward edge vertices for the given vertex.
Serialize an offset map to a JSON string.
Deserialize an offset map from the given string.
Submit a new report to a queue to be processed.
Get report by report id.
Returns true if the check point file exists or the backup file exists.
write offsets to main offset file
Delete a blob from storage.
When an error occurs attempting to archive or delete a blob we do the appropriate handling based on the
Handle archive option.
This method returns the reader that was used to read the file. It may return null if the
Releases a reader so that it can be reused.
Set the dpm base url for the client.
Add a default header that will be added to all requests
Parse a string date into a Java Date object
Escape the given string to be used as URL query value.
Get the client for the current request.
Use this method to get a new connection to the GP system.
get the type of a table
Creates a new event builder that can be used to build an event.
Build a schema from a map of fields
Convert from oracle to sdc
{ } }
check whether the field order by list contains the given field name
Returns true if the given field name is found in the given condition expressions.
Returns the number of milliseconds from the start of the given file offset.
The premain method called from the command line.
return num ; }
Specific implementation for query execution.
Get the description of the table.
Verify that the table accepts all inserts.
Get column type from json field.
Returns true if the type is nullable
Get table schema.
Get column properties for a given table name.
Get class for a type name.
Initialise the aerospike client.
Resolve the MQTT topic for a given record.
Get a new input stream for the file.
Returns a stream to write to the file.
Returns true if the cache contains an entry for the file.
return null ; }
{ }
Creates a new simple aggregator instance for the given class.
Gets the value type for the given class.
Instantiate a new instance of a simple aggregator class and populate its fields.
Create a new group by instance.
Start the data provider with a new data window end time.
Stop the Aggregator Service and wait for it to complete.
Provide a rolling window for this aggregator to be included in the final output.
Decrements the reference count for the login type. If the reference count reaches 0 then the
Throws an exception if the glob contains the specified string or if the glob contains the specified string.
Returns a list of the Amazon S3 objects that match the specified criteria lexicographically starting at the
Stop the current pipeline by canceling all pending snapshots.
return 0 ; }
create failure batch if it doesn t exist in db
Convert a Record to a SQL statement.
Sets the values of this configuration to the values in the new configuration. If the value is null
Generates a kudu lookup key from a record.
Read a line into the given string builder.
Decreases the usage timer by 1.
Enable DPM.
Disable the local dpm server.
Normalize dpm base url.
Send a POST request to a URL and retrieve a user auth token.
Send logout request.
Updates the token file with the given app auth token.
update dpm properties
Creates a field schema for the given field name and record.
For a field of a record this is the simple schema for the field and the field with the
Get decimal scale or precision.
Get the default value for an Avro field.
Initializes file statistic gauge if not already set.
throws IOException ; }
Returns the index of the given group and index.
The names of all named capture groups
Determines if the character at the specified position of a string is escaped.
; }
See if the character is inside a char class
Find number of open parens
Extract group info from named pattern
Replaces all the occurrences of a pattern in a string with a replacement string.
This method implements the http servlet behavior of the servlet. It calls the get method of the JSON
refresh table schema if necessary.
True if entry is expired.
The file offset.
return true ; }
Convert string value to number.
Parses a single part of a record.
Returns the number of values parsed from the record header.
Stage one lookup of primary keys for this table.
Create custom field mappings if they are not already present.
get sql string for type.
Get table name.
Sets the primary keys for a record to a specified statement.
Handles any SQLExceptions thrown during the application.
Processes the next stage in the pipeline.
Do not mutate the given batch. That is a child of the given batch will have its data
Method to be called to finish a batch operation. This method can be called to finish a batch
Flatten a single field of a record.
Creates a new detached stage runtime of a given type.
{ } }
Returns a map of column name to the corresponding parameter value.
Build condition for partition column.
Validate the stored and specified offset against the given table context.
Returns a list of definitions from the generators requested in the request. If the generators parameter
Get non empty args
Get the operation for a given operation number.
Convert bytes to display format.
Does not scan the given live file for annotations.
return 0 ;
Determine if a name is whitelisted.
Returns true if the expected version string matches the actual version string.
Main method that can be used to start a streaming binding and then terminate the binding.
{ }
Validate the report description.
Upgrade v1 to v2. Remove implicit field mapping config from configs and add a
Extract named groups from raw data.
This method is invoked by the consumer when it completes the current consumer message.
Creates a sdc instance for the given class file.
Set fields in record.
get all remote pipelines with changes
Wraps a future result in a result that can be consumed by an external application.
Create a gauge using the given registry and name and gauge suffix.
Returns a map of column name to the corresponding parameter value.
Generate header attributes for the given file.
Processes the given record to see if it is a valid JSON or XML document.
Delete the temporary file if it exists.
Get an Avro input stream from a record.
Creates a new data file reader.
Write parquet file.
Check that the given field can be encrypted.
Check that the given input can be encrypted.
Check that the given field is a byte array.
Check that the given field is a byte array.
Encrypt a field for the given context.
Specify a new pattern for this matcher.
Appends a replacement to the given buffer of the first matching property. The properties of the first
Finds the named groups that match this pattern
Replaces all the occurrences of variables with the given replacement string.
Get the value of a global variable.
Creates a start event.
Creates a stop event.
If the offset is a big decimal type and contains a string in the offset then fix it so
Extract a field value as a runtime value.
Build a SQL statement for adding a partition to a table.
Builds and executes a SQL statement for the given table and partition.
Describe a database.
Execute a Hive query.
execute a query with an execution result
The consumer is called for each record in the batch. For each record in the batch the consumer
Run the consumer for each pipeline stage
get the offset commit trigger
Returns true if the pipeline associated with this error has stopped.
} } } }
Get insert id for a record
return list ; }
Sets the value in a record using a fragment.
Convert a document to a record
n1ql set n1ql to record
Handle whole file data format.
Returns true if the transaction with the given gtid and seqno is contained in the incomplete transactions
Executes the given supplier with the given class loader. If the current thread s context class loader
Logout the current user.
; } Clear exceptions
Replace all variables in the path with values from config and resources
Ensure proper permissions for the current context.
Start the EMR binding and then terminate the binding.
Returns the dir path of the record.
Path to a temporary location.
Determines whether the given record should be rolled.
Tests whether or not a string matches against a pattern.
Returns the file offset for all the segments in the segment.
Calculate remaining time to wait for an operation.
Returns the latest offset for each entry in the index that is less than or equal to the given
Creates an instance of the delegate.
create a new instance of the delegate
) { return null
Find the end of the header in a byte buffer.
Get the size of the request body.
Saves the buffer to a temporary file and returns the path to the saved file.
Initializes an SSL connection to a server using a private key and trust store.
Returns the mime type for the given file.
Handle a ihttp request by chaining the call to the http handler.
Stop the server and wait for it to finish.
Add the necessary routes to the router.
Send the body of this request.
Create a new fixed - length response.
Use gzip when accepted.
Sets a cookie with the given name and value with the given expiration time.
Unload cookies from the queue to the response
Decode a base64 encoded cookie value.
Returns a base64 encoded cookie value.
Sets the name of the table to be processed.
Gets the name of the given principal.
Insert a session repository filter into the filter chain.
Resolve the principal from the session.
Retrieve a session
Get JNDI name from model node.
Get the canonical parameter types of a method
Register interposed synchronization.
{ }
Returns the transaction for the current thread if any.
Process the deployment phase.
Determine whether the scoped persistence unit name identifies a cache region.
Returns a list of the service names that are defined in the configuration file.
Decrement read lock count.
Increments the read lock count.
add a service to all bean deployments
Protected method to be overridden if you want to implement the restoration calculation.
Process the deployment unit.
make bdas visible from static modules this ensures that the bean archives in the top
Creates a new instance for the specified deployment.
Set config name and file.
Create a security meta data object from the given security constraints.
Returns a map of servlet name to url pattern for the specified endpoints
Get the servlet class mappings for the given endpoints
Resolves the views to their implementations if not done before.
Returns the available connectors for the given operation.
Parse core environment element.
throws Exception { }
Get the address of the operation for the given model node operation
Sets the address of the path within the operation
Returns the value of the model node. If the value is not defined new a model node is
Determines whether the given model node is used to include defaults.
Creates a composite operation from a list of operations.
Creates an add operation on a model node.
Creates an add operation.
Creates a node for a read operation
Creates a write attribute operation.
Create undefine operation.
Retrieves the value of the current context.
Add url context factory.
Removes a url context factory.
Loading validation providers from the given class loader.
Modify a deployment.
) { }
Modifies the jboss web md with the root of the deployment.
Gets the transport class name from the deployment.
Set the run as identity.
Return the identity of the current running thread.
Process the servlets from the deployment unit.
Inject a value into an object property
Tests whether the class type and property type matches this argument.
Find a method by name and property type
Find a field with the given name and type
Derive useful info from the request.
Create a jdr reporter for the specified command line.
Collect jdr report.
Register resource adapter deployment.
Unregisters resource adapter deployment.
Register transformers.
Write the parameters to the output stream.
Get the exception for the given id.
Get lock owner.
Releases the lock for the given instance.
Add the given log to the set of logs.
Add context param for cdi flag.
Gets the component view.
This method is called by the invocation handler when an endpoint is invoked.
Get component view method.
Checks if a method matches a view method.
Get security meta data for an endpoint
Get the new or existing security domain.
Ensure same domain.
Sets the idl of this element to the given value.
Gets the absolute name.
Convert a name into a JNDI name.
Process the deployment descriptor and attach it to the deployment unit.
When a request completes call this method to register a completion listener on the exchange. This listener
whether we are currently in a transaction
Return the cached instance of the transaction synchronization registry.
Returns the connection factory for this context.
Returns the last component of a name.
Checks if the name is empty.
Gets the name not found exception.
Creates a new naming exception with the specified message and cause.
Create a new naming exception with a message and cause.
Creates a new cannot proceed exception.
Construct a naming enumeration from a collection.
Rebind the value to a new value.
Returns the active MQ control object for the given operation.
Creates a new component instance for the given object instance.
Get the resource root.
Resolve the runtime name for the given path element.
resource ) ;
Get the primitive analysis of a class.
; }
Get url patterns as a list.
Get the servlets metadata from the jboss web md.
Get the servlet mapping meta data for the specified application.
Get the security constraints from the metadata.
Gets the login config meta data for the specified jboss web instance.
Gets the context params from the specified meta data container.
Get web resource collections meta data from the meta data of a security constraint. If the security constraint
Get servlet init params list.
New security constraint meta data.
Create a new web resource collection meta data object.
Create a new servlet and add it to the list of servlets.
create new servlet mapping meta data for given servlet name url patterns and servlet mappings
New auth constraint meta data.
factory method for creating a new user data constraint.
new param value meta data param value
new param value meta data.
final DeploymentUnit.
Stop the service and release resources.
Get the JNDI name for a model node.
Resolve a simple attribute definition.
Returns pattern type.
) { return true
) { }
Get the current active MQ from properties or the default.
return the default persistence unit name if none found
Start the activity and associate it with the given start context.
Remove the activity from the suspend controller and remove the activity from the transaction context.
Inform the server that the ejb is suspended we wait for the number of active transactions in the
This method should be called when the deployment is resumed.
Indicate that an invocation completes.
Inform monitor that a new transaction was created.
Called at the start of the processor.
Stop the controller.
Get the capability service name using the base name and any dynamic parts.
Creates the resource roots for the deployment root.
Get all class loaders of the top level deployment module and all of its sub deployments.
Need class file transformer boolean.
jpa allow two phase bootstrap
Is allow default data source use boolean.
Skip mixed synchronization type check.
throws IOException {
Initialization method for the orb that declares the orb as an instance of the applet
{ }
Set the active naming store.
{ } } }
check param type.
Returns the annotation with the default value. If none is found returns null.
Validate the base type.
Returns all deferred entity managers.
Convert status code to a string.
Add cache dependencies to all registered listeners.
Extracts the dialect names from the sql key set.
Investigates the database dialect
Identify dialect based on the name of the dialect.
Check the database for data.
Format the given string as a scheduler date.
Sets the node name in the prepared statement.
Mark a deployment as a parent of the deployment.
Read an array of parameters from the input stream
Write a serialized remote object to the output stream
Write a throwable to the output stream using the first available writer.
Performs a recursive lookup on the given lookup object. If the lookup object is not in the
Indicates the beginning of the bean creation process.
Pops the top of the stack to indicate that a new bean has been created.
Returns the most recently invoked invocation of the sfsb
Push the given set of extended entity managers to the front of the stack.
Pop the most recent num maps from the stack.
Returns the most recently called function from the stack.
Add module dependencies for the deployment.
get the idl of a class
Insert a primitive into an Any object
Convert a Java name to an IDL name.
{ }
Get the signature of a class.
Returns the signature of the given method.
Return the string representation of a primitive type.
Gets batch permission for the given permission name.
Get or create transaction scoped entity manager.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Convert security role to model node.
Return the most recent entity version for the given timer implementation.
Returns a map of timer ids to timer implementations.
Get the directory for the given object id. If the directory does not exist it will be created
Adds a new listener with a specific scope.
{ }
Fires an event.
Returns a consumer that closes the provided value.
Add a private credential to the subject.
Returns the object instance for the given name and context.
Method add tx management interceptor for view
Replaces all occurrences of the given string from the given string with the given string to.
Create in vm transport configuration.
Add ear prefix if configured name starts with the configured name.
get root deployment unit.
;
Create view configuration view configuration.
Create injection source.
Gets a view interceptors for a given method.
Add a factory method as a view interceptor.
Add a factory for the specified view method interceptor.
Finds the client interceptors for a given client method.
Adds a client interceptor to this factory and all its cached methods.
Add a client interceptor to this factory.
Put private data into the context.
Throws an exception for an unexpected element.
Get Jaxws ejbs from the deployment if any.
Fetch Jaxws pojos from deployment.
Get the endpoint name from the servlet meta data.
Gets the endpoint class name from the servlet meta data.
Search servlet meta data for a servlet with a given name.
Get a required attachment from the deployment unit.
Retrieves an attachment from the deployment unit. If the attachment is not present returns null.
Return the j meta value for the deployment unit.
Get j.
Get ejb metadata from deployment object
Returns the root context for a deployment.
Returns the class for the given name.
Returns the URL of the requested resource.
Returns a collection of URLs for the given resource name.
Recursively list all resources under the given path.
Pop the current stack
Get the entity manager for the given pu scoped name
throws Exception {
Process the deployment unit.
Is all fields public boolean.
Creates a new http endpoint.
Create a new deployment from a deployment unit.
True if the given deployment is a JAX - RS deployment.
Sets the next timeout.
Sets the state of the timer.
Merge deployment data to this deployment data.
Process the deployment unit.
Add remote transactions dependency
Returns a set of all interceptors registered on this method.
Determine if this is a method level assertion.
Check that two elements in the same order are present in the xml.
Get type of a class from its name
get the component type at the given index
Parse a composite name from its string representation.
Convert a string to a vector of components.
Parse component with incomplete escape sequence.
Deactivate the object
Convert a servant to a reference.
Attempts to authenticate the given user and password. If a password is provided it is used to
Determine if the class is matched by the expected type.
Get the object instance for the given name
Unbind the binding.
Create an instance of a bean.
Use the given configuration to configure a bean.
Dispatch a lifecycle joinpoint.
Get the current selector. The method returns null if there is no current selector.
Create a new service name from a bean name and a state.
Create a service name from a class and bean state
Try to find a class with the given name.
Processes the annotations of the given deployment unit.
// do nothing }
Validate descriptor string.
Create the deployment descriptor and attach it to the deployment unit.
Create web. xml and web. xml for the deployment.
Get the authentication method for an ejb deployment
Process the deployment descriptor associated with the given phase context.
Handle stateless session bean.
create a stub class using the class as a name
Gets the anonymous object id for the given long. This method should be overwritten by subclasses to
Return a copy of the providers in the order they were registered.
Clear all cached deployment specific providers for the given set of loaders
Adds a new deployment specific persistence provider.
module loader.
Process the deployment unit.
Add persistence unit to the deployment context if it exceeds the number of persistence units
set annotation indexes from deployment unit
Get persistence provider adaptor.
shared adaptor save per deployment unit.
lookup provider.
Eagerly load the annotations from a set of URIs.
Create an ejb from a deployment.
Build enterprise bean meta data.
Instructs the handler to refresh the participant for the given operation.
Method to get the analysis instance for the specified class.
Do the work done for the given class.
Creates a new analysis of the given class and adds it to the work in progress queue.
idl module name.
Converts an integer to a hexadecimal string representation.
Converts a long to a hexadecimal string.
Determine if the method m is an accessor.
}
Returns a boolean value indicating whether the given method has non application exceptions.
Resolve the attribute name from the attribute value.
Get the name of the attribute.
fixup overloaded operation names.
Fixup the case names of the contained analysis objects
Returns the escaped form of an IR name.
Parse XTS file.
Parse default context propagation element of a subsystem.
Processes the attributes of the xml file.
Returns a module with the given name.
Create add operation handler.
{ } }
Write an attribute to the XML writer
ejb - create session
Infers the destination name from the given address.
Registers the given endpoint handlers with the given class name.
Get job xml names for a given job name
{ }
Get the uri for the request. Override if you need different logic.
Creates a CN result from a short url.
Converts the string to a composite name and performs the lookup.
Converts the given java object to a composite name by using the com. sun. naming. Name
unbind a name component from the current context
Returns an enumeration of the bindings for the given name.
Destroy the named context
Destroy the subcontext with the given name.
Bind a new context to a name.
Creates a new subcontext with the given name.
Does the actual lookup of a link with the given name.
Adds an entry to the environment.
Removes the specified name from the environment.
Adds the transformations for the given model version.
remove a specific security domain
Look up a JNDI
Create a modular reference for a class.
Create a new modular reference for a class.
Create a new modular reference of a type.
Get the idl of the given type.
Wait for security domain service to become available.
{ }
Initialize security Vault client.
Start the vault session.
Displays an attribute created event.
Display the vault configuration.
Vault configuration string.
Throws if the value is null.
Gets the deployment service name for a resource adapter
Insert value into the given type.
Check if this implies a permission. That is the case if the action bits are the same and
Returns the action as a string.
Returns the name of the node.
Sends a state change notification to the client.
Get value from type.
Returns the context service name.
Returns a set of all interceptors registered on this method.
LinkedHashMap < String >. <init> Map < String >. put
Add a dependency to this component.
Finds all registered component interceptors for a given method.
Find around timeout interceptors for a given method.
Add a timeout interceptor to this view.
Add a construct interceptor with the given priority.
Add a post construct interceptor with the specified priority.
Add a pre destroy interceptor with the specified priority.
Add a pre passivate interceptor with the given priority.
Add a post activate interceptor with the specified priority.
Sets the component create service factory.
remove JNDI entries from the operation context
Add remote transport providers to an ejb builder
Create a service name for a component.
Create a service name for a given module
Returns the bind info for the given environment entry.
{ }
Return a cache of principal to domain info. The principal will be removed from the cache if the
Returns an array of value members of this type.
get value members for the type
Creates the subsystem root model node.
Parse and add the config file to the model node
The start method is called when the service is started.
Creates a new job operator service name.
Add a component to the deployment graph.
Add message destination.
Returns the set of components that are associated with the given view type and the deployment root.
Returns a set of descriptions for all the components with the given name.
Gets all the components that match the given name and view.
Resolve message destination set.
Method to build transformers for versions 1 and 2
Discards the attributes with a default value.
Populates the identity cache.
Loads the IDs manually rather than using the classloader
Checks the integrity of the versions array against the known Javascript API and implementation versions
Computes the slot for a given JavascriptFen specification.
Return the constant type code for a class.
Add a type code for a class.
Ensure that a module exists in the current module if it does not already exist.
add all interfaces to the analysis
abstract base valuetypes ( ) ;
add a class if it is not a primitive
add a new interface to the analysis
add a value from a value analysis
add a new exception to the exception analysis
Gets class level injection type.
Start the naming service.
Stop the engine.
Check allowed method.
{ }
Calculates all the classes that should be included in the deployment meta data.
Get the timers associated with the current transaction and if there is a transaction associated with the current
Returns a new map of parameters containing only the extra parameters that are not contained in the allowed keys
Get parameters based on the config and mapping
Convert type to corresponding class.
Convert an object to another object with properties.
Get the types of the values
Check whether the given annotation types are simple type names and types.
Returns the next object in the list.
Try to get more from the iterator.
Convert an org. omg. cos. binding. Binding to javax. naming. Binding
Observes a resource.
Close the health check.
Return an IIOP object for a given locator
Convert an enum to a value.
Skips specified number of bytes from the stream.
Throws an exception if the elements in the given set are not in the given set.
Add a component description to this module.
Add class loaders for the current deployment.
Unbounds object under given name.
lookup the object for the given name
Retrieves a list of all the name - class pairs that match the given name.
Returns a list of all the bindings under a given name.
Add a factory.
Save the context object to the database
Creates the io subsystem if it does not already exist.
Creates the welcome content handler.
get a bean from the pool
Calculates the operation analysis map for the given data.
Collect the metrics for the given resource.
do prepare and return the deployment unit.
Deploy the given service to the given deployment unit.
This method is responsible to fetch all the endpoints that are defined in the deployment and publish them.
Stop the web app associated with the deployment.
Start the deployment.
Registers an endpoint class and its configuration.
Override this method to handle a timeout on another timer.
Post timeout processing. This method is called after the timer has expired.
Get declared methods for a class.
Get declared fields for a class.
get constructor of a class with parameters
get method.
Adds the messaging activemq extension if it exists.
Check if the parameter is allowed for the resource type.
Migrate the generic transport factory to the artemis netty transport factory
Atomically sets the cancelled flag if the given flag is true
Returns true if the current state is not cancelled and not waiting.
Set the type of an object. Can be overwritten to use a different type
Returns true if the function can be executed without index.
Recursive method that searches a directory recursively for classes.
Returns all the classes that implement the given interface
Gets the generic multivalue type of a field.
return true if one value matches the other value
Declarative Services method for deriving the type of the field
Update the record in the cache if it is different from the current record.
Find a record from the cache.
) { }
Move the flatteded equalities down to the left in the flattened order.
add order by if needed and possible
Extract sub queries for the given query planning info.
checks if the RID is from a cluster in the filter clusters
Determine if the query target is a view or class with an index that allows sort only
Traverses the class hierarchy of clazz and all of its superclasses to find a diamond hierarchy
Get order direction.
Requires multiple index lookups in a given condition.
) { }
{ // }
Create a new o with the given strategy.
Check if the document is allowed to perform the specified operation on the document.
Returns true if the rule has been defined for this user.
Get compact server status from the configuration.
initialize the system database
Load local databases.
Called when a member is removed from the group.
new lock manager.
Tries to find a lock manager from the cluster. If no lock manager can be found in
Commit the current transaction.
Rollback the current transaction.
Update the identity of the entry with the new identity.
update the record cache after a rollback of the transaction.
Prepare the path for file creation or replacement.
Attempts to move the source file to the target file. If the target is a directory the
Returns a list of disjoint patterns in this pattern graph in reverse order.
Decide whether to execute the task only locally.
This method is called by the parser when a character is encountered.
Returns true if the connection to the remote host is established.
Merge two buffers into a single short.
Split short to buffers.
return the number of properties of the class
Put single value into map.
Remove the specified value from the set.
Run this command with the given arguments.
Execute the query and return the first result.
Creates a new file and opens it.
Check if the given region is valid for this object.
Replaces the current content of this file with a new content file.
execute a command against the database
End a request.
Add to host name if not already present.
begin a new request.
Get the database object.
{ return
Called by the connection manager to kill a connection.
Interrupt a specific channel
Disconnect a given channel from the server
For legacy push messages do not use push the messages directly
Atomically swaps the value at the specified index in the map.
Releases all locks.
Synchronize the database schema with the underlying database schema.
Update the metadata for the given metric.
Reduces the number of records to the last in the cluster.
return missed }
Queries the database for matching records.
Register a callback for async replication errors.
Registers the given class as a compression implementation.
Returns the number of open files
Returns true if the current expression allows indexed function execution on the specified target.
Moves the entry to the specified position in the buffer.
Fills the buffer with the specified number of elements of the specified array.
execute until return ( )
execute until return ( o )
Evaluate a record using a binary operator.
Execute the SQL statement in the current transaction
Load a configuration from the storage.
Parse the given request into an oquery instance.
Execute this command with the given arguments.
) { }
Add an index.
Split for aggregation.
Convert from an object to a specific type
Get the collate value for the specified document
Returns the value of the rule. If the rule contains the specified string replace it with the new
; }
Present the result to the user.
build json from file
Check the given password against a hash.
Creates a hash using a specific algorithm.
{ }
Creates a new instance of the index.
Returns an iterable of all the vertices in the graph.
Returns an iterable of all the edges in the graph.
Returns the partition key for this task.
How long to wait for a distributed crud task to finish.
Get all the features supported by this transaction.
Checks whether the given page index is full for the given changes.
Parse the timeout.
Parse the lock keyword.
Create a cluster for a specific class.
Free a cluster by ID
Startup the instance.
Shuts down the application. This method should be called when the application is being shutdown.
Create a new o that contains only the single member of the given entity. It uses the transformer
Grant access to a specific resource for the given operation.
Revoke access to a specific resource for a specific operation.
Returns true if the record should be returned by the cursor.
Resets all bits to the beginning of the table.
Returns the index of the element with the given seed value.
Spreads a single variable.
Create a new index with the given name and type.
Removes all indexes from the schema that match the global reference.
Gets the index associated with the global ref.
Returns the linked class.
Returns a new stream that contains the content of this object.
Removes a listener from the list of listeners.
Register a database with the specified configuration.
Timeout a request.
copy the database to the current context
Try to merge the given value with the current value.
replace existing delegate with new osb
If the result is an array return the original result. If the result is a map return the
Execute command.
Closes all the databases in the pool.
Unregisters a storage from the registry.
Returns a set of all function types supported by the database.
Get the names of all currently registered collate factories.
Get the names of all registered database types.
get field size and type from current position
set response status
Setting response headers.
write a set of records to the response.
write a single record to the response.
send a response
Respond with a stream.
open database with the specified name, user and password
close the connection. If the connection is still open this will close it. If the connection is
Override if the collection is changed and needs to be listened for
Complete a single component operation.
Push component counters for a snapshot of the registry.
This method pushes holder to snapshot if there is a current snapshot. holder can be null if
Push a storage counters holder from the snapshot.
Push a wal holder from the snapshot.
Push a counters holder for a given component.
{ }
Stop a fuzzy checkpoint.
Stop the timer firing full checkpoint operations.
Stop the commit timer.
Stop the wal file.
Stop wal.
parse a SQL statement.
init the receive messages thread
schedule the init of the discovery process
Remove the record from the data store.
Manually set a property on the underlying record.
Removes the property with the specified key from the current record. If the field does not exist or
Check for a class in the current schema.
Wraps the given object if it is already an instance of the same type. If the cursor
Define vertex attribute strategy.
Define edge attribute strategy.
Return a list of new record entries filtered by class
Gets new record entries by cluster ids.
Add new index entry.
Merge two sets into one. If the target set is null it is merged into the source set
Returns true if the given edge was found in the given record.
Can the function be executed without indexing?
Prepares the keys to be added to the index.
Writes a page to the owal. This method is synchronized so that only one thread can
Read the page at the given index.
Truncates the segment to the given page index. This method is safe for concurrent use.
Opens the ZIP output stream.
Is the local node active replication?
Get new node strategy.
Check if the execution mode is synchronous or not.
Is read your writes boolean.
Optimize a set of server cluster assignments.
Returns the set of server names for the given clusters
Check if the given server is one of the given clusters
Returns true if the server name matches the cluster name.
Get master servers from the configuration.
Returns a set of all servers configured on the cluster.
Returns all the clusters on a specific node.
Get all the clusters owned by the specified server.
return the owner of a cluster.
return the owner of a cluster.
Get the list of configured servers for the given cluster.
Returns a set of the names of all servers configured in the configuration
Get the data centers configured in the current configuration
Get the write quorum for the data center
judge whether the database is sharded or not
Get data center servers.
Get data center of a server.
Get global read quorum for the given cluster
Gets the write quorum for the given cluster and server.
return the cluster configuration for the given name.
Get data center configuration object.
Clear the initialization stack.
Retrieves an index by name. If the index does not exist or is not assignable to the
Drop an index.
Add a vertex to the network
Add an edge to the network. Edges are added to the active network if they do not
Returns the vertex with the given id.
Returns an iterator of vertices of a given type.
Return an iterator of edges of a given type.
Returns the edge with the given id.
Recycle this graph from another database.
Shutdown the database.
Returns the base type of the vertex.
Returns the vertex type with the given name.
Creates a new vertex type with the given name and number of clusters.
Drop a vertex type.
Returns the orient edge type with the given type name.
Creates a new edge type.
Returns the element with the given id.
Drop an existing key index.
Remove a background exception listener
Notifies all registered listeners of an exception.
Stop monitoring the system.
Register the given storage name with the given storage id.
Unregister the given mbean
{ }
) { }
) { }
Get property.
Detach the given instance from the given pojo
Returns the version number of the specified pojo.
Execute an SQL INSERT UPDATE or DELETE statement.
Mark a POJO as dirty.
Unset dirty bit for a user object
Returns all the types used in the index
Get all index engines from all factories.
Returns a list of nodes that did not respond to a GET request.
Returns a list of conflicted servers
Get the best response group so far.
return reached ;
Parse the received responses and return them as a list.
Get the object from the cache
Checks if the BinaryOperator allows indexed function execution on the given target object and context
return the library name from the database
Release database engine.
Read the next position in the cache.
Updates the size by applying all changes and adding the new ones.
Returns the value at the given index.
Filter fields from an index and determine if we can use order by after the filter.
Finds the first occurrence of the specified character in the specified range of a string.
Jump white spaces.
Jump to the next or previous char in a char sequence.
Sets the fetch plan.
Enqueue a repair record.
Cancel a repair record if it is still active.
Enqueue a repair cluster.
Get all the dependencies for the given pattern.
Creates a new instance of an entity class.
Register a set of entity classes with the respective class loader.
Registers the given class to the database.
o can be null.
Acquire database connection from the pool
Returns the number of connections that can be made to the specified user
Acquire database connection from the pool
Execute a cluster update statement.
Returns an iterator that iterates all instances of the given object type using a per - instance class
Check cache memory configuration.
Creates a vertex object from a JSON object.
Creates an edge from a json blob.
Creates a json from a graph element.
Creates a node from a given element.
Start a new instance of the oetl class for the given config and server
The status of the current job.
Returns a map of data center names to the set of servers that are currently active
separate the algorithm from the base64 encoded value
Creates an object from an existing config
Creates an object from a file.
Creates an new instance from a stream.
Encrypt a JSON string.
Save the key to the given output stream.
Saving to keystore.
return child ; }
Add an object to the result set.
get value as object or map
Authenticate the connection with the given username and password.
Get map entry.
return record ; }
returns null if no more records to read
Start a new transaction and return the connection to the database
Returns a graph from the pool. USE WITH CAUTION.
connect to database and create a pool of databases
Get property.
Indicate that the transaction should be stopped.
Returns the next token from the underlying source.
Returns the token at the specified index.
Returns an iterable of all the vertices in the graph in the requested direction with the specified labels.
removes a vertex and all connected edges that have no incoming or outgoing edges
add a new edge to the graph
Adds an edge to the graph with the given label and class name.
get connection class name from field name
o. connection i. name i. name i. type
Processes the broken RID array from the JSON stream.
Gets console methods.
execute a distributed task on this node
Get the number of nodes in the given collection that have the given status.
Wait for next retry.
Gets the argument at the specified position.
Check if the request contains the specified parameters.
Connect to a remote node.
List all of the databases.
get information of a selected server
Check if a database exists.
Drop a database.
Freeze a database
Release a database from the cluster.
Status of the cluster
Get the current orient graph.
Parse retry flags.
save a record to the database
Delete a record from the database.
Get the authentication header for a given database.
Authenticates a user using the given username and password.
Check if user is authorized to access the given resource.
return ; } }
Method to adjust line and column numbers for the start of a token.
Sets the bucket pointer from the given object value.
Reads the bucket pointer at the given offset.
Finish an atomic operation.
Acquire an exclusive lock until the operation completes.
Changes the maximum amount of memory.
Listen on the specified port.
Read the parameters and set the configuration.
Shutdown the server.
Adds an item to the store.
Removes the key and its value from the data store.
Acquires an object for the given key. If the key is not currently locked it will
Gets the value associated with the given key.
Atomically removes all of the elements from the queue. The queue will be empty after this call
Returns true if the data for the given key was closed. If the entry was not yet closed
empty the read buffers
Post a task to be executed after the write operation.
Drains the read buffers and refills the buffer for the next entry.
return 0 ; }
Returns the closest power of two closest to the specified value.
This method handles events from the server. It dispatches them to the proper listener.
Convert the field with the given key to a String representation of the enum.
Convert all of the elements from the underlying enumeration to the corresponding enumeration values.
Gets the serializer for a given object type.
add shutdown handler to the queue
Get engine details.
Add a state to the state list and return a new entry.
Authenticate a user from an auth token.
Get the metadata object for the identity class.
Attempt to acquire a read lock.
Returns the vertex in the given direction.
Returns the id of the underlying element.
Sets a property on the underlying element.
Removes a property from the element.
clear all elements from the cache
Delete a file or directory if it exists.
end the batch import
Adds a new vertex to the graph if it does not exist yet.
Parse strategy.
get embedded items from container
Execute the command.
Returns a boolean value indicating whether the given field value is a link to the current record.
Fill a record with data from the buffer.
Sets the version of a record.
Get the type of a record.
Initializes the database instance.
return null ;
Convert a link2 record to a record.
Register a new command instance.
Create user configuration from document.
Analyze condition.
Creates an indexed property or returns null if there is no such property.
Attaches the object to the given object.
Get class from the database.
return current ; }
Truncate the database
add a base class to this cluster
add polymorphic cluster ids to the indexes
link to stream o i parent record
Release a pointer to the allocator.
Throws an exception if memory leaks are detected
Removes all of the elements from this map. The map will be empty after this call returns.
Reads an int from the given byte array at the given offset.
On open database connection.
Install clusters of class into given database
Dump the current server status to the log.
Finds the index of the given object in the given array.
Returns the index of the specified element in the array.
Returns the set of clusters that the target database is involved in.
Processes the last record returned by the query.
Get the temporary rid of this query
This method reports a tip to the profiling system.
Parse fetch plan.
Parse nocache keyword.
Optimize the sort. Returns whether the sort was optimized or not.
Returns the status of the current conversation.
Execute this command with the given arguments
Process a JVM error.
Associates the specified value with the specified index id in this map. If the map previously contained a
Roll back a transaction.
Executes the given command on the given object.
return id ; }
Set property. If value is null the property will be removed.
Execute the INSERT statement.
Install a database
Delete a record from the database.
Invoke all registered hooks of a particular type for a given record
Delete a record from the database.
Return the number of records in a view.
Count the number of instances of a particular class.
Activates the object on the current thread.
Register a new encryption type.
Calculates the relative index in the current chunk to the given position.
Parses the next word.
Parses the last word.
Parser the next chars.
Parse optional keyword.
Checks whether the character is part of a separator.
count the number of records in the database
Clear all configuration files.
Return the current position in the buffer.
Extract and format the token.
Acquire access token from provider.
copies the token from the authentication holder to the context
Checks whether no more characters are in the buffer.
Reads the next line from the stream.
Skips the given number of bytes from the input stream.
Ensures that a range given by an offset and a length fits an array of given length.
Swaps the elements of the given swapper with the elements of the given swapper.
MurmurHash3 int.
MurmurHash3 128 - bit
Writes a byte buffer to the stream.
Truncates the file to the given size.
Changes the position of the underlying stream.
{ // } }
Await for the completion of all the current tasks.
Returns a stream of objects that match the given query.
Finds all the hollow schemas that need to be compacted.
Delete all old hollow snapshots.
Find the hash code of a field.
Remove all schemas that are outside of the closure
Invoked when a hollow producer completes an announcement.
When a hollow producer completes its cycle it records the number of consecutive failures and the duration of
Read a set of header tags from a data input
Extract the primary key from an object
Atomically clears all the bits in the bit set.
Read ordinals.
Size of the set.
Get the field value for a hollow view row.
Copies length bytes from src to dest.
Copies a number of bytes from a source byte array into the destination byte array.
Check if the value in the given range is equal to the expected value
Copies length bytes starting from src to dest
Copies length bytes starting from src position into the provided byte array starting at dest position.
Reads a number of bytes from the stream.
Write the contents of this buffer to the given output stream.
Ensure that the segment at the given index has a capacity.
Returns the position of the given field name in the signature.
Calculates a deduped array for the given multi - list.
Does the dataset contain collections?
Generates all the api class hash index and hash index files in the specified directory.
Generate hollow data files for schemas
Check whether any of the keys matches a particular ordinal.
Get a record key value for the specified ordinal.
Create a field path for the primary key dataset.
Create a field path for the hash index.
Add an object to the cache.
Initialization code common to all constructors.
Returns true if the given key is in the keys list.
Adds a field for the specified type.
Build a list of dependency schemas based on the given schemas.
Initializes the instance with the default values.
Get the value at the given index.
Find a matching query for a single field.
Look for matching values for a particular field.
Sets the element match paths.
Sets the key paths this hash should refer to.
Use this to restore from the last announced state of a file.
Cycles through the mutations and fires the incremental cycle complete event.
Exclude the given key from the index
Exclude all objects that are referenced by this hollow object.
. IOException {
Calculate type heap cost and heap ordinals
Write the fields in this record to the given data buffer.
Writes an integer to the given buffer at the given position using the specified number of bits
Writes a fixed length 64 bit integer to the specified byte buffer
Return an ordinal to the pool so that it can be reused.
Sorts the array by the ordinal values.
Calculates hash code for key and field types.
Returns a hash code value for the given key and field type.
Resizes the storage array.
Finds a free ordinal given the preferred ordinal.
Allocate space for a new bucket and prepare for write
Returns true if the value corresponding to the key is found.
Grows the key array by a given size.
Returns the hash code of the previously added data for the given key.
Create an empty array of the given size.
Determine if two match lists are equal.
Return the type for a given key.
returns a helper that swaps the current state and the pending state
Returns the size of the hash table for the given number of elements.
Run a compaction cycle.
Write a snapshot of the database to the given output stream.
Write the delta data to the given output stream.
add to set if not primitive or collection.
Normalize field path to param name.
rebuild hash index when hash index changed
Find an object in the index that matches the given criteria.
Trigger an asynchronous refresh with a random delay.
Trigger an asynchronous refresh with a delay.
Add a new type diff.
Write a value to a stream.
Write a value to a byte array starting from a given position.
Read a 32 bit int from the input stream in the range 0 - 31.
Reads a 64 - bit long from the given stream.
internal method to add a child view
Refresh loading views
}
Updates the header and footer according to the current mode.
Adds a given fact to the list of facts
Adds given facts to the given rule.
Creates new instance of rule builder.
Instantiates a new rule builder.
Instantiates a new rule builder with the specified fact type.
Instantiates a new rule builder.
Creates a new builder for the given rule.
Creates new instance of given rule builder.
Performs the given action on the then rule.
Get rule instance.
Gets annotated field.
Gets annotated method.
Gets an annotation from the given class or interface.
Register a new rule
Updates the status of a rule.
Returns a map of the current thread id to the current rule status.
Return a new rule book initialized with the given result type.
Adds an action to the then rule.
Adds an action to the then rule.
Reset to the default value if the default value is null.
Adds a rule with the specified fact type to the rule book
Gets pojo rules.
Read an empty line or the end of a table.
Convert the list to an array.
{ // }
Extract the list of ports from the configuration.
Parse a port mapping string into a service port.
Add port to list if it is not null.
Remove a service port from the list or null if the list is empty.
{ } }
Append an image stream to a file.
Determine whether the given service port matches the port specification.
Return a port value for a given service name.
Get host and port for a service.
Put a value into a map if the value is not already present.
Merge map. If map key does not exist in to merge it.
Merges two maps into one. If both maps are null then the result is the same as
Put all to put into the map.
Wait until the pod is ready.
Validates a kubernetes id.
Convert an object to item list.
returns the resource version of the entity or null if it does not have a version
Check if the pod is ready
Get the current context from the config.
Check if there is a route with the given name.
Determine if the given project has one of the given resource paths.
Returns a map of the fragment and its kind which has been enriched with data from the given
Convert a map into a list of env vars
Merge two resources into a single resource.
Merge the override map with the original map and remove entries that have a value of empty.
Check if the pod spec specifies a local customisation
Reads the configuration from the specified file.
Add port to map if valid.
Get docker json config string.
Get plugin configuration by id.
Get secret configuration optional.
Download a given URL to a given file.
Compare two version strings and return the number of differences
; } }
; }
Read a profile from a classpath string.
Get all profiles from the classpath that match the given name and extension
Find profile. yaml in the given directory
Get meta - inf profile paths.
Deserialize a list of profiles from the given input stream.
Get image pull policy from resource configuration or a default value.
Determines if the current context is in open shift mode.
Calculate the number of replicas for the deployment.
Return the first child element with the given tag name.
Install a template.
Remove tag by tag name
apply the namespace to the entity
Applies the specified project to the current user s account.
Add the given project request to the list of projects
Get the namespace for the given entity
Called when an error occurs during the apply operation
Override create to add to namespace or project
Enrich the list with the namespace.
Get environment variables.
Parse a duration string and return the number of seconds.
Convert a string representing a unit of time into a big decimal number.
Scans the specified files and returns the names of the files that match the specified patterns.
{ }
returns true if the service has ingress rule for the service
Parses the given input stream and returns a map of the kind to the list of file types
Attempt to get the default icon reference.
Copies the application config files to the build directory.
Load a properties resource.
Gets spring boot version from the given Maven project.
Enrich a list of enrichers
Gets raw config map.
Returns a new map containing the same keys and values as the source map.
{ }
{ }
Get the value for a given key from the configuration.
Get a config map by name.
Given a list of named items returns a list of named items that should be processed.
Add the source to the builder
Get from mode default.
get docker image name
Returns the registry to use.
Returns true if the system is online.
Get the external URL of a service.
get boolean value from global or system properties
Create jest client.
Creates a new internal node and starts it.
Scan for plugins.
create a balance from the json of rewards
Get the rewards balance.
Construct a pay pal payment resource from a string.
A basic GET request
Handle POST requests on behalf of a client.
Create a venmo configuration from the specified JSON.
Send the given braintree fragment to the registered devices.
Collect device data from the braintree
Collect pay pal device data.
Get pay pal client metadata id.
Returns true if all of the signatures are valid for the given package name and certificate subject and issuer
Get the string value associated with a key or the default if the key is not found.
Parse payment method nonces.
Get browser checkout configuration
Gets browser billing agreement recipe.
GET a file or a directory
POST the request specified by the given path with the provided data and callback.
Perform a POST request and return the response.
Approve a payment
Add a braintree listener.
Remove the given braintree listener.
Request a billing agreement.
Call back from braintree activity on result.
Parse paypal response.
Add a list of words to the dictionary.
Remove a word from the dictionary.
Convert a seq of korean token to a list of strings.
Extract phrases from korean text.
Detokenize a list of words.
Fetch the specified number of bytes from the specified buffer and channel.
Join an ordered list of nal units into a single NAL buffer.
Join a list of nal units to a single output buffer.
Returns the i - th profile.
Generate a fixed precision Huffman tree from the given double array of taps
Partially read to the next marker.
Reads the next marker from the stream and returns the corresponding byte buffer.
Returns the maximum number of frames that can be read.
Attempt to modify a file.
Returns the total duration of all edits in the track in ms
Calculates the time value of a given frame of a trak box.
Returns the frame number of the time value to sample.
Returns the amount of media that has been edited by a trak for a given media tv in
convert edited time from trak to media time
qt player frame no.
Get the time of a qt player
convert timevalue to timecode frame
This method is used to format a timecode.
Gets the 7 bits of an integer.
Sets the n least significant bits of list to value. Assumes that n is a power of
Returns true if the given color space matches this color space
return a smaller size that comp can hold this size
Creates a new instance of m that will read a track from the given channel.
Reads the next number of bytes from the cache.
Create a new wav header for the given audio format and number of samples
Create a multi channel wav header from a header array.
Parse aac from a byte array.
Encodes a single local variable.
Split a pair of edits of a movie into a list of tracks based on a given time
Adapted from commons - codec s DecodeFrame method that takes a single frame of data and
Changes the bit order of the underlying buffer.
Deblock a multiblock pattern.
Encodes a single frame of the native image and writes it to the sink.
Encode len.
Get the length of the EBML code that matches the given long value.
Adds a packet to the flv file.
Tries to reposition the file to the beginning of the buffer. If the buffer still contains
Returns the next bin.
Reads a sequence of bits from the stream. If there are no more bits to decode then
Returns a marker or null if this is not a marker.
Returns the frequency of a value in the range 0.. num - 1
Predict the 2D coordinates of a plane.
Shift the given block into the first num elements of the block.
Calculating coefficients in a block.
Finalize divide and conquer.
Concatenate a bit buffer to the end of this bit buffer.
Rewinds the reverse of a 32 - bit integer to the least significant byte and returns the
Seek to a given frame number.
This method is used to get a picture from the buffer which corresponds to the first frame
Get the id of the gain change point.
Converts a byte array to an int array.
Convert an int array to a byte array.
Write an audio float to a buffer.
Read an audio sample from a float buffer.
Fill an audio buffer with interleaved data from an array of buffers.
Deinterleave an audio buffer into an array of buffers of the same size
Get the size from the coded video.
Build wipe map int [ ].
Read an array of uls from a byte buffer.
Read a batch of 32 - bit integers
Returns the minimum of three MVs.
Encode a frame for the given picture into the target buffer.
encode the idr picture into a jpeg buffer
Encode a picture in the buffer.
Gets a list of supported codecs.
Return a list of supported tags.
; }
Cleans up all unused local references.
delete all valid references
{ } }
Unpack library.
Delete all the temporary files in the tmp dir.
Get the default layout for the number of channels.
Get the audio channel type at the index.
Make a new media packet.
Gets the version info.
Get default time base.
Make a demuxer.
Play a video.
Shows the video at the correct time.
Make a codec descriptor for the codec id.
Print a single configuration property.
Register the factory with the url manager.
Generate a unique name based on the given object and extension.
Make a new media audio resampler.
Get supported video frame rates.
Get the list of supported video pixel formats
Gets a list of supported audio sample rates for this system.
Gets all of the supported audio formats.
Gets a list of all supported audio channel layouts.
Set a Java boolean flag.
Set a Java boolean flag.
Get the decoder for the current channel.
Get the demuxer for this channel.
Return a collection of the formats supported by the muxer
Creates a new filter graph.
The type of the filter.
Gets a byte buffer from the pool for the given offset and length.
Make an audio frame for a given audio format.
{ return input }
{ }
{ }
Returns the filter graph for the filter closure.
Get meta data as a key value bag.
Get the cpu from the string argument.
Convert the specified GNU string to a CPU number.
Return the os enum value for the os name.
Get the OS from the given GNU string.
Play a sound.
Load a shared library with the given name and major version.
Adds a library to the set of loaded libraries
Load a list of libraries from a single candidate library
Initialize search paths.
Returns true if the library has already been loaded.
}
Allocates a new stream at the given position.
Get the muxer for this channel.
Make a script transaction.
Decodes a byte array from Base64 format.
Generate a new random string.
Get the transaction with the given ID.
Gets up to the specified number of transactions for the specified address.
Get the list of transactions that have been sent to the given address.
Get a list of block headers from a range of addresses.
Get the block with the given signature.
Send a request and get the response.
Execute a script.
Compile a script to a string.
Write a primitive array to the stream.
Flushes the buffer to the underlying output stream.
Writes an object to the memory address specified.
Read the class from the file.
Converts the object to a byte array and returns the number of bytes written.
Sets the MMF to use.
Returns the specificity of the given class.
Resize a file to a given size. The required number of bytes will be written to the
Remove an element from the map.
Ascend a string.
Sets the output stream for the underlying implementation to be used.
Convenience function to create a json configuration
Create a struct configuration.
Calculates the size of an object i. e. an object of a different class than the
Clear all the caches. This method will block until all caches are cleared.
Convenience function to get the object input of an input stream.
get input from input stream
Copies a portion of an array to the object input stream.
Get the object output of this state
Register cross platform class mapping.
Get class name.
Writes an int to the stream.
Write an integer to the stream.
Writes a packed integer to the stream.
Write raw bytes to the file.
Get a reference to a cached instance of this class. Cache the reference if it has not been
Called when an object is written to this stream.
This method is called to notify the writer of an object has been written.
Get the class info for a particular class
Write an array to the stream.
Set the string to a null - terminated string.
Writes an array to the stream.
Finish change tracking.
Take a snapshot of the change set and copy it from origin.
register an object for write.
Writes an object to the byte array using the current marshaller.
Converts an array of bytes into an object. The returned object will be a copy of the data
Reads an array of bytes from the buffer.
Read an int.
Back up the queue by the given number of bytes.
Sets whether the thread pool should be enabled or disabled.
start embedded cassandra by config file and tmp dir
clean data in embedded cassandra
copy a file from a different location to a different directory
Checks if a port is taken by another host.
empty subscriber state
Get the onnx op descriptors
Returns the output shape of the function.
n! = cond
Return a boolean value of all elements of the coordinate list that evaluate to true for the condition.
Computes the logical AND of the specified dimension of the specified ndarray.
Computes the logical or of the given dimension.
return ; } }
Find the first array index matching the given condition.
Convert this attribute to a flat property type.
Create a function properties from a flat properties representation
This function creates a flat property representation of the given function properties
Set the throwable for the future to return.
Set the exception if the current exception is the first one.
merge coords list.
Partition the elements of an array list in chunks.
Convert an onnx data type to a nd4j type.
Shutdown the manager
This method returns current device architecture
convert a column to an inverse
Pooling 2d implementation
Create a compression descriptor from a byte buffer.
Splits a list of lists into a list of batches of a specified size.
Concatenate multiple arrays along a given dimension
Set the dtype for the data
Generate the specified number of evenly spaced numbers.
Returns a flattened version of the matrix
Computes the bilinear product of the two specified vectors.
Create complex object from a double array.
Complex value of a complex number.
Create a complex number of the specified shape and value.
Determines whether this replicated event should be replicated.
Subtract another i from this one and store the result in the provided result parameter.
Calculate the arc tangent of a complex number
ceil the given i to the given precision
Returns the negation of the complex number.
Mathematical absolute value of a complex number
Raises a complex number to the power of another.
Binarizes the continuous feature matrix
Sample a data set
Returns the memory footprint of this NDArray
Exception stack trace as string.
converts a full hostname to a full hostname with no slashes.
Convert string array to string.
Converts a byte array into a hexadecimal string representation
Get a list of strings from a delimited string
Splits the given string around the given separator and escape char.
if separator present
Find the next escape char in the given string.
Escape a string for use in an HTML entity or attribute name.
Joins the given strings with the given separator.
Convert a string to camel case
Get the stack trace of a thread and return it as a string.
Returns the inverse of arr. Throws an exception if arr is not square.
Access the nth element.
; }
; }
Creates the shape information for the given shape
Create the shape information for this shape
Returns true if the shape is a vector.
Get the order of the elements in the array
Returns the offset of the values in the array for the given indexes
Convert an array of indices to an array of indexes.
Get a short from the indexer.
Reallocate a new buffer and reassign the old pointer.
) { }
get a constant buffer from the fft
The uri for Kafka resources.
Element - wise power function - x^y performed element - wise
Element - wise logarithm of the input array
Find the maximum value of an array.
Find the index of the largest number between two strings.
Element - wise minimum of the array
Find the index of the smallest number between two strings.
Stable version of stabilize.
Element - wise exponential moving average.
Logarithm of the elements of the array
Bounds are expected to be in the range [ 0 1 )
Returns the next element in the iteration.
Build an allocation shape from the shape of the given buffer
Returns true if a file with the given name is found in the path.
Reads the attribute data from the stream.
Discard the least recently modified blocks.
Create a new ind from a pointer to numpy array
Create a new ndarray from an existing file.
This method is not supported for this library.
Establish a reentrant read - write lock on the object.
Returns true if the server is started.
The execution of the given operation on the state machine
; }
Get the input stream of the resource.
Returns the device id for the given thread id. If the thread id is already associated with a
override attach thread to device with specific id
Return the next device to use. By default if CUDA is not enabled.
Get operating system name.
Calculates the CPU architecture of the system.
Publish the response using a template.
creates a memory buffer of the given type.
) { }
Compute the sum of two complex numbers.
Processes the received message. This method does nothing if the message is not received.
Average pooling 3d operation.
Depth - wise 2d convolution.
Resets the internal state of this accumulator.
Get the class for the given op
Allocate a new array for this variable and return it.
Returns the shape of this dataset
Evaluate the function on a string
Compress an array for the given shape and order
Element - wise exponential distribution function.
Center an array to a given shape.
Truncate a complex number
Pad an array with zeros if the shape matches the target shape.
Find the index of the element with maximum absolute value.
Broadcast an array to all connected devices
aggregate a new message with the current row index
Returns the Gamma function of the argument.
Calculate the square root of a number.
Compute the cubic root of a big decimal.
Returns the value of the number raised to the power of the eth argument.
Returns the result of the first raised to the power of the second.
Round the value to the nearest multiple of n.
Tangent function.
Calculate the inverse hyperbolic sine of the number.
Calculate the inverse hyperbolic cosine of a number.
Returns the prec of the argument.
returns the prec of x
Returns the numerator of the number of precisions of the number at xerr.
Put a function for a specific id.
Get inputs for a differential function.
Updates the value of the given array for the given variable name.
Associates the given shape for the given variable name. If there is already a shape for the variable
Associate array with the given variable
Get property for function.
Adds a property for a differential function.
Add outgoing for.
Add the given arguments for the function for the given variables.
Check if this function has any arguments passed to it
Returns the result of the differential equation for the given inputs.
One constructor for the variable type.
Search for multiple ones by name and match the input
Find all the zeros of a given name that are like the input.
Remove a variable from a Differential.
Set the gradient of a variable that is known to the model.
3 - D Avg pooling.
Get the value of a particular gru configuration
Executes the given list of operations
Create a while statement.
Get the function with the given name from the registered functions.
Get the list of differential functions for the given function name.
Executes the backward function and returns the result.
Adds a variable as a place holder.
This method is not thread safe and should only be called from the main thread.
Returns the number of bytes for the given dtype.
Get a string for the allocation mode.
This method is used to get dtype from the context
Get operation number by name
Destroy all workspaces for current thread
print allocation statistics for current thread
Call blas procedure on a triangular matrix.
Calculates the z of a simple moving average along a given dimension
Decode the encoded data and return the threshold value.
; }
Invoke a scalar operation on a given dimension array
Assert that there are no workspaces open for the current thread.
Calculate the negative log likelihood given labels alpha mu and sigma
Causes the tick to be performed at the given time.
Request toe.
Release toe resources.
Get the current access state.
This method is called when a new message from the worker thread has been processed by the worker thread
Builds the matrix from a list of examples.
init host collectors
This method returns actual device pointer valid for specified device
) { }
This is the main loop of the updater. It calculates the historical gradient and the learner
host the task to the host
Creates an array of inds from an index.
Return a map of all properties of this function to their values.
Returns true if any of the arguments has place holders
Returns a list of output variables that are the difference of the two output variables.
Returns a formatted string of the given array.
Creates a new SameDiff instance for the given graph and tensor type.
convert a complex number to a blob
Load a blob of complex data
save the current record to the database
Copies the real values to the specified ind array
Copies the imaginary part of this element to the specified array.
Compares two complex numbers using the Epsilon method
Copies the elements of arr into this. arr must be the same length.
Returns a subset of the rows corresponding to the specified row indices.
Put the given row to the table.
Put a column to the matrix
Computes result = this - other.
Computes result = this + other.
Computes the difference of two complex numbers.
Addition from two complex numbers.
Sets the value of each element in the vector to a given value
Returns a new complex array of the original array of the real part of this complex number.
Compute the eigenvalues of a matrix using the BLAS algorithm.
Returns the symmetric generalized eigenvalues of the two provided matrices. The columns of the matrices
finds the element of a vector that has the maximum absolute value.
Copy a vector to another vector.
compute the product of a vector by a scalar.
{ } }
Count the number of non - zero occurrences of labels in the graph.
do the reduction and build the final loss
Returns the no arg constructor for the class.
return null ; }
Invoke a method handle with parameters.
Returns the first annotation of the given type that is assignable from the given annotation type.
Get declared annotation.
Checks if annotation is present.
Creates a new proxy instance for the given interface and result.
return null ; }
Save a single pojo
Create a new proxy for the given raw service instance.
Returns the metadata of the entity of the specified kind or throws an exception if the metadata does not
Perform a query on all keys matching the given query.
Hybrid query with fixed chunk size.
Perform a normal query on the server
Perform a projection query on the data store.
Return the number of results that match a given query.
{ return input ;
Performs a bulk load of the data contained in the iterator.
Concatenates the specified message to the path.
Creates a new instance for a given object.
Compares to with identity hash code.
Convert a raw key to a key.
Convert a typed key to a raw key.
{ return
Check whether the given type has the required number of type parameters.
Determine whether a type is a super type of another type.
Get the direct super types of the given type.
Capture a parameterized type.
Get translator.
Returns the populator for a given type and path.
Returns the index instruction for the given class or null if none found.
Returns true if the given method has a parameter annotated with
Returns all the fields and methods declared on this class that are of interest.
Gets the key metadata for the property.
Retrieves a value from the session.
Fetches the pending entities from the datastore and executes the translation function if the translation function returns
{ return pending ;
Recursively add indexed discriminators for the given class.
Register subclass translator by it s discriminator.
Get the collection component type for the given collection type.
Get the generic key type of the given map key type.
Returns the previous forward path of the specified path.
get final path from root node
Returns the string representation of this node as a path.
Return the number of elements on this path.
Put a collection of updates to the cache.
Empties the cache for the given keys.
Attempt to perform a put operation on the cache map.
return null ; }
Returns the keys from a collection of buckets
Sets the key for the given entity to the provided value.
Sets the id of the given pojo to the given long value.
Get the raw parent key.
Register a subclass of this translator.
{ return true
Transform owner.
Returns the annotation for the given type or null if no such annotation exists.
Add all mappings from the other session to this one.
Load a single result from the cache.
Executes the next round in the chain.
Translate result.
Fetch a set of entities from the datastore.
Loads an entity from a Google Cloud Datastore key.
Creates a raw key of the specified kind with an id.
Gets the raw key value for the given key.
Returns the id value of a Cloud Datastore key.
Convert a url safe key to a google cloud datastore key.
Wrap a query in a transactionless context without a transaction
Run some work in a new transaction.
Run the work in a single - threaded transaction.
Returns true if any of the given conditions match the given value or pojo.
{
Asynchronous version of the datastore method.
Gets the metadata for the given entity.
Allocate the given number of entities from the datastore.
Open a new Objectify Object.
Pop the top element off the stack and close it.
Makes all values in the list homogeneous.
Create a new reference with the given value.
Guaranteed to return the value or throw an exception if not found.
Add a new value for the given key. If the key already exists then the value is added
Returns true if the underlying resource is done.
Generate an array of if conditions based on the provided classes and field.
Completes the execution of the script.
Get container by generic type and path
Get the stat for the given kind creating it if necessary.
If the given throwable is an instance of runtime exception or error unwrap it and throw it. Otherwise
Returns the translator for the given type key. If a translator does not exist for the type key
Get the root translator for the given type
Returns a translator for the given type key.
Method load.
Returns the property value of the container.
Sets value on a pojo.
{ } }
Get property value.
write all extensions of an extendable message
Write the content of a category.
Write a list of categories.
Process a snippet and return the transformed snippet.
Return an iterable of bid response builders for the given response.
Find a bid with the given id from a bid response.
Update all bids in the response using the updater function.
Remove all bids from the response matching the given predicate.
Read all extensions with specified message.
Returns true if the current token is not null ; false otherwise.
add a new message type
Register a new writer for a specific field of a message.
Processes the given bid request.
Processes the fields of the current bid.
An efficient way to update a list of builders.
Filters a list of messages based on a predicate.
Returns the name of the current element.
io. json START OBJECT comprehension
io activity with a start array
Returns the current json token without consuming it.
Writes a boolean field to the JSON generator.
Write a list of strings to the JSON generator.
Write an integer field to the JSON generator
Write a list of longs
Write a list of protocol message enums.
Resolve a base url against a target.
Return a new url which is the same as target but starts with the query string target.
Get host segments of a url.
get url host
return null
Load a list from storm configuration.
extract config element from conf object
{ return
Generate a warc file.
Extract refresh url from the given refresh url value
Retrieve the metadata for an outlink.
Filter the given metadata according to the rules specified in the constructor.
Add a new url to the queue.
Clean field name.
Gets the charset from the BOM.
Detect charset from text.
) { }
Tries to find the position of the clue in the given content.
Set a metadata value.
Get first value from metadata.
Get cookies from an array of strings.
check cookie domain match to url host name
Returns the cache key for the given URL.
get robot rules from cache
Extracts the meta tags from the document.
{ }
This method is called by the web container to filter a url.
Performs the filtering by applying the list of substitutions
Parse the given rules file and return a list of the rules.
return url ;
Construct a navigation filters from storm configuration.
add a record format to this bolt
return ; }
return true ; }
Construct a parse filters from storm configuration
Append a node to the current node.
Receive notification of a processing instruction.
This method doesn t do anything.
Receive notification of the beginning of a DTD.
Returns the value for the url field.
Cuts a text if it is longer than max length.
Determine the duration of a custom interval.
Construct a url from storm conf
Set the number of wheel items.
Resolve the size and state from the measure spec.
Set the drawable to be used for the empty item.
Set the angle of the wheel
Update the selected item position.
invalidate wheel item drawable
Converts a raw position to a wheel position.
Update the angular velocity with the current angular velocity.
Get the contrast color from a compound entry
Clamp a number to the given upper limit.
Write coveralls to the given writer.
Returns a byte buffer containing the remaining data.
Sets the string value of the matrix to a given string
create a 1D array from this vector
Make a char array from a string.
{ }
{ } }
The forecast time interval offset is calculated from the first record of the forecast grib2 record.
Show this SWFFrame.
Show this SnackBar if it is not iconified.
Estimate the size of a given location from a list of data.
Main method for testing this class.
new unit name.
new unit name.
Make the name plural.
Determines whether the given date is included in the interval.
Intersects this date range with the specified date range. If the specified date range is empty
Extend this date range by the given date range. If the given date range is empty this
Extend the interval by the given date.
Set the start point of the event.
Sets the end date of the event.
Set the duration of the track.
add map bean action
prints the yytext followed by the next char to stderr. It assumes that the yytext
Returns the name of the node.
Format the parameters as a string
This method is used to open a new DAP session.
Compute the bounds of the edge table for the given lat lon.
Synch the UI min and max fields with the current time.
compute the unlimited chunking of a set of dimensions
Register a new directory.
Processes all the events in the queue.
Wrap a netcdf dataset in a feature dataset
Returns true if the want feature type can be assigned to the want feature type
{ return }
Write a catalog.
convert catalog to html
Get user css.
Get head of this user
make dynamic catalog object from path
{ }
Convenience function to initialize the global http config with a provider and a user agent.
Read the content from the specified HTTP session and return it as a string.
Convenience method for sending content encoded as a string to the server.
Gets the default front page to use.
Override to make a catalog.
Extract the geospatial coverage from the grib collection
Get single dataset or by type name.
Check if this value is nearly equals to the given other value.
Create a new unit id.
Parse an attribute specification string into an array of values.
Reads the top of the queue from the file
Converts two shorts to an int.
Converts a byte array to an int.
Get date from julian day number and msecs
Returns a valid netcdf object name based on the specified string.
Check whether the name is a valid netcdf3 object name.
IOException { }
Read record data subset of a given record section.
. IOException {
Make a time struct with the given time index.
Make a time struct from a given calendar
Check if a time template is present.
Add a function to the registry.
Returns the function boolean definition with the given name.
Returns the Function object for the given name
Load a function.
Get level name.
Get level description from a record
Answer the level unit for a given record.
Returns the projection type for the given projection definition.
Determine if the record is a vertical coordinate.
Is record at this level a layer?
) { }
Creates a dummy transform variable for a netcdf dataset based on a given coordinate transform
) { }
This method is called when executing this application from the command line.
Saves the settings to the preference store
Returns a copy of this chronology with the specified time zone.
Writes the count to the stream.
Writes an array using the serial writer.
Writes the bytes to the output stream.
Writes the bytes to the output stream.
{
Convert a gwt. date. range to a calendar date range
Create a gds object of the appropriate subclass based on the template.
Parse a DAP formatted string and produce a DAP formatted number.
dasparse - Parse a text in DAP format - out - of - band.
Swap the header of a grid
method to read a grid from an image
Usage : idas file1 num = 1 file2
Creates a class definition.
Write headers and service information to file
Write the operations to a new file
Find all files in the given directory that match the given file filter and closure.
Iterate through the specified log file line by line.
{ }
Find a grid record based on a parameter
word + nword = 1
This method is synchronized in order to avoid extraneous array allocations when unpacking data.
Calculating the upper and lower limits of a ugrb signal using the smallest common denominator
. IOException ; }
Read a GRIB2 compressed data block
print all grids
return ; }
Obtains a local date from the given calendar object.
Create a date from a java. util. date.
{ }
Create a date from the given millisecond time.
Parse a string with unit into a date.
Calculates the difference between two dates.
Create a new atomic dap array.
Sets up the instance variables for this request and response. Only one instance of this class can be
Escape a string according to RFC 2396.
Create a list of slices from a list of ranges
Unwrap a netcdf file that may be referenced by other netcdf files
True if any dimension in dimset is a variable length dimension.
Returns the effective shape of the specified dap dimension set.
Add the seconds to the given date and return the new date.
Multiplies the current unit by the specified unit.
Override divide by to accept a different unit.
Override divide into to specify the new unit.
Return a new unit that is raised to the given power.
Converts a value to a derived unit.
Convert the input unit to a derived unit.
Converts a derived unit to a base unit.
Get the canonical string representation.
Read data from a partitioned dataset.
io. read data from a 2D array
Returns a new time series collection containing the subset of the features for the given stations.
find service by name
Get the gate size of a specific data type.
Get the start of the first gate of a particular datatype.
Get the gate count for a particular data type.
t : { }
Returns the preferred size of this container given the components in the target container.
) { return null
Generate proxy ds resolver catalog.
Get a new instance set to the specified unit.
Get a new instance of date unit with a different calendar and time unit.
static factory method to create a new instance of a date unit using the given calendar field period and
Returns the quantity dimension of this unit.
Checks if the file is a valid file according to the file specifications.
Read data for a single variable.
Read a data vector from a V2 file
Read data from this file into a byte buffer.
Calculate elevation for a given angle.
Calculate the step size for the histogram bins
Calculate az value between two shorts.
Calculate the data coefficients for a given record.
Calculate nyquist function using Taylor Series.
Transform a dataset to a new vertical transformation along the specified time dimension
Set debugging flags from a given debug flag.
Extend the index file mode.
Reads a variable xy.
Returns true if the record for the given index is missing in the given variable v2 for the
The bounding box for the current location.
Finishes writing to the stream and resets the internal state.
Write a tab character to a string buffer.
Pad a string to a certain length
Formats an integer into a string of the specified width.
Left justified string of a long.
Convert byte size to human readable format.
Prints the number of significant figures to stdout.
display number of decimal places of the decimal point
Get the shape string from the shape array
{ }
Method to return the constraint string.
Compose two slices into a single slice. The target and the src slice must be of
Map the slice at the specified index.
Dump a number of bytes from a buffer to the stream.
Get the earth ellipsoid with the given name.
Get the type of earth ellipsoid with the given ID
Decode a VLEN data section
Extract the URLs from the text.
Get the text content of a URL.
Method to filter out tags that do not contain the specified string.
Read data from this file into a byte array.
Adds all the attributes from the given iterable to the dataset.
Removes an attribute.
Remove an attribute ignore case.
Gets time offsets in time units.
Add an action source listener.
Parse a standard date from a string in the standard format.
Parse a standard or iso date from a string
get the date of the time unit.
Return the date of the counter
Make a date from the time unit
Calculate the time value from a given date.
Make a date String from a double.
grid spacing in km
Add all the dimensions to the netcdf file
) { return null ; }
default : return false ; } }
) {
Add a new coordinate system variable to the netcdf file.
}
Calculate the position of the point on the sphere.
Calculate mercator coefficient.
Calculate dx and dy
) { }
Return the metadata content for a particular uri.
;
Check if the next record in the file is the expected one
Writes an array of bytes. This method will block until all the bytes are actually written.
Sets the clear name.
Returns the name of the coordinate of the specified axis
Get the variable name for an axis
Builds the XML response for this response.
Build a new exception from the current builder.
Returns a list of dimensions that contain the name of the given level.
Make a z dimension given a set of values and units
Create new variables for the given dimension
Make a time axis by using a reference to a time variable
Shave a certain bit off a float value.
grib - to - netcdf main.
If the netcdf file is already an instance of netcdf dataset it will be returned
Open a netcdf file from the local file system
Clear the coordinate systems of all the variables in the model.
Find a coordinate axis of a given type.
Find the coordinate axis with the given full name.
Find the coordinate system with the given name.
Find the coordinate transform that matches the name passed in.
returns true if we need to enhance something
Sets a range of values for the given variable
Set a list of values for a given variable
Static factory method for creating an array from a list of strings
Returns the current dimension index.
get an existing file for the given name
Gets all features within the given bounds.
Discretize the sample into discrete samples.
Adds all metadata from the given thredds object to the current one
Adds a type - specific documentation string. If the string is longer than the current number of documentation
Removes the documentation for the specified type.
Calculates the maximum number of bytes from the given position within the segment.
Returns true if the given NetCDF file is mine
Get a list of the names of the characters in the string that are used as part of the
Build convention attribute name with main and given convention names
{ }
Find the coordinate axes of all the variables in the netcdf dataset
Look for coordinate systems in the netcdf files.
Make the coordinate systems for all the processes in the list
Make the coordinate system of all the variables maximal.
Check if axis is a coordinate axis of a given variable
performs a subset operation on the provided dataset
Apply a filter to the data
Check if a dataset is read.
init only once
Returns the number of times the specified value appears in the collection.
Adds a name and symbol to the table.
Compare this row to another table row. Ignoring case
) { return 0
Pass all reserved keys to the dap node.
{ return true ; } }
Register a class.
{ } }
Indicates whether a DSP is already registered with the specified class.
Unregister a DSP.
get the forecast time interval size in hours
The forecast time interval offset is calculated using the reference date and the forecast time interval. The forecast
Get the vert unit for this vertex
sorts the dap tree by frequency of occurrence
Find a variable in a dataset that has a particular attribute.
Find a variable in a dataset with a specific attribute value.
Returns the name of the variable with the specified attribute value.
Find variable with attribute name and attribute value
find a nested structure in a given structure
Returns true if the given netcdf dataset has a record containing a structure
If the key starts with a literal string get the attribute value ignoring case and return the key unchanged
Get the feature type from a netcdf dataset
Get the variable name from a netcdf variable literal key
Returns the value of the coordinate j and i value.
Figure out the distance between a point and a double.
Returns the coordinate values of the WKT.
Returns a d that contains only the specified range of values from the two specified ranges.
Finds the run with the closest value to target.
return null ; }
Adds an action to the menu.
Returns the match for the path or null if it does not exist.
No arguments are evaluated by this application.
Find the index of the first occurrence of this pattern in the given byte array.
Add a picture to the cache.
print the cache size and the maximum size
Stop the background loading process.
Stop background loading of all pictures except the one specified. Returns true if background loading was stopped.
static method to make get request
make the http method from the web service request
Generate a random float value of the specified type.
Returns the next number in the sequence.
Reads a CDM variable from the given stream.
Get a file system provider for a given URI.
Read stations from table.
Returns the index of the specified value. If the value is not found it is returned by the
Removes a data variable.
Convert height to meters
Read a grid from a file
Set the number of colors
{ }
Convert an URI to an auth scope.
Finish compares the grid with the last grid in the iteration
Checks if this factor is the reciprocal of the given factor.
get the catalog of a specific directory
Find an index in the range of a given element.
IOException { }
Method used to read the metadata content of the current element.
throws SAXException { }
Validate metadata content of an object
Read category gen configuration from an XML element
read xml element from an element in a dataset
Read an element from a namer element.
Read the filter element in the XML file
Read result service element.
throws IOException { }
Create an XML element for dataset source
Create dataset namer element.
Create an XML element for dataset filter
Create an XML element for a result service element.
Checks if the flag is set.
construct the menu from the given menu struct
Adds all the parameters in the specified table.
Makes a gempak parameter from the num value of a parameter.
Returns the parameter with the given name.
Read the contents of the file and convert to a string.
Reads the specified number of bytes from the input stream.
Replace the template string with the corresponding ensemble name
Sets the station ID and description
This method is called by the reader when a new line is read. Subclasses can override this
{ } }
Set the NetCDF file to be processed.
Set debug flags from ucar. nc2. util. debug
Parses the name into its component parts. The result will be a new name instance representing the
Returns true if the given struct is a group
Get the length of the netcdf string
Get the shared dimension for the given group or root
Construct the list of dimensions of a group from the DASP data.
Checks if the given dtype is a unsigned type
Read data from the device.
Get an image icon from the CLASSPATH
Get a named image.
Make a custom cursor from the given image name.
Read data from a file.
Read a value from a positioning data stream.
read a fill of an object from a bb and return it
Make a primitive array of the given size for the given data type.
Convert a byte array to a UTF8 char array.
Convert a char array to a UTF - 8 encoded byte array.
Convert byte to char array.
Reads a section of a MATLAB array from the given section spec.
Parse a section into the array data.
Get a string from a record
Returns the scalar structure of the given member at the given index
Get the ucar. ma2. array value of a member
Create a structure members object for the given structure.
Add the dimensions of a group to the netcdf file
return path }
Adds a nested dataset without explicit coordinates to the dataset factory.
Adds a directory scan to the crawlable dataset manager for a given dataset
region SequenceFileScanner Implementation
; }
Returns the typical dataset.
Make a new dataset from the given parameters.
Put resource control in the hash table
Add a single data point to the Curve.
Returns the lower bound of the polyline
Returns the lower bound of the polyline
Set the valid flag to true if we have a valid answer.
{ }
add all feature of the featurecollection to the data set
Parse a constraint from the request state.
Evaluate the clauses of this grammar.
Prints out the constraint string
Adjust a netcdf file so that the attributes defined by the odl function match the
This method sets the shared dimensions for the variable
check for dimension in unknown dims
Recursive search for a group in a group tree.
Get the content of the URL as a string.
Returns the URI of the standard dataset.
{ }
Adds a new component with a certain constraint.
Invalidate the current layout of the given container.
Removes the specified component from the layout.
Calculate the minimum layout size necessary to accommodate the specified container.
This method lays out the layout of a container.
Does the coordinate system have a non - null value?
Get the maximum radial value of the chart
Convert from WGS84 to sat.
return sat ; }
Convert lamda goes to geos.
Get the sweep angle axis from a feature geometry
The correct way to convert a sweep angle axis into a scan geometry
Sets the runtime coords for this rule.
( ) { }
Rewrite point feature dataset.
Returns the array sequence of the given member.
Returns the full name of the node.
The unique id is a concatenation of the authority and the id.
Get access of a given type
find a dataset by it s name
get the parent catalog
Return all metadata of the specified type.
Find service by name
Retrieve variables of a given vocab from the metadata
Recursive method to find all the catalog ref contained in a list of datasets.
Escape a path for use in a URL.
) { return array
Extrapinterpolates the array by a given number of positions.
Latitude is the great circle distance from the center of mass.
Override get detail info to write the parse info into the string.
Make a structure for a gempak resource.
Make a missing variable.
Make a new parameter variable from the given gempak parameter
{
Return the size of stn var which name equals given name
Get a scalar array for the given data type.
Returns the state table index for a given yy state and symbol.
if yy error verbose > 0
print yy to stack
Reads a DMR encoded string.
Reads the next token from the stream as an error.
IOException { }
Read the header of the file.
Convert a string to a date using the default timezone.
Read a table from a URL or file.
function to transfer a group from one dataset to another
Gets the STN file for the given location if it exists.
This method will open the appropriate file for reading from the last segment of the file name.
return 0 ;
return end
create all runtime collections as well
Set the value to the text field
p = CODEINTEGER ;
Calculate Euler Radar Longitude and Latitude.
Clean unit string
Clean a name of problematic characters
Returns true if the given string is unitless.
notes factory.
Get the var id from the note
Parse a das object from the genereated data.
v - > find dods v
Recursively walk the data tree of this v until it finds a data v
Returns the child v at the specified index.
Get the parent group. Create the root group if it does not exist.
Get the i th dimension of the matrix.
Find the index of a dimension with a given name.
Get the units of this cdm.
Get the shape as a section
Returns a slice of this variable that contains the given value along the given dimension
Set the enum type definition.
Reads a range list into an array. If ranges is null then all ranges are read.
Read a string.
{
{ }
Writes the CDL.
Get a string representation of this object. Useful for debugging.
Set the data type for this sequence element.
Set the dimensions for this shape and reinitialize the shape.
}
Set the dimensions of this group.
Reinitialize the dimensions and recompute the shape
Set a dimension of this shape
Sets cached data.
Returns a list of all the dimensions contained in this map
Set the bounding box of the map view.
Sort the collection and remove duplicates.
Get all datasets in the registry.
Check whether the given path matches any of the configured dsp extensions.
Opens a cdmdsp file for reading and writing.
Build the DMR if not done already.
Recursively build seqtypes for all data type of a given structure or sequence.
Build the dimension reference list.
Find a matching enum value for the current enumeration.
Get the core dimensions from a dimset.
Process a bufr file.
Process a single message as a dataset.
The doPost method of the servlet. < br > This method is called when a form has
Get the current affine transform.
Check if we want to rotate the map
Calculate the map area of the image.
Convert a world point to a screen point.
Pan the map by a given amount.
Begin a zoom operation.
prints out the size of the image and the width and height
Add a listener to the dispatcher.
Remove listener.
send a event to the listeners
send event to listeners
. IOException ; }
Prints a variable data of the given type.
Format a variable that is read by a section of the given specification.
Prints the given structure data to the given print writer.
Print plain array
Print an array to the print writer pw.
Writes a NetCDF file with the specified netcdf writer and want values.
Read a double attribute.
Add a new parameter to the parameter set
Reads the value of an atom from a dap variable.
Is positive up.
{ }
Build a label from a quantity id.
Sets the bit at the given offset.
Read nb bits of num.
Returns the next nb bits in the stream.
Open a connection to the server.
execute the das command and check the result.
get the full ce string
Project a projection point to the given latitude and longitude.
idv dataset catalog
Convert a gwt - style date range to a calendar - compatible one.
throws FileNotFoundException.
Parse the satellite information.
handle sensor information
Read the root element from a file.
Clean the character data of XML.
Xunescape a string.
Escape a string to be a valid URL string
Unescape a string containing a URL. UTF - 8 is changed to null.
Returns the escaped backslash of a given string.
Encode a string for use as a backslash sequence. A backslash sequence differs from normal encoding in
Add the lightning global attributes to the netcdf file
short.
; }
Reads a double from the specified byte array at the specified offset.
Converts a float value into a 32 bit float value.
Converts a double value back to a double and places the high bits into the low bits of the
Convert a short to a byte array.
Convert an int to a byte array.
Convert a long value to a byte array of length num.
Subset this vertical transform within a given range of parameter bounds.
This method gets called when a XML element is added to the tree and then writes it as
make a new cluster
Emit the start of an XML document
Write all the features to a new file
add all levels from the list of records to the current levels
Add vertical dimension to the netcdf file
Add the data to the netcdf file
) { }
Returns the index of the given record.
Exit the console.
Get a file from the cache if available. If not available create a new one and return it
Get existing file or cache.
Show the contents of the cache
Remove all the cached files from the given directory.
Calculate the bearing from a pair of points on the earth
Calculate bearing from a pair of points on Earth.
{ }
find a point on the planet
Find a point on the default earth given its location and its distance from the given point.
Find a point on the default earth.
Load picture in thread.
Set the picture with a url and rotation.
Load picture to cache
Stops loading the image.
This method is called when an image needs to be removed from the DOM.
Get the dimension of the picture.
Set the source image for this node.
Returns the URI of the standard dataset.
static method to transfer data descriptor to other class
Returns the number of bits used by this object.
Two data descriptors are equal if they have the same class and the same replication and type.
Load the header from the file if necessary.
Load data from the input stream
Get the value of a field.
Returns the double values of the given field name.
Returns the strings for the given name if they exist.
Returns the boolean values of the given name.
Returns the name of the i th field.
Get the names of all fields in this record
Main method for running dbase file from command line
Get the attributes of the received message.
Set the parent attribute to this attribute.
Removes the given attribute from the MBean.
Get the group for this dataset.
Returns the parent of this node or null if this is the root of an attribute or attributeset
Get the escaped short name.
Returns the path of the current node to the current one. The path is a list of nodes
Returns the path of the dap from the current node to the root of the dap tree
Get the FQN of the current path.
Build the device.
{ }
Get list by key.
Get object by key name
Read data from a grib2 file
Prints the current state of the dispatcher.
{ } }
Write to a string.
Write to a file.
Write the given element to the given output stream.
Write the XML content of the given element to the given writer.
Make a dimension element for the given dimension object
Return a new coordinate for this transformation
Returns an int array for a given attribute name.
Get or create a base unit.
duplicated in JDK
Base unit db.
Gets the sole instance of this class.
return 0 ; }
Find the index of the closest coordinate to a target.
Returns an optional that allows to specify a subset of a specified range of values for the axis.
Open a data set for the given dataset.
Open a data instance for the feature type of a dataset.
Annotate a netcdf dataset with the data from the dataset
Read a record from a Grib file.
Assemble a string from the given parts
Trims the string and converts it to a canonical form.
Normalize the units
Call this method after you are done adding items to the HTML document.
Returns the object associated with the given key. Returns null if the object does not exist in the
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Get the date of the time object.
Prints an XML node.
Prints an XML declaration.
Checks if the given attribute is one of the special attributes defined in the DAP.
Prints the dimrefs of a variable
Checks if the file is a valid area file
Sets the attributes of the area to the values in the given variable.
Sets the value of the nav block as an attribute of the given variable.
Get the type from the name of the calendar.
private int str = 0 ;
find the lat lon time and elevation for a table config
Returns the name of the coordinate of the specified axis of a specific type
Find the first coordinate of a given type for a given axis.
) { } }
Find the dimension of the specified axis of the given type
{ return null
Find the dependent axis of the given type.
Returns the value of a given variable in the given row.
Read the next marker from the data stream.
IOException { }
main This is the entry point to the demo.
Returns the string values of the given member. The member must be a string type.
Get a list of parameters for all the sensors.
Sets the active stations
Sets the currently selected station.
Redraw the canvas
Read a rectangle from an object
Writes this ellipse to the specified stream.
Add the specified db to this db.
Add a unit to the data set.
Adds a new symbol to the map. If the symbol already exists it is not added.
Looks up a unit by its identifier.
Add a new unit only if the name is not null.
Add by symbol.
Add a new key and unit to the map if the key does not exist.
Add elements to the given menu.
find grib2 record based on position in the file.
. IOException {
If the org attribute is null then no need to serialize anything.
Create a new vertical projection with the same attributes as this projection but with the default values for the
Open a thredds dataset.
Open a thredds dataset.
Open a netcdf dataset.
Annotate a netcdf dataset with the values from the inverse dataset
add a new partition to the operator
Create a mutable grib collection.
Create a new enhancer that enhances the matching on a particular dataset.
Create a new enhancer that enhances the matching on a particular dataset path
Writes the DQC to a XML file.
Read a H4 structure from a file.
Sets the picture to be displayed.
Set the buffered image for this picture model.
{ }
Override paintComponent in order to paint the scrollbar.
Convert Time to ITF [ 0 ]
Convert an int array to a string.
; string time ;
Get the iday of the month for a given year and interval.
{ }
Read a number of swp4 bytes from an array of ints.
Get grid packing type string.
get data type from constant
; } }
. IOException {
Get the tag for a given code.
Get the next image in the iteration.
Size of data in the type.
Gets the sum of an array.
Set the grid to be a certain bounding box
}
Clear the grid
test if the object is clear of the grid
Finds the intersection of the given rectangle with this grid object.
Finds the intersection of the given ray with this object.
Find the closest object to the given point.
Returns the distance squared of the specified point to the specified point.
Get or create base unit.
Parse a fragment and return the corresponding service type
return null ;
{ }
Checks if a file is a DDS or a DDS2 file
Send data to the given section.
Returns the suffix of the specified fqn.
Returns the fqn prefixed with num in the string fqn
Recursively locate a file or directory.
{ } }
Extract an array of bytes from a buffer. The returned array will be a copy of the buffer
Returns the path of a dap variable as list of dap variables.
Returns a null path if the provided path is null.
Join an array of strings with a separator.
Returns true if the path contains a drive letter.
{ } }
Converts an index to a list of slices.
Calculates the slices of a variable at a given offset.
Check if a list of slices is contiguous.
Returns true if all the slices in the list have the same count
Convert a list of slices to an index object.
Read data from an input stream.
Sets the station info for this data object.
Read a feature collection from a file.
{ }
Finds a variable by name.
Get the axis type of the variable
Get the statistic type from the time range indicator.
Subset longitude axis.
Returns a list of ranges that are defined by the system.
Set default values for all properties in the given map.
Get the current session id.
set the maximum number of redirects
Whether to use sessions or not.
Method close.
{ } }
track a session for use in unit testing
Set the global credentials provider.
validate a url and get the text of the panel
Creates a new index of the specified shape.
Compute the number of strides needed to achieve the desired shape
range exception
Reduce the index by deleting all elements with the same rank and number
Reduce the array to the given dimension.
Returns a new index that is the transpose of this index. The new index instance is clone of
Returns a new index that is permuted as a copy of this index.
Returns an index iterator for the array.
Returns the current element in the iteration.
Sets this index to the specified array index. The array index must be a rank - 1 array
Set a dimension value.
Set all the dimensions for the given values.
; }
Make a date range representing the given time interval.
Create a list of dates from the row headers
make a list of gempak parameters from a part
Returns a list of gempak stations that match the block headers
Returns a list of the names of all the stations.
Returns a list of dates
Finds the index of a gempak station with the specified ID.
get file type string.
Increase the indentation by the given number.
Set the indent size.
Create or read a grib index from a single file.
Add a directory scan info to the collection
{ return
Scan first time.
Set debug flags based on the given debug flags.
Adds a new variable to the file.
This method actually writes the netcdf file to disk. This method is not thread safe.
{ } }
String representation of this slice and its subslices.
Sets the original variable of this experimental distribution
Read the entire contents of this object. First check for cached data then call superclass read method to
convert all data members that need to be converted
convert an array to a structure
Convert member info to the actual class
Find the variable with the original name of the given name.
Returns true if the given variable has a data field.
Enhance all the variables in the model in the specified mode
Should return true if resource control is OK for the given request path.
Make an empty sequence from the given sequence.
Make a sequence from the given values.
Make a sequence from a gempak resource.
Adds the vertical coordinate attribute for the given variable.
reads the XML file specified by the uri and returns a Catalog object
reads an XML catalog object from a string
parse an XML file and return a catalog
Write an XML file from the catalog to the output stream.
Get a metadata converter for a given key
Get a unique identifier for the unit which may or may not exist.
Multiply this unit by the specified unit.
Override divide by to handle cases where this unit is not a derived unit.
Converts the input array to a derived unit array.
Return true if the given unit is compatible with this unit.
Write a simple geometry to a feature file.
method to write a point to the XML file
Write a line to the file
Write polygon to the XML file
Returns all subnodes of a given parent node.
This method iterates over all attributes of the given node and if they are marked as reserved add
Get a subset string from a variable
ma ( from ) ; else return null ;
Set the value of a member array. If the member does not exist it will be created.
ma factory method for a given structure.
Returns the geometry type of the given variable or null if the variable is not defined
Constructs a station feature from the given station data.
Compiles the given AST into the DAP format.
Compile a filter expression.
redefine a dim
Create a view of the array.
check if rectangle b contains this rectangle
Extend the bounding box of the polygon to include the given point. If the provided point is
Extends another rectangle.
Intersect this rectangle with another one.
OPERATIONS ON AN ARRAY - DESTRUCTIVE
Indicate whether the two arrays are conformable.
Conformable A - > B
convert array to another array of the same type
Copies the elements from an array to another array.
Copies all elements from one array to another array.
Copies the elements of the two arrays a to the result array.
Get the minimum and maximum values in the array
Set a double value in the array.
Make a catalog builder from this builder.
If the given projection is already a projection implementation it is returned directly. Otherwise a new projection adapter
Unescapes a string containing a valid DSAP id.
return null
Unescape url.
Escapes a string for use as a backslash.
Unescapes a backslash to a string.
Splits an escaped name into a list of tokens.
Returns the index within this string of the first occurrence of the specified character.
Convert a backslash to a DAP string.
reads an atomic scalar from a dap variable
Convert a compound array to a compound array list
Get UI object for given class and property
get j from component.
Compile the dap to DAP format.
compile a structure to a d4 cursor
Translate a dap structure to a d4 cursor.
Compile a d4 sequence array
Compile a sequence to a d4 cursor.
Reads a little - endian integer from the stream.
Get the field by name.
Returns the value of the field with the specified name.
Sets the value of the field with the given name to the given object. If the field does
Adds a field to the form.
Adds a check box field to the table.
Adds a date field to the table.
Adds a double field to the class.
Adds a int field to the class.
Adds a password field.
Adds a text field to the constant pool of the class being build. Does not check for duplicates
Adds a text combo field to the schema.
Adds a text area to the form
Add a heading to the current layout.
Add a component to the layout
Add an empty row to the layout
Find the currently active frame or null if none is active
Get the current cell spacing value from the cell descriptor.
Return an array of the factors for the loop.
} }
Returns the list of factors raised to the specified power.
Checks if this dimension is reciprocal to the specified dimension.
Returns whether all the sub - factors are dimensionless.
Create a grib1 param tables instance.
Create a grib1 param tables instance for the given element.
Adds a parameter table to the lookup.
Add a new parameter table to the database.
Returns the unit that raised the given power up to the given power.
Converts an array of input expm values to an array of output expm values
Initialize the unit hash table.
Make a vertical variable
Read the name from the file.
Read a short value from the byte array at the given offset.
Read an int from the byte array at the given offset
Read a float from the byte array starting at the given offset.
Read a double from the byte array at the given offset.
Throws an appropriate exception if the requested alias does not exist.
throws exception if symbol does not exist
Create a new instance of a converter.
Set structure data
Sets the point feature data.
Draw the outline of this shape based on the given transform
Returns an iterator over the shapes in the data projection
Process the input stream.
Read a number of bytes from an input stream into a buffer.
Sets current offset to the number of more bytes to read.
Reads up to len bytes of data from this input stream into an array of bytes.
Skip the given number of bytes.
Add the new dimensions to the netcdf file
Finds the index of the coordinate in the list of levels.
Check if the file is a valid file according to the header.
This method will open the file and parse the header.
Reads the data of an array.
Read one row of data from an array of bytes.
{ }
Create a base type for a given variable
Set the map area.
Set the map area.
set map area to lat and long
{ }
Adds the actions to the given menu
redraw every x ms
Change the screen size and check if it is the same.
Sets the selected.
Returns the double value at the specified offset.
Gets a double from an atomic value.
Gets the value at specified index.
Convert a Gini entid to a name.
{ }
Find parameter ignore case.
{ }
Returns the number of time steps per channel that the given filename is part of.
Get the file name for the time series at the given index.
get file names if they are not template
Get the path to the ddf file.
Get the full path to a file
Adds a new channel substitution to the model.
Convert a reference date to a time.
Read a WMO from a. wmo file.
Returns a copy of the internal buffer as a byte array.
Calculate the pcode of a 12n13n14 struct
Construct the code for a pcode 25 method
check the header of the file
encodes a 5 - bit pcode to an array of ints
pcode 128 pcode
Returns the wavefunction levels for a given wavefunction.
Get the dualpolation levels for a given color table.
Add a new NetCDF variable to the netcdf file.
Add a new parameter to the netcdf file
Uncompress a compressed buffer
Calculate unsigned integer using Horner algorithm.
This method reads an unsigned integer from the input array.
Attempt to convert a byte array into an object of a given data type.
. IOException { }
Create a new request object for the current request.
Send an error.
Anchor the poly to the given point.
Stretch the current clip to the specified point. The new stretched point will be invalid.
Internal method to do the formatting.
replace the data of the given structure members with the new data
Ensure the memory array size is OK.
Reads a two byte integer from the file
Reads a unsigned integer from the specified file
Reads a three byte integer from the file.
Reads a two byte integer from the file.
Reads a three byte integer from the file.
Read a 4 byte float from the file
Returns the value of a float in the range of 0 to 4.
Reads a 8 - bit integer from the file and returns it as a long.
Count the number of bits set in a bitmap
Create a copy of this projection
Convert a LatLong to a Well Known Path
Convert a string to a string with special characters escaped using the given string as the delimiter.
Unescape a backslash string.
Splits a backslash separated path in a single list.
make the fmrc inv instance for the current date
get service special part
Calculates the number of projected components of this vector.
Returns the time of this date in the local date system.
Creates a new bb that is a copy of org. The returned bb is a copy of org
Test program.
Read a record from the protobuf object.
Returns true if the given NetCDF file has one of the global attributes
Make the UTM transformation.
Reacquire the area file.
Determines if this date is before the specified date.
Determine if this date is before the given date type.
Determines if this date is after the specified date.
Set the value at the given index.
add a new coordinate system to the list
Set the units for this measurement.
Get unit of this measurement.
Initialize a new instance of the tracker.
read config catalog from a file.
Process a list of datasets.
Read all the cats in the directory.
Returns true if a longitude is between two lons.
Convert latitude to a string in decimal degrees
Convert a longitude to a string
Compare this quantity to another.
get selected dataset
Set the selected dataset.
Build a tree path from the given node
Open all items
Sets the location of the database that is to be read.
Sets the name of the catalog.
Returns the alias for the specified variable
Write a number using variable - length encoding.
Write a portion of a string.
Read characters into a portion of an array.
Sets debug flags based on ucar. nc2. util. debug
Adds a new member to this mutation
Removes a member from the subset. Returns the index of the member in the subset - or -
Get the names of this set of members.
Find a member by name.
Returns the next bit from the bitmap.
restore the state of this table from the given preferences
Returns an iterator over all selected rows in the table.
Returns the index of the model for this table.
Returns the value of a member as an array
Get a scalar value from the data row.
Get the double array for the given member
Get a scalar value as a float.
Get float array from the table
Get a scalar value as a byte.
Get byte array from the table data
Get int value of a scalar field
Get int array for this member
Get a scalar value as a short.
Get short array
Get a scalar as a long.
Get long array from the table.
Get a scalar value as a char.
Get char array from the table
do one dataset - this is where the magic happens
Copies the dataset so it is a child of the given dataset.
Transfer the metadata from one node to another.
Get the thredds metadata that is inheritable from this dataset. Create a new one
Adds a product to the record list.
}
print a summary of the missing values in the form of a new line
Attempts to find the record for the specified time and level
Get a string representation of the log data.
return a long name that can be used for logging
Subset the regular grid by a list of intervals.
Compares two byte arrays for equality.
return null }
This method processes all attributes associated with the current node.
This method adds coordinate list to this time point.
Set the Gaussian parallelism for the transformation.
Parse a variable selector.
Returns a string representation of this section consisting of the given variable name and the given list of
box9 search in a rectangular area.
Closes this < tt > Interpreter < /tt >.
This method executes the application and returns the status code of the application.
) { }
Find a matching variable for an axis type and dimension
Sets the input stream for the block. If the stream is set to null the block will be
read a char from the stream
ProgressMonitor invocation
Parse a uri from a string.
Exclude some uris from another one.
Nullifies a string. If it is the only length of the string it is changed to null
Join a prefix and suffix onto a single string. The original string will be kept verbatim
Returns true if the dataset should be included in the final result or not.
copy all fields from another grib object
Returns a sorted list of the files in the registry.
Sets the index raf.
Get the index filepath from the cache if it exists
how many counters are contained in this one
Add a single global attribute.
Add a single global attribute.
Deletes the global attribute with the given name.
Renames a global attribute.
Adds a new variable attribute to the list of attributes.
Adds a new variable attribute to the template.
Delete a variable and its attribute.
Rename a variable.
{ }
Write headers and bb.
Write the members of the GeometryCollection to a gml file
Write station obs dataset as xml.
Writes the station collection xml.
Write a DSR string.
Sends a DXR packet over the network.
Send an error response.
Close the connection. After a call to close has no effect.
Flushes this writer to ensure all pending data is sent out to the target writer. This implementation
Returns true if the given want index is inside the range [ first last ).
Gets the i th element of this sequence.
Shift the range around the given origin.
Reads data from the file.
Reads data from this file into the given output channel.
Return a subset of this vector.
Set the values of the parameter.
Make a new double array from the given int array.
Get dataset boundaries.
{ } } }
Get structure by name.
Get the resource path for a location.
) { }
Read a PNG file from the beginning of the file.
Finishes the parsing and canonicalizes the ID.
transfer the metadata from one dataset to another
transfer metadata from another dataset to this one
transfer metadata from one dataset to another
Sets the list of contributors
Adds a new dataset to the datasets at the given index.
Removes a dataset from this catalog.
replace a dataset in the catalog by another dataset
{ }
( ) ; }
A list of services that are local to this request
Removes the given local metadata from this dataset.
Get the user property for the given key.
Set the valid flag to true if we have a valid answer.
Returns a list of the names of all the descriptors.
construct server path from hsreq
Print the TDS capabilities.
Fetch a feature from the database.
) { } }
Processes the http request.
. IOException
{ return
The last modified date of an object or null if it does not exist.
Use this API to download a file from a web application
Return the contents as a string.
Set the response content length using the given string.
Gets the uri for a request.
Returns the path of the given request.
Gets the full request string including the query string.
Get a parameter by name ignoring case.
Save the current configuration
throws IOException {
Build a nested hash map using the subkey as a key.
compute the number of bits set for a given start bit
Append a line to the current source.
Use this method to make a document of a particular station
Get the document that can be used to read the DDSG file. This includes the path
Get the record at the given coordinates
Returns the coordinate of the group at the specified index
Adds an item to the list box at the current position.
Handle a throwable.
Calculate the next number in the interval [ firstpos lastpos )
Get the NCEP gen process code and description.
Is the endpoint a cdmrf endpoint?
Set the value of this attribute to the given type.
Creates a Grib1 with the given center and grid number.
Copy all data from the input stream to the output stream using the specified buffer size.
Read the contents of the stream as a string using the specified encoding.
Read the contents of the given stream into a byte array. The stream is closed before this method
Write contents to a stream.
Copies the file to the output stream using the specified buffer size.
Copies a buffer from a file to an output stream.
Copies a directory tree of files and directories.
Read the contents of a file into a byte array.
Read a file and return the contents as a string.
Write the string to a file.
Write string to a file
Copy the contents of the given input stream to the given output stream. Closes the input stream
{ } }
{ } }
Log a bad url exception.
Print the catalog.
Print the current catalog.
Prints the status of the benchmark to the given print writer.
Print bad url.
Provide the reference date for this recurrence.
Read the data of a variable
Read ncml collection from a string.
Open a collection reader for the given ncml location.
Returns x if it would make sense to put the replace char in allow chars. For example if
Remove invalid UTF8 characters from a hash.
Filter out letters and digits from an input string
Filter 7 - bit characters from the input string
Returns a valid cdm object name from the given string.
Returns the index of the first different character from the second string.
Pads the string at the left with the given string until it s at least the desired length
Returns a new string of a given length such that the end of the string is padded.
Removes all occurrences of a string from another string.
return s ; } else return null ; }
Remove a character from the end of the string.
Collapses all the whitespace characters in a string.
Replaces a char in a string
{ return x }
Replaces all occurrences of the given pattern in the string with the given value.
Replace all occurrences of match in original with subst in match.
Returns the original string substituted for a match in a string array
Remove all occurrences of out from sb.
Replaces all occurrences of out with in.
Replaces all the occurrences of out with in in the string builder.
Replaces all occurrences of match in sbuff with subst.
Removes leading and trailing bad characters from the passed in string.
Process the collection update event.
Check current state of the collection. If there is no current state initialise it and check again.
{ }
Gets the datasets from the data source.
Discard all resources held by this class, notably the data source.
Copies the given structure and members into a new structure
return null ; }
Create a copy of the given structure to the array.
Create a new byte array from the given structure data.
Create a new byte array based on a copy of the structure members array.
get the forecast time interval size in hours
d. range ( r ) - > d
. IOException ; }
{ }
Synchronizes with the underlying reader to ensure that the data is up to date from now.
Returns a random array of the specified type where the input range is defined by the start and num
; }
Byte swap a single float value.
; }
) { }
Add a new 2 - D coordinate parameter.
Find the common parent of two groups.
Determines whether this group is a parent of another group.
Set the parent group for this file. If null then the current group is used.
Add a new dimension to the group
Add a new dimension to the group
Add a new group
Adds an enumeration to this group.
Adds the given variable to the set if it is not already present.
Remove a dimension from this shape.
Returns a group that represents the relative path to the specified file
convert dds das to prefix
Print das to a print writer.
Get the base type for a variable by name.
Write a regular grid to a H2O file.
Replace all missing values by the minimum value in the array.
Replace all missing values by a linear interpolation of the remaining values by the original value.
Get the starting x coordinate of a polygon specified by an array of coordinates.
Write a grid from a geo referenced array
The method is called by the container when the response is written to the client.
make the index. gz file from the config
Get the type of a random grib collection from a file.
feature collection update method
update a leaf collection.
Create a immutable grib collection from a data file.
Create an immutable grib collection from an existing data file.
Checks if the given url matches the given pattern.
Add the key value pair to the dictionary. If the key already exists it is not added.
Find a value for a given key.
if the triplestore is well known do nothing
Insert a triple into the store.
Returns the list of local datasets that the local data source represents.
Find dataset by name.
Set new projection for all feature sets in the list.
Return an iterator over the shapes in the device that match the given normal2device transformation
make a shape from the feature list
Compares to a given string.
Start progress monitor task.
Check if a file needs to be updated.
Normalize a list of EC coordinate
Set the value of an element of the array
Return the structure data at the given index. Create the structure if it does not exist yet.
Copies all the structures in the given record to the given result structure.
Get a scalar value from the given record. The type of the returned value will be the same
Converts a scalar value into the specified structure.
Converts a scalar value into an integer using the specified recnum and structure.
Get a scalar value from the given record.
Returns a byte value given a record number and a member.
Get a single scalar value from the given record.
Returns a char value from the given record.
Returns a string value from the given record.
Get structure for a given record
Get the sequence of a given recnum
Returns the array object associated with the given record number in the current member.
If the given value is less than or equal to the given minimum and greater than the given maximum
Evaluates the northeast expression.
Returns a string representing the constraint built by this builder.
Returns true if the given dap node is referenced by this dap
Decides whether the region entry matches the given query.
Count the number of fields in the given dap structure.
Compute the enumerations for all enum daps
}
{ return null }
return true ; }
Make the actions system.
Returns the byte order for the given KMachn.
Sets the byte order for this system.
Finds the key with the given name.
Find a file header.
Returns the file header data for the specified file.
print all parts sequentially
This method is used to get the data pointer of an image.
Implementation of George Marsaglia's FLT algorithm that selects the nearest word to the
Reads a string from the current position of the stream
unpacks a dm packed into a float array
Gets the string representation of the bits of an integer.
Write the contents of a NetCDF file to a writable byte channel.
Parse a base type.
Parse a grid element with optional indent.
Responsible for printing aliases out to System.out.
Recursive decoding of key descriptors.
Builds a replication tree for the given list of keys
Prints out the name of the dataset.
Returns the coordinates of the featurefac
Returns true if the difference between a and b is less than or equal to max
Returns true if the given dap node is referencing a dimension enumeration or a dataset.
Parse a single unit from the given string.
Returns true if the given variable is tiled.
Return the best guess for the current coordinate
convert a rect in lat lon
show all time series in decreasing order
Creates a map of the given attributes.
Returns the string values for the condition
Get the value at a given index.
Write the CDL comment.
Sets the value of the property.
Set the values from an array. The array must contain a string type.
Throws an exception if the current state is not num or string.
Generate proxy ds resolver catalog.
Schedule a message for sending.
Set the thredds datatype to the wanted value
Jump to thredds data type.
Prepare the JVM for running in GUI mode.
; }
Make a name from a list of axes
Get the lesser of the two axis taking into account the null axis.
Find the axis of the given type.
Convenience method that returns the current projection
True if this is a geo projection
Whether the polygon is regular or not.
Return true if subset is a subset of set
Whether the given axes are contained within this object.
Check if a given axis name is contained within this group.
Checks if this partition contains all dimensions in the given list
Whether the plot contains the given axis types.
Whether the given axis type is contained within this coordinate system
This method makes a deep clone of this dag using the same data as this one.
Returns the selected bean or null if no bean is selected.
Returns a list of selected beans from the table
Returns the selected cells in the table.
Sets the given bean to be selected.
Restore the table state from the store.
Creates a new unknown unit or returns the existing one
Overridden to also close the underlying HTTP method.
Returns true if the given variable is an extra parameter.
Checks if the given variable is a coordinate variable.
Find a coordinate axis in the table.
Recursively add all data variables to the given list.
Add a parent join.
Returns a station feature given the structure data.
throws IOException ; }
Returns a simple unit factory with exceptions.
Creates a simple unit from the given name.
Determines whether the given strings are compatible with one another.
is this unit compatible with the given unit
Is time unit boolean.
Returns the conversion factor between the input and output units.
Convert the value to the given unit.
Does this unit contain an unknown unit?
Returns the offset value.
Create a new top level clause
Returns a new clause with the given function name and children.
Returns a new clause with the given children.
Make a grayscale image from the given array using the number of elements in the array to determine
print the catalog and return the number of items that were found
Crawl a dataset.
Crawl direct datasets.
Get a file from the cache or cache the file.
Get the existing file from the cache or cache the file.
Sets the debug mode to b. If set to true leaks are enabled.
Returns a list of all files known to the system.
Close the cache
Repositions the stream to the specified position.
Flushes the internal buffer to the file.
}
Read an array of shorts
Read an unbuffered int from the current position of this stream.
Read an array of ints
Read an array of longs
Read an array of floats
Read an array of doubles
Read a string of a certain length from the stream
Reads a string of a maximum length and returns it.
Write an array of booleans
Write an array of shorts
Write an array of characters
Write an array of ints
Write an array of longs
Write an array of floats
Write an array of doubles
Writes a string to the file as a sequence of bytes.
Writes an array of bytes to the destination stream.
Advances the current position of the stream to the given byte.
Append a query from a list of values
Static factory method to create an instance of an H2O file based on the configuration.
Find an existing index.
Returns true if the index is a leaf of a directory or a file.
Constructs the children of this directory builder.
Creates the builder for the children of the directory.
Read files from the index.
Gets the gridsets.
Acquire a cacheable file from the cache loader.
Remove a file from the list of things to be removed.
The default implementation does nothing.
This method is called by the Netty when a file is no longer cached. It releases the
{ } }
updates the access time of an element in the cache
Clears the entire cache.
Make the vertical transform.
global lon
check if axis is z - axis
Find the pair of coordinates on the x axis.
Find the position of a point on the x axis.
Find a position for a given lat and lon in the image.
Find a position for a given lat and lon in the image.
get the current position of the item
Calculates the dimension of the item the given pixel belongs to.
Consume all files in this directory and all subdirectories that match the given visitor.
get a list of remote files
Get subcenter name.
Get the time field from a human readable unit
Get a period from a time value and a time field
Parse a string and return a period representing that number and unit.
Subtract a number from a given date. The number of seconds to subtract is returned.
Get the conversion factor from the given time period.
Get the value in millisecs
Calculate the offset between two dates
Forces a complete recalculation of the index file if the initial file is longer than the current
Initialize the parameter tables.
put in the map and return true if the new entry exists
Find longest path match
find data root by path
convert 2 data root
Get the date range for a given calendar.
Reindexes a list of coordinates
Create a new writer
Add a new group with the given parent.
Adds a typedef to a typedef.
Delete an attribute from a group.
Rename a group attribute.
Returns the record structure or null if it does not exist.
Aborts the write operation and closes the socket.
Write the properties of the current bean to the given print writer using the bean parser associated with this
Extract thredds metadata for the given dataset.
Override to specify the correct unit for division into another unit.
Converts a value to a derived unit.
Converts a derived unit to a base unit.
Flatten a single level of a data frame.
Converts a top data variable to an array.
{ }
Close all metadata managers.
Open database.
Convert an integer to a period using the specified unit
return ; } }
Returns the string at the given index.
make directory to scan for
make a proxy ds resolver catalog for the given path
Get the type of the coordinate for the outer dimension
Create a grib2 representation of the given template.
Calculate the time of the time field at the given index.
Apply the given scale factor to the given value.
Parse a concept from a file and add it to the local set.
Parses a concept from an RDF file.
Removes all the characters from a line and returns the new line.
Store a concept given the table version and the parameter number.
Write the GRIB1 tables
Write the lookup table file.
print local concepts
for testing only
Get the type of a dataset by name.
{ }
expand the entire dataset and return the parent catalog
name all the datasets in an inv dataset
{ }
) { }
load picture from url with rotation.
Stop loading the specified url.
This method is called when a source status changed.
A download progress notification is sent to all the picture listeners
create scaled picture from this image
Get scaled size.
Get the scaled size as a string.
Returns a list of merged part names
Make the gempak station header.
Mines the set of tokenized type names.
check if a group is a valid one
Set root directory.
make root directory
get file from cache location. if file already exists set last modified to current time.
Delete all files from the cache that are older than the given cutoff.
clean max bytes from the cache
Is bufr table
Create a coordinate axis based on the rank of the data in the vds
Create a copy of this coordinate axis.
Returns true if the value is a numeric type.
Get a description of the axis.
Gets the calendar from the time zone.
Sets a new list of rows to be displayed by the table.
Return the row that was selected from the table
Increments or decrements the selected row.
Returns the index of the model for this table.
Sets the selected index and updates the slider
quick sort algorithm
Swaps an array of strings.
Silently detect if a file exists.
Rotate a lat long array.
Creates a new XML from a file.
Creates a new XML from two input streams.
* unused by sun
{ } }
Save the current preferences.
Save this exception to the given output stream.
write a dap variable to the specified destination.
this method is used to write a structure of a single dap variable to a serial writer
this method is overridden to write a structure one instance
write a sequence of the given dap sequence to the specified writer
Write a single record.
Checks to see if a random access file is a valid file.
get the wmo id.
Read a row n from the stream.
Gets the data at the given index.
read 0 reference and binary data from the grib2 file
Read the data of type 0 from the grib2 file.
Make a new grid file.
Calculates the size of a grid file given the input parameters.
make a netcdf file from a given data set
Represents a set of stations in this object.
Set the selected station of a given name.
Transform a pick point to two different worlds
Closest point in world2 to pick pt
Gets the selected station.
Get the projection name from the type
Gets a list of all stations in the given bounding box.
Look up a station by name
Get an iterator for the data in the given station.
Returns an iterator that can be used to iterate over a period of time.
Read data from the file.
Compute the dot product of this vector and another vector.
The Euclidean norm of this vector
Normalize each element in the matrix by their norm.
for all services found ; }
Read a parameter from the parameter table.
Get the parameter with the given id.
Adds a new name to the storage.
Adds a new symbol to the set.
Returns a prefix given a set of prefixes.
ok - check email is ok
Returns the value of the given parameter.
Calculates the CRC of the raw data.
Returns true if the message is thin.
Returns the index of the field with the specified name.
get time type name by indicator
Gets the time coordinate of the forecast.
Set the next polygon in the chain of polygons
Sets the previous polygon in the line
Find a property by its name
Set the current projection of the table.
Build a subset based on a time axis.
Register a class with the class loader.
Registers an IOSP implementation as the default application - wide implementation.
Check whether an iosp is registered or not.
Unregister an iosp class.
Checks if a random access file can be opened at the specified location.
Open a netcdf file from a byte array and an iosp class.
Open a new in memory netcdf file with the given name and data.
Opens a netcdf file in memory
Opens a netcdf file from a URI using the memory - specific encoding.
Find the global attribute that matches the ignore case.
Create a netcdf element based on this data.
Write cdl binary data to a stream.
Write the CDL to the print writer.
Prints out a CDL statement.
Adds a new attribute to a parent group.
Adds an attribute to the given parent.
Add a new group as a child of another group
Add a new dimension to a parent group.
Remove a dimension from a group
Adds a new variable to a group. If the group does not exist, it will be created
Adds a new variable to a group.
Adds a new string variable to the given group
Removes a variable from a group.
Sends a message to the server.
Returns true if the record structure was created.
Finish the building of a Group. All data is cleared and a new Group is created.
Reads a single section of the composite. If the section does not exist it is created.
overridden in the super class
Read a list of arrays
Read a list of values from the stream.
Returns the full name of a CDM node.
make valid path name with string
Returns true if the file should be included.
Returns true if the file should be excluded based on the exclude filters
return true if all and filters accept the file
Append a value to the attribute.
Check value.
Forces a value to be of the specified type. If the value is already of the specified type
return true ; }
Check short.
} }
; }
} }
} }
Get the data type of an attribute depending on its signedness.
Check if the dataset is viewable by this service.
Checks if a string is a valid boolean string.
Checks whether the specified string contains only alphanumeric characters
Check if a string is constrained by an alphabetic set of strings
Descend only file path.
Encodes the given code point as a percent encoded string using the given character set.
get the param with the given name
Compare two grid def records
Process the input stream.
Process all the bytes in the buffer.
Removes the quotes around a string.
{ }
Write a dataset as a NetCDF file.
Look for key in thredds config. If not found look for alternate key. If
Writes the CDL.
{ }
Set the valid flag to the given value.
get the azimuth for the current location
Get the elevation value.
Returns the latitudes of all the rays that will be drawn.
Get the longitudes of all the rays that intersect this region
Returns the altitude of all the rays that are currently active.
Get the azimuth for each of the rays in the image.
Get the elevation of all the rays.
Returns a subset of this structure that contains only the members with the given names.
Select the member with the given name.
Add a new member.
Sets the values of the members of this mutable data structure.
Sets the parent group of this variable. Recursively sets the members of this variable to point to
Calculates the size of this vector.
Reads the structure at the given index.
Reads a structure from the dataset.
Returns a string representation of a data category.
Returns the class name.
Add a parameter to the attribute.
Get table header.
calculate the minimum and maximum x and y for the given rectangle
Returns the version number of the specified convention name or - num if the convention name is not present
Get ZIS positive string from name and vert coord units
color scale params
Render the planar view of the plot
Check if this group is a child of the given group.
Finds the type of the given name.
) { }
set the api key and secret for the new connection
Creates a label of the specified value.
Create a label that consists of the given lines.
Creates a html label.
{ }
List ip types.
Connect to a MySQL server using the specified login and password.
Removes a logger from the loggers list.
Compiles the given source.
Add a source to the compiler.
{ }
Get the next frame from the frame buffer.
list of selectable persons
init list change listener
Get person by id.
Adds a validator to the set of messages.
Set the person id.
Creates a view model instance for the given view.
Load countries from the database.
Creates a new java view step.
Creates a new fxml view step
Clear the map of listeners and observables.
create index events.
Acquires access to a member. The member must be accessible to the calling thread.
Load a view by its type from an fxml file.
query for row
Get the pixel value of the image at the specified location
Get the pixel values of the image as an array of ints.
Validate the type of the image
Create a coverage data png image
Set the tile data from a bitmap
Execute a SQL query directly against the database.
Send the query to the database and return the cursor for it.
Execute a DML query based on the previous result
Execute the given query.
Convert a raw cursor to a statement.
Get the feature row for the given geometry index.
GeoPackage {
Get a tile row from the tile table
Get the coverage data from the database
Get the coverage data from the tile dao
Get the coverage data from the tile dao.
) { } }
Zoom in or out using the provided bounding box and the provided overlapping pixels
Zoom in to the next higher zoom level
Zoom out to the nearest coverage data tile.
Get the coverage data tile matrix
Get the coverage data value at the x y location
Set an icon for a given geometry type
Get the icon row for the geometry type
Open an existing database if not yet opened.
Convert a byte array to a bitmap
Compress the bitmap to the specified format and quality
Create a new record in the database
Delete a table from the database
Get or create a table metadata object
Get the geo package id
Create table metadata from the cursor
Create the extensions if they do not exist
Get the feature row from a custom cursor.
execute raw sql with selection args
Query for rows within the bounds
Query using a geometry envelope.
Count the number of elements in the envelope
Query the SQL database with a range of values.
Builds the where clause of the query
Query for features within the bounding box in the provided projection
Query for feature result count within the bounding box in the provided projection
Query for feature results within the envelope
Query the feature database for features within the given bounds.
Performs a count within a given region.
Set the image data from the bitmap.
Set the image data
Set the bitmap compression config.
Return the number of tiles in the map
{ }
{ }
{ } }
{ //TODO }
Query for the bounding box of the tile grid for the given zoom level
Get the tile grid for the given zoom level
Query for a tile row from the table
Query for a tile descending on the given zoom level
Method to get the closest zoom level for the given length in the current zoom matrix
Method to compute the approximate zoom level for a given length at the current zoom level
Query for a tile grid of a given zoom level
Delete the tile at the given zoom level and column
Count the number of tiles at the zoom level
;
Read a single pixel from an image.
Get the pixel values of the image as a float array. The values will be converted to the
Validates the type of the directory for the image
Create a new tiff image containing the coverage data.
Set pixel value to a coverage data value
Get or open the GeoPackage with the given name.
Returns the current row from the table.
Method to move to next valid position.
Query by base feature id
Delete records with given base id and geometry type
Get a rectangle with the specified width and height and bounding box.
Get a rounded rectangle
Returns a list of databases that do not exist in the specified databases list
Create a new geo package connection and close it.
Check if the database exists and is a valid
Validate database and close on error
Validate and close a database.
Validate a database.
Validate the SQLite database header
Is database header valid.
Add internal databases to the databases list
{ }
Attempts to import a geo package.
Get the geo package metadata from a specific database
Get the geo package metadata at a given external path
Create a new record in the database
Populate a geometry metadata object from an envelope
Delete geometries by geopackage id
Create or update a geometry metadata object.
Update the geometry metadata
Query for number of rows in a table within a certain bounding box
Create a geometry metadata object from a cursor
Update row in the database.
; } }
Returns the rows for the given ids
Integrity check.
Get user mapping dao.
get simple attributes dao.
Get the list of all mappings for the given base ID in the database
Get the list of mapping ids to related id
Determine if there is a mapping between a base id and a related id
count the number of rows in the cursor.
Register cursor wrapper
Get a user custom dao from a table defined in the geo package
Get the tile from the bounding box.
) { } }
Reproject the tile to the requested projection.
Get the tile result for the bounding box and tile matrix.
Calculate the maximum overlap with the line and polygon.
Set the density of the paint.
Sets the paint to use for the line.
Sets the paint for the polygon.
Draw a tile from the x, y coordinates and zoom level
Draw a tile at a particular zoom level
int zoom )
) { }
{ // }
) ; }
bounding box )
Draw a tile bitmap from the x y and zoom level
Simplifies a list of points to a shorter list of points.
Get the point paint to be used for the style
Get the paint to draw the line.
Paints the polygon that covers the feature style
Calculate the paint to use for a polygon fill.
Get the style paint from a feature style
Get the style paint from cache or create a new one
Get the paint for a style row
Get the paint for the style and type
Put the bitmap for the icon row
Wrap the values in a quote if the values are not null
Create a bitmap from the layers of the scene.
Recycle the bitmaps to allow memory leaks.
Get the bitmap for the layer index
Get the canvas for the layer index
Create the bitmap and canvas for the layer index
Get the mapping dao for the feature table
Get style dao
Get the icon dao
Get the feature styles for the feature table
Get the styles for the given feature table
Get the style for the feature table and geometry type
Get the icons for the feature table
Get the icon row for the feature table and geometry type
Get the feature styles for a feature row
Get the feature styles for the feature table and feature id
Get the styles for a single feature row.
Get the icons for a feature row.
Get the styles for the feature id and dao
Get icons for the feature id and style mapping dao
Sets the styles for the feature table
Set the styles for the feature table
Set the icons for a feature table
Set the styles for a feature row.
Set the feature styles for the feature table and feature id
Set the styles for a feature row.
Set the styles for the feature table and feature id
Set the style for a feature row.
Set the default style for a feature row.
Set the default style for the feature table and feature id.
Set the icons for a feature row.
Set the icons for a feature table and feature id.
Set the icon for a feature row.
Set the default icon for a feature row.
Set the default icon for a feature table.
Get or insert a style into the style table
Get or insert a icon into the database
Insert style mapping into the database
Delete the feature table style entry
Delete the icon mapping for the feature table
Delete all mappings for the feature table
Delete the mapping for the feature table
Delete the mapping if the mapping dao is present
Get all table style ids for the given feature table
Get all table icon ids
Get all style ids for the given feature table
Get all icon ids for the given feature table
Returns the image bytes or null if there is none.
Flush the output stream.
Get the value of the pixel at the specified location
Reads the pixels from the image file. Each row in the image has a different number of
Draw a single feature row.
Draw a line on the canvas
Draw a polygon on the canvas
Add a line string to the model
Add a polygon to the model
Retrieves the feature cache for the given table.
Remove a feature row from the table
Clear and resize all caches
Get the styles for the cached table feature.
Get the icons that have been cached for this feature.
Get table dao instance for feature dao
Set the width of the box
Set the height of the line as a double.
Get the derived dimensions from the data
Calculate the tile density from the density value
Read a blob from the database and store it in the row.
Get the user custom table for a table name
Get the color.
Validate the color
Creates a color from a hex color and opacity.
Get a geo package manager with a given context
Set the progress to the feature table and the feature table dao
Find the most frequent value in the given list of feature index types.
Determine if the feature row is indexed by one of the index types.
Delete all index on the given feature types
Delete the index for the feature row and the list of feature index types
Delete all the features for the given geometry id and the given feature types
Delete the index for the feature id
Check if the query is an indexed query
Get all the feature index types that are configured for indexing
Query the feature index
Return the number of elements in the index.
Get the bounding box for the feature table
Query for feature index results within the bounding box and projection
Get the value of the index type property.
Get a file object from the internal storage.
Get internal file path string.
Get the geometry type.
Set the geometry type.
Check if there is a bounding box for the url.
Replace xyz x and y in the url
Checks if the url has a xyz replacement.
Replace the bounding box in the URL with the actual bounding box value.
Replace the bounding box in the url
Get the geo package geometry data.
Index the feature row
Update the last indexed time for the feature table
Delete index.
Delete the index for the given geometry id
This method checks if the feature is indexed.
Query for the feature table from the database
Query for features within the bounds
Count the number of features inside the bounding box
Query for feature data inside the envelope
Count the number of rows in the table within the given envelope
Query for features that intersect the provided bounding box in the provided projection
Query for feature result count within the bounding box in the provided projection
Transform the bounding box in the projection to a feature bounding box
Get the geometry metadata for the current location
Get a feature row from a cursor
Get the feature row from a geometry metadata
Get all tile daos for the feature table
Get feature daos for tile table
Get the bounding box for the feature tiles and projection
query by id and related id
Get the base IDs of this user mapping table.
unique ids list.
Delete records with given base id
Delete by related id
Delete by ids.
Builds a where statement from the given base id and related id
Create a new record in the database
Delete a database
Rename the metadata
Rename a geo package
Get all geo package metadata
Get the geo package metadata object for the selected database
Get the geo package metadata object for the given id
Get or create a geo package metadata object
Checks if a database is an external database
Get geo package metadata by external path
Get metadata by a name like a certain string.
Get records that are not like the given name
Query the geopackage metadata table for the records whose name is like the provided string.
Create a geo package metadata from a cursor
Invokes the onView created method.
return ; } }
Derived class can not be instantiated
) { } }
Append an event to the buffer.
Find the logback config file.
Get a resource. If update is true it will update the status on resource search.
Auto config method
Log a status message for a resource search.
Returns the string representation of the address.
Create a new thread pool executor service
Start all converters at the beginning of the head converter
} }
Adds a property to the config. If the key or value is null this does nothing.
Returns the value for the given key. If the key was found in the properties map the value
Returns a converter from the specified top node.
not null check
Convert this path to a regex that matches the given date.
) { }
pop the current evaluator from the context and push it on the stack. If the current evaluator is
Initializes the object with a default logger context and a key.
dynamic context selector with default logger instance
} }
Get the current mounted external storage directory.
Get database directory path.
return filename ;
checks whether the given event i is applicable for this filter
return null ;
Updates the bit mask if necessary.
Returns the decision of the filter chain for the given event.
Create key managers in the given context.
Create a new array of trust managers using the default key store.
system properties are concatenated with a space. This function returns a key store object.
Gets the location from the System property with the given name. If the location does not start with
Creates a new url for the resource at the given location.
Checks whether the chain handles the throwable converter at the head of the chain.
Stop context.
< p > print in case of errors or warnings. < /p >
< p > print if errors occured ( if any ) < /p >
< p > print < /p >
Get the value from either the live or lingerers map
End of life.
Returns a format info value for the given string.
Rename a file or a directory.
Return true if we are on different volumes.
Gets an environment variable.
Get system property
Set the MDC property map.
Outputs a property map as a MDC.
Extract the stack trace elements that are within a maximum depth from the given throwable.
Returns true if the current class is in one of the framework packages
} }
Add a status listener to the set.
Returns the list of implicit actions applicable for a given element path and interpretation context.
Returns a list of actions applicable to the given element path.
sets the class loader
Retrieves a system property as a string.
Decapitalizes a string with the specified name.
Returns an array of method descriptors for class
Returns the property descriptors for the given class.
Invoked before data is written to the stream.
Add on console listener instance.
The end of the tag.
get discriminating value for the current context
Indicates whether an event is discardable. Discardable events are events that have a higher level
The beginning of the process. This is the start of the process of constructing the shutdown hook
Add the shutdown hook to the context.
Returns the enabled protocols or the default if no protocols have been configured.
Returns the cipher suites to use. If no cipher suites are provided the default suite is
Returns the matching values for the included and excluded strings.
convert scope string to scope instance
Sets the properties of a particular interpretation.
Add appender to the end of the list
Detach appender to list.
Removes the appender with the given name.
) { }
Call each appender in turn.
Detach an appender to this appender.
create child logger by last name part
get the turbo filters for the given marker and level
This method is called by the log4j library when a logging event is received from the application
Returns the socket to be used for the call to the remote host.
If the file doesn t have a parent create missing parent directories.
Converts the log level to an integer.
Converts an int value into a level. If the value cannot be converted to a level then the
. IOException { }
Get a resource from a class loader.
get class loader of object
Lazily retrieve the class loader of the given class.
Get class loader of the given class
This method will be called at the beginning of the segment. It ensures that the layout is
{ return
The beginning of the tag.
Returns the index into the separator list of the given name starting at the given index
returns true if the event has a marker in the list
Gets the client thread name.
Determines if two files are on the same file.
Add an event to the buffer.
) { }
Add value level pair.
Create a converter for a simple keyword.
Create a composite converter for the given composite converter node
Determine the compression mode.
This method is used to configure the input stream based on a URL.
Use the given file as a source for the context to use.
Use the given input stream as the source of the configuration. The stream is closed after the configuration
Builds the interpreter.
Do the actual configuration of the class.
( ) ; }
Get a context property.
Set the name of the node to the given value.
whether the context has a status listener or not.
Returns the time of the last reset message if any.
The starting part of the parse.
Returns the effective converter map. The effective converter map is used to determine which converters to use
Get the file header
Gets the file footer.
class { } }
Add an end warning if this object is not the appender.
Returns a copy of the clients list. This method is thread safe.
Add a client to the registry.
Remove a client from the registry.
Returns a copy of the current thread local map or null if thread local map is not thread local
Get the value of a method.
Return a turbo filter chain decision for the given parameters.
Determines if current string is a valid operating system
Auto config the logging system
Returns the files in the folder whose name matches the given regular expression.
print only status that are older than threshold.
Get database file.
Clear expired logs if any.
Check if the last check was done and expired.
Append a single event to the insert statement.
appends an event to the secondary table
Bind a logging event to the statement.
Returns the string representation of the specified object truncated to 250 characters.
Compute a reference mask for the given event.
Merge property maps.
Execute an insert statement to add an exception to the event table.
Returns the length of the prefix match of this path and path p.
Returns the effective severity level for the current status.
Returns true if the class is an interface and false otherwise.
Create a new hash map as a child of the parent.
Included classes can override this method for custom include processing.
Open the URL as a stream.
Removes sax events from the head and tail of the sax event list.
Returns true if the server should start.
Returns true if the exception is transient.
Set the default hosts based on the configured fallback hosts.
Creates a new local index if necessary.
Synchronize the dataset with the underlying data source. This method is invoked on the main thread and
Synchronizes database with local database if necessary.
Return the result of calling a task.
Return a JSON list of all offline indexes on the server.
Reads the characters from the stream and builds a string from them.
Takes an input stream and converts it into a byte array.
Consume the connection without throwing any exceptions. This is a no - op if the connection is
Filters the given list of hosts to those that are up.
Set the type of places to retrieve.
Starts the asynchronous search. This method will block until the search is complete.
Add an item to the LRU cache.
Returns the value to which the specified key is mapped or null if the value does not exist in
Awaits completion of all threads and blocks until all threads are finished.
This method reports the stack trace of a throwable to a human readable file.
Copies all files from one file to another.
return ; }
Returns the value of a static field.
Gets a method by its name.
Calculate the percentage and format it as a string.
Format a double to a given length.
Formats a long to a given length.
JSON string.
Encode an integer and write it to the stream.
json double.
Reads a JSON numeric char from the stream.
Read an integer from the stream.
Read a double.
Reads a base64 encoded string.
Execute a method call against the remote server.
Sends a request to the remote endpoint.
Enqueue a method call.
Retrieves a resource from the default file system.
Update the decoration.
Refresh repository view.
Get the resource history view.
Open a new editor with the given name and contents in the default editor.
Show a message box to the user indicating that they are not authenticated.
Prompt for authentication.
Creates the default page to use.
Start animation thread.
Set is keep all alive.
set omit status
Set the owner of this element.
adds a new factor to the conditional query
Creates a new term from the given tokenizer
Returns true if the condition matches the specified term.
Get the DSL for the given rule and input
Load the configuration file from the DSL with the given name
Read the DSL configuration from an input stream.
Build the menu.
Populate this response object with the result of this request.
This method adds an href value to the current path.
Insert a new href before the existing href.
Remove the href attribute from the map.
add prop stat.
Returns the href of the current node as a string.
Returns the status of the current element.
Returns the stack frame for the given value.
Check whether one class is a subtype of another.
Check whether the given collection contains the given proposal.
Repositions this stream to the position at the time the < code > mark < /code
Creates the action for this text operation.
Adds a connection.
Returns the property value for the given property id.
Removes a connection from the source or target connection.
Sets the location of the poi by the given value.
Sets the property value.
Set the size of this dimension.
Dumps the given constraints.
add a new lock entry
Add the given child vertex to this vertex.
Remove a child from the relationship.
Called when the OSGi framework starts our bundle
This method is called when the plug - in is stopped
Returns the string from the resource bundle or key if not found.
Get the resource bundle.
Gets the rule builder for the rule colors. If the rule builder does not yet exist a new
Set the date and time.
Set the time value based on the input date and pattern.
Create an i. error with the given message and throwable.
The default way of logging a throwable with the error level
Adds the given field editor to the field list.
Adjusts the grid layout for the given field editors.
apply font to all child fields
Calculates the number of columns for the given data.
Initializes the fields of this editor.
Fire a property change event to all registered listeners
Set the active editor for the given editor part.
Contribute to the tool bar.
Determines the dialect of the input text.
Returns a new context from the WebDAV with the given locator.
Saves the current model in the selected file.
{ }
Associates the specified value with the specified url in this map. If the map previously contained a mapping
Puts an object into the cache.
Adds a new token to the trie.
Add a child node
Sets the file to be read.
Exception { }
Adds a single state token as a single condition.
Returns true if this condition matches the specified condition. A condition matches all the conditions in the condition
Get the property.
Gets the status of the current element ; if the element does not have a status child it will
set the value of a property
Get the last line from a given string
Get the last non dash line
Bind the given service id with the given binding.
Bind two values to an ID
Bind the given id to the given bindings
. IOException { }
The main method of the sample compiler.
Gets the current runtime id.
Visit a rete. This is the primary focus of the visitation. From here interesting information
This method is called recursively to visit a node.
Computes the dot identifier of an object.
removes the current node from the tree
add the current value to the set
Create a new locator for the given resource url and label
Instantiates the reconciler for the given viewer.
Returns whether this status is the same as another one.
}
Creates a new condition factor by parsing the stream.
Add pages to the document
http delete method
Send a post request to the kie server.
get the status of a specific job
Execute the operation and collect the results.
Handle results from a pull request.
Set the element at the index position.
Create a new lock and add it to the list of active locks.
Filter out proposals that start with the given prefix.
Reads a string from the backward part of the document
Calculate the row list for a given base vertex.
For a given model element return the appropriate edit part.
Get an image descriptor from the default plugin
Declares an image into the registry
Adds a vertex to the table at a specific depth.
Returns the index of the row which contains the given base vertex or - 1 if the row does
Get the width of the table
print the matrix to stderr for debugging
Optimize each of the rows in the matrix.
= null ; }
draw new graph on current canvas
Get line breakpoint by source name
Set the href of the current node.
test if the remote host can talk to the DAV server
Copies a resource to a destination.
Exception { }
{ } }
Get the contents of the resource as a stream.
Returns an enumeration of all locks.
Returns status of specified property.
Sends a HEAD request to the specified resource.
Returns a lock token.
Moves a qualified name or a list of qualified names to a destination.
Performs a checkin on the remote server.
Refreshes the given lock token.
Removes one or more properties from this resource.
Removes the property with the given qualified name from this response.
Setting the content of an input stream on the server.
Sets the properties for this resource.
Sets the value of a single property.
dav Unlock method implementation.
Updates the resource with the given version
Sets the version of the resource the server is currently running on.
Deletes the resource.
Examines the given status code and throws an exception if an error is detected.
4JException
Flushes the request body to the output stream
Converts a byte array to a hexadecimal string representation
Converts an array of integers to a hexadecimal string
Set is all prop to true or false
Set is prop name or not.
Sets the value of the current property.
Returns the string after the last word in the specified string.
Updates the tree viewer.
Writes the content of the input stream to the output stream.
{ }
Parse errors and add to markers
Skip whitespace characters.
Adds a file or directory to the VDX file cache.
Commit changes to a file.
Return the age of the person. If the age field is not present - num is returned.
Returns the length of the content.
Returns the maximum number of forwards.
Indicates if the file should be overwritten.
Returns the passthrough.
Returns the current timeout value.
Put a property. If the value is null then remove the property.
Sets the timeout in milliseconds. A value of - num will set the timeout to the same value
Open a buffered reader for reading the given file.
Parse the given buffered reader and add the data to the object.
Get the object metadata from the text.
Strips the object metadata from the specified string.
add tokens to the tree
Returns the condition children given a text.
get the children of the current node that starts with text
Adds the children of the given node to the given list
Print out the entire tree
Recursively prints the tree to stdout.
Prints the specified number of tabs.
json value read from text
Returns the default image descriptor for the specified id.
Processes the specified request. This method creates the connection to the origin server.
Sets the specified request header field to the provided value.
Creates the launcher for the rule sample application.
Creates a rule and adds it to the monitor.
Creates the rule flow for the current project.
Creates the sample launcher
Get the list of selected i.
Create an image and save it to a file.
Gets field name.
Gets the evaluator if this field is a mvel constraint. Returns null otherwise.
Gets the value of the current mvel field.
Adds the properties from the guvnor resource.
baseline control.
Binds a member in the current scope.
Get the element corresponding to the supplied member name.
Optimize the graph in order to minimize the number of edges in the graph.
Initializes the dialog controls.
return false ; }
Generate a new entity tag with the current time and thread id.
} }
Validate a list of OTP.
Check if the user is right to execute a command.
Retrieves the YK username for a specific id from a specified file.
Add a yubikey to a user.
Attempt authentication and check OTP.
Clear password.
Get the public id from the OTP.
Check that a string is a valid OTP.
Create a new JSON expression from the given source and node.
) { }
Clears all the caches of the static member variables.
Returns true if the current string is a JDK 15.
Get the package name from an object
get class package
Get a unique descriptor string for the given object
get the class of the argument
True if classes1 is more specific than classes2
Returns the value of a property of a given object.
Returns a map of property descriptors for the given class.
Returns a property descriptor for the given name in the given class.
Returns the value for the given property on the given class.
Read a character.
this is for projection of datasets
the select all statement
To convert object to long.
returns the double value of the object
Convert an object to a big integer.
returns a big decimal for the object value
Convert the value to a string and optionally trim the value.
Get the numeric type of the given value
Convert a value to a type.
Converts the value to an integer. The value can be any number type.
Returns the type of a numeric value.
Get the numeric type of the two arguments.
Create a number of the specified type with the specified long value.
Removes the current evaluation from the pipeline and returns it
Generate OGNL getter method body
Generate OGNL setter method and add it to class
Flatten the tree to a flat structure.
Initializes a new instance of this class.
Adapted from commons - lang s String.
Set the root object in the context
Get the value of the given expression.
Assign the given value to the the given expression.
Recursively set a value in a subtree of a given type.
returns true if the expression is constant.
Get the default watch service id.
Reload the current class loader.
Returns a new archiver with the given name.
Checks the given archiver for problems.
Reads the file as a string.
return project ; }
Add a system property to the list of system properties
Add a system property to the adapter.
Called when a directory is changed.
Refresh button state.
Create file observer for the given path.
Returns the currently selected folder.
Create a new folder.
Check if file is a valid file according to the config.
{ }
Start a new list.
Handles the end of a list.
Handle motion.
Get crop rect.
Compute layout for the current view.
Register a listener and a media factory for the current instance.
Adds the span for the current node if it does not already exist.
This method is overridden to inflate the spinner view
Get drop down view for item at the given position
Convert a spanned text to an html string.
) { }
Creates a new file with a unique name that is based on the given original file name.
Determine the original file for the given uri.
Return a namespace name from a namespace name.
Get the local name of the given name.
Set the value of an attribute. If the attribute does not exist it will be created.
Set an attribute to a specific value.
Get the font name from the path.
get a font name from a font file
return ; } }
Writes < code > len < /code > bytes from the specified byte array starting at offset
Write a byte to byte array.
Write the contents of the given input stream to this buffer.
Write the contents of this buffer to the given output stream.
Allocates a new byte array and copies all data that has been written to this buffer to
Set font size
Change windows separator to unix separator.
Recompute focus.
Ensure the view is visible.
Center based on highlight view.
Reset document locator.
Validates the value against the set of regular expressions returning the value if any.
Specifies that the element should be typed.
Add an attribute to an existing element of the schema.
Specify the name of the element in this schema with the given parent.
Returns the element type by name.
; }
cleanup all paragraph effects in the editor
set the selection to the given value
{ }
Notification that an operation was executed in the editor.
Redoes all edits that have an operation for the given editor.
Replace all the occurrences of a search string in a source string with a replacement string.
Get or create the status for a thread.
Set decoding options for a thread.
Whether the given thread can be decoded.
The real place to delegate bitmap decoding to BitmapFactory.
Retrieves a list of all the fonts available in the current context
Get a map of font names to file paths for the current asset
Finds all the system fonts and returns a map of the font names to the file paths
set up all the variables
Get the reader from the input source.
Get the input stream from the URL.
Parse the attribute list from a SAX2 element.
Expand all the HTML entities in a string.
Implementation of entity lookup.
Restart the parsing process by moving the saved element and pushing it onto the stack until a matching
Pop an array or object scope.
Pop an element off the stack and make sure it is a restartable element.
Returns the prefix of the name.
{ }
Returns the string with trailing quotes removed if present.
Split a string into a number or string array.
Find the top of the stack and rectify the position of an element within the stack.
Saves the state of the plugin.
Called when the server is being destroyed.
Handler for the main thread event.
link event with editor.
Get proper base matrix for rotation.
Returns the maximum zoom for the view.
Does the given editor exist in the selected text?
Remove the spans with the given processor from the found spans
Start picking a directory.
) {
Set the output writer. If < code > writer < /code > is null a new instance
Write a raw character.
Write a raw string.
Returns true if the attribute exists and has the specified value.
Write a portion of a string with escaping.
Write the namespace declarations.
Write an element or attribute name.
Method to create a stream if it does not exist.
Wait for the stream to be activated.
For each snapshot in the target store find all the instance snapshots and replace the transaction id with
wait the minimal duration between requests to execute shard iterator request
Get records from Amazon Kinesis.
Retries the supplied action until it succeeds or the specified retry limit is reached. If the
Tries to execute the given action and returns an optional value if the action succeeds. If
Check if the bucket exists and if it is accessible.
Run the given function on the latest available snapshot. The latest snapshot will be the one with the
Trigger wildcard expander.
Replace all occurrences of the old pattern with the new pattern.
Delete any character in a given string.
Adds a resource lint report.
Update filter properties with the configuration of a given key.
Get the config properties.
Create input stream from auto - detected file.
Convert a map of pre processors to post processors
Wraps a string in a rhino script and compiles it.
reload cache with a new value
Reload the model with a new value.
Wrap the given request with a wrapper that adds the location to the context path.
Transformer that adds the given suffix to the base name of the input string.
Called when the request is rejected.
Redirect to the specified location.
Processes the resource and creates the locator.
Create expander handler function.
Locate input stream for a given URI.
{ }
} ) ; }
( ) ; }
Set the configuration to use.
Identify duplicate group names.
Merge another model into this one. All groups present in the imported model will be added to this
Locates an input stream for a given URI.
Apply post processors.
Decorator used to inject a post processor into the injector.
Process a resource using the given reader and writer.
Split string options into an array of strings.
Loads the properties from the given input stream.
} }
Creates custom manager factory.
Persist fingerprints of the given groups.
Check if the group is a target group.
{ }
Get the model resource as a stream.
Create manager factory.
Sets the transformers to be used.
Precompile the given content.
Process and merge the given resources.
Process and merge list of resources.
Process a list of resources in parallel and return the result.
Apply pre processors.
Decorate the processor with a callback for before and after process.
Persist the token to the fallback storage file.
) ;
Rewrite css to include image.
Compute new image location.
add a model transformer to this factory
Serve the processed bundle.
Initialize aggregated folder path.
Extract variables.
} }
Replaces the variables in the given css string with the given variables map.
Convert a post processor to a pre processor
Tests if the resource is eligible for being used as a part of a conversation.
Gets the gzip response.
Factory method to create a new decorator instance that decorates the supplied processor with the specified include patterns
A decorator that excludes the specified patterns from the processor.
create a new instance of resource change handler
Add a resource to be remembered.
Execute a function for each css import.
Filter collection returning a new list containing those items that are not null.
Determines whether the application is minimized by the user - specified request parameter.
IOException { } }
Compute absolute url.
Creates a string from a list of strings.
Returns the list of alias from the CSV string.
Create the context for the script.
Evaluates some expression against the current Binding and returns the result
Evaluate a script.
; }
check if request is api request.
Create request path.
Rename a group.
Compute destination folder.
Processes a group.
Check change for group.
Return the input stream to a given uri.
Create object pool.
Return the input stream to the resource if the resource is supported by the loader. If the resource
Open jar file.
Returns the path to the resource.
Whether the application is minimized or not.
Add uri locators.
Wrap a model factory with a list of transformers.
Add a module that this module depends on.
Processes the given content.
Log summary information.
Updates statistics for the resource.
Returns a reentrant read write lock for the given key.
Creates a new process from a file.
Parse properties.
Returns an array of the current task infos.
Produce the compilation command for the given input.
Parse a single header.
Add no cache headers to the map
Get path info from location.
Gets servlet path from location.
Checks if the given path matches the request uri.
Load a regexp property with the given key.
Copies the reader to the writer without throwing any exceptions.
Create a new temporary file.
Clean image url.
Sets the attribute on the given object.
Generate a data uri from a stream and a file name
. IOException { }
Set a context and associate it with a configuration.
Remove the current correlation id from the context
Check if the group is changed and call the callback if it is changed.
{ }
Check if the resource has changed.
Update hash for group.
Check if the entry has at least one resource of the given type.
Creates a command line process to copy the file to the destination
Parse a single group.
Create group from xml node.
Parse resource and add it to the collection.
Returns a collection of resources for a given group name.
Stop a timer of the given name.
Get timer of the given name and todo.
Gets a timer or creates a new one if it does not exist yet.
Print the statistics in a readable format.
If there are no workers waiting wake them up immediately.
Updates processed counters based on a snapshot of the number of workers and the number of contexts processed
Update finished counters.
Atomically update or reset the counter only if the current value is smaller than the given value.
Default implementation for processing a single rule. Subclasses may override this method in order to perform custom
Instert a property into a taxonomy
Ensures that the input stream is loading. This is done by first clearing the loading stage and
Restores the current saturation state.
Returns true if the current consistency check is inconsistent.
reset the taxonomy to its initial state
method for the taxonomy
Returns a proof of knowledge about the entailment.
Initializes the reasoner.
Invalidate this reasoner and its recursive children
return null ;
return null ;
Creates an exception for an unsupported owl api method.
Removes the element at the specified position.
Removes an element from k and v at position pos.
Move an element or array to a new position in the array.
Returns true if object o is present in array d
Add an element to an array if it does not exist.
Checks the occurrence numbers for correctness.
Adds a timer to the statistics.
Adds the given rule to the set of rules.
Put the given key and value pair in the array of keys if it is not already present.
Helper method for removeEntry.
Increases the capacity if necessary to ensure that it can hold at least the maximum capacity argument
Shrinks the heap from the current capacity to the current capacity if necessary.
Save configuration to disk.
Print declarations for the given taxonomy to the given appendable object.
Returns the set of all direct and instance nodes of a given type node.
Removes all of the elements from this map. The map will be empty after this call returns.
Combines a list of ints into a single hash value.
Copies all data from the input stream to the output stream.
Wraps all the given monitors and combines them into a single monitor which will report the reason
Processes the taxonomy and writes the results to the appendable writer.
Submit an input to the task.
Appends an object to the appendable object.
Mark the state as not computed.
Add a direct type node to the type node list
) { } }
Returns a new set that contains the results of applying the functor to each element in the input
adds an element to the heap
Removes an object from the set.
Adds a new conclusion to this one.
} } for tests
Set configuration options.
Shuts down the server after the specified timeout.
print header number
prints the formatted string with the specified values
Get string by char c n
Adds a new rule to the decomposition
Write a resource.
Get an input parameter by name.
Returns the property descriptor for the given property path.
Returns a map of all input parameters which are required by the current action.
Is single value type boolean string date calendar or currency
Add a relationship to this resource.
Set the media type for this link.
Adds a language to the hreflang parameter of the link.
Add a new revision to the revisions for this content.
Add a parameter to be included in the URL.
Expand the URI template with the given arguments.
Get the link params for a given rel.
Get the revisions that have been passed.
Returns whether the current action has unsatisfied required variables.
Returns the value as a formatted string.
Returns true if the property is marked as hidden
Returns true if the property is included in the input annotation.
{ }
Checks if this argument is required to have a value.
Returns the default value of the current parameter or the request header.
Get the parameter name.
Get the exposed property of a parameter.
Get the vocab value for the given bean
Get the query string that will be appended to the current one.
Extract the form data and add it to the action descriptor.
Write a button with the given type and value.
Add an input or select an option to an existing input or a list of options.
Add the given affordance builder to this builder
Get uri template components as a string.
Returns a new uri template component with the given action descriptors stripped of optional variables.
{ }
{ }
iterator over the nodes of the tree.
Returns an immutable map containing the given entries in the same order.
Returns a new persistent map containing the given entries.
Returns an empty tree map.
{ return }
Returns the key of the last element in this list.
Returns the result of applying the reducer function to the specified operation.
Returns a new xform for a drop while the condition is met using the specified boolean function.
Reduce a finite stream to a single value using the supplied repetitive reducer.
( ) ; }
Use the functions of this match method to perform matching.
Register a list of classes.
Get the element at the given index.
{ return this }
Concatenates a number of items to a new persistent vector.
Returns a mutable set containing the given items.
Creates a mutable list containing the given items.
Returns a set containing the given items.
Creates a new immutable list that is initialized with the elements in the specified array.
Creates an iterable from an array of items. Modifies the iterable.
Build a string builder that will indent the given number of spaces to the right.
Creates a string from an array of strings.
Construct a lazy reference that produces a value using a producer function.
; }
) { }
) { }
{ } }
Verifies that the transaction is open and that the asynchronous operation has not been initiated.
throws IOException { }
Validates a directory to make sure it exists and is readable.
create inheritance link for the concrete class and the superclass
Copy methods from a class to another class with exceptions
Copies an array of methods to a given class
) { }
Gets the notifications enabled value for the given parameter name.
Returns the set of resource adapter names referenced by the given service component
Install service.
Uninstall a service.
Returns true if the given resource adaptor link is registered as a resource adapter with the given name
get usage parameter sets
} }
}
) { }
Executes the given event through the endpoint.
Adds a binding to the node with the given name.
Unbind the name that was previously bound.
Looks up object by its name.
This method returns all the bindings contained in the current node.
sbb entities that handled current event
Determines whether this instance is higher than the supplied trace level.
throws IOException {
Read data from the input stream and write to the output stream.
Method to put a child object in this node.
Adds an sbb entity to the structure.
Detach a sbb entity from the world.
Determines if there are any SBB entities attached to the SBB.
Gets all SBB entities that are attached to this node.
Adds a timer to the timetable.
Detach a timer from this node.
Determines if there are timers attached to the current task.
Get the names of timers that are currently attached to this timeline.
Adds a name bound to this name node.
Returns true if the given name was previously unbound.
Returns true if there are no names bound.
Get a copy of the set of names bound to this node.
Sets the attribute with the given name to the given value. If a node already exists with the
Returns the value of the named attribute of the current node or null if the attribute does not exist
Returns a deep copy of the cmp attributes.
helper to build the list of notifications
Send a usage notification to the application.
Download a remote file to a local file system.
} }
{ }
{ }
{ } }
return
Returns true if the given log record can be logged by this logger.
Gets the logger for the given record. If the logger doesn t exist in the cache it is
Recursively collect all sbb entities in current node.
Gets the permissions.
Obtains the list of code sources for all policies.
Check if profile exists.
Removes the profile table from the database
Updates the configuration properties of the resource adaptor.
throws Exception ; }
slee stopping...
Activate the resource adapter.
deactivates the resource adaptor
{ }
Remove this service from the container
get resource adaptor interface by id
a service is active if there are too many events and the service is active
derrefer activity handle derrefer factory activity handle
Inform monitor that an activity has ended.
Update this passive configuration with the given properties.
Verify the config properties.
The resource adapter is stopping
The resource adapter inactive
unconfigure the resource adaptor object
unset the resource adaptor context
unset fault tolerant resource adaptor context
build a map of profile attribute names to attribute values
}
Gets the handles of all of the children of this node.
Get usage information for a parameter set.
Use the abstract class as a JNDI resource
Convenient method to send event to all of the EventBuss.
Throws an slee if it is unnecessary to fire the event.
sbb object to a profile cmp of a sbb entity
Get abstract methods from a class
all methods of an interface except those defined in the except map
Creates a new object pool with the specified profile table implementation and transaction manager.
Removes an object pool from the cache.
Protected method to determine whether the given alarm is the source of the alarm.
Synchronized to prevent multiple threads from raising the same alarm
Get usage parameter set object.
Gets the event type descriptor for this event.
Filter deployable unit by url and deployable unit name
Init method that can be overridden in subclasses.
start the deployment
Stop a unit.
Show the status of the application
Execute after commit actions.
Execute actions after commit priority actions.
Execute after rollback actions.
Execute before commit actions.
Execute before commit priority actions.
Get the names of all currently defined tracers.
Create a tracer given its name.
Removes the replicated data from the snapshot.
Processes the given component.
return the object pool for the given service and SBB id
creates a new object pool
Executes an activity. This method does not throw an exception.
Internal method to start an activity.
Finish an activity.
Check preconditions for fire event
Fire an event to an activity.
{ }
Make the operation name for a getter.
subclasses may override this method to perform custom conversions.
profile table name and profile name
} }
Returns true if the object is in the cache
Returns true if this collection contains all elements of the given collection.
Remove all of the elements in the given collection
checks if this level is higher than the specified level
Resolve the next object that can be read from the log.
Detach all instances of the classes that have been added.
add profile call to transaction context
Returns a profile object from the pool.
A profile object is passivated when its state is no longer ready.
Set as text.
Generate an activity context interface.
Generate the concrete methods for the specified interface methods.
Set data attribute
Adds a new name binding to the cache
Removes all the names bound to activity contexts
Removes the name binding for the given ACI.
Adds a timer to the cache.
; } Removes {
attach sbb entity to the conversation.
Detach an entity from the activity context
Returns a set of sbb entities attached to the sbb entity
Notifies the ActivityManager that an activity has ended.
add a new component to the container
{ }
{
Returns true if there are duplicate values in this column.
Get install actions.
Get uninstall actions.
;
close the profile
{ return }
Checks if the profile is in write mode or not. If it is not in write mode logs
Processes the before field.
Suspend the current transaction and wake up any waiting threads.
Before get field.
After get and set cmp field.
Before management method invocation.
After management method invocation.
Recursively delete a path and all its files.
create default constructor
Create a default usage parameter getter for the concrete class
Create sbb entity getter and setter
Create the fire event methods for the given event entries
create activity context interface method and add it to the class
Adds the given expression to the list of parameters.
Bind the key to the target object.
Rebinds a object to a different object.
Decortaes the abstract sbb class.
Invoke the concrete proxy method and return void.
Gets the real field name.
Set the value of a field.
Returns the value of the field.
profile initialization.
unset profile context
Returns the profile local object
return ; } }
Gets the SLEE10 wrapper
Create a new instance of the class.
This method creates the inheritance link.
) { }
factory method for getting an activity context
Returns the class pool.
Set the unit to be deployed.
Called when the deployment is undeployed.
Execute an activity on the endpoint
check if the class or interface is implemented in the searched interface
Find all abstract methods on the given interface for all interfaces that are not in the given set of
Check tracer name.
Handle a profile query.
return null ; }
Returns the current entity manager.
} }
safely switch class loader
) throws Exception {
Checks the state of the transaction
Calculates the TTL from the last access time and the timeout.
Returns true if the profile class is visible.
profile object invalid value
Get logger names matching a regex
reset all logger levels to their default level.
Clear all loggers of the given name.
add a logger
remove a handler from a logger
Convert tracer name to log4j string.
{ }
log4j 1. 0 - > trace level 2. 0 - > trace level
Reset cache flags.
send a trace notification with the given information
Check tracer name
{ }
{ return ; }
add a direct dependency to the list
Returns a list of all the dependencies of this repository.
Attempts to find a class using the global lock.
Override find resource in order to log file trace.
Returns an enumeration of URLs representing all the resources with the given name that can be found in
Create and register profile m.
Resumes a transaction
Return all SBB that are defined in this descriptor.
Returns a set of resource adaptor entity links.
Throws an exception if the slee state is already set.
Throws an exception if the slee is not running.
Throws an exception if the transition is invalid.
Generate named usage parameter getter method.
Add a value to a field in an update query.
Creates a new jdbc instance using the current builder configuration.
Add a value for insert query
Execute the given operation within a transaction.
creates a region object from a string
Returns the region of this bounding box.
{ }
Sets the viewing hints for this command.
Adds a viewing hint to the resource.
Sets the renderings for this context.
Add a rendering to the resource.
Merges a list of profiles into single profile. All instances of profile will be merged.
creates a rotation request from a string.
creates a size request from a string.
{ }
Get dump of current device
Call adb command to pop the box from the stack.
push gps2 device to APK
Clean temp file.
Execute adb command and return the file path of the file
Get the current crash log
Detabify this text.
Replaces all the spaces specified by the given number of spaces.
Returns a collection of tokens.
Run the Markdown compiler on the given text
escape special chars within tag attributes
Add an exception to the exception queue.
Close the statement cache.
Find the parent fqcn.
Write the class to a file.
Write the bit vector01 divider.
appends a list of strings to a bit vector
Read from a data input stream.
Get a list of values from a json object.
} } }
Adds a new screen capture from the path to the current step.
Set system info.
select a property from a result set
Create a new selector which selects the given property as the given alias.
Extract validation annotation data from annotations.
Recursively extracts all annotations for the given property and its superclasses.
Find property annotations.
Returns the property descriptor for the given name for the given type.
Creates a new instance from the given map.
Map is of type T where the properties are excluded.
To map map function.
Map the specified object to a property value.
Returns the annotation values for the given annotation.
Create a composite validator for the given list of validators.
Returns a list of validators for the given list of meta data objects.
Retrieves the field validator for the given meta data name.
Validate meta data properties with the given validator.
Remove the property if it is blank.
Advance the time by the given amount.
Returns the number of elements in all caches.
Applies a supplemental hash function to a given hashCode, which defends against poor quality hash function
Tries to open the database.
Write all values to the database.
Removes the given keys from the data store.
Returns an iterator over all the key - value pairs in the database that start at the given key
Loads all values for the given keys from the database
Close the database connection.
reduce by double t
This method is called via reflection from the database.
Returns the variance of a group of values.
Returns the mean value of the array of longs
Handles the invocation of a method invocation on the given object
Reduce by double.
Format a timestamp as euro.
Check whether the object matches the criteria.
Create a not in criterion.
Create a criteria from the given list
json to criteria
Appends an array to the list.
Return the maximum value in the array.
Returns the first n items of the given list according to the order induced by the specified sorts
Returns the last of the given list using the specified sorts. The list must be monotonically
Returns the last n elements of the list using the specified sorts. The list must be large enough
Returns the least of the given elements in the list
Returns the minimum value in the list.
Returns the minimum element of the given array using a dichotomic algorithm.
Processes an array of maps and calls the appropriate method for each map.
Sets a collection of maps on the given field for the given collection of maps
Load a class from the map.
Returns the value associated with the given key.
Creates a tool tip from a bundle and a tool tip type.
Add a hex nibble.
Process the write queue.
Start the writer thread.
Gets the string at the given index. If the character at the index is not found it is
fast but not very efficient get lower case
Indicates whether the given character array is in the given string.
Adds the given character to the given string.
Add many objects to a string.
Returns a compact version of the specified string.
Split a string into an array of strings using the chr of the chars.
Splits a string by space.
Splits a string using a pipe into an array of strings.
Splits a char array of array of strings into an array of strings using the split elements as
Returns the camel case version of the input string.
Indicates whether the given substring is inside of the given substring.
The under bar case of the input string.
Returns a string representation of the number.
Returns the first sort in the array or null.
Sort the given list of fields according to the order induced by the specified fields.
Returns the comparator for the given fields.
recursively build the list of all comparators for the given fields
Checks if value is present in map.
Compares two ints and dies if they are not equal
Compare two int arrays.
Calculates the sum of an array of integers
Round up the given number to the next power of two.
Sort a list of values based on a field name and direction
Sort the list.
Set field value from map.
Converts an object to a list
create sql statement for load all version data by keys for this table
Returns a deep copy of the given list.
Check if value object has a string field with given name.
Checks if the given class has a string field with the given name.
Checks if the given class has a field with the given name.
Get the field name of the first comparable or primitive field from the given class
Gets a sortable field from a map or class instance.
Compare this entry to another.
return 1 ; }
Sort a list of objects
Sort a list of beans by a field using a universal comparator.
Sort a collection of entries.
Sort a collection of values.
Sort a collection of entries by key.
Sort the array using the given comparator.
Returns a universal comparator that compares two fields using the given access field for sorting.
Create a universal comparator with support for sorting ascending or descending.
Returns the cached value for the given key or null if there is no such value.
Returns the value to which the specified key is mapped or null if this cache contains no mapping for
Evict if needed.
Initializes the internal state for the given object if needed.
Allocate a buffer either by reusing or returning it.
Determines if we should exit the simulator.
Manage the input writer channel.
Sync to disk if the queue is empty.
Start monitoring the execution of the code.
) { }
Get an object from the map.
The main query plan method.
Do the actual filtering of the group.
Called each tick to update the timer.
return true ; }
Close output stream.
Write a buffer to the next available buffer in the queue.
Write a buffer to the output stream.
Initialize the output stream.
Adds a whole bunch of values to the store.
Convert the specified key to a byte array.
Extract validator meta data for a given class and property name.
Extract meta data from string.
Read meta data.
Extract validator meta data.
Extract validator meta data from annotations.
convert annotation data to validator meta data
Splits the string around the given character limit. The number of returned components is equal to the
Split a string by white space.
Splits a string by a set of delimiters.
Remove any of the delimiters from the string.
Split the given string into an array of strings using any of the given delimiters. The delimiter
Parse a double from a string buffer.
Parse an int from a string. This method is provided for use by the parser.
Parse a long value from a character buffer.
Get a property by a path of property names
Gets all the fields of the given object or its property.
Returns the type of a property of an object.
Inject a value into a property using a string array as the path.
Indexer method that uses a string array as a path.
Recursive method to get a collection property.
Get object property value.
Returns the last property value of the given properties array as an int. If the last property is
Initializes the object to its default state.
Create a message for the given key with the given arguments.
Creates a validation message.
Converts a list of keys to a list of values.
Gets the subject of the current validation context.
json - > object
Send the http request.
Delete database.
Creates a new database.
Find count unique uuids.
Trigger a replication request
query for a single value
Set whether the query should return items descending or not.
Synchronize all of the design documents in the database. The database is not affected by this call
Get the design document from the db.
Get all design documents from desk
Get the design document for the given ID.
Saves the replicator entry to the database.
Find the replicator document using the query string provided.
Find all the replicator document that match the query param.
Removes the replicator from the database.
Find a single document specified by id and query params.
Get a list of a type of document from the database.
Does the DB contain the given id?
Perform a bulk edit of a set of objects
RESTful API for updating an existing document
Execute a http put with to a given uri and input stream
Execute a POST request and return the response.
Execute a DELETE request and return the response.
Validates the given response.
Creates a new string entity and sets it as the enclosing request entity.
Adds an attachment to the message.
Returns the changes for a given query.
Reads the next row from the CSV file.
Convert the given monetary value of the given currency to a base currency. This method is only called
Shuts down all locks and waits for all to finish.
Wraps the data observable and applies a buffer to the servlet output stream.
Inserts the given tags for the given metric.
Verify and create temp tables.
Get the project id for the given namespace.
return true ; }
Send authentication request.
{ }
Generate a subject access review for the given resource and kind.
( ) ; }
Handle a request failure.
Initiate the module with a rx session
Return an observable that contains all the jobs that have been scheduled at the given time.
Convert a map to a list
set the status code and optionally the reason phrase and end the http exchange
Find all data from the specified timestamp within the specified page size.
Builds a sequence of buckets from the specified interval specifying the number of buckets to use in the
send message to server
send oneway message.
Send a message to a single topic and tag with a delay.
{ } }
Adds a new file to the archive.
Replace the given file with the given text.
Build the archive file.
Generate a metrics instance for the given component and buffer
Fetch the content with the given id
Download the content of the order item.
Upload the current export transformation as a ZIP file.
Generate metrics for the given components.
Create a file with a random name under the specified directory.
Ends the building of a new paragraph and adds the child object to the parent.
Register a model adaptor for a given type.
Register a renderer with the given type and renderer.
Prepare a template by adding model and content info
Add a domain object to the packet.
Sets a property.
Add child object.
Makes a supplier that ensures the given directory is created with the given prefix and suffix.
Copies the input stream to the output stream using the provided buffer size and hash assembler.
Parse the content of the given file as HTML.
Parse the XML data in the given reader and return the root of the document tree.
Returns all elements in a subtree of a given element.
Create a stream of child nodes of the given parent node
Get the first child element of the given parent and child names
Create a stream of named elements from a parent element that has a given list of names.
Validate the xml against the given schema.
Entry point for the program.
Appends the content as a string constructed from the specified input stream.
Get the contents from a named resource.
Processes the given entry using the given processor.
qs encode a string with ascii characters
Set the signature.
Remove white space in the data if it is present.
Sign the signature on the request handler.
set data to Recorder
complete multipart upload operation
Adds or removes the notification from the favorites.
Add a new state to the list for the specified entry.
Indicates whether this cookie has expired.
Get the notification for the given notification id
Get a specific addressee by id
Get addressee
Get events for the given notification id
Get the event for a given event id
Return the rest url of a notification.
Gets an entry by its id
Get the current authentication token.
Returns the number of notifications in the system.
Add new categories to a list.
Fetch the notification for the current user
Create a response when an error occurs.
Create a notification response using the response entity to create the appropriate notification object.
Map a single row to a notification entry.
Attach the available notification actions
Normalize link for api call.
Get the notification category from the portlet preferences
Get the notification source for the portlet preference
Adds or removes a notification from the read notices.
Read a response from a file.
Get the school id of the current user from the request
Extract the user id from the JSON response
snooze notification if it is not snoozed.
Get all attributes as a map
Normalizes a vector.
Does a box b contain a box a?
) { }
Returns the sign of the vector
Sets the value of this quaternion to the rotational component of the passed in quaternion
Set a quaternion to an Euler angle.
Converts a point from one dimension to another.
Converts a double vector to a quadrilateral
Calculate the bounding rectangle of a quadrilateral and a rectangle
Calculate the bounding rectangle of a polygon
Returns the center of the quadrilateral in global units
Calculate the average vertex from a group of vertices.
Calculate the convex hull of a set of points.
Removes almost parallel polygons.
Calculate the average of closest points on a line to a given target.
Computes the area of the triangle formed by the two specified points.
Checks whether the quadrilateral contains the point.
Returns true if the triangle b and c contains the point pt.
Calculate the intersection of two directions.
Returns the intersection of two lines
Calculate the intersection of two lines.
Returns the intersection of two directions.
Computes the intersection of two rectangles.
True if the specified ellipse contains the specified point.
Calculates the intersection area between two rectangles.
access the element at index in the matrix
convert a matrix to quaternion
Rotate a d r - axis.
Rotate a vector x - axis.
- - - - - - - - - i a u d r - - - - -
Define a rotation matrix with specified angle in radians.
Rotate about z - axis
Convert an Euler to a 3x3 transformation matrix.
Rotate a vector about the given axis.
Sets the angle of the slope.
Convert a motion vector to a twist coordinate.
Sets the initial and end transforms
Interpolate the transform.
Does a Singular Value Decomposition on the given list of points. The center is the center
Simplified interface to solve for a list of points.
Calculates the length of a side of a triangle. The side length is defined as the number
Returns true if this diagon is inside the specified diagon
Converts a conic general F64 into a d r.
Converts a conic general F64 into a d
convert conic general float to parabola general float.
convert parabola general factor to conic
Divide a point by a scalar.
Converts a matrix to a matrix.
Converts a row in a d tuple to a 3 - tuple.
Set the parameters with a given vector.
Returns the half of the distance between two numbers
{ }
Checks to see if a plane is contained by a solid plane.
{ }
Simple interpolation between two Se2 functions
extract the quaternion from the eigen vector
) { }
Sets the to no motion of the plane
Converts a point to homogeneous coordinates
Convert a rotation matrix to homogeneous coordinates
Define an axis of rotation about a point.
Returns true if the coordinates of two images are identical within the given tolerance
Create a unit vector from a pair of latitude and longitude.
) { }
) ; }
Finds the closest point between two vectors
Returns the point on the line closest to a given point.
Calculate the origin of a point on a plane
Calculate the closest point on the current line to the given one.
Find the closest point in the triangle to a given point
Computes the Se2 transform of a rotation matrix and stores the results in result
Rotate a set of points.
Checks to see if the provided quadrilateral is the same as this quadrilateral
Calculate the acute angle between two angles
Converts a point from src to ret.
convert a normal d to a new d object
Converts another d into a new d - object.
Converts a color from src to ret.
convert a and b to a and b
Converts the linear system of equations a - b into a y - b.
convert a standard d to a new d that is closest to the slope
Converts a p1 d into a p2 d
Convert another d into a new d.
Converts a point from one plane to another.
Converts a java representation to an output object.
Converts a se3 f64 plane to a world object.
2 - D DTO3 d.
Convert a 3D plane to a 3D world coordinate.
Returns true if this vector is identical to the vector t.
Copies the current vector
compute the square of the norm
compute t for the given line and point
Returns true if the matrix is uncountable.
Returns true if the parabola is equivalent to this parabola
Calculates the center of the triangle.
compute the acute angle between two lines
Returns true if the point is infinite within the given tolerance.
Generate random number from a Gaussian distribution with standard deviation and standard deviation.
Conversion from H to E.
Subtracts two vectors and saves the result in a new object
Returns true if the signs of the two numbers are identical.
Set this rectangle to be equal to r.
Convert a rotated ellipse into a quadratic shape.
Compute a point from a rotation matrix and the ellipse
) { }
Compute the tangent of the ellipse
Returns true if the tangent line should be selected
Returns the z - coordinate of the specified corner of this polygon.
Calculates the Euclidean distance between two points.
Returns the Euclidean distance between two points.
Returns the Euclidean distance between two points.
Calculate the distance from a point to a plane.
Calculates the distance from a cylinder to a point.
Calculates the distance between two segments.
{ }
Returns the distance between the given point and the given quadrilateral.
Returns the distance from the given point to the nearest line segment in the quadrilateral using
Calculate the Euclidean distance between a point and a polyline.
Find the distance squared of a point to a polygon.
Calculate the distance from the origin to the line
Returns the distance between an ellipse and a point.
{ // }
Add a transform to the path
Calculate the closest point on the line to the given point.
Finds the closest point on an ellipse to a specified point.
Processes the provided data and computes the coefficients for the polynomial.
Creates a new random vector in the given range using the given random number generator
Computes the perpendicular canonical of a and writes it to output. If output is
Returns true if two coordinates are identical within the given tolerance.
Normalize a vector.
create a matrix from a variadic vector and column vectors.
Convert a repertoire to a vector
Returns the distance from this point to the given point.
Sets the ellipse of the Camera ellipse.
Normalizes the vector in place.
Returns the distance between two triangles.
Computes the quadrilateral norm of the input quadrilateral.
Calculate the simplest shape for a polygon.
Returns the average value of the number in the list.
Calculates a sorted list of points in clockwise order.
Compute a covariance matrix for a list of points using the given mean and covariance
; }
Multiplies each element by a scalar.
Returns the maximum of the 3 values.
Calculates the Euclidean distance between the given points.
Returns the square of the Euclidean distance between the specified two points.
Generates a list of random points on the plane
Generate random numbers from the Gaussian distribution with the given mean.
Generate random numbers from a Gaussian distribution with the given mean and standard deviation.
Calculates the mean of the given points.
Calculates the mean of the given number of points
Discard all cached tokens for the given credentials.
Invalidate all JWTs matching the given predicate.
Combine a number of collections to a set
Get dropins features from the passed server directory.
get dropins features from server
Get the updated features from the server file.
Parse include node.
Parse feature manager node and return a set of feature names.
Download the artifact from the repository.
Scans a set of JSON files and returns a set of open liberty features.
Check if only open liberty features are installed.
Returns true if target contains all of reference ; false otherwise.
Get the next product version from a version string.
Extract symbolic name from jar file
Find the kernel jar in the given directory that matches the pattern with the suffix.
Returns true if file1 is a replacement jar file or file2 is null.
Extracts the version from the given file name.
Compare two versions.
Get product information from the install directory and an action.
Checks if the given artifact is a jar file.
Get the value of a property.
Returns true if the image is a valid diff for the given file type.
tortoise. move ( length ) ; }
Checks if two strings are equal handling null.
Parse an int from a String in a safe manner.
Create the tortoise classes we will throw at the end of the experiment
Verify current turtle configuration.
Swap a blank cell in the puzzle.
Calculates the distance from the current cell to the goal cell. The distance is the sum of
Print a formatted string using the specified format string and arguments and flush the output stream.
Print a formatted string using the specified locale and arguments and flush the output stream.
; }
print a variable
Returns a random integer uniformly in [ a b ).
Returns a random real number uniformly in [ a b ).
Returns the index of the poisson distribution of the specified lambda.
Throws an exception if the array is not discrete.
Capitalize the first character of the string.
Returns a copy of the string with the first character converted to lower case.
Adds str to path if it doesn t end with the string.
Build a string from the given criteria and join.
get token sentence
Extract auth token from cookie and check if it is expired. If it is not expired then set
Extract auth token from cookie list.
Register all guice providers in the given jersey environment
Gets all the permissions of a role.
Add an aliased projection
Convert job info to job detail
Convert a trigger from the old format to the new one
helper method to set the count and interval of the trigger to the provided builder
helper method to set the start and end time of a trigger
Send mail.
{ } }
initialize scheduler.
get all fields for a given class sorted by field name
Returns a list of all fields of the given class and their respective fields
Configures the authenticator with the given configuration.
Generate attribute hash.
{ }
Adds a message to the item.
Generate a strong password for a user
Get the user with the given username.
Hashes the given password for the given account.
Verify the given account name.
Commit hibernate transaction.
Rolls back hibernate transaction.
Start the transaction.
Returns true if the user is authorized for the given request.
Properly parses a date from the given object using a custom annotation.
Returns a generic response for this error.
Creates an equals restriction
The field is not equal to the given value.
Matches a object to a name that is less than the given object.
The field is less or equals than the given value.
The field must be greater than the given value.
The field must be greater or equals than the given value.
Matches fields that are ilike the given value.
The named restriction to check if the value is the same as the one given.
Adds a new namespace.
Return a resource representation with the given content.
Return a new resource representation with the specified rel.
Return a resource representation with the given value.
Return a resource representation with a specific namespace.
Check if decoding the given byte array can be done with this method.
Converts a substring of a string into a sequence of base64 encoded bytes.
Compares two reader to determine if they are equal or not. < p > This method buffers
Move the file or directory to the destination.
Creates the specified files if they do not exist.
Returns the base name of a file.
Add some padding to the buffer.
Get short name of a class
Gets all the super types of the given class.
Verifies the given password against a hash.
Reads the next line from the standard input stream using the specified character set.
append a byte to the end of the buffer
Append a range of bytes to the end of the buffer.
Copies the specified array.
Add another fraction to this one and return the result.
Subtract the supplied fraction from this one and return the result as a new fraction.
Multiplies this fraction by another.
Divide this fraction by another. The returned fraction is in reduced form.
Finds and returns the largest of the given values.
Finds and returns the smallest of the given values.
Throws an illegal argument exception with the given message if the condition is not met.
Fetch the location forecast data from the given latitude and longitude
Fetch the weather data with the given latitude and longitude
Fetch a series of sunrises from the given location
Create a list of meteo extras for the given number of hours ahead.
Finds the nearest forecast to a given date time.
Fetch weather data for the given query
Create simple long term forecast using the short term indexer
Create a long term forecast using the series.
Parses a location from a string.
Fetch all the content
Create wind symbol name optional.
Find the beaufort level of the forecast.
Creates a new uri
Is the sunset of this time period at the given date?
Get the forecast for a given date time.
Returns the best forecast period for the given range of dates.
Fetches the text location data for the given longitude and latitude
Fetch the weather data with the given latitude and longitude
Update database using the connection string and the username and password provided.
Invokes the named method of the given script engine.
Acquires an object from the given source.
Get referenced object.
Get wrapped object.
Gets the configuration object for the given class.
get is substitutor enabled boolean
Create class iterator.
Override in a subclass to provide a different decoder.
Get a list of services that implement the supplied interface.
get module.
Acquires a new input stream from the given source.
Returns the size of the given data source
Get wrapped data.
Returns the N - th component at the specified index.
Returns a new name of the substring at the specified index.
Is the current token colored?
Creates a new instance of HSREPattern.
Find loop in the dfa tree.
Subset the match list from begin to end
CBR dissect.
Clone the output arcs of a state to a new state
Depth - first search algorithm to find all options in a subtree.
Mark a subtree as inuse.
Create a new NFA for a given subre.
Parse a subre of a given type.
Deleting traversing the state tree recursively.
Create a new non - word arc.
The actual word generation routine.
Duplicating the number.
Bracketing a single character.
Scan plain.
return pos ; }
See if a character is a full onechr and if so do it.
The actual implementation of the vector routine.
Get a color from the color table
Generate a new pseudocolor.
Processes all the subranges of the current map.
okcolors - check if there are any color descriptors
add an arc to the colorchain
Uncolorchains an arc from this color descriptor.
For debugging.
Starting lexing by the leftmost character in the stream.
Updates the lexnest with the interpolated characters.
Get the color for the given Unicode codepoint.
; }
Returns the number of noprogress before this node.
Returns the unicode set equivalent for the given character depending on the given flag.
Use this to get set of all possible regex sets for this class.
sort the arcs of the range [ first last ) using a carc sort
creates a new state with given flag
Move all the arcs from the old state to the new state.
Move all the instructions from the old state to the new state.
Copy all the instructions from the old to the new state
copy all the output arcs from old to new
drop a state and its arcs
Frees a single state.
Copy a cparc from one state to another
Duplicate the path down to the destination state.
Copy the special color from the parent if it exists.
Print the NFA to debug log
This method is used for debugging
Debugging function to print the arcs of a state
Recursively dump all rarcs of an arc to the output chain.
Implementation of the core optimization routine.
The number of matches that can be found in this pattern.
{ }
Clean up after a method call that can be repeatedly invoked.
Make a state reachable from a given state.
Test for a state where we can reach another state.
Fix empty arcs by removing empty arcs.
true if an arc is definitely unempty
Reads rule parameters as a map.
retrieve all rule interpreter plugins from the repository
Get report plugins for this report type
Gets the rule selection for the supplied rule set. Subclasses may override this method in order to
Run the tool with the given arguments.
Build error message from exception.
Gathers the standard options from the command line.
Gather tasks and options.
Gathers the task names from the given task factory.
Parse the command line and execute the corresponding tasks.
Get command line from the arguments.
execute a single task
Read properties from a file or a resource.
Prints the usage and the error message to the standard out.
Returns the home directory of the current user.
Create a class loader that will load plugins from the plugins directory.
Returns all the ids contained within the cells at the given location.
Get the ids of all cells intersecting the given longitude and latitude.
Get URI for given method and target.
Add an orderless route to the router
Returns the total number of routes between first and last.
Add a new Route in the first layer for methodless routers.
Add a route to the routing table.
Add a new route to the last of the chain of routes.
Returns true if any of the paths matched.
Appends a smart equal criterion.
Get store file name.
Compare folders.
Compares two entries.
Return a negative number if the first element is a bookmark.
Set the time at which the servlet class was modified.
Returns a list of the names of the jsp dependants that this tag handler depends on.
{ }
Parse the authorization header from the request.
Get a new instance of a function mapper.
Adds a function to the function table.
Returns a function mapper for a given function and arguments.
Resolve the method for the given prefix and local name.
Set the values from the internal char array.
Resolves a variable within the current context.
. IOException { }
. Exception { }
Parse tag file directives.
Create a compiler.
Gets the stream for the resource as a stream.
Calculate the last modification timestamp of all channels.
Traverses the class context stack and builds an array of all of the class loaders
Checks whether this loader is a child of the given classloader.
Start loading the named resource instead of the default class if the class is already loaded.
Reads the header of the given stream.
Paginates a data set.
Create a meta key from a string representation.
Fills the requirements list.
Return the tag file for a given tag name or null if the tag file does not exist.
Parse an implicit TLD.
Returns the checksum of the specified file.
Returns the size of a file in bytes.
Validate channel name.
Sets the current read position to the specified block.
Locate the block at the given position.
Get maven artifacts.
Updates the state of the current option and its reps if any.
= 0 ; }
Calculate prices of all possible reps.
) { }
Throws an exception for expected byte.
Throws an exception for invalid byte.
Populates the mapping table for TLDs.
Scan for TLDs with an input stream.
Adds a new wrapper for the given request URL.
Get the parent class loader.
Sets the bytecode to use for the given class.
Get the bytecode birth time for the given name.
Save the bytecode for the given class to the given file.
return ; } }
Set the class path.
}
Stop the background thread that runs the query.
}
Find a channel by name.
Find a channel instance.
{ }
Copies the input stream to the output stream.
Parse a page or jsp source into a tree.
Parse the page attributes from a jsp reader
add a list of files to the include clause
Parse a jsp attribute and body.
Add a single attribute name and value.
Add a child to this node
Returns an iterator of all the attribute names that have been added to this model.
Returns an iterator of all children in this node.
Find all the children with the given name.
Create a new instance from the current values.
Look for an alias for the given name.
Creates a new instance of this class for the current thread.
Unset the current thread so that it can be reused.
Find the current print stream.
Write a string as an optional field to the writer. If the value is null this method will
Write a string representation of a value to a writer.
Create an element and add it as a child of the parent element
Adds an element as the first child of the given parent element.
Writes the contents of the buffer to a character stream using the correct encoding.
Sets the writer to write output to.
Reallocate buffer to accommodate new content.
Creates an element for the given page of nodes.
Get same parent state.
Register a new storage provider with the registry.
Stream the data for the given meta key
monitor a previously started job
Check if request is authenticated or not.
Finish the XML document and close the underlying stream
Creates a new gson instance and registers adapters for common types.
{ return
Return the union of both provided meta data and extracted meta data
Get the throwable from the request.
Check if the coordinates end with a known checksum extension.
Finishes writing uncompressed data to the output stream without closing the underlying stream. Use this method
Gets the exception of the current request.
Evaluate expression using function mapper
Get the prefix from the properties.
Check if the given path is an XML file.
Parse a tag file directives.
Load the tag file.
Remove generated class files from all compilers.
Set the uriroot.
Finds all the jsp files in the given directory and its subdirectories and adds them to the
Locates the uri root of a file.
Moves the iterator forward to the next non - empty position in the hash table.
Returns whether the current position matches the given string.
Check whether a string matches the given optional spaces followed by the given string.
Skip until the given limit string is matched in the source string or return null if the limit is
Skip characters until ignore esc is found.
Skip until the matching string ends.
Parses the next token from the input stream.
{ }
Returns a copy of the coordinates with the classifier unclassified.
Given a list of aspect informations filter by factory ids
Returns an array of factory ids that are required to instantiate the given assigned aspects.
Set schema resource prefix.
Set DTD resource prefix.
} }
Merge errors.
Initialize the binder
Returns a map of channel aspect names to their channel information.
Returns the unqualified version of a path.
Invokes a custom tag handler.
Returns a byte array of the specified size filled with zero if the option given.
Returns an array of the specified size filled with all the values.
Create aether result from results.
return null ;
taglib validator on this page
) throws IOException {
Get the encoding for a file.
Report a non - fatal error.
Get the real path for the given path.
Returns the resource at the given path
Get the contents of a file as a stream.
Get all the paths for a resource
Log a message and exception with an accompanying stack trace.
Add a filter
Calculate the number of bytes required to store a match with a given dictionary size.
) { }
Set a preset dict of a specific size for the output stream.
}
Finish filling the buffer.
{ }
Returns the number of bytes that are the same as the input buffer.
Returns the number of bytes in the match.
Verify that the specified matches can be found.
Advances the read position to the write position and returns the number of bytes that were moved
Package - level access
Flush the internal buffer to the underlying stream.
Clears the buffer and resets the underlying output stream.
Flush the internal buffer and the underlying stream.
= true ;
Write a string.
Override this method if you want to throw an exception in your own way
Make key list.
Generate the java file and set up the compiler options.
compile ( ) }
Check if the compiler is up to date. If it is check if the compiler is up to
Check if the path refers to a system jar
Properly quotes a character.
Generate the declarations of the page directives.
Compile the tag handler pool list.
generate an XML prolog
; }
Generate the postamble of the node.
The main entry point for this class.
Generate tag handler attributes.
return null ; }
Export a single channel to a zip file.
Validate XML view with the given compiler.
Gets the most recently added handler for the specified class.
Parse el expression
select the property group that has an extension.
Is the uri a jsp page?
Print a comment.
Prints a string to the current indention.
Print string to the underlying stream.
Prints the string s to the underlying stream. One line per line. The index is increment
Get the expression in xml.
Check the scope of a node and report an error if it doesn t match.
Escape a string for use in an XML doc.
Validate expressions.
get the tag handler class name.
Returns a legal Java package name for the given class path.
Splits the given path for the given pattern. The path is assumed to end with the pattern
Convert a java identifier back to the original form.
Mangles a single character.
Checks if the given string is a Java keyword.
Add a property if the value is not null.
Creates a string representation of a modifier.
Returns the metadata values for the given namespace and key.
Run the modify run based on the given arguments.
Get basename of a file
Put into the cache.
load metadata from db.
Build a collection of metrics from the payload.
If n is a lazily parsed number returns it s long value. If n is a fully parsed
Writes the given object to the given output stream.
Calculates the TTL for the specified rollup type and granularity.
{ }
Track delayed metrics
Track delayed aggregated metrics
Read a double or long from the input stream.
Put a double or long number into the header.
Returns a map of all the properties in this resource.
Creates a new container in the store.
Schedule eligible slots from all shards
Clear a particular slot from all currently running shards.
Add a listener for an event.
Register a listener to be called only once.
Remove all callbacks for the specified event
Emit an event with the given arguments.
Get the listeners for the given event. If there are no listeners an empty list is returned.
Get remote name.
Append an event to the rolling buffer.
Parses the timestamp out of the file name.
Start the http ingestion server.
Returns the correct rollup type for the given granularity.
Get the io instance based on configuration.
Attempt to put a value into the given builder. If the value is smaller than the configured
Compute maximums for the given headers and outputs.
Format a header string given the number of maximums
Formats the given outputs with the given maximums.
{ reg. register ( metricRegistry., ) ; } }
thread pool
Add a metric index with the given document count.
Build complete metric names list from the given index map.
Gets tokens.
static methods only.
Calculate the granularity of a duration that is less than or equal to a given number
Set the server time.
Get unique hosts from the config.
Gets the maximum number of connections per host for the given number of hosts.
Get an iterable of metric column families
Insert the given metrics to the data store.
insert a set of metrics in the specified granularity
) { return locators ; }
Returns the regex to use to grab the current and next level of a specified string. In the
Starts the uploader.
Stops the uploader. This method has no effect if the thread is not running.
Indicates whether the given locator is currently inserted into the batch.
Check if the locator is already inserted into the discovery layer
Checks if the locator is already present in the token discovery layer.
Check if the locator for the given slot is delayed.
Sets the delayed locator for the given slot.
Returns a map of all the ranges and their respective iterators. The range will be finer
Returns an iterable of all the range objects that fall within the given interval of the given gran
{ } }
Insert the given metrics to the specified column family.
Returns true if the metric is delayed by some time.
if there is a delayed locator for the given metric it returns the bound statement for that metric otherwise
Get metadata values for a given metric locator
Check if the content type is present in the http headers
Check accept header
Insert a batch of documents to the index
Validates the format.
Check the status of the application.
Creates a new instance of a new extractor based on the configuration.
Determine if the given operating system matches the given name and version.
Start the engine. This method must be called before the engine is used.
Stop the broker process.
Creates a default pn signaling params instance.
Adds a list of ice servers to the current set of servers.
add an ice server to the list
Send a JSON message to a single user
Send a JSON message to all peers
Gets the value of the weitere adresse property.
Gets the value of the user defined simplefield property.
Gets the value of the user defined anyfield property.
Sets the value of the api suchfelder property.
Gets the value of the multimedia anhang property.
Get status vbm.
Get status i.
Get status of the operation.
Get the aktions typ importmodus.
Gets the adressdruck value for this Proposal.
Get the waehrung type.
Get the bodenbelag type
Sets the region.
Sets the area value for this ReportQuery.
Sets the value of the address property.
Sets the description value for this DBObject.
Sets the rent collection period.
Sets the value of the furnished property.
Sets the phone1 value for this Customer.
Sets the phone2 value for this Customer.
Sets the contact name.
Sets the phone info.
Sets the value of the main email property.
Sets the cc email for the document.
Sets the external id for this node.
Sets the agent id.
Sets the epart value for this EnergyPlusSettings.
Sets the jahrgang variable to the given value.
Set the value of the gebaeudeart property.
Sets the buero typ for the document.
Checks if the given value is a numeric value for the specified locale. A numeric value is any
Set the gebiete value
Sets the gruppe value for this Insteon.
Sets the agent of the root.
Gets the value of the property property.
Sets the stand value
Gets the value of the userDefinedExtend property.
Sets the value of the zeiteinheit property.
Gets the value of the zimmer property.
Gets the value of the haus property.
getter for buero praxen.
Gets the value of the gastgewerbe property.
getter for land und forstwirtschaft
Gets the value of the sonstige property.
Gets the value of the renditeobjekt property.
Access the terrain of the agent.
Sets the value of the umfang.
Sets the wohnungtype of the atom.
get country code by country name
get country from iso3 code
get country code by country code.
get country from iso2 code
Get country name by country iso2 code and language.
Translate a country name from the ICU format to the requested language.
Gets the value of the anbieter property.
Sets the category of the element.
Gets the value of the pdf property.
Set the aktionart value
Sets the value of the realestateitems property.
Sets the value of the pacht property.
Upgrade from old immo version to new version
Gets the value of the content property.
Returns the names of all fields of this type.
Sets the blick object
Set the value of the pauschalmiete property.
Set the monatsmiete value
Get parkplatz.
Set the value of the lastenaufzug property.
Sets the value of the art property.
Gets the value of the feld property.
Dump the contents of the table to a writer using the system s line separator.
Returns the value at the given position or the given default if the value is null.
Prints each record of the matrix in a single row.
Set the value at the given position. If the value is null then the position is removed.
Sets the ctype.
Set haustyp.
Gets the value of the energiepass property.
Sets the keller value
Sets the value of the grundst typ.
Sets the value of the geschl attr.
Sets the hallen type.
Gets the wiederholungstermin value for this Product.
Gets the teilungsversteigerung value for this BooleanResult.
Upgrade from an old version to the new one
Get the value of bevorzugt.
Gets the value of the wunsch property.
Sets the art of the movie.
Sets the modus value for this ProposalLineItem.
Gets the value of the email sonstige property.
Gets the value of the tel sonstige property.
Set handel type.
Sets the value of the api suchfeld1 property.
Sets the value of the api suchfeld2 property.
Sets the value of the api suchfeld3 property.
Gets the value of the row property.
Setter for the value of the sport property.
Gets the value of the anhang property.
get the objectekt kategorie 2
Get the value of the objektzustand property.
Get haus kategorie.
Get the value of the ausstattungsqualitaet property.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Sets the wert value
Sets the value of the ackerland property.
Sets the value of the bauerwartungsland property.
Set the value of the bootsstaende property.
Seta el buero.
Set the camping value from a jaxb object.
Sets the value of the doppelhaus property.
Sets the value of the einfamilienhaus property.
set the value of the einzelhandel gross property
JAXB method to set the value of the klein property.
Sets the value of the garagen property.
Sets the garten value for this node.
Set the value of the gastronomie property.
Sets the value of the gewerbe property.
Sets the hotel value from a jaxb object.
set the industrie value for this node
Sets the value of the keine bebauung.
Sets the kleingewerbe value for this Node.
Sets the value of the lager property.
JAXB method to set the mehrfamilienhaus value.
Sets the obstpflanzung of this JAXB model.
Sets the parkhaus value for this Campaign.
Sets the value of the produktion property.
set the value reihenhaus
Sets the value of the stellplaetze property.
Set the villa value from a jaxb object.
Set the wald value from a jaxb object.
Sets the value of the anbieter property.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Get the value of the einzelhandel property.
Gets the value of the hallen lager prod property.
Gets the value of the parken property.
Gets the value of the freizeitimmobilie gewerblich property.
Getter for the objektart zusatz.
Gets the value of the stellplatzart property.
Setzt max dauer.
Getter for the feature property.
Set zimmertyp.
Upgrade an existing open immo document to the latest version
Sets the keine angabe value from a jaxb value.
Set the erdwaerme value from a jaxb object.
Sets the value of the solarheizung property.
Sets the value of the pelletheizung property.
Sets the value of the gas field.
Sets the value of the oel property.
Set the fernwaerme value from a jaxb object.
Sets the value of the strom property.
Sets the kohle.
Returns a random string of the given length
Returns a string consisting of random letters only.
Generate a random string of numeric characters of a certain length
Get wohnung kategorie.
Sets the benutzer value.
Sets the value of the objekte property.
Gets the value of the feed property.
Sets the moeb.
Gets the value of the serviceleistungen property.
Sets the value of the sub administrative area.
Sets the city.
Sets the locality.
Downgrade an existing immo document to a new version
Upgrade an existing immo document from a previous version
Sets the value of the land typ.
Gets the value of the field property.
Upgrade from an old version to the new one
Gets the value of the ad property.
Set the gastgew type.
Sets platzart value
Get the daten verkabelung.
Get the klimaanlage.
Gets the value of the image property.
Sets the price type.
Sets the new development availability.
Sets the value of the directions property.
Sets the co2 rating for the generation.
Sets the energy rating.
Auto generated setter for viewing details
Sets the status of the property.
Sets the pictures value for this Creative.
Set bebaubar attr.
Upgrade from old immo version to new version
Sets the parken type.
Sets the new value of the alter.
Fuegt die einzelnen Typen immobilie.
Sets the telefonart value
Sets the emailart value
Sets the value of the overseas sales property.
Sets the overseas rental.
Create a user defined simplefield.
Gets the value of the fehler property.
Sets the value of the erbpacht property.
Gets the value of the sonstige property.
Gets the valuelist value for this Proposal.
Sets the min dauer value for this Moer.
Setter for the zins type.
Gets the value of the photo property.
Sets the metadata for the feed.
Sets the projects for the feed.
Sets the properties for the feed.
Upgrade from legacy kyero version to new version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the sonstige type.
Sets the value of the distanz zu property.
Gets the value of the distanzen property.
Gets the value of the sport property.
Determine whether the given exception is compatible with a throws clause.
Set the bindings on all namespace uris
Adds a prefix and namespace uri to the binding.
Removes a prefix.
Returns true if the current string contains an opening tag.
If we are not in a comment and the line is not empty consume all tokens until we hit
Consume and return the next comment in the line
Returns the index within the line of the comment token.
Configures the JDOM logger based on a location string.
Method that is invoked when a prefix mapping is started.
Adds an iterator to the list.
Adds an option instance.
Adds a string option.
Adds an integer option.
Adds a long option.
Adds a double option.
Adds a boolean option.
abstract method of {
Creates a new instance of a class.
Decrease the maximum number of threads in the pool.
Sets the target object for this event.
parse the method to get the target class and method and arguments and prepare the invocation
Finds a matching method.
Converts an integer to an unsigned string
Serialize an object to a byte array.
Returns the object represented by the given serialized bytes.
Get child element by tag name.
Get the text value of the first child element with matching tag name.
Get the child elements of an element. This method returns an array list of all the child elements
Returns true if the node name matches the desired name
Check if the node name matches the given names.
Sets the size of the string. If the given string is longer than the given length it is
Release the listener and log when debug is enabled.
// synchronized } }
Returns true if we can keep monitoring the queue.
Calculates the mobile city for a mobile number
Fires a SAX start prefix mapping event.
Filter an end prefix mapping event.
Add a callback to be invoked when the future completes
Parse the jar file to create the tree structure.
get the color of the specified item
Sets the values of the layout.
Calculate the color of the item which corresponds to a specific position
Set the text size.
get in bounds x
Get the intro text from the class resource
Returns an array of keyword names.
Returns the keyword arguments for the provided string.
Get the documentation for a keyword.
Main entry point for the tool.
Stop the server and wait for it to stop.
Start the Jetty server and listen for connections.
Convert properties from file to JSON.
Convert properties from a file to JSON.
Convert to json.
convert properties to json
Convert properties to json format.
convert from properties to json
Takes a properties map and applies the include domain keys to the properties of that map.
Convert properties to json.
Calculate the shadow radius for a circle
Creates a new builder for OCSP fetchers
Find the intermediate for a given certificate.
{ } }
Checks if the input directory is present and if it contains Markdown files.
Substitute all the variables that match a given pattern with a value in a map
Returns the first line with the given string replaced by the given string.
Add a title to an html file.
Replace the template variables in the given content with the values provided.
Update relative paths in the HTML.
Copies the files from one directory to another.
Check path.
) { }
; }
} }
Calculate the percentage value for a given width.
Check if the views overlap with the current view.
Get launch intent.
Launches an activity.
Get a list of fact sheets
Download file from response
Build http client.
Creates a new access control entity.
Updates data model in the workspace.
Create a new export job.
Set the host to which the client should connect.
API client builder with client credentials.
Process a graph ql request.
Get the list of bookmarks for a user
Add some permissions to a named graph.
write permissions to a named graph
Mark logic dataset graph with the given rulesets.
Shuts down the socket and releases all resources
Convenience method for executing a select query with pagination
create database client and connect to database
set thread count for the given process
Use this command to resize the image to the specified size.
Rotate the gmt by the given degrees using the given rotation annotation.
Set the gravity for the next request.
strip profiles from command line
Set a font with a given size and color.
gm source.
Add a new image to the set.
Parse the target object and return a list of arguments.
Prints usage of the given object to the given print stream.
Extract time unit from string.
Parse a target object and add its fields and properties to the arguments.
Execute the specified URL in the default application context
Execute a slide based on a file.
Interprets the given file.
Sorts a list of rectangles by their size.
Render the given template with the current parameters.
Get xml for the given slide number
Check if the given mouse event is inside the input area.
If the element overlaps vertically with the specified element it is considered to be vertically overlap
Sends the message to SQS and returns the payload.
Do the outbound operation and return the message payload
Return the file if it exists or throw an exception if not.
{ return null
Returns a map containing a single entry.
Log a trace message.
Log a trace message.
Log a debug message.
Log a debug message.
Log a info message.
Log a info event with a custom message.
Log a info event with two parameters.
Log a warning message.
Log a warning message.
Log a error message.
Log a error event with a custom message.
Add to context line and method.
start steno wrapper
Write key value pairs.
Serialize throwable to json generator.
Returns a log value representation of this instance.
Get caller data from the logging event.
Create a database in the Hive store.
Checks the mappings for the given position.
Get cell or string with save attributes
Save data to object in context.
Refresh row from context
Parse save attr string.
Gets the save attr list from a row.
Gets the save attribute for the given column index.
Sets a save attribute in the hidden column that allows multiple values to be saved.
Sets the save attributes for all rows in a sheet.
Sets the save attributes for all cells in a row.
Prepare context and attrs for a cell.
Format number.
Put shift attrs.
set new workbook for this serial
Get xssf wrapper
Retrieve the formula evaluator.
Re calc max col counts by recalculating the max col counts from the header cells. The
Load a sheet from the input stream.
Load a single web sheet.
Load a work sheet by tab name
Export the sheet to a file.
This method is called when the form is submitted.
Submit the dialog.
Populate component.
Get the current sheet configuration for the current tab.
Reads the default object from the input stream.
Gets the locale of the current ui component.
get the camera picture for the current phase
Get cell helper.
Get the helper for the current context.
get validation handler.
Replies the helper for this chart.
Convert an array of shared formulas into the corresponding array of ptg objects.
Convert a single ptg into an array of alternating ptgs.
convert ptg to a list of watch row.
If the given object is a func var ptg and its number of operands is different from the
Returns the list of rows for the current row given a list of rows and a list of mappings
Assemble a list of rows from a mapping of all rows to a list of rows.
Build dynamic row for ref ptg
Find the background color to use.
Gets x color from Sp color.
{ return fill
Get x from cts color
Get the x value from the color table
Gets autocolor code for an index.
Convert an xssf color to a clr one.
Convert an xssf color to a triplet
Get background color from cell.
Find component name from ui object class
Populate the given component with the attributes from the given cell.
Search the attributes type of the given object and method name.
Sets the property.
Get object property value.
Sets up the control attributes.
Find cell validate attributes.
this method will setup cell picture and cell charts if any
Sets up the faces cell charts.
Sets up the cell picture.
Initialize the charts map from a workbook instance.
Get the pie title.
Sets the style of a series.
return null }
Setup the bar style.
Initialize xssf.
Get chart id from parent.
Initialize the map of anchors.
Generate xssf image for single chart.
Evaluate the expression engine to a collection object.
Gets the full name from a row.
Rebuild formulas from cached cells
Sets up upper level formula.
) { }
list of rows mapping by full name
Change index number in shift map.
Changes the upper level final length of an attribute.
Change index number in hidden column.
Sets the full name in the hidden column of the row.
Gets the original row number in hidden column.
Sets the row number in the hidden column.
Find parent rows mapping.
Find child rows mapping from shift map
Finds an item in a collection.
Build a range from a source config range and an insert position.
check if a row is inside a static range
Return true if row is a static row reference from a static range
replace expression with cell value
Returns a map of cell numbers of the merged region of sheet1.
Returns a list of cell addresses that are skipped for the first sheet in sheet1.
Adds all cells in a cell range that are not in the skip list
Build a sheet comment from a list of tie command aliases
Iterate through the list of tie commands and build a comment for each.
Build configuration map.
Create sheet configuration object for the given sheet.
Build a form command from sheet config and sheet object
Verify last cell is non - blank.
Build sheet.
) { }
Build command list from sheet comment.
set parent for child command.
check if each command is present in the list.
Match command to sheet configuration form.
) { }
Build command list.
Processes a method line.
Processes a single command line.
Move comment to map.
Create config command.
Build a map of attribute names to attribute values.
Create sheet configuration from form definition.
set footer of sheet configuration
set body of sheet configuration
set header of sheet configuration
Delete a row from the sheet.
remove ranges from shift map
Get remove full names list.
Get each command from parts.
Insert an empty object into the context
Delete object in context.
Extract collection data and prepare it in context.
Indexes all commands in the given range.
Is row allow add boolean.
insert a row for each template in the specified range
Evaluate normal cells.
Evaluate user formula.
Checks whether the specified string is a user formula.
Create cell comment.
Evaluate a boolean expression.
Remove a range of cells from a sheet.
Remove single row in sheet.
Remove cached cell from sheet at specified row index.
Remove the given number of rows in the body cells
Load the picture from the given row and column index.
Load chart from the page.
Assemble a new value for the given face cell.
Get cell value with format.
Get cell value without format check.
Get cell string value with type.
Get cell string value with number type.
Set cell value.
Set cell type and value with string type.
Set cell value boolean.
Set cell value as date.
Set cell type and value with number type.
Copies a range of rows from one sheet to another.
) throws IOException { // }
) { return null ; }
Copy cell from source to new cell
copy cell style from source cell to destination cell
Clone cell to new cell
create anchor object from new cell
Create or insert a comment for a cell
Match comment settings between two cells.
Get vml drawing from cell
get the shape from a vml cell
Get cell style from source cell.
Convert the cell to face cells.
Get row and column from target component attributes.
Get initial rows from config.
Gets a faces row from a given top row of a list of rows.
Gets a cell from a given body row and column indices.
Get poi cell from sheet.
Get skey from cell
Get or create a tie cell for a poi cell.
get current data context name.
Evaluates the given expression in the context.
Evaluate the expression and return the result.
Write the row data to the output stream.
Removes a row from the table.
Merge the given map into this map
recover all rows in this batch using the given sheet
Get chart type from chart instance
Create a basic stroke with the given style.
Creates chart data from xssf instance
Set up chart data.
Initialize chart with chars data.
xssf sheet must be initialized before use
associate chart id with anchor node.
Get chart id from child node attributes.
Build each item of the collection.
Save data in context.
This method recalcs the formula according to the formula evaluator.
Get poi cell with row and col from a certain tab
Gets cell with given row and column index from current page
restore data context.
Get last collected object from the full name.
Check if restore need to be performed.
Start restore data context.
Shift row to a new position.
Sets cell reference of first row of this cell range.
Sets the last row plus the cell reference for a cell on a sheet.
Build cells for a single row.
Build single cell.
Main method to read a JSON object from the input stream.
Build category list.
Build series list.
Build a chart series out of a web sheet cell list.
Generate the color list from dpt.
Return the data item with the specified index.
Sets the command index map.
Get map of picture from xssf if it is implemented.
Get xssf picture from wb and store in map
Add a picture object to a map
Generate picture style string.
Generate chart style string.
Returns the pattern that will be used to match the query
get the current chart for the current phase
Recover the cell in the specified sheet.
Get row style string.
Get cell style string.
Get the cell font color.
Gets the cell font decoration.
Get cell style string.
Get the column style of the cell.
Get text alignment from cell style
Get vertical alignment from cell style.
calculate the total height of a sheet
Sets up cell style for the given cell and row height.
Get input type from cell.
Gets the resource paths for the given path.
Gets the resource as stream.
Removes the prefix from a path.
Return true if the input string matches the specified type.
Find a bean given a bean name.
Join an array of shorts with a separator string.
Rounds a double value to a given number of places.
get the current tab type.
Get the style of the current tab.
Gets the default date pattern.
Get decimal separator by default locale.
Get thousand separator by default locale.
set the tie command alias list.
Build watch list.
Build watch list for a given cell
Add a new row to the watch list.
Judge is command string or not.
Parse widget attributes.
Get attribute key in map by cell.
Parse validate attributes.
Find the position of the first bracket following the start bracket.
Parse the attribute string into a map
) { }
) { } }
Split by eual sign.
Parse special attributes.
Processes cell attributes for calendar.
Processes a single select item.
Gather the special attributes.
Allows to parse a comment to map of comment key to map of comment key.
Find first non letter or digit position.
Removes the characters from the start and end of the string
get excel column name.
Converts a column name to a number.
Get cell by cell reference.
Convert height units to pixel.
Check if the specified string is a date.
Parse date.
Tests whether the given string is numeric.
Decide whether a certain character should continue.
Sets the property.
Compare cell to another cell.
check if child range is inside parent range
Clear hidden columns if the max columns is greater than the max columns of the sheet.
Delete all hidden columns from row.
Delete cell from row.
Processes the system event.
Refresh the cell with the new status.
{ return true }
Validate by tie web sheet validation bean.
Check error message from context object
Validate single cell.
Validate the given value against the given attribute of this cell.
Check cell if it is in current page.
Determines if the current page is valid.
Validates the given row of the current page.
Validate with row col in current page
) { } }
Refresh the cached cell values for the given row.
Sets the flag in the view map of the current faces view root.
Do pre validation of the sheet configuration.
Clears all the internal state of the cell renderer.
Load header rows.
Load header row with configuration tab.
fill up to the maximum number of columns in the row
Get header column style string.
Get the width style to use.
get column width style of cell
Initialize tabs.
return ; } }
refresh all data for a single row
Refresh data for a cell that has a save attribute.
Find tab index with name.
Load work sheet.
Set up a work shee for the given tab.
Sets the first page of the data table.
Setup the row info.
Load the body rows for the current sheet
Refresh cached cell.
Process refresh cell.
Create dynamic columns based on the sheet configuration
Add a new row to the table.
Refresh the body rows of a sheet.
{ } }
Returns true if the current status is set to unsaved.
Find the common constructor for the given class.
Write input stream to output stream.
Write long.
Write the string to the writer.
Set converted traffic stats tag.
Adds a bitmap to the database.
Adds a new file descriptor to the result.
Remove the parameter with the given name.
Add header to the request.
Clear all the temporary variables in this request.
Call this method from your Activity or Fragment s play method.
Bind the service and num.
Unbind the streamer.
Removes the drop listener
If the image is already present on disk it will do nothing. If the image is not present
Read the contents of the stream to a string using the specified charset.
Reads the contents of the given stream as a string using the given buffer pool to convert the
Send this message to the client.
Returns the number of bytes that can be read without blocking.
Releases a buffer and closes the underlying input stream if it is still open.
{ return
} }
Send the start of the MIME part.
Send the disposition header.
Send the content type header.
Send the transfer encoding header.
Send end of header.
Send end.
Send parts as a multipart message
Returns the number of parts in the given array.
{ }
Send a not - modified response.
Sets the date header to the http response.
Sets the date and cache headers.
Set the content type header for the given file.
Send an empty buffer to the given channel and then close it.
Send the disposition header.
Send data to the client.
Install the cache.
Synchronized to ensure working directory exists and is a directory.
Try to get a response from the cache.
Returns a new body input stream for the given snapshot.
Reset the background to the initial state.
Get a ssl context for the given keystore and password. If a context already exists for the given
Validates a PEM formatted keystore using the provided password.
Replaces the current scale type with the new type.
Get a pending intent associated with this service.
Disconnect the given connection.
Bind the service if not already bound.
Unbind the service.
Notifies the provider about changes to the view.
// TODO } }
Subclasses can override this method for custom processing of the received data.
Resets the Loader ready to fetch a new page.
Waits for the loader to complete.
Set the text of the view or hide it with the given visibility.
hide soft input
Show soft input method.
Toggle soft input.
Calculates the width of the given dip for the given display metrics.
Stop the direct connection timer and log the exception.
clear cache by url
Populate image data.
Method used to cancel loading of an image view
Create an image consumer.
Sets an image for the view and decorates the image.
Loading image.
Start image loader task.
Add image to cache.
Decrements the reference count for the given buffer. If the reference count reaches zero then the
Build a url and add it to the connection
Adds a parameter to the request.
Disconnect the underlying connection if it is not a url wrapper.
Get the MD5 for a string.
Returns a string for the given symbolic constant.
The string for the given cublas status
If the given result is different to cublas status this method will throw a cublas
If exceptions are enabled this function will throw a cublas exception if the last return value is
Adds a lexeme to the frequency list
Accumulate the number of times an ending occurs
Estimates the estimation of the number of attributes in the given wordform.
Prints a long description of the template to the print stream.
Verify and set kamols attribute.
Remove kamols markup formating.
Get the list of metrics.
Build a query string from the time and optional parameters.
Process a JSON node and return a list of metric data.
Parses a list of info messages from a json string.
Get connection config from environment or property.
perform the request for all apps and metrics
Create a genericode reader for the list data type.
Create a genericode reader
Create a new reader for a column set
The returned reader will read a genericode from the current position in the stream.
This method creates a genericode reader for the GDL GDL Code list set document type.
The column set of the GC10 dataset.
Gets the column element id.
Get the value from the row with the given id
Find the column with a given id
Get all key to a collection
Find the key with a given id
A column is a key if the column id equals the column id
Create a new column definition.
Create a new key from the supplied arguments.
Sets the number of lines to skip in the input file.
Add a new column
Create a genericode writer
Create a genericode writer
Create a new writer for the G column set
This method returns a new genericode writer for a new code list
This method returns a new genericode writer for a set document.
Gets a new writer for the GC10 file.
The list of documents to validate.
Create a genericode validator for a set.
The column set validator for this document.
The returned validator implements the genericode semantics of helger - genericode. v10
Method to construct a genericode validator for a set containing a single document.
The column set validator for this document.
logs to the server
; }
get the current log level from the thread pool
Capture a message from the thread pool.
{ }
Prepend the metadata in the message if not already set.
append metadata to json object
Creates a JSON object from the arguments.
user = user ;
Retrieves the bytes from a file.
LocationUpdate ( ) ; }
Measures the number of entries in a region.
Size the primary data in the given region.
Print the sizes of the given region and the given number of entries
Read a single snapshot record from the input stream
Dumps the timing data to the given print writer.
Returns the number of time stamps since the given index.
Converts the given file to a chart. If the file is a directory the chart will be converted
Get a pool for the given server name.
Gets a pool for a JMX locator.
Check if a region is existing on the server.
Get the mx member by the name.
Returns a collection of the host names defined in the JMX configuration.
This method is synchronized in order to avoid a JVM deadlock.
Determines if the data is an instance of throwable and if so sends an exception to the result sender
Invokes the provided function with the specified arguments and returns the results of the function.
Flatten the input collection
Do a query and return a collection of results.
creates a bridge for a consumer that will consume entry events and invoke the consumer with a null key
Creates a new bridge for after delete listener.
Handles the given exception.
Get on region filter key facts.
This function is executed by a task running in a separate thread
Returns a list of all hosts that are defined in the specified jmx configuration.
Execute the function as a statement
return the application name from the resource
str ; }
Returns region by given name.
Returns a region of the given name or creates one if it does not exist.
Constructs the comparison of two maps using the keys from the source map and the keys from the target
Determines whether the value at the given insert point must be present in the value time stamps.
Close the reader. This method does not close the underlying streams.
Converts the GFF files in the directory to CSV files.
The main entry point to the CSV reader tool.
Reconnect to the JMX agent.
stop the monitoring of a jmx instance on a particular host
Shut down a member by name.
Shuts down all servers in the JMX server
Shuts down the members of the specified redundancy zone.
used by pagination map
Get a page of results that match the given criteria from the given region.
Import the given region.
Compares two remote locators
This function is executed when a function is executed by a task.
build check sum map
Returns the value of the specified column.
Check if type mirror is type of type mirror
Serializes an object to a byte array.
Deserializes the given byte array into an object.
Creates a new instance of a class.
element ) {
Checks for fields.
Check whether the given element is a subtype of the given type.
Creates a new Java object and writes it to the writer.
Emits the get id statement.
Convert a query to an observable
Checks if the given column has a field with the given name.
Returns the given string if it is blank otherwise returns the default string.
Capitalize the first character of the string.
Is type of type mirror
Add a DESCENDING clause to the query
Read the current temperature from the sensor.
Get the cursor method name for the given type.
Log error message.
Get all the icon fonts.
Get all known icons.
; }
Raise a number by a given exponent.
Set this matrix from an array of values.
power of two to a given scale
Convert a big decimal to an int using a given scale.
private static final int EXP = 1 ;
{ return x
private static final int num = 1 ;
{ return x
private static final int num = 2 ;
{ return x
Prints the specified string to the underlying stream.
} }
Set the limits of the image to a given range.
} }
}
Adds another complex number to this complex number.
Subtract another complex number from this complex number.
Multiply another complex number.
Divide a complex number by this complex number.
Sets this matrix equal to the given matrix
Returns a row vector of this matrix.
Get a column of this matrix.
Set this matrix from an array of float values.
Returns the transpose of this matrix.
{ }
{ }
Multiply a matrix by a scalar.
{ }
Print the matrix to the specified print stream.
Sets the image resource to be displayed in this panel.
Validate the coefficients.
Compute the next position using the previous function.
Clears the sld.
Convert a raw sld to an xml.
Convert raw sld layer info to a styled layer descriptor.
Validate the styled layer descriptor.
Validate the raw XML data against the definition in this class.
Calculate the area of a square of the given distance from a point.
Sets this matrix equal to the smallest of the two provided.
Set this square matrix from a 2 - d array of values. If the values are not square
returns the inverse of this matrix.
return }
Calculate the Euclidean norm of this matrix.
{ return b
print the decomposed matrix to the given print stream
{ } }
Solve Ly = b for y by forward substitution.
performs a back substitution operation on the given column vector
{ } }
Converts a square matrix into a row - major matrix.
Calculate the next von neumann.
Override to ignore iteration if n == num.
Compute the next position using the previous state.
Throws an exception if the current position is different from the previous position.
Compute the next position using the a function.
Check interval.
; }
Multiply two numbers.
Raise a number by a given number.
Override to ignore iteration if n == num.
Get sld manager.
convert a long to a char array
Decompose the fixed - width fraction and set the m n bias
Print this string to the specified print stream.
Validates the biased exponent.
Verify that the given unbiased exponent is valid.
Check if the given double has a biased exponent.
Check if the given double has an unbiased exponent.
}
}
return x }
Generate a prime sieve of length n.
Return an array of the n primes of the specified number.
Override to ignore iteration if n == num.
Compute the next position using the previous function.
Throws an exception if the current position is different from the previous position.
set java fx application
Set the configuration file.
Sets the default configuration for this parser. The configuration will be obtained from the specified reader and used
Initialize fxml.
Set the geocoder s latitude and longitude.
get host port pair inet socket address
Returns the applicable attribute definition for the given uuid.
Evaluate condition.
{ }
Set the address.
Queries for the names of the user. The returned set is a view of the internal set
Query for service instances by the specified name.
Get all collaborations that the logged in user has access to
Build meta data string for decimal.
Change the password for a logged in user.
Get all users.
Get the gravatar for a given email.
Get a user s gravatar.
Populate from elastic search json
Gets type of the document field.
Create a new flow step
Update a flow step
Get flow step by id
Get flow step by step
Get all steps for a given flow.
Delete a flow step
Delete a flow step
Populate the given list of form fields from the given list of form fields.
close the connection to the server
{ } }
Set the connection closed flag.
Get echo messages from the return value
Get personal inventory items
Create new table record.
Delete a form container
Get flow historic data using the specified form param.
Get form and field historic data from history API.
get most recent form and field history
Lock the current form with the given form param.
un - lock this form from another form parameter container.
unLock user from a container
return a new form map to add new form
Convert a comma separated list of roles to a list of role objects
Create a form definition
Update a form definition
Get form definition by id
Get form definition by name
Get all forms for the logged in user optionally including table record types.
Delete a form definition.
returns the storage key from the parameters
Creates a new instance of x.
Shuts down the client without throwing any exceptions.
Parse a string into a long. If the string can t be parsed return - num.
convert a document to a pdf file
get field for form from cache.
Create a new flow step rule.
Create a new flow step rule.
Create a new flow step rule.
Update flow step rule
Update flow step rule
Update a flow step rule.
Move a flow step up.
Move a flow step down
Delete a flow step rule
Delete a flow step
Delete a flow step
{ return ; }
Get all user queries.
Get all roles
Get upper case service ticket as hex string.
Create a text field with mask
create a text field with barcode
creates a new decimal field using spinner
creates a new decimal slider field with the given parameters
create a new field with table type
update a field with masked values
update a text field with barcode
Updates a field via spinner
Updates a field with a numeric slider
Update a field for a table
Get a field by it s name
Get all the fields for a given form and logged in user
Get all the fields for a given form and logged in user
Delete a field.
Delete a field.
Returns the meta data for the given field.
Update a field value
get or create an index
Create a new flow
Update a flow
Get flow by id
Get a flow by name
Delete a flow
Delete a flow
Update a global field value
Returns a list of all the global field values.
{ return }
) { }
Close and clean the database
init new request.
Get exception message.
Create an admin user
get access token
GET user profile info
Execute a JSON request.
execute a form or post request.
throws IOException {
{
Get the http client.
get path to fluid specific trust store
close the connection to the database if open.
Get the list of items for a given job view
send a form to a flow
On close.
this method will be called when a new message is received
send a json message from a json object
send a message to the other end of the session
close the current user session
execute a SQL statement on the server
Issue a license request.
Apply a license to the current user
creates a plain text route field.
Create a paragraph text route field.
Create a new field.
create a multiple choice field with multiple choice values
Create a date time field.
Update a text route field.
Update a route field paragraph text html.
Update a route field.
Update a route field.
Update a route field value
Create a field value for a fluid item
Get configuration by key
Get all configurations.
Create a new attachment.
Get attachment by id
Delete an attachment.
Delete a specific attachment.
; }
Sets the class loader to the class loader of the current thread and gets the resource from the
rule 2.
Throw an exception if the parent is an xsd schema with no name.
Throw an exception if the ref tag is present but is not a simple type form or type.
Get the schema node for a given file.
rule 7 - we have to check that the parent is an xsd schema and that the attributes
Throw an exception if the parent is an xsd schema with an attribute that is a reference to
convert value to type if possible
Create cli interface instance.
Create new cli instance with given options
Parse the arguments for the given class and return an object that represents the result.
Parse arguments using specific options instance.
Build a url builder with the given path.
Removes a previously added footer view.
Returns the value at the given point p.
) { } }
Compute 3 - dimensional Perlin noise.
Interpolate a cubic spline
Using the quadratic Bezier curve.
Sets the bounds of the transformation.
Processes the given event.
Process event.
Get account id from event.
Apply rule entity and violation entity to single rule entity
Get event serializer.
Creates a new file.
Creates a directory with the given name.
restore the properties that have been saved before.
create new implementation for map
Add an object to the collection.
Sets a string property via the property manager.
Get the array of the given base property with the given default value.
Returns the next state given an action name.
Removes stale entries from the map
Returns the value associated with the given type.
return type ;
{ return type }
Print stack trace for this throwable and any nested throwables.
Print stack trace.
Replace a remote object with a stub.
}
Sets the task for this context.
This method is called when a new task is accepted.
Decide whether the task should be rejected.
Called when a new task is started.
Returns true if the task completed.
Stop the task
{ }
Add a job to the queue.
Convert a blocking mode name to a blocking mode.
;
} }
creates a new catalog instance
Load all the catalogs for the current machine.
Parse catalog file to a data input stream.
parsePendingCatalogs
Parse a catalog file into a tree of Nodes
Function to report an unknown entry in the catalog
Resolve doctype.
{ }
Resolve a local or remote system ID.
Resolves a given URI against the list of catalog entries.
make a URL absolute using the base url
Normalize a uri to its canonical form.
Encode a byte.
Add delegate to this catalog entry
Create a new soft reference if val is not null.
Fire the given throwable to all registered listeners.
{ }
If the delegate is an array list returns it. Otherwise returns the delegate.
Compares the next timer task to another timer task.
If the value starts with the given string return it. Otherwise return null.
Gets the object at the given index.
Return the object at the given index in the list.
maintain the heap by removing objects from the queue if necessary
Adds a new type to the constant pool of the class being build. Does not check if the
Get an entry type value
Returns the number of arguments of a specific type.
Returns the argument at the specified index.
Set context class loader for a thread
{ }
{ }
cleanup the timeout to avoid memory leaks.
{ } }
Preload all known URLs.
} }
Handler installed packages setting.
Returns the value as a java class.
If delegate set is not of type hash set return it. Otherwise return it as - is.
Make a synchronized counter.
Make a directional counter which can be incremented or decremented depending on the given flag.
Returns true if the current name has an extension.
} }
throws NamingException {
Replaces all occurrances of the given substring with the given replacement string.
{ return null
Join an array of bytes into a string.
The default conversion from an Object to a String
Convert the object to blocking mode.
Creates a new timer.
Get an object from the cache.
Returns the value to which the specified key is mapped or null if the map contains no mapping for
Removes the object from the cache.
Flushes the contents of this cache.
Returns a list of all valid keys that have not timed out.
Set the resolution of the image. The lower and upper bounds of the resolution are used.
Returns the entry for the given key without removing it from the cache. This method is not thread
Get children by tag name.
Return a unique child of the given element with the given tag name. If there are multiple children
Get the first optional child element with the given tag name. If there is no such child element
Returns the content of the given element. If the element has no content it returns the default string
Get the content of the first child of the given element that has the given tag name. If
Return the content of the first optional child element with the given tag name. If the element does
} }
Set blocking mode to specific name.
Sets the blocking mode to the specified name.
Execute a task using the executor service.
Resolve a local system.
Resolve external public key to local name.
Query a resolver with the given parameters.
Appends a vector to another vector
Returns a new vector that contains the same data as this resolver.
Resolve a local system name down to a remote system name.
Returns a vector of all local ids for the given system or null if none exist.
read a file from a url into a catalog
{ } }
Connects this socket to the remote host.
Use this method to get a reference to the output stream.
Help delete a node from a subtree.
Get the value of this node as a valid value.
Creates a new snapshot entry for the current key.
create a log instance for the current object type
Prints a collection of jbuffer objects as a list
Returns the class name without the package prefix.
Returns a string representation of this object.
Returns an iterator over the names of the properties.
Gets the property group.
{ } }
Makes a copy of an object using serialization.
Dereference an object that is of a given type. Returns null if the object is null or
Initializes this factory.
Update the JNDI cache.
Returns a set of the keys for this initializer.
Returns a set of entries of this map optionally including defaults.
Removes a property listener.
Notifies all the listeners that the property has been added.
Notifies all the listeners that the property has been removed.
Notifies all the listeners that the property list has changed.
{ }
Make a property name from the base name and the prefix.
Loads the properties from the given property reader.
Loads the property reader for the given name.
Get the property group for the given basename and index.
Is entity resolved boolean.
Return the input source for the given system id.
Return the input source for the url.
Return the source file to be used for a class path.
Sets value as text.
Normalize a string by removing all characters less than or equal to the specified string.
Modified version of encode urn function.
Decode a URN to its string representation.
Replaces all the old strings with new str.
Starts the clock. Does nothing if the clock is already running.
Stops the timer. System.currentTime is used.
Make synchronized stop watch.
Compares to another object.
Generates hashCode from a given byte array.
Generates a hash code for the given array.
Creates the internal data structure.
} }
Returns the next token from the underlying string.
Initializes the system default format and locale.
Add a vertex to the graph
Set the root vertex of the tree.
Removes a vertex from the graph.
Performs a depth first search of the graph for the given vertex using the provided visitor as the
Starting from the vertex v calling the depth first algorithm to find all spanning trees of the vertex v
Find the vertex of the given type that has the given data.
Find all cycles in the graph
Normalize a string.
Parse the given XML string and return the root Element This uses the document builder associated with the current
Parse the given XML stream and return the root Element
Parse the input source into a W3C DOM element.
Creates an element using the owner document.
Resolve q from qualified name.
Copy attributes from one element to another.
Checks if a given node has at least one child element node.
Returns an iterator for all the child elements of a given node.
Extracts the text content of the given node and optionally replaces the properties if the node contains
Returns an iterator of all the child elements with given name inside the given node.
Returns the parent element of the given node or null if node is not a parent element.
Add a resource to the waiting list.
Read a URL to a specified catalog.
Get the current host address
{ }
{ }
Generates a human readable description for the given class. The description consists of the name of the class
Strips the package name from the class name
Get package name string.
Forces a class to be loaded. If the class is null this method will throw a null argument
Returns the corresponding primitive wrapper for a primitive type.
Collect all interfaces of a class and all of its superclasses.
Returns all the unique interfaces of a class.
Check if the class is a primitive wrapper.
Instantiate a class based on the property value. If the property is not found or is not assign
Returns the attribute getter for the given attribute string.
Returns the appropriate setter method for the given attribute name.
This method is used to convert the name of a class to a java class
Get system property or fallback to default if not found
Returns the file names of the provided property name.
Maintain the set by removing stale objects.
Returns an iterator over the elements in this set in proper sequence.
Creates an instance of the given url type.
Returns a subset of the elements contained in this set.
{ }
{ }
) { return }
{ } }
Register property editor.
Convert value object.
Get the context class loader of a thread.
Return the application deadlock exception or null if the throwable has no cause.
Schedule a timeout for the future.
Main work loop. Repeatedly gets items from the queue and executes them.
Use an existing context and a new one with the given name.
Lookup a object in the static registry.
Checks an object to see if it is assignable from the given class and if it is throws
Appends the class information to the given buffer.
Get an allowed transition by name
Read the properties from the property file
Get the verbosity from the system properties or from the configured value
Queries the configured property file for the relative catalogs.
Queries the configured catalog files. If the system property is set that value will be used.
Get all the catalog files from the database
system property first look for system property then look for resource
Check if we should use the static catalog for this string.
Resolve an entity from a map
Resolve a relative URL to a full URL.
Make the given URI absolute.
Resolves a class.
} }
Get the local name of the given element.
Gets the attribute with the given prefix from the given node.
Get the URI of the given element.
Returns a list containing the elements returned by the specified enumeration in the order they are returned by the
Gets the input stream for the given file name.
Loads properties from the specified file into the specified properties object.
Read properties map.
Adds an edge to the graph. If the edge to be added is the corresponding from or to
Adds an outgoing edge to the graph from a given vertex.
Add an incoming edge from a given vertex with a given cost
Checks if the given edge is already present in the graph.
Removes the edge < t > e from this graph if it is present.
Finds an outgoing edge to the given vertex.
Finds the edge with given name if it is in this graph.
Returns the cost of this vertex to the given destination vertex. If the vertex is not connected to
PKCS9 9. 2
Checks whether there are any more elements available.
This method will throw an exception if the event cannot be serialized.
Install the jvm type provider.
Dispatch an action to the application thread.
Returns a stream of events of the given type.
Returns a stream consisting of the elements of this stream that are strict to one based on the
Returns a stream consisting of the elements of this stream that match the given rights stream.
Get the allow robots boolean.
Verifying that the instruction generated is the given string.
Computes the sum of degree of this phrase. If the phrase does not contain any degree then
map of arguments to a new map
Pass the reader as a parameter. The default charset is UTF - 8.
{ }
Create a list of all the elements of the given type.
Create a new JDBC connection with the given parameters.
Execute SQL in a database.
Run a SQL query against the specified database and return the first result.
An example query
On upgrade.
Attempt to backup the database to a CSV file.
Restore the database from a CSV file.
Sets the empty text to the given text.
Dump a database to a csv file.
Unescape csv.
Convert a csv row to a list of strings.
Get as map.
Convert a map to a CSV string.
} }
} }
Read a database model from a buffered reader.
Write information about the database to the specified print writer.
return ; } }
Get base dao model instance for current entity
Get the bind type.
Import CSV into the database.
Backup all tables to the given CSV file
Restore all tables from the given database using the given suffix
Uses the filer to create a resource to use the index.
Creates a query object from this template and the given entity manager.
Executes the query and returns the typed query reaction.
Render the query into a string.
Delete a record with given id from the database
Persist an object to the database.
Update an object in the database.
Add a constraint for finding objects that are not contained in the specified array.
Add a subquery.
Provide access to the next stack.
} }
Add the plan to the routing table.
Returns a plan that matches the given selection policy.
Randomly selects a plan from the bound variables.
Sets the variables using the result at the given choice index.
Get result at given index.
Get the parents of this node.
Returns a copy of the children of this node.
Grows a given byte array by the given amount.
Create a new logger
Go to the next step.
Set all goals from a byte array
Prints the user input and pauses for input.
Initializes the pool for intention selection
Initialize intention selection threads from the configuration.
Start all intention selection threads
Shutdown all intention selection threads
Register extension to handle some events.
Reset the state of the simulation so it can be reused.
{ }
return true ; }
Add agents to the catalog.
Attempts to load the class of the given name and type.
Loads a jill extension by class name.
; }
Returns a string containing the command line usage.
Parse the command line arguments.
Parse a single command line argument with the option.
Do the given query with the given agent id and query.
Returns the object at specified index.
Find object by name
Push a new object onto the stack
Gets the idx th entry in the array.
}
Removes the last object from the queue.
Get the type of the object
Return true if the belief set matches the query
Main method for testing and demonstrating a basic belief system.
Convert the string to a byte array using the default character set.
Post a goal to the pipeline and mark it as idle.
Send goal to agent
Queues a goal message for execution.
Returns a copy of the array with the goal data.
Create a new belief set.
Adds a new belief in the network.
Evalutes the given query with the given context.
Suspend or unsuspend this connection.
Returns the field by the field name.
registers some neighbours with the belief factory
builds a random name
WorkerThread execution begins.
Check if the stack is valid or not.
Remove finished agents from the active list.
) { } }
Shuts down the pool
{ }
{ }
; }
{ }
}
Check if all pools are idle
Calculates the poolid for a given agent id.
Picks and returns the currently used expression.
Sets the query expression.
Create a join expression
Recursively join properties starting from the given index and moving up any properties that are not in the
Find or create a join for the given property in the given FROM query.
return false ;
Get the upload stream for the request.
Respond to a REST request by invoking the corresponding REST method.
Test if request has the specified parameter with the given name and value.
Get a parameter by name
} }
config for the current thread
Gets target file.
Write the specified artifact to the specified target file.
Method that is called after an instance is created.
get the declared constructor from the implementation class.
Builds the string representation of the descriptor.
Gets the interface method corresponding to the given method.
return list ; }
Find a dependency of the given type for the host managed class.
} }
Adds a default link.
Sets the default link template for the specified rel and href.
Processes the response to extract links and their templates.
Handle links from response
link from a json node
Parse a link object
Get or add a new map with the given key.
Parse the capabilities from the HTTP response and set the allowed methods.
Determines if the given HTTP method is allowed.
Register instance processor.
Method to register a factory for a given type instance
method to register a new instance processor
register class processor
Adds an argument to the command.
Returns a list of the target files to be processed.
To xml string.
Initialize this class for a given context and vars.
Tells whether or not the given template file is reference to this template.
create a parameterized template model from a reader.
create a parameterized template model from a file
Sets the request path.
Returns an observable sequence of the results of a get operation for the given sequence number.
Returns a new instance scoped to the given string.
Set a field value from a context property.
add capture to logger
remove appender.
Clear capture state for the given appender.
Throws an exception if the model is incomplete.
Resolve proxies.
Returns the files in the given directory filtered by file extensions.
Recursively parse a directory.
Returns true if the model is fully resolved.
find all notifiers
Sets the model directories.
Set file extensions.
Sets the resources to be edited.
Read next record from the file.
Sets the designated parameter to the given values.
Convert a string to a Java object.
Merge the specified template with the given artifact name.
Returns the model directory.
Returns the configured template directory.
Serializes the object to a String.
Start the application and start the web view.
} } }
Print the given view to the console
Read the data from the input stream and write to the output stream.
This method gets an interface instance from the container and invokes the method on that instance
{ } }
Detach this handler from the current request. This method is called when the handler is no longer
Gets the cookies for the current request.
Dump the request.
Get a list of all the invocation meters.
Configure the remote service from a plugin configuration.
Sets the remote host to connect to.
Get parameter by name and convert to object
Removes a prefix from a path.
Returns the most common parent directory of the two directories.
Convert absolute path to relative.
Convert relative path to absolute.
Calculates the number of directories in the specified path.
Dumps the given exception and request context to the log.
Serializes and sends the given object to the client.
Add param template.
Add param templates.
Initialize the parameterized templates.
Find all parameterized templates that reference to the given file.
Enables or disables the save button
delete a series of items
Invoked when an atomic operation is to be deleted.
Method that can be invoked to create a new instance of the managed class.
Get the best fit files from the fitResults
Get the summary of the results of the benchmark
Build a row for the summary table.
Get a row from a parent directory for a file.
Creates a new instance of a service.
Gets the setup class.
Returns a list of all model directories.
This method returns the list of model resources.
Method to set the candidate collection. This will create a container for the candidate collection and add it
Parse the given XML stream and use the given loader to load the XML content.
Display error notification with exception message
Determine whether the given formal parameters are an object type.
The main method of this servlet. Reads JSON input from the request parses it and returns
Parse the contents of the string as JSON.
Extract cell parameter.
Gets all hints in the query.
Indicates if the request is an XHR request by checking the request header.
Checks if the request is made by a android user agent.
Handle an element event.
Get a list of property descriptors that have a specific annotation on the given bean type.
Returns an annotation of the given type for the given property or null if the property is not present
Log a message at severe level.
Lookup whois result.
Can be used to add a parser for a whois host.
Get spi managed class from spi container.
Gets the spi method for the given method name and request uri.
Process notification of a not contains exception.
Process not contains.
Serializes the servlet response to the output stream.
Get a cookie by name.
Add a cookie with given name and value.
Remove cookie by name
Returns an iterator over the cookies in the response.
Returns the target file list producer for this job.
Adds a field to the constant pool of the given type and name.
Compiles the class.
check if the response matches the stored value
get file name without extension
Ensure that the given URI ends with a trailing slash.
get http servlet request instance
Intercept the invoke call to a method that is not transactional.
{ } }
Wrap transactional resource with read - only transaction.
Returns an array of files in the directory.
Returns the last file in the directory.
Get concrete config type.
Checks if the request path starts with the given path component
Returns a list of artifact factories that are configured for a given model type.
get http session for current request
Serialize this object to the given http response.
GET the meta data of a file.
{ } }
Override to close the database statements.
For Spring 4 and newer IDEs this method is called when the Spring context is being
Handle allowed methods.
public for testing purpose
delete endpoint.
Extract the column parameters from the given row.
Return an array of the command line arguments. This is used by the parser.
Add a task to be executed every period seconds.
Add a new timeout to the timeout queue. If the timeout task already exists for the given timeout
// TODO } }
Returns the next file in the iteration.
{ }
Prints a welcome message.
print stopped banner
Create a new instance of the ria class using command line arguments.
Register shutdown hook.
Trigger this notification
Trigger the endpoint.
Insert and replace a fit row.
Get the counts for all of the results in this scan.
setter for score - sets
getter for variants - gets
setter for variants - sets
Get question type string.
setter for question type - sets
getter for token - gets
getter for dep label - gets
setter for dep label - sets
getter for semantic type - gets
setter for semantic type - sets
getter for sections - gets
setter for sections - sets
indexed getter for sections - gets an indexed value -
indexed setter for sections - sets an indexed value -
getter for uris - gets
setter for uris - sets
getter for types - gets
setter for types - sets
getter for target type - gets
setter for target type - sets
get the rank of the document
setter for rank - sets
getter for query string
setter for query string
getter for candidate answers - gets
setter for candidate answers - sets
indexed getter for candidate answers - gets an indexed value
indexed setter for candidate answers - sets an indexed value -
getter for query - gets Query
setter for query - sets
getter for hit list - gets
setter for hit list - sets
indexed getter for hit list - gets an indexed value -
indexed setter for hit list
getter for abstract query
setter for abstract query - sets
getter for id - gets
setter for id - sets
setter for doc id - sets the doc id of the document
getter for begin section - gets the offset of the first occurrence
setter for begin section - sets
getter for endSection - gets the offset of the end of the current section
setter for the offset in the end section of the CAS
getter for beginSection - gets
setter for beginSection - sets
getter for endSection - gets
setter for the end section of the passage
getter for aspects - gets
setter for aspects - sets
getter for triple - gets
setter for triple - sets
getter for source relation - gets
setter for source relation - sets
getter for subject - gets
setter for subject - sets
getter for predicate - gets
setter for predicate - sets
getter for is obj uri C
setter for is obj uri - sets
getter for operator - gets operator of the complex query concept
setter for operator - sets math operator of the query
getter for operator args of complex query
setter for operator args of complex query
getter for concept - gets
Get the score of this Concept.
getter for text - gets
setter for text - sets
getter for id - gets
setter for id - sets
getter for name - gets
Gets the abbreviation.
setter for abbreviation - sets
setter for concept - sets
getter for variants - gets
setter for variants - sets
getter for named entity types
setter for named entity types
getter for concept type - gets
setter for concept type - sets
getter for occurrences - gets
setter for occurrences - sets
getter for concepts - gets
setter for concepts - sets
getter for original text
setter for original text - sets
The list of arguments for the named operator
setter for args - sets
getter for label - gets
setter for label - sets
Returns the index of the first clear bit less than or equal to the index specified. - num
Sets the bit at specified index.
Tries to free the buffer. If the buffer is marked for unmap use it. Otherwise
Creates a new cache value instance.
Rehash the array
Method to convert the MonomerNotation to Hel string
Checks the brackets
add details from a string in the current unit
Returns a string representation of the link.
Adds an Element to the group.
check if the given polymer id is valid
check if the polymer id matches the connection
Check details connections
Check group id.
Test whether the given string is repeating a pattern.
Returns true if the last num elements of this polymer matches the given string.
convert the notation to json
get polymer notation by simple polymer id
Get the current grouping notation.
Get the hel string representation.
method to generate the HELM notation for the given polymer
Recursively builds the HELM notation for the connection.
Converts the given grouping to hel
Returns the annotation in hel format.
get polymer and grouping i
Gets the polymer notation with the given id.
Set the polymer elements.
return str
Set the annotation.
Set the number of times the rule will be repeated. If the given value is the same as
method to decide the MonomerNotation of a given string
Uses the method decide which monomer notation to use.
method to decide which Entity the given string belongs to.
Returns the current value of the interval.
Parse a string. The string must be a complete HEL string.
set the value rna to the corresponding input value
Defines the ambiguity of a string when only one character is allowed in the string
Get the statistics of this executor
Creates a new graph from the given edges.
Creates a new graph from the given nodes and edges.
Initializes internal data structure if not already initialized.
Returns a list of nodes in ascending order by reachability.
Subscribe to a particular event.
Get the number of subscriptions that match the given pattern.
Unsubscribes a pattern.
Return the call back to the client.
Send a synchronous response to the server.
Try to read and process the next request.
Send an Erlang shutdown request with the specified reason.
Throws the given throwable unless it requires non - local handling or throws the given exception.
Releases a run state if it is in another run.
Create a new worker and register it.
Try to add a worker if it matches the given ctl.
Forks the worker thread as a daemon and registers its handler.
Remove a worker from the internal work queue.
wake up and do the work.
) ; }
) return false ;
Get a work queue from the common pool. If there are too many, return null.
Returns how many tasks would be attempted while waiting for external help.
Submits a new task for execution and returns it.
Create a common pool with a shared pool of threads.
Get the value if the current status is greater than the timeout.
Build a string from the given code.
Get the current statistics on the worker threads.
Creates a a collection with the given elements.
Reverse order of the elements in the list.
Returns true iff all of the elements of the collection satisfy the predicate.
Perform a left fold of the iterable using the supplied starting value and function.
Perform a left fold of the specified collection using the specified starting value and function. The list iterator
Causes the given task to be added to the execution queue.
Either some or none depending on the given value.
Creates a new associative map from the given iterables. The keys and values must be
Returns an empty instance for the given equality. The returned instance is serializable.
Create a set from a collection of elements using the provided equality function.
Create a map from iterables of keys and values.
Returns an unmodifiable set view of the inner set.
Normalize the resource name to the expected format.
Converts the object v to a string.
Returns a substring of this sequence.
Returns a binary search function for a given list.
Returns a search algorithm that searches a list for its elements using the given comparator.
Create a future that will send the specified message.
Bind a route binding.
Bind a filter binding handler.
Check if the HTML body should be displayed with a role.
get int value of a long
Remove duplicate strings in array.
Create a string that is a like the given string.
This method overrides the same method in the superclass to allow a subclass to override the implementation of
Login a user with password remember.
Get the login user from the request session.
Checks the given password with the given salt and password.
Save user in cookie
Generates a key to be used for a login.
Find the cookie user for the given uuid.
Binds the request to the configured web context
Returns the long value of a request parameter or the default value if the parameter is not present.
Log a debug message.
get caller informations
Converts char array to byte array by stripping the high byte of each character.
Converts char sequence to byte array.
Converts a byte array to a simple char array.
Convert a char sequence to a byte array.
Convert locale code to locale data.
execute a callable for the specified number of seconds
Crops the original image to the given destination file.
Schedule invocation to run in a given number of milliseconds.
Invoke an invocation in a thread
Gets the rest operations that can be performed on the server.
render ajax error message
render forbidden message for ajax
Processes the given HTML template.
Parse the path out of the URL and return the resulting path.
Render data tables.
Render empty data tables.
Sets the list of items in the combo box box.
Redirects to the given URL.
Returns a list of all instances of the type binding in the injector
Returns the name of the method that was called.
Compact memory.
Propagate the given metrics to the local metrics collection.
Encode string.
Copies all bytes from the input stream to the output stream. Does not close or flush either
Copies the given number of bytes from the input stream to the output stream.
Copies all data from the input stream to the output writer using the default encoding.
Copies the reader to the writer.
Copies the specified number of characters from the reader to the specified writer.
Copy reader to output stream using the default encoding.
Copies the reader to the output stream using the specified encoding.
Compare two input streams for equality.
Compare the contents of two Readers to determine if they are equal or not. < p >
Apply this function to the given object and return the corresponding value
Get sql string for given sql group name and sql id.
Unmarshaller - &gt ; T
Unzip a file to the specified destination directory.
Get a new instance of a permission dialog fragment.
When the dialog is resumed the key listener is added to the dialog interface and removed from the dialog
Register converter for core value type.
Returns true if the given value matches the regular expression.
is mobile boolean.
Check if the value is a phone number
Check if the value is a birth day.
Checks if value is a URL.
The main method called when a filter is invoked. This method creates a web context based on the
Encode the given string as a base64 string.
Decode the string as a base64 encoded byte array.
Converts a hex string to a byte array.
Read properties from a stream. The stream is closed in the process.
Read the content of an InputStream and close it.
Read the content of the given file with the given encoding and return it as a string.
Writes a byte array to a file.
Copies the given source file to the given target file.
Serialize a DOM document to a string.
Get document from file
Get document from xml string
Get document from input stream.
Validate the signature of the XML document against the given public key.
Sign the specified xml using the specified rsa public key and private key
Checks whether the given class is cache - safe.
Checks if a class is an array of primitives.
Checks if the given class is an array of primitive wrappers.
Returns the wrapper type for the primitive type or the class itself if it is not a primitive type
Check whether a type is assignable from another type.
Checks if a value of the given type can be assigned to the given object.
Gets all interfaces that a given object implements.
Gets all interfaces implemented by the given object.
return url that can be used to download
Extracts the template variables from the given URI.
Adds a permission and a message.
bind a implementation to an extension point
Get the builtin object for a given builtin type
Converts a primitive type to an object.
Attempts to convert the given object to the given type. Returns null if unable to convert or
Convert user defined value type.
Parse query parameters.
A helper function to generate anonymous cookies of the given type.
Add a session parameter to the function.
Initialize data source.
Adds a query param to the collection of parameters.
Update a parameter if it is equal to the given value.
Show dialog.
returns true if all values of the array are granted
returns true if any value is denied
Finds all records matching the given sql select.
Finds the first record from the database.
Check if a model is new.
Checks whether a method declares an exception of a specific type.
Traverse the queue of soft values.
Returns the value associated with the key or null.
Determines if the given string matches the given pattern.
Parse the arguments for the class.
Gets the protobuf entity from a class.
Checks whether the given class is a protobuf entity.
Returns a map of all fields and their corresponding protobuf attributes for a given class.
Returns the getter for a field of a protobuf object.
Returns the setter name for proto field.
Returns the current thread - local object mapper.
get json factory
Convert an object to json
Sets the borders of this rectangle to the specified values
Get user record from database.
Copies all attributes from the current JMX attribute list into the target object.
Copies all attributes of the given JMX attribute values to the given target object.
Add this app to the frame.
Saves the token to the data store
Returns the stored access token or null if there is none.
Returns the default class loader.
Gets a URL for a resource of a given name.
Get the resource as a stream.
Returns the stream for the given class.
Initialize this URI from another URI.
Initialize the scheme for this uri.
Initialize a new path from the given uri specification.
Sets the scheme.
Sets the userinfo.
Sets the host.
Set the port.
This method is called when a path item is encountered.
Sets the query string.
Sets the fragment part of the URI.
Returns the URI of the scheme.
Create a prepared statement with the given SQL and parameters.
Initializes the interface.
Get the muffin file for a given string.
Sets the muffin.
get the current contents of the clipboard
Set the contents of the clipboard. This method can only be called when the contents of the clipboard
Loads all services of a given type
Sets the service params to the operation
Get the service params of an operation
Finds a parametrized operation for the given id.
Finds a service from a collection by its class.
Attempts to parse the query response.
Returns an iterator over the elements in this queue. The elements are returned in no particular order.
get encoding of the given xml input
Get a new connection instance using the connection passed in.
get authorization from cube
Visit a package declaration.
Visit a class declaration. This is the primary focus of the visitation. From here interesting information
Visit an executable declaration.
{ return null ;
Create a filter of the given modifiers.
Create a new filter for matching declarations of a given type.
shorthand for composing filters
shorthand for composing filters
Returns the contents of the cache as a map. The map is initialized if it has not been
Make the given constructor accessible.
Prepares a query for the given object.
Returns a new string that has the same characters as origin but with hyphen replaced by hyphen.
Convert a byte array to a hexadecimal string representation
Returns a list of indexes for the given name or throws an exception if not found.
) { }
Convert a collection of non protobufs to a collection of protos.
Set a field value for a protobuf object.
Sets a value for a field in a POJO.
Checks whether the file pathname is accepted by this filter.
Create a new proxy instance for the given result set
Convert a list of labels to a map.
Gets the component type of the generic supertype at the given index.
} } }
use linked list to avoid parallel build up.
Get declared field.
Get the declared methods of a class and all of its super classes.
Get declared method.
Gets all annotated methods of a class including those that have the given annotation.
Get constructors that are annotated with the given annotation.
Dumps a byte to stdout.
Returns the index within the string of the first occurrence of the specified substring.
Returns a new string containing the characters in the specified string that are not contained in the specified string
{ }
Initialize audit.
Initializes the message queue.
Initialize password validator.
Initialize pw authenticator.
Resolve locale code string from locale.
Returns a cached locale info object or creates a new one if necessary.
Create a statement proxy that wraps the given statement.
Removes all of the elements from this deque. The deque will be empty after this call returns.
Removes the top element from the stack and returns it.
Make a stream for the input file.
Parse command line parameters into properties.
Match the given tokens against the given patterns.
Move the line
Returns true if this rectangle encloses the specified rectangle.
Check if a point is contained in the polygon.
Return the intersection of this rectangular and the given other. If the two rectangles do not intersect
Computes the union of this rectangular with the specified other rectangular.
Returns a new rectangular that is the same as this one replacing the x values of the given other
Returns a new rectangular that contains the y - coordinate of the two specified rectangulars.
Returns the column of the specified column of this record.
Returns the index of the row of the given row.
Get the bounds of a relative cell.
}
}
Unwrap a throwable.
Entry point for the example application.
Method onCodeUpdate.
Copies and resizes a portion of a byte buffer.
; } }
Copies this instance to a new one with the specified excluded elements
= child ;
}
}
Adds instructions to the functor.
Recursively adds instructions to the parent.
{ }
{ }
Update the present component flags.
return null ; }
Returns true if the given term is a variable that can be bound and not anonymous.
Optimize a list of instructions.
) { }
. } } }
Method called when the start of a tag is encountered.
Render the button.
Reset the state machine so it can be used again.
{ }
; }
}
{ } }
}
{ }
}
{ }
return null ;
Check whether the primitive type is assignable from the wrapper type
{
{ }
{ }
) { }
Returns true if the left and right represent the same assignment.
Compiles a query.
Find the maximum number of arguments in a functor clause.
{ // TODO }
Gathers the position and occurrence information from the given clause.
; }
} }
Create a string from a byte buffer.
}
Sets the string value of this attribute.
Read a single term.
Returns true if the class exists and is loadable.
Check whether the type is a sub type of the parent type.
Determines if a type is a subtype of another type.
return true ; }
returns the class for the given name
Method that can be used to dynamically create a new instance of a class. Instantiation is done using
Create a new instance of the given constructor with the given arguments.
) { return o
return null ;
Call static method.
Gets the constructor for the given class and arguments
Find all setters matching the given property name in the given class
Create a new transactional queue.
create a transactional queue
{ }
}
{ } }
Adds a supported timezone name.
Add a time zone to the list of supported time zones
Adds a dimension table to the database.
Find all free variables matching the given query.
Find all free non anonymous variables matching the given query.
Compares two search nodes based on their h ( s ).
public for testing
Reads the stream as a string.
creates a new search node
Generate the given number of indents before the current level
Checks if is last body term in arg position only.
{ // TODO }
Returns a functor object with the given name and arguments.
Returns a new variable instance with the given name.
forward execute with error handling
; }
Sets the texture for the paint that is being used.
Invokes the < code > paint < /code > method immediately.
Returns a buffered image of the specified type for the specified width and height.
Creates a binary image using a QR algorithm.
Creates a sgi image with the specified number of bit depths.
Sets the algorithm used to locate elements in the queue.
main entry point to the prolog parser
Simplified method for defining a clause for this query
Parse a list of terms.
Parse a functor.
Consumes a variable name and returns it.
Parse an integer literal
Parses a floating point literal.
Parses a string literal.
Consumes and returns the next directive.
Interns an operator given its name and priority and associativity.
{ }
Consumes a token from the source and returns it if it is of the given kind.
Consumes the given token if it is of the given kind.
{
}
Collect all elements from an iterator into a collection
Convert time to tick in milliseconds.
years ;
Convert ticks to the number of hours specified.
Returns the number of ticks after the given number of minutes.
Set the tick to the given number of seconds.
Convert ticks to the given year.
Returns the number of ticks with the given month set to the given month.
Returns the number of ticks with the given date set to the given date.
year.
Reads a block of data from the source input stream.
Returns the entry for the given key. Returns null if there is no such entry.
{ return entry
{
) { }
{ }
) { }
; }
Returns the wam instance for the given symbol table.
Returns an iterator over the solutions in this graph
Returns the expected number from the given probabilities.
Generate the p for the given counts. The number of samples should be equal to the number of
Set the tick values based on a number of ticks.
public void forward (
Returns a new url with the given url specification.
Returns a string with the current request information.
Get all the headers.
get all the cookies for the current request.
Gets all the parameter values for the current request.
Gets the current request scope.
Get the current page scope.
Gets the current session scope.
Gets the application scope.
{
implements the standard start method for the tag handler
Returns the HTML representation of the given property and values.
Set the current screen state for this task.
}
Compares the given search nodes based on their f value.
Updates this wam to match the given registers. Any property changes that were made to the
Notifies all registered listeners of the given property changes
} }
Returns true if the given context is a top level functor.
}
Returns the associated fixity of the transformation.
Returns true if the pattern is infix.
Compare this op symbol to another object
This method gets called when a bound property is changed.
{ }
{ }
Create a component factory for a class
Returns the storage cell for this variable or null if no storage cell has been assigned to this variable
Returns true if the variable is bound to the current scope.
Sets a column attribute. If the attribute already exists it will be added to the end of the
Sets a row attribute. If the row does not exist yet it is created.
Get a column attribute or null
Get a row from the table or null if out of bounds
Internal method for inserting a cell.
{ } }
Creates a new type with the given name and length and pattern.
; }
Creates the initial context if it has not been created yet.
Updates all the registers in the current object using the values from the given layout.
Get the variable value.
{ return null }
) ; }
{ }
) { }
Reads the next number of bytes from the source.
Skip characters. This method will block until some characters are skipped.
= null ; }
Reads an int from a byte array at a specific offset in big - endian order
Writes the given 32 - bit Integer to the given byte array at the given offset.
Write the 24 bit int to the byte array at the given offset
Returns the 24 bit int read from the specified byte array at the given offset.
Reads a short from a byte array at an offset in the given buffer
Writes a short to the byte array at the given offset.
{ return null }
{ return }
return
}
Sets the value of the attribute.
Convert a list to a string array using the specified delimiter
Concatenates the given string array using the given delimiter.
Split a name to a camel case string. The first part is split on str and the rest
Build a string buffer listing the handlers and their associated formatters
Find the call point that corresponds to a given function.
Adds a code address to the symbol table.
{ }
return
Returns the value at the specified level.
Get last value.
{ }
{ } }
) { }
Calculates modulo with respect to the bucket size.
Add a message with the given key and message to the list of errors.
{ } }
exception ; }
Compares two elements. Returns a negative integer zero or a positive integer as the first element is
Returns an iterator over the elements in this set. The elements are returned in no particular order.
Compute the log base 2 of an integer
Compute the log base 2 of a number.
Calculates the log base 10 v2 integer.
Calculates the log base 10 v3 integer.
Returns the integer log base 10 of the specified value.
Returns the integer log base 10 v2 of a value.
Get character count for a 32 bit integer.
Returns a character count for a given 64 bit unsigned value.
Calculate the number of characters required to represent the given number of decimals with the given scale.
Sets the head function.
EMmit a code.
{ }
}
@ Override ; }
}
) { }
} }
}
; }
;
;
Replace the functor in the parent functor with the functor in the parent.
Gets the value of this term.
Set a substitution.
Creates a new priority queue for the elements in the tree.
clean up by closing the OOS socket
This method is called to append a new event to the log.
Method to fire connectors.
Initialize the printers for this query
commit the transaction
Rollback transaction.
{ } }
Adds a cached operation to the cache if it is not already present. If the cache does not
= null ;
; }
get the current session associated with the current thread
This method is called when the rule set node is entered.
Insert the specified element into the queue waiting up to the specified wait time for space to become available
Retrieves and removes the head of this queue waiting if necessary until an element with the specified timeout is
{ } }
Returns the next object from the source iterator.
Get the value of a boolean property.
Get the value of a property as a integer. If the property is not defined null is returned
Get the value of a property as a long. The method returns null if the property does not
Create a new call to a mixin
Add all the variables defined in the node to the list of parameter definitions
performs a backtrack in search of the unexamined successor of the given node
Retrieve a byte array containing the code for a call point.
) {
) { }
} }
{ }
Get attribute value.
Put the attribute value into the hash map.
{ }
{ }
}
creates a new search node
Creates a new priority queue with the initial capacity of the index and the elements with the lowest cost
A simple walker that runs visitor over each term in the sentence.
Creates a goal walker for the given unary predicate and the given visitor.
Create a positional term walker for the given term visitor.
Create a new positional walker for the given unary predicate and the given visitor.
Create a new post - fix tree walker for a given query tree node.
{ }
{ }
{ }
{ }
Compute grid size.
Initialize the font metrics with the current font metrics.
) { }
{ } }
Remove a property change listener.
{ }
{ } }
Do a fade operation.
{ }
; }
{ }
Sanitizes radio controls from form
Evaluates the wait time for the target condition and then awaits the result.
return true ; }
{ }
Append the classpath to the command line.
{ } }
Prints the introduction of the class.
Initialize the console reader.
Evaluate a single sentence.
}
{ }
{ }
get multi type data for a character
{ }
{ }
{ }
{ }
{ }
Get multi type data.
{ }
put a new value to the attribute
Clear the buffer up to the given key.
}
Internal method to insert a character in the matrix.
Compares the cost of two search nodes.
Parses an array of terms and returns a single term.
Get a list of operators matching the given name.
Resolve an op symbol to the correct fixity.
{ } } }
}
;
Get the usage for the command.
Add trailing properties to a properties object.
Parse the options and add them to the properties.
Adds an option to the command line.
Check argument format.
Compares two iterators.
Returns an enumeration describing the available options.
Returns the options.
Sets the current stemmer to the given tag.
return null ; }
Get the stem of a word.
Main method for running the stemmer.
{ } }
}
Returns a string containing the current environment and its environment variables.
Get a string trace of the current frame
execute the given function with the given number of permissions.
; }
}
; }
) { }
; }
{ }
Unbox the value of a constant
Helper to produce a human readable string for a given slot.
( ) ;
{ }
{ }
{ }
Returns a string representation of the chessboard
{ return false }
ArrayList < Character >. <init> String. toCharArray
{ return }
Convert a LogRecord to a log4j message.
Converts logging level to log4j level.
Add an element to the requeue queue.
Requeue an element to the requeue table and record its new state.
{ }
{ }
signal if the new size is above the old size threshold
return this ; }
returns a list of all bindings matching a name.
Adds an object to the environment
Removes the specified name from the environment.
{ }
terminal color multi dimension dimension string
Add a placeholder node for the given name and arguments.
Adds a variable reference to the current scope.
Set the max row height.
Update the max column width.
make a new node in the tree
public void forward (
substitute built - ins
} }
Check the given clause according to the top - level semantics of the clause.
Converts a list of arguments to a string.
{ }
Indicate that the server is running.
Indicate that this server is stopping.
Indicate that the executor has terminated.
}
; }
; }
{
Returns a new set containing the results of invoking the given search method on all elements.
Returns a collection of all instances that match the given criteria defined using the given search method.
Find all solutions using the given search method and store the results in the given collection
Advance to the next element in the underlying sequence and return that.
{ // } }
{ return null
put a new property
{ }
{ }
Removes the object at the specified position in this list and returns it. If the list is empty
Convert modifiers to string.
Convert a string to an integer.
Convert a string to a date
; }
; }
Check if a string is a datetime format.
Create a new token source for the given string.
file not found
Returns a new token source for the given input stream.
Is the given instruction a constant.
Is the given instruction a variable of which the current method was called?
Is the given instruction a non arg instruction?
Returns an iterator over the clause children of this clause.
Get the argument at the given index.
Returns an iterator over the children of this node.
Returns the string representation of the arguments.
novie runtime exception is thrown if query parameter is invalid
retrieve a list of measure appenders from the database
execute measure query.
Emmit a code.
Set the basic type for a primitive
Override this method to consult the input stream with the given input stream.
Print a variable binding.
Returns a iterable of maps where the keys are the variables names and the values are the variables associated
{ } }
Read the input stream.
Returns the current time.
Returns the next unique id.
Used to notify the player about a track update.
Updates the play info for a playlist.
Render the output.
Responds to a request for a permanent resource.
} ) ; }
Fires a request to start the music from the server.
Initialize the reader thread.
Starts the XMPP reader.
{
Reset parser to initial state
Parse packets from the inner reader.
Processes a packet to see if it matches the filter criteria.
Set the command line option.
Create a new chat and return it.
Internalize the body of this object.
Reset this configuration with an updated map.
Updates a property if it is not already set.
Adds a filter to the filter list for the packet. If the filter list is null then the
Process the http servlet request.
Reset properties to their default values.
Initialize the writer thread and set its name and daemon flag.
} } }
Returns the next packet in the stream.
Write the stream header.
Returns a list of information about the type of the parameter.
Returns true if this type contains the specified descriptor.
Adds a listener for the given event life cycle.
Shuts down the task engine service.
Returns true if the entry should be committed.
Returns the given key if it is non - null or masks the result otherwise.
Check for equality of non-null reference x and possibly-null y.
Returns the entry associated with the specified key in the HashMap. Returns null if the HashMap contains no
Rehashes the contents of this map into a new array with a larger capacity. This method
Copies all of the mappings from the specified map to this map. These mappings replace any mappings
Removes the mapping for this key from this map if present.
Removes and returns the entry associated with the specified key in the HashMap. Returns null if the HashMap
Special version of remove needed by Entry set
Adds an entry to the hash table.
Create delegate map.
Creates an XML attribute value from a binary value.
Encodes a byte array as a hexadecimal string representation
Converts the input string to a base 64 encoded string.
Encodes a byte array into a base 64 string.
Override if you want to modify the iteration of a collection
Sets the track selector controller.
Set the controller that will handle the jump progress events.
Set a controller as changeable
Set the controller that will handle the volume change event.
Sets a supplier of playlists to be broadcasted to all listeners.
command resources
handles volume changes
handles a jump event
select a track
get a thread cache by name
Get request cache by name.
Gets alt field.
Returns the shard path for a given ID.
Adapt the given source object to a session object.
Safe method invocation.
Recursively deletes a path and all its sub - paths.
Update a single object with the given properties
Sets the ping interval.
Schedule ping task to periodically send pings to keep the connection alive
Add all options in the given array to the options set.
Check if the given option is part of this argument.
Parse the arguments using the default parser.
Prints the usage information for the given application.
Parse the given arguments using the given cli. Return the number of arguments or - 1 if an
Initializes the connection to the server.
Start TLS if required.
Returns the compression handler that can be used for one compression methods offered by the server.
Send stream compression request.
Start stream compression.
} }
{ }
Register a new SASL mechanism with the registry.
Method to get the registered SASL mechanisms
output plugin behaviour with list of identifications
Log a message and throwable at the INFO level.
Log a message and throwable at the error level.
Log a message with a prefix and a stack trace.
Create a start event instance.
Create a start event.
Notify that a new string has been written.
Overrides the parent implementation to check whether a resource is provided by this service.
Indicate whether the list contains resources from a specific source.
Overrides super class to return true if any resource in the list is found in the resource model
Provide the list of resources that match an array of resource ids
get a value from cache or from server if not available
Returns the cache key for the given parameters.
Remove cached value from storage
Attempts to put the properties into the cache. This may fail if the properties are already present
Clears the current classpath and loads all classes from the classpath.
Recursively include a file or directory.
include a jar file
Add a SASL mechanism to the list to be used.
Add a collection of sasl mechanisms to the registry.
}
Activate the PostProcessors.
Registers all standard events.
Register a new event listener.
Register an event id.
Lock the file and call the consumer with the lock.
{ }
Create a new dse session bound to the specified cluster and keyspace.
Create a new music player error
Send a start music request to a player.
Stop playing.
Send a command to the player.
Create a new playlist request.
Create a new broadcaster playlist from an existing playlist
Append one or more strings to the end of the url
Adds a query parameter to the url.
Adds a query parameter to the url.
Adds a query parameter to the url.
Adds a query parameter to the url.
If this event has a playlist associated with it return an optional of that playlist. Otherwise return an
) { }
Checks if the startup has finished.
Checks if a file exists at the given url.
Browser button action performed.
Returns an image icon with the given path and description.
Launch the nakamura application with the given arguments.
Assigns the specified int values to this int array.
Export the rule as a hash map.
json array get method
json get method
Returns the integer value of the value. The default value is returned if the value is null.
Returns the double value of the value argument. The default value is returned if the value argument is
Returns the value as a string or the default value if the value is null.
Creates a new command resource.
Checks if a command is valid for this class.
Verify the capabilities of a single command.
Verify if the given command and capabilities match.
Executes a batch of CQL statements asynchronously on the calling thread.
Populate the cache of known subclasses for the given class.
Returns all the subclasses of the given FQCN.
Returns the set of classes that were found at the given location for the given package.
Search the given directory for classes and locations that match the given class.
Returns a list of all the resources in the collection.
Returns the number of elements in this queue.
Processes a packet to see if it meets the criteria for this packet collector. If so it
Return the volume of the event model with the given id.
Sends a RSS message and log the error.
Create error response.
Is the identifiable a target for the event model?
Sets the login enabled property to the given value.
Returns a wrapper on the specified set which synchronizes all access to the set.
}
Update the state of the question.
Retrieve all groups from the server.
append a Rsm to a query element.
Parse rsm from query element.
Create a leaving event.
Reload roster from the server
Creates an entry in the user's account.
Returns all entries in the hash set.
Get presence for the given user and resource
Set all users to offline presences.
Fire roster changed event to roster listeners.
Sets the digest value for the given connection id and password.
If the resource id of the resource model is the same as the resource id of the current resource
Creates a new player request.
Convenience method to determine the time passed for an event.
Register an update listener with the dispatcher.
Init Properties of a new instance.
Reloads the properties file.
Parse a stream error.
Parse the mechanisms tag.
Parse the compression methods from the given element.
Parses a packet extension using the given parser.
Attempts to decode the given string value as an object of the given type.
verify whether the event model is suitable for playback by the player
Convert a resource to a playback state.
{ return
Check if subdomain is allowed to connect to multiple subdomains.
Maps the specified key to the specified value in this map.
Returns the key set of the multimap.
Returns a collection view of the values contained in this map. The collection is backed by the map
}
This method is overridden to protect the backing table from external changes.
Gets the hash code for a MapEntry. Subclasses can override this, for example to use
Creates a new entry for the map.
Override control events to decide whether the presence indicator should be present or not
Sets whether the user is present or not.
Update most vague.
}
Protected helper to generate a standalone script. The script is placed in the hash map passed to
Creates the output directory.
Load properties from the given file.
Write the template into a file.
Return the progress for the event model
Decorate a collection.
Discover services on the network.
} return config ;
Gets the thread pool value for this PendingRequest.
Create a stop music service.
checks whether the event model contains the descriptor for the given player
Get the dse cluster instance.
Add a connection listener.
Add a packet listener
Add a packet sending listener
{ } }
Add a packet interceptor
Fire packet interceptors.
Convert a request parameter to a value.
}
Returns the current thread id.
Returns true if the node is valid and can be committed.
get a key for a given value
Return the value at specified index in the map.
Returns the node at which the key is found at the given index.
Returns the node at the specified position in the tree.
Returns the comparison result of two objects with the given index.
Finds the node with the least left child.
Find the rightmost node in the subtree rooted at the given node.
Returns the node that is greater than the given key or null if there is no such key.
Finds the node with the largest key less than or equal to the given key.
Returns the least valid node at the given index.
return ; } }
Return true if the node at the given index is red.
Returns true if the node at the given index is black.
Gets the grand parent of the given node at the given index.
Returns the parent node of the given node at the given index.
Returns the right child of the given node at the given index.
Retrieves the left child of the given node at the given index.
Rotate node and child of node to index left.
Rotate node right.
Recursive algorithm to insert the given node in the tree.
Performs a deletion operation on the given node.
Check that the given object is not null and is of a comparable type.
Insert a new value into the tree.
Returns true if the cache contains the given key.
Returns true if the cache contains the given value.
Gets the value associated with the given key.
Removes the key from the map.
Removes all of the elements from this map. The map will be empty after this call returns.
Copies all the values from the current map to the new map.
{ }
{ }
} }
Gets a player request for the given playlist name.
creates a new roster store instance and sets the version to the provided version.
Open a roster store.
Returns a collection of addresses that have been contacted up to the given number of times.
Return a single IP address with a given subnet bits.
Export the track as a hash map.
Create an optional instance from a map.
Add the given set of classes to the list of applications to be parsed.
return 0 ; }
Prints the list.
Prints usage for the command line tool.
The entry point of the program.
Create a mute event.
Create a mute event.
Get schema from cache
Write a list of lines to a file.
check if the file is in exec jar
Add an option for this application.
Gets the schema of this instance.
Get goodwill schema field by name.
Returns the package name from the specified jar entry.
Convert an immutable map to an immutable map containing the values.
Create a new event listener instance.
Set the new state and return the old state.
= false ; }
; }
Extract track info from event model if present.
Exports this descriptor to a hash map.
return resource ; }
Create a buffered image that displays the given strings as error messages.
Get image from url.
connect a url and get the json from that url
Reverse the items in a map.
Multiply two sets and return the result as a new set.
Start the daemon.
Return this object to the pool if possible
Create a ended event.
Returns the current item in the queue.
Update a track in the current playlist.
Shuffle the elements in the playlist
Verifies that the capabilities can be played.
Export the SoundData to a hash map.
Escapes for xml.
The server is challenging the SASL mechanism by sending a challenge packet to the server. The server
Serialize the TSDB to a byte array
Process events in a separate thread.
Handle an event.
Joins all the queues.
Set the property to the given value.
Remove a property from the configuration.
Add a principal to the list of principals
Remove a principal from the list.
Invoked when a window is closed.
This method is called when a presence event is encountered.
A presence event was fired.
Use this method to determine if a resource should be considered permanent i. e. whether it is
Sets the name of the roster entry. If the entry already exists it will be changed to the
Returns whether the map contains the specified key.
Checks whether the map contains the specified value.
Removes the key and its associated value from the map if present.
Clears the map.
; }
Determines if the two keys are equal in the given order. The default implementation is null.
Returns a boolean indicating whether the given values are equal.
Increases the capacity if necessary.
Calculates a new capacity from the current capacity and the proposed capacity and returns it.
Creates an entry set iterator. Subclasses can override this to use a different iterator implementation.
Load data from a stream.
Initializer for the context
Notifies all connection listeners that a reconnection attempt has failed.
Notify all connection listeners that an attempt has failed.