Perform a fastpathorderedemit.
Wrap an observable source.
Returns an observable that sorted by the given comparator.
Observes a connectableobservable using the given scheduler.
Creates a unicastprocessor with the given capacity hint.
Create a unicastprocessor.
Try scalarxmapsubscribe.
Apply a scalarxmap function to a value.
Resets the state of the scheduler to its initial state.
Create an assembly from a completable source.
Create an assembly from a single source.
Executes the given predicate retrying at the given number of times.
Throws an exception if the object is null.
Returns the identity function.
Creates a justvalue from the given value.
Just function.
Create a casttoclass for the given target class.
Creates a unicastsubject.
Creates a unicastsubject with the given capacity.
Creates a unicastsubject with the given capacity.
Creates a unicastsubject.
Blocks until the thread is interrupted or an exception occurs.
Blocks until the timeout is reached or an exception is thrown.
Blocks until the thread is interrupted or the timeout expires.
Drain maxloop.
Requests a prefetch for a subscription.
Completes the flow.
Gets the value of the notification.
Gets the error.
Validates that the upstream and next are non - null.
Atomically sets the next disposable to the upstream.
Validates the upstream subscription against the next subscription.
Atomically sets the next subscription to the upstream.
Returns the number of elements of a + b.
Multiply two longs.
Adds a number to the requested atomic long.
Converts a throwable to a nullpointerexception.
Adds an object to the list.
Shuts down the thread pool.
Create a scheduled executorservice.
Sets the subscription.
Emit a loop until all elements have been added.
Wrap or throw an exception if it is a runtimeexception.
Flatten a throwable into a list of throwables.
Throw if throwable is throwifthrowable.
Clears the set.
Returns the number of resources in this set.
Attempts to subscribe to an observable source using the given mapper. If the source is a callable
Convert an observable value to an observable value using the given mapper.
Accepts the subscriber and returns true if the subscriber is accepted.
Accept an observer and return true if the notification is accepted.
Starts the subscription.
Starts the unbounded subscription.
Offer an object to the queue.
Gets the disposable.
Completes the computation with the given value.
Called when an error occurs.
Completes the stream.
Awaits the consumer for the given number of items.
Sends a request to the upstream.
Adds a publishdisposable to the list of subscribers.
Remove a publishdisposable from the list.
Observes a connectableflowable.
Parses the annotations of a method.
Sets the amount of time to delay.
Create an error response.
Calculates the delay based on the variance of the variance.
Create the sampledata.
Returns the value of the given HTTP method.
Performs a search for the specified user.
Encodes the raw password using the salt generator.
Returns true if rawpassword matches encodedpassword.
Perform version check.
Returns true if the given springversion and springsecurityversion are disabled.
Gets the springsecuritycoreversion property.
Add an attributeexchangeconfigurer to the list of attributeexchangeconfigurers.
Returns a configured oauth2clientconfigurer.
Returns an oauth2resourceserverconfigurer.
Compares the specified object with the specified object.
Retrieve an entry from the directory.
Searches for multiple attribute values.
Performs a search for a single entry.
Builds a searchcontrols from the given searchcontrols.
Lookup primary keys.
Builds the preauthenticatedgrantedauthoritieswebauthenticationdetails object.
Create an embedded server.
Create the servletapifilter.
Create the jaasapifilter.
Create a typeresolverbuilder for a whitelisted default type.
Insert the springsecurityfilterchain.
Gets the persistentremembermetoken for a series.
Returns a list of grantedauthority objects from a collection of attributes.
Creates a cipher instance for the given algorithm.
Override afterPropertiesSet to handle servlet exception.
Performs the actual filter.
Returns true if the principal has changed.
Authenticates the request with pre - authenticated credentials.
Checks the contentlength to write.
Maps a collection of grantedauthority to a hashset.
Sets the loginprocessingurl.
Update the authentication defaults.
Update the accessdefaults.
Map password value to string if not a string.
Extracts the remembermecookie from the request.
Encodes the cookie tokens.
Set the cookie.
Resolve an argument.
Gets the query string.
Gets the service port from the casserviceurl
Gets the principal.
Logout the request.
Authenticates the given authentication.
Sets the context environment properties.
Returns the full request URL to redirect to.
Writes the secureduisuffix to the page context.
Initialize the userdetailsservice.
Gets the userdetailsservice.
Adds the pkce parameters.
Checks if the request requires authentication.
Check if the request requires authentication.
Proxy ticket request.
Returns true if the user is authenticated.
Checks if the proxyreceptor request matches the request.
Create the securityexpressionroot object.
Gets the cached jwkset.
Encodes the given value using UTF - 8.
Gets the grantedauthorities for the current user.
Load the userdetails for the given assertion.
Gets the pre - authenticated principal.
Concatenate two arrays into a new array.
Returns a subarray of the given array starting at the given index.
Returns a list of grantedauthorities for a collection of attributes.
Preprocesses the given map into a hashmap.
Gets the grantedauthority collection.
Adds the grantedauthority collection to the given collection.
Gets the pre - authenticated principal.
Gets the shared object of the given type.
Build the httpsredirecturl for the given httpservletrequest.
Invokes the advisorproceed method.
Checks if the string has the given role.
Returns an array of roles that have any of the given roles
On loginsuccess.
Attempt to switch to a new user.
Attempt to exit the user.
Sets the redirect URL for the exit user.
Display public index.
Filter the springsecurity filter chain.
Decodes the given token into a JWT.
Returns true if the access expression should be evaluated.
Checks if the current user is allowed to access the URL.
Convert a JWT to a collection of grantedauthority.
Generates a CSRF token for the given request.
Display admin page.
Display the add permission page for a contact.
Adds a permission to the contact.
Gets the role with the default prefix.
Creates a userdetailsresourcefactorybean from a string.
Returns the list of values for the given attribute name.
Gets the first attribute value for the given attribute name.
Encodes a charsequence into a byte array.
Decodes the given byte array into a string.
Looks up the parameter names for the given object.
Adds a contact to the contact manager.
Find the attributes for the given method and target class.
Adds a secure method to the method map.
Returns a collection of all configuration attributes.
Checks if methodname matches mappedname.
Returns the configured configurer for any request.
Handle bind exception.
Get a random contact.
Clear authentication attributes from httpservletrequest.
Gets a field from a class.
Create service url.
Create redirect url.
Extracts the prefix from the encpass.
Attempt to commence the httpservlet request.
Checks the stack of filters for duplicates.
Returns the registered throwable types.
Extract cause from throwable.
Register an access manager.
Convert a collection of grantedauthority to a set of string.
Checks if two byte arrays are the same.
Sets the redirect URL for the failure.
Sets the resolvehiddeninputs function.
Build the request URL.
Checks if the given string is an absolute URL.
Create a list of openidattributes for the given identifier.
Convert a serializable identifier to a serializable identifier.
Creates the entries in the acl.
Create an object identity.
Update the object identity of the given mutableacl.
Saves the request if it matches the request matcher.
Create a serverwebexchangematcher for the given path patterns.
A serverwebexchange matcher for anyexchange.
Create a textencryptor with the given password and salt.
Create a textencryptor with the given password and salt.
Create a textencryptor using the given password and salt.
Write the headers to the httpservlet response.
Determine the target URL for the given request and response.
Determine the target URL to use.
Sets the targeturlparameter.
Gets directory withimmediateparentpopulated.
Builds a distinguishedname from the given username.
Creates the shared objects.
Configurejaasusingloop.
Gets the current date.
Internal method to parse a date from a string.
Update the cache with the given value.
Sets the authentication details for the given request.
Get the securityname of the subject.
Get webspheregroups.
Build the distinguished name for a group.
Check if sessions aresexceeded.
Copy details from one authentication token to another.
Gets the filters for the given request.
Returns a list of filters for the specified URL.
Gets the applicationcontext from the pagecontext.
Gets the full distinguished name from the given distinguishedname.
Sets the session attributes for the request.
Create a preemptive authenticationscheme for basic authentication.
Adds the filters to the restassured.
Adds a filter to the list of filters.
Create a basic authenticationscheme.
Create a ntlm authenticationscheme.
Create a form authenticationscheme.
Creates a proxy for the given URI.
Prints the response options to a string.
Redirect the restassured config to the given redirect configuration.
Sets the default charset for the query parameter.
Sets the default objectmappertype.
Sets the default objectmapper factory.
Create a restassured mockmvcconfig from the given logconfig.
Sets the session configuration.
Sets the objectmapperconfig.
Create a restassured mockmvcconfig from the given jsonconfig.
Sets the restassured mockmvcconfig.
Sets the encoder configuration.
Sets the header configuration.
Sets the async configuration.
Sets the mockmvcconfig.
Sets the multipart configuration.
Sets the mockmvcparamconfig.
Create a restassured mockmvcconfig from the given matcherconfig.
Allow all hostnames to be allowed.
Declare namespaces.
Create an xmlpathconfig for a declared namespace.
Sends a request to the client.
Sets the request headers.
Sets the proxy for the HTTP client.
Sets the controlname of the multipart spec.
Adds a header to the multipart spec.
Perform basic authentication.
Configure ntlm authentication.
Returns a list of headers for the given header.
Resets the mock factory.
Adds a header to the restassured response.
Build the restassured response.
Returns a detailedcookiematcher that matches the given value.
Add a comment to the cookie matcher.
Set expiry date matcher.
Returns a detailedcookiematcher for the given domain matcher.
Returns a detailedcookiematcher that matches the given path.
Returns a detailedcookiematcher that matches the given matcher.
Returns a detailedcookiematcher with httponly property set.
Set the version of the cookie.
Set the maximum age of the cookie.
Expect a header with the given name to match the expected value.
Expect a header with the expected value.
Expect a cookie to be present in the response
Create a new proxyspecification with the given host.
Sets the numberreturntype.
Sets the default parser type.
Create a default logconfig object from the given printstream.
Enable logging of request and responseifvalidationfails.
Create a httprequest.
Sets the defaultboundary.
Adds an attribute to the request spec.
Add a header to the request spec.
Adds a multipart to the request spec.
Add resulthandlers to the request spec.
Sets a parameter to the given value.
Create a new httpclientconfig with the given params.
Sets the httpclient factory.
Sets the httpmultipartmode.
Performs a get operation on a JSON assertion.
Gets an int from a path.
Gets the byte from the given path.
Returns the short value of the given path.
Gets float.
Returns the double value of the object at the given path.
Gets long.
Gets a list from the map.
Returns the map for the given path.
Get object from path.
Sets the body of the request.
Adds a cookie to the request spec.
Adds a parameter to the request spec.
Adds a parameter to the request spec.
Create a mockmvcparamconfig with the given update strategy.
Returns a filter that logs responses toif matches the given matcher.
Create a list of cookies from a cookie.
Cleans up the backing map for the given set of keys and sources.
Index the bindings for thislevel.
Returns the bindingimpl for the given key.
Convert a constantstringbinding to a constantstringbinding.
Clean up the internal dependencies of the bindingimpl.
Removes a failedjitbinding from the list of failedjitbindings.
Returns the internal dependencies of the given binding.
Creates an uninitialized binding.
Gets all parameters from the given parameterinjectors.
Binds the given injectorimpl to the state.
Bind a logger to the injector.
Checks if the given member is misplacedbindingannotations.
Returns true if the two methods override.
Initialize the delegate.
Suppress warnings for provider type.
Resolve all of the given types.
Canonicalizes a typeliteral for a key.
Prepare the builtin converters.
Canonicalize the given classloader.
Checks if the given classloader has the same version of cglib.
Checks if the given member is publicly callable.
Fixes the annotations of the given key.
Requests injection for the given instance.
Validates all pending injections.
Creates a new instance of this class using the given arguments.
Returns an internal factory for a scope.
Returns a scoping that can be used to inject the given scoping.
Normalizes the path.
Generate an annotation of the given type.
Checks if retention policy is allowed for runtime retention.
Finds the scope annotation for the given annotations.
Returns the key for the given type and member.
Returns the string representation of the given key.
Initialize the delegate provider.
Adds a directtypebinding to the given binder.
Gets the constructorinjector for the given injection point.
Checks if the interceptor class has a scope annotation.
New realmapbinder.
Gets the key for a new value.
Provisions a construction context.
Replaces the source with an error message.
Create a module for the given module.
Returns the collection of assistedmethods.
Checks if the given exception is a typenotspecified.
Checks if a constructor has the same parameters as any of its parameters.
Gets the dependencies for the given injection point and typeliteral.
Removes assisted dependencies from a set of dependencies.
Checks if is valid for optimizedassistedinject.
Get a binding from a new injector.
Invokes the proxy.
Appends an error message to the string builder with the given key.
New realsetbinder.
Gets the key for a new item.
Find the next filter that matches the request.
Checks if the constructor has atinject.
Gets the internal constructor.
Gets the internal dependencies.
Creates a module for the given module and scanner.
Gets the annotation for the given method.
Gets the line number of a member.
Initializes the injector.
Validate and canonicalize a value.
suppress warnings.
Creates an instance of membersinjector that listens to the given type.
Returns a list of singlememberinjectors for the given set of injection points.
Returns a key for the given type and annotationstrategy.
Creates an annotationstrategy for the given annotation.
Creates an annotationstrategy for the given annotation type.
Prune stacktrace elements from the cause.
Gets the bindingsource.
Create a new message with the given messageformat and arguments.
Create a new message with the specified messageformat and arguments.
Create a message with the given message format and arguments.
Convert an object to its declaring source.
Checks if a class should be skipped.
Get an object from a list of module classes.
Main method of the manager.
Push a dependency onto the stack.
Pushes an object state onto the stack.
Returns an initializable that can be used as an initializable for the given instance.
Provisions a provider using the provider and dependency.
Called when a connection event is received.
Adds a connectioneventprocessor to the list of processors for the given connectioneventtype.
Gets the futuretaskresult.
launderthrowable.
Register a remotingprocessor for a commandcode.
Register a remotingprocessor.
Gets the remotingprocessor for the given commandcode.
Tries to get the soft reference for the given URL.
Decodes the protocolcode from the bytebuf.
Get all connection pools.
Scans the connection pools.
Gets and creates a connection to the given URL.
Create connection andhealifneed.
Remove a task from the pool.
Healifneed a connection pool.
Create a connection pool.
Closes a connection.
This method is called when the connection is closed.
Close the connection.
Sets an attribute if absent.
Register a userprocessor.
Register a multiinterest userprocessor.
Dispatch to userprocessor.
Deserialize a request command.
Preprocess the remotingcontext.
Log timeout log.
Log a request command in debug mode.
Processes a task.
Sends a request to the remote server.
Convert a bitset to a byte.
Convert an integer to a bitset.
Adds a reconnecttask to the list of tasks.
Toremoting command.
Filters a list of connections.
Closefreshselectconnections.
Get boolean value from system property.
Logs info messages to the logger.
Returns true if this command is a request timeout.
Gets the userprocessor for the given classname.
Get a connection from a list of connections.
Returns the value of the given key or the default if not found.
Returns the value of the property with the given key.
Resolve a responseobject from a responsecommand.
Converts responsecommand to responseobject.
Converts an rpcresponsecommand to a throwable.
Returns a detailerrmsg for the response command.
Create an rpcserverexception from a throwable.
Print connection trace log.
Creates a new eventloopgroup with the specified number of threads.
Parse the remote address from the channel.
Parse local address.
Parse the remote IP address from the given channel.
Parses the remote hostname from the given channel.
Parse the local IP address from the given channel.
Parses the remote port from the given channel.
Parse the local port from the given channel.
Parse socketaddress to hostip.
Adds a connection to the list of connections.
Remove a connection from the list of connections.
Register a custom serializer.
Gets the custom serializer for the given class.
Register a custom serializer for a commandcode.
Gets the custom serializer for the commandcode.
Checks if the remote address is connected.
Initialize the writebufferwatermark option.
Returns a framedataimpl1 object for the given opcode.
Send a batch message to the given websocketimpl.
Sets the code of the response.
Validates that the payload is UTF - 8.
Update the payload.
Checks if the handshake state contains a requested protocol.
Translate a single frame check length limit.
Translates a single frame check packetsize into a single frame check packetsize.
Generate the final key for the given string.
Process a framecontinuous and nonfin frame.
Process frame binary.
Log runtimeexception.
Process the frame text.
Process frame isfin.
Process a frameisnotfin.
Process a closing frame.
Check if the bufferlistsize exceeds maxframesize.
Gets the payload from bytebufferlist.
Returns the total size of all bytebuffers in the list.
Translate a handshake line into a handshakebuilder.
Translates a line to a handshakebuilder.
Decode the frame from the given socketbuffer.
Sends a responseduetowronghandshake to the client.
Writes a responseduetointernalservererror to the close frame.
Generate http responseduetoerror.
Send a frame to the server.
Resets the connection to the initial state.
Starts the connect read thread.
Returns the port of the websocket.
Sends a handshake to the engine.
Sets the connectionlosttimeout.
Stops the connectionlost timer.
Start the connectionlost timer.
Restart the connectionlosttimer.
Execute connectionlost detection.
Cancel connectionlosttimer.
On websockethandshake receivedasserver.
Send a ping frame to the websocket.
Stops the connection. If the connection is closed and the timeout is exceeded the stop will be
Returns the port of the server.
Read more data from the queue.
Accepts a selectionkey from the server.
Reads data from the websocketimpl.
Write a selectionkey to the websocket.
Setup selector and server thread.
Ensures that the selector thread is in a single thread.
Shuts down the server.
Gets the socket from a websocket connection.
Broadcast data to the given clients.
Broadcast a text to all clients.
Broadcast the given data to all clients.
Fills the draft frames map.
Transfer a bytebuffer to another bytebuffer.
Starts the server.
Returns the entitymanager for the given name.
Executes a consumer with transaction.
Convert args to scala buffer.
Wrap arguments to list if needed.
Gets the message for the given key and arguments.
Get a message from a list of strings.
Checks if a key is defined at a language.
Selects the messages that are preferred by the given candidates.
Returns the messages that are preferred for the given request.
Sets the language of the given result.
Binds the given modules to the delegate.
Returns the bindings for the given modules.
Bind to the given bindings.
Create a builder that overrides the given modules.
Overrides one or more modules.
Allows the guiceable to override the given bindings.
Disable the given modules.
Calls the completionstage method on the given request.
Gets the existing file from the environment.
Create a binding for an in scope.
Creates a tuple from the given values.
Static factory method for creating a 5 - tuple.
Converts an executioncontext to an executor.
Create a default jpaconfig with the given name and unit name.
Creates a default jpaconfig with the given parameters.
Creates a default jpaconfig from the given map.
Create a flow from a string.
Create a flow from a jsonnode.
Adds a constraintvalidator to the mapped constraintvalidator factory.
Creates a new instance of the given key.
Get an accessible method by name.
Handles client error.
Handles a bad request.
On forbidden.
Called when the page is not found.
On server error.
Logs a server error.
Create useful exception for throwabletouseful exception.
Handles the devservererror page.
Called when a server error occurs.
Create a builddochandler from a list of resources.
Build documentation handler from directory.
Builddochandler from directory and jar file.
Build documentation handler from directory and jar.
Build documentation handler from jar file.
Consume data from the datastream.
Creates an httpentity from the content.
Construct an httpentity from a string.
Creates a chunked httpentity from the given source data.
Sends a status message to the given jsonnode.
Sends a status message to the given jsonnode.
Creates a result with the given status code and content.
Sends an inputstream with the given status code and content length.
Sets the status of the given file.
Find user by id.
Returns the preferred lang for the given candidates.
Call unique method.
Add a fragment to the request.
Returns the absolute URL for the given http request.
Returns the websocket url for the given http request.
Creates a connection function that runs the given block.
Returns an abstract function that wraps the given connectioncallable.
Create a new server for a router.
Convert an object to a json node.
Converts a JSON node to a given class.
Parses a string into a jsonnode.
Parses a JSON node from an inputstream.
relative relative to target path
Canonicalizes the given URL.
Returns a list of tuples representing the constraints that are displayable.
Display a constraint descriptor.
Performs a timeout operation on the completion stage.
Parse a cron expression into a date.
Returns the next interval of the given cron expression.
Create a standaloneahcwsclient.
Create a builder for the application.
Render the todo page of the given request.
Associates the given value with the given key.
Flash a key - value pair.
Returns the qualified with of the given instance.
Returns the qualified with of the given annotation.
Binds the underlying binding to the given implementation.
Binds the underlying binding to the given provider.
Binds the underlying supplier to the given instance.
Binds the underlying binding to the given key.
Binds the underlying binding to the given provider.
Returns the available langs for the given application.
Returns the preferred language for the given language list.
Creates a simple evolutions reader from a map of evolutions.
Creates a new evolutionsreader for the given evolutions.
Cleans up evolutions for a database.
Adds a configuration loader to the guice applicationbuilder.
Create a new guiceapplicationbuilder with the given loader.
Load the given guiceable modules.
Load guice applicationbuilder from the given modules.
Load guice applicationbuilder with given modules.
Load guice applicationbuilder.
Factory method for the guiceapplicationbuilder.
Encodes the cookie into a string.
Returns the current entitymanager.
Returns a deque containing all the entity managers in the current thread.
Push or pop an entitymanager.
bypasses a flow by applying a function to each of the streams.
Automatically bypasses a flow using a merge strategy.
Convert error arguments to a list of errors.
Fill the form with the given value.
Returns the global errors.
Returns a json representation of the errors for the given language.
Returns the value associated with the given key.
Creates a dynamic form with the given value.
Parses the given text and converts it to the given class.
Parse a type descriptor from a string.
Print a t to a string.
Print a type descriptor for the given field and t.
Prints a type descriptor to a string.
Register optional converters.
Register a formatter for the given field type.
Encodes a cookie into a string.
Returns a list of nodes for the given node.
Convert a java. util. list to a scala sequence. sequence.
Converts an array to a sequence.
Create a varargs sequence from the given array.
mappedwebsocketacceptor mapped to json.
A websocket acceptorresult.
Get the cost of a primitive type.
Computes the total cost of transformation of the given executable.
Get the cost of the objecttransformation of the source class and destination class.
Gets a message by key.
Get messages by key.
Create a database with the given driver and url.
Creates a parallelsorter for the given arrays.
Sorts the elements in the specified range using the specified comparator.
Performs a mergesort on the specified indices using the specified comparator.
Invoke a method on an object.
Load an argument at the given index.
Emit a field instruction.
Adds zero or null to the constant stack.
Unbox a primitive type.
Process an array element.
Compare two labels for null equality.
Resolve all references to bridgedfinders.
Filter constructors.
Sets the superclass of this object.
Get a field from the provider.
Adds the signature and exception types for the given method.
Returns the cardinality of this set.
Sets the namingpolicy.
Finds the methods for the given names and descriptors.
Resolve a child path.
Read a string from a file.
Sets the host of the HTTP request.
Creates a new httprequest with the given method and destination.
Create a httprequest that connects to the given destination.
Create a httprequest with the httpmethod set to get.
Create a new httprequest with HTTP POST method.
Create a httprequest to put to the given destination.
Create a HTTP patch request.
Create a httprequest to delete the given destination.
Create a head httprequest with the given destination.
Create a new httprequest with a trace method.
Create a new httprequest with the httpmethod options.
Sets the http request path.
Add cookies to the request.
Add a query to the request.
Adds a query map to the request.
Set the query string.
Returns the query string.
Returns the hosturl.
Perform basic authentication.
Set the host header.
Override this method to provide a buffer for the request.
Removes the handler at the given label range from the first handler.
Gets the length of the exception table.
Collect all action interceptors.
Collect the action filters.
Collect the action results.
Collect all actionruntimes.
Set simple property.
Gets the value of a property.
Extract thisreference from a propertyname.
Gets the printwriter.
Sets an object reference.
Gets an object reference by its name.
Lookup an object reference.
Gets the descriptor for a table reference.
Find table descriptor by columnref.
Returns the alias for the given tableref.
Register a tablereference.
Lookup table descriptor by tableref.
Register a hint.
Serialize the given value to the given jsoncontext.
Inject attributes.
Inject parameters.
Inject uploaded files.
Convert propertyname to columnname.
Convert columnname to propertyname.
Apply to a columnname.
Store value.
Prepare getvalue.
Returns a set containing all of the wrappers.
Resolve a wrapper class.
Create wrapper.
Converts a path to a system path.
Gets the path from the given filename.
Splits a filename into an array of strings.
Returns the relative path of the target path to the target path.
Register a new madvoccomponent.
Registers an actionconfigmanager for the given type and consumer.
Start the webapp.
Register the madvoccomponents.
Exclude a set of jars.
Include jars.
Include entries.
Exclude entries from the scan.
Scans a jar file.
Scan the classpath for classes.
Returns the bytecode signature of the given type.
Scans a set of paths.
Start scanning the files to scan.
Create a new transaction.
Get the defaultorscope for the given scope class.
Gets the orinitscope for the given class.
Perform a consumer for a scope.
Prepares a CSRF token.
Ensures that the given token set is within the max tokenspersession.
Check if the given string is a valid CSRF token.
Create a beancopy from an object.
Create a copy of this bean.
Visit a property.
Initializes the template.
Resolve a scope of the given type.
Registers a bean definition for a given bean type.
Register a bean definition.
Remove a bean from the bean list.
Resolve the beannames for the given type.
Registers a newpetitectorinjection point.
Register a propertyinjectionpoint.
Register a setinjectionpoint for a beanname and property.
Register a methodinjection point.
Registers a set of initmethods for a bean.
Registers a list of destroy methods for a bean.
Register a provider for the given bean name and method name.
Register a provider with the classintrospector.
Execute a consumer for each bean type.
Define parameters.
Intercept an action request.
Resolves the java version of the given version.
Push an int value onto the methodvisitor.
Checks if the argument index is valid.
Gets advice field name.
Returns the advicemethodname for the given name and index.
Load special method arguments from a methodvisitor.
Load static method arguments.
Load method arguments from a methodvisitor.
Load a method argument.
Store methodargument.
Prepare returnvalue.
Create method signature key.
Visit a new array.
Store in to array.
Extracts the encoding from the given contenttype.
Checks if the given flags is empty.
Resolve an auth bearer token from the request.
Require authentication.
Prepare the response for download.
Prepare response.
Gets all cookies with the given name from the request.
Read request body from reader.
Read request body from stream.
Store the contextpath in the request and servletcontext.
Store a contextpath variable in the servlet context.
Checks if is get parameter.
Prepare parameters.
Copy the parameters from the servlet request to the attributes.
Invoke the body of a jspfragment.
Render the body of a jspfragment.
Render a body to a string.
Invoke initmethods.
Call destroy methods.
Create a new beaninstance.
Inject parameters.
Rewrite the action path.
Add a header to the header list.
Put a key - value pair into the propsentry.
Put base property.
Associates the specified profile property with the specified key in the specified profile.
Gets a profile property.
Resolve macros.
Extract the target map from profiles and wildcard patterns.
Convert a stream to a word.
Hashes a password using a salt.
Checks if the plaintext hashed string matches the hashed string.
Copy all bytes from this stream to the given outputstream.
Copy max number of bytes from the stream to the outputstream.
Parse actionruntime.
Resolve action configuration.
Detect and register an alias for the given actiondefinition.
Read actioninterceptors.
Read actionfilters.
Read package actionpath.
Read methodactionpath.
Parse methodalias.
Create an actionruntime.
Pre - response commit.
Apply advice to target class.
Inject target in to proxy.
Visit an annotation descriptor. This method will be called for every node in the tree that is a
Resolves the realname of the given jsonname.
Resolves a JSON name.
Looks up the typedata for the given type.
Lookup the type data for the given type.
Find the typedata for the given type.
Resolves a JSON name for the given type.
Resolves the realname of a type.
Gets the content of the file.
Copy bootstrapmethods.
Sets the majorversion and class name.
Put constant pool.
Put bootstrapmethods.
Add a field reference to a constant field.
Adds a method reference to the constant pool.
Adds a constant memberreference to the constant pool.
Adds a constant memberreference to the constant pool.
Adds a constant integer or float to the constant pool.
Adds a constant integerorfloat to the constant pool of the class being build. Does nothing if
Adds a constant long or double to the constant pool.
Adds a constant long or double to the constant pool of the class being build.
Adds a constant name and type to the constant pool.
Adds a constant name and type to the constant table.
Adds a constant utf8 value to the constant pool.
Adds a constant utf8 value to the constant pool of the class being build.
Adds a constantmethodhandle to the constant pool.
Adds a dynamic reference to the constant dynamic.
Adds a constant invokedynamic reference to the constant stack.
Adds a constantdynamicorinvokedynamicreference to the constant pool.
Adds a constantdynamicorinvokedynamicreference.
Adds a constant utf8 reference to the constant pool.
Adds a constant utf8 reference to the constant pool.
Adds a bootstrapmethod.
Adds a mergedtype to the type table.
Returns the hash code for the given name.
Removes all entries from the multimap.
Returns a list of all values with the given name.
Returns an iterator over the elements in this map.
Returns a list of all entries in the map.
Grow the buffer by the given minimum capacity.
Appends a sequence of characters to this buffer.
Visit an annotation of the current method. This method will be called for every node in the tree
Visits the end of the chain.
Create the first chaindelegate.
Create the first chaindelegate for continue.
Parse a path from a string.
Pushes a field onto the path.
Configure servletcontext.
Executes the target method.
Returns an array of all field descriptors for this descriptor.
Create a beandefinition for registration.
Convert a jtxtransactionmode to a dbtransactionmode.
Reads a property from the source object.
Put all entries in the given map.
Append a buffer to the end of the list.
Writes the contents of the list to the writer.
Write the contents of this list to the given outputstream.
Write the progress to the output stream.
Gets a string from the map.
Returns the integer value for the given key or null if not found.
Gets a long value from the map.
Returns the double value associated with the given key or null if no such key exists.
Returns the float value for the given key.
Get a value from the map.
Adds a key - value pair to the map.
Use a folder.
Receive messages from the folder.
Update the flags of the received email.
Close the folder if it is open.
Look up a dbquerynamedparameter with the given name.
Validates this action against the given profiles.
Adds a violation to the validator.
Set the mimetype from the mimeor extension.
Set download filename as downloadableas.
Sets the target.
Sets the target.
Sets the target.
Processes the target class.
Create the class in debug folder.
Create a new instance of this class.
Dump class in debugfolder.
Create an email from the given personalname and from.
Appends an email address to the end of the array.
Adds an email address to the email address.
Add an email address to the reply to.
Add a list of email addresses to the email.
Send a text message.
Create an email message with the given HTML.
Add a header to the request.
Gets the value of a property.
Returns the boolean value for the given name.
Returns the integer value of the given name or the default value if not found.
Returns the long value for the given name or the default value if the name does not exist.
Gets the resolved parameters of the method.
Serialize a key value.
Lookup the actionpath for the given alias.
Resolve the alias of the given string.
Resolves the resultpath for the given value.
Resolve result path string.
Returns the index of the last occurrence of a slash in a string.
Returns the index of the last occurrence of str_ after slash after str_.
Returns the index of dot afterslash in the given string.
Resolves the schema name for the given type.
Resolve column descriptors.
Initialize the key with the given tweak.
Multiply the x and y by the given d.
Demix a vector.
Schedule a keyschedule.
Initializes the block with the given key message and tweaks.
Encrypt a block.
Converts a byte array to a long array.
Remove anybounding characters from a string.
Returns the path of the methref.
Create a zlib file from a file.
Gzip a file.
Ungzip a file.
Lists the entries in a zip file.
Unzip a zip file to a destination directory.
Adds a file to a zip.
Adds content to a zip outputstream.
Gets the field descriptor for the given name.
Gets a property descriptor by name.
Set request bundle name.
Sets the locale of the session.
Gets the locale of the session.
Filter parameters for beanname.
Add profiles to the propsentries.
Gets a long from the given buffer at the given offset.
Reads the contents of an inputstream into a byte array.
Read label from bytecode offset.
Gets the typeannotation bytecode offset.
Reads the bootstrapmethods attribute.
Inspect the constructors of this class.
Gets the ctor descriptor for the given arguments.
Get request map.
Create request map.
Convert array to long array.
Initialize the servlet.
Adds a file to the list of files that match the given search path.
Search for a file in the container.
Include a set of patterns.
Exclude files that match the given patterns.
Adds a path to the linked list.
Finds all files in the directory.
Initialize the todo files and folders.
Returns an iterator over the contents of this file list.
Resolve wiring mode.
Resolve bean name.
Gets the writer.
Gets the servletoutputstream.
Returns the class name of the element.
Returns the descriptor for the constructor.
Returns the descriptor for a method.
Returns the descriptor for the given method.
Append a descriptor to the stringbuilder.
Returns the number of elements in the sorted set.
Gets the number of arguments and returnsizes for a method descriptor.
Sets the rollback cause.
Commit or rollback resources if docommit is true.
Rollback all resources.
Request a resource from the transaction manager.
Pop the name from the stack.
Write a string to the stream.
Writes a unicode character to the output.
Write a charsequence to the output stream.
Sets the logging error loglevel name.
Start a new region with the given taglen and deeplevel.
Returns true if this string contains the include string.
Registers a pseudo function.
Looks up a pseudofunction by name.
implements the visitor to initialize the wd
Visit a annotation of the current node. This method will be called for every node in the tree
Make a static initializer block.
Make proxy constructor.
Process all supermethods.
Returns the index of the last occurrence of the specified range.
On string.
Replaces the instructions in the given classfile with the instructions in the given classfile.
Gets the attribute prototypes.
Registers a SQL type for the given type.
Lookup the sqltype for the given class.
Lookup the sqltype for the given class.
Create a socks4 proxy.
Create a proxyinfo object for socks5 proxy.
Create a http proxy.
Returns the total number of threads in the thread stack.
Returns the total number of transactions with the given status.
Associate a transaction with the transaction stack.
Continues a transaction.
Lookup the resourcemanager for the resource type.
Create a proxy object for the given target class.
Append a method name to the path.
Aligns the given string with the left and right padding.
Converts a string to camel case.
Format a string with a number of whitespaces.
Convert tabs to spaces.
Escapes the given string as a java string.
Unescapes a java string.
Gets the bean of the given type.
Gets bean by name.
Initialize beandefinition.
Invoke provider.
Adds a bean to this scope.
Sets the value of a bean property.
Gets the bean property by name.
Shuts down the application.
Resolves the parameters of the given accessible object.
Populates the body content and prints the body content.
Returns the value of the macro.
Terminates this node.
Create an element node for the given tag.
Remove the last child node if it is empty.
Gets the query string.
Gets the action class name.
Calculate to.
Replaces all occurrences of sub with with with s.
Replaces a char in a string with another char.
Replaces all occurrences of sub with with with with with.
Replaces the first occurrence of s with with with with s.
Replaces the first occurrence of sub with with with.
Replaces the last occurrence of s with with with with with with with.
Replaces the last occurrence of sub with with with with.
Remove the first occurrence of sub from s.
Remove a character from a string.
Checks if all strings are empty.
Checks if any of the given strings are blank.
Convert an object to a string array.
Change the first character of a string.
Returns the title of the given string.
Compress a string with a character.
Checks if src starts with subs ignoring case.
Returns true if s ends with c.
Count the number of ignorecases in a string.
Compares two strings ignoring case.
Returns the index of the first non - whitespace character in the given string.
Strip leading char from string.
Strip trailing char from string.
Strips a character from a string.
Strips the given character from the given string.
Strips a character from a string.
Crops a list of strings.
Trim the left side of a string.
Trims all whitespace from the beginning of the string.
Returns the index of the first occurrence of the left boundary and the right boundary.
Joins the collection with the given separator.
Joins an array of objects with a separator.
Converts the source string to a new charset.
Checks if the character at the given index is equal to the given character.
Surround the given string with the given prefix and suffix.
Prefix the given string with the given prefix.
Appends the suffix to the string if it does not end with the suffix.
Cut to the index of substring.
Cuts the string from the index of substring.
Cuts a prefix from a string.
Cut suffix.
Cuts the given string by cutting the given prefix and suffix.
Inserts a string into a string at the given offset.
Repeats the given string by the given number of characters.
Reverses a string.
Returns the longest common prefix between two strings.
Find the common prefix of the given strings.
Shorten a string to the given length and suffix.
Converts a string to upper case.
Remove quotes from a string.
Converts a byte array to a hexadecimal string.
Gets the bytes from a string.
Detects a quote character from a string.
Visit an enumeration value of the annotation. This method will be called for every node in the tree
Visit a annotation. This method will be called for every node in the tree that is a subclass
Registers the given type as a dbentity descriptor.
Register an entity descriptor for the given type.
Removes an entity descriptor from the descriptor map.
Create an entity instance of the given type.
Sets the targetinterface.
Inject target intowrapper.
Looks up the annotated properties for the given type.
Detect database and configure dboom.
Closes the output stream.
Writes a byte to the output stream.
Invalidates the httpservletrequest and httpservletresponse if it is a session id
Gets the encoded name.
Serialize this outputstream to a byte array.
Write the data source to a file.
Write the datasource to the outputstream.
Append an argument to a string.
Prepend argument.
Change returntype.
Appends the text to the end of the text.
Register a converter for the given type.
Lookup a converter for the given type.
Parses the given query and returns a list of nodes.
Selects a collection of selectors.
Process selectors.
Selects the first node that matches the query.
Walks the descendants of the nodes and adds them to the result list.
Walk the tree.
Select and add the result to the list.
Unpacks a char array from a packed string.
Refill the buffer.
Get a page of data.
Remove the select from the sql string.
Remove the from from the string.
Remove the last orderby from the sql string.
Decodes the given HTML into a string.
Detects the name of an entity.
Build order sql.
Build the SQL for a page.
Resolve columns and properties.
Find column descriptor by columnname.
Find column descriptor by propertyname.
Returns the property name for the given columnname.
Gets the columnname for the given property name.
Gets the id value of an object.
Sets the id value of an object.
Gets the keyvalue for the given object.
Append a string to the stringband.
Sets the index of the array.
Expand the capacity of the array.
Calculates the length of the array.
Createmixingmessage.
Create scoped proxybean.
Initializes the map.
Accept a file.
Use a watchfile to watch the directory.
Starts the watch task.
Called when the file changes.
Adds an enumeration to the list of all enumerations.
Compute the size of the fieldinfo field.
Put fieldinfo.
Create a new target with the given value and scope data.
Writes a property value to the injection point.
Decorates the given page content with the given decora content.
Parses a page.
Write decorated page.
Writes the region of the decoratag.
Starts the server.
Runs the given process.
Gets the store for the given session.
Create a gzip responsestream.
Initializes the hint.
Append columnname.
Adds a new rule definition.
Apply the rules to the given value.
Process include.
Process exclusions.
Get the pseudo class name.
Adds all elements in the collection to the end of the collection.
Finds the insertion point for the given element.
Register an action configuration for the given annotation type.
Register a new action configuration.
Looks up an actionconfig for the given actiontypeorannotationtype.
Register an actionconfig consumer for the given actionconfigtype.
Setup systemmail properties.
Validate within.
Find the last table in the tree.
Fix the fosterelements.
Register sessionbeans.
Gets the session map.
Initializes this class with the given name and supername.
Add adviceinitmethod.
Called when the bundle ends.
Adds a key - value pair to the builder.
Extracts a profile and adds it to the list of profiles.
Adds a value to the hashmap if the operator is copy.
Convert a typedesc to a classname.
Converts a typeref to a name.
Convert a type to a typeref.
Adds multiple consumers to the list.
Create a collection of the given length.
Convert an object to a collection.
Convert a value to a collection.
Convert collection to collection.
Adds a linenumber to this linenumber.
Accepts a methodvisitor.
Puts a forward reference into the given bytevector.
Adds a forwardreference to the list of forwardreferences.
Marks this basic block as belonging to the given subroutine.
Compare two numbers.
Fixes the accent of a character.
Put a byte into this bytevector.
Enlarges the byte vector so that it can hold at least 11 bytes.
Puts a short into the byte vector.
Enlarge the byte vector so that it can hold at least 12 bits.
Puts two bytes into the byte vector. The byte vector is automatically enlarged if necessary.
Puts an integer into the byte vector.
Enlarges the byte vector by 122 bytes.
Enlarges the byte vector so that it can hold a long value.
Enlarges the byte vector to fit into this byte vector.
Enlarge the buffer to the given size.
Authenticate uservia httpsession.
Authenticate userviatoken.
Authenticate user using basic auth.
Finds the default message for the given key.
Gets the bundle with the given name.
Gets the value at the given index in the given array.
Sets the id of the given entity.
Saves the given entity to the database.
Update an entity.
Update a property of an entity.
Update property.
Find by id.
Find entity by property name and value.
Find one entity by criteria.
Delete by id.
Delete by id.
Counts the number of entities of the given type.
Increase a property by a given amount.
Decreases a property by a given amount.
Finds a list of objects that are related to the target object.
List all entities of the target class.
Removes all the attributes from this set.
Returns a set of all the entries in this set.
Sets the value for the given key.
Remove an object from the map.
Gets the current stacktrace.
Get stacktrace elements from throwable.
Gets the stacktrace chain for the throwable.
Gets the exception chain for the given throwable.
Convert an exception stacktrace to a string.
Converts an exception chain to a string.
Builds a message from a throwable.
Unwraps the wrapped throwable.
Register as consumer.
Adds a component class to the madvoccomponents list.
Gets the systemclassloader.
Gets resource as stream.
Get resource as stream.
Returns an inputstream for the given class.
Get an inputstream for the given classname and classloader.
Add a new value to this routechunk.
Find or create a child with the given value.
Parses the request.
Convert a value to a collection.
Invokes the setter.
Sets the value of the array at the given index in the given array.
Create beanproperty.
Extracts the type of the bean property.
Stop the httpservlet request and add the cookie to the servlet response.
Start the auth session.
Convert a localdate to a date.
Converts a localdatetime to a gregorian calendar.
Define proxy.
Adds a check to the list.
Resolve validationcontext for a class.
Add all checks for the given class.
Collect property annotation checks.
Collect annotationchecks.
Copy the default check properties.
Encode a URI component.
Encodes the given string using the given encoding.
Encodes the given scheme using the given encoding.
Encodes the given host using the given encoding.
Encodes the given port using the given encoding.
Encodes the given path using the given encoding.
Encodes the given query using the given encoding.
Encodes the given queryparam with the given encoding.
Encode the given fragment using the given encoding.
Inspect the properties of the class descriptor.
Returns an array of all property descriptors.
Returns an array of all the cookies in the response.
Unzip this response.
Close the http connection.
Returns true if the referencescope should be accepted.
Encrypts the given content using AES - 256.
Decrypts the given encrypted content.
Convert a map to an object.
generify list.
Sets the value of the property descriptor.
Generate map.
Compares two dbentitycolumndescriptors.
Adds a header to the default headers.
Send a httprequest to the server.
Send a request to the client.
Adds default headers to httprequest.
Read the cookies from the httpresponse.
Adds cookies to the httprequest.
Sends an email to the server.
Sets the subject of the email.
Sets the date of the sent email.
Sets the headers for the email.
Sets the people of an email.
Sets the recipients.
Adds the body data to the email.
Sets the content of the email message part to the parttoset.
Create attachmentbodypart.
Returns the contenttype of the given dataheader.
Saves a resultset to the hashset.
Close all resultsets.
Close the query.
Close the query.
Sets the number of rows to fetch.
Sets the maximum number of rows the query will return.
Executes an UPDATE statement.
Executes the query and returns the first long value of the query.
Get the generated columns.
Gets the query string.
Create a proxy instance for the target class and aspectclass.
Create a collection from an iterator.
Creates a stream from the given iterator.
Compares two objects.
Sets the wiringmode.
Print a message and throwable to the standard output.
Returns the class name of the caller.
Shorten a classname.
Excluded types.
Serializes an object to a JSON context.
Serialize an object to a string.
Clones the given object using serializing.
Write an object to a file.
Read an object from a file.
Convert an object to a byte array.
Converts a byte array to an object.
Resolve the mappedtypes tablenames for the given types.
Create the types tablenames.
Read column value.
Cache result set entities.
Resolves the providerdefinitions for the given type and name.
Apply to tablename.
Checks if a connection is valid.
Render view.
Locates the target for the given path.
Returns the printwriter for the response.
Gets the outputstream for the response.
Write content to response.
Sets the contenttype.
Prints a string to the output stream.
Performs the login using the basic auth and request parameters.
Returns the JSON result for the given authtoken.
Login to basic auth.
Converts a url to a containerfile.
Create a directory if it does not exist.
Create a directory if it does not exist.
Copy a file to another file.
Copy a directory from one location to another.
Move a file to a directory.
Move a directory from one location to another.
Deletes a directory and all its contents.
Read utf - 8 characters from the given file.
Reads characters from the given file.
Writes a character array to a file.
Write a string to a file.
Append a string to a file.
Reads a number of bytes from a file.
Write a byte array to a file.
Append a byte array to a file.
Copies a file to a directory.
Delete a file or directory.
Create a temp directory.
Checks if the file is binary.
Checks if srcdir and destdir exist and if not throws ioexception.
Checks if srcfile and destfile exist and if not creates it.
Print command usage.
Resolves a method descriptor for an action method.
Register an actionruntime for the given actionmethod name and actiondefinition.
Register a path alias.
Moves to the next value.
Create a chararraysequence from a char array.
Executes the proxy.
Match the target character with the uppercase target character.
Create a charsequence from the input starting from the given range.
Returns an array of URLs for the given class.
Set the email addresses to be joined.
Register a serializer for the given type.
Looks up a serializer for the given type.
Parse the requeststream.
Returns the value of the parameter with the given name.
Returns the values for the given parameter name.
Returns the value of a requestfile parameter.
Returns an array of fileuploads for the given paramname.
Initialize the filter.
Parses the template into the sqlbuilder.
Find the macroend index of the given string.
Count the number of escapes in the template.
Builds a query from a multimap.
Parses a query and returns a multimap.
Prepare header parameter name.
Extract the mediatype from the given contenttype.
Renders the given node to HTML.
Renders the given node as an inner HTML string.
Configure with servlet context.
Resets this object to its initial state.
Sets lazy flag.
Replace with mapped type for path.
Parse a string as a list.
Parse a string as a map.
Resolve lazy value.
Skip object.
Parse a string.
Parse string content.
Parses a unicode character.
Parse unquoted string content.
Parse a number.
Parse array content.
Create emptyctor.
Create a simple method wrapper.
Resolve raw type name.
Resolve a reference from a value.
Resolve beanreferences from values.
Read all references from an annotation.
Builds the default beanreferences.
Build the default reference for the given property descriptor.
Remove all duplicate names from allbeanreferences.
Converts a string array of references to a beanreferences array.
Convert an ann value to references.
Run a joyruntime consumer.
Finds a declared method in a class.
Find a constructor for the given class and parameter types.
Resolve all interfaces of the given type.
Compare two parameters.
Force access to an accessible object.
Create a new instance of the given class with the given parameters.
Get all superclasses of the given type.
Returns the child class of the given object.
Returns the jarfile of the given class.
Sleep for a given amount of milliseconds.
Sleep for long. max_value milliseconds.
Waits for an object to become available.
Creates a thread factory that daemonizes the given name and priority.
Gets the current value of the supplier.
Visit a parameter of this method.
Visits an annotation of the current method. This method will be called for every node in the
Visit a fieldinsn. This method will be called for every instruction in the stack frame that
Visit a method instruction. This method will be called for every method instruction in the stack frame.
Visits an invokedynamicinsn of this method.
Visit a jumpinsn instruction. This method will be called for every instruction in the stack frame
Visit a multianewarrayinsn. This method will be called for every node in the
Visit atrycatchblock. This method will be called for every node in the tree that is
Convert to writer.
Copies the input stream to the output stream.
Moves to the next element in the list.
Moves to the next element in the list.
Joins the given arrays into a single array.
Joins the given arrays into an array of the given componenttype.
Resizes the buffer to a new size.
Append a new element to the end of the buffer.
Remove an element from the buffer.
Returns the index of the given value in the given array.
Returns the index of the value in the array or - 1 if the value is not equal to
Returns the index of the first occurrence of the first occurrence of the second occurrence of the first occurrence
Enables html mode for the lagartodom builder.
Parses the given content into a document.
Parse the lagarto parser.
Compute the maximum stack and local variables.
End the current basicblock with no successor.
Collect attribute prototypes.
Inject the context for the target object.
Registers a pseudo class.
Looks up a pseudoclass by name.
Invoke an action request.
Gets allbeanpropertynames.
Visits the bean.
Returns true if the propertyname matches the rule.
Resolve the methodinjection point for the given type.
Read filterconfig parameters.
Sends a bundle file to the server.
Looks up a file for the given bundleid.
Lookup the gzipbundlefile for the given file.
Register a bundle.
Create a digest from a string.
Create a bundle.
Resets the cache to its initial state.
Fix css relative urls.
Update a column in the entity.
Create tablerefname.
Gets the dbsession.
Convert an object to a singleelementarray.
Parse signature for generics.
Resolves the setinjectionpoint for the given type.
Returns true if the given propertytype matches ignored propertytypes.
Open connection for query.
Open the transaction.
Close the transaction.
Commits the transaction.
Rollback the transaction.
Create a properties object from a file.
Create a properties object from a string.
Load properties from string.
Returns a subset of the properties of the given object.
Create a properties object from the classpath.
Gets the value of a property from a map.
Resolve all variables in a properties object.
Resolves the value of a property.
Resolve scope.
Gets the txmode.
Register an array of annotations.
Read transactionannotation values.
Accepts the given node.
Returns true if the element of the node matches the element of the node.
Accepts a list of results.
Unescape the given string.
Build the jre packages for the given java version number.
Clone this node to another node.
Detach this node from its parent.
Adds one or more nodes to the tree.
Inserts a child node at the given index.
Insert the new child before the refchild.
Insert new childs before refchild.
Inserts the new child after the refchild.
Insert new childs after refchild.
Remove all child nodes from the list.
Find child node with the given name.
Filters the children of this node by the given predicate.
Checks if this node is a child node.
Initialize the childelementnodes array.
Initialize siblingnames.
Initialize child nodes.
Change the ownerdocument of the node.
Returns the previous sibling name of this node.
Returns the text content of this node.
Gets the inner HTML for this element.
Visit all children of the given nodevisitor.
Get the CSS path for this node.
On decoratag.
On idattrstart.
Defines the definedecoratag.
Add a proxyaspect to the proxetta.
Adds a rootpackage to the list of packages and mappings.
Adds the root package of the action class.
Find the root package for the given actionpath.
Resolve validation message.
Removes duplicate names from this beanreferences.
Add a named pattern to the joyprops file.
Perform a consumer for each target.
Iterates over all targets in the given scope and invokes the biconsumer on each target and
Iterates over all targets in the given scope and invokes the biconsumer on each target.
Extract parameters values.
Make targets.
Create actionmethodargument.
Called when a session is created.
Called when a session is destroyed.
Adds an object to the array.
Add an array to the end of the list.
Removes the object at the given position.
Resolve target.
Sends an error if the targetnotfound response is not found.
Convert a value to a string.
Filter the madvocrouter.
Get the pseudo function name.
Resolves an array of propertyinjectionpoints for the given type.
Create a proxy socket.
Returns the number of attributes in this object.
Gets all actionresults.
Returns true if c equals one of match.
Find the first occurrence of the match in the source charsequence starting from the given index.
Find the first occurrence of match in source starting from index.
Add command line arguments.
Add a key - value pair to the environment
Runs the runner.
Invokes the given listener on the given type.
Copy this frame from another frame.
Gets the abstracttype from a descriptor.
Sets the inputframe from the API format.
Gets the local for the given index.
Sets the local variable.
Pushes an abstract type onto the stack.
Pushes a new abstract type onto the stack.
Pop the given number of elements from the output stack.
Pop a descriptor from the stack.
Adds the initialized type.
Returns the initialized type for the given abstract type.
Put abstracttype into bytevector.
Prune expired objects from the cache.
Visit a module.
Visits an outerclass of the current class.
Visit an annotation of the class descriptor. This method will be called for every node in the class
Gets the dbthreadsession.
Closes the threadsession.
Create the execution array.
Invokes the action method.
Read the request body from the stream.
Calculates the index of the first item of a page.
Calculates the first item index of a page request.
Returns true if the given value is equal to this one.
Convert a char array to a raw byte array.
Returns the index of the first occurrence of the match in the source array or - 1 if the
Resolve node name.
Resolve attribute name.
Loads the props from the given file.
Load properties from a file.
Load properties from an inputstream.
Load properties from a map.
Load properties from a map.
Load properties from classpath.
Returns the value of the key or the default value if the key does not exist.
Sets the value for the given key.
Extract the properties from the target map.
Extract props from target map.
Extract sub - props from the target map.
Get inner map.
Adds a map to the inner map.
Resolve active profiles.
Returns the names of all profiles.
Get the profiles for a given property keynamewildcard.
Adds a propertyinjectionpoint.
Adds a setinjectionpoint to the set.
Adds a methodinjectionpoint.
Adds the initmethodpoints to the list of methods.
Adds the given methods to the list of destroy methods.
Resolve the target class for the given proxy.
Inject target intowrapper.
Gets the wrappertype of the given wrapper class.
Finds the field descriptor for the given field name.
Gets the type of this field.
Resolves the keytype of the field.
Resolves the componenttype of this field.
Creates a jsonresult from the given object.
Construct a jsonresult from an exception.
Resolve httpmethod from methodname.
Checks if the string matches the pattern.
Resolve the loading for the given classname.
Load a class.
Gets the resource URL for the given resource name.
Wait for the current thread to finish.
Detect annotation type.
Build injection point.
implements the visitor to look for the classintrospector.
Returns an array of URLs for the given class.
Sets the bean.
Update the bean.
Loads the property descriptor.
Connect to database and configure dboom.
Adds an iterator to the list.
Prints the logo.
Stops the joytor.
Create a socket with the given host and port.
Create sslsocket.
Gets the default sslsocketfactory.
Gets the socket factory for the given proxy.
Generate a random string with the given number of characters.
Generate a random string.
Generates a random string of the given number of ranges.
Create an array instance of the given type.
Inject value in to object.
Convert the value to the target type.
Visit a service and a set of providers.
Create a default typecache instance.
Associates the specified value with the specified type.
Gets all method descriptors.
Resolves the IP address for the given hostname.
Get the ipasint value from a string.
Validates aagaintipadressv4 format.
Resolves the hostname of an IP address.
Download bytes from a URL.
Download a string from a URL.
Download a file from a URL.
Connect to the given hostname and port.
Connect to the given hostname and port.
Returns the index of the primitive class name.
Load the class with the given classname.
Load array class by componenttype.
Shuts down the bean instance.
Binary search for the element in the array.
Binary search for the element in the array using the given comparator.
Excludes the given strings.
Includes one or more strings.
Includes the template as a bean.
Start the tag at the given index.
Register a bean with madpc.
Resolve column dbsqltype.
Preprocess SQL string.
Create resultsetmapper.
Finds the generated key for the given type.
Populate generatedkeys.
Creates a wrapper for the bean.
Set bean.
Sets a map of parameters.
Set the objects of this q.
Insert a chunk after another one.
Looks up the descriptor for the given entity.
Find table descriptor by columnref.
Resolve table.
Resolves the class of the given object.
Appends a missing space to the stringbuilder.
Returns an enumeration of file parameter names.
Includes the given request and response to the given page.
Returns the URL for the given request.
Returns the request URI for the given httpservletrequest.
Resolves the parameter names for the given actionclassmethod.
Starts the application.
Stop the petite container.
Add a filter to the filter.
Add a filter to the filter for the given messageid.
Filter by from address.
Add a recipient to the email address.
Add a cc address to the email.
Filter by bcc address.
Sets the search criteria for the given flags.
Sets an email filter flag.
Filter by receiveddate operator.
Filter by sentdate operator.
Apply a size comparison to this filter.
ANDs the given emailfilters together.
ORs the given emailfilters.
Add a not term to the filter.
Concatenate two searchterms.
Encodes the given byte array into a base32 string.
Check if the request is gzipped.
Validates the target object against the validation context.
Validates the given object against the validation context.
Adds a profile to the list of enabled profiles
Sets the profiles to use.
Checks if profiles match.
Parse the request body.
Returns the amount of milliseconds since the epoch.
Add a juliandate to this date.
Subtract a juliandate from this one.
Sets the fraction for the given integer.
Emit a comment if conditional comments are enabled.
Prints an error message.
Create a hash for the given password.
Generates a pbkdf2 secret key.
Converts a hex string to a byte array.
Resolve providerdefinitions.
Sets the name of the email attachment.
Sets the contentid from nameifmissing.
Resolves the contenttype.
Parse a type signature.
Compute the size of the attribute table.
Put attributes.
Decodes the given string using the given encoding.
Decode a query string.
Starts the application.
Check connection provider.
Visit a method.
Visits this node the end of the node.
Create a methodsignaturevisitor.
Convert an array of objects to a csv string.
Convert a line to an array of strings.
Resolve a ctorinjection point.
Create a new advice classreader.
Gets the cached advicereader for the given advice.
Encrypt a string using UTF - 8.
Decrypt a string.
Returns the logger for the given name.
Sets the name.
Create an actionrequest.
Create wrapper.
Destroys a bean.
Shutdown all the destroyablebeans.
Gets the received emails.
Entry point for the clustered servicecontainer.
Runs the reporting function.
Print error message.
Printrate the number of messages and bytes.
Map an existing filereadonly to a mappedbytebuffer.
Closes the replay session.
Performs the actual work.
Returns the position of the log metadata buffer.
Offers an array of directbuffervectors to the buffer.
Appends a padding to the message.
Closes the session.
Poll for error response.
Stops a replay.
Event available image.
Unavailable image event.
Create a statusindicator reader for a channel.
Create a statusindicator reader for receive channelstatus.
Sets the limit of the buffer.
Appends a buffer to the buffer.
Polls for the next fragment.
Maps alossreport to a mappedbytebuffer.
Returns a snapshot of the streamcompositekey and streampositions.
Creates a default header for the given session stream and termid.
Add a direct buffer to the countermessageflyweight keybuffer.
Adds a labelbuffer to the countermessageflyweight.
Connect to a responsestream.
Try to connect to a responsestream.
Sends a close session request to the client.
Start recording.
Sends a stoprecording request.
Replays a sequence of messages.
Stops a replay.
List recordings.
List recordings for uri.
List recordings.
Extend a recording request.
Gets the recording position for the given recordingid correlationid and controlsessionid.
Get the stopposition for the given recording id correlationid and controlsessionid.
List recording subscriptions.
Checks if a UDP channel matches this tag.
Returns the inetsocketaddress for the given channel URI.
Returns the description of this multicast interface.
Adds a new destination to the list of destinations.
Insert a packet into the termrebuilder.
Find a controltoggle.
Adds a parameter to the request.
Returns the channel tag.
Gets the entitytag.
Adds a session id to a channel.
Gets the tag of the given string.
Append padding to the header.
Update the publisherlimit.
Allocate a new unsafebufferposition.
Returns the label name for the given typeid.
Scans the termbuffer to find the desired size of the frame.
Clears the fields.
Validates this channeluribuilder.
Sets the prefix of the channeluri.
Sets the media of the channeluristring.
Sets the controlmode.
Sets the termlength of the channeluristring.
Sets the termoffset.
Sets the linger number of characters to linger.
Closes the channel.
Check if a frame is valid.
Receive an inetsocketaddress from the receive datagram channel.
Attempt to assign a retransmitaction to a term.
Process timeouts.
Returns the string representation of the given status.
Allocate an atomic counter.
Reset the vector.
Validates this directbuffervector.
Validate and compute length.
Returns the window length of the producer.
Validate socketbufferlengths.
Validate pagesize.
Validate sessionidrange.
Validates that the given number of unblocktimeouts are valid.
Sets the errorcode.
Resets this instance to its initial state.
Encode clustermembers as a string.
Add memberstatus publications.
Close all publications of the clustermembers.
Checks if a quorum has active.
Returns the ranked position of a quorum of members.
Resets the logpositions of all cluster members.
Checks if the clustermembers havevotersreached position.
Returns true if the given members have a quorum of votes with the given candidate termid.
Checks if the clustermembers have a quorumvote with the given candidate termid.
Determines a member from an array of clustermembers.
Validates that the endpoints of a member are the same.
Checks if two clusters are the same endpoints.
Checks if a candidate is unanimous.
Checks if the candidate is a quorum candidate.
Checks if the members list contains endpoints with the same endpoints as the given endpoint.
Find the index of the member with the given id.
Remove a member from an array.
Returns the highest id of the cluster members.
Maps an existing cncfile to a mappedbytebuffer.
Checks if the driver is active.
Checks if the driver is active.
Checks if the driver is active.
Request driver termination.
Returns the length of a frame in volatile mode.
Puts a frame length in ascending order.
Write a frame type to the given buffer.
Writes the flags of a frame.
Writes a frametermoffset to the buffer.
Writes a frame termid to the given buffer.
Find a counterid by recording id.
Find counterid by session id.
Gets the recording id for the given counterid.
Checks if a counter is active.
Adds an application specific feedback frame to the frame.
Reloads the file.
Find the last term.
Create recoveryplan.
Create recoveryplan.
Appends a term to the cluster.
Appends a snapshot to the cluster.
Commits the logposition of a leadership term.
Writes the given entry to the cluster.
Closes the client.
Offer a vector to the publication.
Unblock the given termbuffers.
Returns the channel of the buffer.
Sets the channel of the image.
Checks that the given term length is valid.
Checks the page size.
casactivetermcount cass the log_active_term_count_offset.
Computes the position of an active term.
Compute the log length for the given term length and filepagesize
Store the default frame header.
Apply the default header to the termbuffer.
Rotates the log by the given termid.
Initialisetail with termid.
Returns the offset of the term with the given rawtail and termlength.
Returns the rawtailvolatile of the given metadatabuffer.
CAS rawtail.
Sets the token buffer for the terminatedriverflyweight token.
Allocate a counter.
Finds the counterid for the given countersreader.
Checks if a counter has been played.
Get snapshot recording id.
Convert flags to chars.
Sets the channel of the publication messageflyweight.
Offers a buffer to the cluster.
Wrap the buffer at the given offset and length.
Commits this frame to the buffer.
Abort the request.
Entry point for the mediadriver.
Closes the shared runners and receiver runners.
Computes the position of the frame.
Allocate a new counter.
Find the counterid for a service id.
Allocate an atomic counter.
Unmaps the cncbytebuffer.
Dispatches a recording descriptor to a consumer.
Adds a new slab to the pool. If the number of bytes in the pool exceeds the
Sets the byte at the given index.
Adds the given statistics to the list of nulls.
Convert an array type to a grouptype.
Convert a structtypeinfo to a grouptype.
Annotate a message at the given position.
End the previous bitpacked run.
Read one struct.
Reads all footers from a filestatus.
Read a list of footers from a summary file.
Reads a parquet footer from the given file.
Read the next rowgroup.
Read the next filtered rowgroup.
Reads a dictionary from the columnchunk metadata.
Adds a writer to the list of writers.
Remove a writer from the writer list.
Update the number of allocations and the total memorypool.
Register a new scale callback.
Starts the stream.
Start a block of data.
Starts a new column.
Writes a dictionarypage to the stream.
Write a page of data to the output stream.
Ends the current block.
Copy bytes from one seekable inputstream to another.
End the parquet file.
Merges a list of files into a parquet metadata object.
Merge a list of parquet files into a single parquet metadata file.
Writes a list of footers to a metadata file.
Merges the given filemetadata into the given global metadata.
Read the value.
Returns true if the schema is null or union.
Returns the first non - null non - null object from the given objects.
Make a value from a string and schema.
Create a thriftmetadata object from the extra metadata.
Convert a thriftclass to a thriftmetadata object.
Returns the extra metadata for this thrift.
Write null.
Writes a page of data to the file.
Initializes this deltabinarypacking object from the given stream.
Allocate valuesbuffer.
Checks if the expected enum is valid.
Calculate the bitwidths for the delta blockbuffer.
Throw if the throwable is assignable to the given excclass.
Returns the statistics for the given primitive type.
Create a builder for reading a primitive type.
Merges the given statistics into this one if it is empty.
Gets the non null schema from the given schema.
Create a new taskattemptcontext instance.
Invokes the given method on the given object.
Appends the membersdisplaystring.
Merges the fields of the given group.
Initialize the counterloader from the given reporter and configuration.
Gets the filter instance for the given configuration.
Reads all footers from parquet file.
Generate parquet input splits.
Writes a message to the log.
Validates the given mapping against the parquet schema.
Serializes a message descriptor to a string.
amend missing required fields.
Check the set.
Reads the file metadata from the given inputstream.
Close the record writer.
Sets the schema for the given job.
Adds a class to the parquettypetoclass map.
Checks that the given column type is a valid parquet type.
Casts the given long to an int.
Create a schemamapping from an arrow schema.
Create a schemamapping from a parquet messagetype and parquet schema.
Map the arrow schema to the parquet schema.
Writes a pagev2 header to the outputstream.
Skip to match.
Write object to confasbase64.
Remove a value from the cache.
Adds a new value to the cache.
Gets the current value for the given key.
Writes an object to the output.
Set the regular expression to use.
Writes the given content to the output stream.
Opens an inputstream for the given filename.
Creates a unboundrecordfilter for a column.
Convert a structtype to a thrift type.
Wrap a list repetition.
Create a grouptype for a list of elements.
Gets the merged keyvalue metadata.
Get a parquetinputsplit from a filesplit.
Get the fields by package name.
Resolve schemaaccess.
Gets the input files from a list of strings.
Checks the parquet files.
Gets the inputfiles from a directory.
Creates a new unboundrecordfilter that accepts records from the given startpos and pagesize.
Returns a consumer that consumes all elements of a class.
Initializes the partitioninfo map.
Merge a tuple into a summarydata object.
Sum up a tuple to a schema.
Read a struct from the stream.
Read a map entry.
Writes an integer to the stream.
Reads a little endian int from the given bytebuffer at the given offset.
Sets the schema for the given job.
Create topicifnotexists.
Duplicate pipelinestagebeans.
Creates a list of interceptorbeans for the given stagelib and stageconfiguration.
Create an interceptor bean.
Parse a schema from a string.
Converts milliseconds to days.
Gets the avro schema from the header.
Upgrade v1 to v2.
Copy a list of blobstore resources to a staging directory.
Resets this object to its initial state.
Report the health of a thread.
Register a thread as a healthreportgauge.
Store controlhub configurations.
Authenticates the given webcredential.
Upgrade the pipeline configuration ifnecessary.
Upgrade a stage library task to a new stage configuration.
Upgrades the stagedefinition to the stagedefinition definition.
Upgrades the service definition if needed.
Upgrade stageifneeded.
Gets the fields to null.
Checks if the given name is a system class.
Adds the given element to the end of the list.
Adds an element to the end of the list.
Returns the optional value associated with the given key or the default value if the key does not exist
Adds the reportederrors ifneeded to the snapshotsofallstagesoutput
Gets a descriptor from a proto descriptor file.
Gets all file descriptors from a set.
Populate defaults and extensions.
Gets the descriptor.
Converts a protobuf message to a sdc field.
Create a dynamic message from a sdcfieldtoprotobufmsg.
Create a dynamic message from a sdcfield to protobufmsg.
Upgrades a list of configs to jerseyconfigbean.
Check connection.
Convert a kudutype to a field type.
Create a field from a rowresult.
Intercepts the given records using the given interceptors.
Gets the text of the buffer.
Add missing configurations to stagelibrary.
Parse the response and return the record.
Adds the response headers to the record.
Write the response header to the record.
Write response header to record header.
Saves the metadata to disk.
Configure the client based on the list of issues.
Parse the headers for the request.
Increment sourceoffset by the given increment.
Parses apaginated result.
Adds the response headers to the given header.
Resolves the request headers.
Process the response.
Check if a property exists in the configuration.
Convert a dataparserexception to a dataparserexception.
Converts an exception to a datageneratorexception.
Gets the credentials for the given path.
This method is used to override the stageoutputs to override.
Copy a string to a buffer.
Removes the logicalduplicates from the given packages.
Find the next mainline in the livefilechunk.
Resolve a livefilechunk.
Closes the connection.
Escapes a quoted substring.
Gets the flowcontrolsettings.
Gets the channel provider.
Puts a batch of results into the store.
Compile an expression into a grok object.
digest expressionaux.
Adds a dictionary to the inputstream.
Adds a dictionary to this reader.
Stops the aggregator.
Rolls the roll over all the aggregators.
Serialize an object to a string.
Deserialize an object from a string.
Deserialize an object from a file.
Writes a record to the output stream.
Resolves an EL expression to a string.
Generate the innerfield from the list.
Gets the tablename from the metadata record.
Gets the database name for the given metadata record.
Gets the internal field from the metadatarecord.
Gets the location of the given metadata record.
Gets the custom location of the given metadata record.
Gets the avro schema from the metadatarecord.
Gets the dataformat from a metadatarecord.
Create a new schema metadata fieldbuilder.
Validates the partitioninformation.
Generate the partition path for a linkedhashmap.
Serialize schema to hdfs.
Sets the parameters for the given record.
Gets the configuration.
Parse rfc3164time.
Formats the given string using the given template.
Starts a batch context.
Checks if the record contains any of the solrfields.
Filters the fieldnames by removing the autogenerated fieldnames from the list of fieldnames.
Sendon recorderrorexception to handler.
Parses the given jarname into an optional dependency.
Parses a dependency from a URL.
Gets the instance of couchbaseconnector.
Closes the connection.
Gets the label from a string code.
Verifies that a dependency exists in the definitions map.
Gets the operation from the header.
Builds a subdoc mutation.
Generate alter table sqlstring.
Configures this client with the given configurations.
Takes all messages from the control channel.
Commits the consumer at the given offset.
Called when a consumer error occurs.
Injects a stage into the given object.
Returns the descriptions of the hidestage.
Gets the lineagepublisherdefinition.
Formats a column name to upper case.
Formats the given value as a string.
Get information about a pipeline
Create a draft pipeline fragment.
Get a list of pipelines.
Imports a pipeline fragment from a pipeline fragment.
Gets the filepath for a record.
Gets the operation from record.
Gets the fieldpath for the given columnname.
Poll an enrichedevent from the queue.
Gets the runner from the queue.
Gets the idlerunner.
Return a runner to the pipeline.
Destroys the pipeline.
Validate that the pipeline is not destroyed.
Checks if the given stream exists.
Get the last shard id of a kinesis stream
Process the queue.
Override handlesqlexception to add onrecorderrorexceptions.
Gets the hash code for a column.
Compare two files.
Retrieves the pidiffeasible for the given process.
Validate and extract fields to hash.
Gets the proxyuserinformation for a user.
Roll the statistics.
Returns a snapshot of the activestats.
Ensures that a directory exists.
Writes a batch of records to the database.
Write a batch of records to the table.
Writes a record to the database.
Generate no more data event.
Detect a new partition.
Update the record for hdfs.
Process a group and value.
Checks if two stages have the same version.
Entry point for the bootstrapcluster.
Configure authandbuildclient.
Resolves a set of headers.
Evaluate a method expression and return the httpmethod.
Fill nulltypes.
Gets the null value of a field from a record.
Load a schema from the registry.
Register a schema with the registry.
Load a schema from the registry.
Gets the schemaid from subject.
Load a schema from the registry.
Writes a schemaid to the given outputstream.
Detects a schema ID from a byte array.
Gets the default values for the given schema.
Parses a list of records.
Logs the details of this dependency.
Gets the badrecords.
Initialize this stage with the given configuration.
Gets the outwardedgevertices for the given vertex.
Gets the inwardedgevertices for a vertex.
Serialize an offset map to a string.
Deserializes an offset map from the last source offset.
Sends a report to the queue.
Gets a report by id.
Checks if the checkpoint file exists or the backup file exists.
Write offsets to mainoffsetfile.
Delete a blob.
Handles an error.
Handles an archive.
Gets the reader.
Releases a reader.
Sets the dpmbaseurl.
Add a default header.
Parse a date from a string.
Escapes the given string.
Gets the client.
Initialize the gpudb connection.
Get the metadata for a table.
Create a builder for the given stage context and toevent context.
Builds a schema from the given fields and levels.
Convert fromoracle to sdccode.
Add jars to job.
Check fieldorderbylist.
Checks the conditionexpressions for a field name.
Gets the offsetlag for a file.
Starts the bootstrap application with the given instrumentation.
Returns the parallelism of this stage.
Runs a query on the table.
Get the table description.
Validate tableacceptsinserts.
Returns the columntype of the given field.
Checks if the type is nullable.
Get the schema of the given table.
Get column properties from showtableresponse.
Get the class for the given type name.
Initializes the Aerospike client.
Gets the topic of the given record.
Gets the inputstream from the file.
Get the outputstream for this file.
Checks if the file exists.
Parse fspermission.
Validate all services available.
Create a simple aggregator instance.
Gets the aggregator unit for the given class.
Creates an aggregator data instance for the given class name and time windowmillis.
Create a groupby aggregation.
Start the data provider.
Stops the aggregator.
Rolls the given new datawindowendtimemillis to the aggregator.
Releases the login manager.
Converts a glob to a regular expression.
Lists all objects in amazons3 sorted order.
Stops the pipeline.
Produce empty batches for idle runners.
Create a failure snapshot for the pipeline.
Convert a record to a boundstatement.
Sets the configuration to the new configuration.
Generate lookupkey.
Reads a line from the reader and writes it to the stringbuilder.
Roll the usagetimer.
enabledpm - enabledpm - enabledpm
Disables a DPM.
Normalizes the base URL.
Retrieve the user token from the given url.
Logout the user from the DPM.
Update the token file with the appauthtoken.
Update dpm properties.
Returns the final schema field for a field.
Create a complex schema for a field.
Gets the number of decimalscaleorprecision for a field.
Gets the default value for the given schema.
Initializes the metrics if needed.
Compares two wrapped files.
Returns the index of the group with the given index.
Returns a list of group names.
Returns true if the character at the given position is escaped.
Checks if is slashescapedchar.
Checks if is insidecharclass.
Count the number of openparens in a string.
Extract the groupinfo from a named pattern.
Replaces all occurrences of a regular expression with a replacement string.
This method is used to get the response from the server.
Refresh the schema for the given schema and table
Returns true if the given entry has expired.
Returns the offset of the current file.
Fastforwards the buffer to the underlying channel.
Convert string to appropriatenumber.
Parse a single part.
Parses the values.
Lookup the primarykeys for the table.
Create custom fieldmappings.
Returns the name of the field type.
Gets the tablename.
Sets the primarykeys of the given record.
Handles a sqlexception.
Process the pipeline.
Prepare the pipebatch for the given batchcontext.
Finish a batchcontext.
Flattenentirerecord.
Create a detachedstageruntime instance.
Executes the given record.
Gets the columnstoparameters map.
Gets the condition for the given partitioncolumn and offsetcomparison.
Validates that the given offset is valid for stored and specified offset.
Gets the requesteddefinitions.
Gets the nonempty arguments.
Gets the operation.
Convert bytes to displayformat.
Scans a livefile.
Returns the number of pending files.
Checks if the given name is blacklisted.
Returns true if the set of versions matches the expected versions.
Starts the sparkstreamingbinding.
Propagate runtimeconfiguration.
Validates the reportdescription.
Upgrade v1 to v2.
Extract named groups from rawdata.
Send a consumer commit message to the producer queue.
Create the embeddedsdc object.
Sets the fields in record.
Gets the remote pipelines with changes.
Create a remotedatacollectorresult from a future.
Create a gauge with the given name and pipeline name.
Gets the parameters for the columns to fields.
Generate the headerattrs for the given file.
Validates a record.
Handle old tempfiles.
Gets theavro inputstream.
Get a generic datafilereader from an inputstream.
Write parquet to tempparquet file.
Checks if the field is encrypted.
Checks if the given field is encrypted.
Check input decrypt.
Performs decryption on the given field.
Prepare encryption.
Sets the pattern used by this matcher.
Appends a string replacement to the matcher.
Returns a map of named groups.
Replace all properties of this pattern with the given replacement.
Get the value of a global variable.
Create the startevent record.
Create a stop event record.
Fix offset.
Extracts a runtime value from a field.
Executealtertableaddpartitionquery.
Executealtertablesettblpropertiesquery.
Executes describedatabase.
Execute a hive query.
Executes the given query in the hiveconfigbean.
Executes a batch.
Runs the given consumer for each throwing consumer.
Gets the offsetcommittrigger.
Returns true if any of the pipes are stopped.
Accept a consumer throwing a pipelineruntimeexception and pipe p.
Gets the insertid for a record.
Gets the value of a field from a fieldpath.
Set fragment in record.
Sets document in record.
Sets the n1ql row in the record.
Handles the partials3object for metadata format.
Returns true if the incomplete transactions contains the given seqno.
Returns a new instance of the given class loader using the given supplier.
Logout the user.
Clears the exceptions and stagelibexceptions
Replace variables in path.
Ensures that the given path is consistent with the current thread s context.
Starts the emrbinding application.
Get the directory path for the given date and record
Renames the given path to the final name.
Should roll a record?
Checks if the given string matches the given pattern with the given URI template variables.
Returns the offsets for this filecontext.
Returns the number of remaining wait time between starttime and maxwaittimemillis.
Gets the offsetslag for the given offset map.
Create a stagelibrarydelegate instance.
Create an instance of the stagelibrarydelegate definitition.
Get the metricvalue for the metricregistry metricid metrictype and metricelement.
Find the end of the header.
Returns the size of the body of the request.
Saves a bytebuffer to a temporary file.
Create an sslserversocketfactory from a keyandtruststoreclasspathpath and passphrase.
Gets the mimetype for a file.
Handle an ihttpsession.
Stop the server and wait for it to finish.
Adds the mappings to the router.
Sends the body to the outputstream.
Creates a new fixed length response.
Returns true if this request should use gzip whenaccepted.
Adds a cookie to the cookie queue.
Unloads the queue.
Decodes the given base64 - encoded value.
Encodes a cookie value to a base64 encoded string.
Sets the tablename.
Returns the name of the principal.
Insert the sessionrepositoryfilter into the filter registry.
Resolves the principal name for the given session.
Gets a session from the cache.
Gets the JNDI name for the given modelnode.
Returns the canonical parametertypes for the given viewmethod.
Registers a synchronization to the transaction.
Invoked before completion.
Gets the current transaction.
Deploy the kernel deployment.
Returns true if the persistenceunitnameidentifies the cache region name of the persistenceunit.
Gets the server config dependencies.
Decrement the readlockcount.
Increments the number of readlocks.
Adds a service to the deployment archive.
The handlerestorationcalculation method is used to calculate the expiration of the nextexpiration.
Deploy the module.
Make toplevelbdasvisible from static modules.
Create a jsearchive metadata object.
Sets the configurationname and file.
Gets the security metadata.
Gets the servleturlpatternsmappings.
Gets the servletclassmappings for a list of pojoendpoints.
Resolves the view descriptions.
Gets the availableconnectors for the given operation.
Parse the coreenvironmentelement.
Parse the processidenvironmentelement.
Returns the pathaddress of the given operation.
Sets the address of the modelnode.
Gets the attribute value for the given operation.
Returns true if the given operation is a includedefaults operation.
Create a composite operation.
Create a add operation with the given parameters.
Create an ADD operation for the given address and index.
Create a read attribute operation.
Create a write attribute operation.
Create an undefine attribute operation.
Gets the value of the context.
Adds a urlcontextfactory to a scheme.
Remove a urlcontextfactory from a scheme.
Loads all validationproviders from the given classloader.
Modify the deployment.
Configure the endpoints for the deployment.
Modify the contextroot of the deployment.
Get the transport class name from the deployment.
Sets the runas identity.
poprunasidentity poprunas identity.
Process management.
Inject a property value into an object.
Returns true if classtype and propertytype are equal.
Find a method by name and propertytype.
Find field by name and type.
Derive usefulinfo from the httpservletrequest.
Run a standalone collect command.
Collects the server environment information.
Register a resourceadapter deployment.
Unregister a resourceadapterdeployment.
Register the transformations for the given subsystem.
Write parameters to the outputstream.
Read an exception from the inputstream.
Gets the lockowner.
Releases a lock on an instance.
Adds a log entry to the log file.
Adds cdiflag to warmetadata.
Gets the componentview.
Invoke an endpoint.
Returns the viewmethod for the given seimethod.
Checks if seimethod matches viewmethod.
Gets the EJB security metadata for the given endpoint.
Get the domain from the old security domain and the next domain.
Ensures that the two security domains are the same.
Sets the idlname.
Gets the absolute name of the entry.
Create a new jndiname from the given name.
Deploys the JBoss deployment.
Handles a request.
Returns true if the transaction is in a transaction.
Gets the cached transactionsynchronizationregistry.
Gets the cached connection factory.
Returns the last component of the given name.
Checks if the given name is empty or not.
Create a namenotfoundexception with the given name and context name.
Creates a namingexception with the given message and cause.
Create a namingexception with the given message cause and remainingname.
Create a cannotproceedexception.
Creates a namingenumeration for the given collection.
Rebinds an object to the given name.
Gets the activemqcomponentcontrol.
Create a componentinstance from an object.
Gets the resteasyspring virtualfile.
Resolves the runtime name for the given pathelement.
Creates a listenerbuilder for the given persistentresourcedefinition.
Returns the primitiveanalysis for the given class.
Shuts down the engine.
Returns a list of URL patterns that match the given urlpattern.
Gets the jbossservlets metadata.
Gets the servletmappings.
Get the list of securityconstraints from jbosswebmd.
Gets the loginconfig metadata.
Gets the contextparams from jbosswebmd.
Gets the webresourcecollections metadata.
Gets the servlet initparams.
Create a new securityconstraint metadata.
Create a new webresourcecollection metadata.
Create a new jbossservlet metadata.
Create a new servletmapping metadata.
Create a new authconstraint metadata.
Create a new userdataconstraint.
Create a new paramvalue metadata.
Creates a new paramvalue metadata object.
Register sessionbeaninterceptors.
Stop the bootstrap service.
Returns the JNDI name for the given modelnode.
Resolve a simple attribute definition.
Returns the type of the given urlpattern.
Checks if the given server and resourceadapter are targetspooled connection factory.
Checks if the given resourceadapter is an external pooled connection factory.
Gets the activemqservername.
Gets the default persistenceunitname.
Start the activity.
Unregister this activity from the local transactioncontext.
Suspend the transaction context.
Resume the server activity.
Informs the transaction manager that an invocation has completed.
Called when a transaction is created.
Start the servicebasednamingstore.
Stop the servicebasednamingstore.
Get the servicename for the capabilitybasename and dynamic parts.
Create a list of resourceroots.
Get all classloaders for the deploymentunit.
Determines if the persistenceunit metadata need classfiletransformer.
Checks if twophase bootstrap is allowed for persistenceunit metadata.
Checks if the persistenceunit metadata allows default data source use.
Skipmixedsynchronizationtypecheck.
Get orb from server and port
Initialize an orb from an object.
Initialize methodhandles.
Sets the active namingstore.
Validate default values.
Check parameter type.
Looks up the defaultvalue of an annotation in annotationarr.
Validate basetype.
Gets the deferredentitymanagers.
Returns a string representation of a status.
Adds the dependencies of the given classification to the given properties.
Extracts the databasedialects.
This method is called when the connection has been cleared and the database has been cleared.
Identifies a timer with the given name.
Checks the database.
Convert a string to a scheduler date.
Sets the nodename of the timer.
Mark a deploymentunit as attachment to its parent.
Read the parameters from the inputstream.
Writes the retval to the outputstream.
Writes an exception to the outputstream.
Looks up the u in the given lookup starting from the given index.
Starts the FSM creation process. This method is called when the FSM callstack thread
Finishes the FSM creation process.
Gets the current invocationstack invocation stack.
Push a list of extendedentitymanagers to the call stack.
Pop a call from the stack.
Gets the current call.
Deploy the module.
Gets the idlname of a class.
Insert any primitive into any object.
Convert a string to an idlname.
Checks if the given string is a reserved idl keyword.
Returns the signature of the given class.
Returns the signature of the given method.
Convert a primitive type to its idlname.
Returns the permission for the given name.
Get or create transactionscopedentitymanager.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Convert securityrole to modelnode.
Returns the most recent entity version of the given timerimpl.
Gets the timers for a timed object.
Gets the directory for the timedobjectid.
Add a naminglistener to the target scope.
Remove a naminglistener.
Fire a naming event.
Returns a consumer that closes the autocloseable object.
Adds a privatecredential to the subject.
Get an object instance from the environment.
Add the txmanagementinterceptor for view.
Inserts a subst of from to to.
Create the invm transportconfiguration.
Add a relative name to the deploymentunit.
Gets the root deploymentunit of the deploymentunit.
Gets the servicename.
Create viewconfiguration.
Creates a viewbindinginjectionsource service.
Gets the view interceptors for the given method.
Adds a view interceptor to all cached methods.
Adds a view interceptor for the given method.
Gets the client interceptors for the given method.
Adds a client interceptor to the list of interceptors.
Adds a client interceptor.
Put private data into privatedata map.
Throw an exception if an unexpected element is encountered.
Gets jaxws ejbendpoints.
Gets the jaxwspojos.
Gets the endpoint name from the servlet metadata.
Gets the endpointclassname from the servlet metadata.
Gets the servlet metadata for the servlet with the given name.
Gets the required attachment for the given key.
Gets optional attachment.
Gets the jbossweb metadata for the deployment unit.
Gets jbossportcomponentmetadata.
Gets webservice metadata ejbendpoint.
Gets the contextroot.
Gets the class for the given name.
Returns the resource URL for the given resource name.
Returns a collection of resources for the given resource name.
Returns a list of servlet resources for the given path.
Pop call from nontxstack.
Gets the entitymanager for the given scoped name.
Register a cleanuplistener to be notified when the transaction is cleaned up.
Deploys the deployment unit if it is not already deployed.
Is all fields public?
Create a new http endpoint.
Create a new deployment.
Checks if the deploymentunit is a jaxrs deployment.
Sets the next timeout.
Sets the timerstate.
Merge the list of resteasy deploymentdata into this one.
Deploy the module.
Add a componentconfigurator to the list of remote transactions.
Gets the allcontainerinterceptors.
Determine if the given method is a methodlevel.
Check that only one of the two elements are required.
Get the type of the given class.
Gets the componenttype of the parameterizedtype at the given index.
Parse a name from a string.
Convert an insstring to a stringified components.
Parse a namecomponent from a string.
Shuts down the object.
Convert servant to reference.
Authenticates the user using the given username and password.
Checks if the class is a type match.
Lookup the managed reference for the given name.
Unbind a named service.
Instantiates a bean.
Configure bean metadata.
Dispatch a lifecyclejoinpoint.
Get the current namespacecontextselector.
Convert a servicename to a beanname.
Convert a class to a servicename.
Returns the description of the module with the given name.
Process annotations.
Preparse steps for persistence unit metadata.
Validates the descriptor.
Create the deployment descriptor.
Create web application descriptor.
Gets authmethod.
Deploy the service descriptor.
Handle stateless sessionbean.
Create a stub class from a class.
Gets the anonymous objectid.
Gets the list of persistenceproviders.
Remove all persistenceproviders from the cache.
Add a persistenceprovider to the deployment specific persistenceproviders.
Find the parent modulecl of the given classloader.
Deploy the jbossservicexml descriptor if it exists.
Adds the persistenceunitmetadata holders to the deploymentphasecontext if the pulist size exceeds the
Sets the annotation indexes for the deploymentunit.
Gets persistenceprovideradaptor.
Save persistenceprovideradaptor for shared deployments.
Lookup the persistenceprovider for the given deploymentunit.
Gets annotated classes.
Create an EJB archive metadata object.
Build enterprisebean metadata.
Refresh the participant.
Gets the analysis for the given class.
Lookup the workdone for the given class.
Creates a workinprogress analysis for the given class.
Gets the idlmodulename.
Convert an integer to a hexadecimal string.
Converts a long to a hexadecimal string.
Returns true if the method is an accessor.
Returns true if the method is amutator.
Checks if the method has any non - appexceptions.
Returns the attributereadname of the given name.
Returns the name of the attribute.
Fixupoverloadedoperationnames.
Fix upcasenames.
Escapes a string for use as a hexidecimal name.
Parse an environment element.
Parse the default contextpropagationelement.
Process the attributes of an extendedstreamreader.
Loads the persistenceproviders for the given module name.
Create a new addstephandler.
Deploy this unit.
Write an attribute to the extendedstreamwriter.
Create a remote session.
Infer the destination name from the given address.
Registers endpoint handlers for the given endpoint class.
Gets the jobxmlnames for the given jobname.
Initialize the classloader.
Gets the request URI from the request.
Create a resolveresult from a URL and a hashtable.
Lookup an object by name.
Binds an object to a composite name.
Call the unbind method.
Returns a namingenumeration that lists all bindings for the given name.
Call the destroy method on the namingcontext.
Destroy a subcontext.
Call bindnewcontext.
Create a subcontext with the given name.
Lookup an object by name.
Adds a property value to the environment.
Remove an object from the environment.
Adds the transformations to the builder.
Remove a securitydomain from the securitymgrmap.
Lookup a JNDI context.
Creates a modularreference for the given type and factory class.
Create a modularreference for the given class and factory class.
Create a modularreference with the given type refaddr and factoryclass.
Returns the localidltype for the given typecode.
Waits for a service controller to become up.
Computes the masked password.
Initialize the security vault.
Start a new security vault session.
Displays the display of an attribute created.
Display the configuration of the vault.
Returns a string representation of the vault configuration.
If the value is null throw an exception.
Gets the deployment servicename.
Inserts the value into any object.
Returns true if the given permission implies this permission.
Returns the action string.
Returns the name of the log.
Send a statechangenotification.
Gets the value for the given type.
Gets the contextservicename.
Gets the allinterceptors.
Adds a method interceptor.
Adds a dependency to this component.
Gets the interceptors for the specified method.
Gets the around timeout interceptors for the given method.
Add a timeoutview interceptor.
Adds an interceptor factory to the list of aroundconstruct interceptors.
Adds a postconstruct interceptor.
Adds a predestroy interceptor to the list of predestroy interceptors.
Adds a prepassivateinterceptor.
Adds a postactivate interceptor.
Sets the componentcreateservicefactory.
Remove the JNDI aliases from the operationcontext.
Accept the client context builder.
Returns the servicename of a component.
Returns the contextservicename of the given module.
Bind info for an environment entry.
Create a bindinfo for the given jndiname.
Gets the cache.
Gets the valuemembers.
Get the valuemembers for the typecode.
Create the subsystem root modelnode.
Parses the configuration.
Start the naming service.
Returns the name of the joboperator service.
Add a component description to the deployment.
Add a messagedestination.
Get the view descriptions for a given viewtype and deployment root.
Returns a set of component descriptions for a given component name.
Get the view descriptions for the given component name viewname and viewname.
Resolves a message destination.
Build the transformations 2. 0.
Reject defined attribute with default value.
Pop identity from contextstatecache.
Load idsmanually.
Check the versionintegrity.
Computes the slot for the given jsfversion.
Gets the constant typecode for the given class.
Adds a typecode to the typecode map.
Returns the moduledefimpl if the given string is the same as the given string.
Adds the interfaces of the containeranalysis to the list of interfaces.
Adds the abstractbasevaluetypes to the containeranalysis.
Adds the class if it is primitive.
Adds an interface to the interfacedefimpl.
This method adds a value analysis to the valuedefimpl.
Adds an exception analysis to the exceptiondefimpl
Gets the classlevelinjectiontype.
Starts the store.
Closes the store and closes it.
Check if the given methodtype is allowed.
Check transactionsync.
Gets all componentclasses for the deploymentunit.
Gets the waitingontxcompletiontimers resource.
Gets extra parameters.
Gets the parameters.
Convert a type to a class.
Convert a value to a class.
Returns the types of the given values.
Checks if the typenames and typeinfos are equal.
Returns the next binding in the list.
Returns true if more elements are available.
Map an omg. cosnaming. binding to a naming. binding.
Observes resources.
Shuts down the healthcheck instance.
Create a handle for the given locator.
Convert an enum value to an enum value.
Skip amount amount bytes from the inputstream.
Checks that two elements are neither required.
Add a component description to this module.
Add a set of classloaders to the deployment.
Unbind a component.
Lookup an object by name.
Returns a list of nameclasspair for the given name.
Get a list of bindings for the given name.
Adds a contexthandlefactory to this factory.
Saves the context object properties to a chained setupcontexthandle
Create the iosubsystem if it exists.
Create thewelcomecontenthandler.
Get the bean from the pool.
Calculate the operationanalysismap.
Collect resource metrics.
Prepare the deployment unit.
Deploy a servicetarget.
Publish the deployment.
Stop the web application.
Start the deployment.
Register endpointconfig.
Attempt to retry a timer.
Post timeout processing.
Gets the declared methods of a class.
Gets the declared fields of a class.
Gets a constructor from a class.
Gets a method from a class.
Adds the messaging_activemq extension if it exists.
Checks if a parameter is allowed for a given resource type.
Migrate generic transport to a new factory class.
Cancels the waiting or waiting flag.
Runs if not canceled.
Sets the type of the global reference.
Returns true if this function can execute indexed function without indexing.
Find all classes in a directory.
Returns a list of classes of the given interface.
Gets the generic multivaluetype.
Evaluates an irecord.
Derives the requested fieldtype from the orecord.
Update an orecord.
Find a record by id.
Get minimal set of nodes for sharded query.
Move flattededequalities left.
Adds the orderbyprojections to the queryplanninginfo.
Extract subqueries from queryplanninginfo.
Checks if the cluster name is one of the filterclusters.
Handle class with index for sort only.
Returns true if the given class is a diamondhierarchy.
Returns the orderdirection of the queryplanninginfo.
Returns true if the given key condition requires multiple index lookups.
Find the best index for the descriptor.
Compute the commonfactor of the list of indexsearchdescriptors.
Create a new odocumentfieldhandlingstrategy.
Allow a resourcegeneric to access a role.
Checks if a resourcegeneric has a rule defined.
Gets the compact serverstatus.
Initialize the systemdatabase.
Load local databases.
Called when a member is removed from the cluster.
Attempts to elect a new lockmanager for this hazelcastinstance.
Assign a lockmanager from the cluster.
Commits the commit.
Rollback the transaction.
Update identity after recordcommit.
Update the local cache after roll back.
Prepare for file creation or replace.
Atomic moves the source file to the target file using fallback.
Returns a list of patterns that are disjoint from this pattern.
Execute only locally.
Appends a sequence of characters.
Returns true if this connection is connected.
Merges two bytebuffers into a short.
Split a short into two byte buffers.
Execute the ocommand.
Puts a single value into the indexfulltext.
Remove an object from the dictionary.
Execute this query and return the result as a list.
Executes the first command and returns the result.
Create the channel.
Checks the number of regions in the buffer.
Replaces the content of the file with the new content.
Execute an ocommand request.
This method is called when an end request is received.
Add a host to the host list.
Sends a request to an ochannelbinaryasynchclient.
Gets the oobjectdatabasetx instance.
Gets the oclientconnection for the given channel id.
Kill the connection.
Interrupt a channel.
Disconnects the client from the given channel.
Push all the client configurations to the list of clients.
Swap the value at the given index.
Releases all locks.
Synchronize the schema.
Update the metadata for a metric.
Moves the iterator to the last record in the current cluster.
Reads the next character from the stream.
Executes the query.
Called when an asyncreplication error occurs.
Register an ocompression class.
Get the openfileslimit.
Returns true if this expression allows an indexed function execution on the target expression.
Moves the buffer to the given position.
Fills the buffer with the specified number of bytes.
Execute until return.
Executes the current scriptlinestep and waits for it to complete.
Evaluate the irecord.
Execute the parseridtarget.
Loads the given configuration from the storage.
Parse the given ocommandrequest.
Execute the request with the given input parameters.
Update the schedule starting at.
Adds an index definition.
Splits the aggregate foraggregation.
Converts an oresult to an objectdeterminetype.
Gets the collate for the given document.
Returns the value of this property as a string.
Advances the probe to the next power of two.
Executes the command.
Builds an odocument from a file.
Checks the password against the hash algorithm and algorithm.
Create a hash of the given string using the given algorithm.
Checks if the algorithm is supported.
Create an index.
Returns an iterable over the vertices in the graph.
Returns an iterable over the edges of the graph.
Gets the partition key.
Returns the distributed timeout for this task.
Returns the set of features.
Checks if the changes are filled up to the given page index.
Parse timeout.
Parses the lock strategy.
Create a cluster.
Frees the cluster with the given cid.
Starts the underlying profiler.
Shuts down the underlying application.
Creates an oscriptresultset for the given entity using the given transformer.
Grant access to a resourcegeneric.
Revoke an access to a resourcegeneric.
Evaluates the compiled filter against the given irecord.
Resets the table to the initial state.
Returns the index of the given item in the seed.
Spread a number to a random number.
Create an index.
Drops all indexes related to this object.
Gets the index of the global ref.
Gets the linked class.
Serialize this orecord element to a stream.
Remove a listener from the list.
Register a database.
Wait for a request to finish.
Create a copy of the odatabasedocumentembedded object
Try merging two oridbags.
Replaces the object with an osbtree.
Transforms an object to a java8methodisarray.
Execute the ocommand.
Closes all resources in the pools.
On storageunregistered.
Gets the names of all functions.
Gets the names of all ocollate factories.
Returns a set of command names.
Gets the fieldsize and type from the current position.
Writes the status of the response.
Write the headers to the response.
Write records to the response.
Write a record to the response.
Send an object to the response.
Sends a stream to the response.
Open an object database.
Close the connection pool.
This method listens for changes to a collection.
Completes the operation of a component.
Push a set of performancecounters to each component.
Adds a writcachecounters holder to the snapshot.
Adds a storagecounters holder to the snapshot.
Push a walcounters holder to the snapshot.
Add a performancecounters holder for a component.
Stop writing cache flush timer.
Stops the timer and updates the fuzzycheckpointcount and fuzzycheckpointtime.
Stop the fullcheckpoint timer.
Stops the commit timer.
Stop a nanorecord timer.
Stop walflush timer.
Parse the given string into an ostatement object.
Initializes the receivemessages thread.
Initialize the disconnect timer.
Removes the record from the graph.
Sets the value of a property.
Remove a property from the record.
Check for class in schema.
Wrap an oindex cursor.
Define an ographmlimportstrategy for a vertex.
Define edge attribute strategy.
Gets new recordentries by class.
Gets a list of new recordentries by clusterids.
Adds an index entry.
Merges the source set into the target set. If target is null then the source set is
Return true if the irecord is an updateedge or updateedge.
Can execute indexed function without index.
Prepares a set of comparables for the given keys.
Writes a page to the cache.
Reads a page from the disk.
Truncates the buffer to the given page index.
Opens the journal file.
Checks if the cluster is replicationactive.
Gets the new node strategy.
Returns true if the execution mode is synchronous.
Checks if the icluster is ready to write.
Get server cluster map.
Returns the set of servers configured for the given cluster names.
Checks if a server is contained in a collection of clusters.
Checks if a server is contained in a cluster.
Gets the list of master servers.
Gets all configured servers.
Gets the clustersonserver for the given inodename.
Gets the set of clusters owned by server.
Gets the owner of the cluster.
Gets the owner of the configured cluster.
Gets the list of configured servers.
Returns the set of registered servers.
Get the set of datacenters.
Get datacenter writequorum.
Checks if the cluster is sharded.
Gets the servers for the given datacenter.
Get datacenter of server.
Gets the global readquorum.
Gets the writequorum for the given cluster and server.
Gets the cluster configuration.
Gets the datacenter configuration.
Clear the initialization stack.
Gets an index by name.
Drops an index.
Adds a new vertex to the graph.
Add an edge to the orientedge.
Gets the orientvertex of the given object.
Returns an iterable of vertices of the given class.
Returns an iterable of edges of the given class.
This method will take a orientedge object and wrap it directly in a orientedge.
Reuse the given odatabase.
Shutdown the database.
Returns the base type of this orientvertextype.
Returns the orientvertextype for the given itypename.
Create a new orientvertextype.
Drop a vertex type from the database.
Gets the edgetype for the given itypename.
Create an edgetype for the given iclassname and clusters.
Returns the orientelement with the given id.
Drops an index for the given key.
Remove a backgroundexceptionlistener.
Fires a backgrounddataflushexception event to all registered listeners.
Stop monitoring the system and storage.
Registers a new managed bean.
Unregister a managed bean.
Fetch write cache counters holder.
Fetch system counters.
Fetch the componentcounters.
Returns the value of an oserverentryconfiguration property.
Detach an object from the oobjectentityserializer.
Gets the version of an object.
Execute an ocommand request.
Sets the dirty state of an object.
Unset the dirty state of an object.
Gets the index types.
Gets the index engines.
Gets the list of missing nodes.
Returns a list of odistributedresponses for conflicts.
Gets the best responsesgroup.
Computes the quorum response.
Gets received responses.
Retrieve an executionplan from the cache.
Returns true if the left allows an indexed function execution on the target.
Get library.
Release a databaseengine.
Gets the next position of the given atomic operation.
Update the size of the collection.
Gets the value at the given index.
Canbeusedbyorderbyafterfilter returns true if the index can be used by equals filter
Returns the index of outside characters of the given string.
Tries to jump whitespaces from the given charactersequence starting at the given position.
Tries to jump the given charactersequence to the given position.
Sets the fetchplan.
Enqueue a repairrecord.
Cancel a repairrecord.
Enqueue a repaircluster.
Get the dependencies of a pattern.
Create apojo object.
Register entity classes.
Registers an entity class.
Sets the oentitymanagerclasshandler.
Acquires a connection from the pool.
Returns the number of available connections for the given connection name and username.
Acquires a connection from the pool.
Executes the ocommand.
Looks up an iterator for the given class using the default class loader.
Check the cache memory configuration.
Create a vertex from a JSON object.
Create an edge from a JSON object.
Create a graphson object from an element.
Create an objectnode from an element.
Imports the current job from the server.
Returns the status of the current job.
Gets the active datacenter map.
Splits the string into a separate algorithm.
Create an osymmetrickey from a osymmetrickeyconfig.
Create an osymmetrickey from a file.
Create an osymmetrickey from an inputstream.
Encrypt the given string using the given transform.
Save this object to the given outputstream.
Save to keystore.
Sets the child of this commandcontext.
Adds an object to the list of unique result.
Gets the value as objectormap.
Authenticates the server using the given username and password.
Returns the value of the map entry for the given key.
Gets the reused record.
Read current record.
Gets the transaction graph.
Gets the orientgraphnotx.
Setup the opartitioned databasepool.
Gets a property by iname.
Stops a transaction.
Get the next token from the source.
Gets the token at the given index.
Get an iterable of vertices in the graph.
Remove this vertex from the graph.
Adds a new edge to the graph if it is a partitionvertex.
Adds an edge to the graph.
Gets the connection class.
Gets the connection.
Process brokenrids.
Gets the console methods.
Executes a task on a local node.
Returns the number of nodes with the given status.
Wait for next retry.
Returns the argument at the given position.
Returns the number of parameters in the request.
Connect to an oserver.
List all available databases.
Get server info.
Checks if a database exists.
Drop a database.
Freeze a database.
Releases a database.
Returns the clusterstatus of the cluster.
Get the orient graph.
Parse retry.
Saves an orecord to the database.
Delete an orecord.
Gets the authentication header.
Authenticates the server using the given username and password.
Checks if the user is authorized to access the specified resource.
Shutdown the server.
Adjust the beginning of the line and column of the token.
Sets the bucketpointer value.
Gets the bucketpointer for the given offset.
Ends an atomic operation.
Acquire exclusivelocktilloperationcomplete.
Change the maximum amount of memory in the readcache.
Start listening to the given host and port ranges.
Read parameters.
Shutdown the log manager.
Adds a new entry to the OClosableLog.
Remove an oclosable entry.
Acquires an oclosableentry for the given key.
Gets the value associated with the given key.
Clears the contents of the map.
Close the oclosable entry for the given key.
Iterates over the read buffers and applies them to each read buffer.
Called after a task is written to the state buffer.
Called after an OCLOSABLE entry has been read.
Put entry in read buffer.
Returns the closest power of two of the given value.
On event.
Convert an object to its string representation.
Convert all the values in the underlying map to a string.
Gets the obinaryserializer for the given type.
Initialize the shutdown queue.
Gets the engine with the given name.
Adds a state to the list.
Authenticates the user with the given authtoken.
Create the metadata for the database.
Attempt to acquire readlock.
Returns the orientvertex for the given direction.
Returns the id of the raw element.
Sets the value of a property.
Removes a property from the rawelement.
Clears the contents of this object.
Deletes this object from the storage.
End the importer.
Create a new vertex.
Parse strategy.
Gets the positions from an embedded collection.
Executes the command.
Fixes a link.
Fills the given orecordabstract with the given data.
Sets the version of a record.
Gets the recordtype.
Initialize the distributed database instance.
Prints an exception stacktrace.
Convert a link to a record.
Register an oservercommand instance.
Create serveruser configuration.
Analyze a filter condition and return a list of oindexsearchresult objects.
Create an indexed property.
Attach an object to this object.
Gets the index class for the given classname.
Returns the next value with the new current value.
Truncates all clusters.
Adds a base class to the list of subclasses.
Adds the polymorphicclusterids to the ibaseclass.
Link an object to a stream.
Releases an object from the pool.
Check memoryleaks.
Clears all the pointers.
Convert a byte array to an int.
On open.
Install clusters of class.
Dump server status.
Returns the index of the given comparable object in the given array.
Returns the index of the object in the array.
Get involved clusters.
Handles the result.
Gets the number of temporaryridcounter.
Report a tip.
Parse fetchplan.
Parse the nocache keyword.
Optimize sort.
Returns the status of this document.
Execute this command.
Handle a JVM error.
Validates an index value.
Rollback the given microtransaction.
Executes the given command.
Register cluster.
Sets an object property.
Executes the command.
Executes the ocommand.
Delete an orecord from the database.
Callback hook for a given id.
Delete an object from the database.
Returns the view count for the given view name.
Returns the count of the class with the given name.
Activate this object on the current thread.
Register an oencryption.
Gets the relative index for the given position.
Parse an optional word.
Parse a required word.
Parse the next characters.
Parse an optional keyword.
Check if the given character is one of the given separator characters.
Execute the command.
Clear the configuration files.
Gets the offset of the byte array.
Extract the token from the string.
Acquire an access token from the resource.
Copy the access token from the current context to the current context.
Returns true if there are no more characters to read.
Read a line from the stream.
Skip by reading n bytes from the buffer.
Ensures that the offset and length are within the arraylength.
Swaps the specified number of elements in the swapper.
MurmurHash3 64 - bit hash function.
MurmurHash3 64 - bit hash function.
Writes the given bytebuffer to the underlying stream.
Truncate the file to the given size.
Sets the position of the stream.
Calls the refreshendmetricsreporting method on the consumer refreshmetrics.
Awaits completion of the current tasks.
Finds the matches for the given query.
Find the types that are dependent on anytargetedtype.
Cleans up the snapshots.
Returns the hash code for a field.
Remove referenced outside closures.
Called when an announcement is complete.
Oncyclecomplete method.
Read headertags from datainputstream.
Extract the primary key from an object.
Clears all the elements in this set.
Reads the ordinals of a datainputstream.
Returns the size of this sparsebitset.
Gets the value of a field in a hollowdiffviewrow
Copy the contents of the given bytedata to the destination.
Copy data from srcpos to destpos.
Returns true if rangestart equals compareto.
Copies the bytes from src to dest starting from srcpos to destpos.
Copies the data starting from srcpos to destpos.
Reads data from the inputstream.
Writes len bytes to the outputstream.
Ensures that the given segment has capacity.
Returns the position of the given field.
Calculates the total number of select buckets for the given multilinkedelementarray.
Checks if a dataset has all schemas in a dataset.
Generate the files for the given directory.
Generate files for all schemas in the dataset.
Returns true if the given key matches the given ordinal.
Gets the recordkey for the given ordinal.
Create a fieldpath for the primary key of an object.
Create a fieldpath for hashindex.
Puts an object into the map.
Initialize the lastreftype field.
Returns true if the prefix index is mapped to the given key.
Adds a field to the specified type.
Given a collection of schemas return a list of schemas ordered by name.
Initialize with nextmajorversiondefaults_v3
Gets the value at the given index.
Finds the matches for the given fieldname and value.
Finds the matches for the given typename fieldname and value.
Set elementmatchpaths.
Sets the elementkeypaths.
Restore from last state.
Runs the cycle.
Excludes the given key from the set of excludedordinals.
Exclude referenced objects from the transitive set.
Writes a hollowblob header to the data outputstream.
Calculates the type metrics for each type.
Write the data to the bytedatabuffer.
Write fixed length int.
Write fixed length long.
Returns an ordinal to the freeordinal pool.
Sorts the arrays in ascending order.
Hashes the given key with the given fieldtype.
Generates a hash code for the given object key and fieldtype.
Resize storage.
Find the preferredordinal for the given preferredordinal.
Prepares the pointers for writing.
Compares a serializedrepresentation with a serializedrepresentation.
Grows the key array.
Rehash previously added data.
Creates an empty keyarray with the given size.
Checks if two hollowindexervaluetraversers are equal.
Find match.
Swaps the current readstate with pending readstate.
Returns the hashtablesize of the given number of elements.
Run the compaction cycle.
Writes a snapshot of the stateengine to the given outputstream.
Write the delta to the given outputstream.
Adds the schemanames to the schemasetifnotprimitiveorcollection.
Normalizes a fieldpath to a parameter name.
Rebuilds the hash index.
Finds objects that match the given query.
Trigger a refresh with a random delay.
Trigger an async refresh with the given delay.
Add a typediff to the list of typediffs.
Writes an int to the outputstream.
Writes an int to the byte array at the given position.
Reads an int from the inputstream.
Read a long from the inputstream.
Add a view to the viewgroup.
Refresh the loadingviews size.
Update the uiformode.
Pull the scroll event.
Adds a fact to the givenrulebuilder.
Adds the given facts to the rule.
Create a rulebuilder for the given class and actiontype.
Create a goldenrule builder.
Returns a new rulebuilder with the specified facttype.
Create a new rulebuilder with the specified resulttype.
Create a givenrulebuilder with the given name and value.
Returns a builder for a given rule.
Compose a new auditablerule with a given action.
Gets the rule instance.
Gets an annotated field.
Gets an annotated method.
Returns the first annotated annotation of the given class or null if no annotation is found.
Registers an auditable rule.
Update the status of a rule.
Gets the map of rulestatus for the current thread.
Sets the resulttype of the rulebook.
Adds an action to the rule.
Adds an action to the rule.
Resets the value to the default value.
Create a rulebookrule with the given facttype.
Gets the rules for the package.
Read empty line or end table.
Converts a list of services to an array of service objects.
Gets the ports from buildconfiguration.
Extract ports from config.
Parse portmapping.
Adds the port if not null.
Shift or null ports.
Add missingserviceparts.
Append an imagestream to a file.
Checks if two ports match.
Convert a servicename to a portorblank string.
Gets the servicehost and port.
Puts a value if the map is absent.
Merges all entries in tomerge into the given map.
Merges two maps together.
Put all values in the map if it is not null.
Wait until a pod is ready.
Validates that the given string is valid kubernetesid.
Converts an object to an itemlist.
Gets the resourceversion of the given metadata entity.
Checks if a pod is ready to run.
Gets the current context.
Checks if the listbuilder has a route with the given name.
Checks if the project has a resource with the given paths.
Read andenrich fragment.
Convert a map to a list of envvars.
Merges two resources.
Merge the override map with the original map and remove empty strings from the original map.
Checks if the podspec is a local customization.
Reads the configuration from a file.
Add portifvalid.
Get dockerjsonconfigstring.
Returns the plugin configuration for the given system and id.
Looks up a secret configuration by id.
Downloads a file from the given URL.
Compare two version strings.
Blend profile with configuration.
Lookup a profile by name and directory.
Read profile from classpath.
Read all profiles from a classpath.
Find the profileyaml file in the given directory.
Gets the metainf profilepaths for the given extension.
Reads a list of profile objects from a YAML file.
Gets the imagepullpolicy.
Determines if the runtime mode is openshiftmode.
Gets the number of replications in the deployment configuration.
Returns the first child element with the given name.
Installs a template.
Removes a tag by its name.
Apply a namespace to an entity.
Apply a project to the project request.
Apply a projectrequest to a project request.
Gets the namespace for the given metadata entity.
On applyerror.
Create the kuberneteslistbuilder.
Enrich the given builder with the given namespace.
Gets the environment variable.
Returns the seconds of a duration in seconds.
Converts a duration string to a bigdecimal duration.
Scans the given patterns and returns an array of files that match the given patterns.
Disable openshift features.
Checks if the service has ingressrule.
Parses the given mapping and returns the serialized content.
Gets the default iconref.
Copy appconfigfiles to appbuilddir.
Gets a properties object from a resource.
Gets the springbootversion.
Enriches the given enricher with the given platformmode.
Get raw configuration map.
Build a flattened map from the source map.
Gets the template for the given kuberneteslist resources.
Gets the buildreference date.
Returns the value of the given key or the default value if not found.
Returns the map of configuration values for the given name.
Prepares the processors for the given named list.
Adds the from configuration to the builder.
Get from mode default.
Get the image name.
Gets the registry.
Returns true if this is an online configuration.
Returns the external serviceurl for the given servicename and protocol.
Returns the boolean value of the given property.
Create the jestclient.
Create the internal node.
Scans the plugins.
Creates a new americanexpressrewardsbalance object from a json string.
Performs a getrewardsbalance request.
Creates a paypalpaymentresource from a json string.
Performs a GET request to the API.
Performs a POST request to the server.
Create a venmoconfiguration object from a json object.
Collect device data from a braintree fragment.
Collects device data from the braintree fragment.
Collectpaypal devicedata.
Gets the paypalclientmetadataid.
Checks if a signature is valid.
Get the value of a jsonobject optstring or fallback.
Parse the paymentmethodnonces from the given jsonbody.
Gets the browsercheckoutconfig.
Gets the browserbillingagreementconfig.
Asynchronously gets a response from the server.
Submit a POST request to the server.
Sends a POST request to the given path.
Approve a local payment.
Adds a listener to the braintree.
Removes a listener from the braintree.
Requestbillingagreement.
Handles an activity result.
Parse the paypalaccountbuilder response.
Adds a list of words to the dictionary.
Remove a word from a dictionary.
Converts a sequence of korean tokens to a java stringlist.
Extracts a list of koreanphrases from a sequence of tokens.
Detokenize a list of tokens.
Fetch a bytebuffer from a channel.
Joins a list of nal units into a bytebuffer.
Converts a list of nal units to a bytebuffer.
Returns the profile for the given integer.
Normalizes a set of taps and generates fixed precision.
Read to the next marker in the buffer.
Read to the next marker buffer.
Get the maximum available frame.
Modify a file.
Gets the duration of the edits in the trakbox.
Convert a frame number to a time value.
Convert a time value to a frame.
Returns the sum of the mediatv of the trakbox s edits.
Convert the editedtv to the media time of the trakbox.
Convert a moviebox to qtplayerframeno.
Get the qtplayertime for a movie.
Convert a timecodetrack to a timecodeframe
Format a timecode.
Builds a 7 - bit integer from the given values.
Set a value in a list.
Returns true if the given colorspace matches this colorspace.
Returns the size of a component of the given size
Create a raw mp4demuxer.
Reads the next word from the cache.
Create a wavheader from the given audioformat and samples.
Create a multi - channel wavheader from an array of headers.
Parse an aacdecoderspecificinfo from a byte array.
Encodes the given symbol into the given context.
Split a moviebox into edits by tvmv.
Decode a frame.
Sets the bigendian.
Deblock the given encodedmb.
Encode a native frame.
Encode a long into a byte array of the given length.
Returns the length of a long.
Adds a packet to the buffer.
Repositions the read buffer to the position of the file.
Decodes a binary value.
Decodes a binary bypass code.
Find the next marker in a bytebuffer.
Returns the samplefrequency for the given integer.
Predict a plane.
Starts a block with the given dc.
Computes the coefficents of a block.
Finishes the given block by dividing each element by the number of elements.
Concatenate two bitsbuffers.
Rewind reverse 32 bits.
Seek to a keyframe.
Get the picture from the first frame.
Gets the gainchangepointid for the given lngain.
Converts a byte array to an int array.
Convert an int array to a byte array.
Converts an audio format to a float.
Converts a float buffer to a byte buffer.
Interleaves the input buffer with the output buffer.
Deinterleave an audio format.
Get the size of the coded sample.
Builds a WPE map from the given parameters.
Read an ul batch from the given bytebuffer.
Read an int 32 - bit batch from the bytebuffer.
Calculates the median for a prediction.
Encode a picture into an encoded frame.
Encodes a frame of a picture.
Encodes a frame.
Gets the supported codecs.
Gets the supported tags.
Adds a reference to the jnireference list.
Remove all jnireferences from the queue.
Flushes all valid references.
Load the library from the given appname.
Unpack a library.
Delete all temporary files.
Get the default layout for the given number of channels.
Get channel from layout at index.
Make a new mediapacket.
Returns the version information for the current version.
Get the default timebase.
Make a demuxer.
Play a video file.
Display video at correct time.
Create a codec descriptor from a codec id.
Print an option to the given printstream.
Register a factory for the given protocol prefix.
Generates a unique name for an object.
Make a mediaaudioresampler.
Gets the supported videoframerates.
Gets the supported videopixelformats.
Gets the supportedaudiosamplerates.
Gets the supported audio formats.
Gets the supported audio channel layouts.
Sets the flag of this coder.
Sets the value of the two flags.
Get the decoder for this demuxerstream.
Get the demuxer for this stream.
Returns a collection of muxerformats.
Make a filtergraph.
Get the type of the bitstream filter.
Gets a bytebuffer from the buffer at the given offset and length.
Create a new audioframe with the given audioformat.
Resamples a mediapicture.
Validates the bufferedimage.
Validates the mediapicture.
Get the filtergraph for this link.
Get the metadata for this media.
Get cpuarch from javacpu string.
Get cpuarch from gnu string.
Get the osfamily for the given operating system name.
Get osfamily from gnustring.
Play a sound file.
Loads the library with the given name and major version.
Set the loaded library.
Load a candidate library from a list of candidates.
Initialize searchpaths.
Check if a library is already loaded.
Deletes this record.
Get a stream from this video jni.
Get the muxer for this stream.
Make a setscripttransaction.
Decodes the given string to a byte array.
Generate a random seed.
Gets a transaction by id.
Returns a list of transactions for the given address.
Get transactions for an address.
Get the sequence of blockheader for the given range.
Get a block by signature.
Sends the request to the server.
Compiles a script and writes it to a private keyaccount.
Compiles a script into a string.
Write primitive array.
Flushes the buffer to the output stream.
Writes an object to memory.
Returns the fstclazzinfo object for this class.
Converts an object to a byte array.
Sets the mmfdata.
Gets the specificity of the given class.
Resize the store.
Removes a binary entry from the index.
Writes a string as a string in ascending order.
Sets the outputstream to use for the output.
Create a fstconfiguration from a JSON configuration.
Create a struct configuration.
Calculates the number of bytesnotautility of an object.
Clears the cached buffers.
Gets the objectinput from the inputstream.
Gets an objectinput from the stream.
Get an objectinput copy from the byte array.
Get the fstobjectoutput from the given outputstream.
Registers a set of keys and values to the fstconfiguration.
Gets the cpname for a class.
Write an int to the stream.
Writes a raw integer to the output stream.
Write an int packed data to the output stream.
Write a raw name to the buffer.
Get a cached fstclazzinfo. fstfieldinfo object.
Called when an object will be written to the stream.
Called when an object has been written to a stream.
Gets the fstclazzinfo for the given class.
Writes an array to the output.
Set a string to this buffer.
Write a primitive array to the output.
Finish the changetracking process.
Takes a snapshot of the changes from the current position to the origin position.
Register an object for write.
Writes an object to a byte array.
Read an object from the input byte array starting at the given index.
Read a byte array from the stream.
Read an int from the stream.
Moves the queue to the given position in the queue.
Sets whether threadpool is enabled or not.
Start embedded cassandra.
Cleans up embedded data for the given keyspace.
Copy a resource to a directory.
Establishes a remote port to the given node and port.
Create an empty subscriberstate.
Returns a map of onnxop descriptor names to op descriptors.
This method calculates the outputshape of the larg and rarg
Returns true if n evaluates to true and cond evaluates to true.
Perform a logical AND on an indarray.
Perform a logical AND operation on an indarray.
Perform a logical or operation on an array of dimensions.
Apply a where condition to an indarray.
Returns the first index of the given indarray with the given condition.
Create a flatbufferbuilder from this object s properties.
Create functionproperties from flatproperties.
Convert a collection of function properties to a flat property vector.
Sets the throwable that caused this exception.
Sets the throwable that caused the first call to this method.
Merges two lists of coordinates.
Partitions a list of doubles into a list of lists of lists of lists of lists of
Convert an onnxtype to an nd4j type.
Shutdown the thread.
Get the current devicearchitecture.
Convert an indarray to an indarray
pooling 2d pooling
Create a compression descriptor from a bytebuffer.
Splits the list into batches of the given size.
Validates that the arrays of the given dimension are equal.
Sets the dtype of the databuffer.
Generate an indarray with a range of numbers.
Converts a collection of indarrays to a flattened indarray.
Returns the bilinearproducts of curr and in.
Create a complex number from a double array.
Returns a complex number of complexones with the given value.
Returns the complexones of the shape and the given value.
Determines if the last synced timestamp should be replicated.
Computes the subi of two complex numbers.
Returns the atan2 of a complex number.
Rounds a complex number to the closest complex number.
Negate a complex number.
Returns the absolute value of a complex number.
Raises a complex number by a power.
Binarizes the set of features with the given cutoff.
Samples a number of samples.
Returns the memory footprint of the memory footprint.
Converts an exception to a string.
Returns the simple hostname of the given string.
Convert an array of strings to a string.
Convert a byte array to a hex string.
Gets the array of strings from a string.
Splits the given string using the given escape char and separator.
Splits a string into an array of strings with the given separator.
Find the next occurrence of the separator character in the string.
Escapes the given string for use in HTML.
Joins an iterable of strings using the given separator.
Camelizes the given string.
Gets the stacktrace of a thread.
Invert an indarray.
Returns the n - th biginteger at the given index.
Checks if isactualonhostside.
Checks if isactualondeviceside.
Create a shapeinformation pair.
Create the shapeinformation pair.
Checks if the shapeinfo is a vector.
Get the order of an indarray.
Returns the offset for the given indexes.
Convert an array of indices to an indarrayindex array.
Gets a short from the indexer.
Reallocates the databuffer to the given length.
Copy a number of bytes from one buffer to another.
Gets the constant buffer for the given float array.
Returns a string representation of the kafkauri.
Raises the power of an ndarray.
Logs an indarray.
Max element of an indarray.
Returns the maximum of two indarrays.
Returns the minimum element of an indarray.
Returns the minimum of two indarrays.
stabilize an indarray
OPERATIONS WITH NONDESTRUCTIVE FUNCTIONS
Log 1p of an ndarray.
Prepare bounds.
Advances to the next dataset.
Build an allocationshape from a databuffer.
Checks if a name exists in a path.
Reads the data from an objectinputstream.
Sweeps the tail of the allocator.
Create an indarray from a python pointer.
Create an indarray from an npyfile.
Allocate a pagedpointer.
Attach an object to the readlocks map.
Indicates if the server is started.
Executes the given op.
Flushes the queue blocking.
Gets the inputstream for this resource.
Get the device for a thread.
Attach a thread to a device
Get the next device for the given threadid.
Returns the name of the operating system.
Calculates the archtype for the current operating system.
Publish an array to the producer
Create a new databuffer.
Intercept intdatatype operation.
Add i c to result
Processes the message if it has been received.
avg pooling 3d.
Computes the depthwise conv2d for the given inputs.
Resets the counters to their initial state.
Returns the class of the given op.
Store and allocate new array.
Gets shape.
Evaluates this variable on the samediff.
Compress a double array.
Returns the exponential of the given complex array.
Center a complex ndarray to a given shape.
Truncate a complex ndarray to a given dimension.
Pads an icomplexndarray with zero values if the target shape is the same as the
Returns the iamax of an indarray.
Broadcast an indarray to all devices.
Processes the message.
Gamma function.
Returns the Euclidean norm of x.
Computes the cumulative remainder of x.
Exponential exponential function.
Raises x to the power of y.
Round a number to a power of n.
Computes the tanh of x.
Returns the logarithm of x asinh.
Computes the hyperbolic cosine of x.
Scale x by d.
Scale a bigdecimal value by a precision.
Convert a bigdecimal error to a prec value.
Put a differential function for a given id.
Gets the inputs for a differential function.
Update an array for a variable name.
Puts a shape for a variable name.
Associates an indarray with a variable.
Gets property for function.
Add a property for a differential function.
Adds an outgoing function to the outgoingargs.
Add arguments for a differential function.
Checks if the given function has any incoming arguments.
Evaluate the operator and return the results.
Create a sdvariable with the given name and shape
Same as sdvariable. oneslike but with the same name.
Create a sdvariable with zeros like operator
Remove an argument from a differential function.
Sets the gradient for the given variable name.
Avg pooling 3d.
Returns the grucell for the given basename.
Execute a list of differential functions.
Start a while statement.
Execute a differential function.
Execute a list of differential functions.
Execute backwardandendresult.
Adds a variable as placeholder.
Allocate a new pointer.
Returns the lengthfordtype of the databuffer.
Get the dtype for the given allocationmode.
Get the dtype from the context.
Gets the opnum of a differential function by name.
Destroy all workspaces for current thread.
Printallocationstatistics for current thread.
Performs the trmv operation.
Executes the accumulation on the variance accumulation.
Decodes the encoded indarray into the target indarray.
Gets the nodename of the given node.
Invoke a scalarop on a dimension.
Asserts that no workspaces are open.
Computes the negative loglikelihood of the given labels and sigma.
Requests a tick for the given time and timeunit
Try to request toe.
Release the toe if the current state is toe.
Gets the current state.
Process a message from the clipboard.
Initialize currfromlist.
Initialize hostcollectors.
Get the pointer to the device.
Synchronize host data.
Apply the updater to the gradient.
Synchronizes this allocation point with the given allocation point.
Create an indarrayindex array from an indarray.
Gets properties for function.
Checks if has placeholderinputs.
Compute the difference of two variables.
Format an indarray to a string.
Import samediff.
Convert an icomplexndarray to a blob
Load a complex number from the given blob.
Save an icomplexndarray to the database
Copy the real to the indarray.
Copy imaginary values from the indarray to the indarray.
Computes the epsi distance between two numbers.
Assigns a complex array to this complex array.
Gets the rows of the matrix.
Puts a row into this complexarray.
Puts a column into this complex array.
Subtract another complex number from this complex number.
Add another complexarray to this complexarray.
Subtract another complex number from this complex number.
Add two complex numbers.
Assign a number to this complex array.
Returns the ravel of this vector.
Returns the eigenvalues of a complex vector.
Returns the symmetric generalized eigenvalues of two indarrays.
Returns the iamax of the complexndarray.
Copy two complex arrays.
Multiply a complex number by a complex number.
Processes the message.
Computes the non - zero count of the weights and labels.
Perform a reduction on the samediff.
Gets the noarg constructor.
Gets the constructor.
Invokes the given methodhandle with the given parameters.
Get an annotation from an array of annotations.
Gets the declared annotation for the given class and type.
Checks if the declared annotation of the given type is present on the given class.
Create a proxy instance for the given result and interf.
Load an entity.
Save the pojo to the database.
Create a proxy instance for the raw memcacheservice.
Gets the metadata for the given entity kind.
Query keys only.
Executes a query and returns the results of the query.
Query normal.
Query the results of a projection query.
Count the number of results that match the query.
Safely partition an iterator.
Loads the iterators from the given keys.
Appends a message to the path.
Create a key for a POJO
Compares two keys using system identityhashcode.
Create a key from raw data.
Convert a typed key to a Google Cloud key.
Gets the kindhere of a class.
Checks if the given type is missing type parameters.
Checks if the given type is a supertype of the given subtype.
Gets the exact supertypes of the given type.
Capture a parameterized type.
Gets a translator for the given type key.
Gets the populator for the given class and path.
Gets the index instruction for the given class.
Checks if the method is ofinterest.
Gets the declared properties of the given class.
Gets the keymetadata.
Returns the cached value for the given key.
Executes the query.
Fetch pending entities.
Adds the indexed discriminators for the given class.
Register a translator for a subclass.
Gets the collectioncomponenttype.
Gets the mapkeytype.
Creates a new forwardpath from the given path.
Returns the final path of this path.
Returns a string representation of this node.
Returns the depth of this path.
Put all updates in the cache.
Clears an iterable of keys.
Cacheput if untouched.
Gets all the objects in the cache.
Returns the keys of a collection of buckets.
Sets the key for the pojo.
Sets the id of the pojo.
Gets the raw value of the parent meta object.
Register a translator for a superclass.
Checks if two types have the same commonsubtype.
Transformowner.
Gets the annotation for the given annotation type.
Add a session to this session.
Load a value from the round.
Executes the current round.
Translate the raw data into a resultcache.
Fetches a set of keys from the datastore.
Load an entity from the datastore.
Create a raw key with the given kind and id.
Returns the raw value of the given key.
Gets the id value for the incomplete key.
Convert a urlsafe string to a Google Cloud key.
Create a transactional objectifyimpl.
Transact a work to a parent object.
Transacts a work object to a transaction.
Checks if the onpojo value matches the given conditions.
objectify ofy.
Get the asyncdatastore.
Gets metadata for entity.
Allocate key range.
Open a new objectifyimpl.
Closes the stream.
homogenizes the indexes of a list.
Create a reference to the given value.
Safely get the object from the map.
Adds a value to the list for the given key.
Returns true if this task has been done.
Generate if conditions.
Executes all runnables in the engine.
Returns the container with the given path.
Gets the stat for the given kind.
Unwrap and throw an exception.
Gets the translator for the given type key.
Gets the root translator for the given class.
Create a translator.
Loads the property from the given container.
Gets the property from container.
Sets the value of the given object to the given value.
Save the entity to the given path.
Gets the value of a property.
Write the extensions of the extendable message.
Writes a category to the given json generator.
Writes the contentcategories for the given fieldname.
Processes a snippet.
Returns an iterable of bids from the response.
Gets bid builder with id.
Update the seatbids in the response.
Remove all bid builders that satisfy the given filter.
Read extensions.
Returns true if the current token is null.
Register a new extendable builder.
Register an openrtbjsonextwriter.
Processes the snippetprocessorcontext.
Processes the bid fields.
Updates the given collection of objects using the given updater function.
Filters a list of objects using the given filter.
Returns the current name of the given jsonparser.
Start an object.
Start an array.
Peek the next token from the current token.
Write a boolean field to the JSON stream.
Writes a list of strings to a JSON file.
Writes a list of integer values to a JSON file.
Writes a list of longs to the JSON stream.
Writes a list of protocolmessageenums to the JSON stream.
Resolves a base URL and target URL.
Fixpurequerytargets - fixpurequerytargets
Gets the host segments from the given url.
Returns the host of the given URL.
Gets the page from a URL.
Load list from stormconf.
Extract the configuration element from a map.
Gets the protocol for the given url.
Generate warcinfo.
Extracts the refreshurl from the given value.
Gets the metadata for a link to a target url.
Filters the given metadata by removing the mdtotransfer fields.
Adds a new scheduledurl to the queue.
Cleans the name of a field.
Gets the charset from bom.
Get charset from text.
Get charset from meta data.
Attempts to sniff the given content. If the content is longer than maxoffsetguess then
Sets the value for the given key.
Gets the first value of the given keys.
Get a list of cookies from a list of cookies.
Checks if a cookiedomain matches a hostname.
Returns the cache key for the given url.
Gets the robotrulesset from the cache.
Extract the metatags from the document.
Acknowledge a tuple to the server.
Filters the given URL using the given metadata.
Filters the URL string by applying the substitution to each rule.
Read rules from a file.
Process query elements.
Create a navigationfilters from stormconf.
Adds a recordformat to the gziphdfsbolt.
Throttles the queries if the timelastquerysent has changed.
Triggers the queries if the maxdelay between queries is greater than num_.
Create a parsefilter from stormconf.
Append a node to the current node.
Create a processing instruction.
Method comment.
Startdtd Method.
Gets the value for the url.
Trims the text to the maximum length.
Checks if a custominterval is present in the metadata.
Create urlfilters from stormconf.
Sets the number of wheel items to use.
Resolve the size and state of the measurespec.
Set the drawable that will be used to draw the empty item.
Sets the angle of the wheel.
Update the selected position.
Invalidate wheel itemdrawable.
Converts raw position to wheel position.
Update the vector by the deltatime.
Gets the contourcolor for the given entry.
Clamps the value to the given upperlimit.
Writes the list of coverage parsers to the json writer.
Gets the data as bytebuffer.
Sets the value of this string to the given value.
Make a 1d string array.
Make a char array from a string.
Make an arraychar from a string array.
Make a char from a string array.
Gets the offset of the timeinterval of a grib2record.
Show the normal state of the frame
Show the frame ifnoticonified.
Make a sizeestimate for a griddataset.
Prints a random access file.
Create a unitname with the given name and plural.
Create a unitname with the given name plural and symbol.
Make a plural of the given string.
Returns true if the specified date is included in this range.
Returns the intersection of this daterange with the given daterange.
Extend this daterange by another daterange.
Extend this date range by the given date.
Sets the start date.
Sets the end date type.
Sets the duration of the duration.
Adds a mapbean to the menu.
Prints an error message.
Get the name of the name.
Convert the parameters to a string.
Create a filedsp from raw data
Compute the bounds for the given latlonrect and horizstride.
synchui sync hui.
Computes the unlimited chunking for a list of dimensions.
Registers a directory with the system.
Process events.
Wrap a featuredataset.
Returns true if the featuretype want and factype are equal.
Find the featuretype for the netcdffile ncd.
Write a catalog to the httpservlet.
Convert catalog to HTML.
Gets the usercss.
Gets the userhead.
Make a dynamic catalog from a path and base URI.
Add global services to the catalogbuilder
Initialize the global credentialsprovider and useragent.
Gets the content of the given httpsession using the given urlencoded.
Sends the given content to the given urlencoded request.
Get the default frontpage.
Make a catalog.
Extracts the geospatial coverage from the given group.
Gets a single dataset or by typename.
Returns true if this vertcoordvalue is nearly equal to another vertcoordvalue.
Create a unitid from a name plural and symbol.
Parse an attribute from a string.
Reads the next number from the raf.
Convert two shorts to an int.
Convert a byte array to an int.
Returns a date with the given juliandays and msecs.
Make a validnetcdfobjectname from a string.
Returns true if the given string is a validnetcdf3objectname.
Read record data.
Read recorddatasubset.
Fill non - record variables.
Create a gradstimestruct for the given time index.
Make a gradstimestruct for the given calendar.
Checks if a string has a timetemplate.
Adds a serverside function to the list of functions.
Gets a booleanfunction by name.
Gets a btfunction by name.
Load a new function.
Get the name of the level of a gridrecord.
Get the description of the level of a record.
Gets the levelunit name of a gridrecord.
Get the projection type of a griddefrecord.
Returns true if the given gridrecord is a vertical coordinate.
Checks if a gridrecord is a layer.
Make a coordinatetransform from a netcdfdataset.
Create a variableds object with a dummy transformation variable.
Creates a projection for the given GCT.
Main method for testing this class.
Saves the state of this object to the persistent storage.
Returns a copy of this chronology with the specified time zone.
Writes a long to the buffer.
Writes an array to the stream.
Writes a byte array to the output.
Writes a range of bytes to the output.
Finish initialization.
Create a calendardaterange from a daterange.
Creates a grib2gds object from the given template and data.
Parse the given string and return the number of dds.
Parse the given text and return the number of elements parsed.
Swap grid header.
Read a grid record.
Main method for running the mcidasgridreader.
Write a constraint to the file.
Write the headers and ss.
Write the list of operations to the file.
Scans all files in the given directory and prints the results.
Scans a log file and prints the results.
Gets the gridpackingtype.
Find the grid with the given parameter.
dm_rpkg dm_rpkg.
Unpack data.
DP - ugrb function.
Unpack grib1data data.
Unpack a grib2data record from a grib2record.
Print the grids.
Get the next byte from the buffer.
Creates a calendardate from the given calendar object.
Create a calendardate from a java. util. date.
Creates a calendardate from the given milliseconds.
Creates a calendardate from the given calendar and millisecond.
Parse a calendardate from a string of udunits.
Gets the difference between two datetimes.
Create an atomic variable from the given datacursor
Setup the request and response.
Escapes a string.
Create a list of slices from a list of range.
Unwrap a netcdffile.
Checks if a list of dimensions contains a variable length.
Computes the effective shape of a list of dimensions.
Add a date to this date.
Multiplies this unit by another unit.
mydivideby division of this unit and another unit.
Divide this unit by another unit.
Returns the unit that raised to the given power.
Converts this unit to a derived unit.
Returns the derivative of this unit.
Converts the value of this unit to a derived unit.
Returns the canonical string representation of this unit.
Read data from a sectioniterable.
Read data from a set of coordssets.
Flatten a list of station features into a list of station features.
Find a service by its name.
Returns thegate size for the given datatype.
Returns the start of the first gate of the given datatype.
Returns the number ofgates for the given datatype.
Write the XML representation of this dataset to the given outputstream.
Calculates the preferred layout size of the target container.
Verifies that a crawlable dataset is a descendant of a crawlable dataset.
Generate the proxydsresolvercatalog.
Create a calendardateunit from the given calendarname and udunitstring.
Create a new calendardateunit with the given calendar and udunit string.
Construct a calendardateunit from a calendarperiod. field periodfield and basedate.
Returns the quantitydimension of this unit.
Checks if a randomaccessfile is valid.
Read data 1.
Read integer data from a layout regular variable.
Read data from a variable v2 and write it to a byte channel.
Calculates the elevation of a given angle.
Calculates the step of a given number of bin numbers.
Calculates theaz of two shorts.
Calculates the coef of the data.
Calculates the nyquist of a wave
Make a verticaltransform from a netcdfdataset.
Sets the debugflags.
Sets the extendindex.
Reads data from a gridvariable.
Checks if a variable is missing.
Gets the latlonboundingbox.
Finish the sequence.
Tab the stringbuffer.
Pads the given string with the given width with the given string.
Returns a string representation of the given integer with the given width padding if necessary.
Returns a string representation of the given long padded with the given width if necessary.
Formats a double size into a string.
Print a double to standard out.
Display a 2 - dimensional double in a human readable format.
Returns a string representation of the shape.
Finish the slice.
Returns the string representation of this constraint.
Compose two slices.
Map a slice to a long.
Dump bytes to a bytebuffer.
Returns the earthellipsoid type for the given name.
Gets the type of the earthellipsoid with the given epsgid.
Decode vlendata.
Extract an arraylist from a URL.
Returns the text content of the given URL.
Filter the inputstream by tag.
Read data from a variable v2 and write it to a writable bytechannel.
Adds all attributes of the given iterable to the list.
Removes the attribute with the given name.
Remove an attribute ignore case.
Gets the offsets in timeunits.
Adds an actionsourcelistener to this listener.
Get the standard date from the given text.
Gets the standard or iso date for the given text.
Returns the date origin of this unit.
Get the current date.
Make a date from a double value.
Make the value of the given date.
Convert a double value to a standard date string.
Gets the gridspacinginkm for the given type.
Add dimensionstonetcdffile.
Add a coordinate axis to the dataset.
Make a projection.
Adds gdsparams.
Adds a coordsystemvariable to the ncdffile.
makelc.
Makes the coordinates of the griddefrecord.
Make the Mercator for the griddef record.
Sets the dx and dy of the grid definition.
Read a dataset from the catalog.
Read metadata content from a URL.
Gets the leveltype1.
Checks if the file is valid.
Writes a byte array to the output stream.
Sets the clearname.
Get the coordinatename for a given axistype.
Get the coordinatename for the given axistype and dimension.
Builds the XML representation of this message.
Builds a dapexception object.
Breaks up the levels of a variable.
Make zcoordaxis.
Create new variables.
Make a coordinateaxis from a reference to a time variable.
Checks if the value has a bit with the given bitmask.
Entry point for the gribtonetcdfwriter.
Wrap a netcdfdataset in a netcdffile.
Opens a netcdffile at the given location.
Clears the coordinates and coordinates of all variables.
Find the coordinateaxis of the given type.
Find the coordinateaxis with the given fullname.
Find the coordinate system with the given name.
Find a coordinatetransform by its name.
Checks if enhance is needed.
Sets the values of a variable.
Sets the values of a variable.
Create an array from a list of string values.
Returns the offset of the index.
Gets an existing mfileos7 object.
Returns a list of features that intersect the bounding box
Discretizes a vector.
Adds a threddsmetadata to this object.
Adds an invdocumentation to the invdocumentation list.
Remove the invdocumentation of the given type.
Gets the maximum number of bytes that can be written to the given start.
Checks if ismine.
Break up the conventionnames.
Build the convention attribute.
Builds the coordinate systems.
Finds the coordinateaxes for each varprocess in the varlist.
Finds the coordinatesystems in the varlist.
Makes all coordinate systems.
Makes the coordinate systems maximal.
Determine if a variable is a coordinate axis for a variable.
Subset the given dataset.
Sets the filter for the top dataset.
Mark a dataset as read.
Initializes the server once.
Counts the number of values for the given name and comparable value.
Adds a definition to a name and symbol.
Compares two table rows ignoring case.
Compare two booleans.
Pass reserved attributes to the dapnode.
Checks if the time range has a valid date range.
Registers a class with the registry.
Registers a new dsp class.
Checks if a registered dsp class is registered.
Unregisters a class from the registry.
Gets the forecasttimeintervalsizeinhours.
Gets the offset of the forecasttimeinterval of a grib2record.
Get the vertunit for the given code.
Sort the dapnodes in ascending order.
Find variable with attribute.
Find a variable with an attribute value.
Finds the name of a variable with a given attribute value.
Find variable with attribute value.
Finds the structure of the given structure.
Checks if the dataset has a recordstructure.
Returns the literal value for the given key.
Get the featuretype for the given key.
Returns the variable name for the given key.
Gets the coordinate value of a coordinate.
Returns the connectlon value if it is less than max_jump.
Returns the values of the coordinates.
Returns the coordinateaxis2d section of this axis.
Find the closest midpoint that is closer to target.
Returns the name of the sort.
Add an action to the menu.
Matches a path against this map.
Main method for testing this class.
Returns the index of the failure in the given byte array starting at the given index.
Adds a sourcepicture to the cache.
Report the cache.
Stops the background loading of all the sourcepictures.
Stops the background loading except the given url.
Get a httpmethod from the httpsession.
Make a mock httpmethod.
Generate the next float object of the given type.
Returns the next number of elements in the string.
Reads the data from the given section.
Gets the filesystem provider for the given URI.
Read the station table.
Returns the index of the value associated with the given gr.
Removes the variable with the given name from the data variables.
Get cloud hgt2 meters.
Reads the grid from the mainv.
Sets the number of colors to use.
Calculates the affine transformation for the given screen and bounds.
Creates an authscope for the given URI.
Finish the analysis.
Returns true if this factor is a reciprocalof factor.
Get the catalog for a directory.
Returns the index of the first occurrence of want in the array or - 1 if want == start
Read metadata content from url string.
Read metadata content.
Adds the metadata content to the metadata element.
Validates the metadata content.
Read catgenconf element.
Read datasetsource element.
Read datasetnamer element.
Read datasetfilter element.
Read resultservice element.
Create the element for the cataloggenconfig element.
Create the element for the datasetsource.
Create the element for datasetnamer element.
Create a datasetfilter element.
Create the resultservice element.
Checks if a flagname is set.
Construct the menu.
Adds the parameters to the given table.
Make a parameter from a list of words.
Returns the parameter with the given name.
Reads the contents from the inputstream.
Read bytes from the inputstream.
Replaces all the words in the filespec with the ens_template_id.
Sets the stationidtype and datatype of the station.
Accepts a string buffer.
Gets the bitmap.
Sets the netcdffile.
Sets the debugflags.
Parse a name from a string.
Returns true if the dstructure is a group dstructure.
getnetcdfstrlendim getnetcdfstrlendim
Returns the shared dimension for the dimension d.
Construct dimension list from dodsarray
Checks if the given data type is unsigned.
Read datadds from server.
Get an imageicon resource.
Get an image from a resource.
Create a custom cursor with the given name.
Read datafill.
Read datafill.
Read datafill.
Make a primitive array of the given size.
Convert byte array to char array.
Converts a char array to a byte array.
Convert a byte array to a char array.
Read a section from a parsedsectionspec.
Create an arraystructure from a section.
Gets the string representation of a scalar.
Get scalarstructure.
Get an array of the members of a member.
Compute the members of a dapvariable.
Add a dimensionstonetcdffile to the netcdffile
Normalizes a path.
Adds an explicit dataset to the cache.
Adds a directoryscan to the crawlable dataset.
Finish the scan.
Make datasets.
Gets the typical dataset.
Make a dataset.
Put resourcecontrol.
Adds a point to the list of points.
Returns the bbupper of the polygon.
Gets the bblower of the polygon.
Validates the string builder.
Checks if the given dataset matches this one.
Add all point features from the given datasetpoint.
Parses a constraint.
Evaluate the clauses.
Prints a constraint.
amend fromodl.
Sets the shared dimensions.
Check for unknown dimensions.
Find a group nested by its name.
Read the content of the Xlink file.
Get the standard URI for this dataset.
Sets the projection class.
Adds a constraint to the layout component.
Invalidates the layout of the target container.
Remove a layoutcomponent from the constraintmap.
Returns the minimum dimensions of the container.
Layout the tree to the target container.
Checks if is radialcoordsys.
Get the maximum radial value.
Returns the earthtosat of the given geographic_lon and geographic_lat
Returns the sattoearth of the scan.
Returns the goes_to_geos function.
Get the scangeomtosweepangleaxis.
Convert a sweep angle axis to a scangeom string.
Sets the runtime coordinates for this coordinateruntime.
Write a pointobsdataset to a file.
Rewrite a feature dataset.
Returns the arraysequence for the given member.
Returns the fullname of this node.
Returns the unique id of the user.
Gets the invaccess for the service type.
Find a dataset by its name.
Gets the parentcatalog.
Gets the metadata for the catalog.
Find a service by its name.
Gets the variables for the given vocab.
Find all catalogrefs in a list of invdatasets in a list of invcatalogref
Escape a path for a URI.
Adds a tagger to an array.
Extrapinterpolate an array of doubles.
Computes the computerho distance from the given latitude.
Override this method to format the detailinfo.
Create a structure for the given partname and dimensions.
Make a missing variable.
Create a variable for a parameter.
Add global attributes.
Returns the size of the stnvar with the given name.
Gets the 1darray.
yy_lr_goto_state_.
Report an error in the syntax tree.
yy_reduce_print reduce_print
Read dmr.
Read error.
Reads a number of bytes from the stream.
Reads a header from the inputstream.
Convert an iso string to a date.
Reads a list of records from a URL.
Transfer a group from one dataset to another.
Gets the stnfile from the location.
Open a random access file.
Returns the beginning of the given index.
Gets the end of the line at the given index.
Create all runtimecollections.
Sets the edit value.
Get the datatype for the given format.
Returns the Ecftolla distance between two points.
Clean unit.
Cleans the name of the given string.
Checks if a string is unitless.
Factory method to create notes.
Gets the varid of a note.
Parses the parsedas.
Find the dodsv with the given name.
Find datav.
Find a child by its index.
Gets the parentgroup of the ncfile.
Returns the dimension at the given index.
Returns the index of the dimension with the given name.
Gets the units string.
Gets the shapeassection.
Returns a slice of this variable.
Sets the enumtypedef for this operation.
Reads a list of ranges into an array.
Read scalarstring.
Reads the data from the underlying stream.
Read an array from the given section.
Writes the CDL to a string.
Returns a string representation of this dataset in debug mode.
Sets the datatype of the element.
Sets the dimensions of the shape.
Reset the shape to its initial state.
Sets the dimensions of this group.
Resets the dimensions of this group.
Sets the dimension of the given index.
Sets the cached data.
Returns a list of all dimensions of this dimension set.
Sets the bounding box.
Finish the analysis.
Returns an iterable over all datasets contained in this dataset.
Returns true if the path ends with any of the synextensions.
Create a new cdmdsp file with the given ncd.
Builds the DMR.
Build the sequence types for the given variable.
Build the dimensionrefs for the given dapvariable.
Finds the candidate enum for the given varenum.
Returns the core dimension set of the given dimension set.
Scan bufrfile.
Process bufr message as dataset.
Sends a request to the usagelog.
Get the affinetransform.
Returns true if the map area should be rotated
Get the map area.
Convert a projection pointimpl to a screen coordinate.
Pan the map.
Zooms to the specified range of pixels.
Recalc from boundingbox.
Adds a listener to the listener list.
Remove a listener from the list.
Sends an event to all listeners.
Send an eventexcludesource to all registered listeners.
Prints a command to the output.
Prints the data of a variable.
Print a variable datasection.
Prints a structuredata to the given printwriter.
Print an array as plain text.
Print an array to the given printwriter.
Writes a ncml to the given writer.
Read an attribute as a double.
Adds a parameter to the coordinatetransform.
Reads an object from the base type.
Returns true if gr is positive up.
Checks if this unit is compatible with another unit.
Make a label for the given quantityid.
Sets the offset of the bit.
Convert a number of bits to an unsigned long.
Convert a number of bits to an unsigned int.
Open a connection to the Fedora server.
Gets the das.
Gets the completece.
Projects a point to a latlonpoint.
Extract the idvdatasetcatalog from an XML string.
Convert a daterange to an idvcompatible daterange.
Checks if a random access file is valid.
Handles the handlesatelliteinformation.
Sets the handlesensorinformation.
Reads the root element from the given location.
Cleans the character data from the given text.
Unescape the given string using the given escape character.
Escapes a string for use in a URL query.
Unescapes the given URI query string.
Decodes a backslash - encoded string.
Encodes the given string as a backslash.
Addlightningglobalattributes.
Swaps the given byte array at the given offset in the given byte array.
Swaps the contents of the given byte array at the given offset.
Swaps the bits of the given byte array at the given offset.
Swaps the bits of a floating point value.
Swaps v with v.
Convert a short to a byte array.
Convert an int to a byte array.
Convert a long to a byte array.
Performs a subset operation on this vertical transformation.
Writes the document to an XML string.
Makes a new array.
Start the XML file.
Writes the feature list to the file.
Adds the levels of the gridrecords to the gridserviceprovider.
Adds a dimensionstonetcdffile to the netcdffile.
Addtonetcdffile.
Find the coordinatetransform for the given group g.
Returns the index of the level1 of the given record.
Cancels the timer and prints the string.
Gets a file from the cache.
Returns the existing file or null if it does not exist.
Prints the contents of the cache.
Cleans the cache of the given file.
Calculates the bearing of the given earth e and latlonpoints.
Calculates the bearing of two points.
Entry point for the program.
Finds a latlonpointimpl for a given earth e and pt1.
Find a point in the default earth.
Find a point in the default earth.
Loads the picture in thread with the given priority and rotation.
Loads a picture from the given URL.
Load the picture from the image.
Stops loading the image.
Stops the loading of the given exemption URL.
Returns the size of the image.
Sets the sourcepicturebufferedimage.
Returns the standard URI for the dataset.
Transfer info from list to list.
Count the number of bits in this descriptor.
Compares two data descriptors.
Loads the header from the stream.
Load data from the inputstream.
Gets the field with the given name.
Returns the double values of a field with the given name.
Get string array by field name.
Gets booleans by field name.
Returns the name of the field at the given index.
Returns an array of field names.
Prints a list of strings to the console.
Gets the attributes.
Set a dapattribute.
Remove a dapattribute.
Gets the group.
Returns the container of this dapnode.
Gets the escaped shortname.
Gets the path of the container.
Gets the path to the group.
Computes the fqn of this node.
Build the DAP dataset.
Sets a collection for the given key.
Returns the bean with the given key and default value.
Returns the object associated with the given keyname.
Reads the data from the file.
Prints the variables in the dataset.
Printcompoundinstance.
Write an element to a string.
Write an element to a file.
Write an element to the outputstream.
Write the element to the writer.
Create a dimensionelement.
Make a projectionct for the given attributecontainer and units.
Gets an int array from the attributecontainer.
Create a unit with the given name symbol and quantity.
Clone a unit definition.
Create unitdbimpl.
Get the singleton instance of si.
Find the coordelement of the target.
Finds the closest coordinate that is closer to target.
Returns the subset values of the coverage axis.
Open a feature dataset.
Open a feature dataset.
Annotate a dataset with its title and id.
Reads data from a randomaccessfile.
Assemble the URI from the given parts.
Returns a canonical version of the given string.
Normalizes the given units.
Finish the download process.
Gets the object at the given key.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Gets the date.
Prints the attributes of a dapnode.
Print an XML attribute.
Returns true if the given attribute is special.
Prints the dimrefs of a variable.
Checks if a file is a valid areafile.
Sets the attributes of the areadirectory.
Sets the navblock attributes.
Get the caltype for the given calname.
Sets the caltype attribute of the image.
Find the coordinates for the given predicate.
Find the name of the coordinateaxis of the given type.
Find a coordinateaxis by its type.
Find the coordinateaxis of the given type.
Find the dimension of a given axistype.
Find the best coordinate system for this dataset.
Find the independent axis of the given axistype.
Returns the variable with the given name.
Reads a marker from a datainputstream.
Write a marker to the dataoutputstream.
Main method for running the multipleaxischart demo.
Get a java array representation of a member.
Returns a copy of the parameter list.
Set the list of stations to render.
Sets the selectedstation.
Redraw the image.
Reads an object from the inputstream.
Write an object to the objectoutputstream.
Add two unitdbimpls.
Adds a unit to the unitset.
Adds a symbol to this unit.
Gets a unit by its id.
Adds a unit to the unit map by name.
Adds a unit to the symbol map by symbol.
Adds a unique unit to the map.
Add the lookandfeel to the menu.
Find record by drspos.
Read an object from a dataset.
Serialize a dataset to a data outputstream.
Construct a copy of this projectionimpl.
Open a feature dataset.
Open a feature dataset.
Open a dataset.
Annotate an invdataset.
Adds a partition to the list of partitions.
Create a gribcollectionmutable.
Get an instance of regexpanddurationtimecoverageenhancer.
Get an instance of regexpanddurationtimecoverageenhancer.
Write an XML document to a file.
Read structure data.
Sets the picture of the sclpic.
Sets the bufferedimage of the sclpic.
Zoom to fit.
Paint the component.
TG - OG - OG - OG - OG
tg_itoc tg_itoc.
ti_itoc - ti_itoc
Get the day m for the given year and imon
Get the ccrd string for the given ivcord
Convert an integer array to a swp4 array.
Gets the gridpackingname.
Get the datatype for the given typrt.
Read data from the inputstream.
Externalize the outputstream.
Gets the tag for the given code.
Get the next image from the grid.
Get the size of a daptype.
Returns the sum of an array.
Sets the offset and offset of the grid.
Sets the overlap.
Clears the grid.
Marks the object as clear.
Finds the intersection of the given rectangle.
Finds the intersection of the given point.
Finds the closest closest point to the given point.
Returns the squared Euclidean distance between the given point and the given index.
Get or create a baseunit.
Search for a servicetype from a fragment.
Search for a servicetype path.
Decode a servicetype extension from a string.
Checks if the location is a validifdods location.
Send a variable to the outputstream.
Returns the suffix of the fqn.
Returns the prefix of the given fqn.
Locates the file with the given absolute path.
Locates the relative path to the given absolute path.
Extract a byte array from a bytebuffer.
Get the structurepath of a variable.
Returns null if the path is null.
Joins an array of strings with a separator.
Checks if a path has a driveletter.
Returns a list of protocols for the given url and breakpoint.
Convert an index to a list of slices.
Convert an offset to a list of slices.
Checks if a list of slices is contiguous.
Checks if a list of slices is a singlepoint.
Convert a list of slices to an index.
Read data from an inputstream.
Set the stationinfo for this station.
Read featurecollectionconfig from catalog.
Update the groups.
Find the dapvariable with the given name.
Get the axistype from the variableenhanced v.
Gets the gribstattype for the given timerange indicator.
Subset the coverage coordinates of the given latlonrect.
Returns an iterator over the ranges of the axis.
Sets the values of the given properties.
Gets the sessionid.
Sets the maximum number of redirects allowed for this http session.
Sets whether or not this http session should use sessions.
Closes the connection.
Sets the authentication and proxy.
Track a httpsession.
Sets the global credentialsprovider for the given scope.
Validates the given URL string.
Creates an index from the given shape.
Computes the factorials for the given shape and stride.
Extracts the index section from the list of ranges.
Reduces the index by the number of elements in the rank
Reduces the index by a given dimension.
Transposes an index.
Returns a new index with all permutations of the given dimensions.
Returns an indexiterator for the given array.
Returns the current element position.
Sets the index to the given array.
Sets the dimension to the given value.
Sets the value of this index to the given values.
Returns the name of the time interval.
Make a calendardaterange for the given calendar.
Makes a list of date and time for the file.
Makes a list of parameters from a dmpart.
Get the list of stations for the gempakstation.
Returns a list of station key names.
Get the list of dates.
Finds the index of the station with the given id.
Gets the filetype.
Increases the depth by n.
Sets the indentation level.
Read or create an index from a single file.
Add a directoryscan to the collection
Checks if the scan is needed.
Scan the first time.
Sets the debugflags.
Adds a variable to the variable list.
Write a canceltask to the file.
Validate XML object.
Returns a string representation of this constraint.
Sets the original variable.
Reads an array from the file.
If we need to convert the variableds to structureds if needed.
Converts an arraystructure to an arraystructure if necessary.
Convert memberinfo to orgvar.
Find the variable with the given orgname.
Checks if a variable has data.
Enhance this dataset with the given mode.
Checks if resourcecontrolok.
Creates an empty arraysequence from the given sequence.
Create an arraysequence from a list of parameters and values.
Create a sequence for the given partname.
Add vertical coord attribute.
Reads an XML document and sets the catalog to the callback.
Create an invcatalogimpl from a catas string and base URI.
Read an invcatalogimpl from a stringreader.
Writes the catalog XML to the outputstream.
Gets the metadataconverter for the given key.
Get dimensionless id.
Multiply this unit by another unit.
Divides this unit by another unit.
Converts an array of floats to a derived unit.
Checks if this unit is compatible with another unit.
Write a feature to the GeoJSON file.
Writes a point to the XML.
Writes a line to the string.
Write a polygon to the XML
Returns the list of sub - nodes of the given parent node.
Pass reserved attributes to dapnode.
Returns the string representation of a subset of a variable.
Returns the factoryma of the given arraystructure.
Sets the data array of a member.
Create an arraystructurema from a structure.
Get the geometrytype for a variable.
Make a stationtimeseries feature.
Compiles the given ceast.
Compile a filter expression.
Redefine the dimension of a ceast node.
Create an array view.
Returns true if b is contained in this rectangle.
Extend the bounding box by a latlonpoint.
Extend the given latlonrect to this one.
Returns the intersection of this latlonrect with the given clip.
Adds two arrays together.
Checks if two arrays conformable.
Returns true if the shapea and shapeb are conformable
Convert an array to a data type.
Copy the contents of the given array to the given result.
Copy a boolean from one array to another.
Copy an object from another array to the result.
Gets the minimum and maximum value of an array.
Sets the double value of an array.
Create a new catalogbuilder.
Factory method to create a projectionimpl.
Unescapes a dapidentifier.
URL - decode a string.
Unescapes the given URL.
backslashescape a string with reserved characters.
backslashunescape a string.
Tokenize the escapedname.
Returns the index of the given character in the given escaped name.
backslash to dap.
Read an atomic scalar.
Gets the path to the cursor.
Gets the uidefault of the given property.
Gets the jclass of the given component.
Compiles the dataset and databuffer.
Compile a structure array.
Compile a structure.
Compile a sequence array into a d4cursor object.
Compile a sequence into a d4cursor.
Reads a long from the stream.
Gets the field with the given name.
Gets the value of a field.
Sets the value of a field.
Adds a field to the table.
Add a checkbox field.
Add a date field to this field.
Adds a double field to this field.
Adds a int field to this field.
Adds a password field to this field.
Adds a textfield to this field.
Adds a textcombo field.
Adds a textarea field to this field.
Adds a heading to the layout.
Adds a component to the layout.
Adds an empty row to the layout.
Find the active frame.
Gets the cellspacing.
Gets the factors.
Multiplies an array of dimensions.
Multiply this factor by the given power.
Returns true if this dimension is a reciprocalof of another dimension.
Returns true if this factor is dimensionless.
Factory method for grib1paramtables.
Factory method for grib1paramtables.
Adds a parameter tablelookup to the standard lookup table.
Adds a parameter table to the standard lookup.
This method is called when a unit is raised to the given power.
Returns the derived unit of the given input.
Initialize the unit table.
Make a vertical variable.
Returns the name of the file or null if the file does not exist.
Grabs a short from the byte array at the given offset.
Grabs an integer from the given byte array at the given offset.
Reads a float from the given byte array.
Read a double from the given byte array starting at the given offset.
Aa method for unitexists and unitsystem.
Adds a symbol to the unit.
Create a converter from a unit and a unit.
Sets the structuredata.
Sets the point feature data.
Draws this shape with the given graphics2d.
Returns an iterator over the shape list.
Process an inputstream.
Read a buffer from the inputstream.
Read more bytes from the buffer.
Read len bytes from the stream.
Skips the given number of bytes.
Adds the dimensionstonetcdffile to the netcdffile.
Returns the index of the coordinate in the grid record.
Checks if the raf is a valid file.
Initializes the header parser.
Reads data from a section of the file.
Read one row data.
Create from netcdfdataset.
Create a basetype for a variable.
Set the map area.
Sets the map area of the navigation.
Sets the maparea of the given lat lon.
Sets the projectionimpl.
Adds the actions to the given menu.
Call this method to redraw the redrawtimer.
Print a rectangle to the console.
Sets the selected variable.
Returns the double value at the given offset.
Reads a double from the stream.
Reads an object from the index.
Get the name of the gini ent_id.
Read scaledint.
Find parameter ignorecase by name.
Swap byte order.
Get timesteps per file.
Returns the filename for the given eindex and tindex.
Gets the filenames.
Gets the ddfpath.
Returns the full path of the given filename.
Adds a chsub to the list.
Convert a referencedate to a timecoordintvvalue.
Reads a random access file.
Gets the uncompdata for the given offset and len.
pcode_12n13n14
pcode_25 pcode_25
Checks the message header.
pcode_5 pcode_5
pcode_128.
Returns the number of levels for the specified level.
Gets theualpollevels of the given short array.
Adds a variable to the ncfile.
Adds a parameter to the dataset.
Compresses the input buffer into an uncompressed byte array.
Gets an unsigned int from the given byte array.
Gets an int from a byte array.
Convert a byte array to an object.
Dodmr.
Get request state.
Send an error response.
Stretch a point.
Stretch a point.
Format a date only string.
Replace the datavars in the structuremembers with the variablesimpleif.
Ensure arraysizeokay.
Reads two random ints from the given randomaccessfile.
Reads an unsigned short from the given randomaccessfile.
Reads an int3 from the given randomaccessfile.
Reads a 32 - bit integer from the given randomaccessfile.
Reads a 32 - bit unsigned integer from the given randomaccessfile.
Reads a float from a randomaccessfile.
Create a float from 4 bits.
Reads an int8 from a randomaccessfile.
Count the number of bits in a bitmap.
Construct a copy of this projectionimpl.
Returns the WWKS representation of this object.
Escapes the given string using the given character wrt.
Convert a string to a backslash - escaped string.
Splits a string into a piece of backslash.
Make a fmrcinv map.
Get servicespecial.
Returns the number of projected components.
Returns the reference time of this date.
Create an arraystructurebbsection from a section.
Main method for testing this class.
Read a grib1record from the indexproto. grib1record.
Checks if ismine.
Makes a projection from a netcdfdataset.
Reacquires the areareader.
Returns true if the given date is before the given date.
Returns true if this datetype is before the given datetype.
Returns true if the given date is after the given date.
Set the value at the given index.
Adds a coordinate system to this coordinate system.
Sets the units string.
Gets the units string.
Initializes this instance with the given readmode and preferences.
Read catalog.
Process datasets.
Readcatsindirectory.
Returns true if lon is between lonbeg and lonend.
Convert a lat to a string.
Convert a lon to a string.
Compares this quantity to another.
Gets the selected dataset node.
Sets the selected dataset.
Make a treepath from a treenode.
Open all the catalogs.
Sets the catalog location.
Sets the catalog.
Find the alias for a variable.
Writes an int to the output stream.
Writes a string to the output.
Reads characters from the stream.
Sets the debugflags.
Adds a member to this group.
Hide a member from the list.
Returns a list of the names of all members of this group.
Find the member with the given name.
Reads a randombitmap from the given file.
Restore the state of the table.
Returns an iterator over the selected rows of the table.
Gets the model index.
Get the array for a member.
Gets the scalar value of a member.
Get a double array representing the contents of a member.
Gets the scalar value of a member.
Gets the java float array representation of the member.
Gets the scalar byte value of a member.
Get the byte representation of a member.
Gets the scalar int value of a member.
Get a java array for the given member.
Gets the scalarshort value of a member.
Gets a java array for the given member.
Gets the scalarlong value of a member.
Gets a java array for the given member.
Gets the scalar character for a member.
Gets the java array char for the given member.
Do one dataset.
Create a copy of a dataset node.
Transfer metadata from a datasetnode to this datasetnode.
Get the threddsmetadata for this dataset.
Adds a record to the list of records.
Show missing.
Show missing summary.
Find the record for the given ens time and level.
Returns a string representation of this grid.
Make a longname for the first record.
Subset by intervals.
Checks if two byte arrays are equal.
Parse a dataset from a document.
Process the attributes of a dataset.
Adds a list of coordinates to this partition.
Sets the gaussian lats.
Parse a variableselector.
Returns a string representation of a section spec.
box 9 boolean.
Closes the connection. If the connection has been closed it will be closed.
Execute the request and return the response status code.
Identify encodingstation.
Match the axistype and dimension.
Sets the stream to the given inputstream.
Reads the next character from the stream.
Starts the task.
Parse a string into a URI.
Excludes the given URI from the list of uripart.
Returns null if string s is null.
Returns the canonjoin of the given prefix and suffix.
Accepts a crawlable dataset.
Copy information from one gribcollectionmutable to another.
Returns a list of filenames.
Sets the indexraf.
Gets the indexfilepath in cache.
Returns the number of counters in this set.
Add a global attribute.
Add a global attribute with the given values.
Delete the global attribute with the given name.
Rename a global attribute.
Adds an attribute to the variable with the given name.
Adds an attribute to the variable with the given name and value.
Delete a variable attribute.
Rename a variable attribute.
Make filesubtype.
Writes the headersandbb.
Write the members.
Writes the stationobsdataset to a string.
Create an XML representation of the stationcollection.
Writes a dsr to the stream.
Send a dxr to the client.
Write an error response.
Closes the connection.
Flushes the output stream to the output stream.
Returns true if this vector contains the want value.
Returns the element at the specified index.
Shifts the range by the specified origin.
Read data from the raf.
Read data.
Create a subset of the primitivevector.
Sets the values of the model.
Make a double array from an int array.
Gets the datasetboundaries.
Check the requested variables.
Returns the datasetsourcestructure for the given name.
Get the resource path from the daprequest.
Make vertical dimensions.
Reads a pib file.
Finishes the request.
Transfer the local metadata from parent to public metadata.
Transfer metadata from the fromds to the local metadata.
Transfer fromds metadata from parent to target.
Sets the contributors.
Adds a dataset to the list of datasets at the given index.
Remove a dataset from the catalog.
Replace a dataset with another one.
Adds an invservice to this service.
Remove a service from the registry.
Sets the list of services to be local.
Remove the metadata from the local dataset.
Gets the userproperty for the given key.
Validates the string builder.
Gets the descriptors.
Construct the server path from the httpservletrequest.
Get the capabilities of the server.
Get a feature.
Check parameters for error.
Handle the http servlet request.
Gets the capabilities for the given URL.
Returns the length of this string.
Returns the last modified date of the object.
Return a file from the httpservlet.
Return the contents of a string to the http servlet response.
Sets the response content length.
Gets the request URI from httpservletrequest.
Gets the request path.
Gets the request string from the httpservletrequest.
Returns the ignore case for the given parameter name.
Saves the data to disk.
Writes a directory to a file.
Create a nested bitcounteruncompressed object.
Counts the number of bits in this data descriptor.
Append a line to the end of the list.
Create a document for the stationcollection.
Gets the capabilities document.
Get the record at the subset parameters.
Gets the coordinate at the given index.
Adds an item to the combo box.
Handle an exception.
Steps the step up to the given positions.
Gets the ncepgen process.
Checks if the given endpoint is CCMRF endpoint.
Sets the hasvalue.
Factory method for grib1gds.
Copy bytes from the inputstream to the outputstream.
Reads the contents of the inputstream to a string using the specified encoding.
Reads the contents of an inputstream to a byte array.
Write the contents of the given string to the given outputstream.
Copy the contents of a file to an outputstream.
Copies a random access file from the raf to the outputstream.
Copies a directory tree from one directory to another.
Read the contents of a file into a byte array.
Read a string from a file.
Writes a string to a file.
Writes a string to a file.
Writes the contents of the inputstream to the given file.
Parse an exception handler.
dap2exceptionhandler.
Called when a bad url is received.
Get the catalog for the server.
Print the catalog.
Print the status of the server.
Print bad urlpage.
Gets the reference date.
Read vlendata.
Read a ncmlcollection from a string.
Open a ncmlcollectionreader.
Allows the given string to allow the given characters to be allowed.
Cleans up a string from a byte array.
Filters the given string using the given okchars.
Filters a string by 7 bits.
Make a valid CCM object name from a string.
Returns the index of the first occurrence of the two strings.
Pads a string to the left of the desired length.
Pads a string to the desired length.
Removes all occurrences of sub from s.
Remove a character from a string if it is less than or equal to c
Remove a character from a string.
Collapse all whitespace characters in a string.
Replaces all occurrences of in with out.
Replaces all occurrences of a character in a string with another string.
Replaces all occurrences of pattern with value.
Substitutes the given string with the given subst.
Substitutes the match with the subst.
Removes all occurrences of out from sb.
Replaces all occurrences of in with out.
Replaces all occurrences of in with out.
Substitutes all occurrences of match with subst.
Trims the given string to the given length and returns the result.
Process collectionupdate event.
Check the current state.
Update the collection.
Gets the datasets.
Releases all resources held by this instance.
Create a deep copy of the structuredata with the given members.
Copy an arraystructure to a byteorder.
Copy a structure to an arraystructurebb.
Copy a structuredata object to an arraybb object.
Copy a structuredata to an arraybb.
Gets the forecasttimeintervalsizeinhours value.
Create a coordinateaxis1d from a range.
Factory method for the tableanalyzer.
Analyze the featuretype.
Synchronize the grid index with the gridreader.
Get the gaussian latitudes.
Swaps the contents of the given byte array at the given offset.
Swaps the bits of the given byte array at the given offset.
Swaps a char from a byte array at a specific offset.
Find the coordinateaxes.
Add a parameter to the coordinatetransform.
Returns the common parent of this group and another group.
Returns true if this group is a parent of another group.
Sets the parentgroup of this node.
Adds a dimension to this group.
Adds a dimension to this group if it does not already exist.
Adds a group to this group.
Adds an enumtypedef to this group.
Adds a variable to the variable list.
Removes the dimension with the given name.
Make a relative group of this group.
Convert ddsaliasfields todasaliasfields.
Print the das.
Returns the basetype of the variable with the given name.
Write a grid to the file.
Replace missing values.
Replace missing values and scale.
Get the x - start of a geoshift
Writes a grid to the file.
Write the httpservlet response to the output stream.
Make the top index file from featurecollectionconfig.
Gets the type of the gribcollection.
Update gribcollection.
Update leafcollection.
Open a gribcollection from a data file.
Open a gribcollection from a data file.
Returns true if the given url matches the pattern.
Adds a triple to the dfaltrc table.
Returns the value of the given key and url in the dfaltrc object.
If the number of triplestores in the dfaltrc. triplestore is less than the
Insert a triple into the triplestore.
Gets the local datasets.
Find dataset by name.
Sets the projection.
Returns an iterator over the shape of the featset.
Make the shape list.
Compares the specified string to this string ignoring case.
Start a progressmonitortask.
Checks if the given collectionupdatetype needs to be updated.
Normalizes the result and the eclist.
Sets the object at the given index.
Returns the structuredata at the given index.
Copy the contents of the structure to the result.
Get scalar object.
Convert a scalar object to a double.
Convert a scalar integer to an integer.
Get the float value of a scalar.
Gets the byte representation of a scalar.
Gets the short value of a scalar.
Returns the char value of a scalar member.
Get scalar string.
Get an arraystructure from a member.
Get an arraysequence from a member.
Get an arrayobject from a member.
Returns the minimum and maximum value for the given value.
Evaluate a field expression.
Returns a string representation of this constraint.
Returns true if the dapnode references the given dapnode.
Evaluates the given variable against the given sequence.
Returns the number of expansions in the given structure.
Computes the enums.
Compute the groups.
Compiles a CE constraint.
Checks if the given randomaccessfile is valid.
Make the actions system.
Gets the byteorder of a given kmachn.
Set byteorder.
Finds a key by its name.
Find the dmfileheaderinfo with the given name.
Gets the file header for the given file name.
Prints the parts.
Get the datapointer for a part.
Returns the FLT of a word.
Read a string from the input stream.
Unpack a dmpart.
Returns a string representation of the given bit.
Writes data to a writable channel.
Parse a base element.
Parse a grid.
Parse aliases.
Decode a list of data descriptors.
Replicates a list of data descriptors to a list of data descriptors.
Gets the dataset filename.
Returns the name of the featuretype.
Checks if two floats are nearly equal.
Returns true if the dapnode references the given node.
Parses the given string into a unit.
Checks if a variable is tiled.
Makes the best coordinatetimeabstract from complete.
Converts a latlonr to projectionrect.
Show timeseries all.
Make a map from a list of attributes.
Gets the values.
Gets the numeric value at the given index.
Write CDL.
Sets the string value.
Sets the values of this element.
Scans the input stream.
Generate the proxydsresolvercatalog.
Schedule a write message.
setthreddsdatatype.
Jump to threddsdatatype.
Prepare the GUI.
Create the tools frame.
Makes a name for the given axes.
Returns the lesser rank of two coordinateaxis.
Find the axis with the given type.
Gets the projectionct.
Returns true if the projection is a geometric projection.
Returns true if the coordinateaxis is regular.
Checks if subset is subset.
Check if the list of wantaxes contains any of the wantaxes.
Checks if the coordinateaxis with the given name exists in the list of coordaxes.
Checks if a list of dimensions contains a domain.
Checks if the list of axistypes contains any of the axistypes in the list of wantaxes
Returns true if the axistype is one of the supported axistypes
Clone this dapnode.
Gets the selected bean.
Gets the selected beans.
Returns the currently selected cells.
Sets the selected bean.
Restores the state of the model.
Create a unit with the given name.
Consumes and closes the stream.
Checks if a variable is extra.
Checks if a variable is a coordinate.
Find the coordinateaxis for the given coordname.
Adds data variables for the table t.
Add a parentjoin to the cursor.
Make a station feature from a structuredata.
Create a nodemap.
Create a simpleunit factory with the given name.
Create a unit with exceptions.
Returns true if unitstring1 is compatible with unitstring2.
Checks if the given ucar unit is compatible with the datereferenceunit.
Checks if a string is a time unit.
Returns the conversion factor for the given unit string.
Convert the given value to the given unit.
Returns true if this unit is unknown.
Gets the value of this unit.
Creates a new toplevel clause for the given operator and subclause.
Create a clause for a boolean function.
Create a new btfunctionclause.
Make a gray scale image.
Crawl the invcatalogimpl.
Crawl a dataset.
Crawls a set of datasets.
Gets the file or cache for the given file location.
Gets the existing fileorcache for the given file location.
Sets whether debugleaks should be used.
Returns a sorted list of all files in the directory.
Closes the cache.
Seeks to the given position.
Flushes the buffer to the file.
Reads the next byte from the stream.
Read a range of n shorts from the stream.
Read an int from the buffer at the given position.
Read an array of ints from the stream starting at the given offset.
Read a range of n bytes from the stream.
Read a float from the stream.
Read a double from the stream.
Reads nbytes bytes as a string.
Reads the maximum number of characters from the stream.
Write a boolean array to the stream.
Write a range of n shorts to the stream.
Writes a range of characters to the stream.
Write an array of ints to the output stream.
Writes an array of longs to the stream.
Write a float array to the output stream.
Write a double array to the output stream.
Writes a string of bytes to the stream.
Writes a byte array to the output stream.
Search for the kmpmatch in the file starting at the given offset.
Appends a query to the string buffer.
Factory method to create a mcollection.
Finds the index.
Checks if the partition is a leaf partition.
Construct the children.
Scans for children.
Read mfiles from index.
Gets the gridsets.
Acquires an object from the cache.
Remove a cachefile from the list.
Attempts to eject the object with the given hashkey.
Release the given filecacheable.
4 - bit version of int4
Update the in - memory cache of the given element.
Clear the cache.
Make a vertical transformation for the griddataset.
Returns true if the axis is global.
Returns true if the vertzaxis is positive.
Finds the index of a coordinate in the grid from a coordinate.
Finds the index of the coordinate within the x_coord and y_coord in the grid
Finds the index of a coordinate from a lat lon coordinate.
Find the xy index from a lat - lon bounding point.
Returns the position of the item in the arrow.
Get the item of the given pixel.
Iterate over all files in a directorycollection.
Get remote files.
Get the name of the subcenter.
Convert a string to a calendarperiod. field.
Returns a new calendarperiod with the given value and field.
Constructs a calendarperiod from the given udunit.
Subtract two calendardates.
Returns the conversion factor for the given calendarperiod.
Gets the value inmillisecs.
Returns the offset between the start and end dates.
Synchronizes the gemreader with the gridindex.
Initialize the table.
Add a daterootext to the map.
Find the longest path match for the given path.
Find the dataroot for a request path.
Convert a datarootext to a dataroot.
Gets the calendardaterange for the given calendar.
Reindex a list of coordinates.
Create a new netcdffilewriter.
Adds a group to the given parent group.
Adds a new enumtypedef to the group.
Delete an attribute from a group.
Rename a group attribute.
Add a recordstructure.
Aborts the service.
Writes the properties of this object to the given printwriter.
Extract the threddsmetadata from a dataset.
Divide this unit by another unit.
Converts this unit to a derived unit.
Converts this unit to a derived unit.
Convert a nested variable to an array structure.
Convert a top variable to an array.
Convert the dodsv to an array.
Close all open databases.
Opens the database.
Convert an integer to a period.
Ensures that the array capacity is at least the given minimum capacity.
Returns the string at the given index.
Make a catalog for a directory.
makeproxydsresolvercatalog - makeproxydsresolvercatalog
Gets the coordinatetype of the dataset.
Factory method for grib2pds.
Calculates the time of the month day day and second of the month.
Apply a scale factor to the value.
Parses a local concept from a file.
Adds a local concept to the inputstream.
Clean line.
Stores a concept in the local concept table.
Writes the grib1tables.
Write lookup table file.
Show localconcepts.
Entry point for the ecmwflocalconcepts program.
Returns the datasetsourcetype for the given name.
Expand the invdataset.
Full expand the catalog.
Name the datasets in the datasetcontainer.
Name dataset list.
Name the dataset tree.
Loads a picture from the source image.
Stops the loading except for the given url.
Notification that a source has changed.
Send a progress notification to all scalablepicturestatuslisteners.
Create a thread to scale the picture in this thread.
Returns the size of the scaled picture.
Get scaled size string.
Returns a list of concatenated parts.
Makes the header for the given stn and date.
sn_ckua returns a list of types.
Check for validgroup.
Set the root directory.
Makes the root directory.
Gets the cache file from the given file location.
Delete all files in the directory with the given cutoff date.
Cleans up the cache.
Returns true ifffxy is inbufrtable.
Create a coordinateaxis from a netcdfdataset ncd and variableds.
Create a copy of the coordinateaxis.
Checks if is numeric.
Formats the name and dimensions and description.
Gets the calendar from the attribute.
Sets the list of rows to be selected.
Gets the selected row.
Increment the currently selected row.
Gets the model index.
Sets the selected index.
Sort a string in quicksort.
Swap two elements of a string.
Gets a mfileos object for the given filename.
Rotate the lonlat by the given rotation.
Create an xmlstore from a file.
Create an xmlstore from an inputstream.
Create an xmlstore from a resource.
Make a standard filename from the appname storename and storename.
Save the preference file to the prefs file.
Save the outputstream to the outputstream.
Write an atomic variable to a serial writer.
Writes a structure to a serial writer.
Write structure 1.
Write a sequence to the serial writer.
Writes a record to a serial writer.
Checks if the file is valid.
Gets the wmoid.
Read a row n from the inputstream.
Gets the data at the given index.
Reads the data from a grib2drs. type0
Reads the data of a grib2drs. type0.
Create a cfgrid file from a list of data.
Makes an estimate of the size of a gridfile.
Create a gridfile with the specified location and gridlist.
Sets the list of stations.
Set the selected station for the given name.
Pick a station from the world.
Picks the closest station to the given pickpt.
Gets the selected station.
Get the projname for the given type.
Returns a list of all stations in the given boundingbox.
Gets a typical station by name.
Gets an iterator over the data of a station.
Get an iterator over the data of a station.
Reads data from the ray.
Returns the dot product of this vector and v.
Returns the norm of this vector.
Normalizes this vector.
Sets the services from the given datasetbuilders.
Returns the grib1parameter with the given id.
Gets the local parameter with the given id.
Adds a new name to the nameset.
Adds a symbol to the symbol set.
Gets the prefix for the given string.
Checks if email is ok.
Returns the double value of the parameter with the given name.
Calculates the CRC for this grid definition.
Returns true if this data is athin.
Returns the field index for the given field name.
Returns the timetypename of the given timerange indicator.
Gets the timecoord.
Sets the next polygon.
Sets the previous polygon.
Finds a property by its name.
Sets the current projection.
Get a subset of timeoffsetaxis from a subset of parameters.
Register an ioprovider for the given classname.
Register an ioserviceprovider.
Returns true if the given iosp class is registered.
Deregister an iospclass.
Checks if a file can be opened.
Opens a random in memory file.
Opens a random in memory file.
Opens an in memory file.
Opens an in memory file for the given URI.
Find the global ignorecase for the given name.
Serialize this netcdf element to a ncml string.
Writes the CDL to the outputstream.
Writes the CDL to the given print writer.
Write CDL.
Adds an attribute to the group.
Adds an attribute to the group.
Add a group to a parent group.
Add a dimension to a group.
Remove a dimension from a group.
Adds a variable to a group.
Add a variable to this group.
Add a string variable to the group.
Remove a variable from a group.
Sends an iosp message to the rootgroup.
Make the recordstructure.
Finish the group.
Read an array of variables from the given variablesection.
Read to bytechannel.
Reads a list of variables from the input.
Reads a variable section from the stream.
Make the fullname of the cdmnode.
Make a fullname with a valid path name.
Returns true if the mfile is included in the include filters.
Returns true if the mfile should be excluded.
Returns true if the mfile filter accepts the mfile.
Append a value to the vector.
Dispatch checkvalue.
Force the given value to the given type. If the type is byte then force the value to
Checks if the given string is a byte.
Checks if a string is a short.
Checks if a string is a valid int.
Checks if a string is a unsigned integer.
Checks if a string is a floating point number.
Checks if a string is a double.
Gets the attribute datatype.
Returns true if the dataset is viewed.
Checks if a string is a valid boolean string.
Checks if the given string is a valid alphanumeric string.
Checks if the given alphnumstring is constrained by the given constrained set.
Returns true if the path is descendonly.
Convert unicodecodepoint to percent hexadecimal string.
Returns the value of the parameter with the given key.
Compare two griddefrecord.
Process the inputstream.
Processes the given buffer.
Remove quotes from a string.
Mark the stack as stacked variables.
Write ncml to file.
Gets the value from threddsconfig.
Writes the CDL to a string.
Create the stationhelper.
Validates the string builder.
Get the azimuth of the message.
Returns the elevation of the message.
Gets the latitudes of the myasibs.
Gets the longitudes of the myasibs.
Returns the altitudes of the myasibs.
Gets the azimuths of the aryibs.
Returns the elevations of the myryibs.
Select a subset of variables from a list of member variables.
Select a variable with the given name.
Adds a membervariable to this structure.
Sets the members of the list of variables.
Sets the parentgroup of this variable.
Calculates the elementsize of this variable set.
Read the structure at the given index.
Read an arraystructure from the dataset.
Gets the datacategory for the given category.
Returns the classname of the class.
Adds a parameter to the attribute list.
Gets the header.
Converts a latlonrect to a projection point.
Returns the version of the given hasconvname.
Gets zaxispositive.
Set the parameters for the color scale.
Renders the plan view.
Returns true if this group is a child of another group.
Gets the messagetype for the given message name.
Install inall columns.
Sets the apikey and apisecret.
Create a label from a string value.
Returns a label for the given lines.
Generates an HTML label for the given string.
Connect to the socket.
Convert a cloudsqliptypes string to a list of iptypes.
Connect to the mysql server.
Purges a fluentlogger from the cache.
Compiles the given source code into the given class.
Adds a source code for the given class.
Read the graphic controlext.
Get the next frame from the header.
Gets the selectablepersons property.
Initialize the listchangelistener.
Gets the person with the given id.
Adds a list of messages to the validator.
Sets the personid of the welcomestring.
Create a viewmodel from a viewtype.
Load the countries.
Creates a javaviewstep for the given view type.
Create a fxmlviewstep for the given viewtype.
Clears the map.
Creates the index events.
Acquires an accessible object from a privileged object.
Load a view tuple from the classpath.
Query for stylemappingrow.
Get the pixel value from the imagebytes.
Get the pixel values from the imagebytes.
Validates the imagetype of a pngreader.
Create an image with the specified width and height.
Set the tiledata for the bitmap
Executes a raw query and returns the results.
Wrap query.
Queries the user and returns the result.
Queries the database using the given query.
Handles a cursor.
Gets the featurerow for the geometryindex.
Register a table with the cursorwrapper.
Retrieve a tile row from the database.
Get the coveragedata for a tiledao.
Get the coveragedata for the tiledao.
Get the coveragedata for a tiledao.
Get coveragedatatilematrixresults.
Get coveragedatatilematrixresults for zoom.
Get the results zoomin for the tile matrix and overlapping pixels
Get the results zoomout for the tile matrix.
Get the tilematrix from the coveragedatarequest
Get the value of a tile.
Sets the icon for the given geometrytype.
Gets the icon for the geometrytype.
Open or get the bindings db.
Converts a byte array to a bitmap.
Converts a bitmap to a byte array.
Create a new table with the given metadata.
Delete a table.
Gets or creates a table metadata for a geopackage and tablename.
Gets the id of the geopackage.
Create table metadata from cursor.
Create the extensions.
Gets the feature row for the cursor.
Executes a raw query and returns a custom cursor object.
Query the custom cursor for feature boundingbox and projection.
Query the custom cursor for the given geometryenvelope.
Count the number of envelopes in the envelope.
Performs a custom cursor query.
Builds the where clause.
Query for feature boundingbox boundingbox and projection
Count the number of features in the boundingbox.
Query the manual feature query results from the geometryenvelope.
Query for features in the featureset.
Counts the number of elements in this range.
Sets the data of the bitmap to the given format.
Sets the data of the bitmap to the given format and quality
Sets the bitmapcompression configuration.
Get the number of tiles in the bounding box.
Adjust the bounds of the boundingbox according to the zoom level.
Adjust googlebounds.
Adjust the boundingbox bounds for the geopackageboundswgs84.
Adjust the boundingbox bounds for the geopackage bounds.
Get the boundingbox for the zoomlevel
Get the tilegrid for the zoomlevel
Query for a tile row.
Query for tiledescending.
Get the closest zoom level for the given length.
Get the approximate zoomlevel for the given length.
Query for tilegrid.
Delete a tile.
Count the number of tiles in the specified zoomlevel.
Checks if is google maps.
Get the pixel value from the image bytes.
Get the pixel values from the image bytes.
Validates the imagetype of a directory.
Create a coveragedatatiffimage with the specified width and height.
Sets the pixel value of the first pixel of the coveragedatatiffimage
Gets or opens a geopackage.
Gets the current row.
Move to the next invalid state.
Query by base feature id
Delete by base id and geometrytype
Get a rectangle with the specified width height boundingbox boundingbox and boundingboxsection.
Get a rounded floating point rectangle with the given width height boundingbox boundingbox and boundingboxsection
Delete missing databases.
Creates and closes the geopackage connection.
Checks if the given database is valid.
Validate database and close on error.
Validates the SQLite database and closes it.
Validates a SQLite database.
Validates the database header.
Checks if the database header is valid.
Adds internal databases to the collection.
Adds external databases.
Import a geopackage.
Gets the geopackage metadata for the database.
Gets the geopackage metadata at the external path.
Create a new geometry metadata object.
Populate a geometrymetadata object from a geometryenvelope.
Delete a geopackage.
Create or update a geometry metadata.
Update a geometry metadata.
Count the number of rows in a table.
Create a geometry metadata object from a cursor.
Update the table with the given values.
Draw a bitmap for the tile.
Gets a list of simpleattributesrows for a list of ids.
Integrity check.
Gets the usermappingdao for the given tablename.
Get a simpleattributesdao from the userdao table.
Returns a list of mapping ids for the given extended relation and base id.
Gets a list of mapping ids for a given extended relation and related id.
Checks if the table has a mapping with the given baseid and relatedid.
Counts the number of items in the custom cursor.
Register a custom cursor wrapper for the specified table.
Create a usercustomdao object from a geopackage and tablename.
Get the tile from the request boundingbox
Draw a tile bitmap.
Reproject the tile to the requested width and height.
Retrieve the tilecursor from the tilematrix.
Calculates the redrawoverlap.
Sets the density of the featurepaint.
Sets the linepaint.
Sets the polygonpaint.
Draw the tilebytes.
Draw a tile at the specified location in the current zoom level
Draw the tile query index bitmap
Query the number of features in the feature set.
Query indexed features count.
Query for feature index results
Query the feature index results for a boundingbox.
Draw the tilequeryall bitmap
Simplifies a list of points.
Gets the pointpaint for the featurestyle.
Gets the linepaint for the featurestyle.
Get the polygonpaint for the featurestyle
Gets the polygonfillpaint for the featurestyle.
Get the stylepaint for the featurestyle and drawtype.
Get the stylepaint for a style row.
Get the paint for a stylerow and featuredrawtype.
Get the paint for the styleid and featuredrawtype.
Puts a bitmap to the iconrow.
Quotes the given contentvalues using the quotewrap algorithm.
Create a bitmap from the layered bitmap.
Recycle the bitmaps.
Get the bitmap for the layer.
Get the canvas for the layer.
Create the bitmap and canvas for the layer.
Get the stylemappingdao for the feature table.
Gets the styledao.
Gets the icondao.
Gets the featurestyles for a featuretable.
Gets the styles for a feature table.
Get the stylerow for the feature table and geometrytype.
Gets the icons for a feature table.
Gets the tableicon for the feature table and geometrytype.
Get the featurestyles for a featurerow.
Gets the featurestyles for a feature table and featureid.
Get the styles for a featurerow.
Gets the icons for a featurerow.
Get the styles for the featureid and stylemappingdao.
Gets the icons for the feature id and stylemappingdao.
Sets the featurestyles of a featuretable.
Sets the tablestyles for the featuretable.
Sets the table icons for the feature table.
Sets the featurestyles for a feature row.
Sets the featurestyles for a feature table.
Sets the styles for a featurerow.
Sets the styles for a featuretable.
Sets the style of the feature row.
Sets the default style for the feature row.
Sets the default style for the feature table.
Sets the icons for the feature row.
Sets the icons for a feature table.
Sets the icon of the feature row.
Sets the default icon for the feature row.
Sets the default icon for the feature table.
Gets or inserts a style row.
Gets or inserts an icon in the icon row.
Insert a stylemapping row into the mappingdao.
Delete the tablestyle mapping for the featuretable
Delete the tableicon mapping for the featuretable
Delete tablemappings.
Delete tablemapping.
Delete the mapping for the feature id and geometrytype
Get all tablestyleids for a featuretable
Get all tableiconids for a featuretable.
Get all styleids for a feature table.
Returns the list of unique icons for the feature table.
Gets the imagebytes.
Flush the output stream.
Get the pixel at the given location.
Read the pixels from the reader.
Draw a feature.
Draw a linepath to the canvas.
Draw a polygon path.
Adds a linestring to the list of points.
Adds a polygon to the polygon.
Gets the cache for the given tablename.
Remove a featurerow from the table.
Clears all caches and resizes them to the given maximum size.
Gets the cached tablestyles.
Returns the cached icons for this feature style.
Get the tabledao for the featuredao.
Sets the width of the geopackage.
Sets the height of the geopackage.
Returns the dimensions of the derivative of this bitmap.
Calculates the density of a tile.
Read blob value.
Read a custom table from a geopackage connection.
Gets the color or creates a new color if it does not exist.
Validates the given color.
Create a color from hexcolor and opacity.
Create a geopackagemanager instance.
Sets the progress of the feature table index and rtreeindexer.
Returns the index of the feature indices of the given types.
Returns true if the feature row is indexed.
Deletes a collection of featureindextypes from the index.
Deletes the feature index with the given types from the given row.
Deletes the feature index for the given geometryid.
Deletes a feature index from the feature table.
Returns true if this feature is indexed.
Returns the list of indexed featureindextypes.
Query for featureindex results.
Counts the number of features in the table.
Gets the boundingbox of the feature table.
Query for featureindex results.
Gets the indexed type.
Gets the internal file for the given filepath.
Gets the internal filepath for the given filepath.
Gets the geometrytype.
Sets the geometrytype.
Checks if the url has boundingbox.
Replaces the coordinates of the tile generator variables in the url with the coordinates of the tile generator
Checks if the given URL has a valid XYZ value.
Replace the boundingbox at the specified location with the specified boundingbox.
Replace boundingbox with url.
Returns the geopackagegeometrydata for this table.
Index the feature row.
Update the last indexed time for a geopackage.
Delete the featuredao table.
Delete the index for the given geometryid
Returns true if this geometry is indexed.
Query the feature set for the feature set.
Query the featuredao database and tablename.
Count the number of features in the specified boundingbox.
Query for features from the feature set.
Count the number of features in the envelope.
Query the feature boundingbox for feature boundingbox and projection
Count the number of features in the boundingbox.
Gets the featureboundingbox.
Gets the geometry metadata for the cursor.
Gets the featurerow from the cursor.
Gets the featurerow for the geometry metadata.
Get the tiledaos for a feature table
Get the featuredaos for a tiletable
Get boundingbox from featuretiles boundingbox and projection
Query by ids.
Returns a list of unique base IDs for this table.
Returns a list of unique related ids for this table.
Delete by baseid.
Delete by relatedid
Delete byids.
Build whereids.
Create a geopackage metadata object.
Delete a database.
Rename a geopackage metadata to a new name.
Rename a column to a new name
Get a list of all geopackage metadata.
Get the metadata for a database.
Get a geopackage metadata by id.
Get or create a geopackage metadata.
Returns true if the database is external.
Get the metadata for an external path.
Returns a list of metadata where name like the given string
Returns a list of metadata where name not like the given string.
Gets the metadata where name like.
Create a geopackage metadata object from the cursor.
Called when a view is created.
Adds aparallax view to the viewgroup if it is a viewgroup.
On create view.
Internal helper to create a custom view.
Subappend an iloggingevent to the given cyclic buffer.
Find config file from system properties.
Gets the resource for the given filename.
Auto - configure the joran configuration.
statuson resourcesearch.
Convert socketaddress to string.
Creates a new executor service.
Start converters.
Subclasses should override this method to provide their own implementations.
Adds a substitutionproperty.
Returns the value of the property with the given key.
Compiles a converter.
Consumes the next token and creates a new node.
Convert a date to a regex for fixed date.
Starts the interpretation.
Ends the evaluation of the evaluator.
Initialize the context selector.
Create a dynamic contextselector from the given string.
Sets up the properties.
Returns the absolute path to the external storage directory.
Gets the databasedirectorypath.
Gets the absolute filepath of the given filename.
Evaluates the ilogging event.
Gets the discriminating value for an ilogging event.
Update the mask based on the time elapsed since last mask update.
Gets the filterchaindecision.
Create the keymanagers.
Create the trustmanagers.
Create a keystore factorybean from system properties.
Get the location from the system property.
Returns the URL for the resource at the given location.
Returns true if converter chainhandles throwable handling.
Stop the hook.
Print incase of errors or warnings.
Prints iferrorsoccured.
Prints the status of the given context.
Gets an entry from the live - or lingerers map.
End of life.
Returns the value of the given string.
Rename a file or directory.
Indicate if two files are on the same volume.
Returns the environment variable for the given key or null if the key does not exist.
Gets the systemproperty value for the given key.
Sets the map of mdcproperty names to map.
Output mdcforallkeys.
Extract the stacktrace elements from the throwable.
Checks if is inframeworkspacelist.
Adds a new status to the status list.
Adds a statuslistener to the list of listeners.
Looks up the implicitaction for the given elementpath and attributes.
Returns a list of all applicable actions for the given elementpath.
Sets the classloader to use.
Gets the value of the system property.
Decapitalizes the given name. If the name is null or empty the name is returned.
Returns an array of method descriptors for the given class.
Returns an array of property descriptors for the given class.
Starts the encoder and outputstream.
Add an addonconsolelistenerinstance to the status manager.
End the interpretation.
Gets the discriminating value for the logging event.
Checks if the logging event is discardable.
Starts the shutdown hook.
End the interpretation context.
Checks if supported protocols are enabled or not.
Check if the supported ciphersuites are enabled and if not return the default ciphersuites.
Returns an array containing the included and excluded strings.
Convert a string to a scope.
Sets the properties of the interpretation context.
Adds a new appender to the list of appenders.
Detach a appender from this appender list.
Detach appender from appender list.
Handle a change in the parentlevel.
Call appenders on all parent loggers.
Detach appender from a logging event.
Create a logger for the given lastnamepart.
Call the callturbofilters method.
Log a logging event.
Creates a socket and waits for it to finish.
Create missing parent directories for the given file.
Convert this object to an integer.
Convert an integer to a level.
Gets the resourceoccurrencecount.
Gets the resource URL from the classloader.
Gets the classloader of an object.
Gets the class loader as privileged.
Gets the classloader of the given class.
Starts the encoder.
Gets the tag for the ilogging event.
Initializes the interpretation context.
Gets the separator index of the given string.
Evaluates an iloggingevent.
Gets the thread name for the client thread.
Checks if two files are on the same filestore.
Append an event object to the end of the chain.
Send a cyclic buffer to the cyclic buffer.
Add a mdcvaluelevelpair.
Create a converter for a keyword.
Create a compositeconverter for the given compositenode.
Determine the compression mode.
Configures the connection to the given URL.
Configures the configuration for the given file.
Configures the given inputstream.
Build the interpreter.
Configures the given input source.
Configures the interpreter using a list of saxevent objects.
Gets the value of a property.
Sets the name of the property.
Returns true if the context has a statuslistener.
Returns the time of the last reset.
Start the converter.
Gets the effective converter map.
Returns the header of the file.
Returns the footer of the file.
Performs the action.
Ends the interpretation.
Returns a copy of the clients list.
Adds a client to the list of clients.
Removes a client from the list of clients.
Get a copy of the context map.
Gets the valueofmethod for the given type.
Getturbofilterchaindecision.
Checks if is androidos.
Initialize the context.
List files in folder matching stemregex.
Prints the status in a retrospective manner.
Gets the database file.
Clear expired logs.
Checks if the last cleanup time has expired.
Subappend an iloggingevent to the given insert statement.
Secondary subappend.
Bind logging event to SQLite statement.
Converts an object to a string.
Computes the reference mask for the given iloggingevent.
Merge propertymaps.
Insert an exception into the table.
Gets the prefixmatchlength of the elementpath p.
Gets the effective level.
Checks if is unequivocally instantiated.
Returns the child value of the given parent value.
Processes the include request.
Opens an inputstream for the given url.
Trim head and tail.
Returns true if the server should start.
Returns true if this exception is transient.
Set read and write hosts.
Ensure local index.
Synchronously sync the data selection queries.
If the last sync date is less than delaybetweensyncs then sync the last sync date.
Waits for a task to finish.
List indexes onlinesync.
Converts the inputstream to a char array.
Converts an inputstream to a byte array.
Consumes the input and error streams and disconnects the connection.
Returns a list of hosts that are uporcouldberetried.
Set the type of places query.
Starts the crawling.
Add a value to the cache.
Gets a value from the cache.
Waits for all threads to complete.
Report an exception to the user.
Copies all files in src to target directory.
Initializes the simulator properties.
Gets the value of a static field.
Gets a method by its name.
Format a percentage value.
Format a double.
Format a long.
Writes a JSON string to the stream.
Write an integer to the JSON stream.
Write a double to the JSON.
Reads a JSON numeric character from the reader.
Read a long from the JSON stream.
Read a double.
Reads a JSON string and returns it as a bytestring.
Execute a method call.
Invoke a methodcall.
Enqueue a methodcall to be executed.
Gets resource from fspath.
Update the decoration.
Refresh the repository view.
Gets the resourcehistoryview.
Open an editor for the given contents and name.
This method is used to report authentication failure.
Prompt the user for authentication.
Create the default page for the book.
Starts the thread.
Sets the iskeepallalive flag.
Sets the isomit flag.
Sets the owner of this node.
Add a conditionfactor to the policy.
Create conditionterm from streamtokenizer.
Returns true if the conditionterm matches the conditionterm.
Gets the content of a DSL resource.
Loads the dsl configuration from the given ifile.
Reads configuration from the given inputstream.
Gets the menu for the given control.
Add a response to the response body.
Adds a new href element to the list.
Insert a newhref before the root element.
Remove the first child with the given href.
Add a propstat to the element.
Get the href of the element.
Get the status of the element.
Gets the stackframe for the given ivalue.
Returns true if class1 is a subtype of class2.
Checks if proposals contains newproposal.
Resets the input stream to the initial state.
Creates the actions.
Adds a connection to this source and target.
Returns the value of the property with the given id.
Remove a connection from the source and target connections.
Sets the location of the property.
Sets the value of a property.
Sets the size of this dimension.
Dumps an array of constraints to a string.
Adds a new lockentry to the list.
Adds a child to this node.
Removes the child of the given vertex.
Initializes the ipreferencestore.
Disposes all the resources associated with this plugin.
Gets the string value of a resource bundle.
Gets the resourcebundle.
Gets the rulebuilderformcolors for the given display.
Sets the date as a datetime.
Sets the date and pattern to the given date.
Create an istatus with an error message and throwable.
Log an error.
Adds a field editor to the list of fields.
Adjust gridlayout.
Apply the font to the fields.
Calculates the number of columns.
Initializes the field editors.
Fire a propertychange event to all registered listeners.
Set the active editor part.
Add the zoomcombocontributionitem to the toolbarmanager.
Determines the dialect of the given backtext.
Create a new context with the given usercontext and locator.
Saves the input to the output file.
Creates the tablelisteners.
Associates the specified value with the specified url in this map. If the map previously contained a mapping
Puts an object into the cache.
Adds a token to this node.
Add a child node to this node.
Sets the file to use.
Adds a condition to the request.
Add a condition for a state token.
Returns true if the condition matches the condition.
Gets the first child prop of this element.
Returns the status of the element.
Set the prop for this element.
Read the last line from the backtext.
Read the last nondash line from the backtext.
Binds the given binding to the given id.
Binds two strings to the given id.
Binds the given id to the given bindings.
Creates the process for the example.
Create the process sample junit.
Gets the runtimeid.
Visit a rete. This method will be called for every node in the tree that is a
Visit a node. This method will be called for every node in the tree that is a node
Returns the dotid of the given object.
Remove this element from the list.
Add a set to this element.
Create a new locator with the given resourceurl and label.
Gets the presentation reconciler for the given sourceviewer.
Returns true if this status object is the same as another status object.
Returns true if this conditionterm contains the given term.
Create conditionfactor from streamtokenizer.
Adds the pages to the editor.
Delete an HTTP request.
Post a request to the kierest server.
Get the status of a job.
Executes the pull operation.
Handle pull results.
Sets the value at the given index.
Adds an activelock to the tree.
Filters completionproposals by prefix.
Read backwards.
Calculates the reterows of a vertex.
Gets the editpart for the given modelelement.
Gets the image descriptor for the given path.
Declare a registryimage.
Adds a vertex to the graph at the given depth.
Gets the row index for the given vertex.
Returns the width of all cells in the table.
Dumps the vertices in the graph to stdout.
Optimizes the matrix.
Initialize thegraphicalviewer.
Draws a new graph.
Returns the droolslinebreakpoint for the given source.
Sets the href of this node.
Returns true if this request can betalkdav.
Copy the contents of this object to the specified destination.
Examine multistatusresponse.
Extract the propstats from the multistatus.
Gets the content of the document.
Returns an enumeration of active locks.
Get the status of a property.
Sends a head request to the server.
Acquires a shared lock token.
Moves the elements in the specified enumeration to the specified destination.
protected checkin.
Refresh the lock with the given lock token.
Remove properties from thedav document.
Removes the property with the given qualifiedname.
Sets the content of an inputstream.
Sets the properties of this davNode.
Sets the property of the given element.
Unlock a lock token.
Update an existing version of an ilocator
Performs a versioncontrol request to the server.
Deletes the dav document.
Examine status code.
Returns true if the property has a child with the given name.
Write the request body to the given outputstream.
Convert a byte array to a hexadecimal string.
Convert an int array to a hexadecimal string.
Sets the isallprop property of this element.
Sets the ispropname attribute of the davElement.
Set the first child of this node.
Strip the last word from the prefix.
Update the treeviewer.
Writes the contents of this stream to the given outputstream.
This method is called when the stepover phase is completed. It is called when the stepover
Marks the parsererrors as invalid.
Skips all whitespace characters in the string.
Add resource toguvnor.
Commit changes to a file.
Gets the age.
Returns the length of the content.
Returns the maximum number of forwards in the string.
Gets the overwrite flag.
Get the passthrough flag.
Get the timeout.
Puts a string value into the context.
Sets the timeout value.
Opens a buffered reader for the given filename.
Parses the contents of a file and adds it to the list.
Returns the object metadata for the given text.
Strip obj metadata from text.
Adds a list of tokens to a node.
Gets the children of the condition.
Gets the children of the given object and text.
Adds a child to the list.
Prints the tree.
Prints a node to stdout.
Prints the given number of tabs.
Read a jsonvalue from the given text.
Returns the image descriptor for the given id.
Invokes the request.
Sets the request header field.
Create the rulesamplelauncher.
Create the rule.
Create the ruleflow for the project.
Create the ruleflowsamplelauncher.
Returns a list of iinstallableunit objects that are selected by this checkbox.
Create an image.
Returns the name of the field.
Gets the value of the evaluator property.
Returns the value of this field.
Adds a resource properties to a resource.
Sets the baselinecontrol.
Binds the specified member to the specified ilocator.
Gets the member with the given name.
Optimize the graph.
Initializes the controls.
Validates the page.
Generates an entitytag for the current thread
Gets the opposite of the given vertex.
Validates a list of otps against a list of otps.
Checks if the user is a right user.
Gets the username for the given publicid and filename.
Add yubikey to user.
Verify an otp.
Clear the password.
Get publicid from otp string.
Checks if the given string is a validotp format.
Create a simplenode evaluation with the given source.
Create a simplenode evaluation.
Clears the cache.
Checks if is jdk15.
Gets the package name of an object.
Returns the package name of a class.
Returns a unique descriptor for the given object.
Gets the class of the argument.
Checks if two classes are more specific.
Gets the value of a method on an object.
Gets the property descriptors for the given class.
Get a property descriptor from an array of property descriptors.
Gets the readmethod for the given target and name.
Reads a char from the stream.
The projection function.
Selects all the elements in the tree.
Convert an object to a long.
Convert an object to a double.
Convert an object to a biginteger.
Returns a bigdecimal value for the given object.
Convert an object to a string.
Returns the numeric type of the given value.
Convert the value to the given type.
Returns the int value of the given object.
Returns the numerictype of t1 and t2 depending on the canbenonnumeric parameter
Gets the numeric type of two objects.
Creates a number of the given type with the given value.
Pop the current evaluation from the stack.
Generate a getter for a field.
Generate the ognlsetter for a field.
Flatten the tree.
Initializes this node with the given source object.
Escapes a character in the image.
Sets the root of the context.
Gets the value of an expression from an object root.
Sets the value of an expression.
Sets the value of an object in the tree.
Checks if the given expression is a constant.
Get the defaultwatchserviceid.
Reload the application class loader.
Get an archiver by its name.
Check the archiver for problems.
Reads a file as a string.
Create an antproject.
Adds a systemproperty to the java.
Adds a systemproperty to the java.
Change a directory.
Refresh the button state.
Create a fileobserver with the given path.
Returns the selected folder.
Create a new folder.
Checks if the given file is a valid file.
Start a background job.
Starts a list.
Ends a list.
Handles motion event.
Get the croprect.
Computes the layout of the matrix.
Registers a listener to be notified when the content of the rtedittext widget is updated.
Add a spanwatcher to the spanned text.
Get the view for the spinner.
Returns the view of the spinner item at the given position.
Convert a spanned text into an HTML image.
Inparagraph a spanned text.
Creates a unique file with the given original file and targetfolder.
Determines the original file for the given URI.
Returns the namespace of the given name.
Returns the local name of the given name.
Sets the value of an attribute.
Sets the value of an attribute.
Gets the font name from a file.
Gets the font name for the given filepath.
Check if we need a new buffer.
Writes a portion of a byte array to the output stream.
Writes a byte to the buffer.
Writes data from the inputstream to the outputstream.
Writes this buffer to the given outputstream.
Returns a copy of this buffer as a byte array.
Sets the font size.
Converts windows separators to unix.
Recompute focus.
Ensure that the highlightview is visible.
Center the highlightview based on the zoom level.
Reset the documentlocator.
Validates the given value against the patterns.
Create an elementtype with the given name model memberof and flags
Sets an attribute of the given element.
Sets the parent of a child element.
Get an elementtype by its name.
Returns the index of the entity with the given name.
Cleans up the paragraphs for the given editor.
Apply the value to the selection.
Checks if the domain is valid.
Executes the given operation on the editor.
redo the current operation.
Replaces all occurrences of search with replace.
Gets or creates a threadstatus for the given thread.
Sets the decoding options for a thread.
Returns true if the thread can be decoding.
Decodes a file descriptor.
Returns a sorted set of all fonts in the assetmanager.
Gets the asset fonts.
Gets the system fonts.
Setup the parser.
Gets the reader from the inputsource.
Get the inputstream for a system.
Adup the content of the current element.
Expands the entities of the given string.
Looks up an entity in the buffer.
Restart the stack.
Pop the stack from the stack.
Restarts the stack.
Returns the prefix of the given name.
Returns true if the given prefix and namespace are a foreign key.
Trims quotes from the beginning of the string.
Splits a string into an array of strings.
rectify an element in the stack.
On save instancestate.
Unregisters this editor and all its registered editors.
Handles the main thread event.
On eventmainthread.
Get the base matrix for the bitmap.
Get the maximum zoom level.
Checks if the given editor exists in the selection.
Finds spans and removes it from the list of spans.
Picks a directory from the package manager.
Rotate an image.
Sets the output writer.
Writes a character to the output.
Writes a string to the output.
Returns true if the given boolean attribute is equal to the given value.
Writes a UTF - 16 string to the output.
Writensdecls.
Write the name of the element.
Creates a stream ifnot exists.
Wait for a stream to become active.
Completes a snapshot with missing instancesnapshots.
Wait until the nextprovisioning request is executed.
Get records from Amazon Glacier.
Performs an AmazonAction with retry.
Attempt to execute an action on the Amazon Pinpoint.
Checks if a bucket is accessible.
Loads snapshots from the snapshotstore.
Trigger the wildcardexpander.
Replaces the given string with the given pattern.
Delete any of the chars from the string.
Adds a resourcelintreport.
Update properties with configuration.
Gets the configuration properties.
Create autodetectedstream.
Convert a map of preprocessors to a map of postprocessors.
Compiles the given content using the given optional argument.
Reload the cache with a new value.
Reload the model with a new value.
Wraps a httpservletrequest in a wrapper.
Returns a transformer that transforms a basename to a suffix.
On error.
Send redirect to external resourcelocator.
Process a resource.
Create expander handler.
Locate an inputstream for the given URI.
Create the wroconfiguration.
Register the changelisteners.
Process request and response headers.
Sets the wroconfiguration.
Identify duplicate groupnames.
Merge the imported model into this one.
Locates an inputstream for the given URI.
Apply postprocessors.
Decorate a processor.
Process a request.
Split options into an array.
Load properties from an inputstream.
Parse properties.
Create a custom wromanagerfactory.
Persist resource fingerprints.
Checks if the given group is a target group.
Extend plugin classpath.
Gets the modelresourceasstream.
Initialize wromanagerfactory.
Sets the modeltransformers.
Compiles the given content and name into a string.
Merge a list of resources into a single string.
Process and merge a list of resources.
Run in parallel.
Apply processors to a resource.
Decorate a resourcepreprocessor with the given processing criteria.
Persist the contents of the fallback storage to the fallback storage.
Gets all fields of the given object.
Rewrite the given CSS URI and image URL.
Compute the new imagelocation for the given cssuri and imageurl
Adds a modeltransformer to the factory.
Serve processed bundle.
Initialize the aggregatedfolderpath.
Extract variables from a string.
Parse CSS.
Replaces all variables in the given css with the given variables.
Returns a resourcepreprocessor for the given postprocessor.
Checks if the resourcetype is eligible for the search.
Performs gzip response.
Create a pathpatternprocessordecorator for the given processor and pattern patterns.
Create a decorator that excludes the given patterns.
Create a resourcechangehandler.
Re remember a resource.
Apply the given function to each CSS import.
Filters the given collection to a list of nulls.
Check if the request parameter is minimized.
Finds the list of resources that are imported from the given resourceuri.
Computes the absolute URL for the given relative resource URI and import URL.
Create items as string.
Gets alias list.
Create the context.
Evaluates the given reader with the given source name.
Evaluates the given script with the given source name.
Processes the file.
Checks if the request is a handler request.
Create handler request path.
Rename a group.
Compute the destination folder.
Process group.
Check if a change is required for a group.
Locate the inputstream with the given URI.
Create a genericobjectpool.
Locates the inputstream for the given URI and folder.
Open a jar file.
Extracts the path from a URI.
Check if the request is minimized.
Add locators to the list of urilocators.
Decorate a wromodelfactory with a list of transformers.
Adds a require.
Executes the update script and returns the result.
Log summary.
Process a resource.
Gets the readwritelock for the given key.
Create a process from the given source file.
Parse properties.
Returns the taskinfo for this operation.
Gets the compilation command.
Parse the header.
Adds pragma pragma and expires headers to the map.
Get the pathinfo from the location.
Get the servlet path from the given location.
Checks if the given path matches the request URI.
Load regexp with key.
Safely copy the contents of the reader to the writer.
Create a temporary file with the given extension.
Clean imageurl.
Sets the attribute of the servlet context.
Generate a datauri for the given filename.
Generate datauri.
Sets the context with the given configuration.
Remove the correlation id from the context map.
Check if the group has changed.
Called when an exception occurs.
Check if a resource has changed.
Update the hash for the given group.
Checks if this resource has a resource of the given type.
Create a process from the source file and dest file.
Parse a group definition.
Create a group from an element.
Parse resource.
Gets the resources for a group.
Stop an elktimer.
Get a timer with the given name and todoflags.
Returns the registered timer for the given name.
Prints the statistics of the rule application.
Wake up worker threads.
Update the counters of processed jobs.
Update the counters of finished jobs.
Update the counter if it is smaller than the given value.
Visits the given rule and premise.
Instertinto taxonomy.
Ensures that the input loading stage is complete.
Restores the consistencychecking stage.
Returns true if the consistencycheck is inconsistent.
Restores the taxonomy.
Restores the instancetaxonomy.
Gets the entailmentinference.
Pre - executes this task.
Invalidates this stage and all its poststages recursively.
Returns a collection of indexed individuals added to the taxonomy.
Returns the collection of indexed individuals to remove.
Returns an unsupported operationexception for the given method.
Removes the element at the given position.
Remove k and v from k and pos.
Gets the moved position.
Returns true if d contains o.
Adds the given element to the given array if it is not already present.
Checks the occurrence numbers.
Adds a classconclusiontimer to this class.
Adds a timer to this ruleapplicationtimer.
Puts a key value pair into the keys and values array.
Removes the entry for the given key.
Enlarges the hash table.
Shrinks the internal state of this linear probing object.
Save the configuration to disk.
Prints the declaration of all classes in the given taxonomy.
Gets all instancenodes of a generic type node.
Removes all mappings from this map.
Combine a listhash with another listhash.
Copy an inputstream to an outputstream.
Returns a delegating incompletenessmonitor with the given additionalmonitors.
Processes the given taxonomy and writes it to the writer.
Submits an input to the pool.
Appends an object to the appender.
Marks the given queryclass as not computed.
Adds a direct typenode to this node.
Checks that the chain matches the given expression.
Creates a set that maps the elements of the given set to the given functor.
Adds an element to the set.
Removes the specified object from this set.
Adds a classconclusioncounter to this set.
Log memory usage.
Sets the reasoner configuration options.
Shutdown this thread.
Print the header.
Prints an array of values to the logger.
Returns a string representation of the given character.
Adds the given counter to this set.
Writes a resource to the xhtml writer.
Gets the actioninputparameter with the given name.
Gets the property descriptor for the given propertypath.
Gets the required parameters.
Returns true if the given class is a single value type.
Adds a link parameter.
Sets the mediatype of the link.
Adds a hreflang parameter.
Adds a rev to the linkparams.
Adds a linkparam to the linkparams list.
Expand the partial URI template with the given arguments.
Gets the rels for this link.
Get the revs for this link.
Checks if the action descriptor has unsatisfied required variables.
Returns the value formatted.
Returns true if the method parameter is hidden.
Returns true if the inputannotation contains a property include value.
Returns true if the property hasexplicitorimplicitpropertyincludevalue.
Returns true if this request is required.
Returns the default value for this request.
Returns the parameter name for this method parameter.
Gets the property or parameter name from an actioninputparameter.
Gets the vocabulary for the given bean.
Gets the query.
Appends the form to the request.
Writes an inputbutton to the stream.
Append inputorselect.
Add a affordancebuilder to this builder.
Returns the partialuritemplatecomponents.
Returns a partialuritemplatecomponents with optional variables stripped of optional variables.
Gets the first node with the given name.
Gets the first node with the given rel.
Returns an iterator over the nodes in this list.
Creates a persistent hashmap from an iterable of keys and values.
Creates a persistenttreemap from an iterable of entries.
Creates an empty persistenttreemap.
Returns an imsorted set of the entries in this sorted set.
Returns the last key in the list.
Folds an element in an iterable.
Drops the elements of this stream until the predicate evaluates to true.
Folds the results of applying the reducer to the ident and ident.
Creates a tuple2 from a map entry.
Matches an item against the current selection.
Register a list of classes.
Gets the element at the given index.
Append an element to the vector.
Concatenate this vector with the given items.
Returns a mutable set of the given items.
Returns a mutable vector of the given items.
Returns an imset of the given items.
Returns an imlist of the given items.
Create an xform from an array of items.
Create a stringbuilder that indents the given number of spaces.
Returns a string representation of an array of items.
Returns a lazy reference of the given function.
Apply the expression to the current thread.
Inserts an item in to an array at the given index.
Copies the items from the given array to the given class.
Suspend ifassoaciated with thread.
Invoked before an asynchronous operation is executed.
Build the components.
Validates a directory.
Create a superclass link for a concrete class.
Copies all declared methods from the source class to the destination class.
Copy the given methods to the given destination.
Remove sbbentity with currentclassloader.
Returns true if notifications are enabled for the given paramname.
Gets the referencesdraentitylinks whichnot exist in the servicecomponent.
Install a service component.
Uninstall a service.
Checks if a raentitylinkname is referenced by a ralinkname.
Returns the usage parametersets for the given sbbid.
Reset all usage parameters.
Display the result.
unfold array.
Executes the slee endpoint.
Bind a name to the node.
Unbind a name from the cache.
Looks up a node by its name.
Gets the namebindings for this node.
Moves to the next sbbentity.
Returns true if this tracelevel is higher than another tracelevel.
Extract a jar from a jar file.
Pipes the inputstream to the outputstream.
Put an object into the node.
Attach a sbbentity to this node.
Detach a sbbentity from this node.
Returns true if nosbbsnode is attached to this node.
Returns the set of sbbentities attached to this node.
Attach a timer to the container.
Detach a timer from the timersnode.
Returns true if notimers are attached to this node.
Returns the set of timers attached to this node.
Namebound node.
Remove the node with the given name from this node.
Returns true if this node has no names bound.
Returns a copy of this node s names bound.
Sets the cmpattribute value.
Get a cmpattribute from the list of attributes.
Returns a copy of this map.
Initialize the mbeannotificationinfo array.
Send usage notification.
Download remotedu.
Update the deployedcomponents.
Install deployableunit du.
Uninstall a deployableunit.
Process internalundeploy.
Shows the status of the job.
Returns true if the given logrecord is loggable.
Gets the logger for the given log record.
Gets the sbbentityids of the node.
Gets permissions.
Returns the codesources for the current policy.
Checks if a profile exists in the profile table.
Remove the profile table from the profile table.
Update configuration properties.
Slee running.
Caller must be synchronized.
Activates the entity.
Deactivates the entity.
Schedule all activities end.
Remove this notificationsource from the state machine.
Gets the resourceadaptorinterface for the given ratype.
Called when a service is active.
derreferactivityhandle.
Called when an activity is ended.
Update the raconfiguration properties.
Verifies that the configuration properties are valid.
rastopping the object.
rains the object to the inactive state
Call this method when the object is inactive.
Unset the resourceadaptorcontext.
Unset the faulttolerantresourceadaptorcontext.
Build the profileattribute map.
Resume the activity.
Gets the activitycontexthandles.
Returns the usagembean for the given paramsetname.
Decorate the abstract class.
Fire an event to the SBB entity.
Fire an event to the sbbentity.
Gets the profilecmpmethod.
Returns a map of abstract methods from a class.
Returns a map of interface methods from the given interface.
Create the objectpool.
Remove the objectpool from the profiletableimpl.
Checks if the notificationsource is owner of an alarm.
Raises an alarm if it is alive.
Get usage parameter set.
Gets the spec descriptor.
Checks if the given url accepts the given deployableunit.
Initialize the deployableunitwrapper.
Start a deployable unit.
Stop a deployable unit.
Show the status of the deployment.
Execute aftercommitactions.
Execute aftercommitpriorityactions.
Execute afterrollback actions.
Execute beforecommitactions.
Execute beforecommitpriorityactions.
Returns the names of all tracers defined in this context.
Create a tracer with the given name.
Remove the replicateddata.
Processes a component with usage parametersinterface.
Gets the objectpool for the given serviceid and sbbid.
Create an objectpool.
Executes the slee endpoint.
Starts an activity context handle.
End an activity.
Checks if the eventpreconditions are valid.
Fire an event.
Generates the class that generates abblocalobjectconcreteclass.
Make the getter method.
Convert the optarg to an object.
Sets the profileid.
Extracts the message from the result.
Checks if the given object is contained in the cache.
Returns true if all elements in the collection are contained in this set.
Remove all elements from the given collection.
Returns true if this level is higher than the other level.
Reads the object from the stream.
Remove all classes from the pool.
Adds a profilecall to the profileobjectimpl.
Returns the profile objectimpl for the given profilename.
Passivate profileobject onto txend.
Sets the value of this component as text.
Generate activitycontextinterfaceconcreteclass.
Generateconcretemethods.
Sets the value of a data attribute.
Adds a namebinding to the cache.
Remove all namedbindings from the cache.
Remove a namebinding from the cache.
Attach a timer to the cache.
Removes the timerfacility from the timers
Attach a sbbentity to the activity context.
Detach a sbbentity from the activity context.
Gets sorted sbbattachmentset.
Ends the activity.
Add a deployablecomponent to this component.
Gets the external dependencies.
Returns true if any of the dependencies are satisfied.
Returns true if this list contains duplicates.
Gets the installactions.
Gets the list of uninstall actions.
Checks if hasreferringdu.
Close a profiletable.
Get the objectname from the profiletablename and profilename
Write mode.
Before setcmpfield method.
Invoked after thecmpfield method has been called.
before getcmpfield.
Invoked after getcmpfield method.
Invoked before management method invocation.
Invoked after management method invocation.
Deletes a file or directory.
Create the default constructor.
Create default usage parameter getter.
Creates the getter and setter methods for the sbbentity.
Create fireeventmethods.
Create the getsbbactivitycontextinterfacemethod.
Adds the given expression to the list of expressions.
Associates the specified object with the specified key.
Rebinds the given object to the target object.
Decorate the abstractsbb.
Invokes the given method with the given arguments and returns the result.
Gets the realfieldname for the given fieldname.
Sets the value of a field.
Gets the value of a field.
Initialize the profile.
Unset the profilecontext.
Gets the profilelocalobject.
Fires an eventifneeded event if the profileobjectstate is ready.
Gets the profilecmpslee10wrapper.
Create a ctclass with the given classname and interfaces.
Create a superclass link for a concrete class.
Add membervalues to annotation.
Gets the activitycontextinterface for the given activity.
Gets the classpool.
Sets the deployableunit.
Cleans up the classloader and permissions.
Execute the slee endpoint.
Checks if the class or interface withinterfaces has the same name as interfacesearched.
Returns a map of all abstract methods of the given interface.
Checks if the given tracername is the same as the given notificationsource.
Handles a profiletable query.
Create the tempdudeploymentdir.
Gets the entitymanager.
Starts the JVM.
Switchsafely class loader.
Make a proxy call.
Checks if the transaction is equal to the current transaction.
Converts the last access time to a TTL.
Returns true if the profile class is visible.
Gets the profileobjectvalidincurrenttransaction.
Returns a list of logger names that match the given regular expression.
Reset the logging levels.
Clear all loggers for the given name.
Add a logger to the mbeanserver.
Remove a handler from the mbeanserver.
Convert tracername to log4jloggername.
synclevelwithlog4j
Assign log4jlevel to log4jlevel.
Resets the cacheflags.
Send a trace notification to tracembean.
Checks if the given tracername is the same as the given notificationsource.
Write object to outputstream.
Read an object from an objectinputstream.
Adds a direct dependency for the given domain.
Returns a list of all the urlclassloaderdomainimpl objects.
Finds the class with the given name locally.
Find resource locally.
Find resources locally.
Creates and registers a profilembean.
Resume a transaction.
Builds a set of sbbids for the given componentrepository.
Gets the resourceadaptorentitylinks for the given componentrepository.
Initializes the slee state.
Shutdowns the slee.
Validates a state transition.
Generate namedusageparametergetter.
Add an argument to the update query.
Builds the polyjdbc instance.
Add a value to the query.
Executes the given operation and returns the result of the operation.
Create a regionrequest from a string.
Returns the region of this rectangle.
Gets the ontype.
Sets the list of viewinghints for this view.
Adds a viewinghint to the list of viewinghints.
Sets the list of renderings.
Adds a list of renderings to this resource.
Merges a list of profile objects into an imageapiprofile.
Create a rotationrequest from a string.
Create a sizerequest from a string.
Initialize the ADB connection.
Get the dump of the current device.
Handle the popbox command.
Push handlegps2device.
Executes adbcmd and cleans the temp file.
Takes a pulldump from the device and pulls it to apc directory.
Get the crashlog file.
Detabify this text editor with the given tabwidth.
Indents the text editor with the specified number of spaces.
Tokenizes the text in HTML.
Create a markdown string from the given text.
Escape special chars with intag attributes.
Adds an exception to the list of exceptions.
Close the statement cache.
Find the parent of the given typeelement.
Write to filer.
Write a bitvector01divider.
Appends the given bitvector to the given bitvector.
Read data from an inputstream.
Gets a list of objects from a path using the provided filters.
Sets the klovreport.
Adds a screenshot to the current step.
Sets the systeminfo for the given key.
Create a selector that selects a property.
Create a selector that selects an item as an alias.
Extract validation annotation data from an array of annotations.
Extract all annotations for a given property.
Finds the annotations of a property.
Gets the property descriptor for the given property name.
Convert a map to a given type.
Create a mappercomplex object from a map.
Convert an object to a map.
Convert an object to a map.
Returns a map of values for the given annotation.
Create the compositevalidator.
Lookup the list of validators and initialize them with the validation metadata properties.
Lookup a fieldvalidator in the registry.
Apply validation metadata properties to validator.
Remove a property from the map if it is blank remove it from the map.
Tick the clock with the given time.
Returns the size of the cache.
Hashes the given object using the hash seed.
Opens the database.
Puts all values in the given map into the database.
Remove all keys from the database.
Returns an iterator that iterates over the elements in the database starting at the given key.
Loads a map of the given keys from the database.
Flushes and closes the database.
Reduces the array by the number of elements in the array.
Reduce byr.
Computes the variance of a double array.
Returns the mean of the values in the array.
Invoke a method from an object argument.
Reduces the array by the given reduceby function.
Returns a string representation of the given timestamp in euroutc system date format.
Checks if an object matches the criteria.
Create a notin criterion.
Create a criteria from a list of objects.
Create a criteria from a JSON string.
Adds an array of integers to the end of the array.
Returns the maximum element in the array or null if the array is empty
Returns the first element of the list.
Gets the last of the list.
Returns the last of the list.
Returns a list with the least count elements in the list.
Returns the minimum element of the list or null if the list is empty
Returns the minimum element of the array with the given sortby.
Process an array of maps.
Handle collectionofmaps.
Create an object from the given map.
Returns the value associated with the given key.
Create a tooltip with a namespace.
Adds a hex encoded int to the char sequence.
Process the write queue.
Starts the executor service.
Returns the string at the given index in the given string.
Convert a string to a string starting at the given index.
Checks if the given string is in the given chars.
Add a character to a string.
Add objects to a string.
Compacts the given string using UTF - 8 encoding.
Splits the given string into an array of strings.
Splits the given string by space.
Splits the given string by pipe.
Convert a char array of array to a string array.
Converts a string to camel - case.
Returns true if start is inside of end.
Underbarcase a string.
Convert a number to a string.
Sorts an array of sorts.
Sorts the given list according to the given fields.
Returns a comparator for the given fields.
Gets the child comparators.
Returns true if the map contains the given value.
Equivalent to equalsordie.
Compares two arrays of integers and returns true if they are the same.
Sums an array of integers.
Rounds a number up to a power of 2.
Sorts the specified list using the specified sortby and fields.
Sorts the given list using the given sortby and fields.
Sets the value of a field from a map.
Convert the given object to a list.
Create loadallversiondatasql.
Returns a copy of the given list.
Checks if a value1 has a string field with the given name.
Checks if class has a string field with the given name.
Checks if a class has a field with the given name.
Gets the first comparable or primitive from a class.
Gets the sortable field from the given value1.
Compares two cache entries.
Compares the time of the two cache entries.
Sorts the given list according to the given sort criteria.
Sorts the given list according to the given sortby.
Sorts the entries in the map using the specified sortby and nullsfirst.
Sorts the values of the given map according to the given sortby and returns a collection of
Sorts the keys in the given map according to the given sortby and returns a collection of
Sorts the given array using the given sortby.
Returns a comparator that compares two fields using the universal comparator algorithm.
Returns a comparator that compares two objects using thisuniversalcomparator.
Gets the value associated with the given key.
Gets the silent value for the given key.
Evicts the cache entries from the cache if they have been evicted.
Dynamically initialize the min and max values if not already initialized.
Allocate a buffer from the recycle channel.
Determines if we should exit.
Manage inputwriterchannel.
Enqueue empty maybe flush if necessary.
Starts the monitor.
Start the receiver.
Gets an object from the map.
Main queryplan.
Performs a filter group.
Tick the timer with the given time.
Synchronize the outputstream to disk.
Cleans up the outputstream.
Writes the next buffer to the output stream.
Writes a bytebuffer to the output stream.
Initializes the outputstream.
Put all values in the map.
Convert a key to a byte array.
Reads the metadata for a given property.
Extracts the validator metadata from a string.
Returns the list of validator metadata for the given property name.
Extract validator metadata.
Extracts the validator metadata from the given annotations.
Convert annotationdata to validatormetadata.
Splits the given string using the given split character.
Splits a string by whitespace.
Splits a string by the given delimiters.
Remove all characters from a string using the given delimiters.
Splits the given string by the given delimiters using the given delimiters.
Parse a double from a string buffer.
Parse an int from a string buffer.
Parse a long from a string buffer.
Gets a property by its path.
Gets the fields from an object.
Gets the type of a property.
Injects a value into an object property.
Sets the value of the property at the given path.
Gets the value of a collection property.
Gets the value of a property from an object.
Gets the int value of a property.
Initializes the message.
Create a message with the given key and arguments.
Performs a validation create message.
Converts a list of keys to values.
Gets the subject of the validation context.
Parses the given text as an object.
Send http request.
Delete a db.
Create a db.
Returns a list of uuids for the given count.
Trigger replication.
Query value.
Sets whether the view is descending.
Synchronize all design documents with db.
Get designdocument by id.
Gets all fromdesk resources.
Get a designdocument from a design document id.
Saves the replicatordoc to the database.
Find a replicator document.
Search for replicator documents.
Remove the replicator doc from the database.
Finds an object of the given type.
Returns a list of documents that match the given jsonquery.
Checks if the document contains the given id.
Bulk insert a list of objects.
Sends an object to the server.
Executes an HTTP PUT request.
Executes a POST request.
Executes delete request and returns response.
Validates the response.
Sets the entity.
Adds an attachment to the attachment map.
Get the changes.
Read the next row.
Convert the given money to a string.
Shuts down the thread pool.
Creates an observable that writes data to the servlet outputstream.
Add tags to a metric.
Verify and create temptables.
Gets the namespace id for the given namespace name.
Checks if is query.
Send authentication request to serverexchange.
Gets the verb.
Generate the subjectaccessreview.
Called when a request result is received.
On request failure.
Initializes this instance with a session.
Find scheduled jobs.
Convert a map of buckets to a list of buckets.
Ends an exchange.
Returns an observable that contains the data from the bucket of the given timestamp.
Create buckets from step.
Send a message to the producer.
Send a message to the producer.
Send a delay message to the producer.
Scans the string cursor using scanparams.
Adds a file to the zip.
Replaces the given text with the given file.
Builds the zip file.
Generates metrics for the given component and product.
Fetch the content for the given content id.
Fetch order content.
Upload a transformation to the link container.
Generate the metrics for the given components.
Create a file in the given parent directory.
Ends the current object.
Register a modeladaptor.
Register a renderer for the given type and attributerenderer.
Prepare the template.
Adds a domain object to the assembler.
Sets the value of a property.
Adds a child object to this configuration object.
Creates a supplier for files from a directory.
Copy the contents of the inputstream to the outputstream.
Parses a document from a file.
Parses an XML document from the given reader.
Returns a stream of elements in the given parent element.
Returns a stream of nodes in the given parent element.
Gets the first child element of the given parent element with the given names.
Returns a stream of named elements in the given parent element with the given names.
Validate an XML Schema against an inputstream.
Entry point for the filearchiver.
Create a builder from an inputstream.
Create a builder from a resource.
Process an entry and process it.
Encodes the given string to ascii characters encoding.
Sets the signature of an access key.
Removes any whitespace from the data.
Sign the requesthandler with the callback.
Sets the data for the given objectkey
Complete multiupload.
Handles the request for a specific notification.
Add a notificationstate to an entry.
Returns true if the timeout has expired.
Get a notification by id.
Get a list of addressees for the given id.
Get the addressee with the given id
Get a list of events by notification id
Gets an event from the restservice.
Returns the url for a single notificationrest request.
Gets the entry with the given id.
Gets the authentication token.
Returns the total number of notifications in this notification category.
Adds the new categories to the notification.
Fetch the notification response from the portlet.
Creates a notification response with the given error message.
Maps a portlet response to a notificationresponse.
Read a notificationentry from the query.
Attaches the available actions to the notificationentry.
Normalize a link.
Gets the notification category from the portlet preferences.
Gets the notification source from the portlet preferences.
Invokes the readnotices action.
Read a notification response from a file.
Gets the studentid from the request.
Extract the userid from the response.
This method is invoked when a notification entry is snoozed.
Gets the attributes map.
Normalize a geotuple3d_f64.
Returns true if boxa is contained in boxb.
Sets the closest point to the point p and closestpt.
Computes the sign of a point.
Sets the R and T values of the given se3f64.
Sets the rotation of this quaternion to the given values.
Convert a rectangle to a polygon.
Convert a polygon to a quadrilateral geometry.
Computes the bounding rectangle for the quadrilateral and rectangle.
Computes the bounding box of a polygon and a rectangle
Center a quadrilateral.
Computes the average of each vertex in a polygon.
Convexhull convex hull.
Remove an acute polygon from the polygon.
Calculates the average of closestpointerror of a polygon.
Compute the area of two polygons.
Returns true if quadrilateral contains pt.
Returns true if pt is containtriangle.
Returns the intersection of two lineparametric2d_f64.
Returns the intersection of two linesegments.
Computes the intersection of two lines.
Computes the intersection of two linesegments.
Computes the intersection of two polygons.
Returns true if the ellipse is contained by the given ellipse.
Computes the intersection of two rectangles.
Gets the value at the given index.
Convert a matrix to a quaternion.
Rotate a matrix by ang.
Sets the rotx of a matrix.
Computes the roty of a matrix.
Computes the rotz of a matrix.
Sets the rotz of a matrix.
Converts a euler to a matrix.
Returns the rotationaboutaxis matrix.
Sets the angle of the slope.
Create a twistcoordinate_f64 from a se3_f64 motion and a twistco
Sets the initial and end transformations.
Interpolates the vector by the given where and output.
Computes the svd of the points.
Solve a point on the plane.
Returns the sidelength of the vertex at the given index.
Returns true if this point is inside of another point.
Convert a conicgeneral_f64 to a dmatrixrmaj.
Convert conicgeneral_f64 to dmatrix3x3.
Convert a conicgeneral_f64 to parabolageneral_f64.
Convert parabolageneral_f64 to conicgeneral_f64.
Divide a geotuple by a scalar.
Convert a geotuple3d_f64 to a matrix.
Convert a 3d matrix to a geometric 3d tuple.
Sets the parameter vector of the unit axis.
Returns the Euclidean distance between anga and angb.
Determine if two planegeneral3d_f64 intersect.
Returns true if a point is contained in a plane.
Returns true if the line intersects the sphere.
Interpolates two se2_f64 values.
Extract the quaternion from a simplematrix.
Processes a polygon.
Sets the tonomotion of a se3f64.
Convert a se3_f64 to a homogenous matrix.
Convert a se2_f64 to a homogenous matrix.
Computes the axisxyz of a se3_f64
Checks if two se3_f64 are identical.
Convert a latlon to a unit vector
Circle two points.
Returns the squared radius of the circle.
Returns the closest point between two lineparametric3d_f64 objects.
Returns the closest point to a lineparametric3d_f64.
Returns the point3d_f64 closest to the planegeneral3d_f64.
Returns the closest point in linesegment3d_f64.
Returns the closest point to the given point.
Transform a se2_f64 into a point2d_f64.
Transform a se2_f64 into a point2d_f64.
Returns true if quadrilateral is equal to tol.
acute angle between two linegeneral2d_f64.
Convert lineparametric2d_f64 to lineparametric2d_f
Convert linegeneral2d_f64 to linepolar2d_f64.
Convert a linesegment2d_f64 to lineparametric2d_f64
Convert linesegment2d_f64 to linegeneral2d_f64.
Convert linegeneral2d_f64 to linegeneral2d_f64.
Convert lineparametric2d_f64 to lineparametric2d_f
Convert lineparametric2d_f64 to linepolar2d_f64
Convert lineparametric2d_f64 to linegeneral2d_f64.
Convert linegeneral2d_f64 to lineparametric2d_f64.
Convert a planenormal 3d_f64 to a planegeneral3d_f64.
Convert a planetangent3d_f64 to a planenormal3d_f64
Convert a planenormal3d_f64 to a planenormal3d_f64.
Convert a point to a 3d vector.
Convert a planegeneral3d_f64 to a se3_f64.
Returns true if t is identical to tol.
Returns a copy of this vector.
Returns the norm squared of this vector.
Computes the tangulation of a line and a point on a line.
Returns true if this element has uncountable values.
Checks if the parabola is equivalent to the general_f64 parabola.
Returns the center of the point.
Returns the acute angle between two linesegments.
Returns true if p is infinite.
Generate a list of point4d_f64 from a point3d_f64.
Convert a point4d_f64 to a point3d_f64
Subtract two vectors.
Returns true if the two vectors are identical.
Sets the size of this rectangle.
Convert an ellipserotated_f64 to an ellipsequadratic_
Computes a point from a rotational ellipse and an ellipse.
Computes the angle between a point and an ellipse.
Computes the tangent of the ellipse.
Selects the tangent of a line.
Gets the corner of the point at the given index.
Returns the distance between two lineparametric3d_f64 objects.
Returns the distance between two lineparametric3d_f64 objects.
Calculates the Euclidean distance between two lines.
Returns the Euclidean distance between the plane and point.
Returns the distance between a cylinder and a point.
Returns the Euclidean distance between two lines.
Returns the squared Euclidean distance between two lines.
Returns the distance between the quadrilateral and point p.
Returns the squared Euclidean distance between the quadrilateral and point p.
Returns the Euclidean distance between poly and point p.
Returns the squared Euclidean distance between the poly and point p.
Returns the distance from the lineparametric2d_f64 to the origin of the
Returns the Euclidean distance between the ellipse and point p.
Returns the Euclidean distance between the ellipse and p.
Adds a transformation to the path.
Returns the closest point to a linesegment.
Returns the closest point to the given ellipse.
Processes the polynomial curve.
Creates a random vector3d_f64.
Returns the perpendicular canonical form of a vector.
Returns true if the two vectors are identical.
Normalize a vector3d_f64.
Create a dmatrixrmaj from a vector.
Convert a matrix to a vector3d_f64.
Returns the Euclidean distance between the two points.
Sets the ellipse in radians.
Normalizes the vector so that it can be normalized.
Returns the distance between two triangles.
Computes the quadrilateral of a quadrilateral.
Returns the simple polygon of a polygon.
Returns the mean of the points in the list.
Orders a list of points according to the CCM algorithm.
Computes the normal of a list of points.
Returns true if poly is convex polygon
Multiply this vector by a scalar.
Returns the maximum absolute value of this vector.
Computes the Euclidean distance between two points.
Returns the squared Euclidean distance between two points.
Generate a random list of point3d_f64.
Generates a list of point3d_f64 objects with a random mean.
Creates a list of point3d_f64 from a mean and a standard deviation.
Calculates the mean of a list of points
Returns the mean of the points.
Invalidate all credentials from the cache.
Invalidates all entries that match the given predicate.
Combines a collection of strings to a set of strings.
Get server features from a server directory.
Get the configdropins features.
Gets the serverxmlfeatures.
Parse the include node.
Parse the featuremanager node.
Downloads the artifacts for the given product id and version.
Get a set of liberty features from a set of json files.
Checks if the list of features to install should be ignored.
Returns true if reference contains target ignoring case.
Returns the next product version of the given version.
Extract the symbolic name from a jar file.
Gets the mapbasedinstallkerneljar.
Returns true if file1 is replaced with file2.
Extracts the version number from the given filename.
Compares two strings.
Executes a productinfo command.
Checks if isspringbootuberjar.
Gets the libertypropertyi for the given key.
Checks if the given file is working in this environment.
Move back to center.
Checks if two objects are equal.
Load an integer from a string.
Returns an array of tortoises.
Verifies the approvals of the turtle.
Swaps the number of blank cells in the puzzle with the target number.
Returns the distance from this cell to the goal.
Prints a formatted string using the specified format and arguments.
Prints a formatted string using the specified format and arguments.
Make afishydecision.
Prints a variable to stdout.
Uniformly uniformly between two integers.
Uniformly uniformly between two numbers.
Returns the index of the poisson function.
Discrete an array of doubles.
Capitalizes the first character of the word.
Uncapitalizes the first character of the word.
Fixes the path if it is empty.
Convert a criteriajoin to a string.
Gets the token sentence for a basictoken.
This method is used to filter out expired tokens.
Extract authtoken from cookielist.
Register jersey bindings in the given environment.
Gets all role permissions for a roleentry.
Adds a projection to the list with the given alias.
Convert jobinfo to jobdetail.
Convert trig to trigger.
Sets the repeatcount and interval values for the trigger.
Sets the start and end time of the trigger.
Sends an item to the queue.
Writes the content to the outputstream.
Initializes the scheduler.
Returns a sorted collection of all fields of the given class.
Gets the field map for the given class.
Configures the encryptor with the given configuration.
Generate attributeshash.
Generate the token string.
Sends a message to all receivers.
Generates a strong password for the given user and password.
Gets the user with the given username.
Hashes a password using the SHA - 256 algorithm.
Verify the given accountname against the pattern.
Indicate that the transaction is successfully committed.
Rollback the transaction.
Starts the transaction.
Checks if the user is authorized to access the basictoken.
Parse a date from an object.
Gets the response.
Create a restriction that is equal to the given value.
Create a restriction that is not equal to the given value.
Creates a restriction that is less than the given object.
Restrictions are less than or equal to the given value.
Create a restriction that is greater than the given value.
Create a restriction that is greater than or equal to the given value.
Create a restriction that contains the given value.
Creates a restriction with the given name and value.
Create a new namespacemanager with the given namespace and href.
Returns a new resourcerepresentation with the given content.
Creates a new resourcerepresentation with the given rel.
Returns a new resourcerepresentation with the given value.
Create a new resourcerepresentation with the given namespace and href.
Returns true if the input can be decoded.
Encodes the given string into a byte array starting from the given offset.
Compares two reader objects.
Copies a file or directory.
Touches a list of files.
Returns the base name of the given file.
Adds padding to the buffer.
Gets the shortname of a class.
Returns the set of superclasses of the given class.
Verifies a password against a salt.
Reads a line from system. in using the given charset.
Appends a byte to the buffer.
Appends the given bytes to the buffer.
Returns a copy of the original array.
Adds a fraction to this fraction.
Subtract a fraction from this fraction.
Multiplies this fraction by the given fraction.
Divide this fraction by the given fraction.
Returns the maximum of the given values.
Returns the minimum of the given values.
Throws an exception if the condition is not met.
Fetches the content of a location forecast.
Fetches the content of a date from meteo.
Fetches the content of the meteoservice.
Finds a list of meteoextrasforecasts for the given number of hours
Finds the best forecast for the given datetime.
Fetches the weather data for the given query.
Create a simple longtermforecast.
Create a longtermforecast.
Parse a string of coordinates to a location object.
Fetches the content of the questionmark in questionmarkin.
Createwindsymbolname.
Find the beaufortlevel of the given pointforecast.
Create a URI from a string.
Returns true if the current date is a sun.
Get the pointforecast for the given datetime.
Get the best fit period forecast.
Fetches the weather data for a longitude and latitude.
Fetches the weather data for a longitude latitude and language.
Update the database.
Invoke a stringmethod on the given object.
Acquires an object from the pool.
Gets referenced object.
Gets the wrapped object wrapped by the given object.
Returns the configuration object for the given configuration class.
Determines if the substitutor is enabled.
Create an iterator for the given service and service.
Gets decoder.
Get a list of services for the given intf.
Gets the module of the given interfaceimplemented.
Acquires an inputstream from the given source.
Returns the size of the data source.
Get wrapped data.
Gets the component at the given index.
Returns the prefix of the given index.
Returns true if the compiler is colored.
Execute a regular expression.
Find loop.
Subset a runtimesubexpression.
Returns true if t is disjunction of t.
Clone the outs of the old state to the new state.
Optst a subre.
Marks a subre as inuse.
Create a nfa node from a subre.
Parses a subre.
Recursively deltraverse a state.
Defines a nonword colorcomplement
Clones a word.
Scans a number.
Bracket the current state.
Scan plain.
Creates a new lacon if not already in the lacons list.
Add a onechr to the nfa
Performs a set of unicodesets.
Returns the color of the given character.
Returns a pseudocolor for the current character.
Returns a list of colors that are subranged from from to to.
OK colors.
Sets the colorchain of a arc.
Uncolorchain a arc.
Dumps the colors of all the colordescs.
Starts the lexicographical code.
Interpolates the interpolated character array with the lexnest character.
Returns the color for the given codepoint.
Initialize the stateset.
Gets the lastcold of all statesets.
Returns a set of unicode classes for the given character.
Returns the unicodeset class for the given cclassname.
Sorts the arcs in ascending order.
Creates a new state with the given flag.
Moves the arcs from old to new state.
Moves the arcs from old to newstate.
Copy arcs from old state to new state.
Copies all outs from old to new state.
Drops a state from the graph.
Frees a state.
Copy an arc from one state to another.
Duplicates the state s and stmp.
Specialcolors are used by the pseudocolor functions.
Dump the state of the nfa.
Dumps a state to the log.
Dumps the arcs of a state.
Dumps a arc to a stringbuilder.
Optimizes the analysis.
Analyzes the pre and post chains.
Combines two arcs.
Cleans up the state machine.
Marks a state as reachable.
Marks a state that can be reached by another state.
Fixempties the NFA.
Returns true if the arc a is empty.
Gets the rule parameters.
Gets the ruleinterpreterplugins.
Get the reportplugins for the given reportcontext
Gets the ruleselection for the given ruleset.
Runs the command line.
Gets the error message from the cliexecutionexception.
Gather standard options.
Gather the options for all tasks in the task factory.
Gather tasknames.
Interprets the command line.
Parse the command line and return a commandline object.
Executes a task.
Read properties from commandline.
Print usage.
Gets the home directory.
Create the plugin class loader.
Gets the ids of all cells that are contained by this cell.
Returns the intersection ids of the two sets of values.
Returns the uri for the given method and target.
Add a route to the router.
Returns the number of routes in this list.
Add a route to the first router.
Add a route to this router.
Add a route to the last router.
Returns true if any of the given requestpathtokens are matched.
smart equal comparison.
Gets the store filename.
Compare two folders.
Compare two entries.
Compare two bookmarks.
Set the last modified time of the servlet.
Returns the list of source dependents.
Finds the class with the given name.
Parse the Authorization header from the request.
Gets the instance of the functionmapper.
Map a function to a method.
Get a functionmapper for a function.
Resolves a function by prefix and localname.
Sets the values of the character array.
Resolves the value of a variable.
Parse the given string into a node. nodes.
Parse a node from a jar file.
Parse tagfiledirectives.
Create the compiler.
Gets a resource as stream.
Calculate the global lastmod of all channels.
Find the basic class loaders.
Checks if the classloader is a class loader.
Starts loading the given name.
Read stream header.
Paginates a list of dataset with pagination results.
Create metakey from string.
Fill the requirements.
Returns the tagfileinfo for the given shortname.
Parse the implicittld resource.
Returns the checksum for the given filename and algorithm.
Get the size of a file.
Validate channelname.
Seeks to the given block number.
Locates the block at the given position.
Gets a list of artifacts from the artifacts supplier.
Update optstate and reps.
calc1byteprices This method calculates the 1byteprices for a given posstate
Calculate longrepprices.
Calculates the normal matchprices for the posstate and posstate.
Throws an exception if the expected byte is not a valid UTF - 8 byte.
Throws an exception if the character at the given position is invalid.
Scantlds.
scantld.
Add a jspservletwrapper.
Gets the parent classloader of the current thread.
Sets the bytecode for the given name.
Gets the bytecodebirthtime for the given name.
Saves the bytecode of a class to a file.
Check compile.
Initialize the classpath.
Start the thread.
Stops the thread.
Runs the task.
Find channel instance by name.
Find a channel by it s name.
Update deploymentgroup cache.
Copy the contents of the inputstream to the outputstream.
Parse a node.
Parses the attributes from a jspreader.
Add include attribute.
Parse jspattributeandbody.
Adds an attribute to the map.
Adds a child node to this node.
Returns an iterator over the attributes.
Returns an iterator over the children of this node.
Returns an iterator over the children with the given name.
Converts this coordinate to a base coordinate.
Find the alias for the given variable name.
Sets the thread.
Unset thread.
Find the wrapped printstream.
Write optional.
Write a string to a stringwriter.
Add an element to a parent element.
Add the first element in the parent element with the given name.
Writes the next character to the given writer.
Sets the writer to use.
Move the buffer to the reallocbuff.
Map the node. nodes to elfunctionvisitor.
Find the same state with the given key in the given parent state.
Registers a new model with the storageprovider.
Streams data from the datapath using the given consumer.
Monitor a job.
Checks if the request is authenticated.
Finishes writing to the output stream.
Create a new Gson instance.
Encode forlzma2.
Computes the union of the provided metadata and extracted metadata.
Gets the thrown exception from the servlet request.
Checks if the given coordinates is a checksum.
Finish the compression process.
Get the jspruntime library exception.
Evaluate an expression.
Make prefix from osgi properties.
Checks if the given path is an XML file.
Parse tagfiledirectives.
Load a jspservletwrapper from a tagfile.
Remove prototype files from the prototype vector.
Sets the URI root of the file.
Scans the files in the given file.
Locates the URI root of the given file.
Moves the cursor to the next position.
Checks if the given string matches the pattern.
Matches optional spaces following the given string.
Skips characters until the limit is reached.
Skip until ignoreesc.
Skipuntiletag.
Parses the next token.
Pops a file from the stack.
Make this coordinates unclassified.
Filters a list of aspectinformation by a predicate.
Returns the missing ids for this aspectinformation.
Sets the schema resource prefix.
Sets the prefix for the Dtd resource.
Convert a tree node to a tree node.
Merge errors from the bindingresult into the result.
Initializes the binder.
Scan the servicereferences for channelaspectinformations.
Unqualify a path.
Invoke a custom tag plugin.
Gets the byte array for the given size.
Get an int array of the given size.
Create an aetherresult from a collection of artifactresult results.
Gets the resourceasstream.
Validates the given page.
Push a character stream to the output stream.
Get the encoding of the given jarfile.
Report a fatal error.
Returns the real path of a resource.
Get the resource from the given path.
Gets resource as stream.
Returns a set of resource paths for the given path.
Prints a message and throwable to the log writer.
Adds a filter.
Returns the buffer size of a dictionary.
Get memory usage.
Set preset dictionary.
Moves the window to the new location.
Fills the window with data from the given byte array.
Process pending bytes.
Returns the length of the buffer that matches dist.
Returns the length of the match between the forward and dist.
Verifies that the matches have the same length.
Moves the cursor to the next available position.
Recycles the buffer.
Flush the buffer to the output stream.
Clears the buffer.
Flushes the buffer to the output stream.
Closes the response.
Writes a string to the output stream.
Throw a jasperexception with the given errorreport and exception.
Make a key from the given metadata.
Generate the class.
Compiles the report.
Initialize java compiler.
Checks if a systemjar in webinf is found.
Quote a char.
Generate declaration nodes.
Compile the taghandlerpool list.
Generate the XML prolog.
Generate the common postamble.
Generate the postamble.
Generates a generator for the given page.
Generate taghandlerattributes.
Read properties.
Export a channel to an outputstream.
Validates the given xmlview.
Gets the handler for the given class.
Parse an expression into an elnode. nodes.
Select a property from a jsppropertygroup.
Check if the given URI is a jsppage.
Prints a comment.
Prints a string to the output.
Prints a string to the output stream.
Print a multi - line string.
Returns the expression in XML.
Check scope.
Escapes the given string as an XML string.
Validate expressions.
Get the classname of the taghandler.
Make a javapackage from the given path.
Splits a path into an array of strings.
Make a javaidentifier from a string.
Mangles a char to a string.
Checks if the given key is a javakeyword.
Adds a property to the map.
Returns the string representation of a modifier.
Returns a sorted set containing the metadata for the given namespace and key.
Runs the user write model.
Returns the base name of the given name.
Adds a value to the cache.
Loads the metadata for the given locator and key.
Build a collection of imetric objects from aggregatedpayload.
Resolve a number to a long or double value.
Write object to outputstream.
Gets the ttl for the given locator and rolluptype.
Create prepared statements.
Track the list of delayed metrics for a tenant.
Track delayedaggregatedmetricstenant.
Read a double or long value from the input stream.
Write an unversioned double or long value.
Gets all properties.
Create the container in the blobstore.
Shuffle the slots of all managed shards.
Clears all running slots for the given slot.
Registers a callback to be invoked when an event occurs.
Register a callback for a single event.
Remove an event from the queue.
Emits an event to all registered callbacks.
Returns a list of listeners for the given event.
Returns the name of the remote host.
Append rollup event to outputstream.
Parses a timestamp from a filename.
Start the http server.
Gets the rollupcomputer for the given srctype and granularity
Create an iocontainer from the configuration.
Puts a new TTL configuration into the builder.
Computes the maximum number of headers and outputs.
Formats a header.
Formats the given outputs using the given outputformatters.
Register metrics.
Sets the name of the threadpool.
Add a metric to the metricnameswithnextlevelset.
Gets the completemetricnames.
Gets a list of tokens from a metric locator.
Asynchronously put a value to the driver.
Calculates the granularity from points less than or equal to the requested duration.
Sets the server time.
Returns a set of unique hosts.
Returns the maximum number of connections per host.
Returns an iterable over metriccolumnfamily objects.
Insert metrics.
Insert metrics.
Gets the locators.
Convert a regex query to grabcurrent and nextlevel.
Starts the uploader thread.
Stops the uploader.
Checks if a locator is currently in a batch layer.
Returns true if the locator is currently in the current indiscovery layer.
Returns true if the locator is currently in a token discovery layer.
Returns true if the slot is currently at the current slot with the given locator.
Sets the delayedlocator for a slot.
Returns a map of range to iterables for a range.
Returns an iterable that iterates over ranges starting from from to to.
Insert metrics full.
Insert metrics into the keyspace.
Checks if the given metric is delayed.
Gets the boundstatement for metricifdelayed.
Gets the metadata values for the given locator.
Checks if the content type is valid.
Checks if the accept header is valid.
Inserts a batch of imetric objects into the histogram.
Checks if the value is valid.
Check if the file manager is running.
Get a new instance of the extractor.
Returns true if the given OS name and version matches the given prefix.
Starts the process.
Stops the process.
Returns a default instance of pnsignalingparams.
Adds the list of iceservers to the peerconnection. iceservers.
Add a peerconnection. iceserver to the list of iceservers.
Sends a message to a user.
Sends a message to all peers.
Gets the value of the weitereadresse property.
Gets the value of the userdefinedsimplefield property.
Gets the value of the userdefinedanyfield property.
Sets the apisuchfelder.
Gets the value of the multimediaanhang property.
Gets the statusvbm.
Gets the statusis24 value.
Gets the statushp.
Gets the importmodus.
Gets the adressdruck.
Gets the waehrungtyp. eur.
Gets the bodenbelagtyp.
Sets the value of the region property.
Sets the value of the area property.
Sets the value of address property.
Sets the value of the description property.
Sets the rentcollectionperiod value.
Set the value of the furnished property.
Sets the phone1 field.
Sets the phone2 property.
Sets the value of the contactname property
Sets the phoneinfo property.
Sets the value of the mainemail property.
Sets the value of the ccemail property.
Sets the externalid.
Sets the value of the agentid property.
Sets the value of the epart property.
Sets the value of the jahrgang property.
Sets the value of the gebaeudeart property
Sets the value of the buerotyp property.
Checks if the string is a numeric value.
Sets the value of the gebiete property.
Sets the value of the gruppe property.
Sets the agent.
Gets the value of the property property property.
Sets the stand.
Gets the value of the userdefinedextend property.
Sets the value of the zeiteinheit property.
Gets the value of the zimmer property.
Getter for the haus property.
Gets the value of the bueropraxen property.
Gets the value of the gastgewerbe property.
Gets the value of the landundforstwirtschaft property.
Gets the value of the sonstige property.
Gets the value of the zinshausrenditeobjekt property.
Getterrain Method.
Sets the value of the umfang property.
Sets the value of the wohnungtyp property.
Returns the country iso2 code for the given country.
Gets the countryiso2fromiso3.
Returns the ISO 3 code for the given country.
Gets the countryiso3 from iso2code.
Returns the name of the country in the given language.
Returns the name of the country for the given language.
Gets the value of the anbieter property.
Sets the value of the category property.
Gets the value of the pdf property.
Sets the value of the aktionart property.
Sets the value of the realestateitems property.
Sets the pacht.
Upgrade the document from the previous version to the new version.
Gets the content.
Returns the names of all fields in this metadatatype.
Sets the value of the blick property.
Sets the value of the pauschalmiete property.
Sets the value of the monatsmiete property.
Gets the parkplatz kategorietyp.
Sets the lastenaufzug property.
Sets the value of the zustandart property.
Gets the value of the feld property.
Dump the contents of this record to the given writer.
Gets the value at the given position.
Prints the record to an iterable.
Sets the value at the given position.
Sets the type of the check.
Sets the value of the haustyp property.
Gets the value of the energiepass property.
Sets the value of the keller property.
Sets the grundstueck grundsttyp value.
Sets the geschlattr.
Sets the hallentyp property.
Gets the wiederholungstermin.
Gets the teilungsversteigerung.
Upgrade the openimmodocument from the previous version.
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art property.
Sets the value of the modus property.
Gets the value of the emailsonstige property.
Gets the value of the telsonstige property.
Sets the value of the handeltyp property.
Sets the value of the apisuchfeld1 property.
Sets the apisuchfeld2 property.
Sets the value of the apisuchfeld3 property.
Gets the value of the row property.
Sets the value of the distanzzusport property.
Gets the value of the anhang property.
Gets the objektkategorie2 property.
Gets the objektzustandtyp. keine_angabe
Gets the hauskategorientyp.
Gets the ausstattungsqualitaet.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Sets the value of wert property.
Sets the ackerland.
Sets the value of the bauerwartungsland property.
Sets the value of bootsstaende.
Sets the buero.
Sets the camping property.
Sets the value of the doppelhaus property.
Sets the value of einfamilienhaus property.
Sets the value of the einzelhandelgross property.
Sets the value of the einzelhandelklein property.
Sets the garagen property.
Sets the value of the garten property.
Sets the value of the gastronomie property.
Sets the value of the gewerbe property.
Set the hotel property.
Sets the industrie.
Sets the keinebebauung.
Sets the value of the kleingewerbe property.
Sets the lager.
Sets the mehrfamilienhaus property.
Sets the obstpflanzung.
Sets the parkhaus property.
Sets the produktion.
Sets the reihenhaus property.
Sets the value of thetellplaetze property.
Set the villa property.
Sets the value of the wald property.
Sets the value of the anbieter property.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the value of the hallenlagerprod property.
Gets the value of the parken property.
Gets the value of the freizeitimmobiliegewerblich property.
Gets the value of the objektartzusatz property.
Gets the value of the stellplatzart property.
Sets the value of the maxdauer property.
Gets the value of the feature property.
Sets the value of the zimmertyp property.
Upgrade an openimmodocument from the previous version.
Sets the keineangabe.
Sets the value of the erdwaerme property.
Sets the value of the solarheizung property.
Sets the pelletheizung.
Sets the value of the gas property.
Sets the value of the oel property.
Set the fernwaerme.
Sets thestrom attribute of the generated element.
Sets the value of the kohle property.
Generates a random string of the given length.
Generates a random string with the given length.
Generates a random string of the given length.
Gets the wohnungkategorientyp.
Sets the benutzer value.
Sets the value of the objekte property.
Gets the value of the feed property.
Sets the moebliert.
Gets the value of the serviceleistungen property.
Sets the value of the subadministrativearea property.
Sets the value of the city property.
Sets the value of the locality property.
Downgrade the given openimmodocument to the previous version.
Upgrade an openimmodocument from the previous version.
Sets the value of the landtyp property.
Gets the value of the field property.
Upgrade from previous version to new version.
Gets the value of the ad property.
Sets the value of the gastgewtyp property.
Sets the value of the platzart property.
Gets the datenverkabelungstyp. keine_angabe.
Gets the klimaanlage.
Gets the value of the image property.
Sets the value of the pricetype property.
Sets the value of the newdevelopmentavailability property.
Sets the directions property.
Sets the value of the co2rating property.
Sets the value of the energyrating property.
Sets the value of the viewingdetails property
Sets the value of the propertystatus property.
Sets the value of the pictures property.
Sets the value of the bebaubarattr property.
Upgrade an openimmodocument from the previous version.
Sets the value of the parkentyp property.
Sets the alterattr.
Sets the value of the freizeittyp property.
Sets the value of the telefonart property.
Sets the value of the emailart property.
Sets the value of the overseassales property.
Sets the value of the overseasrental property.
Create a simplefield with the given name and value.
Gets the value of the fehler property.
Sets the value of the erbpacht property.
Gets the value of the stpsonstige property.
Gets the valuelist property.
Sets the minmietdauer.
Sets the value of the zinstyp property.
Gets the photo.
Sets the value of the metadata property.
Sets the projects value for this feed.
Sets the feed properties.
Upgrade from previous version to new version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the value of the sonstigetyp property.
Sets the value of distanzzu property.
Gets the value of the distanzen property.
Gets the value of the distanzensport property.
Checks if the given throwable is compatible with any of the declared exceptions.
Sets the bindings for the given map.
Binds a namespace URI to a prefix.
Remove a binding with the given prefix.
Checks if the given string has an opening tag.
Consume comment tokens.
Consumes the next comment from the given line.
Returns the index of the given token in the given line.
Initialize logging for the given location.
Bind a namespace URI to the namespace context.
Adds an iterator to the list.
Adds an option to the list of options.
Add a stringoption with the given form and longform.
Add an integeroption with the given form and longform.
Adds a longoption with the given form and longform.
Add a doubleoption with the given form and longform.
Add a booleanoption with the given form and longform.
Parses the command line arguments from the command line.
Create a new instance of the given class.
Notify the monitor of the access.
Sets the target object.
Prepares this object to be used by the constructor.
Find the matching method.
Convert an integer to an unsigned string.
Serialize an object to a byte array.
Deserialize an object from a byte array.
Gets the child element by tagname.
Gets the value of a child element by tagname.
Returns a list of all child elements of an element.
Checks if the node name matches the desired name.
Checks if the given node name matches the desired names.
Set the size of a string.
Monitors an object to debug logging.
Adds an entry to the weak reference monitor.
Keep monitoring thread alive.
Calculates the mobilecity of the given mobilenumber.
Starts a prefix mapping.
Ends a namespace mapping.
Add a callback to the list of callbacks.
Parse the itree from the jar.
Gets the textcolor of the given item.
Sets the values of this layout.
Get the color of the pressed item.
Sets the textsize of the textpaint.
Get the x - bounds of the divider.
Get theintro from the remote library.
Returns the names of the keywords in the library.
Get the arguments for a keyword.
Gets the documentation for the given keyword.
Starts the remoteserver.
Stops the server.
Start the server.
Convert properties from a json file to a json string.
Convert properties from a file to a json string.
Converts an inputstream to a JSON string.
Convert a properties object to a json string.
Converts a map of string values to a JSON string.
Convert a map of properties to a JSON object.
Convert a map of properties to an object map.
Converts a properties object to a JSON string.
Get the radius of the shadow and circle
Creates an OCSP fetcher builder.
Find an intermediate certificate.
Executes the mojo.
Preprocess Markdown files.
Substitute variables in a string.
Returns the title of a list of raw strings.
Adds the title to the HTML file.
Replaces the variables in the initialcontent with the variables in variables.
Updates the relative paths of the given HTML.
Copy files from one directory to another.
Checks if the given path is a valid path.
Wrap the content of the slider.
Fades this view up to the given duration.
Sets the duration of the fadedown animation.
Calculates the percentage for the given width.
Check if the given width overlaps with the current view.
Create an intent to launch an activity.
Launch the activity.
Get a list of factssheets.
Download file from response.
Build http client.
Create an accesscontrolentity response.
Updates a datamodel.
Create a full export.
Add a host to the OAuth2 token provider.
Sets the client credentials.
Processes a graphqlmultipart request.
Get a list of bookmarks for a specific bookmarktype groupkey and sharingtype.
Adds permissions to a graph.
Write permissions to a graph.
Sets the rulesets for this datasetgraph.
Closes the client.
Execute a select statement on the inputstreamhandle.
Create a datasetgraph for the given host and port.
Limit the number of threads per process.
Resize the image to the given width and height.
Rotate the clock by the given degrees and rotationannotation
Sets the gravity value.
Removes all profiles from the command line.
Draws a font with the specified style size and color.
Adds an image to the source image.
Adds an image to the command line.
Parses an object into a list of properties.
Prints usage information for the given object.
Extract timeunit from string.
Parses the given object into the given properties.
Executes the slide execution with the given url.
Execute a file.
Interprets the given file.
Sorts a list of rectangles according to their size.
Renders the given template text.
Get the slidexmlrel for the given slidenumber.
Checks if the mouse event is in the bounds of the screen.
Selector that overlaps the specified element vertically with the specified minimum.
Execute an outgoing operation on the SQS queue.
Executes an outgoing operation on the specified message.
Find a file by name and options.
Gets or creates a temp directory.
Create a logvaluemap from a string and an object.
Log a trace event.
Log a trace event and message.
Log a debug event.
Log a debug event and message.
Logs a formatted message with info log level.
Logs an info event and message.
Record an info event.
Log a warning event.
Log a warning event and message.
Log an error event.
Log an error event and message.
Add to contextline and method.
Writes the startteno wrapper for an ilogging event.
Write keyvaluepairs.
Serialize throwableproxy to jsongenerator.
Converts this object to a logvalue.
Gets the callerdata for the logging event.
Create a database with the given name.
Checks if the array position is within the number of mappings.
Parse saveattr string.
Save data to object in context.
Refresh the sheet row from the context.
Parse saveattrstring.
Gets the saveattrlist from a row.
Get saveattr from list.
Sets the saveobject in hidden column.
Sets the saveattrs for a sheet.
Sets the saveattrs for a row.
Prepare the context and attrsforcell for the given cell.
Format a double as a string.
Put shiftattrs.
Sets the serialwb.
Gets the xssfevaluationworkbook wrapper.
Gets the formulaevaluator.
Recalculate the max colcounts.
Load a websheet from the given inputstream.
Load a websheet from the given workbook.
Loadworksheet by tabname.
Export the content to a file.
Save the current state of the sheet.
This method is called when the user submits the form
Populate component.
Get the current sheetconfiguration for the current tab.
Reads an object from an inputstream.
Gets the locale for the component.
Get the picture of the current phase.
Gets the cellhelper.
Gets the pichelper.
Gets the validationhandler.
Gets the charthelper.
Convert a list of ptgs to a list of ptgs using the given shiftformularef
Convert a ptg array to a ptg array.
Convert a ptg for awatchlist.
Create a single ptg array.
Gets the list of serialrows for the given row.
Assembles a list of serialrows from a list of current serialrows.
Build a dynamic row for a refptgbase.
Get the bgcolor of the ctplotarea.
gecolorfromsppr.
Find the automaticfillcolor.
Get xcolor from schemeclr.
Convert RGB color to xcolor.
Gets the xcolor with automaticfill.
Convert a xssfclrtoclr color to a color.
Get the triplelet from xssfcolor.
Get the bgcolor from a cell
Find component name from class.
Populates the form attributes for the given component.
Returns the attributestype for the given method name.
Sets the value of an object property.
Gets the value of an object property.
Sets the control attributes for the given cell.
Find the validate attributes for a cell.
Setup facescellpicturecharts.
Setup the facescellcharts.
Setup the facescellpicture.
Initialize the map for the xssfworkbook.
Gets thepietitle.
Sets the style of a series.
Create a pie 3d chart.
Setup the barstyle for the chart.
Initialize xssfchartsmap.
Gets the chartid from parent.
Initializes the anchors map if it is an xssfworkbook.
Generate a single xssfchart.
Transform a collection object to a collection object.
Gets the fullname from a row.
Rebuild the upperlevel formula.
Sets up the upperlevel formula.
Build the cellformula for shifted rows.
Gather rowsmapping by fullname.
Change indexnumber in shiftmap.
Change the upperlevel finallength of the given string.
Change index number in hidden column.
Sets the fullname in the hidden column.
Gets the original rownum in the hidden column.
Sets the original rownum in hiddencolumn.
Find parent rowsmapping from shiftmap.
Given a navigablemap and a navigablemap return a list of rowsmappings
Find item in collection.
Build the current configrange.
Checks if the given configrange is a static row.
Checks if the given row is a static rowref.
Replace expression with cell value.
Returns a map of cellrangeaddress to cellrangeaddress for each merged region in a sheet
Returns a list of skipped regions in the specified sheet.
Add skipcelltolistintheregion.
Builds a sheet comment from a list of tiecommandaliases.
Build the cell comment from the tiecommandalias list.
Build the sheet configuration map.
Get the configuration for a sheet.
Build formcommand from sheet configuration.
Verifies that the last cell of the given stop point is blank.
Build the sheet.
Check and repair last row.
Build commandlist from sheet comment.
Adds a command to the list of commandlist and sets the parent for the command.
Checks if the list of command lists has each command in the list.
Match command to sheetconfigform.
Copy template fortiecommands.
Build command list.
Process a method line.
Process command line.
Move a comment to a new map.
Create a configcommand.
Build an attribute map from the commandline.
Gets the sheetconfiguration from the formcommand fcommand and rightcol.
Sets the footer of the sheet configuration.
Sets the body of the sheet configuration.
Sets the header of sheet configuration.
Delete a row.
Remove ranges from shiftmap.
Find a list of fullnames that are not in the list.
Gets the eachcommand from the partsname.
Insert empty object in context.
Delete object in context.
Prepare collectiondataincontext.
Index command range.
Checks if a row is allowadd.
Insert each template into the workbook.
Evaluate normal cells.
Evaluate the user formula.
Checks if the given string is a user formula.
Creates a comment for a cell.
Evaluate a boolean expression.
Remove cached cells from a sheet.
Remove a single row in a sheet.
Remove cached cell for row.
Remove rows in body.
Loads a picture from the current page.
Loads a chart from the current page.
Assemble a new value.
Returns the value of the given cell using the given formatter.
Returns the value of the given cell without the format.
Returns the string value of the given cell with the given celltype.
Returns the string value of the given cell with number type.
Sets the value of a cell.
Sets the type and value of a cell.
Sets the cell value boolean.
Sets the date value of a cell.
Sets the cellvaluenumber.
Copy rows from srcsheet to destsheet.
Copy a single row of a sheet to another sheet.
Copy a cell from one sheet to another.
Copy the value of a cell to a new cell.
Copy cellstyle from sourcecell to newcell.
Clone comment.
Create comment anchor.
Create or insert comment.
Match comment settings.
Get vmldrawing from cell.
Get the ctshape from vml.
Get cellstyle from source cell.
Convert a cell to a cell range.
Gets rowcolfromcomponentattributes.
Gets the initrows from the sheetconfiguration.
Get facesrow from body row.
Get facescell from body row.
Gets the poicell from a sheet.
Gets the skey from a poicell.
Gets the oraddtiecellinmap for the poicell.
Gets the current datacontextname.
Evaluate an expression and return an object.
Evaluate the expression.
Write an object to the outputstream.
Remove a row from the map.
Merge the rowsmapping into this one.
Recovers all the serial rows from the given sheet.
Gets the charttype for the given ctchart.
Converts a style string to a basicstroke.
Initialize chartdata from xssfchart.
Setup the chartdata.
Initialize xssfanchorsmap.
Initialize xssfanchorsmap for a sheet.
Get the chartid from the ctanchor.
Get the chartid from child node attributes.
Build each object.
Save data in context.
Recalculate the result values.
Gets the poicell with rowcol from the sheet.
Gets the facescell with rowcol from currentpage.
Restore the datacontext for the given fullname.
Get the lastcollect object from the given fullname.
Checks if isneedrestore.
startrestoredatacontext.
Shift rowref.
Sets the first rowref.
Set the last row plusref of a sheet.
Builds the cells for the given row.
Build a single cell.
Read an object from an inputstream.
Build the category list.
Build a list of chartseries from a list of bsers.
Build the chartseries in list.
Gets the colorlist from a list of dpts with a list of values.
Gets a ctdpt from a list with the given index.
Sets the command index map.
Gets the pictruesmap from the workbook if it is an xssfworkbook
Gets the xssfpictruesmap from the xssfworkbook.
Index the picture in the map.
Generate a picturestyle string.
Generate a chartstyle string.
Gets the pattern.
Get the chart for the current phase
Recover this cell from a sheet.
Gets the rowstyle.
Gets the cellfontstyle.
Gets the cellfontcolor.
Get cellfontdecoration.
Gets the cellstyle.
Gets the columnstyle.
Get the alignment from the poicell style.
Gets the verticalalignment from a cellstyle.
Calculates the total height of a sheet.
Sets the cellstyle for the poicell.
Gets the inputtype from a cell.
Gets the resource paths for the given path.
Gets resource as stream.
Remove the prefixpath from the resource.
Evaluate input type.
Find a bean by its name.
Joins an array of shorts with a separator.
Round a double to a number of places.
Gets the tabtype.
Gets the tabstyle.
Gets the default date pattern.
Gets the decimal separator by default locale.
Gets the thousandseparator by default locale.
Sets the tiecommandaliaslist.
Build the form watchlist.
Build the watchlistforcell.
Add a row to the watchlist.
Checks if a string starts with a command prefix.
Parse widget attributes.
Gets attributekeyinmapbycell.
Parse the validate attributes.
Find the position of a pair bracket.
Parse command attributes.
Parse input attributes.
Parse validation attributes.
Split byeualsign.
Parse special attributes.
Process calendar attributes.
Process selectitemattributes.
Gather special attributes.
Parse comment to map.
Find the first noncellnameposition of the given string starting at the given position.
Remove characters from a string.
Convert an Excel column name to a string.
Convert a column to an integer.
Get cell by cellreference.
Convert a short heightunits to a pixel.
Checks if a string is a date.
Parses a date entry.
Checks if a string is a numeric string.
Returns true if c should continue.
Sets a property on an object.
Compare two cells.
Check if a configrange is inside a range.
Clear the hidden columns in the given sheet.
Delete hidden columns in row.
Delete cell from row.
Process event.
Refresh after status changed.
Validate with row colin currentpage.
Validate bytiewebsheetvalidationbean.
Check error message from object in context.
Validate all rules for a single cell.
Do validation.
Validates a cell.
Validates the current page.
Validate a row in the current page.
Validates a row.
Refresh cached cells in current page.
Refresh cached cells in a row.
Sets the submitmode in view.
Pre - validate the current sheet configuration.
Clears the contents of this template comment map.
Load the header rows.
Load the header row without configurationtab.
Fills the list of headercells to max columns.
Gets the header columnstyle.
Get the width style for the cell.
Get column width style.
Initialize the tab model.
Loads the data context if not already loaded.
Refresh the data for a given row.
Refresh the dataforcell for the given row.
Find the index of the tab with the given name.
Load a worksheet.
Prepareworkshee.
Sets the datatablepage.
Setup the facesrow info.
Load body rows.
Refresh cached cell.
Process a refresh cell.
Create dynamic columns.
Add a repeat row to the sheet.
Refresh body rows in range.
Sets the unsaved status flag.
Returns true if the current state is unsaved.
Returns the common constructor of the given type.
Write inputstream to outputstream.
Write long.
Write a string to the writer.
Sets the converted trafficstatstag.
Adds a bitmap to the result.
Adds a file descriptor to the result.
Remove the parameter with the given name.
Add a header to the request.
Clear the content of this request description.
Call the streaming play service.
Bind the service to the service connection.
Unbind the service connection.
Remove a listener from the streamingplayback.
Stores the image to disk.
Converts an inputstream to a string using the given charset.
Converts an inputstream to a string.
Send the data to the outputstream.
Returns the number of bytes currently available in the input stream.
Closes the input stream.
Reads the next byte from the stream.
Resets the buffer to its initial state.
Send start.
Senddisposition header.
Send contenttype header.
Send transfer encoding header.
Send end of header.
Send end.
Send parts to outputstream.
Returns the length of the parts in the partboundary.
Checks if the given URI is a redirect.
Send not modified response.
Sets the date header for the http response.
Sets the date and cache headers.
Sets the content type header for the http response.
Flushes the given channel to the output stream if it is not already connected.
Sends a disposition header to the output stream.
Send data to the outputstream.
Installs the cache.
Ensures that the working directory exists.
Get a response from disk.
Creates an inputstream for the body of the entry.
Reset the bitmap to the given width and height.
Get an instance of websockifysslcontext for the keystore and password.
Validates the keystore with the given password and password.
Replace the scaletype with the given type.
Get pendingintent service.
Disconnects the connection from the given urlconnection.
Bind the service object to the service object.
Unbind this service object.
Notifies the listeners that the view has changed.
channelopen hook.
On acceptdata.
Called when the string is reset to its initial state.
Wait for the loader to load.
Sets text or hide view.
Hide softinput from textview.
Show softinput.
Toggle softinput on the textview.
Returns the width of the pixels in the given dip.
This method is called when an exception occurs during the portunification process.
Clear the cache for the given url.
Populate image.
Cancel the image loading of a view.
Create an imageconsumer for the given view.
Set result image.
Set the loadingimage.
Start an imageloader task.
Adds a bitmap to the memcache
Releases a buffer to the pool.
On urlconnectionprepared.
Adds a simple parameter to the request.
If the core is a httpsurlconnection then the core connection is wrapped in a httpsurlconnection
Returns the MD5 hash of the given string.
Convert a cublas_gemm_int to a cublas_gemm_
Returns the string representation of the given number.
If the given result is different to cublasstatus. cublas_status_success
If exceptions enabled this method will throw a cudaexception with a message that corresponds to the last
Adds a lexeme to the frequency.
Adds an ending to the endfrequency.
Returns the estimate for the given wordform.
Prints the token and attributes as a long description.
verifyandsetkamolsattribute.
Remove kamolsmarkupformating from a string.
Performs a get request.
Gets the query string.
Processes a JSON node and returns a list of metricdata objects.
Parse the appinfo from a json string.
Gets the connectionconfig.
Performs a data request on a list of apps and metrics.
Create a genericodereader for GC04 codelist.
Create a genericodereader for GC04 codelistset.
Create a genericodereader that gc04columnset.
Create a genericodereader that gc10codelists.
Create a genericodereader for GC10 codelistset.
Create a genericodereader that gc10columnset.
Gets the id of a column element.
Gets the value of a row.
Gets the column of the given id.
Gets all keyids from acolumnset.
Gets key of id.
Checks if is keycolumn.
Create a new column.
Create a new key.
Sets the number of lines to skip.
Adds a column to the read options.
Create a genericodewriter that gc04codelist.
Create a genericodewriter for GC04 codelistset.
Create a genericodewriter that gc04columnset.
Create a genericodewriter for GC10 codelist.
Create a genericodewriter for GC10 codelistset.
Create a genericodewriter for the gc10 column set.
Create a genericodevalidator for GC04 codelist.
Create a genericodevalidator for GC04 codelistset.
Create a genericodevalidator for the gc04 columnset document.
Create a genericodevalidator that validates the gc10 code list.
Create a genericodevalidator for GC10 codelistset.
Create a genericodevalidator for the gc10 columnset document.
Sendlogs to server.
Sets the context.
Gets the loglevel.
Get the capture of the current thread.
Sets the maximum logstoresize.
Prepends the given message to the given metadata object.
Append additional metadata to the jsonobject.
Create a new jsonobject.
Sets the user identity.
Get byte array from file.
Check if the access_fine_location and access_coarse_location have changed.
Size the given region to the given number of entries.
Counts the number of entries in a partitioned region.
Counts the number of entries replicated to a local region.
Reads a snapshotrecord from the input stream.
Dumps the timestamps to the given printwriter.
Gets the timevaluessince idx.
Convert a file to a chart
Gets the pool for the given server name.
Find a pool for a locator.
Checks if a region on server is already in the registry.
Gets a member of a jmx bean.
Returns a collection of host names for the specified jmx object.
Looks up the network host for the given host.
Is error and send exception boolean.
Executes the given function with the results of the given execution.
Flatten a collection of objects into a collection of objects.
Queries a query object using the specified parameters.
Factory method for forafterput.
Factory method for forafterdelete.
Handles an exception.
Gets the onregionfilterkeyfacts array.
Executes the function.
Returns a set of host names for each object in str_.
Execute the function.
Returns the appname of the resourceinst array.
Construct the security property.
Gets the region for the given region name.
Gets the region for the given region name.
Construct the comparator for the source and target hashes.
Checks if the next index must be inserted at the given timestamp.
Closes the stream.
Dump the stats files in the given directory.
Entry point for the gfstatsreader.
Reconnect to JMX.
Stop members on host.
Shutdown a member.
Shuts down the distributed system.
Shutdown redundancyzone.
Store a pagination map in the cache.
Read results by page.
Imports a region from the dataopssecretary.
Checks if remotelocators and locators match.
Executes the function.
Build the checksum map for the given region.
Returns the value of the given column.
Checks if istypeof.
Serializes an object to a byte array.
Deserialize a k from a byte array.
Create an instance of the given class.
Check for tableid.
Checks for fields.
Checks if the given element is a supertype of the given type.
brew java.
Emits a getid statement.
Converts the query to an observable.
Checks that the given columnname is declared in the tableobject.
Returns the value of the given string or the given default string if the given string is blank or
Capitalizes the given string.
Checks if istypeof.
Descending query builder.
Read the temperature from the device file.
Gets the supported cursor methods for the given type.
Prints an error message to the messenger.
Gets the iconfonts.
Returns a list of all icons.
Gets the backgrounddecoration.
Raises the given point with the given exponent.
Sets the matrix to the given values.
Sets the power of an integer.
Sets the root of an integer.
Compute the exponential for the given x and scale.
ln ln.
lnnewton.
Computes the arctanine of a bigdecimal number.
Computes the arctantaylor of x.
Computes the Euclidean norm of a bigdecimal number.
Print pi.
Returns the timestamp of the given time.
Sets the limits.
Put a float into the map.
Prints the contents of this object to the console.
Adds a complex number to this complex number.
Subtract a complex number from this complex number.
Multiplies this complex by another complex complex.
Divide a complex number by another complex number.
Sets this matrix to the given matrix.
Get a row vector from the matrix.
Get a column vector from the matrix.
Sets the matrix to the given values.
Transposes this matrix.
Adds a matrix to this matrix.
Subtract a matrix from this matrix.
Multiplies this matrix by k.
Multiplies this matrix by another matrix.
Print the matrix to the printstream.
Sets the image resource.
Validates the coefficients.
Compute the next position of the function.
Clears the contents of this template.
Convert a styled layer descriptorinfo to an XML representation.
Convert a styled layer descriptor to a sldi representation.
Validate the styled layer descriptor info.
Validates the sld.
Computes the area of a rectangle.
Sets the rows and columns of the matrix.
Sets the matrix to the given values.
Returns the inverse of this matrix.
Returns the determinant of this matrix.
Computes the norm of this matrix.
Solves the linear equation Ax = b
Decomposes the matrix.
Apply forwardelimination to the matrix.
Backward substitution.
Backsubstitution.
improve the confusion matrix.
Convert a square matrix to a matrix.
Returns the nextvonneumann.
Do iterationprocedure.
Compute the next position of the function.
Check if the position is changed.
Compute the next position of the function.
Check if two intervals are valid.
Adds the specified amount to the end of the list.
Multiplies two numbers.
Raises an exception.
Do iterationprocedure.
Gets the sldmanager.
Convert a long value to a char array.
Decompose the bits.
Print the string to the printstream.
Validates that the float biased exponent is valid.
Validate floatunbiasedexponent.
Validates that a double biased exponent is valid.
Validate doubleunbiasedexponent.
Move to the next central point.
Returns the next polar point.
Returns the next ratio.
Primesieve a number.
Returns the factors of the given number.
Do iterationprocedure.
Compute the next position of the function.
Check position.
Sets the JavaFX application.
Sets the configuration.
Sets the default configuration for the current process.
Initialize fxmlloader.
Add lat and lng to reverse geocoderequest
Gets the inetsocketaddress from a service.
Returns the applicable attributedefinition for the given attributedefinitionuuid.
Evaluate an attribute definition.
Sanitizes the given string.
Set the geocode request address.
Query for names.
Query for serviceinstances by name.
Gets all tobyloggedin collaborations.
Gets the metadata for decimalas.
Change the password for the logged in user.
Get a list of all users.
Get the Gravatar for the given email address and size
Get the Gravatar for a user
Populate fromelasticsearchjson.
Gets the elasticsearch fieldtype.
Create a flowstep.
Update flowstep.
Get flowstep by id.
Get flowstep by step.
Get all steps by flow.
Delete flowstep.
Delete flowstep.
Populate tablefields.
Closes the connection.
Called when a message is received from the server.
Indicates whether the connection is closed.
Gets the echo messages from returnvalue.
Get a list of personalinventory items.
Create a new tablerecord.
Delete a formcontainer
Returns a list of formflowhistoricdata for the given formparam.
Returns a list of formhistoricdata for the given formparam.
Get the most recent form and fieldhistoricdata for the given form.
Lock a form in a jobview.
Unlock a formcontainer.
Unlock a formcontainer.
Create a form container to the given map.
Convert a rolelistingparam to a list of roles.
Create a formdefinition.
Update a formdefinition.
Get a formdefinition by id.
Get a formdefinition by name.
Get all byloggedinuser.
Delete a formdefinition.
Gets the storagekey from the form parameters.
Initialize the xmemcachedclient.
Shutdown the memcached client.
Safely parse a string to a long.
Convert a document to a PDF.
Gets the field values for a form from the cache.
Create a flowsteprule.
Create a flowsteprule exit rule.
Create a flowsteprule.
Update flowstepentryrule.
Update flowsteprule update flowstepexitrule
Update flowstepviewrule.
Move flowstepentryruleup.
Move flowstepentryruledown.
Delete flowstepentryrule.
Delete flowsteprule from flowsteprule.
Delete flowstepviewrule.
Initializes the authencrypteddata session.
Get a list of all user queries
Get all roles.
Get the serviceticketashexupper.
Create a masked field.
Create a text barcode field.
Create a decimalspinner field.
Create a decimal slider field.
Create a new field table.
Update a field with a masked value.
Update the text barcode of a field.
Updates a field with a decimal spinner.
Update fielddecimalslider.
Update the table of a field.
Get a field by name.
Gets the fields by formnameandloggedinuser.
Gets the fields by formtypeid and loggedinuser.
Delete a field.
Force delete field.
Gets the metadata for tablefield.
Update the value of a field.
Gets or creates an index.
Create a flow.
Update flow.
Get a flow by id.
Get flow by name.
Delete flow.
Force delete flow.
Updates a field value.
Gets all global field values.
Gets the formdefinitionidandtitle.
Decrypt init packet.
Close and clean the connection.
Initialize a new request.
Gets the exception message verbose.
Create an admin user.
Get an access token.
Gets the user profile info for the given access token.
Executes the httpmethod httpmethodparam and returns the json object.
Executes the http request with the given parameters.
Get the responsehandler for the given urlcalledparam.
Checks if the connection is valid.
Gets the closeablehttpclient.
Gets the pathtofluidspecifictruststore.
Closes the connection.
Get the fluiditems for a given jobview.
Send a form to a flow.
Called when the user session is closed.
Called when a message is received from the client.
Send a message to the client.
Send a message to the remote endpoint.
Closes the user session.
Execute nativesqlsynchronized.
Request a license request.
Apply a license to the service.
Create a routefieldtextplain field.
Create a routefieldparagraphtextplain field.
Create a route fieldparagraphtexthtml.
Create a multichoice select many field.
Create a datetimedate field.
Update fieldtextplain.
Update fieldparagraphtexthtml.
Update field datetimedate and time.
Update fielddecimalplain.
Update a field value.
Create a new field value.
Get configuration by key.
Get all configurations.
Create an attachment.
Get an attachment by id.
Delete an attachment
Force delete attachment.
Parse the jar file from the given inputstream.
Set the class loader for the given jar path.
Rule 2.
Rule 3.
Rule 3.
Gets the schema node from a file.
Throw an exception if the parent is a xsdschema.
Rule 3.
Convert an object to a t.
Create a cli implementation for the given class.
Create a cli instance.
Parse arguments.
Parse arguments using instance.
Returns a base URL builder for the given path.
Remove a footer view from the grid.
Gets the value of the module at the specified point.
intvaluenoise3d - valuenoisenoise3d
Computes the valuenoise of a 3 - dimensional vector.
Interpolate a cubic function.
Returns the scurve for the 5 - dimensional curve.
Sets the bounds of the bounding box.
Process a cloudtrail event.
Process a cloudtrail event.
Gets the accountid of the event.
Apply this ruleentity to the given violationentity.
Gets the event serializer.
Create a file in the root folder.
Create a directory.
Restores all restore properties.
Create an implementation of the map.
Adds an object to the queue.
Sets the value of a property.
Get an array property from the base string.
Returns the next state for the given action name.
Remove all comparablesoftreferences from the gcqueue.
Gets the value of the given type.
Gets the parameterizedtype.
Gets the generic variable for the given type variable.
Print stacktrace.
Print stacktrace.
Replace the remote object with the remote object.
Runs the task.
Sets the task.
Returns true if the task has been accepted.
Invoked when a task is rejected.
Indicates if the task has started.
Called when a task is completed.
Stop the task.
Gets the jobimpl.
Internal putjobimpl.
Converts a blockingmode name to a blockingmode.
Resolves the object from the objectstream.
Copy the readers from the given catalog to the new catalog.
Create a new catalog object.
Load systemcatalogs.
Parses the catalog from a URL.
Parse the pending catalogs.
Parse the catalog file.
Logs an unknown entry.
Resolves the doctype of an entity.
Resolves the document.
Resolves a system.
Resolves the local URI for the given URI.
Make the given sysid absolute.
Normalize a URI reference.
Encodes the given byte as a string.
Adds the delegate for the given entry.
Create a softvalueref.
Notifies all registered listeners that a throwable has thrown an exception.
Add a throwable to the list of throwables of the given type.
Create the implementation.
Compares two timertask objects.
Returns the value of the text. If the text starts with str_ then null is returned
Gets the object at the given index.
Sets the object at the given index.
Removes all objects from the queue and removes them from the list
Adds an entrytype to the list of entrytypes.
Gets the entrytype for the given entry name.
Returns the number of entry arguments for the given entry type.
Returns the entry argument at the given index.
Set the context class loader for the given thread.
Swaps two integers.
Remove the node at the given index.
Cleans up the timeoutextimpl.
Loads a class from the classpath.
Preload all protocols.
Create urlstreamhandler.
Checks if the last handlerpkgs property is set.
Gets the value of the class.
Create an implementation of this set.
Wraps a longcounter with asynchronized hashcode.
Makes a counter indirectional.
Returns true if the current namespace is in an extension namespace.
Check notification status.
Get an object instance.
Returns a subst of a string.
Splits a string into an array of strings.
Joins a byte array into a string.
Convert a default object to a string.
Returns the mode of the text.
Creates the entry map.
Returns the object associated with the given key or null if no such object exists.
Returns the value associated with the specified key or null if there is no such key.
Removes an entry from the timedentry map.
Flushes the map to disk.
Returns a list of valid keys.
Set the resolution.
Returns the timedentry for the given key or null if no such entry exists.
Returns an iterator over the children of the given element with the given tagname.
Gets a unique child element by tagname.
Get an optional child element by tagname.
Gets the content of an element.
Gets the unique child content for the given element and tagname.
Gets the optional child content for the given element and tagname.
Sets the maximum number of queues to use.
Sets the blockingmode.
Sets the blockingmode for the given name.
Execute a taskwrapper.
Resolve an external system.
Resolve external public.
Query resolver.
Appends a vector to a vector.
Resolve all systemreverse.
Resolve a systemid in reverse order.
Resolves all catalog entries for the given system id.
Reads a catalog from a file.
Reads a catalog from the inputstream.
Connects to the file.
Gets the outputstream.
helpdelete - helpdelete - helpdelete
Returns the valid value of this header or null if this header is not valid.
Create a snapshot entry.
Create a logger for the class.
Appends a list of objects to the jbossstringbuilder.
Returns the shortname of the class.
Returns a string representation of this class.
Returns an iterator over the names of the system properties.
Gets the propertygroup for the given basename.
Getscompatible constructor.
Copy a serializable object to a serializable object.
Dereferences the given object and casts to the expected type.
Initializes the privileged action.
Update the jndi cache.
Sets the keyset.
Sets the entryset.
Remove a propertylistener.
Fire a propertyadded event to all registered listeners.
Fire a propertyremoved event to all registered listeners.
Fire a propertychanged event to all registered listeners.
Fire the propertychanged event.
Make a prefixed property name.
Load the properties from the given propertyreader.
Loads a property from the classpath.
Gets the propertygroup for the given basename and index.
Returns true if the entity is resolved.
Resolve the inputsource for the given systemid.
Resolve a systemidasurl.
Resolves the classpathname of the given systemid.
Sets the value of the astext property.
Normalize a publicid.
Encodes the given publicid into an urn.
Decodes the given urn to its public id.
Replaces oldstr with newstr.
Starts the timer.
Stop the current timemillis
Make asynchronized stopwatch wrapper.
Compares the specified object to this object with the specified object.
Generates a hash code for the given byte array.
Generates a hash code for an array of objects.
Create the map and list.
Sets the value of the field.
Returns the next token from the stack.
Initializes the privileged action.
Adds a vertex to the polygon.
Sets the root vertex of the graph.
Remove a vertex from the graph.
Performs a depth - first search on the given vertex v using the given visitor.
DFS spanning tree.
Find a vertex by data.
Finds cycles in the graph.
Normalizes a string.
Parse an XML string into an element.
Parse the given XML stream and return the root element.
Parses an XML document from an input source.
Create an element from a string.
Resolve a qname from a qualified name.
Copy attributes from srcelement to destelement.
Returns true if the given node has any child elements.
Returns an iterator over all child elements of the given node.
Gets the text content of the given node.
Returns an iterator over all child elements of the node with the given name.
Gets the parent element of the given node.
Adds a resource to the waiting map.
Reads a catalog from a file.
Gets the host address.
Sets the systempropertyclassvalue of the throwable.
Display class info.
Provide a description of a class.
Strip package name from classname.
Returns the package name of the given classname.
Forceload the given type to the given type.
Returns the wrapper for the given primitive type.
Get all interfaces of a class.
Returns an array of all unique interfaces of the given class.
Checks if the given class is a primitive wrapper of the given type.
Instantiates an object with the given property and default class name.
Gets the getter method for the given attribute.
Gets the attributesetter method.
Convert a string to a java class.
Gets the value of a property.
Gets the filenames for the given property name.
Removes the weak object from the set.
Returns an iterator over the elements in this set.
Create a urllister for the given protocol.
Returns a set view of the entries in this map.
Add a boundpropertylistener.
Remove propertylistener.
Checks if the string is null.
Find editor for the given typename.
Registers an editor for the given type and editortype.
Convert a string value to an object of the specified type.
Gets the context class loader for the thread.
If the throwable is an applicationdeadlockexception return the cause of the applicationdeadlockexception.
Schedules a timeout for the given time.
Performs the work from the queue.
Create a context with the given name.
Lookup an object by name and class.
Checks if the object is assignable from the given class.
Append classinfo to stringbuffer.
Returns the transition with the given name.
Read properties.
Query the verbosity.
Query relativecatalogs.
Query the catalogfiles.
Gets the catalog files.
Query the prefer public property.
Query the usestaticcatalog property.
Resolves an inputsource for the given publicid and systemid
Resolves the source for the given href and base.
Makes an absolute URL for the given URI.
Resolve the class for the given objectstreamclass.
Invokes the setter with the given value.
Returns the local name of the given element.
Gets the namespace URI for the given node.
Gets the namespace URI for the given element.
Returns a list of all elements in the enumeration.
Returns an inputstream for the given filename.
Load properties from a file.
Reads the properties.
Adds an edge to the outgoing edges list.
Adds an outgoing edge to the outgoing edge list.
Adds an incoming edge to the graph.
Returns true if the edge has the given edge.
Removes an edge from the outgoing edges.
Finds an outgoing edge with the given destination.
Find an outgoing edge.
Returns the cost of a vertex.
Jar a file.
Returns true if this iterator has at least one more element.
Fire an event to the task queue.
Internalinstall jvmtypeprovider.
Dispatches the given action to the platformFX thread.
Gets the eventstream for the given action type.
Apply a strict many toone constraint to a collection of rights.
Apply strictonetoone rules to a collection of rights.
Returns true if robots are allowed.
The instruction generated should be the same as the instruction generated.
Returns the sumdegree of the sum of the words.
Returns a new map containing the superclass arguments of the given map.
Informs the resource loader that the resource loader has been initialized.
Check data source.
Returns a list of all elements of the given class.
Connect jdbcon with url and driverclassname and username and password.
Runs the given SQL on the given database.
Query in with sql.
Filter byexample.
On upgrade.
Backup this table to a csv file.
Restore the data from a csv file.
Sets the emptytext of the view.
Dump the table to a csv file.
Unescapes a csv string.
Reads a list of string values from a csvrow.
Convert a csvpairs to a map.
Convert a map to a csv string.
Join a list of strings.
Join a list of strings.
Read a databasemodel from an index file.
Write the data to the index file.
Inspect the id field if it is not null.
Gets the basedaoclass for the given entity.
Gets the bindtype.
Imports the data from a csv file.
Backup all tables to a csv file.
Restore all tables from a csv file.
Writes the index to a file.
Create a query.
Create a typed query with the given type.
Renders the query.
Delete the table with the given id.
Saves an object to the database.
Update an object in the table.
Add a wherein constraint to the list.
Add a subquery to the querybuilder.
Returns the next active stack.
Gets the empty intention stack.
Adds a plan to this belief set.
Selects the plan for the given policy.
Select a plan at random.
Sets the plan variables for the agent agent and plan instance.
Gets the belief at the given index.
Returns the parents of this node.
Returns the children of this node.
Grows the given byte array by the given increment.
Create a logger with the given name level and file.
Steps the step.
Sets the goals from the given byte array.
Pause for user input.
Initialize the selection pool.
Initializes the intention selection threads.
Starts all intention selection threads.
Shuts down the intention selection threads.
Register a jill extension.
Resets this object to its initial state.
Load an agent from the agent catalog.
Process the plans for a goal.
Create agentsincatalog.
Load a class from the classpath.
Loads the extension from the given classname.
Compares two objects for equality.
Returns the usage string for the application.
Parses an array of strings.
Parses an argument with an option.
Evaluate a beliefbase.
Gets the object at the given index.
Find an object by its name.
Push an object onto the stack.
Gets the object at the given index.
Push an object onto the stack.
Pop an object from the top of the stack.
Returns the type of the given object.
Match the belief against the query.
Runs the beliefstore.
Convert a string to a byte array.
Adds a goal to the stack.
Send a goal to the agent.
Send a goal to the agent.
Gets the goals.
Create a beliefset.
Adds a beliefset to the beliefbase.
Evaluates a query against the beliefbase.
Suspend the agent.
Gets the beliefsetfield by name.
Register neighbours.
Builds a random name.
Runs the idle loop.
Checks if the agent execution stack is valid.
Remove all active agents from the set of active agents.
Manages a goal.
Shuts down the pool.
Sets the idle state of the agent.
Move the pin to the specified location.
Initializes the configuration with the given configuration.
Wait until the current thread becomes idle.
Finishes the application.
Returns true if all pools are idle.
Returns the poolid of an agent.
Picks an expression from this expression.
Sets the expression of the expression.
Joins the given attribute with the given from expression.
Performs a recursive join on the properties.
Find or create join.
Returns true if this connection has reached its end.
Gets the uploadstream.
Handle the request.
Checks if a parameter with the given name and value exists.
Returns the parameter with the given name.
Parse parameters.
Configures the transaction manager with the given config.
Gets the target file.
Writes the given artifact to the target file.
Postprocess an object instance.
Gets the declared constructor for the given implementation class.
Builds a string representation of the given descriptor.
Gets the interface method for the given method.
Checks if the field is a list type.
Get the dependency value for the given type.
Persists the state of this object to the persisted state.
Adds a link to the list of default links.
Adds a linktemplate to the default linktemplates map.
Handle links.
Handle links for headerlinks.
Handle bodylinks.
Parse linkobject.
Gets or adds the value for the given key to the map.
Handles the allowed methods.
Checks if a method is allowed.
Registers the instanceprocessor.
Register an instancefactory for the given instancetype.
Register an instanceprocessor.
Register a classprocessor.
Adds an argument to the argument list.
Create the list of targetfiles.
Serialize this object to an XML string.
Initializes the producer configuration.
Checks if the template has references to the templatefile.
Create a parameterizedtemplatemodel from a reader.
Create a parameterizedtemplatemodel from a file.
Sets the request path.
Asynchronously gets anobservable from the scheduler.
Create an instancescope for the given string.
Sets the value of a field.
Add capture to logger.
Remove a appender from the logger.
Clear the capture appender.
Parse the model.
Resolve all proxies.
Returns the list of files in the given directory.
Parses a directory.
Checks if the resource set is modelfully resolved.
Finds all eobject objects in the given resourceset.
Sets the modeldirs.
Sets the file extensions.
Sets the model resources.
Read the next record from the reader.
Set the values of an array of strings.
Convert a string to an object of the given type.
Merge the generated file with the target file.
Gets the canonical model directory.
Returns the canonical path of the template.
Write an object to the outputstream.
Start the webview.
Configure the webwindow to display in fullscreen mode.
Print the view.
Writes the given inputstream to the given outputstream.
Invokes the specified method on the specified object proxy.
Attach httprequest and httpresponse to the httpservlet.
Detaches this object from its parent.
Gets the cookies.
Dump the request to the log.
Gets the invocationmeters.
Configures the eventstream configuration.
Set the remote host.
Returns the parameter value for the given name.
Remove a prefix from a path.
Gets the common directory between two files.
Convert absolute path to relative path.
Convert relative path to absolute path.
Returns the depth of a directory.
Dumps an error to the log.
Send a JSON object to the client.
Adds a parameterized template model.
Adds a list of parameterizedtemplates to the template list.
Initialize the parameterized template model.
Finds all parameterizedtemplates that have references to the given template directory.
Sets whether the save button is enabled or not.
Delete the confirm dialog.
On delete.
Create a new instance of the managedclassspi managedclass.
Returns the results of the fitfilecomparator.
Returns a summary of the results.
Get the summary row for a directory.
Get the summary row for a given file.
Create an instance of the managedclassspi managedclass.
Gets the setup class.
Gets the modeldirs.
Gets the list of model resources.
Sets the candidates.
Load the XML from the given inputstream.
Called when an error occurs.
Returns true if the formal parameter type is an object.
Read an array of objects from the httprequest.
Reads an object from the inputstream.
Extract the parameter from a fitcell.
Gets the value of the hints property.
Checks if is xhr.
Checks if the httpservletrequest is android.
Handles an element event.
Returns a list of property descriptors for the given beantype and annotation type.
Gets the annotation for the given property descriptor and annotationtype.
Logs a message with the given arguments.
Lookup the whois result for the given domain.
Returns true if the parser for the given whoishost exists.
Gets the managedclass for the given interface name and request URI.
Get the managedmethodspi for the given method name and request URI.
Process an event that contains an exception.
Process notcontains event.
Serialize the httpservletresponse to the outputstream.
Returns the value of the cookie with the given name.
Adds a cookie to the response.
Remove the cookie with the given name.
Returns an iterator over the cookies.
Gets the targetfilelistproducer.
Adds a field to the constant pool.
Compile the class.
Verifies the response from the tokenedimagefiles.
Gets the value of the file.
Ensures that the given URI is trailing slash.
Gets the httpservletrequest instance.
Invokes a managed method.
Execute amutable transaction.
Execute an immutable transaction.
Returns the list of files in the directory.
Gets the last file in the directory.
Gets the concreteconfig.
Checks if the requestpath starts with the pathcomponent.
Get the list of artifact factories for the given model type.
Gets the httpsession for the given instancekey.
Serialize the httpservletresponse to the outputstream.
Read meta data.
Handles the request.
Closes the statement and closes the statement.
Predestroy eventstreams.
Handle allowed methods.
Upload blob to blobstore.
Delete the confirm dialog.
Extract column parameters from fit row.
Returns an array of the argument names for this command line.
Schedules a periodic task to be executed periodically.
Causes the specified timeout task to be canceled.
Configures the repository.
Returns the next file in the cache.
Configure the application.
Prints the banner.
Printstoppedbanner.
Create a chameria from the command line arguments.
Registers a shutdown hook for the chameleon.
Trigger the notification.
Triggers the endpoint.
Insert and replace a fit row.
Returns the counts of all files in the result set.
setter for score
getter for variants
setter for variants
getter for questiontype
setter for questiontype
getter for token
getter for deplabel
setter for deplabel
getter for semantictype
setter for semantictype
getter for sections
setter for sections
indexed getter for sections indexed by index
indexed setter for sections
getter for uris
setter for uris
getter for types
setter for types
getter for targettype
setter for targettype
getter for rank
setter for rank
getter for querystring
setter for querystring
getter for candidateanswers
setter for candidateanswers
indexed getter for candidateanswers indexed by index
indexed setter for candidateanswers - sets an indexed value -
getter for query
setter for query
getter for hitlist
setter for hitlist
indexed getter for hitlist indexed by index
indexed setter for hitlist
getter for abstractquery
setter for abstractquery
getter for searchid
setter for searchid
setter for docid
getter for offsetinbeginsection
setter for offsetinbeginsection
getter for offsetinendsection
setter for offsetinendsection
getter for beginsection
setter for beginsection
getter for endsection
setter for endsection
getter for casfeataspects
setter for casfeataspects
getter for triple
setter for triple
getter for sourcerelation
setter for sourcerelation
getter for subject.
setter for subject
getter for predicate
setter for predicate
getter for isobjuri
setter for isobjuri
getter for operator
setter for operator
getter for operatorargs
setter for operatorargs
getter for concept
getter for score
getter for text
setter for text
getter for id.
setter for id - sets
getter for name
getter for abbreviation
setter for casfeatcode_abbreviation
setter for concept
getter for variants
setter for variants
getter for namedentitytypes
setter for namedentitytypes
getter for concepttype
setter for concepttype
getter for occurrences of candidateanswervariants
setter for occurrences of candidateanswervariants
getter for casfeatconcepts
setter for casfeat_concepts
getter for original text
setter for originaltext
getter for args.
setter for CASFeatcode_args
getter for label
setter for label
Returns the index of the next clear bit at the given index.
Sets the word at the given index.
Free the buffer.
Create a new instance of a cachevalue.
Rehashes an array of values to a new array of predicted positions.
Returns the HELM2 representation of this string.
Checks if bracketsparenthesis are equal.
Add details for the given string.
Returns the HELM2 representation of the annotation.
Adds an element to the list of elements.
Checks if the polymerid is valid.
Checks if a polymerid is valid.
Checks if the given string contains detailsconnections.
Checks if a string is a group id.
Checks if the given string is repeated.
Checks if is peptideorrna.
Serialize the notation container to a JSON string.
Gets a simple polymer by its id.
Gets the current groupingnotation.
Returns the string representation of the polymer tohelm2.
polymertohelm2.
Returns the connection tohelm2.
Returns grouping tohelm2.
Returns the annotation tohelm2.
Gets the list of polymerandgrouping ids.
Gets the polymer with the given id.
Sets the polymerelements.
Do conversion.
Sets the annotation.
Sets the number of occurrences of the given string.
Decides the monomernotation of the given type.
decide which monomernotation ingroup.
decides which entity to use.
Returns the value of this interval.
Parse a state machine test string.
Sets the rnacontents of a string.
Defines the ambiguity of a string.
Gets the statistics for this worker thread.
Creates a adigraph from a collection of edges.
Create a graph from a collection of nodes and a collection of edges.
Initializes the paths internal map.
Returns a list of nodes sorted by the number of cycles that are reachable by the number of cycles
Subscribes to a method with the given pattern and methodname.
Get the number of occurrences of the given pattern.
Unsubscribe from a pattern.
Returns the response for a given request type.
Send a return_sync request to the server.
Polls for a request and returns true if the request was successful.
Send a shutdown message to the server.
Throws unchecked exception if the throwable requires local handling.
Unlock the runstate.
Create a worker if it doesn t exist.
Attempt to add a worker to the pool.
Register a forkjoin worker thread.
Deregister worker.
Signals a work queue to be ready to run.
Run a worker.
Await work.
Returns the common submitterqueue.
Returns the number of helpcompletes for the given task.
Submit a forkjoin task to the external queue.
Make common pool.
Returns the status of this thread or throws an exception if interrupted.
Build a string from astatement1.
Get the statistics of the local queues.
Create a list from an array of elements.
Reverse the list.
Iterates over the elements of an iterable and returns true iff the predicate evaluates to true
Folds the elements in the iterable into the left fold of the result.
Folds the elements in a list into a new list by applying a function to each element
Push a task onto the stack.
Create an option from a nullable value.
Creates a alonghashmap from the given keys and values.
Create an empty alistmap.
Creates a listmap from keys and values.
Creates a listmap from keys and values.
Returns an immutable set view of the keys contained in this map.
Normalize the resource name.
Marshal a boundtype to a string.
Create a subsequence of characters.
Returns a binary search for the element in the list.
Binary search for the element in the list using the comparator.
Sends an email message to the server.
Bind a routebinding to the appacceptid.
Bind a filterbinding to the handler.
Show the body of the tag.
Gets the int value of the given long.
Removes duplicate strings from an array.
Like a string.
Runs the state machine.
Authenticates the user with the given password.
Gets the loginuser.
Checks the password against the salt and plain password.
Save memberin cookie.
Returns the login key for the given user IP and user agent.
Returns the user for a cookie with the given uuid.
Forwards the request and response to the servlet.
Returns the long value of a request parameter.
Logs the given message at debug level.
Get information about the caller at the given level.
Converts a char array to a simple byte array.
Converts a charsequence to a simple byte array.
Converts a byte array to a char array.
Converts a charsequence to an ascii byte array.
Looks up the locale data for the given code.
Returns a promise that will be executed in the given amount of milliseconds.
Crops the image to the given location.
Invokes the given invocation with the given amount of milliseconds.
Invokes the given directinvocation and waits for it to finish.
Gets the restoperations.
Renders the ajax error.
Renders a forbidden ajax message.
Renders the given view as a freemarker template.
Parse the path from the currentactionpath and url.
Render datatables.
Render empty datatables.
Sets the list of items.
Sends the response to the server.
Returns a list of all the bindings in the given injector.
Returns the current method name.
Compact memory.
Propagate the given metrics to the local metricscollection.
Encodes the given string into a base64 string.
Copy the contents of the inputstream to the outputstream.
Copy the contents of the inputstream to the outputstream.
Copy the contents of the given inputstream to the given writer.
Copy the contents of the reader to the writer.
Copy the contents of the reader to the writer.
Copy the contents of the given reader to the given outputstream.
Copy the contents of the reader to the outputstream using the given encoding.
Compare two buffered inputstreams.
Compares two bufferedreaders.
Apply the function to the given object.
Get the SQL for the given groupnameandsqlid.
Unmarshals the given string into the given class.
Unzips the given file to the given destination directory.
Get an instance of the permissiondialogfragment.
Resumes the dialog.
Register a converter for a core value type.
Returns true if the value matches the regular expression.
Returns true if the value is a mobile string.
Checks if the value is a phone.
Checks if the given string is a birth day.
Checks if is url.
Apply the filter to the httpservlet.
Encodes the given string using base64.
Decodes the given string to a byte array.
Converts a hex string to a byte array.
Read properties from the inputstream as UTF - 8.
Read content as string.
Read content as string.
Writes a byte array to a file.
Copies the source directory to the target directory.
Serialize the given document to a string.
Get a document from a file.
Parses an XML document from a string.
Parses an XML document from an inputstream.
Verifies if the signature is valid for the given key.
Sign a document using the rsapublickey privatekey and publickey.
Checks if the given class is cache - safe.
Checks if a class is a primitive array.
Checks if the given class is an array of primitive wrappers.
Resolves a primitive ifnecessary.
Checks if lhstype is assignable from rhstype.
Checks if the given value is assignable to the given type.
Gets all interfaces of the given object.
Gets all interface assets for the given instance.
Write the configuration to a temp file.
Returns the variables for the given URI.
Add a permission to this bean.
Bind the extension point to the extension point.
Returns the builtin object for the given type.
Returns the primitive value of the given type.
Convert the given object to the given type.
Convert the userdefinedvaluetype of the given object to the given type.
Query a request parameter.
Adds a cookie to the request.
Add a session parameter to the context.
Initialize druiddbintializer.
Adds a parameter to the query.
Sets the value of a parameter.
Show the permissiondialog.
Returns true if all values are granted.
Returns true if any of the values are denied.
Find records by sqlselect.
Find one record in the database.
Checks if is new.
Checks if the method declares an exception of the given type.
Process the queue.
Adds a new value to the queue.
Checks if the given string matches the pattern.
Read arguments.
Gets the protobufentity from the given class.
Checks if the class is a protobufentity.
Gets the allprotbuffields for the given class.
Gets the protobufgetter for a field.
Gets the pjosetter for a field.
Gets the mapper.
Gets the thread - local json factory.
Convert an object to a JSON string.
Sets the borders.
Get the userrecord for the given domain and username
Copyout attributes.
Copyout attributes.
Add this frame to the apptoframe.
Saves the given token to the access token.
Gets the access token.
Gets the default classloader.
Returns the resource URL for the given resource name and classloader.
Gets a resource as stream.
Returns an inputstream for the given class.
Initializes this URI from another uri.
Initialize the scheme.
Initialize the path.
Sets the scheme of the URI.
Set the userinfo.
Set the host of the uri.
Sets the port of the URI.
Append a path to the path.
Sets the querystring.
Sets the fragment of the URI.
Gets the URI string.
Create a prepared statement using the given iterator and parameters.
Initialize the applet.
Get the muffin for the given string.
Set the muffin value.
Gets the clipboard contents.
Sets the clipboard contents.
Loads a map of service IDs from the service loader.
Sets the serviceparams for the given operation.
Returns a map of service parameters for the given operation.
Find a parametrizedservice by its id.
Find a service by its class.
Parses a query response.
Returns an iterator over the elements in this list.
Gets the encoding of the given XML string.
Create a proxy instance for the given connection.
Get the authorization from the authorization url.
Visit a package declaration. This method will be called for every node in the tree that is a
Visit a classdeclaration. This method will be called for each class declaration.
Visit an executabledeclaration.
Get the value of an option.
Returns a declarationfilter that matches the given modifier collection.
Returns a declarationfilter that matches the given kind.
Returns a declarationfilter that evaluates to true ifff matches this filter and f.
Returns a declarationfilter that accepts the logical or of this filter and f.
Gets the map.
Makes the given constructor accessible.
Prepares the object query for the given object.
Replaces the slashwithhyphen of the given string with the given string.
Converts a byte array to a hexadecimal string.
Returns the indexes for the given name.
Parse the namedsql string.
Converts a collection of protobufs to a collection of protobufs.
Sets the value of a protobuf field.
Sets the value of a POJO field.
Accepts a file.
Gets an instance of the resultset.
Convert a list of labels to a map of expected labels.
Gets the generic supertype of the given type.
Polls the queue and removes it from the queue.
Poll individually.
Returns the declared field of the given class or null if it cannot be found.
Returns the declared methods of the given class.
Gets a declared method from a class.
Returns an array of all declared declared methods for the given class and annotation class.
Returns an array of constructors that are annotated with the given annotation class.
Dump a byte to the system output.
Returns the index of the ignore case of the given string.
Removes the chars from a string.
Cleans the state.
Initialize audit.
Initialize the message queue.
Initializes the passwordvalidator.
Initializes the password authenticator.
Resolves the locale code for the given locale.
Looks up the localeinfo for the given locale code.
Gets an instance of a statement.
Removes all elements from the set.
Pop an element from the stack.
Make an inputstream from the inputfile.
Parse arguments.
Returns true if the tokens match the patterns.
Moves the rectangle to the specified location.
Returns true if this rectangle encloses another rectangle.
Returns true if this rectangle contains the specified point.
Computes the intersection of this rectangular and another rectangular.
Computes the union of this rectangular and another rectangular.
Replaces this rectangular with another rectangular.
Replaces this rectangular with another rectangular.
Returns the number of columns of the given column.
Returns the rowofs of the given row.
Returns the bounds of the cell relative to the specified location.
Calculates the columns.
Calculate the rows.
Unwraps a throwable.
Main method for running the application.
On codeupdate.
Copy and resize codebuffer.
Initialize the log.
Returns a copy of this queryparameter.
Adds a child node to this node.
Clear the children of this node.
Advance to the next internal element.
Adds instructions to this function.
Adds instructions and thistoparent to this node.
Fired when a property is changed.
Register a workpanel.
Update thepresentcomponentflags.
Create an instance of a decimal type.
Evaluates the given term.
Optimize the given instructions.
Compares two collections.
Service the httpservlet.
Start the jsp tag.
Renders a button.
Resets the state machine to its initial state.
Initializes the learning model.
Gets the value associated with the given key.
Returns the index of the given key.
Sets the value at the given index.
Remove an object from the map.
Removes the element at the given index.
Checks if the object has a property with the given name.
Sets the value of a property on the callee.
Gets the property from the callee.
Checks if the primitive type is assignable from the primitive wrapper type.
Initializes the callee.
Chooses the decision tree for the given state.
Initialize the lookups for this decisiontree.
unify a query and statement.
Performs a unify on the left and right variables.
Compile the query.
Find the maximum number of arguments in the given clause.
Allocate registers for the given clause.
Gather positionandoccurrenceinfo.
Display a compiled predicate.
Display the query.
Convert a bytebuffer to a string.
Gets the value of the string property.
Sets the string value.
Read a term from the content handler.
Checks if a class exists and is loadable.
Checks if the given class is assignable from the given parent.
Returns true if parent is a subtype of child.
Returns true if parentclass is a subtype of childclass.
Returns the class for the given class name.
Create a new instance of the given class.
Creates a new instance of the given constructor with the given arguments.
Call a method overridingillegalaccess.
Call a method on an object.
Call a static method.
Gets a constructor from a class.
Finds the set of types that match the given property name.
Gets the transactional queue.
Gets the transactionalrequeue.
Gets the type from an object.
Resets the state of this object to its initial state.
Create an instance of the specified type.
Adds a supported timezone to this endpoint.
Add an alternate dimension for a given tzname.
Adds a dimension table to the table.
Searches for free variables that match the query.
Searches for freenonanonymous variables that match the query.
Compares two searchnodes.
Write object to file.
Read a bufferedinputstream as a string.
Creates a new searchnode with the given state.
Generate the traceindent.
Returns true if the body of the last body of the given term is the last body of the
Choose best property to decideon.
Returns a functor for the given name and term.
Returns a variable with the given name interned with the interner.
Execute an action with error handling.
Gets the elements at the given index.
Sets the texture.
Override paintimmediately to set the current repaint manager.
Create a bufferedimage for the given image type.
Create a bufferedimage with the specified width and height.
Creates a buffered image with the specified width and height.
Sets the queuesearch algorithm.
Entry point for the prolog parser.
Returns the clause.
Consumes a list of terms.
Create a functor.
Tokenizes a variable.
Parse an integer literal.
Parse a double literal.
Parse a string literal.
Peek and consume directive.
Interns an operator.
Initialize builtins.
Consumes a token from the stream.
Consumes the next token of the given kind and returns true if the next token has been
Bind this binder to this binder.
Rollback the transaction.
Collects the elements from the iterator to the target collection.
Convert hours minutes minutes and seconds to milliseconds.
Converts ticks to years.
Returns the ticks with the given hours set to the given value.
Returns the ticks with the given number of minutes set to the given value.
Gets the ticks with seconds set to the given value.
Returns the ticks with the given year set to the given value.
Returns the number of ticks with a month set to the given month.
Returns the number of ticks with the given date set to the given date.
Converts a year to milliseconds to yearstart.
Reads a byte block from the source.
Returns the entry for the given key or null if not found.
Cuckoo entry.
Rehashes the hash.
Invoked when an action occurs.
Set next available state.
Sets if the previous available state should be set.
Sets whether this task is finished or not.
Get an instance of the wamresolvingnativemachine
Returns an iterator over the variables in this set.
Returns the expectedi of the given probabilities.
Returns the probability distribution for the given counts.
Sets the ticks.
Perform the action forward.
Create a new url from a string.
Gets the requestinfo.
Returns the headers for the current request.
Get the cookies from the httpservletrequest
Gets the parameters.
Gets the requestscope.
Gets the pagescope.
Gets the sessionscope.
Gets the applicationscope.
Gets the userprincipal.
Begin the start of the tag.
Returns the HTML table for the given propname and values.
Sets the currentscreenstate of the workflow.
Walks the tree starting at the given term.
Compares two searchnodes.
Update the internal registers.
Notifies all listeners that a property change has occurred.
Leave clause.
Returns true if the given positionalcontext is in toplevel functor.
Sets the arguments.
Returns the fixity associativity.
Returns true if the associativity is infix.
Compares two opsymbols.
Fired when a property is changed.
Register a workflowcontroller.
Gets the factory for the given class.
Create a componentfactory for the given class name.
Gets the storagecell for the given variable.
Returns true if this variable is bound.
Sets a column attribute.
Sets a row attribute.
Gets the columnattributeornull.
Gets the rowattributeornull.
Internal insert method.
Create an instance of the specified type.
Create an instance of a patterntype.
Checks if the given value is an instance of this type.
Create an initialcontext for the given term.
Update the registers for the given layout.
Gets the value of this expressiongroup.
Finds the goal path of this node.
Cache block.
Gets the properties for a resource.
Sets the hertz of the rate.
Reads a byte array from the source.
Skips the specified number of bytes.
Gather disjunctions.
Read an int from a byte array at the given offset.
Write an int to the byte array at the given offset.
Write 24 bit int to byte array.
Gets the 24 - bit integer from the given byte array at the given offset.
Gets a short from the given byte array at the given offset.
Write a short to the byte array at the given offset.
Returns the state of the operator for the given operator.
Returns an iterator over the operators in the tree.
Gets the id of this node.
Gets the value of the property.
Sets the value of the attribute.
Convert a list of strings to an array of strings.
Convert an array of strings to a list of strings
Converts the given name to camel case.
List handlers.
Resolves the targetcallpoint for the given functorname.
Set the code address for the given functor.
Returns true if this component is a subcategory of this component.
Gets the id of this node.
Returns the value at the given level.
Gets the last value of the path.
Writes an object to the output stream.
Reads an object from the given inputstream.
Computes the Hamming distance between two states.
Returns the mod of the given long.
Adds an error message to the error list.
Writes a string to the output stream.
Classifies the given state.
Compares two expressions.
Returns an iterator over the elements of this iterator.
Returns the logbase2 of the given value.
logbase2v2 - > logbase2v2
Returns the integer logbase10v2 for the given value.
Returns the integer logbase10v3 for the given value.
Returns the intlogbase10 for the given long value.
intlogbase10v2 intlogbase10v2
Gets the charactercountint32 value for the given integer.
Gets the charactercountint from a 64 - bit long.
Gets the charactercountdecimal value for the given integer value and scale.
Sets the head of the functiontor.
emmitcode the given bytebuffer to the given device.
Sets the current screen.
Evaluate this expression against the given t.
Gets key iterator.
Create array properties.
Sets the hertz of the rate.
Evaluate the first number.
Find the properties.
Gets the system property.
Gets the propertiesusingclasspath.
Gets the propertiesusingcwd.
Leave a functor.
Gets the value of this term.
Sets the term to bind to.
Create a priority queue.
Closes the connector.
Append a loggingevent to the logger.
Fires the connector.
Initialize the printers.
Commits the transaction.
Rollback the transaction.
Request a write operation.
Adds a cached write operation to the cache.
Acquire global writelock.
Release global write lock.
Enlists the current transaction session.
Enter a ruleset node into this ruleset.
Inserts the specified element at the tail of this queue waiting up to the specified wait time for
Returns the next element from the queue or null if the queue is empty.
Inserts the specified element into this queue. If the queue is full an exception is thrown.
Returns the next object from the source.
Gets a property as boolean.
Gets the value of a property as an integer.
Returns the long value of the property with the given name.
Call a mixin on the given arguments node.
Sets the additionvisitor.
Backtrack the checknode.
Retrieve the code from the code buffer.
Execute and extract bindings.
Decodes the heap.
Captures this capture.
Restores the object to its original state.
Get an object from the map.
Adds an object to the hashmap.
Gets all fieldnames for the given class.
Executes the mojo.
Inserts the specified element at the tail of this queue.
Creates a new searchnode with the given state.
Create a priority queue for the search node.
Creates a simplewalker for the given visitor.
Create a goalwalker for the given unary predicate and visitor.
Create a termwalker for a positionaltermvisitor.
Create a positional goalwalker for the given unary predicate and visitor.
Create a termwalker for a positional termvisitor.
Gets the properties from an inputstream.
Gets the properties from a file.
Gets the properties from the given url.
Gets the properties from the given pathname.
Computes the grid size.
Initialize the font metrics.
Add a propertychangelistener.
Add a propertychangelistener.
Remove a propertychangelistener from the list.
Fire the propertychange event.
Create an instance of the specified type.
Fade the color delta to the specified group.
Shows the horizontal bar horizontally.
Show the left bar.
Show the right bar.
Sanitize radiocontrols.
Awaits until the given condition is satisfied or an exception is thrown.
Waits for the given time to finish.
Executes the mojo.
Append the classpath elements to the commandline.
Create an instance of the given type.
Printintroduction.
Initializes the consolereader.
Evaluates the given sentence.
Evaluate the query.
Gets multitypedata.
Get multitypedata from byte
Gets multitypedata.
Gets multitypedata.
Gets the multitypedata for the given integer.
Gets multitypedata.
Gets the multitypedata for a float.
Gets the multitypedata.
Returns a multitypedata object from a string.
Gets the multitypedata from an object.
Adds an attribute to the pagecontext.
Clears the range to the given key.
Expand the key.
Inserts a character into the data.
Compare two searchnodes.
Parses the operators.
Gets the operator matching the given name.
Checkandresolve to fixity.
Returns a new node with the given successor.
Gets the error message.
Gets the options in force.
Get usage.
Adds the trailing pairs to the properties.
Adds options to properties.
Adds an option to the command line.
Check the argumentformat.
Compares the given iterators with expected iterators using the given mapping function.
Returns an enumeration of option elements.
Gets the options.
Sets the edited tag id.
Gets the actual stemmer.
Stem a word.
Main method for stemming.
Create an instance of the specified type.
Resets the state of this object to its initial state.
Returns the traceenvframe of the trace.
Returns the trace choice frame.
Calls the given function with the given number of permissions.
Returns the next stack frame.
Returns true if backtracking is enabled.
Jump to the given address.
End the unwindtrail.
Clean up the tidytrail.
unify two sets of integers.
unify a constant from a given address.
Print slot.
Gets a random start state.
Returns true if the given state issolvable.
Get the child state for the given operator.
Returns an iterator over the valid operators.
Returns a pretty - printed representation of the board.
Swap the tiles.
Convert a string to a character list.
Converts a list of characters to an eightpuzzlestate.
Converts a logrecord to a log4j message.
Convert log4j level to log4j level.
Requeue a new element.
Requeue a new element.
Increment size and count.
Decrement the size and count of the record.
Signals the signalable if the threshold is above the threshold threshold.
Returns a list of namingenumerations with the given name.
Lists the namingbindings for the given name.
Adds an object to the environment.
Remove an object from the environment.
Run GCtillstable.
Match a literal.
Resolve amixinreference.
Adds a variable reference to the parser.
Sets the maximum height of a row.
Updates the max column width for the given column.
Makes a heuristic search node.
Execute the action forward.
Substitute builtins in the clause.
Initialise the symbol table.
Perform a toplevel check on the given term.
Convert a list of arguments to a string.
Evaluates two numbers.
Signals the state machine to be running.
Signals that the state machine terminates.
Signals the state machine to terminate.
Inserts the specified element at the tail of this queue.
Compare two nodes.
Inserts a node into the tree.
Restart the server.
Returns a set containing all occurrences of the given searchmethod.
Returns a collection containing all elements of the elements of the specified searchmethod in the order they are
Iterates through all solutions and adds each solution to the collection.
Advances to the nextinsequence.
Restores the values of an object from a map.
Gets the value of the given property.
Put a multitypedata value into the map.
Sets the value of the given property.
Captures the result of the capture.
Pop an element from the top of the stack.
Convert modifiers to string.
Converts a string to an integer.
Converts a string to a date.
Checks if a string is a date.
Checks if the string is a time.
Checks if a string is a datetime.
Create a tokensource for a string.
Gets the tokensource for the given file.
Create a tokensource for the given inputstream.
Checks if the given instruction is a constant.
Returns true if the instruction is avoidvariable instruction.
Returns true if the instruction is a non - arg instruction.
Returns an iterator over the children of this clause.
Returns the argument at the given index.
Returns an iterator over the children of this operator.
Returns a string representation of this term.
Retrieves the summary for the given schemadefinition.
Retrieves a list of records for the given schemadefinition.
Execute query.
emmitcode this mnemonic to the given bytebuffer.
Sets the basictype of the given class.
This method consults an inputstream.
Print a variablebinding.
Returns an iterable that expands a set of solutions to a map of variables.
Runs the read stream.
Reads the document from the reader.
Returns the current time in milliseconds.
Gets the current timemillis.
Update the trackinfo of a playlist.
Update the playlist progress progress and volume.
Render final output.
Handle resource request.
Handles an event request.
Fire the startmusicrequest event.
Initialize the reader thread.
Starts the reader thread.
Shuts down the server.
Reset the parser.
Parses the packets from the inner reader.
Process a packet.
Sets the CLI option.
Create a chat with the given user id and messagelistener.
Internalize the contentmanagerimpl.
Resets the content to the given map.
Sets the value of a property.
Adds a filter to the packet.
Process an httpservletrequest.
Resets all properties to their default values.
Initialize the writer and writer thread.
Send a packet to the client.
Moves to the next packet.
Open the stream.
Returns a list of all informations for this type.
Returns true if the descriptor contains the given descriptor.
Adds an eventlifecycle listener to the list of lifecyclelisteners.
Shuts down the executor.
Checks if the given entry is valid.
mask null.
Compares two objects for equality.
Returns the entry for the given key.
Resize the table to a new capacity.
Puts all entries in the given map into this map.
Removes the entry for the given key.
Removes the entry with the given key from the table.
Removes an entry from the map.
Adds an entry to the table.
Create delegate map.
Convert a string to an XMLattrib string.
Encodes the given byte array as a hex string.
Encodes the given string using base64.
Encodes a byte array into a base64 string.
Iterates over the given collection.
Sets the controller for the track selector.
Sets the controller for the jump progress.
Sets the controller to be used when playing back.
Sets the volumechangeable controller.
Sets the availableplaylists function to broadcast to the device.
Handle commandresources event.
Handle volume change.
Handle jump.
Handles the selecttrack event.
Gets the threadcache for the given name.
Gets the requestcache for the given name.
Gets the altfield.
Returns the shardpath for the given id.
Adapts an object to a session.
Safely invoke a method on an object.
Deletes the content at the given path.
Update an object with its properties.
Sets the pinginterval.
Schedules a periodic ping task to be executed on the server.
Adds the given options to the command line.
Returns true if the given option has been used.
Parses the command line from the given arguments.
Prints the usage of the given application.
Parses the given command line arguments and prints the result.
Initialize the connection.
This method is called when the starttls message has been received.
Gets the compression handler.
Sends a requeststreamcompression to the connection.
Starts the decompression process.
Notifies the connection error.
Notifies the connection that the connection has been reconnected.
Register a SASLmechanism.
Returns a list of registered SASL mechanisms.
Returns the outputpluginbehaviour for the given identifications.
Logs a formatted message and throwable at INFO level.
Log an error message and throwable.
Prints a formatted message and throwable to the given printstream.
Create a startevent.
Create a startevent from the given source.
Notifies the listeners of the given string.
Checks if a resource provides a resource.
Checks if the resource list contains resources from the given source id.
Checks if a list of resources provides a resource.
Provide a list of resources for the given resourceids.
Get a cached object from the cache.
Gets the cache key for the given keyspace columnfamily and key.
Remove the cached key from the shared cache if it exists.
Put the cached object into the cache.
Get the location map.
Include a jar file.
Include a jar file.
Adds a mech to the default mech list.
Adds a collection of mechs to the system.
Create debug log.
Activates the safe openprocessors.
Register standard event listeners.
Registers an eventlistener.
Register a new event id.
Perform a filelock on a channel.
Checks if the event can run.
Creates a new dsesession with the given keyspace.
Create a musicplayererror resource.
Start playing a track.
Stop playing this music.
Executes a command on the player.
Create a broadcasterplaylist request
Create a broadcasterplaylistanswer.
Appends the given postfix to the URL.
Adds a query parameter to the URL.
Add a query parameter to the URL.
Add a query parameter to the URL.
Add a query parameter.
Gets a playlist from an eventmodel.
Invoked when the launch buttonactionperformed button has been pressed.
Checks if the server is started and if so sets the status label and statuslabel.
Checks if the given urlname exists.
browserbuttonactionperformed.
Create an imageicon for the given path and description.
Launches a runnable and displays it.
Returns a copy of this intarray with the given values.
Exports this object to a hashmap.
Returns the value at the given index or null if the value is not a jsonarray or json
Returns the value associated with the given key or null if the value is not a jsonobject or
Returns the integer value of the given value or the default value if the value is null.
Returns the double value of the given value or the default value if the value is null.
Returns the string value of the given value or the default value if the value is null.
Create a command resource.
Verifies that the given command is valid.
Verifies the capabilities of a command.
Verifies the given command and capabilities.
Execute batch async.
Returns all subclasses of the given class.
Returns a set of all subclasses of the given class name.
Search for classes in the given location.
Searches the given directory for classes assignable from the given package.
Converts this resource to a list.
Returns the number of elements in this queue.
Process a packet.
Gets the volume for the given eventmodel.
Send an error response to an iq server.
Create an error response.
Checks if an eventmodel is a target.
Sets the loginenabled field.
Decorate a set.
Sets the name of the file.
Update the state.
Gets the groups.
Appends a rsm element to the queryelement.
Parses a rsm element.
Create a leavingevent.
Reload the roster.
Create an entry.
Returns a collection of all entries.
Gets the presence for the given user with resource.
Set the presences for all available resources.
Fire rosterchanged event.
Set the digest of the connection.
Generate a resource.
Create a playerrequest.
Returns the timepassed value of an eventmodel.
Registers a listener to be notified when the properties of the update has been updated.
Initializes the properties.
Reloads the properties.
Parse an XML streamerror element.
Parse the mechanisms from the mechanismsel.
Parse the compressionmethods.
Parse a packetextension.
Decodes the given string into an object of the given type.
Verifies the given eventmodel and capabilities.
Gets the playbackstate from a resource model.
Returns the secret key for the subdomain.
Check if multiple subdomain is allowed.
Puts a key - value pair into the map.
Gets the keyset.
Returns a collection view of the values contained in this map.
Purges a reference from the cache.
Returns the entry for the given key or null if the key is null.
Returns the hashcode for the given key and value.
Creates a new entry with the given hashcode and key and value.
Returns true if the presence indicator is present.
Sets whether this node is present or not.
Update the mostvague.
Delivers a message to all registered listeners.
Generate the script for the given class.
Initialize the output directory.
Load properties from a file.
Write a string to a file.
Gets the progress for the given eventmodel.
Decorate a collection.
Discover the serviceresolvers for the given inet address.
Resolves the configuration.
Gets the value of the threadpool property.
Create a stopmusic resource.
Verifies if the given eventmodel is a target.
Gets a dsecluster instance.
Adds a connectionlistener to the list of connectionlisteners.
Adds a packetlistener to receive notifications.
Adds a packetlistener to the list of sendlisteners that will be notified when a packet is sent
Notifies the listeners that a packet has been sent.
Adds a packet interceptor.
Notifies all interceptors of the packet.
Convert an object to a value.
Called when the connection has been disconnected.
Gets the current thread id.
Checks if the given node is valid for the given thread.
Gets the key for the given value.
Gets the data for the object at the given index.
Looks up the node at the given index and returns it if it is valid.
Looks up the node at the given index in the tree.
Compares two objects.
Returns the least node of the node at the given index.
Gets the most node of the node at the given index.
Returns the next greater than the node at the given index.
Returns the node that is the most valid node for the given thread id.
Returns the least valid node in the given node or null if no valid node is found.
Copy a color from one node to another.
Checks if a node is red.
Check if the node is black.
Gets the grandparent of the node at the given index.
Gets the parent of the node at the given index.
Gets the right child of the node at the given index.
Gets the left child of the node at the given index.
Rotate the node at the left side of the tree.
Rotates the node by the given index.
Inserts a node in the tree starting at the specified index in the inserted node.
Doredblackdelete.
Checks if an object is non - null.
Inserts a new value into the tree.
Checks if the map contains the given key.
Returns true if the given value is contained in this set.
Get the value associated with the given key.
Remove an object from the map.
Removes all entries from the tree.
Copies the entries from the given map to the new map.
Delete expired entries.
This method is called when the cache is being culled.
Activates the component.
Get a player request for a playlist.
Initialize the default rosterstore.
Open a default rosterstore.
Scans a range of IP addresses.
Given an inetaddress and subnetbits return the corresponding inetaddress.
Export this object to a hashmap.
Import a trackinfo object from a hashmap.
Adds all application classes to the given set.
Execute the application if it is an execs_application
Print the list.
Print the usage.
Main method of the command line tool.
Create a muteevent with the given source and target.
Create a muteevent from an identification source.
Gets the goodwillschema for the given schema name.
Write a list of lines to a file.
Checks if the application is inexecjar.
Adds an applicationoption to the command line.
Gets the goodwillschema field list.
Gets the goodwillschemafield by name.
Get the package name from a jarentry.
Map content to values.
Create an eventlistener for the given descriptor descriptor descriptor descriptor descriptor descriptor descriptor descriptor descriptor descriptor descriptor descriptor
Sets the state of the iterative state.
Iterate over the elements in the given collection.
Perform iteration.
Gets the trackinfo for the given eventmodel.
Export the data to a hashmap.
Import resource.
Create a bufferedimage from a list of lines.
Get the bufferedimage from the given url.
Get a JSON result from a URL.
Reverses the keys in source map to target map.
Returns a set containing the elements of this set that are multiplication.
Starts the daemon.
Return this object to the pool.
Create an endedevent with the given identification source.
Gets the current trackinfo.
Update a playlist.
Shuffle the playlist.
Verifies whether the given capabilities can be played.
Export the data to a hashmap.
Escapes the given string for XML escaping.
Called when a challenge received from the server.
Serialize this object to a JSON stream.
Blocks until the queue is stopped.
Handles an event.
Join all queues.
Sets the value of a property.
Removes a property from the map.
Adds a principal to the list of principals.
Removes a principal from the list of principals.
Called when the root window is closing.
Userencountered the presence event.
Called when an event is fired.
Returns true if the given resourcemodel is permanent.
Sets the name of the group.
Returns true if this map contains the given key.
Returns true if this hashset contains the given value.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Removes all entries from the hash table.
Generates a hash code for the given key.
Returns true if key1 equals key2.
Checks if two values are equal.
Ensures that the capacity of the hash table is at least the given capacity.
Calculates the new capacity.
Create an entrysetiterator for this map.
Load a map from a binarystream.
Initialize the addon.
Notifies all connection listeners that a reconnection has failed.
Notifies all connectionlisteners that the attempt to reconnect in the given time.