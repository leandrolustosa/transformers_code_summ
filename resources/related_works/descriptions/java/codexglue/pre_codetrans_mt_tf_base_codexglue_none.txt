Implementation of fastpathemit.
Wrap an observable.
Returns an observable sequence that contains the elements of this sequence sorted according to the given comparator.
Replay a connectable observable using the supplied scheduler.
Create a new unicast processor with the given capacity.
Create a new unicast processor.
Attempt to convert the source to a scalar or xmap subscriber.
Subscriber function that invokes a scalarxmap function with the given value.
Resets all schedulers to their default values.
Create an instance from a completable source.
Create a maybe from a single source.
Retries at most the given number of times with a failure of at least the given predicate.
Throws a null pointer exception if the given object is null.
Returns the identity function.
Create a callable that just returns the given value.
Create a function that just returns the given value.
Created a function that casts the given class to the given type.
Create a new unicast subject.
Create a unicastsubject with the given capacity.
Create a unicast subject.
Create a new unicast subject.
Blocking geterror implementation.
Blocking geterror throwable.
Blocks until all items in the queue have been processed or the timeout elapses.
Drains the given queue using a max loop.
Request a prefetch for the given subscription.
Consumes and completes the next request.
Get the value of this property.
Gets the error.
Validates that the next disposable is not null and that the upstream is non - null and that
Atomic reference set once.
Validates that the next subscription is valid.
Atomically set next to upstream.
Cap a + b into a long
Returns the maximum of two values.
Atomically add n to the current value returning the new value.
Convert throwable to nullpointerexception.
Add an object to the list.
Shuts down all the pools.
Create a new scheduled executorservice.
Sets the subscription to the given one.
Repeatedly emits objects from the queue.
Wrap or throw runtimeexception.
Flattens a throwable into a list of throwables.
If the throwable is already an exception return it ; otherwise do nothing.
Clears the set.
Returns the number of elements in this set.
Attempt to subscribe to a scalarxmap.
Performs an xmap operation on an observable sequence.
Returns true if there is enough room to offer the subscriber.
Accepts the given observer.
Starts the queue.
Starts unbounded subscription.
Offers a new element to the queue. If the queue is empty the element will not be
Gets the value of the resource.
Completes the computation with the given value.
Emit an error to the downstream JDK.
Completes the stream.
Blocks until at least the given number of threads are available.
Requests n items from the upstream.
Add a publishdisposable to the list.
Remove a publishdisposable from the set.
Observe on a connectableflowable.
Parses the annotations from the given method.
Sets the delay in milliseconds.
Creates an error response.
calculates the delay based on the variancepercent
Creates the sample data.
Returns the httpmethod value for the given method.
search for a single user.
Encodes the given password using the configured salt and suffix.
Returns true if the given password matches the given encoded password.
Perform version checks.
Helper method to determine if checks should be disabled.
Returns the current version of the security core.
Permits to define an attribute exchange configurer.
Create a new oauth2clientconfigurer instance.
oauth2resourceserver configurer.
Compares the specified value against the specified distinguished name.
Retrieve an LDAP entry from the directory.
Search for multiple attribute values.
search for a single entry in the directory.
Build a new searchcontrols object.
Queries the database for the primary keys of the given acls and sids.
Builds a preauthenticatedgrantedauthoritieswebauthenticationdetails object.
Create an embedded server.
Create the servletapi filter.
Creates the jaasapifilter.
Whitelisted defaulttyping.
insert the springsecurityfilterchain into the servletcontext
Gets token for series.
Returns a list of grantedauthorities for the given attributes.
Creates a new cipher instance with the specified algorithm name.
Override afterpropertiesset to catch and rethrow the exception.
Authenticates the request if authentication is required.
Checks if the principal of the request changed.
Perform preauthenticated authentication.
Checks the contentlength of the response and triggers a responsecommitted if needed.
Maps a collection of grantedauthorities to a set of grantedauthorities.
Sets the loginprocessingurl of the matched element.
Update the default URLs for the authentication.
Update the default access settings.
Map the password if it is not a string.
Extract the remembermecookie from the request.
Base64 encodes the cookietokens.
Sets a cookie for the given tokens.
Resolves a methodparameter.
Extract the query string from the request.
Gets the service port.
Gets the principal.
Invalidates the http session.
Authenticate a usernamepasswordauthenticationtoken.
Sets the context environment properties.
Returns the full URL to redirect to when this request was made.
Render the end of the tag.
Initialize the userdetailsservice.
Get the cachinguserdetailsservice.
Adds the pkceparameters.
Determines if the request requires authentication.
Service ticket request boolean.
Proxy ticket request boolean.
Checks if the current request is authenticated.
Checks if proxy receptor is configured and matches the request.
Create the security expression root.
Gets the jwkset.
URL - encodes the given value using UTF - 8 URL encoding.
Gets the websphere groups based grantedauthorities.
Load userdetails by assertion.
getpreauthenticatedprincipal.
Concatenates the given arrays into a new array.
Returns a sub - array of the given byte array.
Returns all grantedauthorities for the given attributes.
Preprocess the given map and return a new map.
Gets the grantedauthoritycollection.
Adds a grantedauthoritycollection.
getpreauthenticatedprincipal.
Gets the shared object.
Build the https redirect url for the given request.
Invokes the method represented by the given joinpoint.
Checks if the given string starts with the given string.
Appends num_ to the roles array and returns the new array.
On login success.
Attempt to switch to another user.
Attempt to exit the current user.
Sets the exituserurl.
Display public index.
Spring security filter chain.
Decodes a JWT token.
Authorize using an access expression.
Authorizes the request using urlcheck.
Convert a JWT to a collection of grantedauthorities.
Generates a CSRF token for the given request.
Display the admin page for a given contact id
Display the add permission page for a contact.
Adds a permission to a contact.
Gets the role with the default prefix.
Create a userdetailsresourcefactorybean from a string
Returns the values of the given attribute.
Returns the first attribute value for the given name.
Encodes a charsequence to a byte array.
Decodes a byte array into a string.
Looks up the parameter names of the given object.
Handles adding a contact.
Finds all configattributes that are specified against the given target class.
addsecuremethod adds a secure method to the methodmap.
Get all configattributes.
Returns true if the mappedname matches the methodname.
Returns a configurer for any_request.
Handle bindexception.
get random contact from database
Clear authentication attributes from the session.
getfield gets a field from a class.
Create service url.
Create redirecturl.
Extract the prefix from the encpass string.
Called when the application commences.
Checks for duplicate filters in the stack.
Get the registered throwable types.
Extracts the cause of a throwable.
Registers an accessmanager bean with the parser context.
Convert a collection of grantedauthority to a set of strings.
Compares two byte arrays and determines if they are the same.
Sets the default failure url.
Sets the function used to resolve hidden inputs.
Builds the request URL.
Checks if the given string is an absolute URL.
Create a list of openidattributes for a given identifier.
return identifier ; }
Creates the entries in the database.
Create an objectidentity in the database.
updateobjectidentity inserts or updates the object identity of a mutableacl into the database.
savedrequest. save ( ) ; } }
Create a serverwebexchangematcher that matches against the given path patterns for the given httpmethod
Matches any server web exchange.
Create a new textencryptor with the specified password and salt.
Creates an instance of TextEncryptor
Create a new instance of the textencryptor class using the given password and salt.
Write the X - Frame - Options header to the response.
Determine the target URL for the given request and response.
Determine the target URL to use.
Sets the targeturlparameter.
Gets directory with immediate parent populated.
Builds a distinguishedname from the given username.
Creates the sharedobjects.
The main configurejaasusingloop loop.
Get the current date as a string.
Attempt to parse the given string as a date using the given dateformats.
Update the cache.
Build the request details and add it to the request.
Gets the securityname.
Get the list of groups for a given securityname.
Builds a DN for a group role.
Processes a list of sessioninformations and checks if any of them are allowed or not.
Copy details from one authenticationtoken to another.
Gets the filters that match the given request.
Queries a filterinvocation endpoint.
Get the required applicationcontext for the given pagecontext.
Returns the full DN of the given distinguishedname.
Sets the session attributes of the request.
Create a preemptive basic authentication scheme.
Adds a list of filters to the restassured.
Adds a filter to the list of filters.
Create a basic authentication scheme.
Create a new NTLM authentication scheme.
Create a new form authentication scheme.
Adds a proxy specification for the given URI.
Prints the responseoptions and responsebody to a stream.
Redirect to another URL.
Set the charset to use when encoding query parameters.
Set the default objectmappertype.
The JAXB objectmapperfactory to use.
Set the log configuration to use.
The session config to use.
Set the objectmapperconfig.
configures the mockmvcconfig with the given jsonconfig
The xml config to use.
The encoder configuration to use.
header config.
Set the async config.
Create a new mockmvcconfig instance.
Sets the multipart config.
Set the mockmvcparamconfig.
Set the matcher configuration to use.
Returns a certificateauthsettings that allows all hostnames to be used.
Declare the given namespaces.
Declares a new namespace under the given prefix.
Makes a request to the server using the default uri.
Sets the request headers.
Set the default proxy for this client
Sets the control name.
Adds a header to the request.
Sets the credentials for the client to be basic.
Set NTLM credentials.
Creates a new headers object with the given header and additional headers.
Resets the state of the MockMvcFactory.
Sets a header to the resturedresponse.
Builds the response.
Matches this cookie s value with the specified matcher.
Matches a string with a comment property.
Matches this cookie s expiration date against the given matcher.
Matches this cookie s domain with the given matcher.
Matches this cookie s path with the given matcher.
Matches this pattern against the secured cookie.
Matches this pattern if and only if the given matcher evaluates to true.
Matches this matcher against the version of the current string.
Matches this cookie if its maxage matches the given matcher.
Expect the response header to match the given matcher.
Expect a header to be present on the response.
Expect a cookie with the provided name and value.
Returns a copy of this specification with the specified host.
The return type of a number.
Set the default parser type.
Set printstream to use for the default stream.
enableloggingofrequestandresponseifvalidationfails
Create a new httprequest instance.
Sets the default boundary.
Add an attribute to the spec.
Add a header to the request.
Adds a multipart control to the request.
Add additional resulthandlers to the request.
Set httpclientparam.
Add map of httpclientparams.
Set httpclientfactory.
HTTPmultipartMode.
Perform a get at the given path.
Gets the int.
; }
) ;
Returns the float value of the property path.
Get a double value from the object path.
path )
Get a list of objects from the map.
Get a map by the path.
Gets object by its path.
Sets the body of the request.
Add a cookie to the request
Add a parameter to the request.
Add a parameter to the request.
Specifies the update strategy to use for parameter updates.
creates a filter which logs responses to printstreams that match the given matcher
Creates a new set of cookies with the given cookies added to it.
Cleans up empty sets for the given keys and sources.
Indexes all explicit bindings.
getbindingorthrow.
Convert a string binding to a string binding.
Cleanup all internal dependencies of the given binding.
Remove a failed jitbinding.
Returns the internal dependencies of the given binding.
Create an uninitialized binding.
Get all parameters from parameterinjectors.
Binds the given injector to its provider instance.
Binds the logger to the injector.
Checks if the given member has misplaced bindings.
Returns true if method a overrides method b.
Initializes the delegate member.
The typeliteral of the provider.
Resolve all the types in the given array.
Canonicalize the key of a typeliteral.
Prepare the builtin converters for use.
Canonicalizes the classloader.
Returns true if the given classloader has the same version of cglib.
Returns true if the given member is publicly callable.
Fixes the annotations of the given key.
Requests an initializable injection.
Validates all pending injectables.
Creates a new instance of the class.
Create a scope instance.
Convert a scoping to an injectable scoping.
Returns the normalized path.
Generates an annotation instance for the given annotation type.
Checks if is retained at runtime.
Find a scope annotation among an array of annotations.
Returns the binding key for the given type member and annotation.
Returns the name of the given key.
Initializes the delegate.
Add a directtype binding to the given binder.
Get a constructorinjector from the cache.
Checks whether the given class has a scope annotation.
Factory method for creating a new realmapbinder.
Returns the key for a new value.
Provisions a new instance.
Copies the source object and replaces it with the new object.
Returns the corresponding module for the given module.
Gets the assistedmethods.
Checks if is typenotspecified.
Returns true if the given constructor has matching parameters.
Returns the dependencies of the given implementation.
Removes all assisted dependencies from a set of dependencies.
Optimized assistedinject.
Get binding from new injector.
Intercepts calls to the wrapped object.
Provide a missing implementation with a hint.
newrealsetbinder.
Gets the key for a new item.
Find the next filter matching the request.
Checks if the constructor has atinject annotation.
Gets the internal constructor.
Returns the internal dependencies of this factory.
Factory method for module.
Get the annotation for the given method.
Returns the line number of the given member.
Initializes the injector.
Checks if the given object is an instance of the expected type for the given key. If not
)
Create an instance of the given type and notify all members of that type.
Returns an immutable list of singlememberinjector instances for the given injection points.
Returns a key for the given type.
Returns a strategy for the given annotation.
Strategy for given annotation type.
Prunes stacktrace elements that are not in aop_internal_classes
Get the binding source.
Creates a new message with the specified message format and arguments.
Creates a new message.
Creates a new message.
Convert the given object to an XML element.
Checks if the class should be skipped.
Returns the stacktrace element corresponding to the given module class names.
Main method to run the manager.
Pushes a dependency onto the state machine.
Pushes the given object as a state of the given key.
Returns a new initializable wrapping the given instance.
Provisions an instance of the given type.
Process connection event.
Adds a connectioneventprocessor to the list for the given connectioneventtype.
Gets the result of a future task.
If t is a runtimeexception or an error it will be laundered. Otherwise it will
Register a processor for a commandcode.
Registers the default processor.
Gets the processor for the given command code.
Attempt to get the url from the cache.
Decode a protocolcode from the given bytebuf.
Get all connections from all pools.
Scan all connection pools.
return null ; }
Method to create connection and healifneed.
Remove a task from the connection pool.
Handles healifneed request.
Creates a connection.
Close connection.
Invoked when connection is closed.
Closes the connection.
Sets an attribute if absent.
Registers a userprocessor.
Registers a multiinterestuserprocessor.
Dispatch request to userprocessor.
Deserialize an rpcrequestcommand.
Preprocess the remotingcontext with the given rpcrequestcommand
Prints timeout information to the logger.
Debug log.
Process a message.
Sends a command to the remote.
Convert a bitset to a byte.
Convert an int value to a bitset.
addreconnecttask.
return command ; }
Filter a list of connections based on their service status.
Close fresh select connections.
Returns the boolean value for the given key. If the key does not exist or the value for
Log a message with INFO level.
isrequesttimeout boolean.
Get a userprocessor by class name.
Returns a random connection from the given list.
Get a value from the context.
Returns the value of the specified property.
Resolves a responsecommand to an object.
Converts a responsecommand to a response object.
Converts a responsecommand to a throwable.
Detailed error message.
Create an rpcserverexception from throwable and errmsg.
Prints connection trace information to the specified logger.
Create a new eventloopgroup with the given number of threads.
Parse the remote address of a channel.
Parse the local address of a channel.
Parse the remote IP address of a channel.
Parse the remote hostname of a channel.
Returns the local IP address of the given channel.
Returns the remote port of the given channel or - num_ if the channel is null.
Parse the local port from the given channel.
Parse a socket address to the host IP.
Adds a connection to the pool.
Remove a connection from the pool and try to close it.
Registers a customserializer for the given class.
Gets the customserializer.
Registers a customserializer for a commandcode.
Gets the customserializer for a commandcode.
Checks if the remote address is connected.
Initialize the watermark for the write buffer.
Creates a new instance of the appropriate subclass of framedataimpl1 for the given opcode.
batch writes to socket. outqueue
Sets the code.
validateutf8 validate the payload using UTF - 8
Update the payload.
Attempt to match the requested protocol with one of the known protocols.
Checks if the length is within the limits for a single frame. If not a limitexce
Checks the size of a singleframe packet to see if it is in a valid range. If
Generate final key.
processframecontinuous and nonfin.
Process a binary frame.
Log a runtimeexception.
Process a text frame.
Process frame isfin.
Processes a frame that is not fin.
Processes a closing frame.
Checks to see if the current size of the buffer is too large. If so clears the
getpayloadfrombytebufferlist.
Returns the total size of all the bytebuffers in the list.
return null ; }
return null ; }
Decodes the given socket buffer.
closeconnectionduetowronghandshake.
close connection due to internal server error.
Generate httpresponseduetoerror bytebuffer.
Sends text to the client.
Resets the connection to its initial state.
Connects to the database.
Returns the port of the connection.
Sends the initial handshake to the server.
Sets the connection lose timeout.
Stops the connection lose timer.
Starts the connection lose timer.
Restart the connection lose timer.
Sends pongs or pings to the websocket.
Cancels the connection lose timer.
Server handshake received as server side.
pong frame handler.
Stops the thread.
Returns the port of this socket.
read more data from the queue.
Accept a new connection from the server.
Reads data from the socket channel.
Performs batch write operation.
Setup the selector and server thread.
Makes sure that the selector thread isn t already running.
Shutdown the server.
Gets the socket.
Broadcast a byte array to all connected clients.
Broadcast text to all connected clients.
Broadcast data to multiple clients.
Fill the draft frames map.
Transfers a source buffer to a destination buffer.
Starts the JPA API.
Get the entity manager for the given name.
Executes the given block in a transactional context.
Convert arguments to scalabuffer.
Wrap args to list if needed.
Gets the message for the given key.
Gets a message for a list of keys.
Check if a message is defined at a specific language
Select the preferred messages for the given languages.
Return preferred messages for the given request.
Sets the language for the given result.
Binds the given modules to this builder.
Bind a set of modules to the container.
Add a set of bindings to the container.
Creates a new builder that overrides the specified modules.
Provide a set of overrides for the given modules.
Add a set of bindings to the Guice context.
Disable the given modules.
Submits a request for execution and returns a completionstage of the result.
Gets the existing file at the given path.
Binds the binding to the given scope.
Creates a new tuple of the given elements.
Static factory method for creating a 5 - element HList.
Convert an executioncontext to an executor.
Create a new defaultjpaconfig instance.
Create a defaultjpaconfig with the given persistence units.
Create a new JPAConfig from the given map.
Create a flow of string.
Create a flow from a json node.
add constraintvalidator mapped constraintvalidator factory.
Creates a new instance of the constraintvalidator.
Gets the matching accessible method.
Called when a client error occurs.
Handles a badrequest request.
Handles a forbidden request.
Handles not found route.
Handles a server error.
Log server error.
Converts a throwable to a usefulexception.
Handles an internal server error.
Handles a server error.
Builds a dochandler from a list of resources.
Builds a documentationhandler from a directory.
Builds a dochandler from a directory and jar file.
Builds a documentationhandler from a directory and jarfile.
Builds a documentationhandler from a jarfile.
Return a completion stage for this stream after applying the given materializer to the data.
Create a new httpentity from content.
Create a new instance from the given string.
Create a new chunked httpentity from the given source data.
Creates an HTTP status code with given status code and content.
send status with jsonnode content
Create a new result with the given status code and content.
Sends status code and content to the server.
Create a result with the given status code and the given file content.
Find user by id.
Return a new lang that is preferred among the given candidates.
Get a unique view of this call.
Create a new call with the specified fragment.
Returns the absolute URL for the given request.
Returns the websocket URL for the given request.
construct a connection function from a connectionrunnable
Returns an abstractfunction1 that invokes the supplied connectioncallable catching and rethrowing any SQLException
Create a new server instance for the given mode http port and block.
Converts an object to a jsonnode.
Converts a jsonnode to an object of a given class.
Parses the given string as a json node.
parses a jsonnode from the given inputstream
Returns targetpath relative to startpath.
Returns the canonical path of the given URL.
Returns the displayable constraints for the given set of constraints.
Convert a constraint descriptor to a tuple of displayable constraint attributes.
Returns a completionstage that completes after a timeout has elapsed.
Parses a cron expression.
Returns the next cron - interval of the given date.
Create a new ahcwsclient instance.
Create a new guiceapplicationbuilder for the given context.
Renders the todo page for the given request.
Stores a key - value pair in the current session.
Flash a message with the given key and value.
Returns the key of the binding that is qualified with the given instance.
Returns a key that is qualified with the given annotation.
Binds the binding to the given implementation.
Binds this binding to the given provider.
Binds this binding to the given instance using the given supplier.
Binds this binding to the given key.
Binds the wrapped type to the given provider.
Returns a list of available langs for the given application.
Provide the preferred language for the given list of languages.
Creates a new evolutionsreader from a map of evolution names to evolutions.
Create a reader for the given evolutions.
Cleanup all evolutions.
Add a custom configuration loader to the builder.
Add a custom module loader to the builder.
Creates a new application builder with the given set of modules.
Eagerly load Guice applications from the given modules.
Load the guice application with the given modules.
Load the application builder with the given bindings.
Factory method for creating a new guiceapplicationbuilder.
DER - encodes a cookie to a string.
Returns the first entitymanager in the stack.
Returns the current entity manager stack.
Push or pop an entitymanager from the stack.
Breadth first first can finish merge.
Split a flow using the given splitter and merge strategy.
Convert error arguments.
Fills the form with the given value.
Gets the global errors.
Return errors as json node.
Returns the value of the property with the given key.
Fill the form with the given value.
Parses the given text and returns an instance of the given class.
Parses the given text into an object of the given field.
Prints the string representation of the given object.
Prints a field and its type to a string.
Prints the string representation of the given type descriptor.
registeroptional.
Registers a new formatter for the given field type.
Encodes the given cookie into a string.
Return a list of nodes that match the given path expression.
Convert a java. util. list to a scala collection.
Convert an array to a scala collection.
Create a scala. collection. immutable. seq from an array of values.
creates a mappedwebsocketacceptor that accepts JSON messages.
AkkaStreams. acceptorresult.
return cost ; }
Gets the total transformation cost.
getobjecttransformationcost.
Get message at specified key
Get message at list of keys
Creates a new database from the given parameters.
Creates a parallelsorter from the given arrays.
Sorts the elements in the range [ lo hi ) using the given comparator.
Mergesort.
Invokes the method.
Load an argument from the local variable.
Emit a field instruction.
Pushes a constant of the given type to the stack or sets it to null.
Unbox or zero.
Processes an array.
Compares two null values.
Resolves all bridged classes.
filter constructors of a class.
Sets the superclass of the object.
Generates the getfield method.
Adds the signature and exception types for the given method to the set.
Returns the cardinality of this BitArray.
Sets the namingpolicy.
Find methods.
Resolves a string relative to a base path.
Reads a string from the given path.
Sets the host of the request.
Create a new httprequest with the given method and destination.
Create a new connect request.
HTTP GET request.
HTTP POST request
HTTP PUT request.
HTTP PATCH request.
HTTP DELETE request
HTTP HEAD request.
HTTP TRACE request.
HTTP OPTIONS request.
Set the request path.
Adds the given cookies to the request.
Add a query parameter.
Sets the query parameter values from the given map.
Sets the query string of this request.
Returns the query string.
Return the host URL.
Set HTTP Basic Authentication header.
Set the host header.
Buffer the response.
removes a range of handlers from the first handler.
Returns the length of the exception table.
Collects all action interceptors.
Collects all filters.
Collect all actionresults.
Collects all action runtimes.
Set the value of a simpleproperty.
Gets the named property of the given bean.
Extract thisreference from a property name.
Gets the writer.
Set a reference to an object.
Gets the objectreference.
Lookup an object reference.
getentitydescriptor.
find table descriptor by columnref.
Returns the alias of the tableref.
registers a tablereference.
lookuptableref.
Registers a hint.
return true ; }
Injects all attributes of the servletrequest into the target.
Injects request parameters into the target.
Inject uploaded files.
Convert a property name to the column name.
Convert a column name to a property name.
Given a column name return the corresponding column name.
Store the value at the given index in the given preparedstatement.
Prepare t for getvalue.
Returns a set containing all the elements in this set.
Resolves the wrapper for the given wrapper class.
Create a new wrapper of the given class.
Convert Unix path separators to Unix path separators.
do getpath.
Splits a filename into its components.
Returns targetpath relative to basepath.
Registers a madvoccomponent.
Registers an actionconfig consumer.
Starts the webapp.
Registers all the madvoc components.
Exclude the given jars from the scan.
Include the given jars.
Included entries in the classscanner.
Exclude specified entries from the scan.
Scans a JAR file for classes.
Scan the classpath for classes.
Returns the bytecodesignature of the given class.
Scans a set of files.
Scan all files.
create a new jtxtransaction.
Get or create a scope of the given class.
Get an orinitscope of the given type.
Consume a scope of the given type.
Creates a CSRF token and adds it to the session.
Assures that the size of the given set is at least as large as the maximum
Checks if a given value is a valid CSRF token in the session.
Create a copy from the given object.
Copies the state of this object.
Visits a property of the mapped object.
Initialize the entity reference.
Resolves a scope.
Registers a new bean definition.
Register a bean.
Method removebean.
Resolve the beannames for the given type.
Register a new ctorinjectionpoint.
Registers a new propertyinjectionpoint.
Registers a new setinjectionpoint.
Register a methodinjectionpoint.
Register a set of initmethods for a given bean.
Register a set of destroymethods for a bean.
Register a provider.
Introspects a petiteprovider and registers it.
Iterate over all beans of a given type.
Defines a map of parameters.
Intercept an action request.
Returns the Java version number of the current JVM.
Pushes an int on to the stack.
Checks the validity of an argument index.
Returns the name of the advice field with the specified index.
Returns the advice method name with the specified index.
loadspecialmethodarguments.
loadstaticmethodarguments loads all method arguments of a static method.
loadvirtualmethodarguments loads all method arguments of the given method.
load method argument of given method.
Stores a method argument at the given index.
Prepares the return value of a method.
Create method signatures key string.
Generates the instructions to create a new array.
storeintoarray.
Extract encoding from content type.
Checks if the given flags object has at least the given number of flags.
Gets the bearer token from the request.
Require authentication.
Prepares response for a file download.
Sets the contenttype and contentlength of the response.
Gets all cookies with the given name.
Read request body from reader.
Read request body from stream.
Store the contextpath of the given pagecontext into the given contextpathvariablename.
Stores the current context path in the servletcontext.
Checks if is getparameter.
Prepare parameters.
Copy parameters from servletrequest to request attributes.
Invokes the body of a jspfragment.
Renders the body of a jspfragment.
Renders the body of a jspfragment to a string.
Invoke all initmethods of the bean with the given invocationstrategy.
Call all destroymethods of the bean.
Allocate a new beaninstance.
Inject parameters.
Rewrite actionpath.
Add a new header with the given value.
Put a new value into the map.
Add a baseproperty.
Add a profileproperty.
Get a profileproperty.
Resolve macros.
Extract map.
Cyclically extract a word of key material
hashpw hash a password with a salt.
Check that a plaintext password matches a previously hashed one
Reads all remaining bytes from this stream and writes them to the given outputstream.
Copies up to maxbytes bytes from the input stream to the output stream.
Parses an action definition into an actionruntime.
Resolve action config.
Detect and register alias.
Read the action interceptors for the given actionclassormethod.
Read action filters.
Read package actionpath.
Read method actionpath.
Parse method alias.
Create actionruntime.
If lastmodified is greater than or equal to the request s lastmodified then set the response status
return targetclass ;
injecttargetintoproxy.
Visits an annotation of the field.
Returns the real name of the given jsonname.
Given a realname return the corresponding jsonname.
Lookup the typedata for the given class.
Lookup the typedata for the given class.
return null ; }
Resolve the given name for the given type.
Resolve the real name of a type.
Gets the content of the file.
Copy bootstrap methods.
Sets the majorversion and classname.
Puts the constant pool into the given bytevector.
Put bootstrapmethods.
Add a constant field reference.
Adds a method ref to the constant pool of this symbol.
Adds a member reference to the constant pool of this class.
Adds a new CONSTANT_Integer_info to the constant pool of this symbol table.
Adds a constant to the constant pool of this symbol table. Does nothing if the constant pool already
Adds a new CONSTANT_Integer_or_float to the constant pool of this symbol table
Adds a constant long or double to the constant pool of this symbol table.
Adds a new CONSTANT_Double_info or CONSTANT_Float_info to the constant
Adds a new constant.
Add a constant name and type to the constant pool at the given index.
Add a UTF8 constant.
Adds a new CONSTANT_UTF8_info to the constant pool of this symbol table.
Adds a new CONSTANT_MethodHandleEntry.
Add constant dynamic reference.
Add constant invokedynamic reference.
Adds a constant reference to the constant pool of this symbol table. Does nothing if the constant pool
Adds a reference to a constant dynamic or invokedynamic method.
Returns the constant pool entry for the given tag and value.
Adds a reference to the constant pool of this symbol table.
Add bootstrapmethod.
add mergedtype.
Hashes a string.
Removes all of the elements from this multimap.
Get all values for the given name.
Returns an iterator over the elements in this queue. The elements are returned in no particular order.
Returns all the entries in this map.
Grows the internal buffer if necessary.
Appends a character sequence to the buffer.
Visit an annotation of the method.
implements the visitor to create the firstchaindelegate and proxymethods
firstchaindelegate_start
Create first chaindelegate_continue.
Parse a string into a path object.
Appends a charsequence to the current path.
Add listeners and filters to the servlet context.
Executes the operation.
Returns an array of all field descriptors in the order of their names.
Create a beandefinition for registration.
Converts a jtxtransactionmode to a dbtransactionmode.
Read property.
Copies all of the mappings from the specified map to this one.
Appends the given buffer to this one if it is empty.
Writes the contents of this list to the given writer.
Writes the contents of this list to the specified outputstream.
Writes the content of this response to the given outputstream.
Gets the string.
Returns the integer value for the given key.
Get a long value from the map.
Get a double value from the map.
Get a float value from the map.
Get the value for the given key.
Add a string value to the object.
Use a folder.
Processes messages from the folder.
Sets the flags for the given email.
Closes the given folder if opened.
lookupnamedparameter.
Performs the actual validation.
Adds a new violation to the validator.
Set the mimetype.
Set download filename.
Sets the target.
Sets the target.
Set the target class.
Processes the target class.
Create the target class.
Create a new instance of this class.
Dump the contents of a class in the debug folder.
Sets the from address of the email.
Appends a recipient s address.
Sets the recipient s email address.
Set replyto recipient addresses.
Set the cc recipient addresses.
Creates a text message with the specified text and encoding.
Sends an HTML message.
Adds a header to the constructed document.
Returns the value of the property with the given name.
Get boolean.
Returns the integer value of the given name or the given defaultvalue if the name does not exist
Returns the long value of the given option or the given default value.
Get the resolved parameters for this method.
Serialize keyvalue.
Lookup the actionpath alias for the given alias.
Resolve alias.
return value ; }
Resolve result path string.
Returns the last index of the specified string after the last occurrence of the specified string.
Returns the last index of the dot after the last dot of the specified string.
Returns the index of the first occurrence of the dot after the specified string.
Resolves the schema name of the given type.
Resolves the column descriptors of a dbentity.
Initialize the hash with the given key and tweak.
Merges x with y at the specified index.
Computes the determinant.
scheduling of keys.
Initialize the hash with the given keymessage using the given number of tweaks.
Encrypt block.
Convert a byte array to a long array.
Remove any bounding.
Returns the full path of this link.
Compress a file using zlib.
Gzips a file.
Ungzips the given file.
List all entries in a zip file.
Unzip a file to a directory.
Adds a file to a ZIP archive.
Adds content to a ZIP output stream.
Returns the field descriptor for the given name.
Returns the property descriptor for the given name.
Sets the bundlename of the request.
Sets the locale attribute in the session.
Gets the session locale.
Filters the parameters for the given beanname.
Add a list of profiles to the propsentry
getlonglittleendian long.
Reads data from an inputstream and returns it as a byte array.
Read a label.
Get the bytecode offset of a type annotation.
Read a bootstrapmethods attribute.
Inspect the constructors of the class.
Returns a ctordescriptor matching the specified arguments.
Gets the request map.
Create the request map and set it in the servletrequest.
Convert array to array.
Initialized the filter.
Searches for the file with the given uri.
Searches for the file at the given URL.
Include the given patterns.
Exclude the given patterns from the findfile.
Add a path to the path list.
Finds all the files in the current directory.
Initialize the list of todofiles and todofolders.
Returns an iterator over the files in this list.
Resolve bean wiringmode.
Resolves the name of the bean.
return outwriter ; }
Returns the output stream for this request.
Returns the class name of this type.
Get constructor descriptor string.
Returns the method descriptor of the given return type and argument types.
Returns the method descriptor of a method.
Appends a descriptor to the given stringbuilder.
Returns the number of elements in this set.
Returns the number of arguments and returnsizes of the given method descriptor.
Set rollback only throwable.
Commits or rolls back the transaction.
Rollbacks all the resources.
Requests a resource of the given type for a transaction.
Pops a name off the stack.
Writes a string value.
Writes a Unicode character to the stream.
Write charsequence.
Sets the parsingerrorloglevelname.
Starts a new region with the given parameters.
Checks if this string is contained in the include string.
Registers a pseudofunction.
Lookup a pseudo function by name.
Visit a WD. This is the primary focus of the visitation. From here interesting information
Visit an annotation.
Generate the code to call the static initializers if they have been provided.
Generate a proxy constructor.
Processes all supermethods of this class.
Returns the index of the last occurrence of the specified range.
Appends the given string to the current one.
Replaces all asm instructions in the given classfile with the corresponding classfile.
Get the prototypes of all the attributes of this class.
Register a type.
Lookup a type for a given class.
lookupsqltype.
Create a SOCKS4 proxy info.
Create a socks5 proxy info.
Create a new http proxy info.
Returns the total number of transactions in the current thread.
Returns the total number of transactions with a given status in the thread.
Adds a transaction to the stack.
Continues a transaction from one jtxtransaction to another.
Lookup the resource manager.
Create a proxy object for the given target.
Append a method name to the path.
Pads the given string to the left with spaces to make the given size
Convert a string to camel case.
Format a string as a paragraph of text.
Converts a line of text to a line of text with tabs replaced by spaces.
Escapes a string so that it can be used as a java string literal.
Unescape java. lang. String
Gets the bean of the given type.
Get a bean by name.
Init beandefinition.
Invoke provider.
Register a new bean with the given name.
Sets a bean property.
Gets the beanproperty.
Shuts down the cache.
Returns an array of methodparameter objects for the given method or constructor.
Render the body content of the page.
Resolves macros in the value.
Ends the current node.
Create an element node.
Removes the last child node of the given parent node if it is a text node.
Returns the query string.
Gets the action class name.
Calculates the to.
Replaces all occurrences of a substring in a string.
Replaces all occurrences of sub in s with with with.
Replaces all occurrences of sub in s with with with.
Replaces the first substring of a string with another string.
Replaces the first occurrence of a character with another character.
Replaces the last occurance of sub in s with with with.
Replaces the last occurrence of a character with another character.
Returns a new string that contains all occurrences of sub in s.
Removes the given character from the given string.
Returns true if all of the strings are empty.
Checks if all strings are not blank.
Converts an array value to an array of strings.
Change first charactercase.
Returns a new string with all the title characters converted to uppercase and lower case.
Compresses all occurrences of a character in a string.
Returns true if src starts with subs ignoring case.
Tests if the string ends with the given character.
Count the number of occurrences of sub in source ignoring case.
Compares two string arrays ignoring case.
Returns the index of the first whitespace character in the given string between the given indices.
Strip leading char.
Remove the trailing char if it is present.
Returns a new string with the specified character removed.
Strips all occurrences of c from string.
Strips all occurrences of c from string.
Crops the given strings.
Returns a new string with all leading and trailing whitespaces removed.
Returns a new string with all leading and trailing whitespaces removed.
Returns the index of the first occurrence of the specified leftboundary and rightboundary at or after the
Join a collection of strings with a separator.
Join an array of objects with a separator.
Convert charset.
Checks if the character at the given index equals the given char.
Surround a string with a prefix and suffix.
Prefix the given string with the given prefix if not already there.
Add a suffix to a string if it does not already end with the suffix.
Cuts the string at the first index of substring.
Cuts the string from the first index of substring.
Cuts the prefix from the string.
Cuts the suffix from the string.
Cuts a string around a given prefix and suffix.
Returns a new string by inserting the given string at the given offset.
Repeat a string a given number of times.
Reverses the order of characters in the given string.
Returns the common prefix of two strings.
Find the common prefix of the given strings.
Shorten a string by adding a suffix.
Convert the given string to uppercase using the given locale.
Remove any surrounding quotes from the given string.
Convert a byte array to a string of hex digits.
Gets the bytes from a string.
Detect quote character.
Visit an enum value of the annotation.
Visits a named annotation.
Registers a new type.
registerentity method.
remove entity.
Create a new entity instance of the given type.
Sets the target interface.
Injects the target object into the wrapper object.
Lookup all the properties that have been annotated with the given type.
detect database and configure dboom.
Closes this output stream and releases any system resources associated with it.
Compresses and writes a single byte.
Invalidates the session.
Gets the encoded name.
Returns this byte array as a byte array.
Writes the content of this mail to a file.
Writes this mail to the specified outputstream.
Appends an argument of the given type to the given descriptor.
Prepend an argument of the given type to the given descriptor.
Change the return type of a method.
Augments the superclass text method to strip whitespace from the beginning and end of the text if
Register a converter for a given type.
Lookup a converter by type.
Parses the given CSS query and returns a list of nodes.
Select a collection of selectors.
Processes the selectors and adds them to the results.
Select the first node that matches the given query.
Performs a depth - first search using a linked list of nodes.
Recursive walk.
Select and add.
Unpacks the compressed character translation table.
Refills the input buffer.
Executes a query that returns a page of data.
Remove select.
remove all occurrences of ignorecase from str_
Remove last order by.
Decodes the specified string.
Detects the name of the first entity in the input starting at index ndx.
Builds the ORDER BY part of the SQL statement.
Builds the SQL for a page of results.
Resolves all property descriptors of the given type.
find by columnname ignore case.
find by propertyname.
return null if not found
return null if not found
Gets the id value.
Sets the id value of the given object.
Gets the keyvalue.
Append a string to the stringband.
Sets the index of this list to the given index.
Increases the capacity of the array.
Calculates the length of this vector.
Create mixing message.
Create scoped proxy bean.
Initializes the internal data structures.
return false ; }
usewatchfile use this to use a file as a watchfile.
Start the watch task.
Called when a file is changed.
Adds an enumeration to this set.
computefieldinfosize.
Output fieldinfo opcode.
Factory method to create a new target instance.
Writes the given property value to the underlying output stream.
Parses the content of a page and decorates it with the specified decoracontent.
Parses the page and extracts decoratags.
writedecoratedpage.
Writes a region of decoratags.
Starts the server.
Runs a process and returns its result.
Create the imapsslstore.
Create a new gzip response stream.
Initialize the template.
Append column name.
Add a rule to the grammar.
Apply the rule.
Process includes.
Processes the excludes.
Gets the pseudo class name.
Adds all elements from the given collection to this set.
Finds the first insertion point of the given element.
Bind an annotation configuration class.
Register a new actionconfiguration.
Lookup an action configuration.
Execute a consumer on an actionconfig of the given type.
Sets the system mail properties.
Validates that the given value is contained within the property value.
Find the last table in the document.
This method fixes the broken elements.
Register sessionbeans.
Gets the session map.
Initialize with the given parameters.
Adds a new adviceinitmethod.
Ends the action.
Add a new key value pair.
Recursive method for extracting profiles.
Add a value to the map if the operator is not equal to the one given.
Convert a type descriptor to a class name.
Convert a type reference to its name.
Convert a type to a type reference string.
Add all the given consumers to the list.
Create a new collection of the given length.
Convert the given value to a collection of single element.
Convert the given value to a collection.
Convert a collection to a collection.
Adds a linenumber to the current linenumber.
Makes the given visitor visit this label.
Puts the given bytevector at the given offset in the given bytevector.
Adds a forward reference to the dynamic table.
Marks this basic block as belonging to the given subroutine.
Compares two numbers.
Returns the accent of the given character.
Puts a byte into this byte vector. The byte vector is automatically enlarged if necessary.
Puts two bytes into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a short into this byte vector.
Puts a byte and a short into this byte vector. The byte vector is automatically enlarged
Puts two bytes into this byte vector. The byte vector is automatically enlarged if necessary.
Puts an int into this byte vector. The byte vector is automatically enlarged if necessary.
Puts a byte and two short values into this byte vector. The byte vector is automatically enlarge
Puts a long into this byte vector.
Put a byte array into the buffer at the given offset.
Enlarge this buffer by the given size.
Authenticate user via http session.
Authenticate user via token.
Authenticate user via basic authentication.
Finds the default message for the given key.
Gets the bundle.
Gets the element at the given index.
Sets the id value of an entity.
Persist an entity to the database.
Update the given entity.
Update a property of an entity
Update a property of an entity
find by id e.
find one by property with value
Find one entity by criteria.
Delete by id.
Delete by id.
Count the number of instances of the given entitytype.
Increase a property of an object by a given amount.
Decrease the value of a property of an object
Find related entities.
List all.
Clears the attribute list.
Returns a set of entries for this map. The set is backed by this map so changes to
Puts an object into the cache.
Removes the value associated with the given key.
Get the current stacktrace.
Gets the stacktrace from a throwable.
Get a chain of stacktrace elements from a throwable.
Gets the exception chain.
Converts an exception stacktrace to a string.
Converts an exception chain to a string.
Builds a message from the given message and cause.
Unwraps a throwable.
registerasconsumer.
Accepts a registered madvoccomponentclass.
Get the system class loader.
Gets the resource as a stream.
Gets the resource as a stream.
getclassasstream.
Returns the specified class as an input stream.
Add a new value to the list of children.
Find or create child.
Parse the request.
Convert the given value to the given destination type and component type.
Invokes a setter.
Sets the value of the array element at the specified index.
Create a new beanproperty instance.
Extract the raw type of the property.
Stop authentication.
Set the authentication token in the http session.
Convert a localdate to a date.
Convert a localdatetime to a Gregorian calendar.
Define a proxy for the given class.
Add a check.
Resolve the validation context for the given class.
Add all annotation checks for the given class.
Collect all property annotation checks.
Collect all annotation checks.
Copy default check properties from an annotation to a check.
Encodes the given URI component in the given encoding.
Encodes the given string using the given encoding.
Return the given URI scheme with the given encoding.
Return the host component of the URI.
Encodes the given URI port with the given encoding.
Encodes the given path with the given encoding.
Return the encoded query component of the URI.
Encode a queryparam with the given encoding.
Encodes a URI fragment with the given encoding.
Inspect the properties of this class.
Returns an array of all property descriptors in the order of their names.
Returns the cookies in this response.
Unzip the response body.
Closes the connection to the server.
Accepts the given referencescope.
Encrypts the given content.
Decrypt an encrypted content.
Map to bean.
Convert a list of objects to a bean of a given type.
Set the value of a boolean property.
Generate map.
compare to another object.
Sets the default header.
Sent by the client to the server.
Send a request to the server.
Add the defaultheaders to the request.
Reads the cookies from the httpresponse and stores them in the cookies map.
Add the cookies to the request.
Send an e - mail.
Sets the subject.
Sets the sentdate of the message.
Sets the headers of the given message.
Sets the people.
Sets the recipients.
add body data.
Sets the content of the part.
Create attachment body part.
Get the content type from the data header.
Adds the given resultset to the resultsets.
closes all results and closes all queryresultsets.
closequery closes the query and releases any resources
Closes this query.
Sets the fetch size for this query.
Sets the maximum number of rows that can be returned in a query.
Executes an UPDATE statement.
Counts the number of rows in the table.
getgeneratedcolumns.
Get the query string.
Returns a proxy of the given target object that implements the given aspect class.
Create a collection from an iterator.
Returns a stream of the elements returned by the given iterator.
Compares two objects according to their comparators.
Set the default wiringmode.
Prints a log message.
Returns the caller class of the current exception.
Shorten the classname by removing the last dot.
Exclude specified types from serialization.
Serializes the given object to the appendable.
Serializes the given object to a string.
Clone the given object via serialization.
Writes an object to a file.
Read an object from a file.
Converts an object to a byte array.
Read an object from a byte array.
Resolves the table names for the given types.
Create the table names for the given types.
readcolumnvalue.
Cache resultset entities.
Resolve all providers for the given class and name.
Given a tablename return the corresponding tablename.
Check if the connection is valid.
Render a view.
Attempt to locate the target.
Get the writer to write to.
Get the response s outputstream.
Write content to the response.
Sets the content type.
Prints the string to the output stream.
Login using basic authentication and request parameters.
Convert token to json object.
Login using basic authentication.
Converts a url to a containerfile.
Creates a directory and all required parent directories.
Creates a directory if it does not already exist.
Copy file.
Copies a directory.
Moves a file from one place to another.
Moves a directory.
Deletes a directory and all its contents.
Read a UTF - 8 encoded string from a file.
Read a file into a char array.
Writes an array of characters to a file.
Writes a string to a file.
Appends a string to a file
Read a number of bytes from a file.
Writes an array of bytes to a file.
Appends bytes to the file.
Copies the source file to the destination file.
Deletes a file or directory.
Create a temporary directory.
Checks if file is binary.
Checks that srcdir is a directory and that destdir is a copy.
Checks that srcfile and destfile are not the same.
Prints the usage of the given command.
Resolve an action method.
Register an action with the runtime.
Register a path alias.
Advances to the next value.
Create a new chararraysequence from the given char array.
Executes the method.
Test if input string matches uppercase target.
Create a charsequence.
Returns all urls for the given class.
Set bcc recipients.
Registers a new serializer for the given type.
Lookup the serializer for the given class.
Processes the request stream.
Returns the value of the requestparameter with the given name.
Returns the values of the request parameter with the given name.
Gets the value of the requested file parameter.
Get request files.
Initialize the filter.
Parses the given string and appends the result to the given sqlbuilder.
Finds the end of the macro.
Count the number of escapes in the given string starting from the given macro.
Build a query string from a multimap.
Parses a query string and returns a multimap of query parameters.
Prepare header parameter name string.
Extracts the mediatype from a contenttype string.
Renders the given node as an HTML fragment.
Render the given node as an inner HTML string.
Loads the configuration from servletcontext.
Resets the iterator to the beginning of the text.
Sets the lazy flag.
replace with mapped type for path.
Parses the given string as a list of objects of the given type.
Parse as map map.
Resolve lazyvalue.
Skips over an object.
Parses a string.
Parse stringcontent.
Parse a Unicode character.
Parse an unquoted string content.
Parse a number from the input.
parsearraycontent.
Create the emptyctor.
Create a simplemethodwrapper.
Resolve raw typename.
Resolve a property reference from its value.
Returns an array of beanreferences from the given parameter values.
readallreferencesfromannotation.
Build the default references for the given method or constructor.
Build a default reference from a property descriptor.
Remove all duplicate names.
Converts an array of references to an array of beanreferences.
Convert an annotated value to beanreferences.
Runs the joy runtime with the given consumer.
Find a method in a class.
Find a constructor of the given class that can be assigned to the given parameter types.
Resolves all interfaces of the given type.
Compare two parameter arrays for equality.
Force access.
Create a new instance of the given class using the given constructor parameters.
Returns the superclasses of the given class.
Returns the child class of the given instance.
Returns the jarfile of the given class.
Causes the current thread to sleep for the specified number of milliseconds.
Causes the current thread to sleep for the specified amount of time.
Waits for an object to complete.
Creates a thread factory that daemonizes the process with the given name and priority.
Get the next value from the supplier.
Visits a parameter of this method.
Visits an annotation of this method.
Visits a field instruction. A field instruction is an instruction that loads or stores the value of
Visits a method instruction. A method instruction is an instruction that invokes a method.
Visits an invokedynamic instruction.
Visits a jump instruction. A jump instruction is an instruction that loads or stores the value of
Visits a multianewarray instruction.
Visits a try catch block.
Convert the properties to a writer.
Processes the input stream.
Returns the next element in the iteration.
return true
Joins the given arrays into a single array.
Joins arrays.
Resize an array to a given size.
Appends an element to the end of an array.
Remove a component of a given type from a buffer.
Returns the index of the first occurrence of the specified value in the specified array.
Returns the index of the first occurrence of the given value in the array or - num_ if
Finds the first index of the first occurrence from the specified position in the given array.
enablexhtmlmode.
Parses the given content using the configured parser.
Do parse.
Compute max stack and local.
End the current basic block with no successor.
Collect the prototypes of the first and firstcode attributes.
Inject context.
Registers a pseudoclass.
Lookup a pseudo class by its name.
Invoke an action request asynchronously.
Gets all bean property names.
Visits all properties of the source object.
Checks if the given property name matches the given rule.
Resolves the methodinjectionpoint for the given type.
Read filterconfig parameters.
Sends the bundlefile to the client.
Lookup the bundlefile for the given bundleid.
Gzips the given file. If the file does not exist it is created.
Registers a new bundle.
Creates the digest for the given source.
Create a bundle.
Clears the contents of the bundle.
Fix css relative urls.
update column.
Create tablerefname.
getdbsession gets the current transaction resource.
Convert the given value to a singleelementarray.
Parses the given signature and returns a map of all the generics found.
Resolve all collection accessors for the given class.
Returns true if the given propertytype matches any of the ignored propertytypes.
Attempt to open a connection for query.
Opens the transaction.
Closes the transaction.
Commits a transaction.
Rollback transaction.
Create a properties object from a file.
Create a new properties object from the given string.
Load properties from a string.
Returns a subset of properties with the given prefix.
Create a properties object from the classpath.
Get the string property or the default value.
Resolve all variables of the given properties.
Resolves the value of the given key in the given map.
Resolves the scope pattern.
Returns the transaction mode of the given method.
Registers transaction annotations.
Read transaction annotation.
Accepts the given node.
Returns true if this node matches the given element.
Implement the accept method to implement the filtering.
Unescape the given string.
Build the packages.
Clones this node to the given destination node.
Detach this node from its parent node.
Add one or more nodes at the end of the list.
Inserts a child node at the given index.
Inserts a new child before the specified one.
Inserts newchilds before refchild.
Inserts newchild after refchild.
Inserts newchilds after refchild.
Removes all child nodes from this node.
Return the child node with the given name.
Returns an array of all child nodes of this node filtered by the given predicate.
Checks if this node is valid.
Initializes the child elementnodes array.
Initializes the siblingnames field of the element.
Initialize childnodes.
Recursively change the owner document of a node and all of its children.
Returns the previous sibling node with the given name.
Returns the text content of this node.
Liefert ein innerhtml zu gesetzt.
Visits all the children of this node.
Returns the CSS path of this node.
Decoratag handler.
Processes an idattr start tag.
Create the decoratag and add it to the decoratags list.
Add a proxyaspect.
Add a rootpackage and a mapping.
Adds the rootpackage of the given class.
Find the root package for the given actionpath.
Resolves a validation message from the request.
Returns a new beanreferences object with the duplicated names removed.
Add a new propsfile.
Execute a consumer on each of the targets.
Execute a biconsumer for each target and injectionpoint in the given scope.
Perform a foreach - of - target - and - out - of - scope consumer.
Extracts the values of the parameters.
Make targets.
Create actionmethodargument.
Session created event.
sessiondestroyed event.
Adds an object to the array.
Appends all of the elements in the specified array to this array.
Remove the element at the given position.
Resolves the target.
Target not found.
Returns the string representation of the given value object.
Filter by class.
Gets the pseudo function name.
Resolves all propertyinjectionpoints of the given type.
Create a socket to the specified host and port using the specified proxy.
Returns the number of attributes in this list.
Get all actionresults.
Compares a character with a charsequence.
Find the first occurrence of match in source starting at index.
Find first occurrence of match in source starting at index.
Set command line arguments.
Adds an environment variable to the commandline.
Starts the process and waits for its completion.
Invoke a listener.
Copies the state of this frame from another frame.
Gets the abstract type from the descriptor.
Sets the inputframe from the API format.
return localindex ;
Sets the local variable.
Push a new abstracttype on the stack.
Push a new type onto the stack.
Pop a number of elements from the stack.
Pops a descriptor from the operand stack.
This method adds the abstracttype to the set of initialized abstracttypes.
Get the initialized type for the given abstract type.
Puts the given abstract type into the given bytevector.
Prune expired entries from the cachemap.
Visit a module. This method will be called for every module found in the class.
Visit an outerclass. This method will be called for every class in the class.
Visits an annotation of the class.
Gets the current thread session.
Closes the current thread session.
Creates the array of executionwrappers.
Invokes the action method.
Read the request body from the request.
Calculate first item index of page.
calc first item index of page.
Returns true if the given value matches this pattern.
Convert char array to raw byte array.
Find the first non equal character in the source array that is not equal to match.
Resolve node name.
Resolve attribute name.
Load properties from a file.
Loads properties from a file.
Loads properties from the specified inputstream.
Loads properties from the given map.
Loads properties from a map.
Load properties from classpath.
Returns the value for the given key or the defaultvalue if not found.
Set a value for a key.
Extract properties from this activeprofile.
Extracts properties from the given profiles and stores them in the given map.
Extract subprops from map.
Get the inner map of all profiles.
Add inner map.
Resolve the activeprofiles property.
Returns a list of all profiles.
Get the profiles for a given wildcard.
Add a propertyinjectionpoint.
Add a setinjectionpoint to the list.
Add a methodinjectionpoint.
Add initmethodpoints.
Add an array of destroymethodpoints to the list.
Resolves the target class for a proxy.
Inject a target object into a wrapper object.
Return the type of the target wrapper.
Returns the field descriptor for the given fieldname.
Returns the raw type of the boolean field or getter.
Resolve the raw key type.
Resolves the raw componenttype.
Creates a jsonresult from the given object.
Builds a jsonresult from an exception.
Returns the httpmethod corresponding to the given methodname.
Match string against pattern starting at index sndx.
Resolves a class loading.
Load the class with the given name.
return null ; } return resource url.
Waits for the thread to end.
Detect the annotation type of an array of annotations.
Build an injectionpoint.
overrides the visitor to look for classes in the classintrospector
Returns all urls for a given class.
Sets the bean.
Update the bean.
loadpropertydescriptor.
Connects to the database.
Add an iterator to the union.
Prints the logo.
Stops the engine.
Create a new socket.
create sslsocket.
Gets the default sslsocketfactory.
Gets the socket factory to be used for a proxy.
Generate random string.
Generate random string.
Randomly chooses from the given ranges.
Create a new instance of the given type.
Inject boolean value into target object.
Convert the given value to the target type.
Visits a provide method.
Create a default cache.
Put t.
Returns all method descriptors.
Resolves a hostname to its IP address.
Convert a string representation of an IP address to an integer.
Checks if the input string is a valid adress v4 format.
Resolves the hostname of the given IP address.
Download bytes.
Downloads a string from a URL.
Downloads a file from the given URL.
Connects to the given host and port.
Connects to the given host and port.
Returns the index of the primitive class with the specified name.
return null ; }
Load array class by component type.
Shutdown the bean manager.
Create a binarysearch operator for an array of comparables.
Perform a binary search using the given comparator for the given array.
Excludes given strings from validation.
Include any of the given strings.
Include all properties matching the given template.
Set the start position of the tag.
Registers a component.
Resolves the sqltype of a column.
Preprocess the given SQL string.
Create resultsetmapper.
Returns the generated key of the given type.
Populate generatedkeys.
Create a new wrapper for the given class.
Sets the bean.
Sets the map of parameters.
Sets multiple objects at once.
Inserts this chunk after the given one.
Returns the descriptor for the given entity.
find dbentitydescriptor by columnref
Resolves a table reference to a table name.
Resolves the class of the given object.
Appends the stringbuilder with trailing whitespace if the last character is not a whitespace.
Returns an enumeration of file parameter names for this request.
Include a page.
Returns the full URL for the given request.
Gets the request URI from the request.
Returns the parameter names of the given actionclassmethod.
Start the application.
Shutdown the PETITE container.
Filter by subject
Filter by messageid.
Filter by from address.
Appends the to recipient string to the constructed email.
Email filter using cc recipient string.
Email filter using bcc recipient string.
Set email filter flags.
Set the given flag on the filter.
Filter by received date.
Appends a sentdate search term to the current query.
Filter by size.
Composes this emailfilter with the specified email filters.
Compose this email filter with the specified email filters using the OR operator.
NOT emailfilter.
concat two searchterms.
Encodes a byte array into a base32 string.
return true ; }
Validates the given target object.
Validates the given target object against this validation context.
Enables a profile.
Provide a list of enabled profiles.
Match checkprofiles.
Parse the request body.
Returns the number of milliseconds since the epoch.
Add two julian dates.
Subtracts another juliandate.
Sets the value of this element at the given index to the given value.
Emit a conditional comment.
Print error message.
Create hash string.
Generate a PBKDF2 key.
Converts a hexadecimal string to a byte array.
Resolve providerdefinitions.
Set the name of the email attachment.
Set the contentid from the name if missing.
Resolve contenttype.
Parse the type of the signature.
computeattributessize.
Putattributes.
Decodes the given source string using the given encoding and returns the result.
Decodes a query string.
Starts the application.
Checks the connectionprovider and prints the information.
Visit a method. This is the default implementation for visiting methods.
overrides the visitor to visit the end of the node
Create a methodsignature.
Convert an array of objects to a csv string.
Convert a line of text to an array of strings.
return null ; }
Create a classreader for the advice class.
Gets the cached classreader.
Encrypt a string.
Decrypt a string.
Gets the logger for the given name.
Sets the name.
Create actionrequest.
Create a new wrapper instance.
Remove a bean from the list of beans to be destroyed.
Calls the shutdown methods of all registered destroyable beans.
Gets the messages from the server.
Entry point to the clusteredservicecontainer program.
Run the reporting loop.
Prints an error message.
Print rate.
Maps an existing random file to a read - only random file.
Closes the replay.
Awaits the current state of the recorder.
Return the current position in the log file.
Offers a message vector to this partition.
Append a sequence of zero - padded bytes to the end of the message.
Close the proxy.
Poll for an error response.
Stops a replay session.
Prints an image event that is available for streaming.
Prints an image event when it is unavailable.
Returns a statusindicatorreader for a given channel.
receives a status indicator from a channel
Sets the limit of the buffer.
Append a sequence of bytes to the buffer.
Return the next fragment from the fragment queue.
Create a new mappedbytebuffer by mapping aerondirectoryname to aerondirectoryname
Take a snapshot of the current state of the registry.
Create the default header.
Set the keybuffer of this countermessage.
Labels the countermessage with the given direct buffer.
Attempt to connect to the response stream identified by correlationid.
Attempt to connect to a response stream.
Sends a close session request.
Start recording a message.
Sends a stop recording request.
Replay a message.
Attempt to stop a replay.
Requests a list of list recordings.
Sends a listrecordingsforuri request.
List recording.
Extend the recording of a stream.
Gets the recording position.
Attempt to get the stop position of a correlation.
Sends a listrecording subscriptions request.
Checks if the given udpchannel has the same tag as this one.
Returns the inetsocketaddress for the given URI.
Returns a description of this multicast interface.
Add a receivedestinationudptransport to the list of connections.
Attempt to insert a new packet into the term buffer.
Find the first controltoggle counter.
Adds a parameter to the request.
The channel tag associated with this message.
Returns the entity tag associated with this event.
Add a session id to a channel.
Returns the tag value of the parameter value.
Append a padding frame to the output buffer.
Update the publisher limit.
Allocate a new buffer position.
Returns the label name for a given type id.
Scans the term buffer for available space and returns the number of bytes that are available.
Clears this builder s state.
Validates the fields of this builder.
Sets the prefix to use for this builder.
Sets the media to be built.
Sets the controlmode attribute of the channel URI string builder.
Sets the term length.
Sets the term offset.
Sets the linger for the string builder.
Closes this channel.
Check if a frame is valid for the given length.
Receives a packet from the receive datagram channel.
Occurs when a retransmit occurs.
Processes the timeouts.
Returns the string representation of the given status.
Allocate a new atomiccounter.
Resets this vector to a new directbuffer.
Validates this vector.
Validates and computes the length of each vector.
Returns the length of the producer window.
Validates the socket buffer lengths.
Checks that the given pagesize is a power of two.
Validates sessionidrange.
Validates the publicationunblocktimeout and clientlivenesstimeout.
Set the error code for the response.
Resets the state of this object to the initial state.
Encode clustermembers as a string.
Add exclusive publications to members.
Close all publications of clustermembers.
Returns true if at least one of the clustermembers is a leader or at least one of the
Return the quorum position of the members in the array.
Reset logpositions of members.
Returns true if any of the members of the given cluster have voted for the given position.
Returns true if at least one member has a vote on the given candidatetermid.
Checks if a cluster member has a majorityvote.
Determines the member of the cluster.
Validates a cluster member s endpoints.
Checks if two clusters have the same endpoints.
Checks if a candidate is an unanimous member of a cluster.
Checks if a candidate is a quorum candidate.
Checks if a clustermember array is not duplicated endpoints.
Finds the index of the member with the given id.
Remove a member from a cluster.
Returns the highest cluster member id in the clustermembers array.
Maps the existing CNC file to a new one.
Checks if the CNC file is active.
Checks if the current CNC file is active.
Checks if a driver is active.
Terminates a CNC file.
Get the length of a frame in volatile order.
Puts a frame length in the given buffer in order maintaining the order of the frame.
Set the type of a given frame.
Writes the given flags to the given buffer at the given offset.
Puts the term offset into the given unsafebuffer at the given offset.
Writes a termid to the given unsafebuffer at the given offset.
Find counterid by recording id.
Find counterid by session id.
Get the recordingid of a counter.
Checks if a counter is active.
Sets the application - specific feedback field of this status message.
Reloads the list of entries from the file.
Find the last entry of type term.
Create a recoveryplan for the given archive.
Create a recoveryplan from a list of snapshots.
Append a term entry.
Append a snapshot to the log.
Commits the logposition of the given leadership term.
Write tombstoneentry.
Close the context
Inserts the given vectors at the tail of the queue.
Unblock the term at the given position.
Get the current channel.
Set the channel name.
Checks the length of a term.
Checks that the given pagesize is a power of 2.
CAS the active term count of the metadata buffer.
Computes the position of a term.
Computes the length of the log.
Stores the default frame header.
Apply the default header to the metadata buffer.
Rotates the log of the metadata buffer.
Initialise the tail with the given termid
Returns the offset of the term in the given raw tail.
Get the tailvolatile of the metadata buffer.
CAS raw tail.
Terminate token buffer.
Allocate a counter with the given parameters.
Find the next available counterid.
Checks if a counter has a replay.
Get the snapshot recording id for the given counter and service
Convert the given flags to the corresponding chars.
Set the publication channel.
Offers a buffer to the cluster.
Wraps the given atomicbuffer.
Puts the current frame length into the frame buffer.
This method aborts the current header.
Entry point for the driver.
Close all the runners.
Returns the current position in the term.
Allocate a new counter.
Find the counterid for the given serviceid.
Allocate a new atomiccounter instance.
Closes this NCNameFile.
Dispatch recording descriptor to consumer.
return ; } }
Sets the byte at the given index.
Add a statistics object to the current page.
Convert an array type.
Convert a structtype to a grouptype.
Annotate the given message with the given position.
end the previous bitpackedrun.
Reads a single command from the stream.
Returns a list of footers.
Read all footers from summaryfile.
Read a parquet footer from an inputfile.
Read the next rowgroup.
Reads the next filtered page row group.
Read dictionary page.
Adds a writer to the list of writers and updates the allocation.
Remove a writer from the list.
Update the allocations.
Registers a scale callback.
Start writing magic.
Start a new block.
Start a new column.
Writes a dictionarypage to the stream.
Write a datapage to the index.
Ends the current block.
Copies length bytes from from to to to.
End the parquet file.
Merges parquet metadata files into a single parquet metadata object.
Merges a list of parquet metadata files into a single parquet metadata file.
This method is deprecated in favor of the newer jobsummarylevel. all method.
merge the tomerge metadata and return the mergedmetadata.
Reads a value from the binding.
Return true if the given schema is null.
Returns the first non - null object that is not null.
Convert a string to a value according to the given schema.
Create a new thriftmetadata instance from the extrametadata map.
Convert a thrift class to a thriftmetadata.
Returns the extrametadata as a map of key - value pairs.
Write null.
Writes a page to the parquet file.
Initialize from page of input stream.
Allocate the values buffer.
check that the ith element of expectedtype is an enum
Calculates the bitwidths for a deltablockbuffer.
Throw the throwable if it is an instance of the given class.
Get the statistics based on the given column type.
Get a builder for reading a primitive type.
Merge the given statistics into this one.
Gets the non null schema.
Creates a new instance of the taskattemptcontext.
Invokes the given method on the given object.
Generate a string representation of the members of this object.
Merges the fields of the given grouptype into the fields of this grouptype.
Init counterfromreporter.
Gets the filter from the configuration.
Reads footers from parquetfile.
Generate parquetinputsplits.
Writes a message to the log.
Validates that the fields in the descriptor have the same index as the parquetschema.
Serializes a descriptor to a string.
This method is used to amend the required fields of the rootevent to match the required fields of
check that each element in the set is a valid set
Reads file metadata from the given inputstream.
Closes the recordwriter.
Sets the given schema for the given job.
Add a primitive type to the map.
Asserts that the given primitive type is valid for the given column.
Checks that the given long value is an int and if not throws an illegalargumentexception.
Builds a parquet schemamapping from an arrow schema.
Create a schemamapping from a parquet schema.
Maps a parquet schema to a arrow schema.
deprecated use newdatapagev2header
skiptomatch loop.
Writes an object to a configuration as a base64 string.
Removes the value for the given key.
Puts a new value into the cache.
Gets the current value for the given key.
Writes a value to the output using the given schema.
Set the glob to the given string.
Outputs the given content to the specified file.
Open a file for reading.
Creates a new unboundrecordfilter for a column.
Convert a structtype.
Wrapper for list elements.
Creates a listtype from a listrepetition.
Gets the merged keyvaluemetadata.
Get a parquetinputsplit from an old split.
getfieldsbyname.
Resolves schema access for parquet schema.
Gets the inputfiles from the given input.
Checks the validity of parquet files.
Gets the input files from a directory.
Creates a paged record filter.
Returns a consumer that consumes a list of the given class.
Initialize pathtopartitioninfo if plan is longer than num_.
merge all data from tuple t into tuplesummarydata
sumup of a tuple.
Read a STRUCT message.
Reads a single entry from the map.
Writes an integer to the array.
Reads a signed little - endian integer from the given bytebuffer.
Sets the avro schema for the given job.
Create a Kafka topic if not exists.
Duplicate stagebeans.
Creates all the interceptors defined in the stagelib.
Create a new interceptor.
Parses a schema from the given string.
Convert milliseconds to days.
Gets the avro schema from the record header.
upgrade from v1 to v2
Copy resources from blobstore to staging.
Resets this object to its initial state.
reports the health of a thread
Register a new thread to be monitored.
Stores the configurations for the control hub.
Credentiallogin.
Upgrades a library if necessary.
Upgrade a stageconfiguration if needed.
Upgrade the stage configuration if needed.
Upgrade the services if needed.
Upgrade the given stage if needed.
getfieldstonull.
Return true if the given name is a system class in the given package list.
adds an element to the set if it is not null.
add and getevicted add e.
Returns the given value or the default if no value is given.
Add errors to the list of reports if needed.
Returns the descriptor for the given proto descriptor file.
Gets all file descriptors in the set and its dependencies.
Populate defaults and extensions.
Gets the descriptor.
protobuftosdcfield.
Converts a field of a proto message to a dynamicmessage.
Converts a sdcfield to a protobuf message.
Upgrades to the Jersey config bean.
Checks the connection to kudu.
Convert from kudutype to field. type
Creates a field from the given rowresult.
Intercepts a list of records.
Gets the text.
Add missing configs to stage.
return record ;
Adds the response header to the response based on the configured output location.
Writes the response header to the output field.
writeresponseheadertorecordheader.
Synchronously saves the current metadata.
Initializes the client.
Parse headers only.
Increment the sourceoffset by the given amount.
Parses a paginated result.
Add the response headers to the given header.
Resolves all headers in the configuration.
Processes a response from the stage.
Checks if the given property is defined in the given configuration.
Convert a recoverabledataparserexception to a dataparserexception
Convert a streamsets pipeline lib. generator. datageneratorexception to a datageneratorexception
Returns the credentials for the given path.
Preview a pipeline with overrides
Copies the content of the buffer to the stringbuilder.
Removes logical duplicate packages from a sorted set.
Find the next mainline.
Resolve a livefilechunk to a livefilechunk.
Closes the current connection.
Escapes a string for use in a quotedsubstring.
Gets the flowcontrolsettings.
Build the channelprovider.
Put a batch of entries into the buffer.
Create a grok object from an expression.
Auxiliary method for digestexpression.
Adds a dictionary to the dictionary table.
Adds a dictionary from the given reader.
Stops the aggregation and returns the data.
Overwrites the current data with new datawindowendtimemillis.
Serialize an object to a JSON string.
Deserialize a string to an object of a given type.
Deserialize an object from a file.
Writes a record to the file.
Evaluate an EL expression with a string value.
Generate an inner field from a list of pairs.
Get the table name from the metadata record
Get the database name from the metadata record
Get the boolean value of an internal field from a metadata record.
Get the location of a record
Get the value of the custom_location metadata field
Get the Avro schema from a metadata record
Get the data format from the metadata record
Create a new schema metadata field builder.
Validates the partitioninformation of a table.
Generate the partition path from the given partitions.
This method serializes a schema to HDFS.
Sets the parameters.
Returns the configuration of the service.
Parse a string in the format yyyyMMddHHmmss.
Format the given template with the given arguments.
Start a batch of pushsourcecontexts
Checks if the record contains the solrfields.
Filters the list of fieldnames that are not already in the autogeneratedfieldnamesmap.
Sends onrecorderrorexception to errorrecordhandler.
Parse a jarname and return a dependency object if it exists.
Parses the given URL as a dependency.
Get the singleton instance of couchbaseconnector.
Closes the connection to the cluster.
Returns the label for the given string code.
Verifies that the dependsonkey exists in the definitions map.
Reads the operation type from the header.
Builds a subdocument mutation.
Generate the alter table sql string.
Configure the SaslClient with the values from the configuration map.
Takes messages from the producer.
Commits the current batch at the given offset.
Sends an error to the control channel.
Inject a stage into an object.
Get the definitionsjson for a specific stage
Returns the definition of the named lineage publisher.
Formats a column name.
Helper method to format a value.
Get information about a pipeline configuration
Create a draft pipelinefragment.
Get a list of pipelines
Import a pipeline fragment.
Returns the filepath for the given template and record.
getoperationfromrecord.
getfieldpath.
Retrieves an enrichedevent from the queue.
Get a runner from the queue.
; }
Return a runner to the pool.
Destroys the Pipeline runtime.
Validate that the container is not destroyed.
Checks if a stream with the given name exists.
Get the last shardid of a stream
Process a queue of records.
Override handlesqlexception to add custom datasqlstatecodes error messages.
Computes the hashcode of the given operation on the given record.
Compares two files.
Returns the pid of the given process.
Validate and extract fields to hash.
getproxyuser.
Roll the usage timers.
Take a snapshot of the current statistics.
Ensures that a directory exists.
Write a batch of records to the staging area.
Performs a batch - by - expression write.
Writes a record to the cache.
generatenomoredataevent.
This method detects a new partition.
Update a record for HDFS.
Processes the given value with the given group.
Checks if two stages have the same version.
Runs the bootstrap cluster tool.
Configures the authentication and builds a new client.
Resolves the headers in the given map.
Evaluate an EL expression and return the corresponding httpmethod.
Fill the bindings with the null types.
Returns null if the field at fieldpath is null.
Loads a schema from the registry.
Register a schema in the registry.
Load a schema from the registry.
Get the schemaid for a given subject.
Load a schema from the registry.
Write the schemaid to the outputstream.
Attempt to detect the schema ID of the given data.
Get the default values from an Avro schema.
Parses the given payload into a list of records.
Logs the details of this dependency.
Get bad records from errorsink.
Initializes this generator with the given configuration.
Gets the outwardedgevertices.
Gets the inwardedgevertices.
Serializes a offset map to a JSON string.
Deserialize offset map.
Queues a report on the queue.
Performs a get report operation.
Checks if issdccheckpointing.
Writing offsets to the main offset file.
Deletes a blob from storage.
Handles a GCS error.
Handles an error by moving or copying a blob to a different location.
getreader gets the reader of the current file.
Release reader.
Sets the dpmbaseurl.
Add a default header.
Parses the given string as a date.
Escapes a string so it can be used as a URL query parameter.
Gets the client for the given base path.
Initialize gpudb connection.
Get the metadata for the given table
Create a new event builder.
Builds a schema from the given map of fields.
Convert from Oracle code to SDC code.
Add jars to job.
check if a field is in a fieldorderbylist
Recursive method to check if fieldname in conditionexpressions is in ignore case.
getoffsetlagforfile long.
Sets the instrumentation for the bootstrapmain instance.
return 0 ; }
Runs a query and returns the result.
Get the description of the table
Validates that the table accepts inserts
Get the type of the field
Check if the given field has a null value
Get the schema of a table
Get the requested column properties
Get the class corresponding to the given typename
Initializes the aerospike client.
Resolves the topic for the given record.
Returns an inputstream to the underlying file.
Returns an outputstream for writing to the file.
Returns true if the file exists.
Parses an fspermission string.
Validate that all services are available.
Creates a new simple aggregator.
getaggregatorunit.
Creates a new aggregator.
Creates a new groupby aggregation.
Starts the data provider.
Stops the aggregator.
Overwrites the current window with a new one.
Releases a reference to the login manager.
Convert a glob string to a regular expression.
Returns a list of s3objectsummary objects in the Amazon S3 bucket ordered by their natural
Stop capturing snapshots.
Produce empty batches for all the idle runners.
Attempt to create a failure batch for the pipeline.
Convert a record to a boundstatement.
Sets the configuration from the given map.
Generate kudulookupkey.
Reads a line of text and appends it to the stringbuilder.
Decrements the usagetimer by one.
Performs an enabled dpm.
Disabling DPM has no effect on the server.
Normalization of the base URL.
Retrieve a user token from the given URL.
Logout the current user.
Update the token file.
Update dpm properties.
schema. field
Returns a complex schema for the given field path and record.
getdecimalscaleorprecision.
Returns the default value for the given schema.
Initializes the metrics if needed.
Compares two files for order.
Returns the index of the specified index in the specified group.
Returns a list of the names of the groups this user belongs to.
Checks if is escaped character.
Returns true if the character at the given position in the given string is a slashescaped
isinsidecharclass.
Count the number of open parens.
Extract groupinfo from named pattern.
Replaces all occurrences of the given regular expression pattern in the given stringbuilder with the given replacement
Respond to GET requests.
refresh the schema of a table
entry == null ;
Returns the current offset of the file.
Fastforwards to the next byte.
Convert a string to a proper number.
Parse a part of a record.
Parse values.
Looks up the primary key columns for this table.
Creates the customfieldmappings.
Returns the SQL type name for the given field.
Returns the table name.
Sets the primarykeys of the given record and returns the updated index.
Handles a sqlexception.
Processes a pipeline.
prepare the pipebatch from the batchcontext
Finishes a batch context and calculates metrics.
Flattens an entireentire record into a map.
Factory method to create a detachedstageruntime.
Executes the operation.
Gets the columnstoparameters.
Gets the condition for a partition column.
Validates the specified offset against the stored and specified columns.
Gets the requested definitions.
Get the non - empty arguments from the given list.
Gets the operation.
Convert a number of bytes to a display format string.
Recursively scans a livefile.
getpendingfiles long.
Checks if a specific dependency is blacklisted.
Compares two versions strings and returns true if they are identical.
Entry point to the streaming cluster example.
Propagate runtimeconfiguration to all listeners.
validates the reportdescription
Upgrade from v1 to v2.
Extract namedgroups.
Queues a consumer commit message.
Creates a new embeddedsdc object.
Sets the fields in record.
Get the list of remote pipelines with changes.
Ack the given future.
Create a new gauge with the given name and gauge.
Gets the columns to parameters.
Generates the header attributes for a file.
Validates a single record.
Handle old tempparquet files.
getavroinputstream.
Convert an inputstream to a datafilestream
writeparquet ( ) ; }
Checks if the given field is encrypted and if so throws an exception.
Checks if the given field is encrypted.
Checks that the given field is a byte array.
Checks if the given field is a decryption field.
Prepare encrypt.
Sets the parentpattern of this matcher and uses the given pattern as the new pattern.
Appends the given replacement string to the given stringbuffer. The given stringbuffer is not modified
Returns a map of named groups.
Replaces all the occurrences of variables with the given values.
Get the value of a global variable.
Creates the start event.
Creates a stop event.
Checks if the offsetcolumn is a decimal field and if so adjusts it to the maximum allowed
extractasruntime.
Builds and executes a query to add a partition to the specified table.
Executes a settablepropertiesquery using the specified qualifiedtablename and partitionpath.
Returns the host and port of a given database
Executes the given query.
Executes a query.
Execute a batch of commands.
Consumes all the pipes.
Gets the offsetcommittrigger.
Checks if any of the pipelines in this pipeline have an onrecorderror set.
accept consumer.
Gets the insert id for a record.
getvaluefromfield.
Set a document fragment in the record.
Sets a document in a record.
Sets the n1qlrow in record.
Processes the partials3objectformetadata format.
Return true if the seqno of the transaction having the given GTID is greater than or equal
Uses the given classloader as the context classloader.
Logout of the user.
Sets the exceptions.
Replace the variables in the path.
Ensures that the current thread has permissions to access the specified path.
Entry point for the program.
return null ;
rename to finalname.
Checks if the record should be rolled.
Matches the given string against the given pattern.
Returns a map of file offsets.
get the remaining waittime from starttime to the endtime
Returns the offsetlag for the given offsetmap.
Create a new instance of stagelibrarydelegate.
Creates a new instance of the given classdefinitition.
Returns the value of the given metricelement.
find the end of the header
Returns the size of the body.
savetmpfile - saves a copy of a bytebuffer to a temporary file.
Returns an sslserversocketfactory for the specified key and truststoreclasspathpath.
Returns the MIME type of the given file.
Handle a session by calling all interceptors.
Stops the HTTP server.
addmappings method.
Sends the body of this message to the given outputstream.
Create a new fixed - length response.
Whether to use gzip when accepted.
Set a cookie in the cookie store.
Unload the queue.
Base64 decode the given value.
Encodes the given value as a base64 string.
Sets the table name.
Get the name of the given principal
springsessionrepositoryfilter.
Resolves the principal name from the session.
Gets the session for the given id.
Get the JNDI name of the modelnode.
Returns the canonical parameter names for the given viewmethod.
Register an interned synchronization.
This method is called before completion of the task.
return tx ; }
Deploys the kernel deployments.
doesscopedpersistenceunitnameidentifycacheregionname.
Gets the dependencies of the server configurations.
Decreases the readlockcount.
Increments the readlockcount.
Add a service to the deploymentarchives.
Handler estorationcalculation.
Deploy the modulespecification.
Make all toplevel bdas visible from static modules.
Create a new jsearchivemetadata instance.
Sets the configname and configfile in the builder.
Gets the securitymetadata.
Gets the servlet url patterns mappings.
Gets the servlet class mappings.
Resolves the views.
Get the set of available connectors.
Parse a coreenvironment element.
Parse a processidenvironment element.
Returns the address of the given modelnode operation.
Sets the address of the given path operation.
Returns the attribute value of the given operation.
Returns true if the given operation defines the include_defaults constant.
Creates a composite operation.
Create a modelnode ADD operation.
Create a modelnode representing an add operation.
Creates a read - attribute operation.
Creates a write_attribute_operation.
Returns a modelnode representing an undefine operation.
Get the value associated with this context.
Add an object factory for the given scheme.
Remove a factory for the given scheme.
loadproviders.
Modify the deployment.
Configure the endpoints.
Modifies the context root of the deployment.
Gets the transportclassname from the deployment.
Sets the runas identity on the securitycontext.
Pops the current running runas identity from the securitycontext.
Process management.
Inject a property into an object.
Returns true if the given class and property type match.
Find a method.
Find field by name and type.
Derives the usefulinfo from the given httprequest.
Run the standalone runner and collect the results.
Collects the jdrreport.
Register a resourceadapterdeployment.
Unregister a resourceadapterdeployment.
Register a new subsystem.
Writes the parameters to the outputstream.
Read an exception from the given inputstream.
Gets the lockowner.
Release the lock on a statefulsessioncomponentinstance.
Adds content to the log.
add iscdiflag to warmetadata
; return cv
Invokes the given endpoint.
Gets the component view method.
Checks if the two methods have the same name and different parameters.
Gets the ejb security metadata.
Returns the new security domain or the old one if the new is null.
Ensures that the two security domains are the same.
Sets the idlname.
Returns the absolute name of the entry.
Create a new JNDI name from the given string.
Process the ironjacamarxml descriptor from the deployment.
Override handlerequest to register a listener for exchange completion events.
Returns true if this connection is in a transaction.
Caller must hold transactionsynchronizationregistry lock
Gets the connection factory.
Get the last component of a name.
Returns true if the given name is empty.
namenotfoundexception.
Create a new namingexception with a message and cause.
Creates a new namingexception object.
Create a cannotproceedexception object.
Create a namingenumeration from a collection.
Binds the given name to the given value.
Get the activemqcomponentcontrol for the given operation.
Create a componentinstance from the given instance.
Get the resteasyspringvirtualfile.
Resolves the runtime name of the given path element.
listenerbuilder.
Gets the primitiveanalysis for a given class.
This method is called by the thread pool when it is no longer needed.
Gets the urlpatterns.
Gets the servlets.
Gets the servletmappings.
Gets the securityconstraints.
Gets the loginconfig.
Gets the contextparams.
Gets the webresourcecollections.
Gets the initparam.
Factory method for creating a new securityconstraint.
New webresourcecollection.
New servlet.
Factory method for creating a new servletmapping.
Factory method for creating a new authconstraintmetadata.
Factory method for creating a new userdataconstraint metadata.
Creates a new paramvaluemetadata object and adds it to the list.
Helper method to create a new paramvaluemetadata.
Registers the interceptors for the session bean.
Shutdown the bootstrap service.
Get the JNDI name of the given modelnode.
Resolve the given simple attribute definition.
Returns the type of the given urlpattern.
return true ; }
Determines if the resourceadapter is targeting an external pooled connection factory.
Get the name of the activemqserver.
Returns the name of the default persistence unit.
Registers this activity with the current thread.
Unregisters this activity listener from the current thread.
called when the application is suspended
Resumes the deployment.
Called when an invocation completes.
Notification that a transaction was created.
Add the controller to the namingstore.
Remove the service from the namingstore
Returns the servicename for the given capability and dynamic parts.
Create the resourceroots.
Get all deploymentmoduleclassloaders.
Checks if the given persistenceunitmetadata needs a classfiletransformer.
Checks if the given persistenceunitmetadata allows two - phase bootstrap.
Check if the given persistenceunitmetadata allows default datasource use.
skipmixedsynchronizationtypecheck.
Get orb from server and port.
Initializes an applet.
initmethodhandles.
Set the namingstore for the active user.
Validate default values.
check parameter type.
Lookup the defaultvalue annotation in the annotation array.
Validate the basetype.
Returns an array of deferredentitymanagers.
Converts a transaction status to a string.
Adds cachedependencies to all eventlisteners of the given classification.
Extracts the database dialects.
This method is used to clear the connection to the database if the database is not null.
Identifies the name of the given string and returns the corresponding string.
Checks the database.
Parses the given date string as a scheduler date.
set nodename in preparedstatement.
Mark the given deploymentunit recursively.
Read parameters from the given inputstream.
This method writes the object retval to the outputstream.
Writes an exception to the given outputstream.
Recursive lookup method.
Indicate that the current thread begins the creation of sfsb entities.
Ends the creation of a sfsbcallstack.
Returns the invocationstack of the current thread.
Pushes a map of extendedentitymanagers onto the call stack.
Pop the current call stack and return the result.
Gets the current call.
Deploy the javax module.
gettypeidlname.
Inserts a primitive into an Any object.
Converts a Java name to the IDL name.
Determine if the given string is a reserved IDL keyword.
Gets the signature for the given class.
Returns the signature of the given method.
Returns the string form of the given primitive type.
Returns the batchpermission object for the given name.
Gets or creates the transaction scoped entity manager.
Sets the value associated with the given key in the map.
Converts a camelcase modelnode to a modelnode.
Returns the most recent entity version of the given timerimpl.
Gets the timers.
Gets the directory for the given timedobjectid.
Add a naminglistener for a specific target.
Remove a naminglistener.
Fire an event.
Returns a consumer that closes the wrapped value.
Add a privatecredential to the subject.
Get an object instance from the context.
addtxmanagementinterceptorforview
Replaces all occurrences of the from string with to string.
Create the in - VM transportconfiguration resource.
Add the deploymentunit prefix if relativename is not already present.
Returns the root deploymentunit of the given deploymentunit.
; }
Create viewconfiguration.
Create viewbindinginjectionsource.
Returns the view interceptors for the given method.
Add a new interceptor for all methods in this view.
Add a view interceptor for the given method.
Returns the client interceptors for the given method.
Add a client interceptor for all methods in this factory.
Add a client interceptor for a method.
Put privatedata.
Throws an exception reporting an unexpected XML element.
Gets jaxwsejbs.
Gets jaxwspojos.
Gets the endpointname.
Gets the endpointclassname.
Returns the jbossservletmetadata for the given servletname.
Get required attachment value.
Get optional attachment value.
Get optional jbosswebmetadata from deploymentunit.
Gets the jbossportcomponentmetadata for a given jbossservicename.
Gets the webservicemetadataejbendpoint.
Gets the context root.
Loads a class by its name.
Attempt to load the resource with the given name.
Returns all resources with the given name.
List the resources at the given path.
Pop the current call stack and close all open entity managers.
Returns the entity manager for the given puscopedname.
Registers the cleanup listener.
Deploy the war if it is a war deployment.
Returns true if all fields are public.
Factory method for creating a new HTTP endpoint.
Create a new deployment from a deploymentunit.
Checks if is jaxrs deployment.
Sets the next timeout.
Sets the current timer state and thread.
Merge a list of deploymentdata with this one.
Deploy the module.
Adds the remotetransactionsdependency.
Returns a set of all registered container interceptors.
Returns true if the given method is in the methodlevel list.
Check that only one of the elements is required.
Returns the class object for the given classname.
Get the componenttype of a parameterizedtype at a given index.
Parses a compound name from its string representation.
Convert an insstring to a vector of component names.
Parse a namecomponent from its string representation.
Shutdowns the object.
Converts a servant to a reference.
Authenticate the user.
Returns true if the given class is of the same type as this class.
Lookup an object from the container.
Unbind a service.
Instantiates a bean.
Configures the given bean with the given configuration.
Dispatch a lifecycle joinpoint for the given bean.
Get the current namespacecontextselector from the stack.
Convert the given name and beanstate to a servicename.
Convert a class and state to a servicename.
Returns the eemoduleclassdescription object for the given name.
Process annotations.
postparse steps.
Validates a descriptor.
Create deployment descriptor.
Create web application descriptor.
Gets the authmethod.
Deploy the service descriptor.
Handle stateless session bean.
Create a stub class for the specified class.
Returns the anonymous object id for the given number.
getpersistenceproviders. Returns an empty list.
Clear the cache of deployment specificproviders.
Add a deployment specific persistenceprovider.
Find the parent modulecl classloader.
Read the jbossservicexmldescriptor attachment from the deployment unit.
Add a persistence unit metadata holder for each persistence unit.
Populate annotation indexes.
Gets the persistenceprovideradaptor.
Saving shared persistenceprovideradaptor from deploymentunit.
Lookup the provider for the given deploymentunit.
Gets the annotated classes.
Create the EJB Archive metadata.
Build enterprise bean metadata.
The refresh participant step.
Returns the containeranalysis for the specified class.
Lookup done.
Create a containeranalysis instance and add it to the workinprogress map.
Returns the IDL module name for this class.
Converts an integer to a hexadecimal string.
Converts a long to a hexidecimal string.
Checks if is accessor.
Is mutator boolean.
Returns true if the method has non - app exceptions.
Returns the read name of an attribute.
Returns the name of the attribute to write.
This method is used to fixup overloaded operation names.
Fixes up the names of the abstracts by making them upper case.
Escape a name for use in IDNs.
Parse an xtsenvironment element.
Parse the defaultcontextpropagation element.
Processes the attributes of the extendedstream.
loadprovidermodulebyname.
Create an add operation handler.
Deploys the application.
Writes the given attribute to the given writer.
Create a new session in remote ejbserver.
Infers the destination name from the given address.
Registers a set of endpointhandlers for a given endpoint class.
Returns the jobxmlnames for the given jobname.
Initializes the class loader.
Returns the request URI for the given request.
A factory method to create a CNCtx object using the supplied URL.
Lookup an object by its name.
Binds an object to a composite name.
Call the unbind method of the current context
List all the bindings for the given name.
Call the destroy method of the given namingcontext.
destroysubcontext destroy a subcontext
call bindnewcontext on the wrapped namingcontext
Create a new subcontext with the given name.
Lookup a link by its name.
Adds a property to this environment.
Removes a property from the environment.
Adds the transformations to the builder.
Remove a securitydomain from the map.
Lookup a JNDI context.
Create a new reference of the given type with the given factory class.
Create a modularreference for a factory class.
Create a new modular reference of the given type at the given factory location.
Returns the localidltype object for the given typecode.
Wait for a service to become available.
Compute the masked password.
Initialize the vault
Initializes the vault using the specified alias.
Displays information about a newly created attribute.
Display the vault configuration.
Returns the string representation of this VaultConfiguration.
Assert that the service is not null
Get the deployment servicename from a resource adapter.
type == string. class then value = string.
Returns true if the specified permission implies this permission.
Returns the action string.
Returns the name of the logger.
Send a state change notification.
Returns the value of the given type.
Returns the context servicename of this component.
Returns a set of all registered interceptors.
Adds an interceptor to the list of interceptors for the specified method.
Add a dependency to this component.
Gets the component interceptors for a given method.
Gets the around timeout interceptors for the given method.
Add a timeoutview interceptor for a method.
Add a new around construct interceptor.
Add a postconstruct interceptor.
Add a predestroy interceptor to the list of registered interceptors.
Add a prepassivate interceptor to the list of registered interceptors.
Add a postactivate interceptor.
Sets the componentcreateservicefactory.
Remove all JNDI aliases from the operationcontext.
Add the remote transport providers to the builder.
Returns the name of the specified component in the context.
Returns the servicename of the context module of the given application.
Returns the bindinfo object for a given environment entry name.
Lookup the bindinfo object for the specified name.
Returns the cache.
Get the valuemembers.
Get the valuemembers for the typecode.
Creates the subsystem root.
Parses a config element.
Start the naming service.
Returns the name of the joboperator service.
Add a component description.
Add a messagedestinationmapping.
Get the set of components for a given viewtype.
Get a set of components by name.
Get the set of components for a view.
Resolve message destination.
Adds the transformations for HELLO - Q2 version 1. 0. 0.
Rejects defined attributes with default values.
Pop identity.
Loads the ids manually.
Check the version compatibility.
Compute the slot based on the JSF version.
Gets the typecode for a constant class.
Adds a typecode to a class.
if the package exists return the container otherwise return null
This method adds the interfaces of the containeranalysis to the interfaces of the container.
This method adds the abstractbasevaluetypes of the containeranalysis to the valueanalysis object.
if cls. isprimitive ( ) ) return ;
addinterface adds an interface to the class.
valueanalysis vdef ;
addexception.
Gets the classlevel injection type.
Starts the store if not already started.
Destroy the rootcontext
Check if the given methodtype is allowed by the current context.
check transaction sync.
Gets all componentclasses.
Gets the waiting on transaction completion timers.
Gets the extra parameters.
Get the parameters from the model.
Convert a type to a class.
Convert the given value to the given class.
Returns the types of the values in the given array.
Checks if the given typenames and classinfos are equal.
Returns the next binding in the list.
get more.
Maps a COS binding to a COS binding.
Observes resources for lifecycle events.
Shutdown the healthchecks.
Create a handle for the specified locator.
Converts the given modelnode to an enum.
Skips the given amount of bytes in the given inputstream.
Check that both elements have not been seen before.
Adds a component description to this description.
Add a set of class loaders to the deployment.
Unbind the last component with the given name.
Lookup object by name.
Returns a list of nameclasspairs for the given name.
Returns a list of all bindings for the given name.
Add a factory to the chain.
savecontext will call all registered setupcontexthandles in order.
Create the iosubsystem if it does not exist.
Create the migration for the welcome content handler.
Gets a bean from the pool.
This method calculates the operationanalysismap.
Collect resource metrics.
Do prepare.
Do the deployment.
Do the publish.
Stop the web application.
Start this service.
Register an endpoint configuration for the given endpoint class.
Attempt to retry the given timer. If the timer is not currently active it will be called
Processes a timer after it has been canceled or expired.
Get the declared methods of a class.
Get the declared fields of a class.
Returns the constructor of the given class.
Get the named method from the given class.
Add messaging_activemq_extension if it does not already exist.
return false ; }
Migrates generic transports.
Cancels the wait.
Returns true if the current state is not cancelled.
Set the type of the resource.
canexecuteindexedfunctionwithoutindex.
Recursive method to find all classes in a directory.
Returns all the classes in the given package that implement the given interface.
Gets the generic multivalue type.
Evaluates a record against this filter.
Derives the requested otype for the given fieldname.
Updates the given orecord if the given one is not already present in the store.
Find a record in the cache.
getminimalsetofnodesforshardedquery.
Flattens a list of where clauses and moves all equalities to the left.
addorderbyprojections if needed
Extract all subqueries from the queryplanninginfo object.
Returns true if the given object id belongs to one of the given clusters.
handleclasswithindexforsortonly.
Returns true if the given class is a diamond hierarchy.
Get the orderdirection from the queryplanninginfo
Returns true if the keycondition requires multiple index lookups.
Finds the best index for the given class.
Returns the commonfactor for all indexsearchdescriptors.
Create a new odocumentfieldhandlingstrategy.
check if the user has permission to perform the operation
Checks if a rule is defined.
Returns a compact representation of a distributed server configuration.
Initialize the system database.
Load all local databases.
memberremoved event.
electnewlockmanager.
Attempt to assign a lockmanager to every node in the cluster
Commits the current transaction.
Rollback the transaction.
Update the identity after record commit.
This method deletes all records from the local cache after rollback.
Prepare a path for file creation or replacement.
Atomically move the source file to the target file but only if atomic_move fails.
Returns the disjoint patterns of this pattern set.
Execute only locally.
Specified the characters of a character array.
Checks if the socket is connected.
Merge shorts from two byte buffers.
Splits a short into two byte buffers.
Returns the number of properties in the source class
Splits the key into words and stores them in the set.
Removes the given key - value pair from the dictionary.
Executes the query and returns the result.
Executes the command and returns the first result.
Create a new instance of ofileclassic.
Checks if the given regions are contiguous and throws an exception if not.
Replaces content of current file with newcontentfile.
Execute a command on the server.
Ends the current request.
Add the host.
Sends a request to the ostorageremotenetwork with the given parameters.
oobjectdatabasetx instance.
get a client connection.
Terminates the given connection.
Interrupt a channel.
Disconnect the client with the given id.
push distribcfg2clients.
Swaps the entry at the given index with the given value.
Releases all locks.
Synchronizes the schema of all registered entities.
Update metadata.
Moves the iterator to the last record in the list.
return missedchar
Executes the sub - command.
ocommandrequestabstract oasyncreplicationerror callback
Registers a new compression class.
Returns the maximum number of open files allowed by the system.
allowsindexedfunctionexecutionontarget.
Moves the buffer from ifrom to iposition.
Fills the buffer with a given number of bytes.
Execute until a return value is reached.
return null if no more results
return boolean_ ; }
Executes the command.
Loads a configuration from the underlying storage.
parses the request and returns the command executor.
Execute the request with the given input parameters.
Update the scheduling of starting at a given node.
Adds an index to this index definition.
Aggregation split for aggregation.
Maps a result to a document or map depending on the result type.
Returns the collate for the given document.
Gets the string value.
Advances the given probe by a power of two.
Executes the oCommand.
Builds an odocument from a json file.
Checks a password against a hash.
Hashes a string with the given algorithm.
Checks if the algorithm is supported.
Creates a new cluster index.
return null ; }
The edges of the graph.
return null ; }
Returns the timeout for the distributed CRUD tasks.
Gets the features.
checkchangesfilledupto.
Parse a timeout keyword.
Parse a lock strategy.
Creates a cluster.
Frees a cluster.
Registers a hookvalue with the profiler.
Shuts down this instance of the profiler.
Creates an oscriptresultset that contains a single entity.
Grant access to a specific resource.
Revoke a permission from a specific orule.
Checks if the given record is valid and adds it to the list of deleted records.
Resets the size of the bit table.
Returns the index of the given item in the table.
Spread a value through a random number generator
Create a new index on this table.
Drops all indexes related to this property.
Returns the first index that this globalref points to.
Gets the linkedclass.
Converts this orecordelement to an embedded document.
Removes a listener from the list of listeners.
Registers a database with the server.
Timeouts the request with the given id.
Make a copy of this database document.
Attempts to merge the given value with this one. If the given value is not an embedded
replaces the delegate with a new tree
Transforms the given result if it is not a map.
Execute the ALTER CLUSTER.
Closes all resources in the pool.
Called when a storage is unregistered.
Returns a set of all function names in the database.
Returns a set of all collation names in the system.
Returns a set of all known command names.
getfieldsizeandtypefromcurrentposition.
Sends a status code and reason to the response.
Writes headers to the response.
writerecords ohttpresponsewrapper.
write a record to the response
send the response to the client.
send a stream to the response
Open a named odatabase with the given credentials.
Closes the database.
Notify of changes to a collection.
Decrements the operationcount of a component.
Pushes all counters for all components in the snapshot.
This method pushes a new writcachecounters holder onto the stack.
Push a new storagecounters holder onto the stack.
Push a walcountersholder onto the data stack.
Push the given counters holder for the given component.
stopwritecacheflushtimer.
Stops the fuzzycheckpoint timer.
Stop the full checkpoint timer.
Stop the commit timer.
Stops the walrecord timer.
Stop the walflushtimer.
Parses a string into an ostatement object.
Starts the receivemessages thread.
init checkdisconnect timer task
Removes the record from the database.
Sets a property on this record.
Removes a property from this record.
Checks if the given classname is in the schema of the graph.
Wraps an existing oindexcursor.
Define a new vertex attribute strategy.
Define edgepropertystrategy.
Gets the newrecordentries by class.
Gets new record entries by cluster ids.
adds an indexentry to the indexchanges object.
Merges the source set into the target set.
return true ; } return false ;
canexecuteindexedfunctionwithoutindex.
Creates a set of comparables from the given keys.
Write a page to the cache.
Read a page from the cache.
Truncate the page at the given index.
Opens the segment file.
Checks if replication is active for the given cluster.
Returns the new_node_strategy.
Checks if is execution mode synchronous.
Returns true if the cluster is ready for writes.
Gets the server cluster map.
Get the servers for the given clusternames.
Checks if a server is contained in at least one of the clusters.
Checks if a server is contained in a cluster.
return serverlist ; }
Get all configured servers.
Get a set of cluster names for a given inodename.
Get the set of clusters owned by a server.
getclusterowner.
getconfiguredclusterowner.
Get the list of configured servers for the given cluster.
Get the set of registered servers.
Returns the set of datacenters.
Returns the write quorum for a given datacenter.
Returns true if this instance is sharded.
Returns the list of servers for a given datacenter.
Returns the datacenter of the given server.
Gets the global read quorum.
getwritequorum getwritequorum.
Returns the configuration of the specified cluster.
Returns the configuration for the given datacenter.
Clear the initialization stack and the active stack.
Returns the index object of the given name of the given class.
Drops an index.
Return the given id as an orientvertex.
Add an edge to the orientedge.
Returns the vertex with the given id.
Returns an iterator over all vertices of a given class.
Returns an iterator over all edges of the given class.
Returns the orientedge object associated with the given edge.
Reuse an existing orientbasegraph.
Shuts down the database.
Gets the vertexbasetype.
Returns the orient vertextype for the given itypename.
Create a new vertextype with the specified clustering.
drops a vertex type from the graph.
Returns the orientedgetype of the edge with the given name.
Create an orientedgetype for a given class name and number of clusters.
Returns the element with the given id.
Drops an index for a given key.
Removes a background exception listener.
Fire an exception to all registered background exception listeners.
Stop monitoring.
Registers a new managed bean.
Unregisters a registered platform mbean.
fetchwritecachecounters.
Recursively fetch the system counters.
Fetch the performance counters for the given componentname.
Returns the value of the property with the given name.
Detaches an object from this one.
Returns the version of the given object.
Executes a command on the underlying connection.
Sets the dirty attribute of the specified object.
Unsets the dirty state of the specified object.
Returns a set of all known index types.
Get all available index engines.
Get the list of missing nodes.
Gets the conflicts responses.
Returns the index of the group with the largest size.
Attempt to compute the quorum response.
Returns a list of received responses.
Returns the cached oexecutionplan for the given statement.
allowsindexedfunctionexecutionontarget.
Returns the library for the specified language.
Release a databaseengine pool.
Gets the next position in the file.
Update the size of the bag.
Returns the value at the given index.
canbeusedbyorderbyafterfilter.
Returns the index of the first occurrence of itofind within the specified string.
Jumps to the next non - whitespace character.
Jumps from icurrentposition to imaxposition.
Sets the fetchplan.
Enqueue a pair record.
Cancels the given repair record.
Enqueue a cluster to be repaired.
Returns a map of alias - > set of all the dependencies of the given pattern.
Creates a new POJO object of the given class.
Registers a collection of entity classes with the given classloader.
Recursive method to register all entityclasses of aclass.
Set the entity manager class handler.
Acquire a database from the pool.
Get the number of available connections to a user.
Acquire a database from the pool.
Execute cluster.
Lookup an iterator for the given class using the current class loader.
check cache memory configuration
Convert a jsonobject to a graph
Convert a jsonobject to an edge.
Convert an element to a graphson object.
Create an objectnode from a graphson element.
Executes a import job.
Returns the current status of the job.
Returns a map of the active datacenters and their servers.
Separate the algorithm from the string str_.
Create an osymmetric key from a keyconfig object.
Load an osymmetric key from a file.
Create an osymmetric key from an inputstream.
Encrypt the given bytes using the secretkey and transform.
Save this key to the given outputstream.
Save this credential to a keystore.
set child context
Adds an object to the result set.
getvalueasobjectormap.
Authenticates the user using the given credentials.
Get a value from a map.
return reusedrecord
MOVED_FIELD_NUMBER = - num_ ;
Gets the transaction graph.
return g ; }
Sets up the database pool.
Gets the property.
Stop a transaction.
get next token.
Returns the token with the given index.
Returns an iterable of all vertices connected to this document in the given direction.
Removes this vertex from the graph.
Adds a new edge to the graph.
Add an edge to the orientedge.
Gets the connection class.
Gets connection.
Processes the brokenrids.
getconsolemethods.
executes a task on a local node.
Returns the number of nodes in the inodes collection that have a status in one of the given
Wait for next retry.
Gets the argument at the given position.
Returns the number of parameters with the given names.
Connects to the server with the specified username and password.
List all available databases in the system.
getserverinfo gets server information.
Check if a database exists.
drop a database.
Freeze a database.
Release a database.
Returns the status of the cluster.
Gets the current graph from the database.
Parse retry.
Synchronously saves a record to the database.
Deletes a persistent record.
Gets the authentication header.
Authenticate with the server.
Returns true if the user is authorized to execute the given resource
Shutdown the server.
Method to adjust line and column numbers for the start of a token.
Set a bucketpointer at the given offset.
Get the bucketpointer at the given offset.
Ends the current atomicoperation.
Acquires exclusivelock but does not wait for the operation to complete.
Changes the maximum amount of memory in the readcache.
Listen for connections.
Read parameters.
Shutdown the log manager.
Adds an item to the cache.
Removes the entry with the specified key from this map.
Acquires an open occlusion entry.
Gets the value associated with the given key.
Clears the contents of this map.
Closes the given key.
Allocate empty read buffers.
Drains the buffers after a write has completed.
Drains the read buffers for the given entry.
return 0 ; }
Find the closest power of two to the given value.
Process a push request.
Convert the ikey to a string or enum.
Convert all of the underlying values to the enum constants.
Gets the obinaryserializer.
Initialize the shutdown queue.
Returns the engine with the given name.
Add a new state to the readers state list.
Authenticates a user using an authentication token.
creates the metadata for the identity class
Attempt to acquire a readlock.
Gets the vertex in the given direction.
Returns the id of the element.
Sets a property on the current graph.
removeproperty removes a property from the graph.
Deletes all contents of the bucket.
Delete the bucket.
Ends the importer.
Create a new vertex in the graph.
Parse the strategy keyword.
getpositionsfromembeddedcollection.
Executes the oCommand.
Checks if the given fieldvalue is linked to this cluster.
Fills the given orecord with the given values.
Sets the version of the given orecord.
Returns the type of the given record.
Initialize the distributed database instance.
Prints the stacktrace of an exception.
Convert link to record.
Register a command.
Create server user configuration object.
Analyzes a single condition and returns a list of the results.
Create an indexed property from a filter condition.
Attaches all fields of the given object to this one.
gets the class from the index.
return currentvalue ;
Truncates all clusters and indexes.
Adds an ibaseclass to this class.
Adds the polymorphicclusterids to the indexes of this class.
link to stream oidentifiable.
Release an opointer.
Checks if there are any memory leaks.
Clears all pointers from the pool.
Convert a big endian 8 - byte to an int.
Called when a database is opened.
installclustersofclass.
Dump the current status of the servers.
Returns the index of the first object in the array of the given comparable object.
Returns the index of the object in the array or - 1 if not found.
getinvolvedclusters.
Handles the result of a search.
gettemporaryridcounter.
Reports a tip to the user.
Parses the fetchplan keyword.
Parse the keyword nocache.
Optimize sort boolean.
Returns the status of this batch.
Execute the odbc command.
Handles a JVM error.
putindexvalue obaseindexengine. validator for key and value.
Rollback a single microtransaction.
Executes the given command.
return id ; }
Sets the property.
Execute the CREATE CLASS.
Executes the INSERT UPDATE or DELETE statement.
Deletes a record from the database.
Calls the registered hooks for the given id.
Delete a record from the database.
Returns the number of instances of the given view.
Returns the number of instances of the given class.
Activates this document on the current thread.
Register an encryption instance.
get the relative index for the given position
Parse an optional word.
Parses the next word.
Parses the next set of characters.
Parse an optional keyword.
Checks if the given character is part of the separator string.
Execute a command against the database.
Clear configuration files.
Get the current position in the buffer as a byte array offset.
Extract the value of the token from the request.
Acquire an access token from the OAuth2 server.
Copy the access token from the current security context.
Returns true if more characters are available.
Reads a line from the standard input.
Skips over the given number of bytes by reading from the underlying stream.
Ensures that the offset and length are within the arraylength.
Swaps the elements of the two specified swapper objects.
MurmurHash3 128 - bit hashing for 32 bit values
MurmurHash3 64 - bit
Writes a bytebuffer to the stream.
Truncate the file to the given size.
Changes the position of the stream.
nofail refreshendmetricsreporting
Awaits completion of all current tasks.
Searches the index for matches of the given query.
Finds the targets of the compaction candidates.
Delete snapshots.
Returns the hash code for the given field.
Removes all references to the outside closure of the referenced schemas.
Builds the announcement metrics.
Called when a cycle is completed.
Read headertags.
Extracts the recordprimarykey from the given object.
Clears all bits in this bitset.
Reads the ordinals from the given datainputstream.
Estimates the size of this sparse bitset.
Gets the field value.
Copies length bytes from src to dest
Copies length bytes from srcpos to destpos.
segmentedbytearray compareto with rangestart.
Copies length bytes from src to dest starting at srcpos.
Copies length bytes from srcpos to destpos in an ordered manner.
Reads a sequence of bytes from an inputstream.
Writes the contents of this segment to the given outputstream starting at the given position.
Ensures that the segment at segmentindex has enough capacity.
Returns the position of the given fieldname.
Calculates the summed upsizes and total number of selectbuckets.
Checks if a dataset has any collections.
Generates all the files in the given directory.
Generates the files for all primitive types in the dataset.
Returns true if the given ordinal matches any of the given keys.
Returns the record key for the given ordinal.
Create a field path for a primary key.
Create a field path for a hash index.
Puts an object into the set.
Initializes this object s fields.
Returns true if this trie contains the given key.
Add a field to the specified type
Returns a list of schemas in dependency order.
initwithnextmajorversiondefaults_v3
Returns the value of the segment at the given index.
Find matching records.
Find records that match the given criteria.
Set the element match paths.
Sets the elementkeypaths.
Restores from the last state.
Run the cycle.
Excludes a key from this index.
Excludes all referenced objects from the graph.
Writes a blob header to the output stream.
Calculates the type metrics.
Write the contents of the fielddata array to the given buffer.
Write a fixed - length integer to the given bytedatabuffer.
Writes a fixedlength long to the given bytedatabuffer.
Return an ordinal to the pool.
Sorts the elements of this vector in ascending order.
Hashes a key with a field type.
Returns a hashcode for the given key and fieldtype.
Resizes the storage if necessary.
Finds the free ordinal for the given preferred one.
Prepares this bucket for writing.
Compares the given serialized representation with the given key.
Grows the keyarray by a given size.
Rehash previously added data.
Create an empty key array.
ismatchequal returns true if two pathfindings are equals.
Attempt to find a match for the given key.
Returns a new readstatehelper with the current engine and the pending engine swapped.
Returns the number of elements in the hashtable.
Runs the compaction cycle.
Writes a snapshot of the current state to the given outputstream.
Calculates the delta and writes it to the given outputstream.
adds schemanames to schemanameset if not primitive or collection
Normalize fieldpath to parameter name.
Rebuilds the hashindex.
Find the matches of the given query object.
Trigger an async refresh with a random delay.
Triggers an async refresh with a delay.
Adds a new typediff to this one.
Writes an integer to the outputstream in little endian order.
Write an integer to the byte array starting at the given position.
Reads a vint from the given inputstream
Reads a long from an inputstream.
This method is called internally by the constructors of the viewgroup.
Refresh the size of the loading views.
Update the ui formode.
Handles a pull event.
adds a new fact to the grammar
Add a set of facts to the rule.
Create a new rulebuilder instance.
Create a new instance of the goldenrule rulebuilder.
Create a new rulebuilder instance with the specified facttype.
Returns a new rulebuilder instance with the specified result type.
Factory method for creating a new givenrulebuilder.
Create a new auditablerule with the given facts.
Follows the rules of this builder until all rules have been matched and the action is called
getruleinstance.
Gets the annotated field.
Gets the annotated method.
Get an annotation from a class.
Registers an auditable rule.
Update the status of a rule.
Get a map of all pending rulestatuses in the system.
creates a new rulebook with the specified resulttype
Add an action to the rule.
Add an action to the current rule.
Resets the default value.
Create a new rulebook rule with a new facttype.
Gets the pojorules.
Read an empty line or end table.
Convert a list of services to an array.
getportsfrombuildconfiguration.
Extract the ports from the configuration file.
Parses a portmapping string.
add port to list if not null
Shift a list of ports or null if empty.
Add missing service parts.
Appends an imagestream resource to the given file.
Compares two ports.
Convert a service name to a port or system property.
getservicehostandport.
Put if absent.
Merge the given map if absent.
Merges two maps.
putallifnotnull.
Waits until the pod is ready.
Validates a Kubernetes ID.
Converts an object to a list of hasmetadata.
Gets the resourceversion.
Checks if a pod is ready to run.
Gets the current context.
Checks if the listbuilder has a route with the given name.
Checks if one of the given paths has a resource.
Read and enrich a fragment from a file.
Convert a map of envvars to a list of envvars
Merge resources.
Merge maps and remove empty strings from original map.
Checks if a podspec has local customisation.
Reads a configuration file.
Add port if valid.
get dockerjsonconfigstring.
Lookup plugin configuration by system and id.
Lookup a secret configuration by its identifier.
Downloads the given URL to the given file.
Compares two version strings.
Blend profile with configuration processorconfig.
Lookup a profile by name.
Read a profile from the classpath.
Returns all profiles with the given name from the classpath.
Find profileyaml.
Gets the metainf profile paths.
Convert a yaml inputstream to a list of profiles.
Gets the imagepullpolicy.
Checks if is openshiftmode.
Gets the replicacount.
Returns the first child element of the given element with the given name.
Installs a template if not already installed.
Removes all tags with the given name.
Creates or updates a namespace.
Apply a project to the server
Processes a projectrequest object.
Returns the namespace of the given entity.
Handles an application error.
Create the namespace items.
Populates the given kuberneteslistbuilder with namespace information.
Gets the environment variables.
Returns the number of seconds of a duration.
Converts a duration string into a number of nanoseconds.
Scans the build output directory for files that match the given patterns.
disable openshiftfeatures on the applyservice
Checks if a service has an ingress rule.
Parses the given mapping file and returns a map of kind - > scannedfiletypes
Returns the default iconref.
Recursively copy appconfig files from appbuild directory to appconfig directory.
Gets the properties resource.
Gets the springboot version from the given maven project.
Run each enricher in parallel.
Get the raw configuration map.
Flattens a map into a linkedhashmap.
Gets the singleton template.
return null ;
Returns the value for the given key or the given default if no value is defined.
Get the configuration map for the given name.
Prepares a list of processors.
addfrom builder.
getfrommodedefault.
Get the image name.
Get registry.
Returns true if the server is online.
Returns the external service URL for the given servicename.
Returns the boolean value of the given property from the global configuration or from the system properties.
Create jestclient.
Create an internal node.
Scans the classpath for plugins.
americanexpressrewardsbalance from json string
Calls the getrewardsbalance API.
Parse paypalpaymentresource from json string.
Performs a HTTP GET at the given path.
Perform an HTTP POST at the given path with the given data.
Parses a venmoconfiguration object from its JSON representation.
Collects device data from a braintree fragment.
Use this method to collect device data from a Braintree fragment.
Collects PayPal device data.
getpaypalclientmetadataid.
Checks if a signature is valid.
Get the optional string value associated with a key. If the key is null or the value is
Parses a list of paymentmethodsnonces from a json string.
getbrowsercheckoutconfig.
getbrowserbillingagreementconfig.
Performs a HTTP GET request.
Asynchronously sends a POST request to the specified path with the specified data.
Sends a POST request.
Approve payment.
Add a listener to this braintree.
Removes all listeners from the braintree.
Request a Billing Agreement.
Processes the result of an activity.
Parse the paypalresponse from the request.
Convert a list of words to a dictionary.
Removes a word from a dictionary.
Converts a sequence of koreantokens to a list of java strings.
Extracts a list of koreanphrases from a sequence of koreantexts
Converts a list of tokens to a single token.
Fetch size bytes from the given channel.
Joins a list of nalunits into a single bytebuffer.
Convert a list of joinnalunits to a list of bytebuffers.
Returns the profile for the given integer.
Computes fixed precision taps by normalizeandgeneratefixedprecision.
Read to the next markerpartial.
Read to the next marker new buffer.
Get the maximum available frame.
modify a file.
Returns the total duration of all edits of a trakbox track.
Convert a frame from trakbox to time value
Convert a timevalue to a frame.
Convert a trakbox mediatv to the edits of a trakbox
Adjusts the edits in a Trakbox to the media time of the movie.
Get the qtplayerframeno of a moviebox
qtplayertime qtplayertime string.
Convert a timevalue to a timecodeframe.
Formats a timecodetrack.
Construct a 7 - bit integer from four bits.
Set a value in a list.
Checks if the given colorspace matches this colorspace.
Returns a new size that has the same width and height as the specified comp.
Create a raw mp4demuxer.
Reads an integer from the cache.
Create a wavheader from the given audioformat and number of samples
Create a wavheader from an array of headers.
Parse amp4decoderspecificinfo.
Encodes the given symbol in the given context.
Split a track in two by a moviebox and a track.
Decodes a frame from the input stream.
Sets the endianness of this element.
Decompose the cur block from left to top by decomposing the left and top blocks
Encodes a picture into a native frame.
Returns the length of the EBML encoded value.
Returns the length of an abbreviated bit string.
Add a packet to the packet buffer.
Attempt to reposition the file by reading bytes from the buffer.
Returns the bin for the specified code point.
decodebinbypass returns the decoded code.
Goto marker bytebuffer.
Returns the sample frequency for the i th entry.
Predicts a single plane through the reference image.
Initializes the given block with the given dc value.
Multiply a block by a coefficent.
Finish the block by dividing each block by the number of blocks.
Concatenates the contents of another bitbuffer into this one.
Rewinds a 32 - bit unsigned integer to a power of 2.
Seeks to the specified keyframe.
Get the picture from the pixelstore.
return the gainchangepointid for the given lngain
Convert byte array to int array.
Convert an integer array to a byte array.
Writes samples of the given signed audioformat to the given float buffer in little endian order.
Reads samples from a float buffer into a byte buffer.
interleaves the ins buffer into the outb buffer.
Deinterleaves the input buffer into the output buffer.
Get the size of the decoded video sample.
Build the Wipemap for the given parameters.
Read an ulbatch from the given buffer.
readint32batch gets a batch of 32 - bit integers from the given buffer.
Calculates the median of three predictions.
Encodes a picture into a frame.
Compress a picture into an IDR frame.
Compress a picture into a pframe.
Returns a set of codec. id objects that are supported by this codec.
Returns a list of the codecs supported by this codec.
Add the given reference.
Deletes all the references in the queue.
Flushes the validreferences list.
Load a jni library.
Unpack library.
Delete all the temporary files in the temp directory.
Get the default layout for the audio channel.
Get the channel type from the layout at the given index.
Create a new mediapacket object.
Returns the string representation of the version information.
Get the default timebase.
Create a demuxer object.
Plays a video file.
Display a video at correct time.
Make a codecdescriptor given a codec. id.
Prints the given option to the given stream.
Register a factory for the given protocol prefix.
Generates a unique name for the given object.
Create a new mediaaudioresampler.
Returns the supported video frame rates.
Returns a list of supported video pixel formats.
Returns a list of the currently supported sample rates.
Returns the audioformats that are supported by this codec.
Returns a list of the supported audiochannel layouts.
Set the given flag on this coder.
Set a coder. flag2 value.
Get the decoder associated with this stream.
Get the current demuxer for this stream.
Returns a set of all available formats.
Create a filtergraph object.
Get the type of the filter.
Get a bytebuffer from the buffer.
Make an audioframe with the given audioformat.
Resamples a mediapicture using the specified resampler.
Validate the image.
Validate the given picture.
Get the filtergraph for this filterlink.
Get the metadata of the media.
Gets the cpuarch.
Gets the cpuarch from the given GnuString.
Get the operating system family from the given string.
Get the OS family from the given GNU string.
Plays a sound.
Attempt to load the specified library. If the library has already been loaded this method does nothing
Set the version of the given library to the given major version.
Loads a candidate library.
Initialize the search paths.
return true ; }
Deletes the object.
Get the stream at a specific position in the video.
Get the current muxer for this stream.
Create a setscripttransaction object
Decode a base - 64 encoded string.
Generate a random seed string.
Get a transaction by its txid.
Returns up to the specified limit number of transactions at the given address.
Request a list of transactions from an address.
Returns a list of blockheader objects for a range of blocks.
Get block by signature.
Sends a request and returns the response.
Create a new script transaction and send it to the connected privatekeyaccount.
Compiles a script.
Writes an array of primitives to the stream.
Flushes this buffer to the underlying stream.
Writes an object to the given memory address.
reads the class information from the last direct class
Writes an object to the fst buffer and copies the contents of the object into the result
Sets the mmfdata.
Gets the specificity.
Resizes the store to the given required size.
Remove the given key from the set.
Writes a string in ascending order.
Set the outputstream to be used.
Creates an fstconfiguration object.
Create a new structconfiguration object.
calcobjectsizebytesnotautility computes the size of an object in bytes.
clearcaches must be called from the main thread
Returns an fstobjectinput for the given inputstream.
Reads an array of bytes from the stream.
This is a copy of the input stream.
Gets the object output.
Register multiple crossplatform class mappings.
Gets the cp name for a class.
Writes an int to the stream.
Write a raw integer to the output stream
Writes an integer to the stream in packed form.
This method is used to write raw bytes to the stream without checking for OOM.
Get a cached instance of fstclazzinfo. fstfieldinfo.
Notifies the listener that an object will be written.
Notify listeners that an object has been written.
getfstclazzinfo for a given class
Writes an array to the stream.
Set the contents of a string.
Writes a primitive array to the underlying stream.
Finish the change tracking.
Create a snapshot of the changes from the origin.
registerobjectforwrite is called when an object is to be written to the stream.
Writes an object to the underlying stream as a byte array.
Reads an object from the input stream.
Reads a byte array from the buffer.
Reads an int.
Remove len bytes from the head of the queue.
Sets if the threadpool is enabled.
Starts the embedded cassandra if it is not already started.
Clean data embedded with cassandra.
Copies the given resource to the given directory.
check if a remote port is taken
Returns an empty subscriberstate.
Get all onnxop descriptors from the classpath resource.
Calculates the shape of the output of this function.
logical or of two complex numbers.
Performs a logical AND operation on an indarray.
Performs a logical AND operation on an array along a given dimension
Performs an or operation on an array.
Apply where.
Returns the first index of the array that evaluates to true for the specified condition.
Create a flatproperties representation of this object.
Convert a flatproperties array to a functionproperties object.
Builds a flatproperties vector from a collection of properties
Set the throwable.
Set the throwable iff the previous throwable was null.
Merges two lists of doubles.
Returns a list of lists where each list contains a variable number of elements.
Convert an onnx datatype to the corresponding nd4j type.
Shutdown the server.
Returns the architecture of the current device.
Convert a column of a convolution.
pooling 2d function.
Construct a compression descriptor from a bytebuffer.
Splits the given list into batches of the given size.
Validates that a concat operation is valid for the given dimension and arrays.
Sets the type of the databuffer.
Returns an array containing elements of the specified range of values.
Convert a collection of matrices to a flattened version of the original.
Computes the bilinear product of two matrices.
Create a complex number from the given data.
Returns the ones containing the given complex value.
Create a one - dimensional complex valued ndarray of the given value
Returns true if the last synced time is greater than synctime.
Subtracts c from this icomplexnumber and stores the result in result
Calculate the arc tangent of a complex number.
Rounds a complex number down to the nearest whole number.
Negate a complex number
Returns the absolute value of a complex number.
Raises a complex number to a power.
Binarize the feature matrix by a given cutoff.
Samples the dataset.
Returns the estimated memory footprint of the model
Convert a throwable to a string representation.
Returns the simple hostname portion of the given string.
Convert an array of strings to a string.
Converts a byte array to a hexadecimal string representation.
Returns an array of strings from a string.
Splits the given string around matches of the given separator.
Splits the given string around matches of the given separator.
Find the next separator in the given string.
Escapes all HTML characters in the given string.
Joins the given strings using the given separator.
Convert a string to CamelCase.
Get the stacktrace as a string.
Inverts an indarray.
Returns the nth element.
Is actual on host side boolean.
Is actual on device side boolean.
Create a pair of databuffer and long array for the shape
Create a pair of databuffer and stride information.
Test to see if a databuffer is a vector
Get the order of the elements of an array.
Returns the offset of the given indexes in the given array.
Convert an array of indices to an array of indexes.
getshort gets a short from the half indexer.
Reallocate the databuffer to the given length.
Copies atstride bytes from one buffer to another.
Get the constant buffer for the given array.
Returns the URI of the Kafka connection.
Raises each element of an indarray to the power.
Log of an indarray.
Maximum array element - wise
Returns the maximum of the two arrays.
Element wise minimum function of a vector
Minimum of two arrays.
stabilize the given indarray using the given stabilize method
Exponentiation of 1 - dimensional array.
Log1p function of an indarray.
Prepare the bounds for the given x.
Advances to the next dataset.
Builds the allocationshape from the given databuffer
Checks if the given name exists in the given path.
Reads data from an objectinputstream.
Sweep the tail of the heap.
Create an indarray from a numpy pointer
Create a numpy array from a file.
Allocate a pagedpointer using this object s databuffer.
Attach a new object to this manager.
Checks if the server is started.
Executes the given op.
Flush queue blocking.
Gets the inputstream.
Returns the device associated with the specified thread.
Attaches a thread to a device.
return device ; }
Gets the current operating system name.
Calculates the architecture of the current machine.
method to publish an array of objects to the message bus
Create a new databuffer of the given type.
Intercept the data type instruction.
Adds two complex numbers in - place.
Processes incoming messages.
Avg pooling 3d operation.
Depth - wise convolution.
Resets the statistics.
Returns the class name of the given op.
This method stores and allocates a new array for this variable.
Returns the shape of the array.
Evaluates the variable.
Compress a double array
Inverse of a complexndarray.
Center the complex array around the given shape
Truncate a complexndarray to the given dimension.
Pads the given complexndarray with zeros if the shape is the same as the given target
computes the element wise maximum of the elements of an array.
broadcast an array to all devices
Processes a single row aggregation message.
Gamma function.
Euclidean norm of x.
Recursive binary search.
Returns the exponential of mc.
Raise x to y.
Returns x raised to the power of n.
Returns the hyperbolic tangent of x.
hyperbolic sine of x.
Returns the hyperbolic cosine of x.
Multiply x by d and return x.
Return x scaled to the precision of mc.
error to prec.
Sets the function instance for the given id
Get the inputs for a given function.
Update an array for a variable name
Adds a new shape for the given variable name
Associate an indarray with a variable
Gets property for function.
adds a property for the given function for the given property name
Add an outgoing function to the functions list
Adds the arguments for the given function.
Checks if the given function has incoming arguments.
Evaluates the pipeline.
Create a new one - valued variable with the given shape.
Returns a new sdvariable with the specified name and input variable.
Returns a new sdvariable with the specified name filled with zeros from the input variable.
Remove an argument from a function.
Sets the gradient for the given variablename
Computes the average pooling for a set of variables.
Return the grucell output variable.
Execute a list of differentialfunctions
Create a while statement.
Execute the given function.
Execute a list of cached functions for the given functionname
Returns the result of the last execution of the backward pass.
Add a variable as a placeholder.
Allocate a new pointer.
Returns the lengthfordtype of a databuffer.
Get the name of the databuffer type.
Get the databuffer. type from the context
Returns the opcode number of the given operation.
Destroy all workspaces for current thread.
Print the allocation statistics for the current thread.
Multiply a vector by a scalar.
Computes the Z - dimensional discrete Hartley Transform.
Threshold decodes the encoded array into the target array.
Gets the nodename.
Perform a scalarop on the given dimension.
Asserts that no workspaces are currently open for current thread
Negative loglikelihood.
Request a tick.
Request toe waiting.
Release toe pointer.
return null ; }
Copies this message from the clipboard to the originator.
Initialize the curr dataset from a list of examples
Initialize hostcollector threads.
Returns the device pointer for the given databuffer
Synchronize the hostdata with the databuffer.
Applies the update to the given gradient.
Synchronizes the given allocationpoint to the host. If the given point is not a constant
Create an indarrayindex from an indarray
Gets properties for function.
Checks if any of the arguments have placeholder inputs.
Computes the difference of two vectors i_v1 and returns the results.
Formats the given indarray.
Imports a given graph into the model.
convert a complexndarray to a blob
loadcomplex loads a complex ndarray from blob.
save a complexndarray to the database
Copies the real to the given array.
Copies the imaginary part of this complex number to the given array.
Performs an epipolar operation on the linear matrix.
Assigns the elements of another complex ndarray to this one.
Returns the rows of this matrix at the given indices.
Putrow icomplexndarray at row
Puts a column of the ndarray into this matrix.
Subtraction of two complexndarrays and store the result in result
Add two complexndarrays together.
Subtract a complex number from this complex number.
Adds two complex numbers and returns the result.
Assign a scalar value to this matrix.
Returns the complex ravel of this matrix.
Compute the eigenvalues of a complex matrix.
Computes generalized Eigenvalues of two matrices.
Computes the element - wise maximum of the vector elements.
Copies the content of two complex numbers into this matrix.
Computes the product of a complex number by a scalar.
Processes incoming messages.
Returns the number of non - zero entries.
Do the actual reduction.
Returns the no - arg constructor of the given class.
getconstructor.
Invokes the given methodhandle with the given parameters.
Get the first assignable annotation of the given type.
Get a declared annotation from the given class.
Returns true if an annotation of the given type is declared in the given class.
Create an instance of the given interface with the given result.
Loads the given entity.
Save the pojo to the database.
Create a proxy for the given raw service.
Gets the metadata for the given kind throwing an illegalargumentexception if no such metadata exists.
Query for keys only.
Performs a query and returns the results as a HybridQueryResult.
Query normal.
Query for entities using a projection query.
Counts the number of results that match the query.
Safely partition an iterator.
Loads the specified keys from the database.
Returns a message with the given path appended.
Create a key from a POJO.
Compares two keys using the system identity hash code.
Converts a raw Google Cloud Key into a Cloud Key.
Converts a typed key to a Cloud Datastore key.
Gets the kindhere.
Is missing type parameters boolean.
Returns true if subtype is a supertype of supertype.
getdirectdirectsupertypes.
Captures the given type.
Gets the translator.
Gets the populator.
Returns the index instruction of the given class.
Checks if the method parameter is of interest.
Get all declared properties of the given class.
Returns the metadata of the key.
return sv ; } return null ; }
Executes pending translations.
Pending fetch.
Recursive method to add indexed subclasses.
Registers a subclass of the given classtranslator.
Gets the collection componenttype.
getmapkeytype.
Create a forwardpath from a given path.
Returns the final path from this node to the given node.
Returns the path as a string.
Returns the number of elements in this path.
Puts a collection of bucket updates into the cache.
Empty the specified keys from the cache.
cacheputifuntouched.
Gets all of the values from cache.
Gets the keys of the given buckets.
Sets the key.
Sets the id of the given pojo
Gets the parent raw.
Registers a subclass of the given typekey with the given context.
Checks if two types could have common subtype.
Transform owner.
Get an annotation of the given type anywhere in the hierarchy.
Add all of the mappings from the other session to this one.
Load a value from the round map.
Executes the next round.
Translates the raw result into the raw result.
Fetches a set of entities from the datastore.
Loads an entity from the datastore.
Creates a raw key with the given parent key kind and id.
Gets the raw value of a key.
Gets the id or name value of a key.
Parses a key from its URLSAFE representation.
Tranactorno objectify impl.
Performs the given work on the given parent object.
Perform a work once in a transaction.
Checks if the given value matches any of the conditions.
objectify ofy
Create a new asyncdatastore instance.
Gets the metadata for an entity.
Allocate a keyrange.
Create a new objectify and add it to the stack.
Pops the last object from the stack.
homogenize indexes.
Create a new reference to the given value.
Returns the value associated with the key throwing an exception if there is no value associated with the key
Add a new value to the list
Returns true if the future is done and should be triggered.
Generate ifconditions.
Executes the engine and waits for all deferred tasks to complete.
Get a container by type and path.
Get or create a stat for the given kind.
Unwraps a throwable and throws it.
Get or create a translator.
Get the root translator for the given type.
Create a translator for the given typekey.
Loads the property from the container.
Gets the property from container.
Sets the value of the property of the given POJO.
Persists the property.
Returns the property value for the given pojo.
Write all extensions of the given message.
Writes a content category.
Writes a list of contentcategories to the json generator.
Processes the given snippet.
Return an iterable of bids from a bidresponse. Builder.
Gets the bid with the given id from a bidresponse. builder.
Applies the given updater to all the bids in the given response.
Removes all bids in the given bidresponse. builders matching the given filter.
read all extensions of the given message.
Returns true if the current token is empty or null.
Register an extendablebuilder for a given message class.
Register an extension writer for a particular field.
Processes the snippets from the response.
Processes the fields of a snippet.
Applies the updater to each element of the iterable.
Filter a list of objects.
Gets the current name of the parameter.
Start an object.
Start array.
Peeks at the next token but does not change the parser state.
Writes an intbool field to the JSON generator.
Writes a list of strings to a JSON stream
Writes a list of integers to a JSON field
Writes a list of longs to the JsonGenerator
Writes the given protocolmessageenums to the given jsongenerator.
Resolves the given target against the given base URL.
Prepend str_ to target if target is not already present.
Returns the host segments of the URL.
Returns the host portion of the URL.
Gets the page.
Load a list of strings from stormconf
Extract the configuration element from a map.
Get the protocol for the given URL.
Generate warcinfo.
Extract refreshurl.
getmetaforoutlink.
Filter a metadata object.
add a new scheduledurl to the queue
Cleans a field name.
Gets charset from bom.
getcharsetfromtext.
getcharsetfrommeta.
sniffs the given content for the given clue.
Set a new value for the given key.
Get the first value for the given keys.
Get a list of cookies from a list of strings.
Compares cookiedomain with urlhostname.
Returns the cache key for the given URL.
getrobotrulessetfromcache.
Extract the metatags from a documentfragment.
Received an ack from the producer.
Filter a URL.
Filter the given string according to the rules.
Reads the rules from the given file.
Processes the queryelements of the URL.
Construct a navigationfilters instance from stormconf
Add a recordformat to the multiplerecordformat.
return 0 ;
return true ; }
Get parse filters from stormconf
Append a node to the current node.
Receive notification of a processing instruction.
Adapt a SAX2 comment event.
DTDHandler. startDocument DTDHandler. endDocument
Returns the value of the url field in the tuple.
Trim the text if it is longer than maxlengthtext.
Returns the duration of a custom interval for the given status.
Construct a urlfilters instance from stormconf
Set the wheel item count.
Given a size and a measure spec return the size and state.
Set the empty item drawable.
Set the angle of the wheel.
Update the selected position.
Invalidate an item drawn at the given position in the wheel.
Convert raw position to wheel position.
Update the view if the angular velocity is greater than the current velocity.
Get the contrast color of an entry.
Clamp the given value to the given upperlimit.
writecoveralls writes the JSON file to the given writer.
getdataasbytebuffer.
Set the string value of this matrix.
Make a one - dimensional string array.
Make an arraychar from a string.
Make a new arraychar from a string array.
Make an arraychar from a string array.
Gets the forecasttimeintervaloffset.
Shows the sprite sheet.
Notification that the frame is not iconified.
Make an estimate of the size of a grid.
Main method to run the scan.
Create a new unitname with the given name and plural form.
Create a new unitname with the given parameters.
Returns the plural form of the given name.
Returns true if this interval includes the given date.
Intersect this range with the clip.
Extend this daterange by the given daterange.
Extends this interval by the given date.
Sets the start of the arc.
Sets the end of the timeline.
Sets the duration of the track.
add a mapbean to the menu
Prints an error message. The stack trace will be printed.
Returns the name of the node.
Returns a string representation of the parameters of this location.
Creates a new filedsp object from rawdata.
Compute bounds.
Synchronise the min and max sliders and duration field with the current values of the
Compute the unlimited chunking for the list of dimensions.
Registers the given path as a watcher.
Process events.
Wrap a netcdfdataset.
Featuretype ok.
Find the featuretype of a given NCDF file.
Converts a catalog to HTML and writes it to the response.
Converts a catalog object to an HTML catalog name.
Returns the user CSS.
Get the user s head.
Makes a dynamic catalog object.
Add globalservices to the catalog
Initialize the global credentials provider and user agent.
Performs an HTTP GET with the specified session and urlencoded returning the result as a string.
Performs an HTTP PUT with the given urlencoded content.
return null ; }
return null if no catalog found
Extracts geospatial information from a gribcollection.
Gets a single dataset or by type name.
Compares two vertcoordvalues and returns true if they are nearly equal.
Create a new unitid.
Parse an attribute string and return an attribute object.
Read the top of the stack.
Convert two shorts to an int.
Convert a byte array to an int.
Calcualte a date from juliandays and msecs.
Makes a valid netcdfobjectname.
Checks if is valid netcdf3objectname.
Read the data for a single section of a record.
Read a subset of the records in a section.
Fills in any non - record variables.
Constructs a time struct from this calendar.
Makes a timestruct from the given calendar.
Returns true if the given string contains at least one timetemplate.
Add a serversidefunction.
Get the named booleanfunction.
Get btfunction by name.
Load a new function.
Gets the name of a given level.
Gets the description of the level.
Gets the levelunit.
Get the projection type of a griddefrecord.
Checks if a level is a vertical coordinate.
Checks if a gridrecord is a layer
Make a coordinatetransformer for the given dataset.
Create a dummytransformvariable from a coordinatetransform
return a projectionimpl for the given GCT.
Entry point for the example.
Save the current state of the split window.
Returns a copy of this chronology with a different time zone.
Writes a count to the underlying stream.
Writes an array to the output.
Writes a byte array to the output.
Outputs a range of bytes.
Finish initializing.
Obtains a calendardaterange from a daterange.
Creates a new GRIB2GDs instance from the given template and data.
Parse a dds - parse text.
Parse a DAP string into a number of decimal or hexadecimal digits.
Flip the grid header.
= null ; }
Main method for testing this class.
writes a constraint to the output file
Write the headers and ss to the output file
Write the list of operations to the file
Walks a directory and its subdirectories calling the given closure for each file matching the given filter.
Scans a logfile passing each log to the given closure.
get gridpackingtype.
Find a grid by it s parameter.
DM_rpkg documentation.
unpacks the data from the ipk.
DP - Urb.
Read the data from the grib1 file.
Unpack grib2 data.
Print grids.
get next byte.
Obtains a calendardate from the given calendar.
Creates a new calendardate from the given java. util. date.
Obtains a calendardate of the given msecs.
Obtains a calendardate from the given calendar using the given msecs.
Parses a string of udunits to a calendardate.
Returns the difference between two calendardates in the specified field.
Creates a new cdmarrayatomic object.
Set up the handler.
Escapes a string so that it can be used as a string literal.
Creates a list of slices from a list of ranges.
Unwrap a netcdffile.
Returns true if a list of dimensions contains a variable length dimension.
Compute the shape of the effective matrix.
Add the given date to this date.
Multiplies this unit by the given unit.
Divide this unit by the given unit.
Divide this unit by another.
Raises this unit to the given power.
Convert this unit to a given derivedunit by multiplying by the given amount.
Convert an array of floats to an array of floats by multiplying each element by the
Convert the value from this unit to the given amount using the derivedunit as the base
Returns the canonical string representation of this unit.
Read data from this vindex.
Reads 2D array from the vindex.
Flatten a stationtimeseriescollection from a list of stationnames.
Find an invservice by its name.
Returns the size of the gate for the specified datatype.
Returns the start of the first gate of the specified datatype.
Get the number of gates for a given datatype.
Method to write XML data to outputstream.
Returns the preferred layoutsize of the given target container.
verifydescantdataset.
generateproxydsresolvercatalog.
Obtains an instance of the calendardateunit class with the given calendarname and udunit
Returns a new instance of calendardateunit configured with the specified calendar and the specified udunit
Obtains a new calendardateunit from a calendarperiod and a base date.
Returns the baseunit as a quantitydimension.
Checks if the file is a valid one.
readdata1 gets the first section of a dataset.
Read an array of ints from a layout.
Reads a 1 - dimensional float vector from the input stream.
Calculating elevation from an angle
Calculate the step of a histogram.
calc the az value
calcdata calculates the coef of the data.
Calcnyquist for the Nyquist model
Make a verticaltransformer for the given dataset and time dimension.
Sets the debugflags.
Set if the index should be extended or not.
Reads a XYZ record from the spobject.
Checks if a coordinate is missing in a coordinate system of a grid variable.
Gets the latlonboundingbox attribute of the XY plane.
Finish the sequence.
Tabs a string buffer with a character at a specified tabstop.
Pads the given string to the given width ensuring that the string is of the given width.
Returns the string representation of the given integer padded with zeros if necessary to the given width.
Returns the string representation of v padded with zeros.
Format a bytesize into a human readable string.
Print the given double and the given sigfig to stdout.
Prints a 2 - D FRAC diagram.
Returns the string representation of the given shape
Finishes the current slice.
Converts the current constraint to a constraint string.
Composes two slices.
Maps a long integer to a slice.
Dump the contents of a bytebuffer.
Get the earthellipsoid type for the given name.
Get the earthellipsoid of a given epsgid.
decode vlendata.
Extracts a list of URLs from the given URL.
gettextcontent gets the text content of a URL.
Filters out tags from the input stream.
Reads a variable from this stream and writes it to the given byte channel.
Adds the given attributes to the end of this list.
Remove the given attribute from the list.
Remove the attribute with the given name ignoring case.
Returns the offset of each time unit in time units.
Adds an actionsourcelistener to this listener.
Get the standard date from the text.
Gets the standard or iso date from a string.
Gets the dateorigin.
Returns the current date.
Convert a time value to a date.
Makes a time value from the given date.
Convert a double value to a standard date string.
Gets the grid spacinginkm.
adddimensionstonetcdffile.
Add a coordinate axis to the dataset.
Generate a projection for a given netcdffile.
addgdsparams.
Adds a coordinate system variable to the dataset.
makelc.
Make the latitude and longitude projection of the grid.
Makes the Mercator from the latin value.
Set the dx and dy parameters of a grid definition.
parse a single dataset element.
Reads the metadata for a dataset from a URL
return 1 ;
Checks if the file is a valid file.
Writes a byte array to the underlying stream.
Sets the clearname.
Returns the name of the coordinate of a given axistype
Get the name of the co - ordinate of a particular dimension
Builds the response as an XML string.
Builds a dapexception object.
Break up the levels of a variable.
Make a z - axis name from a list of values.
Create new variables for the given ncvar and the new dimensions.
maketimecoordaxisfromreference.
Checks if the given value has the given bit set.
Writes the contents of a file to a file.
Wrap a netcdfdataset if it is not enhance needed.
Opens a file from the given location.
Clear the coordinate systems of all variables.
Find the coordinate axis of the specified type.
Find the coordinateaxis with the given full name.
Find a coordinatesystem by its name.
Find a coordinatetransform by its name.
Returns true if at least one enhance mode is in want.
Sets the values of the given variable to the given values.
Sets the values of a variable.
Make an array from a list of string values.
Returns the index of this vector.
Gets an existing file or null if it does not exist.
Returns the list of features that intersect the given bounding box
Discretizes the data.
Adds all the data from the given metadata object to this one.
adddocumentation adds a new invdocumentation with the given type and content to this inv
Remove the invdocumentation of the given type.
Returns the maximum number of bytes in the segment.
Returns true if the given NCDF file is mine.
Break up a string into a list of strings.
Build the convention attribute.
Builds the coordinate systems of the dataset.
Finds the coordinate axes of the variables in the dataset.
Finds all the coordinate systems in the dataset
Makes the coordinate systems of the variables in this dataset.
Makes the coordinate systems maximal for all variables in the dataset.
Returns true if the axis is a coordinate axis for the given variable.
Subset the given dataset.
Mark the topdataset for deletion and delete the filtered topdataset.
Mark a dataset as read.
initonce is called only once.
Counts the number of occurrences of the given value for the given name.
Add a name symbol and definition.
Compares two tablerows at the given column. Ignores case.
compare two booleans
Pass all reserved events to the given node.
return true ; }
Registers a class with the dap container.
This is a no - op for dsp classes.
Returns true if the given dsp class is already registered.
Unregisters a dsp of the given class.
getforecasttimeintervalsizeinhours.
Get the offset of the forecast time interval.
get the unit of the vertcoord
Alphabetically sorts the tree.
Finds a variable with the given attribute name ignoring case.
Finds a variable with the given attribute name and value ignoring case.
Returns the shortname of the variable with the given attribute value.
Finds a variable with the given attribute name and value.
Finds the first nested structure in a structure.
Returns true if the variable has an etcdf3 recordstructure set.
Get the literal value of a key.
Get a featuretype from a dataset.
Returns the variable name for a given literal or null if not found.
Get the value of the j th coordinate.
Returns the distance from the given connect to the given value. If the distance is less than the
Returns the values of all coordinates.
Plot a section of this axis.
Finds the index of the midpoint which is closer to target.
return name ; }
Add an action to the menu.
Matches a path in the tree.
Entry point to the projectionmanager tool.
Returns the index of the first occurrence of this pattern in the given data.
Add a sourcepicture to the cache.
reportcache prints out the current cache size and the current cache size.
Stop background loading.
stopbackgroundloadingexcept.
Make a GET request to a URL.
return null ; } return meth ; }
Returns the next random float of the specified basetype.
Returns the next number in the range [ min max ).
return null ; }
Get the provider for the given URI.
readstationtable.
Returns the index of the value associated with the given group.
Remove the datavariable with the given name
Meters of the cloud.
This is the main method that actually does the reading of the grid.
Set the number of colors.
calc the affinetransform
Create an instance of an authscope for the given URI.
Finish the computation by comparing the horizontal coordinates of all grids.
Returns true if this factor is a reciprocal of the other factor.
Get the catalog for a directory.
Returns the index of want in the sorted array or - 1 if not found.
readmetadatacontentfromurl.
Read metadata content.
addmetadatacontent.
validatemetadatacontent validates all the genconfigs in the contentobject.
Read a cataloggenconfig element.
Read a datasetsource element.
Read datasetnamerelement.
Read a datasetfilter element.
Read resultserviceelement.
return null ; }
Create a datasetsource element.
Create the datasetnamer element.
Create a datasetfilter element.
return rselem ;
Checks if a flag is set.
Construct a menu from a jmenu.
addparameters adds the parameters from tbl.
Makes a parameter from the given words.
return null ; }
Reads the contents of the inputstream as a string.
Read a number of bytes from the inputstream.
Replace the template at the given index with the given filespec.
Sets the name and description of the specified station.
Accept a stringbuffer.
Gets the bitmap from the given file.
Sets the netcdffile to use.
Sets the debugflags.
Parses the given name into a namepieces object.
Returns true if the given dstruct is a group.
return null ; }
Returns the shared dimension of the given dimension.
Construct dimensions from a dap array.
Checks if the dtype is an unsigned type.
readdataddsfromserver gets data from the server.
Loads an icon from the classpath.
Gets an image resource from the classpath.
Creates a custom cursor with the given name.
Reads a datafill object from a file.
Read an array filled with a given fillvalue.
Read an array filled with a given fillvalue.
Creates a primitive array of the given size for the given datatype
Convert byte array to char array using UTF8 charset.
Converts a char array to a byte array using UTF8 encoding.
Convert a byte array to a char array.
Reads a section from a section specification.
create arraystructure from child arraystructure
return the string value of a scalar
getscalarstructure gets the structure of a scalar member.
getarray gets the array value of a member from the vector.
Computes the members of a structure.
Adds a dimension to the given netcdffile.
Normalizes the given path.
Add an explicit dataset to the cache.
Adds a datasetscan to the datasetmanager.
Finish the scan.
Make the datasets.
Gets the typical dataset.
Factory method to create a new dataset instance.
This method adds a dataset to the resourcecontrol hash.
Add a point to the list of points.
Returns the upper bound of the envelope.
Returns the lower bound of the envelope.
Outputs the validation result.
Match the dataset against the dataset.
Add all station point features from a dataset.
Parses a constraint expression.
Evaluates the clauses of this parse.
Prints a constraint.
Makes amends from an OCDL file.
If the number of values in the list is the same as the number of dimensions in the list
Check if we have one of the unknown dimensions and if so set it as unlimited.
Recursive method to find a nested group.
Returns the content of the xlink.
Returns the standard URI of this catalog.
Set the projection class
Adds a layout component to this layout.
Invalidates the bounds of this layout.
Removes the given component from the layout.
Returns the minimum dimensions for this layout given the components in the specified container.
Layout a container.
Checks if the given coordinatesystem is a radial coordinate system with radial and elevation axis.
Returns the maximum radial.
Longitudes and Latitudes are in degrees.
Return the location of a point on the Earth s surface.
Calculates lamda_geos and theta_geos for the given goes.
Returns the sweepangleaxis of a given scan geometry.
Convert a sweep angle axis to a scan geometric coordinate.
Set the coordinate runtimes.
Method to write a pointobsdataset to a file
RewritepointFeaturedataset Method.
Returns the arraysequence of the member with the given name.
Returns the full name of this node.
Returns the uniqueid of this user.
Returns the first access of the specified type or null if none found
Returns the invdataset with the given name.
Gets the parent catalog.
Get all invmetadata of a certain type
Find an invservice by its name.
Gets all variables for a given vocabulary.
Find all the catalogrefs in a list of datasets.
Escapes a string so it can be used as a URL path.
Add a stagger to the given array.
Interpolates an array with extrapolated values.
Computerho distance.
Returns a string representation of the detailinfo.
Makes a structure from the given partname and the given dimensions.
Make a missing variable.
Make a parameter variable.
Add the global attributes.
Returns the size of the variable with the given name.
Get a 1d array of the given type and length.
Follower transition from current state to next state.
Produce an error string from a syntax error.
Print reduced symbol print.
Reads a DMR string.
Reads an error from the input stream.
Reads into an array of bytes. This method will block until some input is available.
Reads a header from the given inputstream.
Convert an ISO string to a date.
Read a table from a URL.
Transfer a group from one dataset to another
Get the STN file for the given location.
Attempt to open the file.
; }
Get the end index of the range.
Create the allruntimecollections.
Sets the value of the editfield.
return p ;
Computes the Ecftolla divergence.
Returns null if unit is null.
Clean the name of the given string.
Returns true if the given string is unitless.
Create an instance of the notes factory.
Gets the varid of a varnotes.
Populate this object with data from a DAS object.
find dodsv by name.
return null ; } return ddsv ; }
Find by index.
Get the parent group of this node.
Returns the i th dimension.
Returns the index of the dimension with the given name.
Returns the string value of the units attribute.
Gets the shapeassection.
Slices a dimension of this variable.
Sets the enumtypedef.
Reads an array of ranges from the current position in this file.
Reads a scalar string.
Reads an array from the input stream.
Reads a section from the file.
Writes the CDL to a string.
Returns a string representation of this object suitable for debugging.
Sets the datatype of this vector element.
Sets the dimensions of this shape.
Reset the shape of the rasterizer.
Sets the dimensions of this element.
Resets the dimensions of this group.
Sets the dimension at the given index.
Sets the cached data.
Returns a list of all dimensions in this dataset.
Set the boundingbox of the bounding box.
Finish the computation and sort the gridlist.
Get all datasets in this datasetgroup.
Returns true if the given path ends with one of the synextensions.
Opens a new CDMSP instance with the given netcdfdataset.
Builds the DMR.
Recursively builds the sequence types of a CDM variable.
Builds the dimension references for the given dapvariable.
Returns a list of enumtypedefs that match the given varenum.
Returns the core dimensions of a list of dimensions.
Reads a random dataset from a bufrfile and stores the messages in a counter.
Process a bufrmessage as a dataset.
Respond to a POST request.
Gets the affinetransform.
Return true if we want to rotate the map area
Get the area of the map
Convert a point from world space to screen space.
Pan the map by the given distance.
Zoom in or out.
Recalcs the bounds of the box.
Add a listener object.
Removes an object from the list of listeners
Send an event to all registered listeners.
Send an event to all listeners except for the source.
Prints a command to the given writer.
Print a variableif
Print a variable data section
Prints structure data to a printwriter.
Print an array in plain format.
Prints an array to a printwriter.
Writes an NCML file to a NCML file.
Read an double attribute.
Add a parameter to the coordinatetransform
return null ; }
Checks if a gridrecord is positive up.
Checks if this unit is compatible with the given unit.
Returns the label for the given quantity id.
Sets the offset of a bit in the file.
Convert nb bits to an unsigned long.
Convert nb bits to a signed integer.
Opens a connection to the server.
return command ; }
if ce is null return str_ ;
Project a point from the world to the latlon.
Get the IV dataset catalog from the IV dataset.
Convert an iCalendardaterange to an iCalendardaterange that is compatible with the iCalendar
return false ; }
Handles the spacecraftinformation section of the page.
Handles the sensorinformation section.
Reads the root element.
Cleans a string of XML character data.
Unescapes a string.
Escape a string for use in a URL query.
Unescape a URL query string.
Decodes a backslash - escaped string.
Encodes a string using the backslash escape sequence.
Adds the lightning global attributes to the given netcdffile.
Byte swap short.
Swaps the specified bytes in the specified byte array at the specified offset.
Swaps a double value in a byte array at a given offset
Swaps a float value.
Swaps a double value.
Convert a short to a byte array.
Convert an integer to a byte array.
Convert a long to a byte array.
Subset affine transformation
Convert the document to an XML string.
if a == num_ return s ;
Start the XML file
Write the list of features to the output
Add records to the list of levels.
adddimensionstonetcdffile.
Provide the dimensions for the given netcdffile and group.
Find a coordinate transform.
Gets the index of the given record.
Exits the program.
Returns the file object for the given location.
Get an existing file or cache file.
Show the contents of the cache.
Cleans the cache of the given directory.
Calculates the bearing between two points on the earth.
Calculates the bearing between two points.
Command - line entry point.
Finds a point on the earth with the given parameters.
Find a point on the default Earth.
Find a point on the default Earth.
Spawns a thread to load a picture from the given url.
Loads a picture from the given URL.
loadpicture loads the picture and logs it.
Stops loading the image.
stoploadingexcept.
Get the size of this dimension.
Set the sourcepicturebufferedimage.
Returns the standard URI of this URL.
Transfer the information of two data descriptors.
Count the number of bits in this key.
Returns true if the given object is equal to this descriptor.
loadheader loads the header from the underlying stream.
loaddata loads the data from the stream.
Returns the value of the specified field.
Get double array by name.
Get array of strings by name
Get boolean array by name
Returns the name of the i - th field.
Returns the names of the fields in this record.
Main method for testing this class.
Returns a map of attributes.
Sets an attribute for this element.
Removes an attribute from the element.
Gets the group.
Returns the parent node of this node.
Get the escaped shortname.
Returns the path from this node to the root of this node.
Returns the group path of this node.
Returns the FQN of this node.
Build the DAP dataset.
Puts a collection of beans.
Gets the list.
return null ; } } catch ( Exception e ) { }
Reads the data at the specified position in the file.
Prints the variables in the DAP dataset.
Print a compound instance.
Writes the given element to a string.
Writes the given element to the given file.
Writes the given element to the given outputstream.
Sets the format and detaches the element from the writer.
Constructs a dimension element from the given dimension.
Make a coordinatetransform for the given attributecontainer.
Returns an int array of values for the specified attribute.
Create a bu unit.
Create a du unit.
Create a unitdb object with the base units.
Returns the singleton si object.
Find the appropriate coordelement for this axis.
Finds the index of the point which is closest to target.
Builds a subset of the values along the axis.
Submit a task for execution and return a result.
Open a feature dataset.
Annotate a dataset with a netcdfdataset
Reads a float array from a grib1 file.
Builds a URI from the given parts.
Returns the canonical form of the given string.
Normalizes the given string so that it can be used as a unit name.
Called by the builder after finishing the work done by the builder.
Returns the object associated with the given key.
Inserts a key value pair into the set. If the key already exists the previous value will
Returns the date of this date object.
Prints XML attributes of a node.
Prints an XML attribute.
Checks if the given attribute is special.
Prints all shared dimensions of a variable.
Checks if the file is a valid area file.
Sets the directory attributes of the area.
Set the navblock attributes.
Returns the calibrated value of the given calendar name.
setcaltypeattributes.
Find the coordinates in the given dataset.
Find the full name of the coordinate axis of the specified type
Find the coordinate axis of the specified type in the dataset.
Find the coordinate axis of a given type
Find the dimension of a coordinate axis of a given type.
Find the best coordinate system for the dataset
Find the dependent axis of an independent axis.
return null ; }
Read the marker from the datainputstream
method to write marker to dataoutputstream
Entry point for the demo.
getjavaarraystring.
Returns a list of all the parameters in the model.
Set the stations of the radar
Sets the currently selected station of the map
Redraws the image.
Read a rectangle.
Writes this rectangle to the specified objectoutputstream.
Add the contents of another unitdbimpl.
Add a unit to the unitset.
Add a symbol to the alias list.
Get a unit by its id.
Add a new unit by its name.
Add a unit by its symbol.
Add a unique entry to the map.
Adds all available lookandfeel information to the given menu.
Find record by file s drspos.
Read boolean.
Adicionar une valor de la instancia
Create a copy of this view.
Constructs a new result from an invdataset.
Open a feature dataset.
Opens a dataset from an invdataset.
Annotate a dataset.
Adds a new subpartition to this multipartition.
Create a gribcollection object from the index file.
Get instance of regexpanddurationtimecoverageenhancer.
Get instance of regexpanddurationtimecoverageenhancer from matchtarget dataset_path
Writes the given querycapability as XML to the given file.
Read the data for a single section of a structure.
Set the picture from a URL.
Sets the image to be displayed.
Zoom to fit.
Paint this component.
TG_ftoi - Fast Fourier Transform.
tg_itoc.
IDATAT string.
day of the month of the year.
LV_CCRD String from IVCord
Reverses an integer array in - place.
Gets the gridpackingname.
Returns the datatype constant for the given numeric type
Reads data from the inputstream.
Externalizes this outputstream to the given outputstream.
Returns the tag enum for the given code.
Get the next bufferedimage from the current file.
Returns the size of a daptype.
Returns the sum of an array.
Sets the grid based on a bounding box.
Sets the overlap.
Clear the grid.
Checks to see if the specified object has been cleared.
Find the intersection of the two rectangles.
Finds the intersection of the two points.
Returns the object in the grid closest to the given point
Returns the squared Euclidean distance between the specified point and the specified county.
Get or create a baseunit.
Returns the servicetype for the given fragment.
return servicetype
Decode a path extension into a servicetype
Checks if the location is a DOS location.
Send a variable to the network using the given outputstream.
Returns the suffix of the given FQN string.
Returns the prefix of the given FQN.
Locate a file in the filesystem.
Locates a path relative to a given absolute path.
Extract data from a bytebuffer.
Returns the path of a variable.
Returns null if the given path is empty.
Joins an array of strings together into a single string.
Checks if the given path contains a driveletter.
Returns the protocols for the given URL.
Converts an index to a list of slices.
Converts an offset in a dapvariable to a list of slices.
Checks if a list of slices is contiguous.
Test if a list of slices is a singlepoint.
Converts a list of slices to an index.
Reads data from an inputstream.
Set the stationinfo for a specific station.
Read a configuration from a catalog.
Update the list of groups.
Returns the variable node with the given name or null if not found.
Get the axistype of a variable.
Gets the statistic type corresponding to a timerange indicator.
Subset lon.
Returns the ranges of the axis.
Set the default values.
Gets the session id.
Set the maximum number of redirects.
Sets whether to use sessions or not.
Closes this instance.
Set authentication and proxy.
Tracks a session.
Sets the global credentialsprovider for the given scope.
Validates the contents of the textfield.
Create an index of the given shape.
Compute the product and stride for the given shape.
This method is used to construct the index section of the range list.
Reduce index.
Reduces an index to a given dimension.
Transpose an index matrix.
Returns a new index that permutes this index by the specified dimensions.
Get an iterator over the elements of the given array.
Returns the current element in the iteration.
Sets the value of the given index to the value of this index.
Set the value of a dimension.
Sets the components of this index to the specified values.
; }
Create a calendardaterange for the given calendar.
makedatelist returns a list of filedates.
Builds a list of gempakparameters from a dmpart object.
Get the list of stations from the headers.
Get the list of station keynames.
Returns a list of date objects.
Returns the index of the station with the given id.
Returns the filetype of this label.
Indents the current line n times.
Sets the indent level.
Read or create index from single file.
Add a directoryscan.
scanneeded.
Scan first time.
Sets the debug flags.
Add a variable to the model.
Writes the current file to the file system.
Validates the given XML object against the schema.
Converts this constraint to a constraint string.
Sets the original variable.
Implementation of reallyread.
Check if any of the variables in this structure need to be converted.
Converts the given array to an arraystructure if necessary.
convertmemberinfo.
Finds a variable from its original name.
Returns true if the variable has data.
Enhance all variables in the dataset.
Resource Control OK boolean.
Create an emptysequence from the given sequence.
Makes an arraysequence from the given sequence and parameter values.
Create a sequence for the given partname.
Adds the attribute for the verticalcoord variable.
readxmlasynch used for asynch processing of catalogs
Read an invcatalogimpl object from a string.
Reads an invcatalog document from a stringreader.
converts a catalog to an outputstream.
Get a metadataconverterif by key
Get a dimensionless unitname.
Multiplies the given unit by this one.
Divides the given unit by this one.
Convert an array of floats to an array of floats with the same number of derivative units
Return true if this unit is compatible with the given one.
Write a feature from a simplegeometry.
Writes a point to the string.
Writes a line to the output.
write polygon.
Returns the subnodes of the given parent node.
Pass all reserved attributes from the given node to the given dapnode.
Get a substring from a variable.
Returns the arraystructurema object if it implements the arraystructurema interface otherwise null.
Set the array data of a member.
factoryma factory of a structure
Returns the geometrytype for the given name.
Create a stationtimeseriesfeature from the given structure
Recursive method to compile a ceast tree.
This method is called by the dap code to compile a ceast filter.
Dimredefinition of a ceast node.
Create a view for the given index.
Check if this rectangle is contained in the other.
Extends the envelope by the given point.
Extends this rectangle by the given rectangle.
Intersects a clip with this rectangle.
Appends two arrays together.
Test if two arrays are conformable.
Returns true if shapea is conformable to shapeb
Convert an array to another array.
Copies the elements of the given array into the given result array.
Copy the elements of the given array to the given result array.
Copy the contents of an array to another array.
Get the minimum and maximum values of an array.
Sets all elements in the given array to the given double value.
Make a catalogbuilder for the local datasets.
Factory method to create a projectionimpl.
Unescapes an identifier.
URL decodes a string.
Unescapes a URL.
Escape a string for use in a backslash.
Unescape a string with a backslash.
Splits an escaped name into a list of strings.
Find the index of the first occurrence of c in escapedname.
Escapes a string with a backslash.
Reads an atomicscalar from the DAP file.
Get the path of a cursor.
Returns the default value of the given property of the given class.
Returns the class of the given component.
Compiles the dataset and databuffer.
Creates a structarray cursor from a dapvariable.
Recursive method to compile a structure into a d4cursor.
Compiles a sequence array.
Creates a d4cursor from a sequence of dap variables.
Reads a little - endian 64 - bit integer from the stream.
Gets the field with the given name.
Returns the value of the given field.
Sets the value of the given field.
Adds a new field at the current cursor position.
Adds a checkbox field to this widget.
Adds a new date field to this widget.
Adds a double field to this record.
Adds a new integer field to this record.
Adds a password field to this widget.
Adds a text field to this widget.
Adds a new text combo field to this widget.
Adds a textarea field to this form.
Add a heading to the layout.
Add a component to the layout.
Adds a new empty row with the specified row and size to this layout.
Find the first frame that is visible.
Returns the cellspacing of this cell.
Returns a copy of the factors contained in this set.
Multiplies the given dimension by this factor.
Raises all factors by the given power.
Checks if this dimension is a reciprocal of that dimension.
Returns true if all of the factors in this factor set are dimensionless.
Returns a new grib1paramtables object.
Creates a new grib1paramtables object.
Reads a parameter table lookup file and adds it to the lookup table list.
Adds a parameter table to the lookup table.
myraiseto ( power ).
Convert an array of floats to an array of floats using the base lnbase and the
Initialize the unit table.
Make a vertical variable.
Peek the name of the file without consuming it
Read a short from the given byte array at the given offset.
Returns the integer at the given offset in the given byte array.
Reads a float from the given byte array at the given offset.
Reads a double from the given byte array at the given offset.
Add an alias and name pair to the unitdb.
Add a symbol to the unit.
Create a converter from one unit to another.
Sets the structuredata.
Set point feature data.
Draw this polyline.
getshapes returns an iterator over the shapes in the image.
Process the inputstream.
Reads up to num_ bytes from is into dest.
read more bytes.
Reads up to len bytes from this input stream into the given byte array starting at the given
Skips the given number of bytes.
Adds the dimensionstonetcdffile.
Get the index of the coordinate of a record in the level list.
Checks if the file is a valid nowradfile
Reads the header of the nc2 file and parses it.
Reads data from the input stream.
Read one row of data.
This method is used to create a new instance of this class from an existing dataset.
if the rank of the variable is equal to the rank of the variable then return bt ;
Set the map area of the navigated view.
Set the map area.
Set the center map area for the given latitude and longitude
Set the projectionimpl.
Adds the actions to the given menu.
Redraw after delay milliseconds
Changes the screensize of the current bounds.
Set the selected variableif.
Returns the double value of the specified offset in this variable.
Reads a double from the data.
Reads an object at the given index.
Returns the name of the given sector id.
Read a scaled integer from the given buffer.
Find parameter by name ignoring case.
Swaps the byteorder of the bytes.
Get the number of timestepsperfile and starttimeindex of the given filename.
Returns the full filename for the specified template.
Gets the filenames.
Get the path to the DDF file.
Returns the full path of the given filename.
add a chsub to the list
Convert a referencedate to a timecoordintvvalue.
Reads the wmo.
Returns the uncompdata of the component at the given offset.
Modified from pcode_12n13n14.
Code for code 25 of Chen and Tu 2007
check the header of the message
Optimized version of pcode_5.
isz = true ;
Gets the levels of a given array of unsigned shorts.
Gets the dualpol levels.
Add a variable to the dataset.
Add a parameter to the netcdffile
Create an uncompressed version of a bytebuffer.
Get an unsigned integer from the given byte array.
getint gets an int from a byte array.
Convert a byte array to an object of a given datatype.
dodmr.
Create a daprequest from the given request.
Sends an error response.
Snaps the anchor point to the given point.
Stretch the component by the given point.
date onlyformat.
replacedatavars replace data vars with new data vars
Ensures that the array size is ok.
Reads two ints from a file
Reads a unsigned integer from the file
Reads a 3 - byte integer from the file.
Reads a 32 - bit unsigned integer from the given raf.
Reads a 32 - bit unsigned integer from the given raf.
Reads a float from the given raf.
Returns a float from four bits.
Reads a big endian 8 - bit integer from the file specified.
Counts the number of bits in a byte array
Create a copy of this projection.
Returns the Well Known Text representation of this coordinate.
Escapes a string for use in an HTML entity.
Unescapes a backslash escaped string.
Splits a string by a backslash. The backslash is regarded as the first character in the string
Make a fmrcinv map.
getservicespecial.
Returns the number of projected components of this vector.
Gets the reference time.
Returns a new arraystructurebb instance for the given section.
Main method for running the indexer.
Reads a single grib1record from the stream.
Returns true if the given NCDF file contains a global attribute with the given name
Make a projection to the world coordinatetransform
Reacquire the areafile.
Checks if this date is before the given date.
Checks if this date is before the given datetype.
Checks if this date is after the given date.
Set the value at the given index.
Adds a coordinatesystem to this TimeSeries.
Sets the units string.
Returns the string value of the units attribute.
Initializes the object with the given preferences.
Read the catalog.
Process a list of datasets.
Readcatsin directory.
Return true if lon is between lonbeg and lonend
Convert a latitude to a string.
Convert a longitude to its string representation.
Compares two basequantity objects.
return the selected dataset node
Set the currently selected dataset.
Constructs a treepath from the given node.
Open all the catalogs in the tree.
Sets the catalog from the given location.
Sets the name of the catalog.
Find the alias of a variable.
Writes an integer to the stream.
Writes a range of characters.
Reads a number of characters from the underlying stream.
Sets the debugflags.
Add a member to this group.
Remove a member from the set and return its index.
Returns a list of member names.
return null ; }
Get the current bitmap.
Restore the state of this object from a previously saved state.
Returns an iterator over the selected rows.
Returns the model index of this table.
Returns the array value of the given member.
getscalardouble get scalar double.
get a double array from a structure
getscalarfloat.
get a float value from the array.
getscalarbyte.
getjavaarraybyte.
getscalarint get scalar int.
get a java array int from a member
getscalarshort get scalar short
return a short array of the given member.
getscalarlong get scalar long.
get a long array of the given member
getscalarchar get scalar char.
getjavaarraychar.
Do one dataset.
Create a copy of this dataset.
Transfer metadata from one datasetnode to another.
Gets the threddsmetadatainheritable attribute of the RDBMS file.
Adds a record as the first product of this product.
Prints the missing values in the formatter.
Prints the summary of all missing records.
Find a record in the tracker.
Dumps the current state of the grid.
Returns the longname of the current record.
Subset by intervals.
Checks if two byte arrays are memequal.
parse a string into a dapdataset object.
Processes the attributes of a given dataset.
addcoords adds a list of coordinate to the partition collection.
Sets the Gaussian latitudes of the Meteor.
Parse a variable selector.
Constructs a section specification from a variable and a list of ranges.
Checks if a corner of a rectangle is inside a box.
Closes this instance. No further calls will be accepted.
Executes the request and returns the status code.
Identify encodingstation.
Attempt to match the given axistype and outer dimension.
Setzt is a zstream. The zstream is not used by this function.
Reads a character from the stream.
Starts the progress monitor.
Parses a string to a URI.
Returns a new URI that is identical to the given URI except for the specified URI parts.
Return null if the string is of the expected length.
Joins two canonical paths.
Checks if the dataset has been modified since the last crawl.
Copy info from another gribcollection.
Get the list of all filenames.
Set the indexraf
Gets the indexfilepathincache.
The number of counters in the union of this and all its nested counters.
DTD global attribute definition
DTD subset attribute
Deletes the global attribute with the given name.
Renames a global attribute.
Adds a new variable attribute to this element.
Add a variable attribute to the element.
Deletes an attribute from a variable.
Renames a variable attribute.
Make the file a subtype of the current file.
Write the headers and bounding boxes
Write the members of this featurecollection.
Write the stationobsdatasetxml.
Writes the stationcollection. xml file.
Writes a string to the stream.
Sends dxr8 to the remote device.
Writes an error response.
Terminates the DMR request.
Flush any pending data to the stream.
Returns true if the given value is in the current array.
Returns the element at the given index.
Shift this range by the given origin.
Reads data from the file and returns the object.
Reads data from the file.
Create a subset of this vector.
Set the values of this parameter.
Convert an array of ints to a double array.
Gets a list of dataset bounds according to the requested format.
checkrequestedvars.
Get a datasetsourcestructure by its name.
Returns the full path to the requested resource.
Make the vertical dimensions for each group.
Read the PIB from the file.
Finish the canonicalize process.
transferinheritable to publicmetadata
Transfer metadata from one dataset to another.
transferinheritablemetadata.
Sets the contributors.
adds a dataset to this datasets list at the specified index.
remove a dataset from this catalog.
replace a dataset in this catalog.
Add a service to the service list
Remove a service from the local and remote caches
Set the local services.
Remove a local metadata object from this dataset.
Gets the userproperty.
Outputs the validation result.
Returns a list of descriptor strings.
Construct the server path from the given httpservletrequest.
Constructs the getcapabilities operation and writes it to the given printwriter.
Get a single feature.
return null ; }
httphandler method.
Gets the capabilities from the given URL.
}
Returns the last modified date of the object.
Return a file to the client
Return the contents of a string to the response.
Sets the content length of the given response.
Gets the request URI.
Gets the request path.
Gets the request string for the given request.
Returns the value of the first parameter with the given name ignoring case.
Save the split.
Writes a directory to the response.
Allocate a hashmap for subcounters
Count the number of replicationbits starting at the given bit.
Append a line to the end of the buffer.
makestationcollectiondocument.
Returns the capabilities document.
Get a record of the coordinate values at the specified position.
Get the coordinate at the given index in the group.
Add an item to the list.
Handle throwable.
Performs a single step of the algorithm.
Get the ncep genprocess map.
Test if an endpoint is a CCMRF endpoint.
Sets the hasvalue.
Returns a new Grib1Gds instance for the given center and gridnumber.
Copy from the inputstream to the outputstream.
Reads the contents of the given inputstream and returns it as a string.
Reads the contents of an inputstream into a byte array.
Writes the contents of a string to an outputstream.
Copy a file to an outputstream using bufferedinputstream
Copies the data from the raf to the outputstream.
Copies a directory tree.
Read contents of a file into a byte array.
Reads a file and returns the content as a string.
Writes the given contents to the given file.
Writes the given string to the given file.
Writes the contents of the given inputstream to the given file.
parseexceptionhandler method.
Handles dap2 exceptions.
Called when a badurl occurs.
Gets the catalog.
Prints the catalog.
Print the status of the server.
Print badurlpage.
Gets the reference date.
Reads a variable length data array from the file.
Read an NCML document from a string.
Opens an NCML document at the specified location.
Returns x if it is allowed by allowchars and replacechar.
Cleanup a UTF8 string from a byte array.
Filter a string if it contains any characters not in okchars.
Removes all 7 bits from a string.
Makes a valid CDM object name from the given string.
Returns the number of times the two strings match.
Pads the string to the left with the given string until it reaches the desired length. If
Pads the string right to the specified length with the specified string.
Removes sub from s.
return s [ c ] ; } return null ;
Removes a character from the end of a string.
Collapses all leading and trailing whitespaces from the given string.
return s ; } return in ; }
Replaces all occurrences of replacechar in x with replacewith.
Replaces all occurrences of pattern in string with value
Substitutes all occurrences of match in original with subst.
Substitutes match in original for subst.
Remove all occurrences of out from sb.
Unreplace a character in a string builder.
Replaces all occurrences of characters in a stringbuilder with the same character in another string.
Replaces all occurrences of match in sbuff with subst.
Returns a copy of the string with all leading and trailing characters removed.
Processes a collectionupdateevent.
Check the state of the collection and update the collection if necessary.
Override this method in subclasses to perform update operations.
Returns the datasets of the datasets in this dataset.
This method is called by the pool when it is no longer needed.
Create a deep copy of a structuredata object.
copy to arraystructurebb.
Copies the contents of an arraystructure to a new arraystructurebb.
Copies the contents of a structuredata object to an arraystructurebb.
Copies the structure to an arraybb.
getforecasttimeintervalsizeinhours.
Create a new section with the given range.
factory method to create an instance of the tableanalyzer factory
This method analyzes a single featuretype.
Synchronise the grid.
Returns the GAUSIAN LATINS values of the specified type.
Swaps a long on the specified byte array.
Swaps a float value in a byte array at a given offset.
Swaps the specified char with a byte array at the specified offset.
Finds the coordinate axes of the data set.
Add a parameter to the parameter list.
Returns the common parent of this group and the given group.
Returns true if this group is the parent of the other group.
Sets the parent group of this node.
Adds a shared dimension to this group.
Adds a dimension to this group only if it does not already exist.
Adds a group to this group.
Adds an enumeration to this group.
Adds a variable to this scope.
Removes the dimension with the given name.
Make a group from a relative path
Converts a string of aliasfields into a string of aliasfields.
Print this DBObject to a printwriter.
Returns the value of the given variable.
Write a grid to the file.
Replaces all missing values in the given data array with the values from the given grid.
Replaces missing values in an array by a scaling factor.
Shift an array to the start of a geospatial grid.
Writes a georeferencedarray to the grid file.
Write this exception to the given httpservletresponse.
make topindexfilefromconfig.
Gets the gribcollectiontype from the raf.
Update a grib1 or timeperiod featurecollection.
updateleafcollection.
Open a gribcollection from a data file.
Open a gribcollection from a data file.
URL match boolean.
Add a triple to the cache.
Looks up a key in the cache.
if the size of the triplestore is the same as the number of triplestores in the
Insert a triple into the store.
Returns the local datasets of this dataset.
Find a dataset by it s name.
Set the project to use.
Returns an iterator over the shapes in this shapefile.
Create a list of shapes from the feature list.
Compares this string to the specified string ignoring case considerations
start progress monitortask.
Checks if the index file needs to be updated.
normalize an estimation of an estimation
Set an object at a given index.
Returns the structuredata at the given index.
copystructures.
getscalarobject gets the scalar value of a member.
convertscalardouble.
convert scalarint to int
Returns float value of a scalar.
return a byte from a scalar
Gets a short from a scalar.
Returns the char value of a scalar member.
getscalarstring.
getarraystructure gets the arraystructure of a member.
getarraysequence gets the sequence of the member.
getarrayobject.
Returns the smaller of the two given values.
Evaluates a ceast expression.
Returns the constraint as a string.
Returns true if the given node is a reference to this dataset.
Returns true if the given filter evaluates to true for the given sequence.
Returns the number of expansions in the given structure.
Computes the enums of the variables.
Compute the groups.
Compiles a CE constraint.
return true ; }
Sets up the action properties for the debug flags.
Returns the byte order for the given MCAachn.
Sets the byteorder.
Find the key with the given name.
Find the dmfileheaderinfo object with the given name.
return null if not found
Prints the parts of this path.
getdatapointer gets the pointer of a data point.
Returns the distance from the specified word to the specified destination.
Read a string from the device using dm_rstr.
Uninstall a DM part.
Returns the string representation of the given bit value.
Writes the given netcdffile to the given channel.
Parse a base element.
Parses a grid.
Parse aliases.
Recursively decodes a list of datadescriptors.
Replicates a set of keys.
Get the dataset filename.
Get the feature type of this surface file.
Returns true if the absolute difference between the two numbers is less than or equal to the given max
Returns true if this node references the given node.
Parse a string into a unit object.
Checks if a variable is tiled.
Make the best coordinatetime from the complete coordinatetime.
Convert a latlonrect to an array of projectionrects.
showtimeseriesall.
Convert a list of attributes to a map.
Returns a new array containing the values of this object.
return null ;
Writes the CDL.
Sets the string value.
Sets the values of this attribute.
Scans the input string.
generateproxydsresolvercatalog.
Add a message to the queue.
Sets the datatype of the given dataset.
Jump to thredds. client. catalog. access
Prepares the GUI to run.
Create the tools frame.
Convert a list of coordinateaxis to a name.
Returns the lesser rank of the two given axis.
Find the coordinate axis of the specified type.
Gets the projectionct.
Returns true if this object is a geoxy object.
Returns true if all coordinate axes are regular.
Returns true if subset is a subset of set
Returns true if this contains all the axes in wantaxes.
Check if the coordinate axes contains the given axisname.
Checks if the domain of a list of dimensions is contained in the domain.
Returns true if this map contains all axistypes in wantaxes.
Returns true if this set contains axistype wantaxistype.
Clone this node.
Gets the currently selected bean.
Gets the currently selected beans.
Returns a list of the selected cells.
Set the bean currently selected.
Restore the state of the table.
Create a new unknown unit.
Consumes and closes this stream.
Returns true if the given variable is an extra variable.
Returns true if the given variable is a coordinate.
Find the coordinate axis of a table.
Recursive method to add all data variables in a table.
if there are any extrajoins add them to the cursor.
make a station feature from a structure
Creates the nodemap.
Returns a simpleunit instance for the given name.
Factory method to create a simpleunit instance with exceptions.
Checks if two units are incompatible with exceptions.
isdateunit returns true if the given unit is a dateunit.
Checks if is timeunit.
Returns the conversion factor of the input unit to the output unit.
Convert the value to the output unit.
Returns true if this unit is unknown.
Returns the value of this unit.
Creates a new relop clause.
Creates a new boolean function clause.
Creates a new btfunctionclause.
makegrayscaleimage returns a bufferedimage of the specified array.
Crawls the given catalog and returns the number of references.
Crawls a dataset.
Crawl direct datasets.
Gets a file from the disk or the cache.
getexistingfileorcache ( string filelocation ) ;
Set debugleaks.
Returns a list of all files in the system.
Releases this object and releases any resources associated with it.
Repositions the position of the stream.
Flushes the buffer to the file.
Reads a single byte from this stream.
Reads a number of shorts from the underlying stream.
Reads an int from the input stream unbuffered.
Reads an array of integers.
Reads an array of longs.
Reads an array of floats
Reads an array of doubles
Reads nbytes of data from the stream as a string.
Reads the specified number of bytes and returns the most significant nbytes characters as a string.
Writes an array of booleans to the stream.
Writes an array of shorts to the stream.
Writes a number of characters.
Writes an array of ints to the stream.
Writes an array of longs to the stream.
Writes an array of floats
Writes an array of doubles
Writes a string to the output stream.
Writes a character array to the output stream.
Search forward in the file.
Append a query to the string buffer.
Factory method to create a new mcollection.
Attempt to find the index.
Returns true if this path is a leaf.
Build the list of children if needed.
scan for children.
Returns a list of all mfiles in the index.
Returns a list of gridsets.
Acquire a filecacheable from the cache.
remove file from cache
Evict an object from the cache.
Release a cacheable file.
Converting four ints to their corresponding ints.
Update in - cache element.
Clear the cache.
Make a vertical transformation if needed.
Returns true if this axis is a global longitude axis.
Is the vertical axis positive up?
Find the x and y - coordinates of a coordinate.
Find the x and y indices of the x_coord and y_coord in the grid.
Find the xyindex from the given latitude and longitude.
Find the xyindex of a point in world coordinates using the world model.
Get the current position of the item.
Get the item for the given pixel.
Iterate over the mfilecollection.
Download files from remote servers.
Returns the name of the subcenter.
Parses a calendarperiod unit from its string representation.
Obtains a calendarperiod instance with the specified integer value and field.
Returns a new calendarperiod instance with the given udunit.
Subtract two dates.
Gets the conversionfactor.
Returns the value of this period in milliseconds.
Get the offset between two dates.
Synchronise the index file.
Initializes the parameter table.
Add the datarootext to the map.
Find longest path match.
Returns the dataroot for the requested path.
convert a datarootext to a dataroot
Gets the calendardaterange.
Reindex a list of coordinates.
Allocate a new netcdffilewriter object with the specified version location and chunker
Create a new group and add it to the specified parent.
Adds the given enumtypedef to the given group.
Delete a named attribute from a group.
rename a group attribute
This method adds a new record structure to the NCDF file.
Aborts the SPI connection.
Writes the properties of the object o to the specified printwriter.
Extract coverage data from a dataset.
Divide this unit by another.
Convert this unit to a given amount of differentials.
Returns the result of fromderivedunit on this unit by the given amount.
Converts a nested variable to an array.
Convert a topvariable.
Converts the input datav to an array of bytes.
Close all open databases.
Opens a database.
Convert an int value to a period.
Ensures that the underlying array has at least the given capacity.
Returns the string at the specified index.
Makes a catalog for the given directory.
makeproxydsresolvercatalog. If path ends in str_ return null.
Get the datatype of the coordinate.
Creates a new GRIB2PDs instance.
Parses a time value from the stream.
Returns the result of applying a scaling factor to the given value.
Parses a local concept file.
addlocalconcept adds a concept to the dictionary.
Trims a line of text.
stores a concept in the localconcepts table.
Writes the grib1tables.
Writes a lookuptable. reg file in the given directory.
Prints all local concepts.
Main method for testing this class.
Get a datasetsourcetype by name.
Expand the dataset.
Full expand this catalog.
Name all the datasets in the datasetcontainer.
Name the dataset list.
Name the dataset tree.
Loads a picture from an imd file.
stoploadingexcept from url
Method sourcestatuschange.
Notify all registered listeners of a sourceloadprogress notification.
creates a new scaledpictureinthread
Get the size of the scaledpicture.
Gets the scaled size string.
Returns a list of merged parts.
Makes the header for the given station.
Proof - of - Work.
check if the parameter belongs to a valid group
Set the rootdirectory.
Creates the root directory.
Gets the cache file for the given location.
Deletes files from the cache after a given date.
Cleans up the cache.
Tests if a short is bufrtable.
Factory method to create a coordinateaxis from a netcdfdataset and variableds
Returns a copy of this coordinateaxis with no cache.
Returns true if this is a numeric value.
Appends the information for this axis to the given formatter buf.
return null ; }
Sets the list of rows.
get the currently selected row.
Increments or decrements the currently selected row.
Returns the model index of this table column.
Set the selected index of the axis.
Sorts the array in ascending order using a quicksort.
Swaps the elements of a [ i ] with elements of a [ j ].
getexistingfile gets a mfileos object from the given filename.
Rotate an array of lonlat by a given rotation.
Create an xmlstore instance from a file.
Create an xmlstore object from two inputstreams.
Create an xmlstore object from a resource.
Returns the standard filename for the given appname and storename.
Saves the current preferences to the file.
Save the exception message to the given outputstream.
This method writes a single atomic variable to the output.
Recursive method to write a structure from a datacursor.
Writes a single structure to the given writer.
Reads a sequence from the datacursor and writes it to the dst.
Writes a datacursor record to the given destination.
; return true ; }
Returns the wmoid.
Reads a row from a datainputstream.
Get the data at the given index.
getdata0 gets data of grib2drs. type0.
Reads the data in the first 4 bits of the grib2drs file.
Writing to a file using the cfgridwriter.
Make an estimate of the size of the grids.
Writing grids to a file using the default version of netcdf3.
Set the list of stations.
Set the selected station.
Pick a station from the current normal.
Returns the closest station to the given point.
the selected station.
Returns the name of the projection of the given type.
Get a list of station names within a boundingbox
Get a station by its name.
Get an iterator over the data for a particular station.
Get an iterator over the data for a particular station.
Reads the data from the ray file into the given indexiterator.
Returns the dot product of this vector with v.
L2 norm of this vector.
Normalizes each element of the vector by dividing each element by the norm of its value.
Recursive method to set the services from the given datasetbuilders.
Returns the parameter with the given id.
Returns the parameter with the given id.
Add a new name with the given value.
Add a symbol and its associated value.
Gets the prefix.
Test if the email is ok.
Returns the value of the given parameter.
Calculates the CRC value.
Tests if this element is thin.
Returns the index of the field with the given name.
Gets the timetypename.
Returns the time coordinate of this forecast.
Set the next polygon in the list
Set the previous polygon in the list
Find a property by its name.
Set the current projection of the model.
Subset the coverage data from time.
Registers an IOProvider for the given classname.
Manually register a new ioserviceprovider.
Checks if an iosp of the given class is already registered.
Deregisters an iosp of the given class.
Checks if the file at the given location can be opened.
Creates a new netcdffile initialized with a byte array in memory.
Create a new in - memory netcdffile with the given name and data.
Creates a new netcdffile from the given filename in memory.
Opens a new netcdffile in memory from the given URI.
Find the global attribute with the given name ignoring case.
Converts this dataset to an NCML document.
Writes the CDL to the given outputstream.
Writes the CDL string to the given printwriter.
Writes the CDL to the given formatter.
Adds the given attribute to the given parent group.
Appends a new attribute to the given parent group.
Adds the given group to the given parent group.
Adds the given dimension to the given parent.
Removes the specified dimension from the specified group.
Adds a variable to the given group.
Adds a variable to the given group with the given name datatype and dimensions.
Adds a string variable to a group.
Removes the given variable from the given group.
Processes a message from the IOSP protocol.
Add a recordstructure to the message.
Finishes building the tree.
Read a section of this file.
readtobytechannel.
Reads a list of arrays.
Read an array from a variable section.
Returns the full name of the given node.
makefullnamewithstring.
Returns true if the given mfile should be included.
Returns true if the given mfile should be excluded.
Performs an and filter on the given mfile.
Append a string value to the end of this attribute.
Dispatch checkvalue.
Dispatch checkvalue for byte types.
return true ;
Returns true if string s is a valid short.
return true ; } catch catch ; }
check if string s is an unsigned integer
return true
return s
return datatype ; }
Returns true if the given dataset is viewable.
Checks if the given string is a valid boolean string.
Returns true if the given string is a valid alphanumeric string.
Checks if an alphnumstring is in a constrained set.
Descendonlyfilepath boolean.
Converts a unicode codepoint to its percent hex string representation.
return null ; }
Compares two griddefrecord objects.
Process data from the inputstream.
Processes the buffer.
Remove any leading or trailing quotes from a string.
This method is used to mark all stackedvariables.
Writes an NCML file to the editor.
Get a value from threddsconfig.
Writes the CDL to a string.
return null ; }
Validates the current state of this instance.
Returns the azimuth of this message.
Gets the elevation of this message.
Returns the latitudes of all the rays.
Returns the longitudes of all the rays in the system.
Returns the altitudes of all the rays.
Returns the azimuths of the rays.
Returns the elevation values of all the rays in the cluster.
Returns a new structure containing only the variables with the given names.
Selects the variable with the given name.
Adds a member variable to this structure.
Sets the member variables.
Sets the parent group of this variable.
Calculates the size of this vector.
Reads a structure from the input stream.
Read an array structure from the file.
Returns the string form of the given category.
Returns the class name.
Add a parameter to this command.
Returns the header of the email.
Convert a latlonrect to a projectionrect in bounding box 2
Returns the version of the specified hasconvname.
Returns the positive direction of the z - axis for a given set of coordinates.
Colorscale parameters.
Renders the plan view.
is this group a direct child of that group?
Returns the type of the message with the given name.
Installs the inall columns for the given table.
Set the API key and secret for the Coinbase API.
Creates a new label from the given string value.
Labels a list of lines.
Creates an HTML label with the specified value.
Connects to the target server using the specified properties.
list iptypes.
Connects to the MySQL server.
Purge a logger from the cache.
Compiles the given sourcecode for the given class.
Add a source file to the compiler.
readgraphiccontrolext
Get the next frame from the header.
The persons property.
} ; }
Get a person by id.
Add a list of messages for a validator.
Set the person id.
Create a view model from the given view.
Loads the countries.
Javaview step.
The step for a fxml view.
Clears the given map using the given consumer.
Create index events.
Causes the given callable to be executed on the given member.
Loads a view tuple from a fxml file.
Query for a stylemappingrow
Get the pixel value of a pixel in a PNG image.
Returns the values of each pixel in the PNG image bytes.
Validate that the provided PNG reader has the expected number of channels and bitdepth.
Create an instance of coveragedatapngimage.
Set the tile data from a bitmap
Executes a raw query.
Wrap a query in a cursorresult
Queries the user and returns the result of the previous query.
Query the database for rows matching the given query.
Convert a cursor to a tresult
Gets the featurerow.
Register a table with the GeoPackage
Query for tilerow by x y and zoom
Get the coverage data for the tiledao
Get the coverage data for the tiledao
Get the coverage data for the tiledao
Get the results of the coveragedatatilematrix.
Zoom in or out of the coverage data tile matrix.
Zooms in and returns the coveragedatatilematrixresults.
Zooms out of the coverage data tilematrix.
; } }
Get the value of a tile row.
Set the icon row.
Get the icon row for the given geometrytype
Opens or gets the bindings database.
Convert a byte array to a bitmap
Convert a bitmap to a byte array.
Create a new table in the database.
Delete a table from the GeoPackage
Get or create a tablemetadata.
Get the geopackage id for a given geopackage
Create a tablemetadata object from the cursor.
Create a new extension.
Get the feature row for the cursor.
rawquery and return cursor
Queries the usercustomcursor using the given boundingbox and projection.
Queries the usercustomcursor in the given envelope.
Returns the approximate number of points within the envelope
Query the usercustomcursor using the given bounds
Builds the where part of the query.
Query for features within a boundingbox and projection
Counts the number of features within the given boundingbox and projection
Query for features within a geometry envelope
Query for feature ids within a given bounds
Count the number of pixels within the bounds.
Set the data in this object from a bitmap.
Set the data from a bitmap.
Set the configuration for the bitmap compression.
Get the number of tiles in the map
Adjust the bounds of the boundingbox according to the zoom level
Adjust the bounds of the googlemap.
Adjust the geopackageboundswgs84.
Adjust the geopackage bounds of the request webmerator
Get the boundingbox for the zoomlevel
Get the tilegrid for the zoomlevel
Query for a tile at the given zoomlevel.
Query for tiles with zoomlevel > = zoomlevel
Get the closest zoomlevel to a given length
Get the approximate zoomlevel for the length
Query for the tilegrid of a zoomlevel
Delete the tile at the given zoomlevel and column
Count the number of tiles at the zoomlevel
Is Google Tiles enabled or not.
Get the pixel value of a pixel from an image bytes.
Get the pixel values of the tiff image bytes.
Validates the image directory.
Create an instance of coveragedatatiffimage.
Set the value of the pixel at the specified location.
Get or open a geopackage.
Gets the current row from the table.
; ; }
Query by base feature id list.
Delete by base id.
Get a rectangle from the given bounding box and boundingboxsection.
Returns a rounded floating point rectangle of the specified bounding box and bounding box section.
Deletes any databases that don t exist.
Create and close the geopackage.
Checks if a database exists and is valid.
validatedatabaseandcloseonerror.
Validates a SQLite database and then closes the connection.
Validates a SQLite database.
Validate the database header.
Checks if the database header is valid.
Add all internal databases to the collection
Add external databases.
Imports a geopackage.
Get the geopackage metadata from the database
Get the geopackage metadata at the external path
Create a new row in the database.
Populates a new geometrymetadata object with values from the envelope.
Delete a geopackage
Creates or updates the geometry with the given metadata.
Update a geometry metadata
Get the number of rows in the table for the given geopackage and tablename
Create a geometrymetadata object from a cursor.
Update rows in the table.
Draw the text on the tile
Get a list of simpleattributesrows for the given ids
Checks if cursor is at the end of the list and if so closes it.
Gets the usermappingdao.
Gets the simpleattributesdao.
Gets the mappings for a given base.
Gets the mappings for the given related id.
check if a mapping exists for the base id and related id
Counts the number of rows in the cursor.
Register a cursorwrapper for this usercustomtable
Read a usercustomtable from a GeoPackage
Get the tile for the request boundingbox
Draw the tile results.
Reproject a tile to the requested projection.
Populate the tilecursor with the tile results from the tilematrix.
Calculates the height and width of the area that should be drawn overlapped by this graphic.
Sets the density of the graphics.
Sets the paint to use when drawing lines.
Set the paint to use for polygons.
Draw the tile to a byte array.
Draw a tile at x y and zoom
Draw tile query index bitmap.
Query the number of features in a zoom level.
return the number of features in the webmerator
Query for features in the specified zoom level
Queries the webmerator for feature index results.
Draw a tile query all bitmap at the x y and zoom level
Simplifies a list of points.
Get the paint to use for a point style
Get the paint to use for the line style
Get the polygon paint.
Get the paint to use for a polygon fill polygon.
Get the paint for the featurestyle
Get the style paint.
Get the paint for a particular stylerow.
Get the paint for the specified styleid and type.
Add a bitmap to the cache.
Wraps the given values in quotes.
Create a bitmap from the layers.
Recycle the bitmaps.
Get the bitmap for the given layer.
Get the canvas for the given layer.
Create the bitmap and canvas for the given layer.
Gets the stylemappingdao.
Get the styledao object
Get the icondao object
Get the featurestyles for the featuretable.
Get the styles for a featuretable.
Get the stylerow for a featuretable
Get the icons for a featuretable.
Get the icon row for the feature table
Gets the featurestyles.
Get the featurestyles for a featuretable and featureid
Get the styles for a given featurerow
Get the icons for a feature row.
Gets the styles.
Gets the icons.
Set the featurestyles for a featuretable
Set the style for a featuretable
Set the icons for the featuretable
Set the featurestyles of a featurerow
Set the featurestyles for a featuretable and featureid
Set the style of a featurerow
Set the style for a featureid in the featuretable
Set the style of a row
Set the default style for the feature row
Set the default style for the feature table featureid
Set the icons for a featurerow
Set the icons for the feature table and feature id
Set the icon for the feature row
Set the default icon for the feature row
Set the default icon for a featuretable
Get or insert style id.
Get or insert icon id
Inserts a stylemapping row.
Delete the tablestyle mapping for the featuretable
Delete the tableicon mapping for the featuretable
Deletes the mapping data for the featuretable
Deletes the mapping for the featuretable
Delete the stylemapping for the featureid and geometrytype
Returns a list of all style ids associated with the given featuretable
Get all unique related ids for a featuretable
Get all style ids associated with a featuretable
Get all unique related ids for a featuretable
Gets the image bytes.
Flush the outputstream.
Get the pixel at the given coordinates
Reads the pixels from the reader.
Draw a single feature tile.
Draw a path
Draw a polygon path
Add a linestring to the current path if the number of points exceeds the number of points.
Add a polygon to the map
Get the featurecache for the given tablename.
Remove a featurerow from the data
Clears all caches and resizes them.
Get the cached tablestyles.
Get the cached TableFeatureStyles icons.
Get a rtreeindextabledao object for the specified featuredao.
Set the width of the column
Set the height of the current cell
Get the width and height of this bitmap.
Compute the tile density given the density and tile width and height. Tiles are assumed to be
readblobvalue.
Read a usercustomtable from a GeoPackage connection
Gets the color or creates it if it doesn t exist.
Validate the given color.
Create a color object from hexcolor and opacity values.
Get the manager for the current thread
Set the progress of the geopackage index
Returns the maximum index of the given feature types.
Indexes the given row according to the given index types.
Deletes the index for the given feature index types.
Delete a row from the index.
Delete the index for the given types
Delete the feature index for the given geometry id
Returns true if any of the features in this query are indexed.
Get the list of indexed types in this order.
Query the feature index results.
Returns the number of features in the index.
Gets the boundingbox of the feature index.
Query for feature index results within the boundingbox and projection
get indexedtype.
Gets the internal file.
Gets the internal filepath from the given path.
Gets the geometrytype.
Sets the value of the geometrytypename column.
Checks if the url has a boundingbox.
Replaces all the variables in the URL with the values from the tile generator.
Checks if the url has xyz.
Replace the boundingbox of a tile url with the tile boundingbox of the current projection.
Replaces the url variables in the URL with the values from the given boundingbox.
Get the geometry of the table.
Index a row of a geopackage.
update the last indexed time of the featureset
delete the index of the table
Delete the index for the given geometry id
Checks if the last edited date of the geometry column is in the last edited date
Query the Geodatabase and table
Query for features in the database with a boundingbox
This method is used to count the number of features within a boundingbox
Query by geometryenvelope
Count the number of features in the geometry envelope
Queries the Geodatabase for features within the given boundingbox and projection.
Get the feature count for the boundingbox in the given projection
Transforms the boundingbox according to the projection.
Gets the geometrymetadata.
Get the feature row for the cursor.
Gets the featurerow.
Get the list of tiledao for a featuretable
Get the list of featuredaos for the tiletable
Get the boundingbox from the GeoPackage and expand it if needed
Query by baseid and relatedid
Get a list of unique baseids in the database
query for unique related ids
Delete by base id.
Delete by related id
Delete by ids int.
Build a where clause for the given base and related ids.
Create a new geopackagemetadata in the database
Delete a database
Rename a geopackagemetadata.
Rename a geopackage
Get all the geopackagemetadata in the database
Get the geopackage metadata for the database
Get the geopackagemetadata for the given id
Get or create a geopackagemetadata.
Check if the database is external
Get the geopackage metadata for the external path
Get metadata where name like like like sortcolumn and sortcolumn like like
Get metadata where name not like sortcolumn and not like like like
Get the metadata where name like like str_.
Create a geopackagemetadata object from the cursor.
Called when a view is created.
if view is a viewgroup add it.
return null ; }
create custom view internal.
Append an iloggingevent to a cyclicbuffer.
Find the logback configuration file from system properties.
Gets a resource from the class loader.
Automatically configure the logger.
statusonresourcesearch.
Convert a socketaddress to a string.
Returns a new thread pool executor service.
Start converters from the given head.
Subappend e event
Add a substitution property.
Get the value for the given key.
Compiles the top node into a converter.
Advance past a token and return the corresponding node.
Convert a date to a regular expression.
) { }
End an event evaluator.
Initializes the logback context selector.
dynamicalcontextselector.
Setup properties for this logger.
Gets the external storage directory path.
Gets the databasedirectorypath.
Gets the absolute filepath.
Checks if the given event is considered to be an error.
return null ;
Update the mask if necessary.
Returns the chain decision for the given event.
Create the keymanagers.
Create the trustmanagers.
Get keystore from system properties.
Returns the location of the given system property.
Returns the URL for the given resource location.
chainhandlesthrowable.
Stop the hook.
Prints in case of errors or warnings.
printiferrorsoccured.
Prints a context to the standard output.
Gets an entry from either the live or lingerers map.
Remove the entry from the live map and add it to the lingerers map.
Returns the minimum and maximum values of the given string.
Rename a file or directory.
isondifferentvolumes.
Gets the value of the given environment variable.
Gets the value of a system property.
Sets the property map.
Outputs the string representation of all keys in the given map.
Extract the stacktrace elements from a throwable.
Checks if currentclass is in frameworkspacelist.
adds a newstatus to the list
Add a new listener to the list.
Lookup an implicitaction in the implicitactions list.
Returns the list of applicable actions for the given element path.
Set the classloader for this class.
Get the value of a system property.
Utility method to decapitalize a name.
Returns an array of methoddescriptors for the given class.
Returns an array of property descriptors for the given class.
Starts the output.
Add an onconsolestatuslistener instance to the given context.
End a property.
get the discriminating value for the given event
Checks if the event can be discarded.
Start a new shutdownhook.
Ends the hook.
return null ; } return enabledprotocols.
return null ; } return enabledciphersuites.
Returns the included and excluded strings for the given defaults.
Convert string to scope.
Set the properties for a given scope.
Add a appender.
Detaches appender from this list.
Removes the appender with the given name.
Handle a change in the parentlevel.
Call all appenders of this logger.
Detach an appender from this log.
Create a child logger by last name part.
Actual turbofilter chain decision.
Log a loggingevent.
Calls the method and returns the resulting socket.
Create missing parent directories for the given file.
Returns the integer represented by this level.
Convert an int value to a level.
getresourceoccurrencecount.
Returns the URL of a resource on the classpath.
getclassloaderofobject.
Get the class loader as a privileged action.
Gets the classloader of the given class.
Starts the output.
Get the tag to use for this event
Attempt to load a resource.
Returns the separator index of the given name starting at the given index.
Checks if the event contains any of the markers.
getclientthreadname.
Checks if two files are on the same filestore.
Append an event to the queue.
Protected method used to send a cyclicbuffer to the client.
Add a mdcvaluelevelpair.
Create a converter from a simplekeywordnode.
Create a compositeconverter instance.
Determine the compression mode.
Configures the connection to the given URL.
Processes a configuration file.
Configure the engine from an inputstream.
Build the interpreter.
Configures the source.
Builds the interpreter.
Get the value for the given key.
Sets the name of the node.
Returns true if the given context has at least one statuslistener.
Returns the time of the last reset.
Attempt to start parsing.
Get the effective converter map.
Returns the header of the file.
Returns the footer of the file.
suppresswarnings.
End the current appender.
Copies the current clients list.
Add a client to the list of clients.
Removes a client from the list of clients.
Get a copy of the current context map.
Gets the value of method.
getturbofilterchaindecision no.
Checks if is androidos.
Initializes the logger.
List files in a folder that match a given stemregex.
Prints the status list from the status manager for all statuses that have elapsed timelongerthan
Gets the database file.
Cleanup expired logs.
Checks if the last check has expired.
Append an iloggingevent to an insertstatement.
Secondary append.
Bind a logging event to the statement.
tostringtruncatedto254.
Returns the mask of the iloggingevent.
mergepropertymaps.
Insert an exception.
Returns the length of the longest prefix match of this path and the specified path.
Get the effective level of this status set.
Returns true if the given class is an interface and not an interface.
Returns the child value of the given parent value.
Process an include.
Attempt to open the given URL.
Trims the head and tail of a saxeventrecorder.
Create the server socket and runner.
Returns true if the exception is transient.
Shuffles the hosts and sets them as readhosts and writehosts
Synchronized to ensure local index is not null.
Synchronizes this query with the local build executor service.
Syncs the database if needed.
Waits for a task to finish.
Lists all indexes in online sync mode.
Reads a string from the given stream and returns it as a char array.
Copies the contents of an inputstream to a byte array.
Quietly consumes the input and error streams of a connection.
Return the list of hosts that are up.
Set the type of place.
Starts the asynchronous browse.
Puts a value into the cache.
Get a value from the cache.
Awaits completion of all threads.
Reports a test case with a throwable.
Copies all files from one directory to another.
} }
Gets the static field value.
Get method by name.
Returns a string representation of the given percentage value.
Formats a double into a string of the given length using the default locale.
Formats a long as a string.
Writes a JSON string.
Writes an integer to the JSON stream quoting it if necessary.
jsondouble - > double
Reads a string of jsonnumeric characters.
Read a JSON integer value.
Reads a double.
Reads a JSON string and decodes it as base64.
Executes the given methodcall.
Invoke a methodcall.
Enqueue a methodcall.
Gets a resource from a file system path.
Update the current decoration state.
Refresh the repository view
Returns the current resourcehistoryview
Opens an editor with the given contents and name
Displays an error message dialog and reports the authentication failure.
Prompts the user for authentication.
Create the default page.
Starts the thread.
Sets the iskeepallalive attribute.
set isomit flag.
Set the owner of this node.
Add a conditionfactor
Create a conditionterm object from a streamtokenizer
Checks if this term matches the given conditionterm.
Get the content of a DSL configuration file.
Load the configuration from the given file.
Reads the configuration from the given stream.
Get the wizard menu.
adds a response to this responsebody object
Appends a new href to this link.
Inserts newhref before refhref in the list.
Remove this link from the document.
Add a propstat element.
return href ; }
; return status ; }
Returns the stackframe for the given ivalue.
return true if class1 is a subtype of class2
Returns true if newproposal is in proposals.
Resets the reader to the beginning of the file.
CreateActions Method.
Adds a connection to the list.
Returns the value of the specified propertyid.
Removes a connection from this connection group.
Sets the current location of the poi.
Sets the value of the given property.
Sets the new size of the component.
Returns a string representation of the given constraints.
adds a new lockentry to the tree
Adds a child to this node.
Removes a child from this vertex.
Initializes this instance of this class.
Uninstall the plugin.
Returns the string from the resource bundle for the given key.
Gets the resourcebundle.
Gets the rulebuilderformcolors.
Set the given date as the current time.
Attempt to set the datetime field using the given pattern.
Create an istatus that contains an error.
Sends an error log message.
Adds a new field editor.
Adjusts the gridlayout of the fieldeditors.
Apply font to all the fields
Calculate the number of columns.
Initializes this page by loading all the fields.
Notify all registered listeners of a propertychange event
Sets the activeeditor.
Add this item to the toolbar.
Determine the dialect from the backtext.
Create a new context with the given usercontext and locator.
Save the current file.
createtablelisteners.
Inserts the specified object into this map.
asserts that urlkey is not null and that value is not null
Add a token to the token list.
Add a child node.
Sets the ifile to be read.
Adds a condition to the list of conditions.
Adds a state token condition to the resource.
Returns true if this condition matches the given condition.
getprop - gets the property of this node.
return status ; }
Set the properties of this node.
Returns the last line of the backtext.
Gets the last non dash line.
Bind the given id with the given binding.
Binds two strings together and returns the resulting string.
Binds an id to an array of bindings.
Create a process for the given project.
Create a process sample junit.
Gets the runtimeid.
Visit a Rete. From here interesting information is gathered from the graph.
Visits the given node.
Returns the dotid of the given object.
addremove property.
addset. Add a set to the current node.
Create a new ilocator instance.
get presentationreconciler.
Returns true if the given object is the same as this object.
Contains boolean.
Create a conditionfactor from a streamtokenizer
Adds the pages to the editor.
Performs http delete.
Performs a HTTP POST request.
Gets the status of a job.
Executes the pull operation with the given monitor.
Handles a pull results event.
Set the value at the given index.
adds a new activelock to the tree.
Filters a list of icompletionproposals based on a prefix.
Read the prefix backwards from the given document.
Calculates the reterows of a given tree.
Gets the editpart for a given modelelement.
Returns the image descriptor for the given path.
Declares an image in the registry.
Add a vertex at a given depth.
Returns the row index of the given vertex.
Returns the width of the table.
Dump the entire matrix.
Optimize the matrix.
Initialize the graphical viewer
draw a new graph
Returns the droolslinebreakpoint object for the given source.
Set the href of this link.
Returns true if the server can talk dav.
Copies the resource to the specified destination.
Examines a multistatus response.
Extract the property stats from a multistatus response.
Get the content of the resource.
Returns an enumeration of all the locks currently active.
Return the status of the named property.
HEADs the content of the resource.
Attempt to acquire a shared lock.
Moves this property from one location to another.
Protected checkin.
This method is used to refresh the lock token
Remove the properties of a collection of properties
Removes a property from this object.
Sets the content of this resource.
Sets the properties for this object.
Sets the value of a property.
This method unlocks a previously locked resource.
Update the version of the resource.
Performs version control on the davserver.
Deletes the resource
Examine the status code and throw appropriate exceptions.
Returns true if the property has a child.
Write this request body to the given outputstream.
Convert a byte array to a hexadecimal string representation.
Convert an array of ints to a hexadecimal string.
Sets the isallprop value.
Sets the ispropname value.
Sets this node s property to the given value.
Strip last word.
Update the tree.
Writes the content of this string to the given outputstream.
This method is synchronized in order to avoid deadlocks.
Marks the errors in the given list of parse errors.
Skips all whitespace characters.
add a resource to guvnor.
Uses guvnormetadatautils to get the guvnormetadata properties from the selected file
Returns the age of the user.
Returns the content length.
Returns the maximum number of forwards.
Returns the value of the overwrite property.
Returns the passthrough value.
Returns - num_ if timeout is not defined.
Set a property in the properties map.
Sets the timeout value. If the value is - num_ then the timeout is set to the
Open a DSL file and return a bufferedreader.
Parse the contents of a file into this object.
Get the metadata of the object.
Strips the metadata from the given text.
Add tokens to the tree.
Get the children of the current condition.
Get the children of the given object.
Adds a child node to a list if the number of children exceeds the number of children.
Prints the tree.
Recursively prints a node and its children.
Prints a given number of tabs.
Read jsonvalue from text.
Returns the image descriptor for the given id.
Invokes a request and returns the response.
Sets a header field in the request.
Create the rule sample launcher.
Create the rule.
Create the ruleflow.
Create the ruleflowlauncher.
return a list of selected iutreeitems
Create a printable image and save it to the given stream.
Returns the name of the field this node is part of.
Returns the string representation of the mvel constraint.
Returns the value of the mvel constraint.
Adds the guvnor resource properties.
This method is used to set the baseline control for a resource.
Binds the specified member from the specified ilocator to the specified destination
Get member.
Optimize the list of vertices.
Initializes the controls.
return false ; }
Generates a new entitytag.
Gets the opposite of the given basevertex.
Validates a list of OTPs.
Returns true if the user is the right one for the publicid.
Returns the username for the given publicid in the given file.
add_yubikey_to_user.
Attempt authentication and verify the given OTP.
Clears the password.
Get public ID from OTP string.
Checks if the given string is a valid OTP format.
Create an evaluation given a simplenode and source
Create the evaluation.
Clear all the cached information.
Checks if is jdk 15.
Gets the package name of an object.
Returns the package name of the given class.
Returns a unique descriptor for the given object.
Get the type of an argument.
Returns true if one class is more specific than another.
Returns the value of the given property from the given target object.
Returns a map of property descriptors for the specified class.
Returns the first propertydescriptor found for the given class and property name.
Gets the readmethod.
Read a character.
PROJECT = Expression Expression
This is the selectall statement
Returns the long value of the given object.
Returns the double value of the given object.
Returns the value of the object as a biginteger.
Returns the value of the object as a bigdecimal.
Converts an object to a string.
Returns the numeric type of the given value.
Convert the given value to the given type.
Returns the int value of the given value.
Gets the numeric type.
Returns the numeric type of the two arguments.
Create a number of the given type and value.
Pop an evaluation from the tree.
generateognlgetter.
Generate ognlsetter.
Flatten the tree.
Initializes this ContinuationNode with the given parameters.
Escapes the current character.
Sets the root object in the given map.
Returns the value of the given expression as an object.
Sets the value of the given expression.
Sets the value of the given tree at the given root.
Returns true if the given expression is a constant.
Gets the default watch service id.
Reload the resources.
Returns the archiver with the given name.
Check the archiver for problems.
Read a file as a string.
Create the project.
Add a system property to the java.
Add a system property to the java.
Change the selected directory.
Refresh the state of the confirm button.
Create fileobserver.
Return the selectedfolder to the listener.
Create a new folder.
Returns true if the given file is a valid file.
Start a background job.
startlist event.
Ends a list.
Handle motion.
Get the crop rectangle.
Computes the layout of the rectangle.
Registers the listener and media factory.
addspanwatcher.
Inflate the view and return it.
Get the view for the item at the given position in the dropdown.
Converts the given text into HTML.
withinparagraph.
Create a unique file with the same extension as the original file.
Determines the originalfile.
Returns the namespace of the given name.
Returns the local name of the given name.
Sets an attribute in the given attributes object.
Set an attribute in the theatts
Gets the font name from a random access file.
Get the font name from the given filepath
if currentbufferindex + newcount > currentbuffersize
Writes an array of bytes to the output stream.
Writes a byte to the buffer expanding if necessary
Reads data from the given inputstream into this buffer and writes it to the underlying stream.
Writes the contents of this buffer to the given outputstream.
Returns the contents of this buffer as a byte array. Modifying the content of this buffer does
Set the fontsize of the spinner.
Convert windows separators to unix separator.
Recompute the focus of all highlightviews.
Pans the view if necessary.
center based on highlightview
Reset documentlocator variables.
Validates the given string against this pattern.
Add an elementtype.
Sets an attribute of an element.
Sets the parent of the given element.
Get the elementtype for the given name.
; }
Recursively removes all paragraphs from the given text editor.
apply to selection.
Checks if the domain is valid.
Called when an operation is executed by the editor.
Redos the last operation in the undo stack of an editor.
Replaces all occurrences of search with replace in source.
Get or create a threadstatus.
Sets the decoding options for the given thread.
return false ; }
Decodes a file descriptor using the given decoding options.
Returns a sorted set of all fonts.
Gets the asset fonts by name.
Get the system fonts.
Sets up the parser.
Gets a reader for the given inputsource.
Connects to the Fedora server and returns the inputstream.
Copies the content of this element into the new element.
Expands all the entities in the string.
Returns the index of the first character in buff that is not a valid entity.
Restarts a saved element from the stack.
Pop the current element from the top of the stack.
Pops a previously popped element from the stack.
Returns the prefix of the given name.
PREFIX + namespace + prefix + namespace is foreign.
Removes leading and trailing quotes from a string if present.
Split a string into an array of strings.
Performs a recursive rectification of an element.
Save the current instance state.
This method is called when the instance is destroyed.
eventmainthread subscribes to the mediaevent
linkevent.
Gets the proper base matrix from the bitmap.
Max zoom.
Returns true if the given text exists in the current selection.
Finds all the spans in the string and removes them.
Picks up a directory from an activity.
Rotate image by given degree
Set the output writer.
Writes a single character.
Writes a string to the output.
Returns the boolean value of the given attribute.
Writes a string as UTF - 16.
Writes out the namespace declarations.
Writes a name.
Method to create stream if not exists.
Wait for the stream to become active.
completestoresnapshotwithmissinginstancesnapshots.
Waiting for the minimal duration to execute the next provisioning request.
Amazon kinesis getrecords.
Performs an Amazon action retrying on errors.
Attempt to execute an Amazon action.
Checks if a bucket is accessible.
Loads snapshots from the snapshotstore.
Triggers the wildcard expander.
Returns the input string with all occurrences of oldpattern replaced by newpattern.
Deletes characters from instring that are in charstodelete.
Add a resourcelint report.
Update properties with configuration.
Gets the configproperties.
Create an inputstream based on a wrofile. If autodetectwrofile is true
Convert a map of preprocessors to a map of resource preprocessors.
Compiles the given content and returns the result.
Reload cache with new value.
Reload the model with a new value.
getwrappedservletrequest.
Transforms a string by appending a suffix to the filename.
On error.
Sends a redirect to the given location.
Process a resource.
createexpanderhandler function.
Locates an inputstream for the given URI.
} }
} ) ; }
Process a request.
Sets the configuration.
Identify duplicate group names.
Merges a wromodel into this one.
Locates the inputstream for the given URI.
Apply processors to the content.
Decorate a resourcepostprocessor.
Process the given request URI.
Splits a string into an array of strings.
Loads properties from the specified inputstream.
Parse properties.
Creates a custom wromanager factory.
Persist a list of resource fingerprints.
Checks if is targetgroup.
Extend plugin classpath.
getmodelresourceasstream.
return factory ; }
Sets the modeltransformers.
Prepends the given name to the string.
Processes a list of resources and merges them into a single resource.
Processes a list of resources and merges them into a single string.
Runs a list of resources in parallel.
Apply processors to a resource.
Decorates a resourcepreprocessor with a default processingcriteria.
Persists the string to the fallback storage.
Returns all declared fields of the given object.
Rewrite the given imageurl with the given cssuri.
Compute new image location.
Add a modeltransformer.
Processes a processedbundle.
Initializes the aggregatedfolderpath.
Extract variables.
Parses the given CSS string.
Replaces all the variables in the given CSS string.
Convert a resourcepostprocessor to a resourcepreprocessor.
Returns true if this resource is eligible for allocation of resources of the given type.
GZip compress the response.
Create a decorator that will include the given patterns.
Create a new pathpatternprocessordecorator that excludes the given patterns.
Create a new resourcechangehandler instance.
Remember a resource if it was previously remembered.
Apply the given function to the given resource.
Filter a collection of nulls.
Checks if the given request should be minimized.
Find imported resources.
Computes the absoluteurl for the given resource URI.
Create itemsasstring string.
Gets the aliaslist.
Allocate a new context.
Evaluates the template using the given reader. Closes the reader when done.
Evaluate the given script with the given source name.
Processes the input stream.
Checks if the request is a handler request.
Create handler request path.
Renames a group.
Computes the destination folder.
Processes a group.
Checks if a change is required for a group.
Locates the input stream for the given URI in one of the standalone contexts.
Create a generic objectpool using the given object factory.
Attempt to locate a resource in the given folder.
Open a jarfile.
Extract the path from the uri.
Checks if is minimized.
Add urilocators.
Decorate a wromodel factory with a list of model transformers.
Add a string to the requires list.
Process the content of the build update script.
Log summary.
Process a single resource.
Get a reentrant readwritelock for the given key.
Create a process for the given sourcefile.
Parse properties from the given string.
gettaskinfo gets the current list of tasks.
Returns the concatenation of the concatenation of the concatenation of the concatenation of the concatenation of the concatenation of
Parses a header.
Add pragma cache control and expires headers.
Get the pathinfo from a location string.
Get the servlet path from the given location.
Returns true if the given request matches the given path.
Load a regular expression string with a key.
Copies the reader to the writer and closes both reader and writer.
Create a new temporary file with the given extension.
clean imageurl.
Sets the object for the given attribute.
Generates a data URI from the given inputstream.
Generate data URI.
Sets the context with the given configuration.
Unset the correlation id.
Check if a cachekey has changed.
Invoked when an exception is thrown by the application.
Checks if a resource has been changed in the given group.
updatehashforgroup.
Returns true if at least one resource of the given type exists.
Create a process from source and destination files.
Parse a group definition.
Create a group from an XML element.
Parse a resource.
Returns the resources for the given group.
Stop a timer of the given name.
Returns the timer with the given name for the current thread.
Returns the previously registered timer with the given name.
Prints the statistics of this rule application factory.
Wake up all the workers.
Update the processed counters.
Update the finished counters.
Atomically update the given counter if the current value is smaller than the given value.
Produce a trace message for the given rule.
Instertintotaxonomy.
Ensures that the loading stage is complete.
Restore the taxonomy cleaning and context initialization.
Returns true if the class is inconsistent.
Restore the taxonomy.
Restore the instancetaxonomy.
Proof of conceptual entailmentinference.
Initializes the worker pool.
Invalidates this reasonerstage and all its poststages recursively.
return null ;
return toremove ;
Produce an unsupported OWL API method exception.
Remove the element at the specified position.
Remove a key and value pair at a given position.
getmovedposition.
Returns true if the array d contains the object o.
Adds an element to an array.
Checks that the number of occurrences of this node is correct.
Adds another classconclusiontimer to this one.
Add a new ruleapplicationtimer to this one.
Puts the given key - value pair into the given arrays if not already present.
Removes the entry for the given key.
Enlarges the internal arrays to accomodate the new capacity.
Reduces the size of the internal arrays to a power of two.
Loads a configuration from disk.
Prints the declarations of the classes in the given taxonomy.
Returns all instance nodes reachable from the given node.
Clears all elements from the receiver.
Combines a list of hashes into a single hash.
Copy an inputstream to an outputstream
Returns a delegatingincompletenessmonitor for this reasoner.
Process a taxonomy.
Submits an i to the pool.
Appends the given elkobject to the appender.
Marks the given query class as not computed.
adds a new directtypenode to this node.
check if the chain matches the property expression.
Applies the given functor to each element of the input set.
Add an element to the set.
Removes the object from the set.
Adds a counter to this counter.
Log memory usage of the given logger.
Sets the configuration options for this reasoner.
Shutdowns this logger.
Prints the header.
Prints an array of objects to the output stream.
Returns a string containing n characters.
Add a rulecounter to this one.
Writes a resource.
return ret ; }
getpropertydescriptorforpropertypath.
Returns a map of required parameters.
Checks if is single value type.
Add a link to this document.
Set the mediatype of the link.
Add hreflang parameter.
Add a link parameter
Adds a link parameter to the request.
Expand the partial URI using the given arguments.
Get the link s rels.
Get the link parameter revisions.
Returns true if any of the required variables have been satisfied.
Returns the string representation of the value.
Returns true if the given property is hidden.
Returns true if the input annotation contains the given property false otherwise.
hasexplicitorimplicitpropertyincludevalue.
Returns true if this element is required.
Returns the default value of the request parameter or header.
Returns the name of the parameter.
Gets the exposed property or parameter name.
Get the vocabulary for the object
Returns the query string.
Appends the form information from the given action descriptor.
Writes an inputbutton.
if possiblevalues. length > num_ ) return ; } }
ANDs the given affordancebuilders together.
Returns this instance as a collection of components.
Strips the optional variables from the list of action descriptors.
getfirstbyname.
get first by relationship ubernode.
Returns an iterator over the children of this node.
Returns an immutable hashmap where the keys and values are equal.
Construct a persistent treemap from an iterable of entries.
Returns an empty map.
Returns an imsortedset of the entries in this map.
Returns the key of the last element in this list.
Fold a sequence of operations.
Drops elements while the predicate holds true.
Folds the elements of this stream using the supplied function.
Of tuple 2.
Perform a match operation.
Registers the given classes with the class manager.
Get the element at the given index.
Append an element to the vector.
Concatenates this vector with the specified iterable.
Returns an empty mutable set with the given items.
Returns an empty mutable vector with the given items.
Returns an immutable set containing the given items.
Returns an immutable list containing the given items.
Create an unmodifiable unmoditerable from an array.
Returns a stringbuilder of the given length indenting spaces.
Returns the string representation of the given array of items.
Construct a lazyref instance from a producer function.
applyex t.
Inserts the given item into the array at the given index.
Copies the specified array into a new array.
Suspend ifassoaciatedwiththread.
Suspend the transaction before an asyncoperation is started.
Build the service components.
Validates a directory.
Create an inheritance link between two classes.
Copies all declared methods from the source class to the destination class.
Copies the given methods to the given destination class.
Removes a sbbentity with current class loader.
return true ; }
Gets the referencedraentitylinks which not exists.
Install service.
Uninstall service.
Checks if israentitylinknamereferenced.
Gets the usageparametersets.
This method resets all usageparameters to their defaults.
Display the result.
unfold array.
Executes an event.
Binds an object to the cache.
Unbinds a name from this node.
Looks up an object by its name.
Returns the namebindings of this node.
Finish the processing of the next event.
Checks if this tracelevel is higher than the given one.
Extract a jarfile to a destination directory.
Reads the data from the inputstream and writes it to the outputstream.
Puts an object into the tree.
Attach a sbbentity to this node.
Detach a sbbentity from this node.
Return true if the node has no attached entities.
Returns the names of the entities attached to this node.
Adds a timer to the list of timers.
Detach a timer from this node.
Returns true if there are no timers attached.
Returns the names of the timers attached to this node.
Add a name bound node.
Remove the named unbound.
Return true if there are no names bound.
Returns a copy of the names bound to this node.
Sets the value of a cmpattribute.
Get a cmpattribute.
Returns a copy of the cmpattributes map.
initnotificationinfo.
send a usage notification.
Downloads the remote du file.
Update the deployed components.
install deployableunit.
Uninstall a deployableunit.
Processes an internalundeploy.
Displays the current status of the user.
Checks if a log record can be logged.
Gets the logger for the given logrecord.
Returns a set of all sbbentityids of this service.
Get the permissions for the current policy.
Returns the codesources of the current policy.
Tests if a profile with the given name exists.
Remove this profiletable
Updates the configuration properties of the resource.
Slee is currently running.
Rastopping the object.
Activates this resource adaptor.
Deactivates this entity.
Method to schedule all activitiesend
Removes this resource adapter from the server.
Returns the resourceadaptorinterface of the given resourceadaptortype
Event when a service is active.
Derrefs an activityhandle reference.
Called when an activity ends.
updates the configuration properties of the resource adapter
Verifies that the new configuration properties are valid and if so logs them.
Rastopping this adaptor.
Call this method to rainactive the resource adaptor.
Attempt to unconfigure the adaptor.
Unsets the resource adaptor context of the target object.
Unsets the context for the resource adaptor.
Build the map of profileattribute.
Resume the playback of the animation.
Returns the activity context handles of this node.
Gets the usagembean with the given parametersetname.
Decorate the abstractclass.
Sends an event to all registered listeners of the given entity at the given address.
Sends an event to the slee container.
Returns the getprofilecmpmethodwrapper for the given profileid.
Get a map of abstract methods declared in a class.
getinterfacemethodsfrominterface returns a map of all the methods declared in the interface and not in
Create an objectpool for the given profiletable.
removeobjectpool removes a profiletable from the object pool
Checks if the notificationsource is the owner of the alarm.
Check if the alarm is still alive and if so trigger the alarm.
Returns the usageparameterset for the given profileobject and parameter name.
Returns the eventtype descriptor for this event type.
DeployableUnitFilter_.
Initialize the deployableunit.
Deploy a deployableunit.
Stops a deployableunit.
Prints the status of this deployment.
Executes all aftercommitactions.
Executes all aftercommitpriorityactions.
Executes all afterrollbackactions.
Executes all beforecommitactions.
Executes the beforecommitpriorityactions if any.
Returns the names of all tracers defined in this context.
Create a tracer with the given name.
Remove the replication data.
Process the usageparametersinterface for the given component.
Returns the sbbobjectpoolimpl by serviceid and sbbid.
Create an objectpool with the given parameters.
Executes an activity handle.
Create an activitycontexthandlereference for the given handle.
Finish an activity.
Checks the preconditions for a fire event.
_fireevent is called when an event is dispatched to an activity.
} }
Makes the operation name for the getter.
Converts the string to an object if possible.
Sets the profileid.
Extracts the message from the result.
Checks if the given object is a child of this slee.
Does this set contain all of the elements in the given collection?
Removes all of the elements in the specified collection from this list.
Checks if this level is higher than the given level.
Resolves a value from the stream.
Detach all resources.
Add a profilecall to the sleecontext
Returns the profile object with the given name. If the profile does not exist it will be created
passivateprofileobjectontxend.
Sets this componentid to the given text.
Generate the concrete activitycontextinterface.
Generate concrete methods.
Sets the value of an attribute in the cache.
Add an aciname to the cache.
Remove all namebindings from the activitycontextnamingfacility
Remove a namebinding.
Attempt to attach a timer to this cache
removes the timers from the slee container
Attach a sbbentity to this activity.
Detach a sbbentity from this activity context.
Returns the sorted set of sbbentityids of all sbbentityids in the cache that
Called when an activity ends.
addcomponent adds a new component to the container.
Gets the external dependencies.
Returns true if the dependencies are satisfied.
Checks if there are any duplicate words in this sentence.
getinstallactions.
Gets the uninstallactions.
hasreferringdu.
Closes the profile.
Gets the objectname.
This method checks if the profile is write - mode and if so prints a debug message if
Called before setting the cmpfield.
aftersetcmpfield callback.
beforegetcmpfield.
aftergetcmpfield.
Before managementmethodinvocation.
Called after managementmethodinvocation.
Recursively delete a file or directory.
Create the defaultconstructor.
createdefaultusageparametergetter.
Creates the getsbbentity and setsbbentity methods.
createfireeventmethods.
Create a getsbbactivitycontextinterfacemethod.
Add the given queryexpression to this query.
Bind a name to an object.
Rebinds the named object to the specified target object.
Decorator for abstractsbb.
A convenience method for invoking a method on a sbbconcrete proxy and returning a void
Gets the realfieldname.
Sets the value of the given field.
Returns the value of the given field.
profileinitialize.
Unsets the profilecontext for this invocation
Gets the profilelocalobject.
Updated event if needed.
Get the profilecmpslee10wrapper
Creates a class with the specified classname and interfaces.
Create an inheritance link for the given concrete class and superclass.
addmembervaluestoannotation.
Returns the activitycontextinterface associated with the given activity.
Gets the classpool.
Sets the deployableunit.
Called when the server is undeployed.
Executes an activity.
checkinterfaces.
Returns all methods declared in an interface and its superinterfaces excluding those in the given set.
Checks if the tracername is valid.
Handles a profile query by static query.
return null ; }
getentitymanager.
Starts the server.
Switches to a classloader with the given profileobject.
makesafeproxycall.
Checks if the current transaction is the same as the current one
Convert the lastaccess time stamp to the TTL string.
isprofileclassvisible.
getprofileobjectvalidincurrenttransaction.
Get the list of logger names that match the given regular expression.
resetloggerlevels.
Clears all loggers of the given name.
This adds a logger to the system.
Remove a handler from a logger
Converts the tracer name to the log4j logger name.
sync log4j level with log4j log4j
Set the log4j level.
Reset the cacheflags.
Sends a notification to the tracer.
Checks if the given tracername is equal to the given one.
Writes an object to an outputstream.
Read an object from an objectinputstream.
adds a domain as a direct dependency
Returns all the dependencies of this domain.
Finds a class locally by name.
Attempts to find a resource locally by name.
Returns an enumeration of URLs representing all of the resources with the given name.
Creates a new profilembean and registers it.
Resume a suspended sleetransaction
Gets the sbbids.
Gets the resourceadaptorentitylinks.
Initializes the slee.
Shutdowns the slee and checks its state.
Validates the transition between two slee states.
generatenamedusageparametergetter.
Sets the given field to the given value.
Builds a new polyjdbc instance.
Appends a value to the query.
Executes the given operation in the current transaction.
Creates a regionrequest object from a string.
Gets the region.
Gets the ontype.
Sets the viewing hints.
Adds a viewing hint to the resource.
Sets the renderings.
Adds multiple renderings to the resource.
Merges a list of profiles into a single profile.
Creates a rotationrequest object from a string.
Creates a sizerequest object from a string.
Initialize the adb connection.
Dumps the current device to a string.
Attempt to push the gps2 device to the device
Attempt to push GPS2 to a device.
Dumps the contents of the adb file to stdout and stderr.
pulldump2pc.
Gets the crashlog from external storage.
Detabifies the contents of the string by tabwidth tabs.
Indents this string by the given number of spaces.
Tokenizes the given text.
Sets the markdown of the given text.
Escapes special characters that are contained in tag attributes.
Add an exception to the queue.
Close the cache.
Find the parent fqcn.
Writes the class to the given filer.
Writes a bitvector01divider to the underlying stream
Appends the strings to the bitvector.
Reads data from the given inputstream.
Gets a list of objects from a path.
setklovreport.
Adds a screen capture from the given path to the current step
Set a systeminfo key to a given value.
Create a selector that selects a single property from a table.
Create a selector that applies a transform to the given property.
Extract validation annotation data.
Extract all annotations for a given property.
Returns the annotations on a property of the given class.
Gets the property descriptor.
Convert a map to an object of a given class.
Creates a new complex type from a map.
Convert an object to a map.
Convert an object to a map.
Do getvalues.
Create the compositevalidator.
lookupvalidatorsandinitializethemwithmetadatapropertiestovalidator
Lookup validator in registry.
apply validationmetadatapropertiestovalidator.
ifpropertyblankremove.
Tick the timer.
Returns the size of the cache.
Returns a hash value for the given object.
Try to open the database.
Put all values in the map.
Remove all of the given keys.
Returns an iterator over the key - value pairs in the database starting at the given key.
loadallbykeys loads a map of all matching keys from the database.
Flushes and closes the database.
Reduces an array by an object.
Reduce by r.
Computes the variance of a set of double values.
Computes the mean of an array of longs.
Invokes a method from an object argument using reflection.
Reduces an array by a given reduceby function.
Converts a timestamp in milliseconds to a string in euroutc system time format.
Tests if an object matches a set of criteria.
Creates a criterion that matches fields that are not contained in the given values.
constructs a criteria from a list of objects
parses a json string to a criteria object
Adds an array of integers to the current list.
Finds and returns the maximum element in an array.
Returns the first N elements of the given list that are of the given sorts.
Returns the last element of the given list according to the given sorts.
Returns the last N elements of a list.
Returns the least of the given elements.
Returns the minimum element of the given list.
Finds and returns the minimum value in an array using a given sort.
Process array of maps.
Convert a collection of maps to a collection of objects.
Populate an object from a map.
get by key.
Create tooltip with namespace.
Add a hexidecimal digit to the current charsequence.
Process the writequeue.
Starts the writer.
Gets the character at the specified index.
Returns the lowest common prefix of the given string.
Checks if the given string is in the given chars.
Add a character to a string.
Adds the given objects to a string.
Compacts the given string by removing duplicated white space.
Splits the given string into an array of strings.
Splits the given string around each space character in each token.
Splits the given string by pipe.
Converts a char array of array to a string array.
Converts a string to CamelCase optionally uppercases it.
Returns true if the specified strings are inside of the specified strings.
Returns the underbarcased version of the given string.
Convert a number to a string.
Combines several sorts into a single one.
Sorts the given list according to the given fields.
Returns a comparator for the given fields.
Returns a list of child comparators.
Checks if the value is in the map.
Compares two ints and die if they are not equal
Compares two int arrays and dies if they are the same.
Returns the sum of the values in the given range.
Rounds a number up to the power of 2.
Sorts the given list using the given sortby and fields. The fields are sorted in ascending
Sorts a list according to a field.
Recursively set fieldvalue from map.
Converts an object to a list.
Creates the SQL to load all version data by keys for the given table.
Deep copy of a list.
Return true if the object has a string field with the given name.
Checks if class has string field.
Check if class has a field with given name.
Get first comparable or primitive field from class
Gets the sortablefield.
Compares two cacheentry objects.
return 0 ; }
Sorts the given list according to the given sorts.
Sorts the given list according to the given sortby string.
Sorts the entries of the given map according to the given sortby string.
Sorts the values of the given map according to the given sortby clause.
Sort keys collection.
Sorts the given array using the given sortby string.
Returns a universal comparator for the specified field access object.
Returns a comparator that can be used to sort a sequence of objects in ascending or descending order.
Get a value from the cache.
Returns the cached value for the given key or null if not in the cache.
Evict if needed.
Initializes this range with the given value if necessary.
Allocate a direct buffer.
Determines if we should exit.
Manage the inputwriter channel.
If the queue is empty maybe flush.
Starts the monitor.
Receiver start event.
Get an object from the map.
main query plan.
Performs the actual filtering of a group expression.
Ticks the timer.
Sync the outputstream to disk if dirty.
Cleanup the outputstream.
Writes the next buffer to the file.
Write a bufferout to the output stream.
Initializes the output stream.
Puts all the values in the given map into the store.
Convert a key to a byte array.
Read the metadata for the given property from the properties file.
Extracts validator metadata from a string.
return null ; }
Extract validatormetadata.
Extract validatormetadata from a collection of annotations.
Convert annotationdata to validator metadata.
Splits the given string around the given split character using the given limit.
Splits the given string by whitespace.
Splits a string around matches of the given delimiters.
Returns a new string consisting of the characters in the given string separated by the given delimiters
Splits the given string by the given delimiters. The delimiters are separated by the given
Parse a double from the given buffer.
Parses an integer from the given buffer.
Parses a long from the given buffer.
Get a property from an object by its path.
getfieldsfromobject.
Returns the type of the field for the given property.
injectintoproperty.
Set an indexed property of a class.
Recursive getcollectionprop implementation.
Returns the value of the given property on the given object.
Get the int value of a property.
Initializes this exception.
Creates a message with the specified key and arguments.
Creates a validation message.
Convert a list of keys to an array of values
Returns the subject of the current validation context.
Parses the given text into an object.
Sends an http request to the server.
Deletes a database.
Creates a new database.
Returns a list of uuids.
Triggers a replication request.
Query for a single value.
Filter the results by descending or ascending order.
Synchronise all designdocuments in the database with the database.
Gets a design document from the database.
Get all designdocuments from the Knowledge Base.
Gets a designdocument from the depot.
Saves the replicator document.
Finds a replicator document in the database.
Find all replicatordocuments in the database.
Deletes a replicator document.
Finds a single instance of the given class type with the given id.
Find documents by a query string.
Checks if the collection contains the given id.
Submits a list of objects to the server.
PUTs an object to the server.
Executes a PUT request.
Perform a POST request
Perform a DELETE request.
Validates the response.
Sets the request entity.
Add an attachment to the message.
Returns the changes for this user.
Reads the next row from the CSV file.
Converts the given monetary value to its string representation.
Shuts down this instance of the system.
Create an observable that writes data to a servletoutputstream.
Adds tags to a metric.
Verification and create temptables.
Get the namespace ID for a given namespacename.
isquery.
Send authentication request.
Get the HTTP verb of the exchange
Generate subject accessreview.
Release a connection back to the pool.
Called when a request fails.
Initializes this object with the given rxsession.
Find all scheduled jobs.
Convert a map of bucket points to a list of buckets.
Ends the exchange with the given status code and reason phrase.
Performs a scan of the data stored in a bucket.
Creates buckets from start to end for a given step.
Send a message to the Kafka consumer.
Send one - way messages.
Send a message to a Kafka topic.
Perform a scan operation against the database.
Add a file to the zip.
Replaces the entry for the given file with the given text.
Builds the zip file.
Generate the metrics for a single component.
This method is deprecated in favor of fetchcontent.
Downloads the content of an orderitem.
Upload an exporttransformation to the link.
Generate and return the metrics for the given components.
Creates a new file in the given parent directory.
Ends the current element of the parse tree.
Registers the given adaptor for the given type in the given group.
Registers a renderer for the specified type in the specified group.
Prepares a template for the given prototype domain object and content.
Add a domain object to the assembler.
Set a property on the object.
Add a configurationobject as a child of this object.
Returns a supplier that creates files in the given directory.
Copy the contents of an inputstream to an outputstream.
Parses the given file as HTML.
Parse a document from the given reader.
Gets all elements in the given element.
Returns a stream of nodes that are children of the given element.
Get the first child element of a parent element whose name is one of the given names.
Gets elements in a parent element that have any of the named child elements.
Validates an XML against a schema.
Entry point for the archiver tool.
Appends content to this builder with UTF - 8 encoding.
Creates a builder from a resource.
Process an entry in the ZIP archive.
URL - encode a string using the ASCII character encoding.
Sets the signature and gmttime for an accesskey.
Removes all whitespace characters from the given data.
Signs the request with the callback.
Sets the data for the given objectkey in the recorder.
Complete multipart upload.
Invokes the action action.
Update the state of an entry.
Returns true if the timeout has expired.
Gets a notification by id.
Get all the addresseedtos of a given id.
Gets an addresseedto by id.
Get events by notification
Gets an event.
Gets the notification REST URL for a single notification request.
Gets the entry with the given id.
Get the authentication token.
Get the number of entries in the list.
Add new categories if they are not null.
Processes the notification request.
Create a notificationresponse object with an error.
Maps the given response to a notificationresponse.
Maps a notificationentry to a notificationentry object.
Attach the available actions to the notification entry
Normalize link.
Get the notification category from the portlet request
Get the notificationsource from the portletrequest preferences.
Invokes the readnotices action.
Read a notificationresponse from a file.
Get the student id from the portlet request
Extract the studentid from the response.
Invokes the action.
Get the notification attributes as a map.
Normalizes a geotuple so that its magnitude is 1. 0.
Checks to see if two boxes are contained.
Distance from a point to the closest point.
Computes the sign of a point.
Sets this quaternion from a Se3f64 object.
Sets this transformation to a rotation matrix.
Convert a rectangle to a polygon.
Converts a polygon 2d quadrilateral to a quadrilateral
Computes the bounding rectangle of a quadrilateral
Calculates the bounding rectangle of a polygon
Computes the 2D center of a quadrilateral
Calculates the average point for each vertex in a polygon
Computes the convex hull of a list of points.
Removes polygon vertices with the acute angle less than or equal to the given tolerance.
Calculates the average of closest points error.
Computes the area between two polygons
Checks if a point is inside a quadrilateral
Checks to see if a triangle contains the given point.
Intersects two lineparametric 2d_f64.
Intersection of two line segments
Computes the intersection of two line segments.
Intersection of two linesegments
Computes the intersection of two polygons.
Checks if a point is inside a ellipse
Returns the intersection area of two rectangles
Returns the value of a given element of a matrix.
Converts a matrix to a quaternion.
Computes the X rotation for a matrix.
Sets the x component of a rotation matrix.
Computes the rotation matrix by a rotation matrix and a rotation matrix.
Computes the z - component of a rotation matrix.
Sets the orthogonal to a rotation matrix.
Convert an elliptical rotation matrix to a matrix.
Rotates a matrix about an axis.
Sets the angle of the slope.
Creates a twist based on a se3_f64 motion.
Sets the transformations between the two se3_f64 rotation.
Interpolates the se3_f64 se3_f64.
Computes the SVD of a list of points.
Solves a single point on a plane.
Returns the sidelength of the vertex at the given index.
Checks if a point is inside this intersection.
Convert a conic general matrix to a dmatrixrmaj.
Convert a general matrix to a general matrix.
Convert a conicgeneral_f64 object to another object.
Convert a parabolageneral to a conicgeneral.
Divides a geotuple by a scalar
Convert a geotuple3d_f64 to a matrix.
Converts a matrixrmaj into a geotuple3d.
Sets the parameter vector of the rotation.
Distance between two distributions in half.
Checks to see if two planes intersect.
Checks to see if a point is contained in a plane.
Replies if two points are intersecting.
Interpolates two images.
Extracts the rotation and rotation quatrices from the quaternion q.
Computes the convex hull of the polygon.
Sets the tonomotion value of a se object
Converts a se3_f64 se to a homogenous matrix.
Tohomogeneous transform.
Computes the 3D coordinates of a rotation matrix and a rotation matrix.
Checks if two se3_f64 rotations are identical
Converts a lat lon coordinate to a unit vector.
Checks to see if a circle is convex.
Returns the square radius of a circle defined by two points.
Finds the point on the line which is closest to the given points.
Returns the point on the line that is closest to the given point
Returns the point on the plane closest to the origin
Returns the point on the line that is closest to the given point
Finds the point on a triangle which is closest to a given point.
Transforms a Se2f64 into a point.
Transforms the points in the provided se into the points in the points array.
Checks if two quadrilateral are within tolerance of each other
Returns the acute angle between two lines.
Converts a linepolar2d_f64 to a lineparametric2d_
Convert a linepolar2d_f64 to a linepolar2d_f
Convert a linesegment to a lineparametric
Converts a linesegment2d_f64 into a generalized floating point number.
Converts two points to a linegeneral.
Converts a point to a lineparametric.
Convert a lineparametric2d_f64 to a linepolar2d_
Convert a lineparametric2d_f64 to another linegeneral2d_f
Convert a linegeneral2d_f64 to a lineparametric2d_f
Converts a planenormal3d_f64 into a general plane.
Convert a planetangent3d_f64 into a planenormal.
Convert a planenormal3d_f64 to a planenormal3d_f64
Converts a point2d to a point3d
Converts a plane in general coordinates to a world in general coordinates.
Returns true if t is identical to this t.
Returns a deep copy of the matrix.
Computes the squared norm of this vector.
Computes the t - coordinate of a point on a line given a line and a point on
Returns true if this vector has any uncountable elements.
Checks if the parabola is equivalent to the given absolute value.
Centers this point on the plane.
Computes the acute angle between two lines.
Checks if a point is infinitely close to a given tolerance
Generate num_ random points with the given center and standard deviation
Converts a 4x4 homogeneous point to E
Subtracts two vectors and returns the result.
Returns true if the two points have the same sign within the given tolerance.
Sets the values of this rectangle to be equal to those of the argument.
Converts an ellipse rotated image into an ellipse quadratic image
Computes the point of a rotated ellipse given a t and an ellipse.
Computes the angle of a point given an ellipse.
Computes the tangent of the ellipse given the tangent.
Selects the tangent of a line from the center of the ellipse. The tangent is
Returns the corner at the specified index.
Distance between two linesegments
Returns the distance between a line and a point.
Computes the distance between a point and a linesegment
Replies the distance between a point and a plane.
Returns the distance between a point and a cylinder.
Returns the Euclidean distance between the two segments.
Returns the squared Euclidean distance between the two segments.
Distance between a point and a quadrilateral
Replies the squared distance between the given point and the quadrilateral.
Returns the distance between a point and a polygon.
Finds the shortest distance squared from a point to a polygon
Returns the distance from the origin to the line
Computes the Euclidean distance to a point.
Computes the 2D Euclidean distance of a point p to an ellipse
Add a new node to the path.
Returns the point on the line that is closest to the given point
Finds the point on the ellipse and returns the closest to it.
Processes a sequence of points using the Curve25519 algorithm.
Creates a random vector with the given minimum and maximum
Converts a vector3d_f64 to a canonical vector3d_f64
Checks if two vectors are identical within a given tolerance.
Normalizes a vector.
Creates a matrix from the given vector.
Convert a matrixrmaj to a vector3d_f64.
Returns the Euclidean distance between the specified two points.
Set the ellipse to rotate.
Normalizes this quaternion.
Computes the triangle of the triangle formed by the three points.
Computes the quadrilateral
Returns the absolute value of a polygon
Computes the mean of a list of points.
Orders a list of points according to their angles in clockwise order
Given a list of points and a mean and a covariance matrix computes the normal of the points
Checks if a polygon is convex.
Multiplies each element of this vector by a scalar
Returns the maximum absolute value of this vector.
Distance between two points.
Returns the squared Euclidean distance between the specified two points.
Generate random points on a plane.
Returns a list of random points with the given mean
Returns a list of random points drawn from the mean.
Calculates the mean of the list of points
Calculates the mean of a list of points
Invalidates the given credentials from the cache.
Invalidate all the jwts in the cache that match the given predicate.
Combines a collection of strings to a set of strings.
Get the features from the server directory.
getconfigdropinsfeatures.
Gets the serverxmlfeatures.
Parse an include node.
Parse a featuremanager node.
Download jsons.
Get a set of libertyfeatures from a list of json files.
check if the list of features is only openlibertyfeatures
Checks if target collection contains all string in reference ignoring case.
getnextproductversion gets the next product version from a version string.
Extract the symbolic name from a jar file.
Gets the mapbased install kernel jar.
Compares two jar files and returns true if they are the same.
Extract the version from the given filename.
Compares two version strings.
Returns the productinfo of the specified action in the specified install directory.
Checks if isspringbootuberjar.
getarquillianproperty.
Checks if the given file is valid for this environment.
Moves the tortoise back to center.
Checks if two possibly null objects are equal.
Loads an integer from a string.
Throwpizzaparty.
Verify the turtle s approvals.
Swaps the blank cells of the given target cell.
Returns the distance between the goal and the current solution.
Printf to standard output.
Prints a formatted string to standard output using the specified format string and arguments and flushes the
Make a fishy decision.
Prints a variable to System. out.
Returns a random integer uniformly in [ a b ).
Returns a random double uniformly in [ a b ).
Returns the number of poisson distributions.
Returns the number of discrete elements in the specified array.
Capitalize first letter.
Returns the word with the first letter uncapitalized.
Adds the string str_ to the end of path if it does not already end with str_
Joins a criteriajoin object to a string.
Gets the token sentence.
Processes the incoming container request context.
Extract the authtoken from the cookielist.
Traverses the injector and registers all guicebound classes.
Recursively gets all permissions of a role.
Add a projection with an alias
Convert a jobinfo object to a jobdetail object.
Convert a triggerinfo object to a trigger.
Sets repeatcount and interval values for the given trigger.
Sets the start and end time of the trigger.
Queues a mailitem for sending.
Writes the contents of the given stream to the given outputstream.
Initializes the scheduler.
Gets all the fields of the given class sorted by their natural order.
Returns a map of all the fields of the given class.
Configures the encryptor with the given configuration.
Generateattributeshash.
Generate token string.
Send a mailitem to all registered receivers.
generate strongpassword string.
Retrieves a user by its username.
Hashes a password with SHA256.
Verifies the strength of the given accountname.
Rollback the hibernate transaction if it is active.
Rollbacks the hibernate transaction.
Starts the transaction.
Check if the request is authorized.
Parses a date value from the given object field.
Get the internal server error response.
Create a restriction that tests if the given object is equal to the given value.
Create a restriction that tests if the given object is not equal to the given value.
Apply a less than constraint to the provided object.
Create a restriction that tests if the given object is less than the given value.
Create a restriction that tests if the given object is greater than the given value.
Create a restriction that tests if the given object is greater than the given value.
Create a restriction that tests if an object is an ilike.
Create a restriction that will check if the given value is in the list of values.
Creates a new namespacemanager instance with the given namespace and href.
Return a new resource representation with the given content.
Creates a new representation with a new rel attribute.
Create a new representation with a new value.
Create a new representation with a new namespace.
Decodes a byte array.
Base64 encodes a string to a byte array.
Compares two Readers for equality.
Mvs a file.
Creates a new empty file and sets lastmodified to now.
Gets the basename of a file.
Add padding to the current block.
Returns the short name of the given class.
Returns all supertypes of the given class including the interfaces and superclasses.
Verifies a password.
Reads a string from the system input.
Appends a byte to the buffer.
Appends bytes to the buffer.
Returns a deep copy of the given array.
Add another fraction to this fraction.
Subtraction from another fraction.
Returns this fraction multiplied by another fraction.
Returns this divided by another fraction.
Returns the maximum value of the given values.
Returns the minimum of the specified values.
Checks a condition throwing an illegalargumentexception if the condition is not met.
Uses the Meteo API to fetch forecast data from the meteo service.
Uses the meteoclient to fetch the content of a location.
Uses the meteoclient to fetch the content of a location from a given date range.
Finds the meteoextrasforecasts for hoursahead from now.
Find the nearest forecast for a given date.
Returns the forecast results for a given query
Creates a new forecast using simpleforecast.
Create a forecast using the current date and time as the starting point.
Parses a location from a string of coordinates.
Performs a request to the meteo service to get the content of the document.
Returns the windsymbolname of a pointforecast.
Find the beaufortlevel of a pointcast.
Creates a new URI from the given string.
issun boolean.
Gets the pointforecast.
Gets the best fit periodforecast.
Returns the content of the textlocationweather table at the given coordinates.
Use this method to fetch text location weather data from meteo. org.
Update the database.
Invokes a method on the specified object with the specified arguments.
Acquires an object from the given source.
Gets a referenced object.
Gets the wrapped object.
Returns the configuration of the given class.
Gets the issubstitutorenabled.
Create a class iterator.
return decoder ; }
Returns a list of services of the given interface.
Get the module object for the given interface implemented and moduletype.
Acquire an inputstream from the given source.
Returns the size of the array.
Gets the wrapped data.
Returns the component at the given index.
Returns the prefix of this name with the given index.
Returns true if the type is colored.
Matches the given regular expression against the given character sequence.
C findloop loop.
Subset the given sub expression to this one.
CBR dissect.
Clones all outgoing edges from old to to to.
Recursive depth - first search.
Recursive marking of a subtree.
Optimize a subre of a node.
Parses a subre from the current state.
Recursive deltraverse.
Generate a nonword colored font.
word.
Scans a number.
Match a bracket.
Scan plain text.
return pos ;
Processes a single character.
Do the actual character set iteration.
Returns the color value for the given color.
Returns the pseudocolor.
Processes a subrange of the current color.
okcolors. nfa should be a valid nfa.
Colorchain a.
Uncolorchain a.
Dump all the colordescs in this font.
Consumes the beginning of the current token.
Interpolates the string with the given interpolated string.
Get the color for the given codepoint.
Initializes the stateset to the given start.
Find the last cold state.
Returns a set containing the eclass of the given character.
Returns the unicodeset for the given cclassname.
Sorts the arcs according to the carcsort algorithm.
Create a new state with the given flag.
Moves all outs from oldstate to newstate.
Moves all arcs from old to newstate.
Copy all ins from old to newstate.
Copy the outs from oldstate to newstate.
Drop a state.
Frees a state.
cparc.
Recursive depth - first traversal of a state.
Sets the pseudocolors of this node and its parent.
Debugging function for the NFA.
Dumps a state.
Recursively dump the arcs of this state.
Recursive helper function for dumprarcs.
Performs the optimization.
Performs the actual analysis.
combine two arcs
Reduces the number of unreachable states.
Recursively mark all reachable states of state s as reached by okay.
Traverses the inchain of s and marks all reachable states as okay.
Reduces the number of empty chains in the shortest path from the current freestate to the
Return true if the arc is empty.
Loads the rule parameters from the ruleparametersfile.
getruleinterpreterplugins.
Gets the reportplugins.
Gets the ruleselection.
Runs the tool using the given arguments.
Gets the error message from a cliexecutionexception.
gather standard options.
Gathers the tasks and options from the given task factory and adds them to the given options
Gathers the task names from the given task factory.
Interprets the given commandline.
Parse the command line and return the commandline.
Executes the given task.
Read properties from the commandline.
Prints usage information.
Gets the home directory.
Create the plugin class loader.
Get the ids of all containing ids within the specified bounds.
Get the ids of all intersecting cells.
Get the URI for the given target and parameters.
add a new route to the router
Returns the number of routes in this itinerary.
Add route to first.
Add route to this router.
Add route to last router.
Returns true if any of the paths in this request path match any of the paths in the given
Returns a criterion that matches when the given property equals the given value.
Gets the store filename.
Compares two entries for order.
Compare two entries.
Compares bookmarks.
Set the lastmodified time of the servlet class file.
Returns a list of the names of the sources that this handler depends on.
Lookup a class by its name.
Parse the authorization header.
Get an instance of the protectedfunctionmapper.
Map a function to a method.
getmapforfunction getmapforfunction.
Returns the method corresponding to the given prefix and localname.
Sets the values of this array to the given values.
Resolve a variable.
Parse the report from the given filename.
Parse the jar file.
Parse a tagfile directive.
Create a new compiler instance.
Get a resource as an inputstream.
Calculates the last modification timestamp of all channels in the system.
findclassloaders basicfindclassloaders
Checks if this classloader is a parent classloader of the given classloader.
Attempt to start loading a resource.
Reads the stream header.
Paginates through a full dataset.
Produce a metakey from a string.
Fills the requirements.
Gets the tagfile for the given shortname.
Parse the implicittld.
Returns the checksum for the given filename and algorithm.
Returns the size of a file in bytes.
Validates a channel name.
seeks to the specified block number.
Attempt to locate the block at the given position.
Gets the maven artifacts.
updateoptstateandreps.
calc1byteprices.
calc longrepprices.
calcnormalmatchprices.
throws exception for expected byte
throws exception for invalid byte
Scantlds initialization.
Scantld information for TLDs.
add a wrapper for a jspuri
Gets the parentclassloader.
Set the bytecode for a given name.
getbytecodebirthtime.
Saves the bytecode of a class.
check if all jsps are compile.
Initializes the classpath.
Starts the background thread.
Stops the thread.
) ;
Find a channel instance by its name.
Find a channel.
Update the deploygroupcache.
Copy the contents of the given inputstream to the given outputstream.
Create a new node.
Parse the attributes of the current page.
Add an include to the node
; return result ;
Add an attribute to the element.
Add a child node
Returns an iterator over the attributes.
Returns an iterator over the children of this node.
Returns an iterator over all child nodes with the given name.
Converts this object to a Mavencoordinates object.
Finds the alias for the given variable name.
Sets the thread.
Unsets the thread.
Find the wrapped printstream.
Write an optional string value to the stringwriter.
Writes a string to a stringwriter.
Creates a new element and adds it to the parent element.
Creates a new element with the given name and inserts it before the given parent.
Writes the contents of this buffer to the given writer.
Sets the writer.
Reallocate the internal buffer to hold len characters.
Map the elfunctions in the page.
Returns the state that has the same key as the given parent.
Registers a model with the given storageprovider.
Stream data from the datapath for the given key.
Monitor a job.
Checks if the request is authenticated.
Finish the writing of the XML file.
Creates a new Gson instance.
encodeforlzma2.
Returns the union of providedmetadata and extractedmetadata.
Get the throwable throwable from the request.
Checks if the given coordinates is a checksum.
Finish uncompressed data.
return t ; }
Evaluates an EL expression.
Get the prefix from the osgi properties.
Checks if the given path is an XML file.
Parse the tagfiledirectives in the given path and return a taginfo object
Load a tagfile.
Removes all prototypefiles of the given classfile.
Set the URI root.
Scan files for pages.
Recursively locate the uriroot.
Moves the hash to the next position in the hash table.
Checks if the next character in the stream matches the string.
Match a string with optional spaces followed by the given string.
Skip characters until the given string is found.
skipuntilignoreesc.
Skip until the next tag or end of line. Return null if there are no more tags.
Consume a token and return the string.
Popfile the current report
Make this coordinates unclassified.
Filters the list of aspectinformation by factoryid.
Get the ids of all missing factories.
Set the schema resource prefix.
Sets the DTD resource prefix.
Convert the given node to a tree node.
Merges all errors from the bindingresult into the result.
Binds all initializers.
scanaspectinformations.
Unqualifies a path.
Invokes a custom tag handler.
Returns a byte array of the given size.
Returns an int array of the specified size filled with zeros.
Create an aetherresult from a collection of artifactresult.
Get a resource as an inputstream
Validates the given pagedata using the configured tag libraryvalidator.
Pushes a character stream into the stack.
Returns the encoding of the given jar file.
Report a fatal error to the error manager
Returns the real path of the given path.
Returns the resource at the given path.
Get resource as stream.
Returns the set of resource paths for the given path.
Logs a message with an exception.
Add a filter.
Returns the number of bytes required to hold the contents of a dictionary.
Get the memory usage of a dictionary.
Set preset dictionary.
Move the window to the next one.
Fill the window with data from the given input.
Processes the pending bytes.
Get the length of the match between dist and lenlimit
Get the length of a matching buffer.
Verification of matches.
Moves the readpos to the next available space and returns the number of bytes that can be
Recycle the output stream.
Flush the current buffer to the underlying stream.
Clears the buffer.
Flushes this output stream and forces any buffered output bytes to be written out.
Close the response stream.
Writes a string to the underlying stream.
Called when a javacerror occurs.
Make a key from a metadata map.
Generate the class.
Compile the report.
Initialize the compiler.
Check if the path points to a system jar in web. inf.
Returns a quoted version of the given character.
Generate the declarations for the given node.
Generate the taghandlerpoolname for a node.
Generate the XML prolog.
Generate the common postamble.
Generate the postamble.
Generate the report.
Generate taghandlerattributes if taghandler has dynamicattributes set.
Reads properties from the stream.
Export a channel to the given outputstream.
validatexmlview validate all taglibs in xmlview
get a handler from the stack.
Parse an EL expression.
return curr ; } return prev ; }
Is the given URI a jsppage?
Prints a comment.
Prints a string to the underlying writer.
Prints a string to the underlying writer.
Prints multiple lines to the stream.
Gets the expression in xml.
Check if the given scope is not equal to the given string.
Escapes a string so that it can be used in an XML document.
Validates a set of EL expressions.
Get the classname of the taghandler.
Convert a path to a legal java package.
Splits the given path around matches of the given pattern.
Makes a java identifier from the given string.
Mangles a character.
Returns true if the given string is a java keyword.
Add a property to the map.
Applies a modifier to a string.
Returns a sorted set of metadata values.
Run the update.
Get the basename of the given name.
Puts the string value into the cache.
Reads metadata from the database.
Build a collection of metrics from the preaggregatedpayload.
Resolves a number.
Writes the string representation of the given object to the given outputstream.
Get the TTL for the given locator.
Create prepared statements.
Log delayed metrics for a tenant.
Log delayed aggregated metrics for a tenant.
Reads a double or long value from the given stream.
Writes a unversioned double or long to the given outputstream.
Returns an unmodifiable map of all properties.
Create a new container in the blobstore
Shuffles the list of managed shards and schedules the next slot for rollup.
clear the slot from runningslots
Add a listener to the specified event.
Register a callback to be called once for a given event.
Remove a previously added event.
Emit a string event with specified arguments.
Returns a list of listeners for the given event.
Returns the remote name of the file.
Appends a rollupevent to the file.
Parse the timestamp part of the filename.
Starts the server.
Gets the rollupcomputer from the given source granularity.
Get the instance from the configuration.
Populates the TTL map.
Computes the maximum lengths of the headers and outputs.
Formats a header.
Formats an array of outputformatters.
registers metrics for the given objectname
Sets the name of the threadpool to be built.
Add a metric index to the set.
Gets the complete metricnames.
Returns a list of tokens for the given locator.
Asynchronously put a document into the database.
Calculates granularity from requestedduration and points. If requestedduration is less than points
Sets the server time in milliseconds.
Get the uniquehosts.
Gets the maximum number of connections per host.
Returns an iterator over the metric column families.
Inserts a collection of metrics into the store.
Inserts a collection of metrics to the data store.
Gets the locators.
Returns the current and nextlevel of the given query.
Starts the uploader thread.
Stops the uploader thread.
Determine if the locator is currently in a batchlayer.
Checks if the locator is in the discovery layer.
Return true if the locator is currently in the token discovery layer.
Determines if a delayedlocator is currently present in a slot.
setdelayedlocatorforaslotcurrent.
Returns a map of range - > iterable for the given granularity.
Returns an iterable over the ranges of granularity between from and to.
Insert a collection of metrics into Cassandra.
Insert metrics into a columnfamily.
Checks if the given metric has been delayed for too long.
getboundstatementformetricifdelayed.
Gets the metadata values for the given locator.
Checks if the content - type header is valid.
Returns true if the accept header is valid.
Insert a batch of metrics into elasticsearch.
Checks if this combination is valid.
Check for unexpected errors and terminate if too many.
Gets a new instance of the extractor.
Gets os matches.
Starts the extraction process.
Stop the RabbitMQ process.
Returns the default pnsignalingparams instance.
Add all iceservers to the list.
add iceservers.
Transmit a message to a user
Sends a message to all peers.
Gets the value of the weitereadresse property.
Gets the value of the userdefinedsimplefield property.
Gets the value of the userdefinedanyfield property.
setter for apisuchfelder.
Gets the value of the multimediaanhang property.
Gets the value of the statusvbm property.
getstatusis24.
Get the statushp.
Gets the value of the importmodus property.
Gets the adressdruck.
Liefert den Wert.
Liefert den Bodenbelag.
Sets the region.
Sets the value of the area property.
Sets the address.
Sets the value of the description property.
Sets the rentcollectionperiod value
Sets the furnished value.
Sets the value of the phone1 property.
Sets the value of the phone2 property.
Sets the value of the contactname property.
Sets the phoneinfo.
Sets the mainemail.
Sets the ccemail.
Sets the externalid.
Sets the agentid.
Sets the value of the epart property.
Sets the value of thejahrgang property.
Permite obtenir la propriete gebaeudeart.
Sets the value of the buerotyp property.
Checks if a string is numeric according to the given locale.
Sets the value of the gebiete.
Sets the value of the gruppe property.
Sets the agent.
Gets the value of the property property property property property.
Sets the stand value.
Gets the value of the userdefinedextend property.
Setziteinheit.
Gets the value of the zimmer property.
Gets the value of the haus property.
Gets the value of the bueropraxen property.
Gets the value of the gastgewerbe property.
Gets the value of the landundforstwirtschaft property.
Gets the value of the sonstige property.
Gets the value of the zinshausrenditeobjekt property.
Gets the value of the terrain property.
Sets the value of the umfang.
the value of the wohnungtyp
Returns the ISO 217 code of the given country.
Get the country s ISO 2 code from the given ISO 3 code.
Returns the ISO 3 code of a country.
Get the country s ISO 3 code from the ISO 2 code.
Returns the country name for the given country code and language.
Translate a country name.
Gets the value of the anbieter property.
Sets the value of the category property.
Gets the value of the pdf property.
Permite obtenir la propriete aktionart.
setter for realestateitems property
Sets the value of pacht.
Upgrades a document from the previous version.
Gets the value of the content property.
Returns the names of the fields in this record.
Sets the blick value.
Sets the value of the pauschalmiete.
Sets the monatsmiete.
Gets the parkplatz.
Sets the value of the lastenaufzug property.
Sets the value of the zustandart property.
Gets the value of the feld property.
Dumps the contents of this recordset to the given writer.
Returns the value at the given position or the given defaultvalue if the value is null.
Print the contents of the matrix.
Set the value at the given position.
set the value ctype
Sets the value of the haustyp property.
Gets the value of the energiepass property.
Sets the value of the keller.
Sets the value of the grundsttyp property.
Sets the geschlattr.
Sets the hallenlagerprod. hallentyp value
Liefert den Wert in den Wert.
Liefert den Wert der teilungsversteigerung.
Upgrades a document from the previous version to the new version.
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art property.
Sets the value of the modus property.
Gets the value of the emailsonstige property.
Gets the value of the telsonstige property.
Sets the value of handeltyp property.
setter for apisuchfeld1.
Sets the value of the apisuchfeld2 property.
Sets the value of the apisuchfeld3 property.
Gets the value of the row property.
Sets the value of the distanzzusport property.
Gets the value of the anhang property.
Gets the value of the objektkategorie2 property.
Gets the value of the objektzustand property.
Gets the hauskategorie.
Liefert den Ausstattungsqualitaet.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Setwert.
Sets the ackerland.
Sets the value of the bauerwartungsland.
setter for bootsstaende.
Sets the value of the buero.
Sets the camping.
Sets the doppelhaus.
Sets the value of the einfamilienhaus property.
Seteinzelhandelgross.
Set the einzelhandelklein value.
Sets the garagen.
Sets the garten.
Sets the gastronomie.
Sets the value of gewerbe.
Sets the hotel.
Sets the industrie.
Sets the value of the keinebebauung.
Setzt die kleingewerbe.
Sets the lager.
Sets the value of the mehrfamilienhaus property.
Sets the value of the obstpflanzung.
Sets the parkhaus.
Sets the value of produktion.
Sets the reihenhaus.
Setstellplaetze.
Sets the value of the villa property.
Sets the value of the wald.
Sets the value of the anbieter property.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the value of the hallenlagerprod property.
Gets the value of the parken property.
Gets the value of the freizeitimmobiliegewerblich property.
Gets the value of the objektartzusatz property.
Gets the value of the stellplatzart property.
Sets the value of the maxmietdauer.
Gets the value of the feature property.
Sets the zimmertyp.
Upgrades a document from the previous version.
Sets the value of the keineangabe.
Sets the value of Erdwaerme.
Sets the value of solarheizung.
Sets the value of the pelletheizung.
Sets the gas.
Sets the value of the oel.
Sets the fernwaerme.
Sets the value of the strom.
Sets the value of Kohle.
Generates a random string of the specified length.
Returns a random string of letters.
Returns a random string of the specified length that is composed of numbers.
Gets the value of the wohnungkategorie property.
Sets the benutzer.
wis. obj
Gets the value of the feed property.
Sets the moeb.
Gets the value of the serviceleistungen property.
locationstructure. subadministrativearea
Set the value of city property.
Set the value of the locality
Downgrades a document to a previous version.
Upgrades a document from the previous version.
Sets the value of the landtyp property.
Gets the value of the field property.
Upgrades a document from the previous version to the new version.
Gets the value of the ad property.
Set the gastgewtyp value
Sets the value of platzart
Liefert den Datenverkabelungstyp.
Liefert den klimaanlage.
Gets the value of the image property.
Sets the value of the pricetype property.
Sets the value of the newdevelopmentavailability property.
Sets the directions attribute of the Directions object.
Sets the co2rating.
Sets the value of energyrating.
Sets the value of the viewingdetails property.
Sets the value of the propertystatus property.
Sets the pictures attribute of the adtype object.
Sets the bebaubarattr.
Upgrades a document from the previous version.
Sets the value of the parkentyp property.
Sets the alter attribute value.
Sets the value of freizeittyp.
Sets the value of the telefonart property.
Permite obtenir la emailart escriber.
Sets the value of the overseassales property.
Sets the value of the overseasrental property.
Create a new user defined simplefield.
Gets the value of the fehler property.
Sets the value of the erbpacht.
Gets the value of the stpsonstige property.
Gets the value of the valuelist property.
Sets the value of the mindauer.
Sets the value of the zinstyp property.
Gets the value of the photo property.
Sets the metadata of the feed.
Sets the value of projects property.
Sets the feed properties.
Upgrades a kyero document from the previous version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the value of sonstigetyp property.
Sets the distanzzu.
Gets the value of the distanzen property.
Gets the value of the distanzensport property.
Checks if a throwable is compatible with a throws clause.
Set the bindings for the given map of bindings.
Binds the given namespace URI to the given prefix.
Removes a binding from the binding list.
Returns true if the content contains an opening tag.
Consumes comments from the given line.
Consumes a line and returns the rest.
Returns the index of the first occurrence of the specified token in the line or - num_ if
Initialize logging for the given location.
This method is called at the beginning of each namespace mapping element.
Adds an iterator to the list.
Adds an option.
Add a string option.
Add an integer option
Add a long option.
Add a doubleoption
Add a boolean option.
Parses the given command - line arguments using the given locale.
Returns a new instance of the given class.
afteraccess callback.
Sets the target object.
Prepares this instance for execution.
Finds a matching method for the target class.
Convert an integer to an unsigned string.
Serializes an object to a byte array.
Deserialize an object from a byte array.
Returns the first child element with the given tag name.
Gets the value of the first child element with the given tag name.
Returns all child elements of the given element.
Returns true if the node name matches the desired name.
Determines if a node name matches a set of desired names.
Set the size of a string. If the string is longer than the given length it is truncated
Monitors an object.
addentry adds the given entry to the monitor.
Attempt to keep the weakreference monitoring thread alive.
calcmobilecity.
Starts a prefix - mapping section.
Ends a prefix mapping.
Adds a new callback to the list.
Parse the jar file and return the itreenode.
Get the textcolor of a specific item.
Sets the values of the preference.
Returns the color of the item at the given scrollx position.
Set the text size.
Get the x coordinate of the inbounds.
Gets the intro.
Returns the names of the keywords.
Returns the arguments for the given keyword.
Returns the keyword documentation for the given keyword.
Entry point for the remote server.
Stops the server.
Starts the server.
Convert properties from a file to a JSON string
Convert properties from a file to a JSON string
Convert the inputstream to a JSON string.
Convert properties to json string.
Convert a map of properties to a json string.
Converts a map of properties to a JSON string.
Convert properties from valuesasobjectmap.
Convert properties to json string.
Get the radius of a shadow or circle
Creates a builder for an OCSP fetcher.
Returns the first certificate that has an intermediate certificate.
Override to do nothing.
Preprocess all markdownfiles in the given directory.
Performs variable substitution on the template string.
Gets the title from a list of strings.
Add a title to an HTML string.
Replace the variables in the initialcontent with the values in the variables map.
Update the relative paths in the HTML.
Copy files from one directory to another.
Checks if the given path contains the given string.
wrapslidercontent.
Fades this image over the specified duration.
Fade the view down for the specified duration
Calculates a percentage based on the current width and the width of the box.
OVERRIDE views.
Builds an intent to launch an activity from its class.
Launches an activity.
Returns a list of all facts sheets for the authenticated user.
Download file from response
Build http client.
Create a new accesscontrolentity object
Update a data model
Create a full export
Set the host of the OAuth2 token provider.
Sets the client credentials for the API client.
process a graphqlmultipart request
Get a list of bookmarks
Adds the given permissions to the graph.
Writes the permissions on a graph.
adds the given rulesets to the marklogicdatasetgraph
Close the connection to the server.
executes a select query
Create a marklogicdatasetgraph.
LIMIT THREADS TO NUM_CPUS
Resizes the geometry.
Rotates the image.
Sets the gravity of the image.
Remove all profiles from this operation.
Sets the font and fills it with a color.
Copies an image to the current image.
Add an image to the current image.
Parses the given arguments into the given target object.
Prints usage information for the given object.
Extracts the timeunit from a string.
Parses the given target object with the given properties.
Executes the specified slides from the specified URL.
Execute a file as a slide.
Interprets a PPtx file.
Sorts a list of rectangles by size.
Render the given template text.
getslidexmlrel.
Check if the mouse event is in range.
Finds elements that overlap vertically with the specified slideelement.
Execute an outbound operation on the SQS queue.
Executes an outbound operation.
Finds and returns the file specified by the given name.
getorcreatetempdirectory.
Creates a new logvaluemap with the given entries.
Logs a message with trace loglevel.
Logs a message and stack trace if TRACE logging is enabled.
Logs a message with loglevel debug.
Logs a message with loglevel debug.
Logs a message with loglevel info.
Log an info message.
Logs an informational message.
Logs a warning message.
Logs a warning message.
Logs a message with loglevel ERROR.
Log a message with error loglevel.
Add a joinpoint to the context line and method.
Writes an startstenowrapper.
Writes a list of key value pairs to a JSON stream.
Serializes the throwableproxy to the json generator.
Returns a logvalue representation of this timing.
Gets the callerdata.
Create a new database in the temporary folder.
Checks if the mapping for the given position is valid and if so removes it.
Parses the saveattr of a cell.
Evaluates the expression in the given context and stores the result in the given object.
Refreshes a sheet row from the context.
Parse saveattrstring.
Gets the save attribute list from row.
Gets the saveattrfromlist.
Sets the value of the objects attribute in a hidden column.
Sets the save attributes for all rows in a sheet.
Sets the saveattrsforrow.
Prepare the context and attributes for the given cell.
Format a number.
Put shift attributes.
Sets the underlying wb.
Replies the wrapper for the evaluation.
Gets the formulaevaluator.
Recalculate the maxcolcounts.
Attempt to load a websheet from the input stream
Loads a websheet.
Load a worksheet by tabname
Do export.
Do save.
dosubmit.
Populates the given component with the values from the body row and cell default control.
Get the current sheet configuration.
Reads an object from the given inputstream.
Returns the locale for the given component.
return null ; }
Gets the cellhelper.
Get the pictureshelper.
Gets the validationhandler.
Gets the charthelper.
Convert a set of shared formulas to a set of ptgs.
Convert an array of ptgs to an array of ptgs with a given shiftformularef
Convert a ptg array to a ptg array for use in a watchlist.
Returns a new ptg array with a single ptg object and the class of the ptg
Gets a list of rows from a list of rowsmappings.
Assemble a list of rows from a mapping of a list of rows to a list of
builddynamicrowforrefptgbase.
Gets the background color.
gecolorfromsppr.
Find the automaticfillcolor.
getxcolorfromschemeclr.
Get xcolor from ctrcolor.
getxcolorwithautomaticfill getxcolorwithschema.
Convert an xssfcolor to a color.
Get triplet from xssfcolor.
Gets the bgcolor from cell.
Gets the componentname from the class of the given component.
Populate the attributes of the given component.
Match parameter of method.
Sets a property of an object.
Gets the value of a property of an object.
Setup the control attributes of a cell.
Find cell validate attributes.
Setup the picture and charts for a facescell
Setup the charts for a faces cell.
Sets the picture attributes of a facescell.
Initialize chart map.
Get the title of the pie chart.
Set the style of a specific series.
Create a pie 3d chart.
Setup the bar style.
Initializes the charts map.
Gets the chart id from the parent document.
Initializes the anchors map.
Generate a single chart from an xssfchart
Transform to collection object.
Retrieves the hidden full name from a row of data.
Rebuilds the upper - level formulas in the configuration.
setupupperlevelformula.
Build cell formula for shifted rows.
gatherrowsmappingbyfullname.
Change indexnumber in shiftmap.
Increase the upper - level finallength of a fullname.
Change the index number in a hidden column.
Sets the fullname in a hidden column.
Gets original row number in hidden column.
Sets the original row number in a hidden column.
Find parent rowsmapping from shiftmap.
find child rowsmappings from shiftmap.
Find an item in a collection.
Build the current configrange.
Checks if the given row index is in the static row list.
Checks if the given row is a static row reference.
Utility function to replace an expression with cell value.
Returns a map of merged regions indexed by their cell numbers.
Returns a list of the names of all skipped regions in the given sheet.
Add a skip cell to a list in the region
Build a sheet comment from a list of alias
Builds the cell comment from the tiecommandalias list
Build configuration map.
Gets the sheetconfiguration.
Builds a formcommand from the given sheet configuration.
Verify that the last cell is blank.
Builds a sheet.
Check and repair last row.
Build commandlist from sheet comment.
Sets the parent for a child command.
haseachcommandinthelist.
Match command to sheetconfigform.
Copies template fortiecommands.
Build the list of configcommand for a cell.
Process method line.
Process a single command line.
Moves a comment to the map.
Creates a new configcommand instance.
Builds the attribute map.
Gets the sheetconfiguration from the configuration command.
Sets the footerofsheetconfiguration.
Sets the body of sheet configuration.
Sets the header of the given sheet configuration.
delete a single row
removerangesfromshiftmap.
Find the list of fullnames to remove.
Gets the eachcommand from the varparts name.
Attempt to insert an empty object in a context.
deleteobjectincontext.
Prepare data in context.
Indexes all the commands in the sourceconfigrange into the indexmap.
Checks if is row allow add.
insert a template at a given index in the source configrange
Evaluates the tie cell if the string is a tie method.
Evaluate user formula.
Checks if the given string is a user formula.
Create cell comment.
Evaluate an expression and return the result as a boolean
Remove all rows in sheet from rowindexstart to rowindexend
Remove a single row from a sheet.
Remove cached cell for row.
Remove rows in body.
Loads the picture from the current row and column.
Loads the chart from the current row and column indices.
Assembles the new value for the input field.
Get the value of a cell with formatting.
Get the string value of a cell without formatting.
Get cell string value with type string.
Get cell string value with number type.
Sets cell value.
Sets the value of a cell as a string
Sets the cellvalue to boolean.
Sets the value of a date cell.
Sets the value of a cell to a number.
Copies the rows from srcsheet to destsheet.
Copy a single row from one sheet to another.
Copy a cell to another sheet.
Copies a value from one cell to another.
Copy cell style from sourcecell to newcell.
Clones a comment from one cell to another.
Create a clientanchor for a comment
Create or insert a comment in the cell.
Match the comment settings from the source cell to the target cell.
Get the vmldrawing from a cell.
getctshapefromvml.
getcellstylefromsourcecell.
Convert a cell to a faces cell.
Gets the row and col from the component attributes.
Gets the initialrows from configuration.
Gets the facesrow from the body row.
Gets the facescell from the body row and column indices.
Gets the poicell from sheet.
Gets the key from a POI cell.
Get or add a tiecell to a hashmap.
Returns the current data context name.
Evaluates a string expression.
Evaluate the expression with the given context.
Writes the object to the stream.
Remove a row from the matrix.
Merge rowsmapping.
Recovers the contents of this rowset from the specified sheet.
Gets the charttype.
Create a stroke from a string.
Init chartdata from xssfchart
get chartdata from ctchart
Initialize the anchors map for all the sheets.
init xssfanchorsmapforsheet.
Returns the chartid associated with an anchor.
getchartidfromchildnodeattributes.
Build each object.
Save data in context.
Recalcs the formula.
getpoicellwithrowcolfromtab.
Gets the facescell with the given rowcol from the current page.
Restore the current datacontext.
Get the last collectionobject from the given fullname.
Checks if the current data context needs to be restored.
Start restore data context collection object.
Shifts a rowref.
Set the firstrowref of this cell
Sets the lastrowplusref of this cell.
Build cells for a static row.
Build a single cell.
Reads an object from the input stream.
Builds the categorylist from the given ctaxdatasource
Build a list of chartseries from a list of chartobject
Build chartseries from chartobject in list.
getcolorlistfromdptwithvaluelist.
Gets the dpt from the list with the given index.
Sets the command index map.
Gets the pictruesmap.
Get the trues map.
Index the picture in the map.
Generate picturestyle.
Generate chartstyle.
Gets the pattern.
Implement the getchart method for the render phase.
Recover this cell from the given sheet.
Gets the row style.
Gets the cell font style.
Get cell font color.
Gets the cell font decoration.
Gets the style of a cell.
Gets the column style.
Get the alignment from the given cell and style.
Gets the verticalalignmentfromcell.
Calculate the total height of a sheet.
Sets the cellstyle of a cell.
Gets the input type from cell type.
Gets the resource paths.
Gets the resource as an inputstream from the faces context.
Remove the prefix and path from the given resource.
Returns true if the input string starts with the given type.
Find a bean by its name.
Join an array of shorts with a separator.
Round a double value to a certain number of decimal places.
Returns the type of the currently selected tab.
Gets the current tab style.
Gets the default date pattern.
Gets the decimal separator by default locale.
Returns the trailing separator by default locale.
Sets the tiecommandaliaslist.
Build the form watchlist.
Build the watchlistforcell.
Adds a row to the watchlist if it is not already in the watchlist.
Checks if the given string is a command string.
Parse the widgetattributes of a cell.
Gets the attribute key in map by cell.
Parse validate attributes.
Find the position of the first pair bracket after startpos.
Parse a command - line attribute string.
Parse input attributes.
Parse validate attributes.
Split by eualsign.
Parse the special attributes of the inputs.
Process calendar attributes.
Processes the special attributes for a select item.
Gathers the special attributes.
Parses a comment to a map.
Find the position of the first non - letter or digit in a string.
Remove characters from string.
Gets the Excel column name.
Convert a column name to an integer.
Gets a cell by reference.
Convert the given heightunits to pixels.
Checks if a string is a valid date.
Attempts to parse the given string as a date.
Checks if a string is numeric.
Returns true if the given character should continue.
Sets a property of an object.
Compares two cells numerically.
Returns true if child is inside parent.
Deletes all hidden columns from the given sheet.
Deletes the hidden columns in row.
Delete a cell from a row.
Processes system event.
Refresh the cell after the status has changed.
validatewithrowcolincurrentpage.
validate by tiewebsheetvalidationbean.
checkerrormessagefromobjectincontext.
Validate all rules for a single cell.
Do validation.
Validates that the given cell is in the current page.
Validates all rows in current page.
Validates a row in the current page.
Validates each cell in a row.
Refresh the cached cells in the current page.
refresh cached cells in row i
Sets the submitmode in view.
Performs any prevalidation of the current sheet configuration.
Removes all of the elements from this cell.
Load the header rows.
loadheaderrowwithoutconfigurationtab loads headerrow without configuration tab.
Fill the headercells list to the maximum columns.
Gets the column style.
Gets the width style.
Gets the column width style.
Initializes the tabs.
Load the data if the parent context is not null.
refresh data for row
if fullsaveattr is not null refresh dataforcell.
Returns the index of the tab with the given name.
Loads a sheet into the current page.
Prepares the parent for the given tab name.
Set the first index of the datatable component.
Sets the rendered and originrowindex attributes of the facesrow.
Assemble body rows.
This method refreshes a cell from the cache.
Process a refresh cell.
Create dynamic columns.
Add a repeat row.
Reassemble body rows in range.
Sets the unsaved status.
Returns true if the state of the current view is unsaved.
Returns the most common constructor of the given class.
Writes the given source to the given outputstream using the given bufferspool.
Writes a long to a writer.
Writes the given string to the given writer.
setconvertedtrafficstatstag.
Adds a bitmap to the result.
Add a file descriptor to the result.
Removes the parameter with the given name.
Add a header to the request.
Clear the content of this request description.
Plays a track.
Bind the service.
Unbind the service connection.
Drops the listener.
Stores the image to disk.
Converts an inputstream to a string.
Convert a stream to a string using UTF - 8 encoding.
Send data to the client.
Returns the number of bytes that can be read without blocking.
Closes this input stream and releases any system resources associated with it.
Reads a single byte from this stream.
Resets the buffer.
Sends the start of the multipart message.
Sends the content disposition header to the client.
Sends the content - type header.
Sends the transfer encoding header.
Send end of header.
Send the end of the message.
Sends an array of parts to an outputstream.
Returns the length of the given parts.
Checks if the given URI is a redirect.
send not modified response
Sets the date header in the given httpresponse.
Sets the date and cache headers.
Sets the content - type header for the given file.
Flush the empty buffer to the channel and then close the channel.
Sends the disposition header to the stream.
Sends data to the client.
Install the cache.
Makes sure that the working directory exists and is a directory.
Get a cacheresponse from disk.
Create an inputstream for the body of the cache.
Resets the image to the given size.
Get the singleton instance of this class.
Validates a keystore.
Replaces the current scaletype with the new one.
Get the current pending intent.
Disconnect http connection.
Bind the service to the context.
Unbind the service.
Notify about view changes.
open ( ) ;
On accept data.
On reset.
Wait for loader to complete.
helper method to set the text or hide a textview
hide softinput from window
Show softinput.
Toggle softinput from the current window.
Computes the width of a pixel based on density density.
exceptioncaught event handler
Clear cache for the given url.
Populate image.
Cancel image loading.
Factory method for creating the imageconsumer.
Sets the result image.
Set the loadingimage of the image consumer.
Starts the imageloader task.
Add an image to the memcache
Adds a buffer to the pool.
On urlconnection prepared.
Add a simple parameter to the request.
Compatibility for gingerbread_mr1 and newer versions.
Computes the MD5 hash of a string.
Returns the string identifying the symbol n.
Returns a string representation for the given status code.
If the given result is not cublasstatus. cublas_status_success and
If the last return code is cublasstatus. cublas_status_success and
Add a new lexeme to the frequencies.
Add an ending to the current one.
Returns the estimated frequency of a wordform.
Prints a long description of the token and its attributes.
Verify and set kamolsattribute.
Removes all kamolsmarkupformating from a string.
Performs a GET request to the metric data endpoint.
Gets the query string.
Process a single jsonnode and return a list of metricdata
Parse a list of appinfos from a json string.
getconnectionconfig get connectionconfig.
Performs the request to the Signalfx server.
Creates a new codelist reader.
Creates a new codelistset reader.
Creates a new GC04columnsetreader.
Creates a new codelist reader.
Creates a new codelistset reader.
Creates a new GC10columnset reader
Get the ID of a columnelement.
Gets the string value of a row.
Gets the column of the specified id.
Find all keyids in acolumnset.
Gets the key of the given id.
Checks if acolumnset is a key column.
Create a new column with the given properties.
Create a new key.
Sets the number of lines to skip.
Add a new column to the worksheet
Create a new genericodewriter.
Create a new codelistset writer.
Create a new GC04columnset genericode writer.
Create a new genericodewriter.
Create a new codelistset writer.
Create a Garbage Collection Writer.
Creates a genericodevalidator for GC04 codelist.
Creates a genericodevalidator for gc04codelistset.
Creates an instance of the genericodevalidator.
Creates a genericodevalidator for GC10 codelist.
Creates a genericodevalidator for a codelistset document.
Creates a genericodevalidator for GC10columnset.
sendlogstoserver - sends the logs to the server.
Sets the current context.
Get the current loglevel.
Get the current capture state of the JVM.
Sets the maximum size of the logstore.
Prepends the given metadata to the given message.
Append additionalstackmetadata to a jsonobject.
Create a jsonobject from the given parameters.
Sets the identity of the user.
getbytearrayfromfile.
Start location updates if necessary.
Sizes the number of entries in a region.
Adjusts the sizes of all entries in a partitioned region.
size replicatedorlocalregion.
Read a snapshot record from the input stream.
Dumps this histogram to the given printwriter.
Returns the values of the timestamps since the given index.
Convert a file to a chart.
Get the pool for the given servername.
Gets the pool for a locator.
regionname on server.
Returns the member bean for the given name.
Returns a list of all hosts in the system.
Looks up a network host by name.
iserrorandsendexception.
Executes the given function and returns the result of the function.
Flatten a collection of objects.
Queries the given queryobj using the given regioncontext.
Returns a new cachelistenerbridge for afterput consumer.
Returns a new cachelistenerbridge backed by the provided consumer after invoking the provided consumer when the entry
Handles an exception thrown by the faultagent.
Gets the value of the onregionfilterkeyfacts property.
Execute the function.
Returns a set of host names for all member objects in the given jmx object.
Invalidates the cache.
Returns the application name of the given resources.
Initialize the security object.
Get a region by name.
Get a region by name.
Constructs the set of keys to be compared based on the source and target maps.
Checks if the timestamp at the given index must be inserted.
Closes this input stream and releases any system resources.
Dumps the contents of a directory to CVS files.
Main method for running the gfstatsreader.
Reconnect to the JMX server.
Stops all members on the given host.
shutdownmember shuts down a member.
shutdown all members of a JMX cluster
Shutdowns all members in the specified redundancy zone
This method is used to store a pagination map.
Read results by page.
Imports a GFD.
Checks if the remotelocators and locators match.
regionname must be a valid regionname
Builds a hashmap from the given region.
Returns the value of the given column.
Return true if the given type mirror is a type of integer.
Serializes an object to a byte array.
De - serializes the given byte array into an object.
Creates an instance of the given class.
check for tableid.
Check for fields.
Checks if the given class is a direct supertype of the given element.
brew java.
Emits a getid statement
Converts this query to an observable.
Checks if the given columnname exists in the tableobject.
Returns string if string is blank otherwise returns defaultstring.
Capitalize the first letter of the given string.
Return true if the given type mirror is a typeof.
Descending order of the query
Returns the temperature of the device.
Get a cursor method by type or blob name.
Prints an error message.
Gets the iconfonts.
Get all icons.
return ;
Raises a given number to a given exponent.
Set this matrix from an array of values.
Return x raised to the power of pexponent to the given scale.
The root of an integer tree.
private static final int SCALE = 1 ;
log of x.
Lnstein term.
Returns the arctangent of x.
Derivative of arctantaylor.
Return the square root of x.
Print pi.
Convert a timestamp to a string.
Set the limits of this box.
Put a float value.
Prints the stack to the console.
Adds a complex number to this complex number.
Subtracts z from this complex number.
Multiply this complex number by a complex number.
Divides a complex number by this complex number.
Sets this matrix equal to the contents of another matrix.
Get a row of this matrix.
Get a column of this matrix.
Set this matrix from a 2 - d array of values.
Transpose this matrix.
Add another matrix to this one.
Subtract a matrix from this matrix.
Multiply this matrix by a scalar.
Multiplies the matrix m by this matrix.
Print the matrix to a stream. Line the elements up in columns.
Set the image resource of this element.
Validates the coefficients.
Computes the next position of the function.
Clears the contents of this instance.
Convert a styledlayerdescriptorinfo object to a sld object.
Convert a rawsld object to a styledlayerdescriptorinfo object.
Validates a styledlayerdescriptorinfo.
Validate a sld against this sld.
Returns the area of the specified area.
Set this matrix from another matrix.
Set this matrix from a 2 - d array of values.
Returns the inverse of this matrix.
Returns the determinant of this matrix.
Computes the L2 norm of this matrix
Solves the linear system of equations A x = b.
Print this matrix to a stream.
Solve forward elimination using forward derivatives.
backsubstitution.
backsubstitution.
Computes the improvement by using two vectors of values.
Convert a square matrix to a matrix.
; } }
Iteration procedure.
Computes the next position of the iterator.
Checks the current position.
Computes the next position of the function.
Checks if an interval is valid.
Add addend.
Multiply two polynomials.
Raises a power of m.
Iteration procedure.
Gets the sldmanager.
Method to convert a long to a char array
Composes this bit vector from the given array of bits.
Prints to a printstream.
Validates a float biased exponent.
Validates a float unbiased exponent.
Validates a double biased exponent.
Validates a double unbiased exponent.
nextcentral.
)
Returns the next random ratio.
Return a boolean array of size half the size of n.
Computes the set of factors of a number.
Iteration procedure.
Computes the next position of the iterator.
Checks the current position.
Sets the JavaFX application.
Sets the configuration from a file.
Sets the default configuration.
Initializes the given fxmlloader with the given target class location charset and resources.
Sets the latitude and longitude of the request.
Gets host port pair.
Gets the applicable attributedefinition.
Evaluate a single attribute definition.
Sanitizes a string so it can be used as a tag.
Sets the address of the geocode request.
Query for names.
Query for service instances by name.
Gets all collaborations to by the logged in user.
Get the metadata string for decimalas.
Changes password for logged in user.
Gets all users.
Returns gravatar for email address.
Gets the gravatar for a user.
Populate from elasticsearch json.
Gets the elasticsearch field type.
Creates a new flowstep.
Updates a flowstep.
Gets a flowstep.
Gets a flowstep.
Gets all steps by flow.
Deletes a flowstep.
Deletes a flowstep.
Populate all table fields.
Attempt to close this connection.
Handles incoming messages.
return ; } }
Gets the echo messages from the returnvalue.
Gets all the personal inventory items owned by the current logged in user.
Creates a new tablerecord.
Deletes a form container.
Gets formflowhistoricdata.
Gets form and field historicaldata.
Gets the most recent form and field history.
Submit a form with a locking jobview.
Unlock a form container.
Unlocks a form container.
mapformcontainerto.
Convert a comma separated list of roles to a list of roles.
Creates a new form definition.
Updates a form definition.
Gets a form definition by id.
Gets a form definition by its name.
Gets all forms by logged in user.
Deletes a form definition.
getstoragekeyfrom.
Initialize xmemcachedclient.
Shutdown the memcached client.
Convert a string to a long. If the string is not a valid long return - num_
convertdocumenttopdf command.
getfieldvaluesforformfromcache.
Creates a new flowstepruleentry.
Creates a new flowstepruleexit.
Creates a new flowsteprule.
Updates a flowstepentryrule.
Updates a flowsteprule.
Updates a flowstepviewrule.
Moves a flowstepentryrule up.
Moves a flowstepentryrule down.
Deletes a flowstepentryrule.
Deletes a flowstepexitrule.
Deletes a flowstepviewrule.
return null ;
Gets all user queries.
Gets all the roles.
Get the service ticket as a hex string.
Creates a new text field with a mask.
Creates a new text field.
Creates a new decimal spinner field.
Creates a new decimal slider field.
Creates a new field.
Updates a field with a masked value.
Updates a field s text barcode.
Updates a field s decimal spinner settings.
Updates a field s decimal slider.
Updates a field.
Retrieves a field by its name.
Gets fields by formnameandloggedinuser.
Gets fields by formtypeid and logged in user.
Deletes a field.
Forces deletion of a field.
Returns the metadata string for a table field.
Updates a user field s value.
Creates or gets an index.
Creates a flow.
Updates a flow.
Gets flow by id.
Gets flow by name.
Deletes a flow.
Deletes a flow.
Update field value
Returns a list of all the values of the global field.
return null ; }
Decrypt initpacket.
Closes the connection and cleans up.
Init a new request
getexceptionmessageverbose.
Creates new admin user.
Requests an access token from the user.
getuserprofileinfo gets userinfo by accesstoken.
execute json object.
executeform method.
getjsonresponsehandler.
isconnectionvalid.
Gets the closeablehttpclient.
Get the path to the system property fluidsystemtruststore
Closes the current connection.
Gets a list of fluiditems for a view.
Sends a form to flow.
On close.
onmessage is called when a message is received from the client
sends a message to the fluidclient
Sends a text message to the user.
closes the user session
nativesqlsynchronized.
Request a license.
Apply a license to your account.
Create a new route field in text format.
Create a new route field.
Create a new route field.
create a multiplechoice select many field
Create a datetimedate route field.
Update route field textplain.
Update field paragraphtext html.
Update field datetime date and time
Update field decimal plain.
Update fieldvalue
createfieldvalue.
Retrieves a configuration by its key.
Gets all configurations.
Creates an attachment.
Gets an attachment by id.
Deletes an attachment.
Use this method to force delete an attachment.
Parse the jarfile inputstream.
Sets the classloader for the given jar path.
SCHEMA - SCHEMA - RULE
if parent is xsdschema and name is null throw exception
If the ref_tag is a simpletype form or type then throw an exception.
Gets the schema node.
if parent is xsdschema and form tag is form tag throw exception
if parent is xsdschema and ref_tag exists throw exception
Convert the given value to an instance of the given class.
Create a CLI interface instance.
Create a cli instance with the given options.
Parses command line arguments.
Parses the given arguments using the given options instance.
Build the URL builder for the given path.
Remove a footer view
Returns the value of a point p.
Random intvaluenoise3d generator.
Value of 3d using double noise.
Interpolates a cubic spline.
Scurve5 function.
Sets the bounds of this scale.
Process the cloudtrailevent.
Process a cloudtrailevent.
Gets the accountid from the useridentity or recipient accountid from the cloudtrailevent.
Apply the rulesevaluator to a violationentity.
Gets the event serializer.
Create a new file in the underlying folder.
Creates a new directory.
Restore all properties that have been previously saved.
Create a hashmap implementation if the delegate is not a hashmap.
Add an object to the collection.
Sets the value of the given property.
Get array.
Returns the next state for the given actionname.
Remove garbage collected objects from the map.
Returns the type associated with the given type.
get parameterizedtype.
gettypevariable.
Prints the stacktrace of the wrapped exception.
Prints the stacktrace of this exception.
Replace the remote object with the real object.
) ;
Sets the task.
call the accepted method of the task
Called when a task is rejected due to a runtimeexception.
Attempt to start the task.
Attempt to notify the task that the task completed.
Stops the current task.
Returns the implementation of the getjobimpl method.
add job to the jobitem queue.
Convert a string to a blockingmode.
} }
Copies the readers from the new catalog to the new catalog.
Creates a new catalog of the given class.
Load the system catalogs.
parses a catalog from a url.
This method parses the list of local catalog files and adds them to the localcatalogfiles
Parses a catalogfile.
This method is called when an unknown keyword is found.
Attempt to resolve a doctype from publicid to systemid.
Resolves the document URL.
Attempt to resolve a system identifier.
Attempt to resolve the given URI in the local catalog.
Make the given system ID absolute.
Returns the normalized form of the given URI reference.
Encodes a single byte.
adddelegate adds a partial to the localdelegate list
Create a new softvalueref object.
Notify all listeners that a throwable has been thrown.
Adds a throwable to the log.
Create a implementation of the delegate.
Compares this timertask with the specified object for order. Returns a negative integer zero or a
Returns the value of this property if it starts with the string str_.
Get the object at the given index.
Sets the object at the given index.
maintain the list by removing elements from the queue.
Add an entry type and its number of arguments.
Returns the entry type for the given name.
Returns the number of arguments to the entry function with the given type.
Gets the arg at the given index.
Set the context class loader for the given thread.
Swaps the positions of the specified elements.
remove node by given index
Cleanup timeoutextimpl.
Load the class with the given name.
Preloads the protocols.
createurlstreamhandler.
check if handlerpkgs is the same as lasthandlerpkgs
Gets the value.
Creates a implementation of the delegate if necessary.
Make a synchronized longcounter.
Wraps a longcounter in a directional wrapper.
Determine if the current namespace is an extension namespace.
check the result of the notification
getobjectinstance.
Matches a substring of a string starting from a given token.
Splits a string around matches of the given delimiter.
Joins the given bytes into a single string.
Appends the string representation of the given object to the given buffer.
Get the value of the element.
Create the hashmap.
return entry ; }
Looks up the value associated with the given key.
Remove an entry from the cache.
Flushes the internal state of the cache.
Get the list of valid keys.
Set the resolution.
Peek entry from the map without removing it.
Gets the children by tagname from the given element.
Returns the unique child of the given element with the given tag name.
Returns the first optional child element of the given element with the given tagname. If no such
Gets the element content.
Returns the content of unique child of the given element.
Returns the content of the first optional child of the given element.
Set the maximum queue size.
Set the name of the blockingmode.
Set the blockingmode string.
Executes the wrapped executor catching and rejecting any throwables.
Resolves an external system identifier.
Resolves external public id using given resolver.
Queries a resolver.
Appends the elements of appvec to vec.
Resolve all URLs in the system reverse order.
Resolves a system identifier in reverse.
Returns a vector of all local system arguments for the given systemid.
Reads a catalog from a file.
Reads a catalog from the given inputstream.
Connects to the remote file system.
return null ;
Helpdelete node b.
getvalidvalue Method.
Create a new snapshot entry.
Get or create a logger for this class.
Appends a list of objects to the buffer.
Returns the class shortname.
Returns the string representation of this implementation.
Returns an iterator over the names of the properties.
Gets the propertygroup.
getcompatibleconstructor.
Copies a serializable object.
Dereference an object and cast to an expected type.
Initializes the context.
Update the jndicache.
Returns a set containing all of the keys in this map optionally including defaults.
Returns a set view of this set. The set is backed by this set so changes to one
Removes the given propertylistener from this object.
Notify all propertylisteners of a property addition event
Notify all propertylisteners of a propertyremoved event
Notify all propertylisteners of a propertychange event
PropertyChangeEvent. getPropertyName PropertyChangeEvent. getOldValue
Create a property name from the given base name and prefix.
Loads the properties from the given reader.
Loads a propertyreader for the given classname.
Gets a propertygroup by basename and index.
isentityresolved.
Attempt to resolve the given systemid.
Resolves a systemidasurl.
return null ;
Sets the value of this element to the specified text.
Returns the normalized form of the given public ID.
Encodes a publicid with the standard URN encoding.
Decodes a URN.
Replaces all occurrences of oldstr with newstr in str.
Starts the timer.
Stops the timer and returns the elapsed lap.
Make a synchronized stopwatch.
Compares the specified object to this object using the equals method.
Generates a hash value for the given byte array.
Generates a hash code for an array of objects.
Creates the internal data structures.
Sets the field value.
Returns the next token from the token stack.
Initialize the system properties.
Add a new vertex to the graph.
Sets the root vertex of the pathfinding.
Removes a vertex from the graph.
Performs a depth - first search on the graph starting from the given vertex.
DFS spanning tree.
Finds a vertex by its data.
Find all cycles in the graph.
Normalizes a string to its canonical form.
Parses the given XML string as an XML element.
Parses the given XML stream and returns the root element.
Parses the given source into a DOM.
Create a new element in the document.
Resolves a qualified name against an element.
Copy attributes from srcelement to destelement
Returns true if the given node has at least one direct child element.
Returns an iterator over all child elements of the given node.
Returns the text content of the given node.
Return an iterator over all the child elements of the given node.
Gets the parent element.
Add a waiting resource.
Reads a catalog from a file.
Get the localhost address.
Set the system property to the given value.
Display the class information.
Provide a human readable description of the given class.
Strips the package name from a class name.
Returns the package name of the given class.
forceload ( ) -
Returns the primitive wrapper of the given class.
Adds all interfaces of a class to the given list.
Returns all unique interfaces of the given class.
Returns true if the given class is a primitive wrapper.
Instantiates an instance of the expected class.
Returns the getter for the given attribute.
Get attribute setter method.
Convert the given string to a java class.
Get the value of a system property
Gets the filenames.
Keeps weak references in the set.
Returns an iterator over the elements in this set. The elements are in no particular order.
Creates a new URLLister instance for the given protocol.
Returns an unmodifiable set view of this map. The returned set is backed by this map.
Add a boundpropertylistener.
Remove a boundpropertylistener.
Checks if a string is null.
Find property editor by typename.
Registers an editor with the current thread s context class loader.
Convert the given text to an object of the given type.
Get the context classloader for the given thread.
Returns null if the throwable is an applicationdeadlockexception or if it s a applicationdeadlock
Schedules the next timeout to occur at the given time.
Actual work loop.
Create a new subcontext with the given name.
Lookup an object by its name.
Checks if the given object is assignable from the given class.
Append classinfo.
Gets the transition with the given name.
Read the properties.
Queries the verbosity of this resource.
queryrelativecatalogs.
Queries the catalogfiles.
Returns a vector of all the catalogfiles in the system.
Queries the system properties to see if this is a public property.
Query whether the static catalog property is set or not.
Resolves a public or system entity.
Attempt to resolve the given URI.
Makes the given URI absolute.
Resolves a class from an objectstreamclass.
Invokes the setter.
Returns the local name of the given element.
Recursive method to get the namespace URI of a node.
Returns the namespace URI of the given element.
Creates a list from the given enumeration.
Gets the inputstream for the given filename.
Loads properties from the given file.
Read properties.
Adds an edge to the graph.
Add an outgoing edge to this vertex.
Adds an incoming edge to the graph.
Returns true if the given edge is connected to this one.
Removes an edge from the graph.
Finds the edge between dest and this vertex.
Find the given edge in the outgoingedges list.
Returns the cost of connecting this vertex to the destination vertex.
Compress a jar file or directory.
Returns true if there are more elements to return.
Queues an event for dispatching.
Actual implementation of installjvmtypeprovider.
Dispatches an action to the platform thread.
getactionstream.
Convert a collection of rights to a stream of one - to - many.
Convert a collection of rights to a stream of one - to - one.
Return true if robots are allowed for the given page.
Checks that the generated instruction is generated.
Returns the sumdegree of all the words in the word list.
Creates a new map from the superclass arguments of the given map.
Uses the specified resourceloader to load resources from the database.
Check datasource.
Returns a list of all instances of the given class.
Connects to a database using jdbcon.
Runinthesql.
Query in with sql string.
query by example
On upgrade.
Backup this table to a SQLite database.
Restores a SQLite3 database from a CSV file.
Set the emptytext.
Dump this table to a CSV file.
Unescapes a CSV string.
Returns a list of strings from a row of CSV.
Convert a string to a hashmap.
Map to csv string.
Joins a list of strings.
Joins an array of strings.
Read a database model from an index file.
Write to index.
Inspect id.
Gets the qualified class name of the given entity.
Returns the bindtype of the converter.
Imports data from a CSV file.
Backup all tables to csv.
Restore all tables from csv.
Writes the index to the output.
Create a query from this template.
Create a typedquery from this template.
Renders the query.
Delete an object from the table.
Update or insert an object in the table.
Update the object in the table.
Appends a wherenot in clause.
Create a subquery with a left join.
Returns the next active stack.
return null ;
Adds a plan to the list of planbindings if it is not null.
Select a plan according to the given policy.
Selects a plan at random.
Sets the plan variables for the agent and the plan instance.
Returns the belief at the given index in the given results.
Returns the parents of this node.
Returns a copy of the children of this node.
Grows the given byte array by the given amount.
Create a logger with the given name logging level and file.
Advances the iterator one step.
Sets the goals.
Pause for user input.
Initializes the pool size nagents and ncores
Initialize the thread pool for intention selection.
Start all intention selection threads.
Shutdown all intention selector threads.
Register a new jillextension.
Resets the internal data structures.
Loads an agent of the given classname.
return true ; }
Copies num agents from acatalog to agents
Loads a class from the classpath.
Load an extension from the classpath.
Checks if two objects have the same name.
Get the usage string.
Parses the command line arguments.
Parse an argument with an option.
Performs an eval on the given beliefbase.
Returns the object at the given index.
Find an object by its name.
Push a null object onto the stack.
return null ;
PUSH an object onto the top of the stack.
Removes the object at the top of the stack and returns it.
Gets the type of an object.
Returns true if the given belief and query match.
Main method for testing this class.
Convert a string to a byte array.
Posts a new goal onto the stack.
Sends a message to an agent.
Sends a message to an agent.
Returns the current set of goals.
Creates a new beliefset.
Adds a tuple to this beliefset.
Executes the given query within this belief.
Suspend or unsuspend this agent
Returns the field of this beliefset with the given name.
Registers a number of individuals with the belief set.
Builds a random name.
; } ; }
Checks if the agent s execution stack is valid.
Remove the finished agents.
false ; }
Shutdown the pool.
Sets the agent idle state.
Moves the cursor to the specified location.
Inits the library with the given configuration.
Causes the current thread to wait until the thread is interrupted or the current thread is interrupted
Finish the current run.
Return true if all pools are idle.
Get the poolid of an agent.
Picks an expression from the list.
Sets the expression.
Create a join expression.
Recursive join of properties.
Find or create a join for the given property.
return false ;
getuploadstream get uploadstream.
Handles the incoming request.
Returns true if the given parameter has the given value.
Returns the value of the parameter with the given name.
Parses the given expression and returns a map of parameters.
Configures the underlying transaction manager.
Gets the target file.
Writes an artifact to the target file.
postprocessinstance is called after a managedclass has been created.
return null ; }
Builds the string representation of the given descriptor.
Gets the interface method.
Returns the list type for the given field.
Returns the value of the dependency for the given type.
Persists the state of this object.
Set the default links for the given rel.
Set the default link template.
Handles links in the response.
Handle header links.
Handle links in the body.
Parse a link object.
Get or create a map.
Sets the allowed methods from the response.
Checks if the given method is allowed.
Registers the instance processors.
Register an instance factory for the given instancetype.
Registers an instanceprocessor.
Registers a classprocessor.
Add an argument.
Create the list of targetfiles.
Returns the XML representation of the object.
Initializes the object with the given context and vars.
Checks if the given template has a reference to the given file.
Create a parameterizedtemplatemodel from a reader.
Create a parameterizedtemplatemodel from a file.
Sets the request path.
getobservable ( final long startindex ) ;
Return a new scope instance for the given string.
Sets the value of the given field.
Attaches a capture appender to a logger.
Remove the appender from the given logger.
Clear appenders from the logger.
Parse the model.
Resolve all proxies.
Gets the files.
Recursively parses a directory.
Returns true if any of the eobjects in the resourceset have been modelfully resolved.
Find all eobjects in a resourceset.
Sets the model directories.
Sets the file extensions.
Set the model resources.
Reads the next record from the file.
Sets the designated parameter to the given array of strings.
Convert a string to an object of the given type.
Merges the given template with the current velocity context.
Gets the canonical model directory.
Gets the template directory.
Serializes the document to the response.
Starts the webview.
fullscreen mode.
Print the given view.
Writes the contents of the given inputstream to the given outputstream.
Invokes the method on the wrapped interface.
attach httpservletrequest to httpservletresponse
Detach this object from the request.
Get the cookies attached to this response.
Dumps the contents of the request to the error log.
Returns a list of all invocationmeters managed by this application.
Reads the configuration from the given EventStreamConfig object.
Sets the remotehost.
Returns the value of the given parameter converted to the given type.
Removes the prefix from the path.
Gets the common directory between two files.
Convert an absolute path to a relative one.
Convert relative path to absolute path.
Returns the directory depth of the given path.
Dumps a stack trace for the given throwable.
Sends a JSON object to the client.
Adds a parameterizedtemplate to the model.
Add a list of parameterizedtemplates.
Initializes all the paramtemplates.
Find all references to the given template.
Enable or disable the save button.
Prompt the user for confirmation to delete.
Handles a delete.
Create a new instance of the managedclassspi managedclass.
Returns the sorted list of files.
Get a summary of the results.
Gets the summary row.
Get the summary row for a subdir.
Create a new instance of a managedclassspi.
Gets the setup class.
Get the model directories.
Get the list of model resources.
Set the candidate objects to be selected.
Loads XML from the given inputstream using the given contenthandler.
Displays an error notification.
Checks if the number of formal parameters is an object.
Reads a JSON object from the given httprequest.
Reads the object from the given inputstream.
Extract the parameter from a fitcell.
Returns the hints associated with this query.
Returns true if the request is an XHR request.
Returns true if the request is for Android.
Handle an element event.
Returns a list of propertydescriptors that have an annotation of the specified type.
Gets an annotation on a property.
Formats and logs a message.
Lookup a whois result.
hasparserforwhoishost.
Returns the managedclass for the specified interfacename.
Get a managedmethod from the managedclass.
Process an exception that is not contained in the cell.
Process a not contains event.
Serialize this response to the given httpservletresponse.
Returns the value of the cookie with the given name.
Adds a cookie to the response.
Removes the cookie with the given name.
Returns an iterator over the cookies in this collection.
Gets the tflproducer.
Add a field to the class.
Compiles the class.
verifyresponse verifies the value of the tokenedimagefiles
Gets the value of the file.
Ensures that the given URI ends with a trailing slash.
gethttpservletrequest.
Intercept the call to a managed method.
executemutabletransaction.
Create a readonlytransaction object.
Lists the files in the directory.
Return the last file found in the directory.
Returns the concrete config of the given parserconfig.
Returns true if requestpath starts with pathcomponent.
Returns all artifact factories that are assignable from the given model type.
get session.
Serializes the file into the httpservletresponse.
Reads meta data from the server.
Override handlerequest to do nothing.
Tear down the database connection.
This method is called before the component is destroyed.
Handles the allowed methods.
Triggers the blob upload.
Prompts the user to delete the endpoint.
Extract the column parameters from a row of the fitfile.
Get the argument names.
Period the given periodictask for the given period.
Schedules a timeout task.
config. load ( ) ;
Return the next file in the list.
Startup the application.
Prints the welcome banner.
Print stopped banner.
Create a chameria instance from the command line arguments.
Registers a shutdown hook for chameria.
Trigger the tray notification.
Triggers the endpoint.
Insert and replace a row in the table.
Get the counts of all files in the result set.
setter for score - sets
getter for variants - gets
setter for variants - sets
getter for questiontype - gets
setter for questiontype - sets
getter for token - gets
getter for deplabel - gets
setter for deplabel - sets
getter for semantictype - gets
setter for semantictype - sets
getter for sections - gets
setter for sections - sets
indexed getter for sections - gets an indexed value -
indexed setter for sections - sets an indexed value -
getter for uris - gets
setter for uris - sets
getter for types - gets
setter for types - sets
getter for targettype - gets
setter for targettype - sets
getter for rank - gets
setter for rank - sets
getter for querystring - gets
setter for querystring - sets
getter for candidateanswers - gets
setter for candidateanswers - sets
indexed getter for candidateanswers - gets an indexed value -
indexed setter for candidateanswers - sets an indexed value -
getter for query - gets
setter for query - sets
getter for hitlist - gets
setter for hitlist - sets
indexed getter for hitlist - gets an indexed value -
indexed setter for hitlist - sets an indexed value -
getter for abstractquery - gets
setter for abstractquery - sets
getter for searchid - gets
setter for searchid - sets
setter for docid - sets
getter for offsetinbeginsection - gets
setter for offsetinbeginsection - sets
getter for offsetinendsection - gets
setter for offsetinendsection - sets
getter for beginsection - gets
setter for beginsection - sets
getter for endsection - gets
setter for endsection - sets
getter for aspects - gets
setter for aspects - sets
getter for triple - gets
setter for triple - sets
getter for sourcerelation - gets
setter for sourcerelation - sets
getter for subject - gets Subject of the triple.
setter for subject - sets Subject
getter for predicate - gets
setter for predicate - sets
getter for isobjuri - gets
setter for isobjuri - sets
getter for operator - gets
setter for operator - sets
getter for operatorargs - gets
setter for operatorargs - sets
getter for concept - gets
getter for score - gets
getter for text - gets
setter for text - sets
getter for id - gets
setter for id - sets
getter for name - gets
getter for abbreviation - gets
setter for abbreviation - sets
setter for concept - sets
getter for variants - gets
setter for variants - sets
getter for namedentitytypes - gets
setter for namedentitytypes - sets
getter for concepttype - gets
setter for concepttype - sets
getter for occurrences - gets
setter for occurrences - sets
getter for concepts - gets
setter for concepts - sets
getter for originaltext - gets
setter for originaltext - sets
getter for args - gets
setter for args - sets
getter for label - gets
setter for label - sets
Returns the index of the next clear bit after the given index.
Set the bit at the given index.
Free the given buffer.
Allocate a new cachevalue with the specified directory and filename.
Rehash an array to a new size.
Returns the HELM string representation of this monomer.
Checks if brackets are in the right order.
Parses the given string and extracts the source and target units.
Returns the string representation of the helix in HELM2 format.
addelement adds a new element to the group
Checks if the given string is a valid Polymerid.
Checks if the given polymerid is a valid polymerid connection.
checkdetailsconnections.
Checks if the given string is a valid group ID.
Checks if the given string can be repeated.
Checks if the string is a peptide orrna.
Converts the notationcontainer to a JSON string.
Gets the simple polymer with the given id.
Get the current groupingnotation.
Returns a string in Helical2 format.
Returns the HELM2 representation of this nucleotide.
Returns the connectiontohelm2 string.
Returns the HELM2 representation of this grouping.
Returns the annotated string in hehelm2 format.
Gets the polymerandgroupingids.
Gets the polymernotation with the given id.
Sets the polymerelements.
Convert the given string to this converter s format
Sets the annotation.
Sets the count.
Decide which monomernotation to use based on the given string and type.
Decide which monomernotation in group.
Given a string return the corresponding helmentity.
Returns the value of the interval.
Parse a test string.
setrnacontents method.
Defines the disambiguity.
Returns the statistics for this aworkerthread.
Creates a bipartite graph from a collection of edges.
Create a new adigraph from the given nodes and edges.
Initialize the incoming paths internal.
Returns the nodes in the graph sorted by reachability.
Subscribes to a pattern with a specific class and method.
Get the number of subscriptions for a pattern in the system.
Unsubscribe from a pattern.
return_async or return_sync
Send a return sync message to the device.
Attempt to wait for a response from the server.
Send a shutdown message to the server with a reason.
If the throwable requires localhandling it will be checked as well.
Release a previously acquired runstate.
Create a worker thread and start it.
Attempt to add a worker to the pool.
register worker wt.
Deregister worker thread.
Terminate the work queue.
Actual workhorse method that actually does the work
Await work.
Returns the common submitterqueue.
Choose an external helpcompleter.
Submits a forkjointask to this queue.
make a commonpool for all worker threads
get returns the result of the previous set of results.
Builds a JSON string from astatement1.
return workerstats ; }
Creates a list from the given elements.
Reverses the contents of this list.
Forall boolean.
Folds the elements of the given collection starting from the given value using the given function starting
Folds the elements of the given collection starting from the given value using the given function starting
Push a task onto this queue.
Construct an option from a nullable value.
Creates a new alonghashmap from the given iterables of keys and values.
Create an empty alistmap with the given equality.
Creates a listmap from the elements of the iterable that have the same keys and values.
Creates a listmap from the given keys and values.
Returns a set view of the keys contained in this map.
Normalize the resource name.
Marshals a boundtype to a string.
Create a subsequence of this string.
Returns a binarysearch instance for the given list.
Returns a binarysearch instance for the given list using the given comparator.
Sends a message.
Bind a routebinding.
Bind a filterbinding.
return true ; }
Gets the int value of the given long.
Remove duplicate strings from an array.
Like string.
Runs the task.
Performs a password - based login.
Gets the login user from the session.
Compares the given password with the given salt.
Saves a user s login in cookie.
Encrypt the login key.
Returns a cookieuser object for the given UUID.
Forwards the request to the given context.
Returns the value of a request parameter converted to a long.
Log a debug message.
Get the callerinformations at the specified level.
Convert a char array to a simple byte array.
Converts a charsequence to a simple byte array.
Convert byte array to simple char array.
Converts a charsequence to an array of ascii bytes.
Lookup the locale data for the given locale code.
Causes the calling thread to wait for the given number of seconds.
Crop an image to a new location
Invokes the given invocation after the given time.
Invokes the given direct invocation in a new thread.
Gets the restoperations.
Renders the error page using AJAX.
Renders a forbidden message using AJAX.
Renders the given string with the given template.
Prepends the currentactionpath with the given url if not already present.
Renders the datatables.
Render the emptydatatables.
Sets the list of items in the combo box.
Sends the redirect to the given context.
Returns the list of all instances of this type.
Returns the name of the current method.
Compacts the memory.
Propagates the given metrics to the local metricscollection.
Encodes the given string into a base64 string.
Copy the contents of the inputstream to the outputstream.
Copy bytes from the inputstream to the outputstream.
Copy the contents of the given inputstream to the given writer using the default encoding.
Copies the reader to the writer.
Copy characters from the reader to the writer.
Copies the reader to the outputstream using the default encoding.
Copies the reader to the outputstream.
Compares two input streams.
Compares two Readers.
Applies all the stages of the pipeline to the input.
Get the SQL for the given groupnameandsqlid.
Convert a string to an object of a given class.
Unzip a zip file to a destination directory.
Returns an instance of the permissiondialogfragment.
Called when the activity is resumed.
Register a corevaluetype converter.
Matches a string against a regular expression.
Returns true if the given string is a phone number.
Checks if is phone.
Test if a string is a valid day of the month.
Checks if is url.
Apply the pipeline.
Encodes the given string using the base64 algorithm.
Decodes the given value using the base64 algorithm.
Converts a hexadecimal string to a byte array.
Reads properties from a UTF - 8 encoded stream.
Reads the content of an inputstream as a string and closes the inputstream.
Reads the content of a file as a string.
Writes data to a file.
Copies a directory from source to target.
Serializes the given DOM document to a string.
Parses the given file into a DOM.
Parses an XML string into a DOM.
Parses an XML document from the given inputstream.
Returns true if the signature is valid for the given public key.
Signs the given document using the public key and private key.
Checks if the given class is cache - safe.
Checks if a class is a primitive array.
Checks if a class is an array of primitive wrappers.
Resolves a primitive if necessary.
Checks if a type is assignable from another type.
Checks if the given value is assignable to the given type.
Returns all the interfaces implemented by the given instance.
Returns all interfaces of a given class including ones implemented by superclasses.
Writes the configuration to a temporary file.
Returns a map of variables for the given URI.
Add a permission message.
Bind an implementation to an extension point.
Returns the builtin object for the given type.
Returns the object of the given primitive type.
Converts the given object to the given type.
Convert user defined valuetype.
Queries a request parameter.
Adds a cookie parameter to the request.
Returns the value of the session parameter.
Initialize druiddbintializer.
Sets a query parameter.
Sets the given parameter to the given value.
Displays the permission dialog.
Returns true if all values granted.
Returns true if any of the values match the resultmap.
Selects records from the database.
Returns the first record matching the SQL statement.
Is new boolean.
Checks if a method declares an exception of a given type.
Processes the queue.
Stores the given key - value pair in the cache.
Returns true if string matches pattern false otherwise.
Reads command line arguments of a given interface.
Gets the protobufentity.
Returns true if the given class is a protobufentity.
Returns a map of all fields of the given class including proto fields.
Gets the protobufgetter.
Gets the maven setter.
Gets the current thread - local objectmapper.
Get the current thread s json factory.
Converts an object to a JSON string.
Set the borders.
Gets the user record.
copyoutattributes.
Copyout attributes.
Add this application to a frame.
Save the token and secret in the preferences.
Get the access token.
Get the default classloader.
Returns the resource with the given name.
Returns the requested resource as an inputstream.
Gets the contents of a class as a stream.
Initialize this URI from another URI.
Initialize the scheme from a URI specification string.
Initialize the path with the given URI specification.
Sets the scheme of this URI.
Set the userinfo component of this URI.
Sets the host.
Set the port number.
Append a string to the current path.
Sets the query string.
Set the fragment of this URI.
Return the URI string of this URI.
Create a prepared statement from an iterator.
Initializes this applet.
Get the muffin for the given parameter.
Set the muffin for a parameter.
Get the contents of the clipboard.
Set the clipboard contents.
Load all services of a given type.
Sets service parameters.
Get the service parameters from a parametrizedoperation.
Find a parametrizedservice by its id.
Find by class t.
Parse a query response.
Returns an iterator over the elements in this buffer.
Gets the encoding of a string.
Get an instance of the given connection.
Get the authorization from the authorizationurl
packagedeclaration.
Visit a classdeclaration. This is the primary focus of the visitation.
Visit a executabledeclaration. This is the primary focus of the visitation. From here interesting information
Get the value of an option.
Returns a declarationfilter that accepts all modifiers in the given collection.
Returns a filter that accepts declaration objects of the given kind.
Compose two filters into a single one.
Returns a declarationfilter that performs the logical OR of this filter and the given filter.
Gets the map lazily initializing it if necessary.
Makes the given constructor accessible.
prepareobjectquery method.
Replaces all occurrences of a backslash with a hyphen.
Convert a byte array to a hexadecimal string.
Returns the indexes for the given name.
Parses a named SQL statement.
Converts a collection of non - proto - entities to a collection of proto - entities.
Sets the proto field value.
Sets the value of a POJO field.
Returns true if this filter accepts the given pathname.
Returns an instance of the resultset.
Builds a map from labels to their index.
Gets the generic supertype.
Drains the queue.
Process executions of all polled objects.
Recursively get a field from a class or any of its super classes.
Returns all declared methods of the given class and any of its super classes.
Returns the declared method of the given class or any of its super classes.
Gets all declared methods of the given class and annotated with the given annotation.
Returns all constructors of the given class that are annotated with the given annotation.
Dumps a single byte.
Returns the index of the first occurrence of the specified substring in the specified string ignoring case.
Returns a new string with the specified characters removed.
cleanstate.
Initialize audit.
Initialize the message queue.
Initialize the passwordvalidator.
Initialize the pwauthenticator.
Resolve locale code.
Lookup the localeinfo for the given locale code.
Get an instance of the statement.
Removes all elements from this set. The set will be empty after this call returns.
Pops an element off the stack.
makeinstream Method.
Parses the given arguments into the given properties object.
Match tokens.
Moves the mouse by the given coordinates.
Checks if this rectangle encloses the specified rectangle.
Check if this rectangle contains the given point.
Intersects this rectangular with another.
Creates a new rectangular that is the union of this rectangular and the specified rectangular.
Returns a new rectangular object with the same contents of this object replaced by the specified rectangular.
Returns a new rectangular object with the same y values as the specified rectangular object.
Returns the number of occurrences of the specified column.
Returns the number of occurrences of the specified row.
Get the bounds of a cell relative to this cell.
Calculate the columns.
Calculate the rows.
Unwraps a throwable that may be wrapped in an invocationtargetexception.
Entry point to the JVM.
This method is called when a codeview is updated.
Copies and resizes the code buffer.
Initializes the object.
Returns a partial copy of this queryparameter except the excluded elements.
add child.
Clear all children of this node.
;
Appends instructions to the end of the body.
addinstructionsandthistoparent.
propertychange event handler.
register a new workpanel
Update the present component flags.
Create a new decimal type.
Returns true if the given term evaluates to true.
Optimize a list of instructions.
Compares two collections.
Respond to requests from the client.
starts the tag.
Render a button.
Resets the classifier to its initial state.
Initializes the internal data structures.
Map. get Map. put
Gets the index of the given key in the set.
Sets the value at the specified index.
Map. remove Map. values
Removes the value at the specified index.
Returns true if the object has a property with the given name.
Set the value of a property on an object.
return null ;
Checks if is assignable from primitive.
}
Return the decision tree for the given state.
Initialize lookups for this node.
unify a query
unify internal function.
Compile a query.
Find the maximum arguments in a clause.
Allocate registers for permanent queries.
gathers the position - andoccurrence information for a given clause.
displaycompiledpredicate.
Display a compiled query.
Returns the contents of the given buffer as a string.
getstringvalue.
Sets the string value of the attribute.
Read a term.
Checks if a class exists and is loadable.
Checks if a class is a subtype of another class.
Checks if parent is a subtype of child.
Checks if the given class is a subtype of the given class.
Lookup a class by its name.
Creates a new instance of the given class.
Creates a new instance of the given constructor with the given arguments.
callmethodoverridingillegalaccess.
Call a method on an object with the given parameters
Invoke a static method.
Gets constructor.
Find matching setters.
Create a transactional queue from a java. util. queue
Wraps another queue with transactional requeue.
Gets the type fromobject.
Resets the state of this object so it can be used again.
Create a new instance of the type.
Adds a tzname to the list of supported timezones.
Add a timezone alternatedimension.
Add a dimension to this database.
Uses depth first search to find free variables.
Performs a depth - first search for free non - anonymous variables starting with the given query.
Compares two search nodes based on their homology.
writeobjecttofile.
readstreamasstring.
Create a search node with the given state.
Generate trace indent string.
True if the body of the last body of a variable is the same as the body of the
return outputproperty ;
Create a new functor with the given name and arguments.
Returns a new variable with the given name.
execute with error handling.
; }
Set the texture to use.
Override paintimmediately to set the doublebuffering enabled state.
Creates a bufferedimage of the specified type.
Creates a binary image of the specified size.
Creates a new GIS surface.
Sets the queuesearch algorithm.
Entry point to the prolog parser.
This method is not part of the interface and is not intended for public use.
Consumes a list of terms from the source.
Parse a functor from the stream.
Consume a variable.
Consume an integer literal.
Consume a floating point literal.
Consume a string literal.
Peek and consume a directive.
Interns an operator with the given name and priority.
Initialize the builtins.
Consume a token of the given kind.
Consumes the next token of the given kind.
Binds the service to the context.
Rollback the transaction
Collect iterator into targetcollection.
Convert time of day to milliseconds.
Convert ticks to years.
Change the ticks to the given number of hours.
Set the ticks to the specified number of minutes.
Convert ticks to milliseconds and set the seconds to the given value.
Set the ticks to a given year.
Ticks with a month set to a given value.
Ticks with a date set to a given value.
millistoyearstart - year
Reads a block from the underlying source.
Returns the entry associated with the given key.
Cuckoo entry.
Rehash the hash table.
Event handler method for action events.
Set the nextavailable flag.
Set the prevavailable flag.
Indicate that this task has finished.
Returns an instance of the wam resolving nativemachine.
Returns an iterator over the variables in this set in sequence.
Returns the expected number of elements in the given probabilities.
Returns the p - fordistribution probabilities for the given counts.
Set the ticks.
Perform the action.
Creates a new URL from the given string.
Gets the request info of the servlet context
Gets the headers of the current request.
Gets all the cookies from the request
Returns the parameters of the servlet request.
Returns the scope of the current request.
Returns the HTML of the current pagescope.
Returns the session scope of the servlet.
Returns the application scope of the servlet context.
; }
starts the tag
Returns the HTML Table for the given property name and values.
Set the currentscreenstate.
Traverses a term.
Compares two search nodes by their f - value.
Update this waminternalregisters with the given registers.
Notify all active listeners of the given changes.
clause.
Returns true if the given context is in a toplevel functor.
Sets the arguments.
Returns the fixity of this equation.
Checks if is infix.
Compare this symbol to another.
propertychange event handler.
Register a new workflowcontroller
get factory for class.
Creates a component factory for the given class.
Returns the storagecell of the given variable.
Returns true if the variable is bound.
Sets the attribute for a given column.
Sets the row attribute.
getcolumnattributeornull.
getrowattributeornull.
Internal insert.
Create a new timeonly type.
Create a new instance of stringpatterntype.
Tests if the value is an instance of the charsequence type.
Create the initial context for the given term.
Update the registers of this wammemorylayout with those of the given layout.
Get the value of the variable.
Returns the goal path of the current node.
list all the elements in the cache block.
Get the properties for the given resourcename.
Set the current rate in hertz
Reads from the source byte stream into the given byte array.
Skips over the next n bytes of this stream.
gather disjunctions and expressions
Reads an int from the given byte array at the given offset.
Writes an int to a byte array at a specific offset in big endian order
Writes the given 24 bit integer to the given byte array at the given offset.
Reads a 24 bit integer from the given byte array at the given offset.
Reads a short from the given byte array at the given offset.
Writes the given signed short to the given byte array at the given offset.
getchildstateforoperator.
Iterator over valid operators.
; }
;
Set the value of this attribute.
Convert a list of strings to an array of strings.
Convert an array of strings to a list of strings.
Convert a name to CamelCase.
Lists the handlers and appends them to the given stringbuffer.
Resolve the given functorname to a wamcallpoint.
Set a codeaddress in the symbol table.
Is this a subcategory of the given category?
; }
Returns the value at the given level.
Returns the last value of the path.
Writes the object to the given outputstream.
Reads an object from an objectinputstream.
Computes the horizontal h of a given search node.
Returns c mod bucketsize.
Add a userreadableerror with the given message.
Writes a string to the underlying stream.
Classify the given state.
Compares two elements according to their partial ordering.
return an iterator over the elements in this collection.
base 2 log base 2.
base256 logbase2v2 int.
Returns the integer logbase10v2 of the value.
logbase10v3 int.
Returns the base 10 logarithm of the given value.
Returns the integer logbase10v2 of the given value.
Returns the number of characters necessary to represent the given 32 - bit integer.
Returns the number of characters necessary to represent the given 64 - bit integer.
Returns the number of characters in the decimal representation of the given integer value.
Set the functor head.
Method emmitcode.
Set the current screen
Attempt to evaluate this function on the given object.
Gets the keyiterator.
Create the array properties.
Set the current rate in hertz
Protected method for subclasses to override.
Find the properties.
getpropertyusingsystemproperty.
getpropertiesusingclasspath.
return null ; }
Leave a functor in its parent context.
Get the value of this term.
Sets the substitution.
Create a new search queue.
Clean up resources.
Appends the given loggingevent to this one.
Fire the connector event.
Initialize the printers.
Commits the transaction.
Rollback the transaction.
Request a write operation.
Adds a cachedwriteoperation to the cache.
Acquire a global writelock.
Release the global writelock.
Enlist with current txsession
Processes the given rulesetnode removing any selectors and mediaquery nodes from the rulesetnode
Inserts the specified element into this queue waiting up to the specified wait time for space to become
Retrieves and removes the head of this queue waiting if necessary up to the specified wait time for another
Put an exception into the queue.
Returns the next object from the source iterator.
Returns the value of the given property as a boolean.
Returns the value of the given property as an integer.
Returns the value of the given property as a long.
callmixin ( name arguments ) throws an illegalmixinargumentexception
addvisitor ( ) ; }
This method backtracks the searchnode until the searchnode has reached the desired number of successful
Retrieve the code from the buffer.
executeAndextractbindings.
decodeheap is called for decoding heap variables.
Captures the event.
restore a previously saved object
; }
Set the value of an attribute in the map.
return null ; }
Executes the task.
Inserts the specified element at the tail of this queue.
Create a new search node with the given state.
Create a new priority queue.
Creates a termwalker that uses depth - first traversal.
Creates a termwalker that visits the goal of a unary predicate.
Creates a new termwalker for positional terms.
Creates a termwalker that accepts a positional predicate and visits each term in the positional
creates a termwalker for positional terms using the provided visitor
Gets the properties from an inputstream.
Reads properties from a file.
Gets the properties from the given URL.
Gets the properties for the specified pathname.
Computes the grid size.
Initializes the font metrics.
addpropertychangelistener This adds a propertychangelistener to the list of listeners that will be
Add a propertychangelistener.
Remove a propertychangelistener.
Event handler method for the propertychange event.
Create a new type with the given name min and max.
Smoothly fades the specified target color into the specified group.
Show the horizontal bar on the left.
Show the left bar on the screen
Show the right bar on the left.
Sanitize the radiocontrols.
Awaits for the specified thread to complete.
Causes the current thread to wait until the interrupted status of the calling thread has returned.
Executes the task.
Append the classpath to the commandline.
Create a new date - time type.
Prints the introductory.
Initialize the consolereader.
Evaluate the given sentence.
Evaluation of query.
Gets the multitypedata.
Gets the multitypedata.
Gets the multitypedata.
Gets the multitypedata.
Gets the i th multitypedata.
Gets the multitypedata.
Gets the multitypedata.
Gets the multitypedata.
Gets the multitypedata.
Gets the multitypedata.
Sets the value of an attribute on the pagecontext.
clear up to the given key
Increases the expansion by one.
Internal insert.
Compares two search nodes by path cost.
parseoperators.
Returns an operator mapping from the given name to the corresponding operator.
Checks and resolves a candidate operator symbol with the given fixities.
Make a new node in the search.
Gets the errors.
Get command line options inforce.
Get the usage string.
Adds any trailing pairs to the given properties.
Add options to the given properties object.
Add an option to the command line.
Checks the format of an argument.
Compares two iterators using a mapping function.
Returns an enumeration of the available options.
Returns the options.
Set the stemmer of this view.
return null ; }
Stem a word
Entry point to the stemmer tool.
Create a new type with the given name min and max.
Resets the state of this object so it can be used again.
Returns the current trace environment frame.
trace the choiceframe at current position
call internal.
get the next stackframe
backtracking.
}
This method unwinds the trailing edge of a loop.
tidytrail.
unify if a1 == a2
unifyconst - > success
Prints a slot number.
getrandomstartstate.
Checks if the given eightpuzzlestate issolvable.
getchildstateforoperator.
Return an iterator over valid operators.
Returns a prettyprint of the board.
Swap the tile coordinates.
Convert a string to a list of characters
Convert a character list to an eightpuzzlestate.
Convert log4j message to log4j message.
Convert a log4j level to the corresponding apache log4j level.
Add a requeued element to the requeue list
Create a requeueelementwrapper and add it to the requeue list.
) ;
Decrements sizeandcount by 1.
Signal the signalable object if the oldsize crosses the newsize threshold.
Returns the enumeration list for the given name.
return this ; }
Adds a property to this environment.
Removes a property from the environment.
the gctillstable should be run in a finally block
The literal node.
Resolve a mixin reference.
Attempt to push a variable reference.
Set the maximum height of a row.
Update the maxcolumnwidth.
Makes a node in the search.
forward to this action
Transforms all builtins in the clause.
Method initialisesymboltable.
Performs a toplevel check of a clause.
Convert a list to a string.
This method evaluates two numbers and returns true if they match.
Indicate that we are running.
Terminates the thread if it is currently running.
Indicate that the server is terminated.
Inserts the specified element at the tail of this queue.
Compares two nodes.
Insert nodes.
Restarts the server.
Finds all instances of the given searchmethod and returns them as a set.
Finds all instances of the given searchmethod and returns them as a collection.
Find all solutions using the given searchmethod and add them to the given collection.
nextinsequence t.
This method restores the values of an object from a map.
Get a property from a class.
Set the value of the given property of the given class.
Set the value of the specified property on the specified class.
Capture null values.
Removes the element at the specified position in this list.
Convert modifiers to string.
Convert a string to an integer.
Convert a string to a date.
Checks if the given string is a valid date.
Determine if the string is a time literal.
return false ; }
Returns a tokensource object for the given string.
Gets the tokensource for a given file.
Returns a tokensource for the given inputstream.
Checks if the given instruction is a constant.
Checks if the given instruction points to a void variable.
Is the given instruction a non - arg instruction?
Returns an iterator over the children of this node.
Returns the argument at the given index.
Returns an iterator over the children of this node.
Returns the string representation of the arguments.
retrievesummary novieruntimeexception ;
Retrieve records from the database.
executes the query and returns the results.
Emmits this code with the given wammachine.
Sets the basictype.
This method consults an inputstream.
Prints a variable binding.
Returns an iterable over the variables contained in the given solutions.
Reads the stream.
Reads the content of the stream.
Get the current time in milliseconds.
currentmillis = 0 ; } }
Update the specified playlist and trackinfo.
Update the info of a playlist.
Render final output.
Handle resource request.
} ) ; }
Fire notification of a started music request.
Initializes the reader thread.
Starts the reader thread.
This method is called when the server shuts down.
Reset the parser to the initial state.
Parses packets from the input stream.
Processes a packet.
Sets the CLI option.
Create a new chat with the specified user.
Internalizes the state of this object.
Resets the content of this map to the given map.
Sets the value of the given property.
Adds a filter to the packet.
Process a request.
Clears all stored properties.
Initializes the connection.
Send a packet to the client.
Advances to the next packet.
Opens a stream to the connection.
Gets allinformations.
Returns true if the given descriptor is contained in the descriptor list.
Add an event lifecycle listener.
Shuts down the background thread pool.
Checks if an entry is valid for the current thread.
Return the given key if it is null otherwise return the given key.
Compares two objects for equality.
Returns the entry associated with the given key in the map. Returns null if the map contains no
Resizes the map if necessary to a new capacity.
Copies all of the mappings from the specified map to this map. These mappings replace any mappings
Removes the specified key and its associated value from this map.
Removes the mapping for the specified key from this map if present.
Remove an entry from the map.
Add an entry to the table.
Create an immutable map from a base map and a set of keys.
Encode a binary attribute value.
Encodes a byte array as a hexadecimal string.
Encodes the given data using base64.
Encodes a byte array into a base64 string.
Iterate over the elements in this collection.
Sets the consumer of the trackselector controller.
Set the jumpprogress controller.
Sets the controller which allows to change the playback of the device.
Sets the volumechangeable controller.
Sets the available playlists and the function to be called when a new playlist is available.
Handle commandresources.
Handle volume change.
Handle jump.
Handle selecttrack.
Get or create a thread cache.
Get or create a request cache.
Returns the alt field for the given field and streamid.
Returns the shardpath for the given id.
Adapts a java. sql. Session to a java. sql. Session
Invokes the method with the given name on the given target.
Recursively deletes a directory and all its contents.
Update one entity in the database.
Sets the pinginterval.
Periodic ping task.
Add multiple options at once
Returns true if the given option is currently used by this program.
Parses the command line.
Prints usage information for the given application.
Parses the command line arguments.
Initializes the connection to the server.
This method is called when a starttls message is received.
Returns the first compression handler that is supported by this connection.
Request stream compression.
= true ;
Called by the connection manager when a connection error occurs.
Notifies the connection manager that the connection has been reestablished.
Register a saslmechanism.
Gets the registered SASLMechanisms.
Gets the output plugin behaviour.
Log an info message and the throwable.
Error log message and throwable with error level.
Logs a message with a prefix and a stack trace.
Create a startevent.
Create a startevent.
Notify all listeners of a new string.
Provide resource.
Returns true if this collection contains resources from the given sourceid.
Checks if this provider provides a resource with the given ids.
Provide a list of resources for the given resourceids.
Gets a map from the cache.
Returns the cache key for the given key.
If sharedcache is not null remove it from the cache.
This method is used to put properties into the cache.
Get the cflocations map.
Recursively include a file or directory.
Includes a jar file.
Add a mech to the list of default mechs
Adds a collection of syllables to the dictionary.
Create debug log.
Activates the plugin.
Register all standard events.
Registers an eventlistener with the descriptor.
Register a new event id.
Attempt to acquire a filelock on the given channel.
canrun implementation.
Creates a new dsesession for the given keyspace.
Creates a musicplayererror resource.
Request to start playing this track.
Stop playing this track.
Sends a command to this player.
Create a new broadcaster playlist request.
Create a broadcasterplaylist from a playlist answer.
Appends the given postfix to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Gets the playlist.
Invoked when the launch button has been pressed.
Checks if the localhost URL has been started and if not it waits for the localhost
Checks if the given urlname exists.
Browser button action performed.
Creates an imageicon for the given path and description
Entry point for launchnakamura.
Sets this array to a copy of the given array.
Exports the current state of this object to a hashmap.
Get the value at the given index.
Returns the value for the given key.
Returns the integer value of the argument or the specified defaultvalue if the argument is null.
Returns the double value of the current value.
Returns the string representation of the value.
Create a command resource.
Verifies the given command.
Verifies the capabilities of a command.
Verifies the given command and capabilities.
Executes a batch of CQL statements asynchronously.
Get all subclasses of the given class.
Get all subclasses of the given class.
Search the classpath for classes in the given location.
Search a directory for classes that are assignable from the given class.
Convert this resource to a list.
Returns the number of elements in this set.
Processes a packet.
Gets the volume.
Returns an error response for the given iq.
Create error response iq.
Checks if the identifiable is a target of the event.
Sets the loginenabled.
Returns a synchronized set backed by the given set.
Set the name of the user.
Update the state of this channel.
Gets the groups.
Appends a RSM element to a query element.
Parses an rsm from a query element.
Create a leavingevent.
Reloads the roster.
Creates a new roster entry.
Get all entries in the roster.
Gets the presence resource.
Sets unavailable presences.
Fires rosterchangedevent.
Set the digest for the given connectionid and password.
Generate resource for music resource.
Creates a playerrequest object.
Gets the timepassed.
Registers a consumer to be notified when an update is received.
Initializes the properties.
Reloads the properties file.
Parse a streamerror element.
Parse a list of mechanisms from given element.
Parse the compressionmethods element.
Parse a packetextension tag.
Decodes the given string into an object of the given type.
Verifies the validity of a startmusicrequest.
Gets the playbackstate from a resource.
Get the secretkey for the given subdomain.
Check if multiple subdomains are allowed.
Puts a new value into the map.
Returns a keyset view of this map.
Returns a collection view of the values contained in this map. The collection is backed by this map
Purges the specified reference.
Get the hashentry for the given key.
hashentry computes the hash code for the given key and value.
Creates a new hashentry instance.
controlevents.
Sets the presence of the user.
Update the mostvague.
Delivers a message to all registered listeners.
Returns an instance of the given class.
Initializes the output directory.
Loads properties from the given file.
Write the contents of st to the file fn.
Gets the progress of the resource.
Returns a synchronizedcollection backed by the given collection.
discover all serviceresolvers in a range of inetaddresses
return null ;
Returns the threadpool.
Create a stopmusic resource.
Verify if the player is a stop music player.
Get a cluster by its identifier.
Adds a connectionlistener to the list of connectionlisteners.
Add a packetlistener to the receive list.
Adds a listener to be notified when new packets are sent.
Notifies the listeners about a packet being sent.
Add a packet interceptor.
Notifies all registered packet interceptors.
Convert a request parameter to a value.
Called when a connection is lost.
Get the current thread id.
Return true if the given node is valid for the given thread.
Get the key for the given value.
Get the data at the given index.
Find the next valid node.
Lookup a node in the tree.
Compares two objects based on their status.
Return the least node at the given index in the given node.
Finds the node at the given index in a subtree.
Return the node with the index strictly greater than the given node.
Finds the most valid node in the tree with the given index.
Finds the least valid node in a tree.
Copies color from one node to another.
Determines if a node is a red.
Returns true if the node at the given index is black.
Gets the grandparent.
Returns the parent node of the given node at the given index.
Gets the right child.
Returns the left child of the given node at the given index.
Rotates the right child of the given node to the left.
Rotates the right child of the given node.
Inserts a node into the black tree starting at the given index.
Deletes a node from the red - black list.
Checks that the object at the given index is non - null and is non - comparable.
Inserts a value into the tree.
Check if the map contains the given key.
Check if the map contains the given value.
Get the value associated with the given key.
Removes the specified key and its associated value from this map.
Removes all of the mappings from this map.
Copies all entries from this map to new_map.
Attempt to delete expired entries.
Culls the cache.
Activates this component.
Get player request by playlist name.
Initialize the defaultrosterstore.
Opens a new defaultrosterstore.
Scans the network addresses of the given address.
Convert an IPv4 address with subnets 0.
Export this object to a hashmap.
Create a trackinfo object from a hashmap.
addallapplications adds all non - abstract applications to the set.
return 0 ; }
Prints the list.
Prints usage information to standard out.
Entry point for the program.
Requests a muteevent on a target.
Create a mute event.
Get a schema by name.
Write a list of lines to a file.
Attempt to determine if this script is in an exec jar.
Add an option to the command line.
Gets the schema.
Gets a field by its name.
Gets the package name from a jarentry.
Copies all entries from the given map to their respective values.
Create an eventlistener instance.
Sets the current state of the iterator.
Iterate over a collection.
Do the actual iteration.
gettrackinfo optional.
Export this object to a hashmap.
Imports a resource.
Create an error image with the given lines.
Gets the image at the given URL.
Sends a http request to the given URL and returns the result as a jsonresult object.
Reverses the keys and values of the source map.
Performs a multiplication.
Starts the daemon if not already started.
Return this object to the pool.
Create an endedevent.
get the current trackinfo from the queue.
Update a playlist.
Shuffles the tracks in the queue.
Verifies the capabilities.
Exports the current state of this object into a hashmap.
Escapes a string so that it can be used in an XML document.
Called when a challenge is received.
Convert this stream to a JSON stream.
Thread main loop.
Handles topicindexer event.
Join all the queues.
Set the value of a property.
Remove a property from the map.
Add a principal to the list of principals.
Removes the given principal from the list of principals.
Called when the rootwindow is closing.
userencountered event.
Called when an event is fired.
Returns true if the resource is permanent.
Sets the name of the user.
Tests if the specified object is a key in this set.
Returns true if this set contains the specified value.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Removes all of the elements from this set.
Hash the given key.
Checks if two keys are equal.
Checks if two values are equal.
Increases the size of the internal array to the given capacity if necessary.
Calculates the new capacity based on the proposed capacity.
Create an entrysetiterator.
Loads a map from a binary stream.
Initializes this addon with the given context.
Notifies all connection listeners that a reconnection has failed.
Notifies all connection listeners that a reconnection has been attempted.