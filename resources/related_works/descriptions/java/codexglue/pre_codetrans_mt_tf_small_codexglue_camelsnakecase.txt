Emits the given value to the downstream.
Wrap an observable.
Returns an observable sorted by the given comparator.
Observes a connectable observable.
Creates a unicast processor with the given capacity.
Create a unicast processor.
Performs a scalar x operation on the publisher.
Convert a flowable value to a flowable value using the provided mapper.
Resets the handler to its initial state.
Maybe from completable.
Maybe from single source.
Retries the flowable flow with the given number of times and predicate.
Throws an exception if the object is null.
Returns the identity function.
Creates a callable with the given value.
Creates a just function value.
Create a function that casts to the given target.
Create a unicast subject.
Creates a unicast subject with the given capacity.
Creates a unicast subject with the given capacity.
Creates a unicast subject.
Blocks until the number of errors has been encountered.
Blocks until the count has been reached or the timeout has elapsed.
Awaits for the current count to become available or throws an exception if the current count is
Drains the queue until the max value is reached.
Sends a prefetch request to a subscription.
Completes the computation.
Gets the value of the notification.
Gets the error.
Validates that the given disposables are valid.
Sets an atomic reference once.
Validates the upstream subscription against the next subscription.
Atomically sets a subscription once.
Add two longs to the maximum value.
Multiply two longs.
Atomically adds the requested value to the atomic store.
Creates a pointer exception from a throwable.
Adds an object to the list.
Shuts down the scheduled executor service.
Create a scheduled executor service.
Sets the subscription.
Emits a loop until all elements have been added.
Wrap or throw a runtime exception.
Flatten a throwable into a list of throwables.
Throw a throwable if it is an exception.
Clears the set.
Returns the number of resources in this set.
Performs a scalar x operation on an observable source.
Convert an observable to a scalar value using the given mapper.
Accepts the given subscriber and returns true if the subscriber is accepted.
Accepts an observer.
Starts the subscription.
Starts the unbounded subscription.
Offers a new item to the queue.
Gets the disposable resource.
Completes the computation with the given value.
Called when an error occurs.
Completes the stream.
Awaits for a given number of items.
Sends a request to the upstream.
Adds a subscriber to the list of subscribers.
Remove a subscriber from the list.
Observes a flowable.
Parses the annotations of a method.
Sets the amount of time to delay.
Create an error response.
Calculates the delay of the variance.
Create sample data.
Returns the value of the given HTTP method.
Search for a user by username.
Encodes the given password using the configured salt generator.
Returns true if the password matches the given raw password.
Perform version checks.
Disable checks for a given version and security version.
Gets the spring security core version.
Create a configurer for the given identifier pattern.
OAuth2 client.
Gets the oauth2 resource server.
Compares the specified object with the specified object.
Retrieve an entry from a directory.
Search for multiple attribute values.
Performs a search for a single entry.
Builds a search controls object.
Lookup primary keys.
Builds pre authenticated authorities web authentication details.
Create an embedded server.
Create servlet api filter.
Create the jaas api filter.
Creates a whitelisted type resolver builder.
Register a spring security filter chain.
Get a persistent remember me token for a series
Returns a list of granted authorities for the given attributes.
Returns a cipher for the given algorithm.
Override after properties set.
Authenticates the request and response.
Checks if the principal has changed.
Authenticates the request with pre authenticated credentials.
Checks if the given content length is enough to write to the response.
Maps a collection of authorities to their default authority.
Sets the login processing url.
Update the authentication defaults.
Update the access defaults.
Maps a password to a string if it is not a string.
Extract remember me cookie from request.
Encodes a cookie.
Set a cookie.
Resolves an argument.
Gets the query string.
Gets the port from the service url.
Gets the principal.
Logs out the current session.
Authenticates the given authentication.
Sets the context environment properties.
Builds the redirect URL for the request.
End tag.
Initialize the user details service.
Gets the user details service.
Adds the parameters to the attributes and additional parameters.
Checks if the request or response requires authentication.
Check if the request requires authentication.
Proxy ticket request.
Checks if the authentication token is authenticated.
Checks if the proxy receptor request matches the request.
Create a security expression root.
Gets the cached jwk.
Encodes the given value using UTF - 8.
Gets web sphere groups based on granted authorities.
Load user by assertion.
Gets the pre authenticated principal.
Concatenate two arrays.
Returns a sub - array of the given array starting at the given index.
Returns a list of granted authorities for the given attributes.
Pre process a map.
Returns a collection of granted authority values for the given value.
Adds the granted authority value to the given collection.
Gets the pre authenticated principal.
Gets the shared object of the given type.
Builds a redirect URL for the given request.
Invokes the interceptor with the given join point.
Checks if the string has the given role.
Add any role to the roles array.
On login success.
Attempt to authenticate a user.
Attempt to exit the user.
Sets the URL of the exit user.
Display a model and view.
Spring security filter bean.
Decodes the given token and validates it.
Authorize using access expression.
Checks if the user is allowed to access the URL.
Convert a JWT to a collection of granted authority
Generate a CSRF token.
Display admin page.
Display a permission page for a contact.
Add a permission to a contact.
Gets the role with the default role prefix.
Create a user details bean from a string.
Returns a list of values for the given attribute name.
Gets the first value of a given attribute.
Encodes the given character sequence into a byte array.
Decodes the given byte array into a string.
Lookup the parameter names for the given type.
Add a contact to the contact manager
Finds attributes for the given method and target class.
Add a secure method.
Get all config attributes.
Checks if the method name ends with the mapped name.
Returns a configurer for any request.
Handle bind exception.
Get a random contact.
Clear authentication attributes.
Gets the declared field of the given class field name.
Create service url.
Create redirect url.
Extracts the prefix from the pass.
Attempt to commence the authentication process.
Checks the stack of filters.
Gets the registered throwable types.
Extract cause from throwable.
Register an access manager.
Returns the set of authority list to set.
Compares two byte arrays for equality.
Sets the failure url.
Sets the hidden inputs to resolve.
Build request url.
Checks if the given string is an absolute URL.
Creates a list of attributes for the given identifier.
convert from string to serializable identifier
Creates the entries in the acl.
Create an object identity.
Update an object identity.
Saves the request if it matches the request matcher.
Returns a matcher that matches the given path patterns.
Matcher that matches any exchange.
Create a text encryptor with the given password and salt.
Create an encrypted text encryptor with the given password and salt.
Encryptor queryable text.
Write the headers to the response.
Determine the target URL for the request and response.
Determine the target URL.
Sets the target url parameter.
Gets directory with immediate parent populated.
Builds a distinguished name from the given username.
Creates the shared objects.
Configure jaas using loop.
Returns the current date.
Parses a date.
Update the cache with the given key and value.
Set authentication details.
Gets the security name from the subject.
Get web sphere groups.
Builds a distinguished name from a group name.
Check if the allowed sessions have exceeded the maximum allowed sessions.
Copy details from one authentication token to another.
Gets the filters for the given request.
Returns a list of filters for the specified URL.
Gets the application context.
Gets the full distinguished name.
Sets the session attributes.
Create a preemptive basic auth scheme.
Adds a list of filters to the filter list.
Adds a filter to the list of filters.
Create a basic authentication scheme.
Create a ntlm authentication scheme.
Create a form auth scheme.
Creates a proxy for the given URI.
Prints the given response body to the given stream.
Redirects the given redirect config to the given redirect config.
Sets the query parameter charset.
Sets the default object mapper type.
Creates a new object mapper factory.
Creates a mock mvc config with the given log config.
Create a mock mvc config from a session config.
Create a mock mvc config object.
Create a mock mvc config from a json config.
Create a mock mvc config from an xml config.
Create a mock mvc config with the given encoder config.
Creates a mock mvc config with the given header config.
Creates a mock mvc config with the given configuration.
Creates a mock mvc config.
Create a mock mvc config from a multi part config.
Create a mock mvc config with the given config param.
Create a mock mvc config with the given config matcher.
Allow all hostnames to be set.
Declare namespaces.
Create an xml path config for the declared namespace.
Sends a request to the server.
Sets the request headers.
Sets the default proxy for the client.
Sets the name of the control.
Add a header to the multi part spec.
Perform basic authentication.
Create a new ntlm credentials.
Create a list of headers from a header.
Resets the internal state.
Adds a header to the response.
Build the response.
Returns a new detailed cookie matcher that matches the given matcher.
Returns a new detailed cookie matcher that matches the given matcher.
Returns a detailed cookie matcher that matches the given expiry date.
Returns a detailed cookie matcher that matches the given matcher.
Matches a cookie with the given path matcher.
Returns a new detailed cookie matcher that matches the given matcher.
Returns a new detailed cookie matcher that matches the given matcher.
Matches a specific version of the cookie.
Matches a cookie with a maximum age.
Expect a response header with the given name and expected value.
Expect a response header.
Expect a cookie to be present.
Creates a new proxy specification with the given host.
Create a new json path config object.
Sets the default parser type.
Returns a new log config with the given print stream.
Enable logging of request and response.
Create a http request.
Create a multi part config with the default boundary.
Add an attribute to the request spec.
Add a header to the request spec.
Add a multi part request spec.
Add result handlers to the request spec.
Sets a parameter in the http client.
Creates a new http client configuration with the given parameters.
Create a new http client factory.
Returns a new http client configuration with the given HTTP multipart mode.
Perform an assertion and return the result as a t.
Gets the int value of the given path.
Gets the byte value of the given path.
Returns the short value of the given path.
Gets the float value for the given path.
Gets the double value of the object at the given path.
Returns the long value for the given path.
Returns a list of all the elements in the map with the given generic type.
Returns the map for the given path.
Gets an object from the given path.
Sets the body of the request.
Add a cookie to the request spec.
Adds a parameter to the request spec.
Adds a parameter to the request spec.
Create a mock mvc param config form params update strategy
Filter response to if the response matches the given matcher.
Create a list of cookies from a cookie.
Clean up for collected state.
Index the bindings.
Returns the binding for the given key.
Convert a constant string to a binding.
Cleanup a binding.
Remove a failed jit binding.
Returns the internal dependencies of the given binding.
Create an uninitialized binding.
Returns an array of all the parameters of the given injection providers.
Binds the given injector to the state.
Bind a logger to the given injector.
Checks for misplaced binding annotations.
Returns true if the two methods override.
Initializes the delegate.
Suppress warnings.
Resolves all of the given types.
Canonicalizes a literal.
Prepare the converters.
Canonicalize the given class loader.
Returns true if the class loader has the same name as the class loader.
Checks if the member is publicly callable.
Fixes the annotations of a key.
Request injection.
Validates all pending injections.
Creates a new instance of this class using the given arguments.
Returns an internal factory for a scope.
Creates an injectable scoping.
Normalizes the given path.
Generate an annotation of the given type.
Checks if retention policy is at runtime.
Find a scope annotation.
Returns the key for the given type and member.
Returns the name of the given key.
Initialize the delegate provider.
Adds a direct type binding to the given binder.
Gets the injector for the given injection point.
Checks if the interceptor has a scope annotation.
Creates a real map binder.
Returns the key for the given key.
Provisions a new instance.
Replaces the source with a new message.
Returns the module for the given module.
Returns a collection of assisted methods.
Checks if the type is specified.
Checks if constructor has matching parameters.
Returns the dependencies of the given ctor point and type literal.
Removes the assisted dependencies from the set.
Checks if the dependency set is valid for optimized assisted injection.
Gets the binding from the injector.
Invokes the proxy.
Appends a hint to the string builder.
Creates a multibinder for the given key.
Gets the key for a new item.
Find the next filter that matches the request.
Checks if a constructor has at inject annotation.
Gets the internal constructor.
Gets the internal dependencies.
Creates a module for the given module annotated method scanner.
Gets the annotation for the given method.
Gets the line number of a member.
Initialize the injector with the given errors.
Validates that the given object is an instance of the given key.
Suppress warnings for a string.
Creates a member injector that listens to the given type.
Gets the list of injectors for the given set of injection points.
Returns a key for the given type and annotation strategy.
Creates an annotation strategy for the given annotation.
Creates an annotation strategy for the given annotation type.
Prune stacktrace from throwable.
Returns the binding source.
Creates a message with the specified format and arguments.
Creates a message with the specified format and arguments.
Creates a message with the specified format and arguments.
Convert an object to its declaring type.
Returns true if the given class should be skipped.
Get an object from a list of module class names.
Main method of the manager.
Pushes a dependency to the state machine.
Pushes a state onto the stack.
Creates an initializable with the given instance.
Provision a provider.
Called when an event is received.
Adds a connection event processor.
Gets the result of a future task.
launder throwable.
Register a remoting processor.
Register a remoting processor.
Gets the processor for the given command code.
Gets the soft reference for the given url.
Decodes the protocol code.
Get all connections.
Scans the connection pools.
Returns a connection to the server if absent.
Create a connection and heal if needed.
Remove a task from the pool.
Performs the heal if needed.
Create a connection pool.
Closes a connection.
This method is called when the connection is closed.
Close the connection.
Sets an attribute if it does not already exist.
Register a user processor.
Register a user processor.
Dispatch to user processor.
Deserialize a request command.
Pre - processes the remoting context.
Logs a command to the logger.
Logs the command in debug mode if debug is enabled.
Processes a task.
Sends a request to the remote server.
Convert bit set to byte.
Convert an integer to a bit set.
Add a reconnect task.
Create a remoting command.
Filters a list of connections.
Close a list of select connections.
Returns the boolean value for the given key.
Log an info message.
Returns true if this command is a request timeout.
Returns the user processor for the given class.
Get a connection from a list of connections.
Returns the value for the given key or the default if not found.
Returns the value of the property with the given key.
Resolve response object.
Convert response command to response object.
Convert response command to throwable.
Detail error message.
Create an exception from a throwable.
Print connection trace.
Creates a new event loop group with the specified number of threads.
Parse remote address.
Parse local address.
Parses a remote IP address from a channel.
Parses the remote host name from the channel.
Returns the local IP address of the channel.
Parses the remote port from the channel.
Parse the local port of a channel.
Returns the host address of the given socket address.
Adds a connection to the pool.
Remove a connection from the pool and close it.
Register a custom serializer.
Get custom serializer by class name.
Register a custom serializer for the given command code.
Gets the custom serializer for the command code.
Checks if the remote address is connected to the remote address.
Initializes the write buffer water mark option.
Returns a framedata object for the given opcode.
Send a batch message to the given socket channel.
Sets the code of the response.
Validates that the given payload is UTF - 8.
Update the payload.
Checks if the handshake state contains the requested protocol.
Translate a single frame check length.
Translate a single frame check packet size to a single frame check packet size.
Generates a key for the given string.
Process a continuous frame.
Process a binary frame.
Log runtime exception.
Process the frame text.
Process frame is fin.
Process a frame.
Process a closing frame.
Check if the buffer size exceeds max frame size.
Gets the payload from the byte buffer list.
Returns the total number of bytes in the list.
Creates a handshake builder from the first line of tokens.
Creates a handshake builder from the first line of tokens.
Decodes a byte buffer.
Closes the connection.
Close connection due to internal server error.
Generate http response with error code.
Sends a frame to the client.
Resets the connection to the initial state.
Establish a connection to this reader.
Returns the port of the web socket.
Send a handshake to the engine.
Sets the connection lost timeout.
Stops the connection lost checker service and cancels the timer.
Starts a connection lost timer.
Restart the lost checker service.
Execute a connection lost detection.
Cancel the connection lost checker service.
Create a new server with a websocket handshake received from the server.
Send a ping frame to the websocket
Stops the monitor and waits for it to finish
Returns the port of the server.
Reads more data from the queue.
Accepts an iterator of selection keys.
Reads data from the socket.
Writes the selection key to the connection.
Setup selector and server thread.
Do ensure single thread.
Shuts down the server.
Gets the socket from the connection.
Broadcasts the given data to the given clients.
Broadcast the given text to the given clients.
Broadcast the data to all clients.
Fills the frames for the given draft.
Transfers the contents of the source buffer to the destination buffer.
Starts all persistence units.
Returns the entity manager for the given name.
Executes a consumer with transaction.
Convert args to scala buffer.
Wrap args to list if needed.
Gets the message for the given key and arguments.
Gets the messages for the given keys and arguments.
Returns true if the key is defined for the given language.
Returns the messages that are preferred by the given candidates.
Returns the messages that are preferred for the given request.
Sets the language of the given result.
Binds a set of guiceable modules.
Returns the bindings for the given modules.
Bind to the given bindings.
Creates a new instance of this class with the given modules.
Overrides one or more modules.
Allows the guiceable to override the given bindings.
Disable the given modules.
Calls the method with the given request and returns the result.
Gets an existing file from the environment.
Binds the underlying binding to the given scope.
Creates a tuple from the given values.
Static factory method for creating a 5 - tuple.
Convert an execution context to an executor.
Creates a jpa instance with the given name and unit name.
Creates a jpa instance with the given parameters.
Creates a jpa from the given map.
Create a flow from a string.
Create a flow from a json node.
Adds a constraint validator mapped to this factory.
Creates a new instance of the given key.
Find a method by name and parameter types.
Handles a client error.
Handles a bad request.
Handles a forbidden request.
Called when the page is not found.
Invoked when a server error occurs.
Logs a server error.
Converts a throwable to useful exception.
Called when a server error occurs.
Called when a server error occurs.
Build doc handler from resources.
Build doc handler from directory.
Build doc handler from directory and jar file.
Build doc handler from directory and jar.
Builds a doc handler from a jar file.
Consume data from the data stream.
Create http entity from content.
Creates a strict http entity from a string.
Creates a chunked http entity.
Creates a result with the given status code and content.
Sends a status message to the server.
Creates a result with the given status code and content.
Sends a status message to the client.
Sets the status of a file.
Find by id.
Returns the preferred lang for the given candidates.
Call unique method.
Add a fragment to the request
Returns the absolute URL for the given http request.
Returns the web socket URL for the given http request.
Creates a function that executes the given runnable and returns the unit of the connection.
Creates a function that executes the given block on the connection.
Creates a new server for a router.
Convert an object to a json tree.
Converts a JSON node to an object of the given class.
Parses a string into a json node.
Parses a JSON node from an input stream.
relative relative to target path
Canonicalizes the given URL.
Returns a list of displayable constraints for a set of constraints.
Convert a constraint descriptor to a displayable constraint tuple.
Waits for a completion stage to finish.
Parses a cron expression into a date.
Returns the next interval of the given date.
Create a new ws client with the given config cache cache and materializer.
Returns a builder for the guice application.
Renders the todo page of a request.
Associates the given value with the given key.
Flash a key - value pair.
Returns the qualified name of the given instance.
Returns a binding key that is qualified with the given annotation.
Binds the underlying binding to the given implementation.
Binds the underlying binding to the given provider.
Binds the underlying supplier to the given instance.
Binds the underlying binding to the given key.
Binds the underlying binding to the given provider.
Returns a list of available langs.
Returns the preferred language for the given language list.
Creates a reader from a map of evolutions.
Creates a reader for the default evolutions.
Clean up the evolutions.
Creates a guice application builder with the given environment and configuration loader.
Creates a guice application builder with the given environment and configuration.
Creates a new guice application with the given modules.
Load guice application with given modules.
Load guice application with given modules.
Load guice application with given bindings
Creates a new guice application builder.
Encodes the cookie into a string.
Gets the entity manager.
Returns a deque of entity managers.
Push or pop an entity manager.
Create a bypass with a single flow.
Automatically merges a flow into a flow using the given strategy.
Convert error arguments to list.
Fills the form with the given value.
Returns a list of validation errors.
Returns a JSON representation of the errors.
Returns the value associated with the given key.
Fills the form with the given values.
Parses the given text and converts it to the given class.
Parses the given text into an object of the given field.
Print a t to a string.
Print a type descriptor for the given field and t.
Prints the given object to the string.
Register the optional converter.
Register a formatter for the given class.
Encodes a cookie into a string.
Returns a list of nodes for the given path and object.
Convert a java. util. list to a sequence.
Converts an array to a sequence.
Create a varargs sequence from an array.
Create a mapped web socket acceptor.
Asynchronously accept or result.
Get the cost of a promotion.
Get the cost of the transformation.
Get the cost of an object transformation.
Gets the messages for the given key.
Get messages for a list of keys.
Create a database from a string.
Creates a parallel sorter for the given arrays.
Sorts the elements in the specified range using the specified comparator.
Merges the specified range of values into this one using the specified comparator.
Invoke a method on an object.
Load an argument at the given index.
Emit a field instruction.
Add a constant to the constant stack.
Unbox or zero.
Process an array.
Compare two nulls.
Resolve all the bridged references.
Filter constructors.
Sets the superclass of this object.
Emits a get field.
Adds a method to the signature and exception types.
Returns the cardinality of this set.
Sets the naming policy.
Find methods.
Resolve a child path.
Read a string from a file.
Sets the host of the HTTP request.
Create a http request with the given method and destination.
Create a HTTP request to connect to the given destination.
Create a http request with HTTP method and destination.
Create a HTTP POST request.
Create a HTTP PUT request.
Create a patch http request.
Create a HTTP DELETE request.
Create a head http request.
Create a http request with the HTTP method trace and destination.
Creates an HTTP request with the specified destination.
Sets the request path.
Add cookies to the request.
Add a query to the request.
Adds a query to the request.
Sets the query string.
Returns the query string.
Returns the host url.
Perform basic authentication.
Set the host header.
Override this method to provide a buffer for the request.
Remove a range from a handler.
Gets the length of the exception table.
Collect all interceptors.
Collect the action filters.
Collects the action results.
Collect all runtimes.
Set simple property.
Gets the value of a property.
Extract this reference from the given property name.
Gets the writer.
Sets an object reference.
Returns the object reference for the given name.
Lookup an object by its reference.
Returns the descriptor for the given table reference.
Find table descriptor by column ref.
Returns the alias for the given table reference.
Register a table reference.
get entity descriptor by table ref.
Register a hint.
Serialize the given value to the given json context.
Inject attributes.
Inject parameters.
Inject uploaded files.
Convert a property name to a column name.
Convert a column name to a property name.
Apply a property name to a column name.
Store a value in the database.
Prepares the value for the given type.
Gets all wrappers.
Resolve a wrapper.
Create a wrapper.
Converts a path to a system or unix path.
Gets the path from a filename.
Splits a filename into an array of strings.
Returns the relative path of the target path to the base path.
Register a new madvoc component.
Register an action config consumer.
Starts the application.
Register the components of the madvoc container.
Exclude a set of jars.
Scan for classes that include the given jars.
Scan for entries that are included in the rules.
Exclude entries from the scanner.
Scans a jar file.
Scans the classpath for classes.
Returns the signature of the given type.
Scans a set of paths.
Starts the scan.
Create a new transaction.
Gets or init a scope for the given class.
Gets or init a scope.
Invoke consumer for scope.
Prepare a csrf token.
Ensures that the given token set size is within the maximum allowed size.
Check csrf token.
Create a copy of a bean from an object.
Create a copy of this bean.
Visit a property.
Initializes this template with the given template data.
Resolves the scope for the given type.
Register a bean definition.
Register a bean definition.
Remove a bean from the registry.
Resolves the bean names for the given type.
Register a ctor injection point.
Register a petite property injection point.
Register a set injection point.
Register a method injection point.
Registers init methods for a bean definition.
Registers destroy methods for a bean definition.
Register a provider.
Register a provider.
Consumer for each bean type.
Defines the parameters of a map.
Intercept an action request.
Resolve java version.
Push an int value onto the stack.
Check argument index.
Returns advice field name.
Returns advice method name.
Load special method arguments.
Load the arguments of a method.
Load the arguments of a virtual method.
Load a method argument.
Store a method argument.
Prepare the value for the given method.
Create method signatures key.
Generate a new array of the given type.
Store a component type into an array.
Extracts the encoding from the content type.
Checks if the given flags are empty.
Resolves the auth bearer token from the request.
Require authentication.
Prepare the response for download.
Prepare response.
Get all cookies with the given name.
Read request body from reader.
Read request body from stream.
Store a path in the page context.
Store the context path variable in the servlet context.
Checks if is get parameter.
Prepare parameters.
Copies all parameters from the request to the attributes.
Invoke the body of a jsp fragment.
Render the body of a jsp fragment.
Render the body to a string.
Invoke all init methods.
Call destroy methods.
Create a new bean instance.
Inject parameters.
Rewrite the action path.
Add a header value to the header.
Put a key - value pair into the map.
Put base property.
Associates the specified value with the specified profile. If the profile previously contained a mapping for the key
Gets the profile property.
Resolve macros.
Extract the target map from the profiles and wildcard patterns.
Convert a stream to a word.
Hashes a password using a salt.
Hashes a string using the hashed hashed string.
Copy all bytes from the input stream to the output stream.
Copy max bytes from the stream to the output stream.
Parse an action definition.
Resolve action config.
Detect and register an action alias.
Read action interceptors.
Read action filters.
Read package action path.
Read method action path.
Parse method alias.
Create an action runtime.
Pre response commit.
Apply the advice to the target class.
Inject target into proxy.
Visits an annotation of the given descriptor.
Resolves a real name.
Resolves a json name.
Lookup the type data for the given class.
Lookup the type data for the given type.
Find subclass type data.
Resolve json name.
Resolves a real name.
Gets the content of the file.
Copy bootstrap methods.
Sets major version and class name.
Put constant pool into byte vector.
Put bootstrap methods.
Add a fieldref to the constant pool.
Adds a methodref to the symbol.
Adds a reference to the constant pool.
Adds a constant reference to the constant pool.
Adds an integer or float constant to the constant pool.
Adds a constant to the constant pool of the given tag and value.
Adds a long constant to the constant pool.
Adds a constant or double to the constant pool of the given tag and value.
Adds a constant to the constant pool.
Adds a new constant with the given name and descriptor.
Adds a constant to the constant pool.
Adds a constant to the constant pool of the class being build.
Adds a constant method handle to the constant pool.
Adds a dynamic reference to the symbol.
Invoke a dynamic reference.
Adds a dynamic reference to the constant pool.
Adds a dynamic reference to the dynamic table.
Adds a reference to the constant pool.
Adds a reference to the constant pool of the specified tag and value.
Adds a bootstrap method.
Adds a type to the merged table.
Returns the hash code for the given name.
Clear the map.
Returns all values with the given name.
Returns an iterator over the elements in this map.
Returns a list of all entries in the map.
Grows the buffer by the given minimum capacity.
Appends a sequence of characters to the buffer.
Visit an annotation.
Visit end of chain.
Create the first chain chain.
Create the first chain.
Parse a path from a string.
Adds a field to the path.
Configure servlet context.
Executes the target method.
Returns an array of all field descriptors.
Create bean definition for registration.
Convert jtx transaction mode to db mode.
Reads a property from the source object.
Put all entries in the given map.
Append a buffer to the end of the list.
Writes the contents of the list to the writer.
Writes the contents of this list to the given output stream.
Writes the response to the output stream.
Gets the string value for the given key.
Returns the integer value for the given key or null if not found.
Returns the long value for the given key or null if the key does not exist.
Returns the double value for the given key or null if the key does not exist.
Returns the float value for the given key.
Returns the value for the given key.
Adds a key - value pair to the json object.
Use a folder.
Receive messages from a folder.
Update the flags of a received email.
Close the folder if it has been opened.
Find a named parameter by its name.
Validates this action against the given profiles.
Adds a violation to the violation list.
Set mime type from mime or extension.
Sets the download file name.
Sets the stream target.
Sets the target of the proxetta.
Sets the target of the proxetta.
Processes the target class.
Create a new instance of this class.
Create a new instance of the proxetta class.
Dump class in debug folder.
Sets the from address for the given personal name.
Sets the to address of the email address.
Adds an email address to the email address.
Sets the reply to.
Sets the cc address.
Sends a text message with the specified text.
Sends an email message with the specified HTML.
Adds a header to the response.
Gets the value of a system property.
Returns the boolean value for the given name.
Returns the integer value for the given name or the default value if the name does not exist.
Returns the long value for the given name.
Gets the resolved parameters of the method.
Serialize a key value.
Lookup the action path for the given alias.
Resolve the alias of the given string.
Resolve result path.
Resolve result path value.
Returns the last index of a slash in a string.
Returns the last index of a dot after a slash.
Returns the index of the last dot after slash.
Resolves the schema name for the given type.
Resolve column descriptors.
Initialize the key with the given tweak.
Multiply the y by j and d.
Demix a vector.
Schedule a key.
Initialize the block with the given message and tweaks.
Encrypt a block.
Converts a byte array to a long array.
Remove any bounding from the string.
Returns the path of the methref.
Create a zlib file from a file.
Gzip a file.
Ungzip a file.
Create a list of strings from a zip file.
Unzips the given file to the given destination directory.
Adds a file to a zip output stream.
Adds content to a zip file.
Gets a field descriptor by name.
Gets a property descriptor by name.
Set request bundle name.
Sets the locale of the session.
Gets the session locale.
Filter parameters for bean name.
Add a list of profiles to the configuration.
Gets a little endian long from the given byte array starting at the given offset.
Reads a stream into a byte array.
Read label.
Gets the bytecode for the type annotation at the given index.
Read bootstrap methods attribute.
Inspect the constructors.
Returns the ctor descriptor for the given arguments.
Get request map.
Create request map.
Convert an object to an array.
Initialize the servlet.
Adds a file to the search path.
Adds a file to the container.
Find files that match the given patterns.
Exclude files that match the given patterns.
Adds a path to the linked list.
Finds all files in the directory.
Initialize the list of files and folders
Returns an iterator over the files in this list.
Resolve wiring mode.
Resolve bean name.
Returns a writer for this output stream.
Gets the output stream.
Returns the class name of the element.
Returns a descriptor for the given constructor.
Returns a method descriptor for the given type and argument types.
Returns the descriptor for the given method.
Appends the descriptor to the builder.
Returns the number of elements in the sorted set.
Get the number of arguments for a method descriptor.
Sets the rollback only.
Commit or rollback a transaction.
Rollback all resources.
Request a resource.
Pop a name from the stack.
Write a string.
Writes the given character to the output.
Writes a character to the output stream.
Sets the error log level.
Start a new region.
Returns true if this string contains the include string.
Register a pseudo function.
Lookup a pseudo function by name.
implements the visitor to initialize the wd
Visit an annotation.
Make a static initializer block.
Make proxy constructor.
Processes all super methods.
Returns the index of the last occurrence of the specified range.
On string.
Replaces the instructions of the given class file with the given asm instructions.
Returns the prototypes of this attribute.
Register a sql type.
Lookup the sql type for the given class.
Lookup the sql type for the given class.
Creates a socks4 proxy.
Creates a socks5 proxy.
Creates a http proxy.
Returns the total number of threads in the thread stack.
Returns the total number of transactions with the given status.
Associate a transaction with the stack.
Continues a transaction.
Lookup the resource manager for the given resource type.
Create a proxy object for the given target class.
Append a method to the path.
Pads the given string with the given size.
Converts a string to camel case.
Format a paragraph of a string.
Converts tabs to spaces.
Escapes the given string for use as a hex string.
Unescapes the given string.
Gets the bean with the given name.
Gets bean by name.
Initialize bean definition.
Invoke provider.
Add a bean to this scope.
Set a bean property.
Gets the bean property by name.
Shuts down the application.
Resolves the parameters of a method or constructor.
Prints the body of the current page.
Gets the value of a macro.
Terminates the current node.
Create element node.
Remove the last child node from the parent node.
Gets the query string.
Gets the name of the action class.
Calculate to.
Replaces all occurrences of sub with with with s.
Replaces a char in a string.
Replaces all occurrences of a character in a string with another.
Replaces the first occurrence of s with with with with s.
Replaces the first occurrence of sub with with with s.
Replaces the last occurrence of sub with with with s.
Replaces the last occurrence of sub with with with s.
Removes the first occurrence of sub from s.
Remove a character from a string.
Check if all strings are empty.
Checks if all strings are blank.
Convert an object to a string array.
Change the first character of a string.
Returns the title of the given string.
Compress a string with a character.
Checks if source string starts with ignore case.
Checks if s ends with c.
Count the number of ignore cases between two strings.
Returns true if the two strings are equal ignoring case.
Returns the index of the first non - whitespace character in the given string.
Strip leading char from string.
Strip trailing char from string.
Strip a char from a string.
Removes the given character from the given string.
Strips the given character from the given string.
Crops a list of strings.
Trims the left side of a string.
Trims the right side of a string.
Returns the index of the given region of the given string.
Join a collection with a separator.
Joins an array of objects with a separator.
Convert a string to a new charset with the given name.
Checks if the character at the given index is equal to the given character.
Surround the given string with the given prefix and suffix.
Prefix the given string with the given prefix if it does not already start with the given prefix.
Appends the suffix to the string if it ends with the given suffix.
Cuts the substring from the beginning of the string.
Cuts the substring from the given string.
Cuts a prefix from a string.
Cuts the suffix from the given string.
Cut the given string surrounding the given prefix and suffix.
Inserts the given string at the given offset.
Repeats the given string by the given number of characters.
Reverses a string.
Returns the longest common prefix between two strings.
Finds the common prefix of the given strings.
Shorten a string to the given length and suffix.
Converts a string to upper case.
Remove quotes from a string.
Convert a byte array to a hex string.
Gets the bytes from a string.
Detect quote char.
Visit an enum value of the annotation. This method will be called for every node in the tree
Visits an annotation of the given type.
Register a type.
Registers an entity with the database.
Remove an entity descriptor from the map.
Create entity instance.
Sets the target interface.
Inject target into wrapper.
Looks up annotated properties for the given type.
Detect database and configure db oom.
Closes the output stream.
Writes a byte to the buffer.
Invalidates the session from the request.
Gets the encoded name.
Writes this buffer to a byte array.
Writes the data source to a file.
Write data to a stream.
Append an argument to a string.
Prepend an argument to a string.
Change the type of a string.
Appends the given text to the end of the text.
Register a converter for the given type.
Lookup a converter for the given type.
Returns a list of nodes that match the given query.
Selects a collection of selectors.
Process selectors.
Selects the first node matching the query.
Iterates over all descendants and adds them to the result list.
Recursively walk the tree.
Select and add result.
Unpacks a char array from a string.
Refills the input stream.
Get a page of data.
Remove the select from the sql string.
Remove the from from the string
Remove last order by.
Decodes a string into a string.
Detects the name of an entity.
Build order sql.
Build page sql.
Resolve columns and properties.
Find by column name.
Find by property name.
Gets the property name for the given column name.
Returns the column name of the given property.
Gets the id value of an object.
Sets the id value of the bean.
Gets the key value for the given object.
Append a string to the end of this string.
Sets the index of the array.
Expands the capacity.
Calculates the length of the array.
Create a mixing message.
Create scoped proxy bean.
Initializes the map.
Accepts a file.
Use a file to watch the directory.
Starts the watch task.
On change.
Adds an enumeration to the list.
Compute the size of the field info.
Put field info.
Create a target with the given value and scope data.
Writes a value to the injection point.
Decorates the given page content with the given decora content.
Parses a page.
Write decorated page.
Writes the region of a page.
Starts the server.
Runs the given process.
Create an imapssl object for the given session.
Creates a gzipped response stream.
Initializes the hint.
Append column name.
Adds a rule to the list of rules.
Apply the rule to the given value.
Process includes.
Process excludes.
Returns the pseudo class name.
Add all elements in the given collection to this set.
Finds the insertion point for the given element.
Register an action configuration for the given annotation type.
Register a new action configuration.
Looks up an action configuration by type or annotation type.
Registers a consumer for the given action config type.
Sets the mail properties.
Validates the value within the validation context.
Find the last table in the tree.
Fix the foster elements.
Register session beans.
Gets the session bean map.
Initialize the proxy class.
Add advice init method.
Called by the bundle manager when the bundle ends.
Adds a key - value pair to the builder.
Extracts profiles and adds them to the list.
Adds a value to the hash map if the operator is copy.
Convert a typedesc to a class name.
Convert a type descriptor to a name.
Convert a type to a typeref.
Adds all consumers to the list.
Create a collection of the given length.
Convert to single element collection.
Convert a value to a collection.
Convert collection to collection.
Adds a line number to the list.
Visits this label and the other line numbers.
Puts the given byte vector into the given byte vector.
Adds a forward reference to the buffer.
Marks this basic block as belonging to the given subroutine.
Compare two digits.
Fixes the accent of a character.
Put a byte into the vector.
Puts two bytes into the byte vector.
Put a short into the byte vector.
Puts a 12 - byte value into the byte vector.
Puts two bytes into the byte vector.
Put an integer into the byte vector.
Puts two bytes into the byte vector.
Put a long into the byte vector.
Enlarges the byte vector to fit into this byte vector.
Enlarge the buffer to the given size.
Authenticate user via http session.
Authenticate user via token.
Authenticate user via basic auth.
Finds the default message for the given key.
Gets a bundle by name.
Gets the value at the given index in the given array.
Sets the id of the given entity.
Saves an object to the database.
Update an entity.
Update a property.
Update a property of an entity
Find by id.
Find entity by property.
Find by criteria.
Delete by id.
Delete by id.
Counts the number of entities of the given type.
Increase a property.
Decrease a property.
Find related entities.
List all of the entities in the target class.
Removes all entries from the map.
Returns a set containing all of the attributes of this object.
Sets the value for the given key.
Remove an object from the map.
Gets the current stack trace.
Get stack trace.
Get stack trace chain.
Gets the chained exception from the given throwable.
Prints an exception stack trace to a string.
Converts an exception chain to a string.
Builds a message from a throwable.
Unwrap the wrapped throwable.
Register as consumer.
Adds a component to the madvoc container.
Gets the system class loader.
Get resource as stream.
Get resource as stream.
Gets resource as stream.
Get resource as stream.
Add a new value to the route chunk.
Find or create a child with the given value.
Parses the request.
Convert to collection.
Invoke setter.
Sets the forced value of the array at the given index.
Create bean property.
Extracts the type of the bean property.
Stop the request and add a cookie to the response.
Start the auth session.
Converts a local date to a date.
Converts a local date time to a calendar.
Define proxy.
Adds a check to the list.
Resolves a validation context for the target class.
Adds all checks for the given class.
Collect property annotation checks.
Collect annotation checks.
Copy check properties.
Encodes a component of a URI.
Encodes the given string using the given encoding.
Encodes the given scheme using the given encoding.
Encodes the given host using the given encoding.
Encodes a port with the given encoding.
Encodes the given path using the given encoding.
Encodes the given query using the given encoding.
Encodes the given query param using the given encoding.
Encodes the given fragment using the given encoding.
Inspect the properties.
Returns an array of all property descriptors.
Returns a list of all the cookies in the response.
Unzip this response.
Closes the http response.
Accepts a scope.
Encrypts the given content.
Decrypts the given encrypted content.
Convert map to bean.
Generate the list.
Sets the value of a property descriptor.
Generate map.
Compares two entity column descriptors.
Sets a default header to the given value.
Sends a request to the server.
Send request.
Adds the default headers to the request.
Reads the cookies from the response.
Adds the cookies to the request.
Sends an email to the service.
Sets the subject of a message.
Sets the sent date of the message.
Sets the headers for the email with data.
Sets the people.
Sets the recipients.
Adds body data to the email.
Sets content part to set.
Create attachment body part.
Gets the content type of the header.
Save a result set to the hash set.
close all result sets
Closes the query.
Close the connection.
Set fetch size.
Sets the maximum number of rows in the statement.
Executes an UPDATE statement.
Executes the query and returns the first row of the result set.
Gets the generated columns.
Gets the query string.
Create a proxy for the target and aspect class.
Create a collection from an iterator.
Creates a stream from the given iterator.
Compares two objects.
Sets the wiring mode.
Print a message and throwable to the standard output.
Gets the caller class name.
Shorten a class name.
Excluded types.
Serializes the source object to the target object.
Serialize an object to a string.
Clones the given object using the serialization algorithm.
Write an object to a file.
Read an object from a file.
Converts an object to a byte array.
Converts a byte array to an object.
Resolves the names of mapped types.
Create types table names.
Reads the value of a column.
Cache result set entities.
Resolves the provider definition for the given type and name.
Apply to table name.
Checks if a connection is valid.
Render the view.
Locates the target for the given path.
Gets the writer for the response.
Gets the output stream.
Write content to response.
Sets the content type.
Prints a string to the output stream.
Login using basic auth.
Convert token to json object.
Login using basic auth.
Converts a url to a container file.
Create a directory if it does not already exist.
Create a directory if it does not exist.
Copies a file to another file.
Copy a directory from one location to another.
Move a file to a directory.
Move a directory from one location to another.
Deletes all files in a directory.
Reads the contents of the given file as UTF - 8.
Reads characters from the given file using the given encoding.
Write chars to a file.
Write a string to a file.
Append a string to a file.
Read a number of bytes from a file.
Writes a byte array to a file.
Append a byte array to a file.
Copies a file or directory to another file.
Delete a file or directory.
Create a temp directory.
Checks if the file is binary.
Checks if src dir is a directory and if not throws an exception.
Copies a file or directory.
Print command usage.
Resolves an action method.
Register an action.
Register a path alias.
Moves to the next value.
Create a sequence from a char array.
Executes the target method.
Checks if the target character matches the target character.
Creates a character sequence from the input starting from the given index.
Returns an array of URLs for the given class.
Sets the bcc values for the email address.
Register a serializer for the given type.
Looks up a serializer for the given type.
Parses a request stream.
Returns the value of the request parameter with the given name.
Returns the values for the given request parameter.
Gets the value of a file parameter.
Gets the files for the given upload param.
Initializes this filter with the given filter configuration.
Parse a template into the SQL builder.
Find the end of a macro.
Count the number of escapes in a macro.
Build query string.
Parses a query and returns a multi map.
Prepare header parameter name.
Extract media type from string.
Render the given appendable to the given node.
Appends the given appendable to the given node.
Configure with servlet context.
Resets this object to its initial state.
Sets lazy flag.
Replace the mapped type with the mapped type.
Parses the given string as a list.
Parses the given string as a map.
Resolve lazy value.
Skip object.
Parse a string.
Parse string content.
Parses a unicode character.
Parse unquoted content.
Parse a number.
Parse array content.
Create an empty ctor.
Create a simple method wrapper.
Resolve raw type name.
Resolve a reference from a value.
Resolves a bean reference from the given values.
Read references from annotation.
Build default references.
Build default bean reference.
Remove duplicate names from all bean references.
Converts an array of references to an array of bean references.
Convert ann value to references.
Run a joy consumer.
Find declared method.
Find a constructor of the given type.
Resolve all interfaces of the given type.
Compare two parameters.
Force access to an accessible object.
Creates a new instance of the given class with the given parameters.
Returns the superclasses of the given type.
Returns the child class of the given object.
Returns the jar file of the given class or null if not found.
Sleep for a given amount of milliseconds.
Sleep for long. max value.
Waits for an object to become available.
Creates a daemon thread factory.
Gets the value of the supplier.
Visit a parameter. This method will be called for every node in the tree that is a parameter
Visits an annotation of the current method.
Visit a field instruction. This method will be called for every instruction in the stack frame.
Visit a method instruction. This method will be called for every node in the tree that is a
Visits a dynamic insn instruction. This method will be called for every instruction in the
Visit a jump instruction. This method will be called for every instruction in the stack frame that is
Visit a multi - a descriptor and a number of dimensions.
Visit a try catch block. This method will be called for every node in the tree that is
Convert the base and profile properties to the writer.
Copies the input stream to the output stream.
Moves to the next element in the iteration.
Move to the next.
Joins an array of arrays into a single array.
Joins the given arrays and returns the resulting array.
Resizes the buffer to a new size.
Append a new element to the end of the buffer.
Removes a component from the buffer.
Returns the index of the given value in the given array or - 1 if the array is empty
Returns the index of the given value in the given array.
Returns the index of the first occurrence of the first occurrence of the second occurrence of the first occurrence
Enable xhtml mode.
Parses the given content into a lagarto document.
Parse the lagarto document.
Compute the max stack and local.
End current basic block with no successor.
Collect attribute prototypes.
Inject the context for the target object.
Register a pseudo class.
Looks up a pseudo class by name.
Invokes the action with the given request.
Gets all bean property names.
Visits the bean.
Checks if the given property name matches the given rule.
Resolve the injection point for the given type.
Read filter config parameters.
Sends a bundle file to the client.
Looks up a file for the given bundle id.
Looks up a gzip bundle file.
Register a bundle.
Create a digest from a string.
Create a bundle from a list of sources.
Resets the cache to its initial state.
Fix relative urls.
update a column in the entity
Create table ref name.
Gets the db session.
Convert an object to a single element array.
Parse signature for generics.
Resolves the injection point for the given type.
Returns true if the given property type matches the given property type.
Opens a connection for a query.
Opens a transaction.
Close the transaction.
Commit the transaction.
Rollback the transaction.
Create a properties object from a file.
Create a properties object from a string.
Load properties from a string.
Returns a subset of the properties.
Create a properties object from a classpath.
Gets the value of a map property.
Resolve all variables in a properties object.
Resolves the value of a property.
Resolve scope.
Gets the transaction mode.
Registers an array of annotations.
Read transaction annotation values.
Accepts the given node.
Returns true if the element of the node is the same as the element of the node.
Accepts a list of nodes.
Unescapes the given string.
Build jre packages.
Clone this node to another node.
Detaches this node from its parent.
Adds a child node to this node.
Inserts a child node at the given index.
Inserts the given child before the given child.
Inserts the given child before the given child.
Inserts a new child after the given child.
Inserts a new child after the given child.
Removes all child nodes from the list.
Find child node with the given name.
Returns an array containing all nodes that satisfy the given predicate.
Checks if this node is a child of this node.
Initializes the child element nodes.
Initialize sibling names.
Initialize child nodes.
Change owner document.
Returns the previous sibling node with the given name.
Returns the text content of this node.
Gets the inner HTML of this element.
Visit all children of this node.
Gets the relative path of this node.
On decora tag.
On id attr start.
Define a decora tag.
Add a proxy aspect.
Add a root package and mapping.
Adds the root package of the given action class.
Find the root package for the given action path.
Resolve validation message.
Remove duplicate names from this bean.
Add a props file pattern.
Perform a consumer for each target.
Iterates over all targets and calls the consumer for each target.
Perform a consumer for each target and out.
Extract parameters values.
Make targets.
Create action method argument.
Called when a session is created.
Called when a session is destroyed.
Adds an object to the array.
Adds all elements of the given array to the list.
Removes the object at the given position.
Resolve target.
Sends an error if target not found.
Convert an object to a string.
Resolve a madvoc router filter.
Returns the pseudo function name.
Resolves the injection point for the given class type.
Creates a socks4 proxy socket.
Returns the number of attributes in this set.
Gets all action results.
Returns true if c equals match.
Finds the first occurrence of the match in the source char sequence starting from the given index.
Returns the index of the first occurrence of the match in the source array or - 1 if the
Add command line arguments.
Adds a new environment variable.
Runs the gobbler.
Invoke a listener of the given type.
Copies this frame from another frame.
Gets the abstract type from the descriptor.
Set the input frame from the api format.
Get local index.
Sets the local index of the abstract type.
Pushes an abstract type onto the stack.
Pushes the given string onto the stack.
Pop the given number of elements from the stack.
Pop a descriptor from the stack.
Adds the initialized type.
Gets the initialized type.
Put an abstract type into a byte vector.
Prune expired objects from the cache.
Visit a module.
Visit a outer class. This method will be called for every class in the class hierarchy.
Visit an annotation of the class descriptor. This method will be called for every class in the class
Gets the thread session.
Closes the thread session.
Create the execution array.
Invokes the action method.
Read the request body from the stream.
Calculates the first item index of the given page size and total.
Calculates the first item index of a page.
Returns true if the given value is equal to or greater than the given value.
Convert a char array to a raw byte array.
Find the first occurrence of match in source starting from index.
Resolve node name.
Resolve attribute name.
Loads the properties from the given file.
Load properties from a file.
Load properties from the given input stream.
Load properties from a map.
Load properties from a map.
Scans the classpath for properties matching the given patterns.
Returns the value of the given key or the default value if the key does not exist.
Sets the value for the given key and profile.
Extract the properties from the target map.
Extract the props from the target map.
Extract sub props.
Returns the inner map.
Add inner map.
Resolve the active profiles.
Returns the names of all profiles.
Get a list of profiles that match the given wildcard.
Adds a property injection point.
Adds a set injection point to the set.
Adds a method injection point.
Adds an array of methods to the list of methods.
Adds the given methods to the list of methods.
Resolve target class.
Inject target into wrapper.
Gets the target wrapper type.
Finds the field descriptor for the given field name.
Returns the type of this field.
Resolve key type.
Resolves the component type.
Creates a json result from the given object.
Creates a json result from an exception.
Resolve http method from method name.
Checks if a character sequence matches a pattern.
Resolve loading.
Load a class from the classpath.
Resolves the resource with the given name.
Wait for the current thread to finish.
Detect annotation type.
Build injection point.
implements the visitor to look for class metadata.
Returns an array of URLs for the given class loader.
Sets the bean.
Update the bean.
Loads the descriptor for this property.
Connect to the database.
Adds an iterator to the list.
Prints the logo.
Stops the application.
Create a socket.
Create a new SSL connection.
Gets the default ssl.
Returns a socket factory for the given proxy info.
Generate a random string with the given number of characters.
Generate a random string.
Generates a random string of the given number of ranges.
Create an array instance of the given type.
Inject value into object.
Convert a value to a target type.
Visit a provide service and providers.
Create a default cache.
Associates the specified value with the specified type.
Returns an array of all method descriptors.
Resolves an IP address.
Convert an IP address to an integer.
Checks if a string is a valid IP address.
Resolves the host name of the given IP address.
Download bytes from a URL.
Download a string from a URL.
Download a file from a URL.
Connect to the given hostname and port.
Connect to the given hostname and port.
Returns the index of the given class name.
Loads a class from the classpath.
Load array class by component type.
Shuts down the server.
Returns a binary search for the element in the array.
Returns a binary search for the element in the array using the given comparator.
Excludes the given strings.
Includes a set of strings.
Includes bean properties as a template.
Start the tag at the given index.
Register a bean with madpc.
Resolve column db sql type.
Preprocess SQL string.
Create result set mapper.
Finds the generated key for the given type.
Populate generated keys.
Create a wrapper.
Set bean.
Set a map of parameters.
Sets the objects of this q.
Inserts a chunk after another one.
Looks up the descriptor for the given entity.
find entity descriptor by column ref
Resolves a table.
Resolves the class of the given object.
Appends a missing space to the output.
Returns an enumeration of file parameter names.
Includes the given page in the given request.
Returns the URL for the given request.
Get request uri.
Resolves parameter names for the given action class method.
Starts the application.
Stop the petite container.
Filter the email by the given subject.
Filter a message by its id.
Filter email by from address.
Filter to address.
Filter recipient by cc address.
Filter recipient by bcc address.
Filter a set of flags.
Apply a flag to the email.
Filter by received date.
Filter sent date.
Filter by size.
Appends a set of email filters to this email.
Appends the OR of the given email filters.
Add a not filter to the email.
Concatenate two search terms.
Encodes the given byte array into a base32 string.
Checks if is gzip eligible.
Validates the target object against the validation rules.
Validates the given object against the given target name.
Adds a profile to the list of enabled profiles.
Set the enabled profiles.
Checks if the profiles match.
Parse the request body.
Converts this time to milliseconds.
Adds the given date to this date.
Returns a new julian date from this date and another.
Sets the fraction for the given integer.
Emit a comment.
Prints an error message.
Create a hash for the given password.
Generate a pbkdf2 secret key.
Converts a hex string to a byte array.
Resolve provider definitions.
Sets the name of the attachment.
Set content id from name if missing.
Resolve content type.
Parse a type signature.
Compute the number of attributes in the symbol table.
Put attributes.
Decodes the given string using the given encoding.
Decodes the given string using the given encoding.
Starts the application.
Check connection provider.
Visit a method.
Visits the end of the method.
Create a method signature visitor.
Convert an array of objects to a csv string.
Convert a line to an array of strings.
Resolves the injection point for the given type.
Create a reader for the advice.
Gets the cached advice reader.
Encrypt a string using UTF - 8.
Decrypt a string.
Returns the logger with the given name.
Sets the name.
Create an action request.
Create wrapper bean.
Destroy a bean.
Shutdown all the beans.
Gets the received emails from the server.
Entry point for the clustered service.
Runs the reporting function.
Print error message.
Print rate.
Maps an existing file to a byte buffer.
Closes the replay session.
Performs the work.
Returns the position of the tail.
Offers a vector to the buffer.
Appends padding to the buffer.
Closes the stream.
Poll for error response.
Stops a replay.
Prints an image to the console.
Prints an unavailable image event.
Read a status indicator from a counters reader.
Read channel status.
Sets the limit of the buffer.
Appends a buffer to the buffer.
Polls for a control session or template.
Create a mapped byte buffer for loss reporting.
Returns a snapshot of the streams.
Creates a default header buffer.
Writes a key buffer to the flyweight key buffer.
Writes a label buffer to the buffer.
Connects to the given response channel and stream id.
Attempt to connect to the given response channel and correlation id.
Sends a close request to the client.
Starts a recording request.
Sends a stop recording request.
Replays the given data.
Stop a replay request.
Retrieve a list of recordings.
Sends a list of recordings for a URI request.
Sends a list of recording requests to the server.
Extend a recording request.
Gets the position of a recording.
Sends a stop position request to the server.
List recording subscriptions.
Checks if a channel matches a tag.
Returns the destination address for the given channel URI.
Returns a description of this interface.
Add a destination to the list of connections.
Inserts a new packet into the buffer.
Find a control toggle.
Adds a parameter to the request.
Returns the channel tag.
Gets the entity tag.
Adds a session id to a channel.
Gets the tag of the given string.
Append padding to the header.
Update the publisher limit.
Allocate a buffer position.
Returns the name of the given type.
Scans the buffer for available space.
Resets the builder to null.
Validates the state of this builder.
Sets the prefix for the URI.
Sets the media.
Sets the control mode.
Sets the length of the term.
Sets the term offset.
Sets the linger for this builder.
Closes the reader and releases any resources associated with it.
Checks if the given buffer is a valid frame.
Receive a datagram from the server.
On nak a retransmit.
Process timeouts.
Returns a string representation of the given status.
Allocate an atomic counter.
Resets this vector to the given buffer.
Validates this vector.
Validates and computes the length of a vector.
Calculates the length of a producer window.
Validate socket buffer lengths.
Validate page size.
Validate session id range.
Validates that an unblock timeout is valid.
Sets the error code.
Resets this instance to its initial state.
Encodes the cluster members as a string.
Add member publications to member list.
Close member publications.
Checks if a quorum of members is active.
Returns the ranked position of the members.
Reset log positions.
Checks if the position of the members has a vote with the given leadership term id.
Returns true if the member has a vote with the given candidate term id.
Checks if the cluster members have a majority vote with the given candidate term id.
Determine a member.
Validates the endpoints of a member.
Checks if two cluster members have the same endpoints.
Checks if a candidate is unanimous.
Checks if a candidate is a quorum candidate.
Checks if a member is duplicated with the given endpoints.
Returns the index of the member with the given id.
Remove a member from an array.
Returns the highest member id of the given cluster members.
Returns the mapped cnc file mapped by the given consumer.
Checks if the driver is active.
Checks if the driver is active.
Checks if the driver is active.
Terminates the driver.
Returns the length of a frame in volatile mode.
Writes an ordered frame length to the buffer.
Writes a frame type to the buffer.
Writes the flags of a frame.
Writes a frame term to the buffer at the given offset.
Writes a term id to the buffer.
Find counter id by recording id.
Find counter id by session id.
Gets the recording id for the given counter.
Checks if a counter is active.
Adds a feedback frame to the frame.
Reloads the cache.
Finds the last entry of the list.
Create recovery plan.
Create recovery plan from snapshots.
Appends a term to the cluster.
Appends a snapshot to the cluster.
Commits a log position.
Adds an entry to the cluster.
Closes the session and subscription.
Offer a vector to the publication.
Unblock the given term buffer.
Returns the channel as a ascii string.
Sets the flyweight channel.
Checks that the given term length is valid.
Checks page size.
Atomically cass an active term count.
Computes the position of an active term.
Compute log length.
Store a default frame header.
Apply the default frame header to the buffer.
Rotate the log.
Initialise tail with term id.
Returns the offset of the given tail of the given length.
Returns the raw tail of the buffer.
Atomically cas raw tail.
Writes a token buffer to the token buffer.
Allocate a counter.
Find counter id.
Checks if a counter has been replayed.
Gets the snapshot recording id for a given counter.
Convert flags to chars.
Sets the flyweight channel.
Offers a buffer to the cluster.
Wraps the given buffer at the given offset and length.
Commits the frame to the buffer.
Aborts the request.
Entry point for the media driver.
Closes all the resources.
Computes the position of the frame.
Allocate a counter.
Find counter id.
Allocate an atomic counter.
Closes the mapped byte buffer.
Dispatch a recording descriptor to a consumer.
Adds a slab to the list.
Sets the byte at the given index.
Adds the given statistics to the page.
Convert an array type to a group type.
Convert a struct type to a group type.
Annotate a message with the given position.
End the run if the run header has been set.
Read one struct.
Reads a list of footers for the given file status.
Reads the parquet metadata from the given summary file.
Reads the footer of a file.
Read the next row group.
Gets the next filtered row group.
Reads a dictionary from a column chunk meta data.
Adds a writer to the parquet.
Remove a writer from the parquet.
Update the allocation.
Register a scale call back runnable.
Start writing the magic to the stream.
Start a block of data.
Starts a new column.
Write a dictionary page to the stream.
Writes a page of data to the stream.
Ends the current block.
Copies all bytes from the given stream to the given stream.
End the parquet file.
Merges a list of files into a parquet metadata block.
Merges a list of parquet files into a single parquet file.
Writes a list of footers to a metadata file.
Merge the given file meta data into the given global meta data.
Reads the value.
Checks if the schema is null or union.
Returns the first non - null non - null object from the given objects.
Make a value from a string and schema.
Create a thrift meta data from extra meta data.
Create a thrift meta data from a thrift class.
Returns the extra meta data for this object.
Write null.
Writes the page.
Initializes this buffer from the given stream.
Allocate values buffer.
Checks that the enum value of the given thrift type is equal to the expected enum value of the
Calculate the bit widths for a delta block buffer.
Throw if the exception is assignable to the given exception class.
Returns a new statistics based on the given type.
Creates a builder for reading a primitive type.
Merges the given statistics into this one.
Gets the non null schema for the given schema.
Create a new task attempt context.
Invokes the given method on the given object.
Writes the members of this object to the given string builder.
Merges the fields of the given group type into a new list.
Initialize a counter from a reporter and configuration.
Gets the filter instance from the configuration.
Reads all footers from parquet.
Generate parquet input splits.
Writes a record to the log.
Validates the mapping for the given descriptor and group type.
Serializes a message descriptor.
Returns a list of events for the given struct type.
Checks a set.
Read file meta data.
Closes the writer.
Sets the schema for the given job.
Adds a class to the parquet.
Checks if the given column is a valid comparable type.
Cast a long value to an int.
Creates a schema mapping from an arrow schema.
Mapping from parquet message type to parquet message type.
Map the arrow schema to the parquet schema.
Writes a page header.
Skip to match.
Write object to conf as base64.
Remove a value from the cache.
Adds a new value to the cache.
Gets the current value for the given key.
Writes a value to the output.
Set the regular expression.
Writes the given content to the given filename.
Opens a stream for the given filename.
Creates a filter that accepts records from the given string.
Convert a message type to thrift schema.
Wrap a repetition with a nested group type.
Create a list of elements of the given type.
Gets the merged key value meta data.
Gets a split from a file.
Gets the fields by name.
Resolve schema access.
Gets the input files from the input list.
Check parquet files.
Gets the input files from a directory.
Creates a record filter that accepts records from a page of readers.
Factory method for creating a list consumer.
Initializes the partition info.
Merge a tuple into a summary data.
Sum up a tuple.
Read a struct.
Read a map entry.
Write an integer to the stream.
Reads a little endian int from the given buffer starting at the given offset.
Sets the schema for the given job.
Create topic if not exists.
Duplicate pipeline stage beans.
Creates a list of interceptors for the given stage lib task stage definition stage definition stage definition stage
Creates a new interceptor bean.
Parse a schema from a string.
Converts the given milliseconds to days.
Get avro schema from header.
Upgrade v1 to v2.
Copies a list of blobstore resources to a staging blobstore.
Resets this object to its initial state.
Reports a thread health.
Register a new thread health report gauge.
Store control hub configurations.
Authenticates the given credential.
Upgrade the pipeline configuration if necessary.
Upgrade a stage library to a stage configuration.
Upgrade a stage definition to a stage definition.
Upgrades the service definition if needed.
Upgrade stage if needed.
Gets the fields to null.
Checks if the given name is system class or resource.
Adds the given element to the end of the list.
Adds the given element to the evicted list.
Returns the optional value associated with the given key or the default value if no such key exists.
Creates a snapshot of all stages and adds errors to the report.
Reads a descriptor from a file.
Gets all file descriptors.
Populate defaults and extensions.
Gets the descriptor.
Create a sdc field from a protobuf message.
Create a dynamic message from a sdc field.
Convert sdc field to protobuf message.
Upgrade to jersey config bean.
Check connection.
Convert a kudu type to a field type.
Create a field from a result.
Intercept records with interceptors.
Returns the text of the line.
Add missing configs to stage.
Parse the response.
Adds the response headers to the record.
Write response header to field.
Write response header to record.
Save metadata.
Configures the client with the given issues.
Create a record and add it to the batch maker.
Increment source offset.
Parse a paginated result.
Adds the response headers to the header.
Resolves the headers.
Process the response.
Determines if the given property is defined in the configuration.
Convert an exception to a data parser exception.
Converts an exception to a data generator exception.
Gets the credentials for the given path.
Generate a preview of a pipeline.
Copy the contents of the string to the buffer.
Removes the logical duplicates from a set of packages.
Finds the next main line in the live file chunk.
Resolve a live file chunk.
Closes the connection.
Escapes the given string for use as a quoted substring.
Gets the flow control settings.
Gets the channel provider.
Puts a batch of entries into the store.
Compile an expression into a grok object.
digest expression.
Adds a dictionary to the dictionary.
Adds a dictionary to this compilation.
Stops the aggregator.
Rolls the roll of all the aggregators.
Serialize an object to a string.
Deserialize an object from a string.
Deserializes an object from a file.
Writes a record to the output stream.
Resolves an EL expression and returns the result.
Generate the inner field from the original map.
Get table name from metadata record.
Gets the database name from a metadata record.
Gets the value of the internal field of the given metadata record.
Gets the location of the given metadata record.
Gets the custom location of a metadata record.
Gets the avro schema from a metadata record.
Gets the data format from a metadata record.
Creates a new schema metadata field.
Validates the partition information.
Generate a partition path from a linked hash map.
Serialize a schema to hdfs.
Sets the parameters for the record.
Gets the configuration.
Parse rfc3164 time.
Formats the given string using the given template.
Starts a batch context.
Checks if record contains solr fields.
Filters the list of field names by removing the autogenerated field names from the map.
Send on record error exception to handler.
Parses a dependency from a jar name.
Parses a dependency from a URL.
Gets the couchbase connector instance.
Closes the connection to the cluster.
Get label from string code.
Verifies that a dependency exists.
Get operation from header.
Builds a subdoc mutation observable.
Generate alter table sql string.
Configures this client with the given configurations.
Takes all messages from the batch.
Commits the transaction at the given offset.
Report an error to the control channel.
Injects a stage into an object.
Returns the definitions for the given stage.
Gets the definition for a publisher.
Formats a column name.
Format a value.
Get information about a pipeline
Create a pipeline fragment from a list of stage instances
Get a list of pipelines.
Imports a pipeline fragment from an envelope.
Gets the file path.
Get operation from record.
Gets the field path for the given column.
Polls an enriched event from the queue.
Gets the runner from the queue.
Attempt to get the runner for idle time.
Adds a runner to the pipeline.
Destroys the pipeline.
Validate that the pipeline is not destroyed.
Checks if a stream exists.
Gets the last shard id of a kinesis stream.
Process the queue.
Handle sql exception.
Gets the column hash for a record.
Compares two files.
Returns the pid of the given process.
Validate and extract fields to hash for this config.
Gets user group information.
Roll the stats.
Creates a snapshot of the active stats.
Ensures that a directory exists.
Writes a batch to the database.
Writes a batch of records to the specified table.
Writes an iterator to the cache.
Generate no more data event.
Detect a new partition.
Update the record for hdfs.
Process a group and value.
Checks if two stages have the same version.
Entry point for the command line tool.
Configures the client.
Resolve headers.
Gets the http method.
Fill null types.
Gets the value of a field from a record.
Load a schema from the registry.
Register a schema.
Load a schema from the registry.
Gets the schema id from a subject.
Load a schema from the registry.
Writes a schema id to the output stream.
Detects the id of a schema.
Gets the default values from the given schema.
Parses a list of records.
Logs the details of this dependency.
Gets the bad records.
Initializes the stage. config.
Gets the outward edge vertices for the given vertex.
Gets the inward edge vertices for the given vertex.
Serialize an offset map to a string.
Deserializes the given offset from the given string.
Sends a report to the queue.
Gets a report by id.
Checks if the check point file exists or backup.
Write offsets to main offset file.
Delete a blob.
Handles an error.
Handles an archive.
Returns a reader for this file.
Releases a reader.
Set the dpm base url
Add a default header.
Parses a date from a string.
Escapes the given string.
Gets the client.
Initialize connection.
Get the metadata for the given table.
Create a new event builder.
Build a schema from the given fields and levels.
Convert an oracle code to an operation type.
Add jars to job.
Check field order by list.
Checks the condition expressions.
Gets the offset lag for a file.
Starts the application with the given instrumentation.
Returns the parallelism of this stage.
Runs a query on this stage.
Get table description.
Validate that the table accepts inserts.
Gets the column type.
Checks if the type is nullable.
Get the schema of a table.
Gets the column properties.
Get the class for the given type name.
Initializes the aerospike client.
Gets the topic from the given record.
Gets the input stream.
Gets the output stream.
Checks if the file exists.
Parse fs permission string.
Validate that all services are available.
Create a simple aggregator instance.
Gets the aggregator unit.
Create a new aggregator data instance.
Create a new group by using the given name and class.
Starts the data provider.
Stops the aggregator.
Rolls a new data window end time.
Releases the lock.
Converts a glob to a regular expression.
Gets a list of s3 summary objects sorted by path matcher.
Stops the pipeline.
Produce empty batches for idle runners.
Create failure snapshot.
Creates a bound statement for the given record.
Sets the given configuration to the given configuration.
Generate lookup key.
Reads a line from the reader.
Roll the usage timer.
Enable dpm.
Disables a DPM.
Normalize dpm base url.
Retrieve a user token from the given URL.
Logs out a user from dpm.
Update token file.
Update dpm properties.
Create a simple schema field for a field.
Create a complex schema for a field.
Gets the decimal scale or precision.
Gets the default value for the given schema.
Initializes the metrics if needed.
Compares two file paths.
Returns the index of the group with the given name and index.
Returns a list of group names.
Returns true if the given string is a slash or quote escaped character.
Checks if the string is a slash escaped character.
Checks if the given string is inside a class.
Count the number of parens in a string.
Extract group info from a named pattern.
Replaces all occurrences of the given pattern with the given replacement.
Performs a GET request and response.
Refresh the schema and table.
Returns true if the given entry has expired.
Returns the offset of the current file.
Fast forward.
Convert string to appropriate number.
Parse a part.
Parse values from the buffer.
Lookup the primary keys for the table.
Create custom field mappings.
Returns the SQL string for the given field type.
Gets the table name.
Sets the primary keys.
Handle sql exception.
Process the pipeline.
Prepare a batch context.
Finish a batch context.
Flattens a record into a map.
Create a detached stage runtime.
Executes the record.
Returns a sorted map of columns to parameters.
Gets the condition for a partition column.
Validates that the given offset is stored in the given table context.
Returns a list of bundle content generator definitions for the requested generators.
Returns a list of non - empty arguments.
Gets the operation from the kudu table.
Convert a number of bytes to a display format.
Scans a live file.
Returns the number of pending files.
Checks if the given name is in the given whitelist.
Returns true if the set of versions matches the expected set of versions.
Entry point for the Spark application.
Propagate runtime configuration.
Validates the report description.
Upgrade v1 to v2.
Extract named groups from raw data.
Commits a message to the consumer.
Create an embedded sdc.
Sets the fields in the record.
Get a list of pipeline and validation status for all changes.
Create a remote data collector result from a future.
Create a gauge.
Gets the columns to parameters.
Generate the header attributes for a file.
Validate a record.
Delete old parquet files.
Gets an avro input stream.
Create a data file reader from an input stream.
Write parquet.
Check input encrypt.
Encrypts the given field.
Decrypt a field.
Decrypt a field.
Encrypt field.
Adds a pattern to the current matcher.
Appends a replacement string to the matcher.
Returns a map of named groups.
Replaces all properties of this pattern with the given replacement.
Gets the global variable from the data source.
Create a start event record.
Create a stop event record.
Fix offset.
Extract as runtime.
Execute an alter table add query.
Executes a set table properties query.
Execute describe database query.
Execute a hive query.
Execute a query.
Executes a batch.
Runs the given consumer on all the pipes.
Gets the offset commit trigger.
Stops the pipeline.
Accepts a consumer throwing a pipeline runtime exception and pipe p.
Gets insert id for record.
Gets the value from a field.
Sets the fragment in the record.
Sets a document in a record.
Queries a n1 query row.
Handle the whole file data format.
Returns true if the given gtid and seq number are contained in the incomplete transactions.
A convenience method for creating a new t with the given class loader and supplier.
Logout the subject.
Sets the exceptions from the configuration.
Replace variables in a path.
Ensure that permissions are granted to the current thread.
Entry point for the emr binding program.
Gets the dir path.
Renames the file system to the given path.
Should roll a record?
Checks if the given string matches the given pattern.
Returns the offsets of the underlying file.
Gets the remaining wait time.
Gets the offsets lag for the given offset map.
Create a delegate definition for a stage library.
Create an instance of the delegate class.
Get metric value.
Find the end of the header.
Gets the body size of the request.
Saves a temp file to the temp file manager.
Create an ssl object from the given key and trust store classpath and passphrase.
Gets the mime type for a file.
Handle an ihttp request.
Stops the server.
Add mappings to the router.
Send the body to the given stream.
Creates a fixed length response.
Returns true if the request should be gzipped.
Adds a cookie to the cookie queue.
Unloads the queue.
Decode the given base64 - encoded cookie value.
Encodes a cookie value to a base64 encoded string.
Sets the table name.
Returns the name of the principal.
Register a session repository filter.
Resolves the principal name of the session.
Gets a session from the cache.
Gets the jndi name for the given model node.
Returns the canonical parameter types for the given view method.
Register an interposed synchronization.
Invoked before completion of the task.
Gets the current transaction.
Deploy the kernel deployment.
Determines if the persistence unit name identifies a scoped persistence unit.
Get the list of service names for the server.
Decrement the read lock count.
Increments the read lock count.
Adds a service to the deployment archive.
Handle restoration calculation.
Deploy the module.
Make the top level bdas visible from static modules.
Create a jse. builder for the deployment.
Sets the configuration name and file.
Get security meta data.
Gets servlet url patterns mappings.
Gets servlet class mappings.
Resolves the view.
Gets the available connectors.
Parse the core environment element.
Parse process id environment element.
Returns the address of the given operation.
Sets the address of a path operation.
Gets the value of an operation.
Returns true if the given operation has a default value.
Create a composite operation.
Create a add operation.
Create a add operation.
Create a read attribute operation.
Create a write attribute operation.
Create an undefine attribute operation.
Returns the value associated with this context.
Adds a factory to the url context.
Removes a factory from the url context.
Load providers.
Modify the deployment.
Configure the endpoints for the deployment.
Modify the context root.
Gets the transport class name from deployment.
Sets an outgoing run as principal.
Run as pop run as identity.
Process management.
Injects a property value into an object.
Returns true if the given class type and property type match.
Finds a method by name and property type.
Find field by name and type.
Derive useful info from http request.
Runs the jdr report.
Collect the report.
Register a resource adapter deployment.
Unregister a resource adapter deployment.
Register transformers.
Write parameters to the output stream.
Read an exception from the given stream.
Gets the lock owner.
Releases a lock on a component instance.
Adds a log entry to the log.
Adds cdi to the war meta data.
Gets the view of the component.
Invokes the endpoint with the given invocation.
Gets component view method.
Checks if the sei method matches the view method.
Gets the security meta data for the endpoint.
Get the domain from old security domain and next security domain.
Ensure that two security domains are the same.
Sets the idl.
Returns the absolute name of the entry.
Create a new jndi name from the given name.
Deploy the deployment.
Handles a request.
Checks if is in transaction.
Gets the transaction synchronization registry.
Gets the connection factory.
Gets the last component of the given name.
Checks if the given name is empty or not.
Returns the name of an exception with the given name and context.
Create a naming exception with the given message and cause.
Create a naming exception with the given message cause and remaining name.
Create a cannot proceed exception with the given resolved object and remaining name.
Create a naming enumeration from a collection.
Rebinds an object with the given name.
Gets the active mq.
Create a component instance.
Returns the resource root of the deployment unit.
Resolves the runtime name.
Create a listener builder for a persistent resource definition.
Returns the analysis for the given class.
Shuts down the server.
Get a list of url patterns.
Gets the servlets.
Gets the servlet mappings.
Gets the security constraints.
Gets the login config.
Gets the context params.
Gets web resource collections meta data.
Gets the servlet init params.
Create a new security constraint.
Create a web resource collection meta data.
Create a new servlet.
Create a new servlet mapping.
Create auth constraint meta data.
Create a new user data constraint meta data.
Creates a new param value with the given key and value.
Creates a new param value with the given key and value.
Register session bean interceptors.
Stop the service.
Gets the jndi name for the given model node.
Resolve model attribute.
Returns the type of the pattern.
Checks if a pooled connection factory is configured.
Checks if external pooled connection factory is configured.
Gets the active mq.
Gets the persistence unit name.
Start the activity.
Stop the activity.
Suspends the transaction context.
Resume the activity.
Completes the current invocation.
Registers this synchronization with the given transaction.
Start the service.
Stop the service.
Gets the capability service name.
Create a list of resource roots.
Gets all deployment module class loaders.
Determines if the given persistence unit metadata needs a class file transformer.
Allow two phase bootstrap.
Check if default data source use.
Check for mixed synchronization type.
Get orb from server and port
Initializes an applet.
Initialize method handles.
Sets the active naming store.
Validate default values.
Check param type.
Returns the default value of ann annotation.
Validate base type.
Gets the deferred entity managers.
Returns the status as a string.
Add cache dependencies to the event listeners.
Extract dialects from sql. key set.
Examines the dialect.
Identify dialect.
Checks the database.
Convert a date to a scheduler date.
Sets the node name.
Marks the deployment unit as a child of the deployment unit.
Reads the parameters from the input stream.
Write a retval to the output stream.
Write an exception to the output stream.
Looks up a u from the given lookup.
Starts the creation of the bean.
Ends the creation of a sfsb.
Gets the current sfsb.
Pushes the given map of extended entity managers to the current sfsb.
Pop the last item from the stack.
Gets the current call.
Deploy the module.
Gets the idl of a class.
Insert a primitive into any object.
Convert a name to an idl string.
Checks if a string is reserved idl.
Returns the signature of the given class.
Returns the signature of the given method.
Convert a primitive type to its idl equivalent.
Returns the permission for the given name.
Get or create transaction scoped entity manager.
Associates the specified value with the specified key.
Convert the security role to a model node.
Gets the timer impl for the given entity.
Gets the timers for a timed object.
Gets the directory for the timed object id.
Add a listener to the target scope.
Remove listener.
Fire a naming event.
Returns a consumer that closes the cluster.
Adds a credential to the subject.
Get an object instance from the environment.
Add view management interceptor.
Partial subst of from and to.
Create a transport configuration from invm connectors.
Add ear prefix if configured name starts with the configured name.
Gets the root deployment unit.
Gets the service name.
Create view configuration.
Create injection source.
Gets the interceptors for the given method.
Add a view interceptor to all cached methods.
Adds a view interceptor.
Gets the client interceptors for the given method.
Adds a client interceptor to the list of cached methods.
Adds a client interceptor.
Puts the given data into the internal map.
Throw an unexpected XML element.
Gets the list of jaxws endpoints.
Gets the jaxws endpoints.
Gets the endpoint name from the servlet meta data.
Gets the endpoint class name from the servlet meta data.
Gets the servlet with the given name.
Gets an attachment from the deployment unit.
Gets an attachment from the deployment unit.
Gets the j value from the deployment unit.
Gets the j for the given name.
Gets webservice metadata ejb.
Gets the context root.
Gets the class for the given name.
Returns the URL of the resource with the given name.
Returns a collection of resources for the given resource name.
Returns a list of servlet resources for the given path.
Call the pop method on the stack.
Gets an entity manager by its scoped name.
Register a listener for clean up.
Deploys the deployment if it is not a war deployment.
Checks if the class is all fields.
Create a new http endpoint.
Create a new deployment from a deployment unit.
Checks if the deployment is a jaxrs deployment.
Sets the next timeout.
Sets the timer state.
Merge a list of deployment data into this one.
Deploy the module.
Configures the remote transactions dependency.
Returns a set of all the interceptors in this container.
Determine if the given method is a method level.
Checks if two elements are required.
Gets the type of the given class.
Returns the component type of the parameterized type at the given index.
Parse a name from a string.
Converts an ins string to a stringified comps.
Parse a component string.
Deactivates the object.
Returns the reference to the servant.
Authenticates the user using the given username and password.
Checks if is type matched.
Lookup the managed reference for the given name.
Unbind a service by name.
Instantiate a bean.
Configure bean meta data.
Dispatch a lifecycle joinpoint.
Returns the current selector or the default selector.
Create a bean name from a service name and state
Create a service name to instances name.
Gets a class by its name.
Processes annotations.
Post parse steps.
Validates a descriptor.
Create the deployment descriptor.
Create web application descriptor.
Get auth method from deployment.
Deploy the deployment.
Handle stateless session bean.
Create a stub class.
Gets an anonymous object id.
Gets the list of persistence providers.
Remove all cached persistence providers for the given deployment classes.
Add a persistence provider to the deployment.
Find the parent module of the given class loader.
Deploy the deployment.
Add a service to the deployment unit.
Sets the annotation indexes for the deployment unit.
Gets persistence provider adaptor.
Save a persistence provider adaptor to the deployment unit.
Returns the persistence provider for the given deployment unit.
Gets annotated classes.
Create an EJB.
Build enterprise bean meta data.
Refresh participant.
Gets the container analysis for the given class.
Lookup the work done for the given class.
Create an analysis for the given class.
Gets the idl module name.
Convert an integer to a hex string.
Converts a long to a hex string.
Returns true if the method is an accessor.
Returns true if the method is a mutator method.
Returns true if the method has non - app exceptions.
Reads the name of an accessor.
Writes the name of an accessor.
Fixup overloaded operation names.
Fixup the names of the analysis.
Escapes a string for use as a hexidecimal string.
Parse xts.
Parse the default context propagation element.
Process attributes.
Load provider module by module name.
Create a add step handler.
Deploys this deployment unit.
Write an attribute definition to the writer.
Create a remote session.
Infer the destination name from the address.
Register endpoint handlers.
Gets job xml names.
Initialize the loader.
Gets the URI from the request.
Resolves a result using the given url and environment.
Lookup an object by name.
Binds the given object to the given name.
Unbinds the given path.
Returns an enumeration of bindings for the given name.
Call destroy on the jndi context.
Destroy a subcontext.
Bind a context to a given path.
Create a subcontext with the given name.
Lookup a link for the given name.
Add an object to the environment.
Remove an object from the environment.
Adds the transformations to the builder.
Remove a security domain from the security manager map.
Look up a jndi context by name.
Creates a modular reference for the given type and factory.
Create a modular reference.
Create a modular reference.
Gets the idl for the given type code.
Wait for a service to become up.
Computes the masked password.
Initializes the security vault.
Start a new security vault session with the given alias.
Displays the given vault block and attribute name.
Display the vault configuration.
Returns the configuration of the vault.
Returns the value of the service if it is not null.
Gets the deployment service name.
Inserts the given value into the given any object.
Returns true if the given permission implies this permission.
Returns the action string.
Get the log name.
Send a state change notification.
Gets the value of the given type.
Gets the context service name.
Returns the set of all interceptors.
Adds a new method interceptor.
Adds a dependency to this component.
Gets the interceptors for the given method.
Gets the list of interceptors for the given method.
Add a timeout view interceptor.
Adds a new interceptor to the list of interceptors.
Adds a post - construct interceptor.
Adds a pre - destroy interceptor.
Adds a pre - passivate interceptor.
Adds a post activate interceptor.
Sets the component create service factory.
Remove jndi from the operation context.
Accept an EJB builder.
Create a service name for a component.
Create a service name for a module.
Returns bind info for a given env entry.
Bind info for a given jndi name.
Gets the cache.
Returns the members of the definition.
Get the value members for the type code.
Create a subsystem root node.
Parses the configuration.
Starts the service.
Returns a service name for the given deployment unit and subdeployment name.
Add a component to the deployment.
Add a message destination mapping.
Returns the view descriptions for the given view type and deployment root.
Returns a set of component descriptions for the given component name.
Returns a set of view descriptions for the given component name view name and view name.
Resolves a message destination.
Build transformers 2 1 0.
Rejects a defined attribute.
Pop identity from cache.
Load ids manually.
Checks the integrity of the list of versions.
Returns the slot of the given jsf version. If the jsf version is null then the
Returns the constant type code for the given class.
Adds a type code for the given class.
Returns the module def for the given package.
Add interfaces to the list.
Add the base valuetypes to the analysis.
Adds a class to the list.
Add an analysis interface to the analysis.
Add a value to an analysis.
Add an exception definition for the given analysis.
Gets class level injection type.
Starts the service based naming.
Closes the store and closes it.
Check if the given method type is allowed.
Checks if the transaction is synced.
Gets all component classes.
Gets the timers associated with the transaction.
Get extra parameters.
Gets the parameters.
Convert a type to a class.
Convert a value to a class.
Returns the types of the given configuration values.
Checks if the names and infos are the same.
Returns the next binding in the list.
Returns true if more is available.
Create an instance of the given binding.
Observes resources.
Shuts down the health check reporter and cleans up resources.
Create an object for the given locator.
Creates an enum value from the given model node value and target class.
Skips the given amount of bytes from the given stream.
Checks if two elements are not already present in the set.
Add a component description.
Add a set of class loaders to the deployment.
Unbinds a component.
Lookup an object by name.
Create a list from a name.
Returns a list of bindings for the given name.
Adds a factory to the registry.
Create a chained setup context handle.
Create the io subsystem.
Create welcome content handler.
Get a bean from the pool.
Calculate the operation analysis map.
Collect resource metrics.
Prepare the deployment unit.
Deploy the service target to the deployment unit.
Publish the deployment.
Stop the deployment controller.
Start the weld service.
Register endpoint config.
Attempt to retry the given timer.
Post timeout processing.
Gets the declared methods of the given class.
Returns the declared fields of the given class.
Gets a constructor from a class.
Gets a method from a class.
Adds a messaging activemq extension if it exists.
Checks if the resource type is allowed.
Migrate generic transport.
Cancel waiting or waiting.
Runs the task if it is cancelled.
Sets the type of the object.
Returns true if this function can execute an indexed function without an index.
Find all classes in a directory.
Returns a list of classes of the given interface.
Gets the generic multivalue type.
Evaluates a record.
Derive the type of the requested field from the record.
Update a record.
Find a record by id.
Gets the minimal set of nodes for sharded query.
Returns the leftmost equalities from the flattened where clause.
Adds order by projections to the query planning info.
Extract sub queries from planning info.
Checks if a cluster is from a set of clusters.
Handle class with sort only.
Checks if a class is a diamond hierarchy.
Returns the order direction of the query planning info.
Returns true if the condition requires multiple index lookups.
Find the best index for the given descriptor.
Computes the common factor of a list of index descriptors.
Create a new o with the given strategy.
Allow a resource generic resource generic resource specific resource generic resource generic resource generic resource generic resource specific and
Checks if a rule is defined.
Get server status.
Initialize system database.
Load local databases.
Called when a member is removed from the cluster.
Attempts to elect a new lock manager.
Assigns the lock manager from the cluster.
Commits the commit.
Rollback the transaction.
Update identity after record commit.
Rollback the transaction.
Prepare for file creation or replacement.
Moves the source file to the target file using atomic move. If atomic move is not supported
Returns a list of patterns that are disjoint from this pattern.
Execute only locally.
Append a character array to the end of the string.
Returns true if this connection is connected.
Merges two buffers into a short.
Split a short into two byte buffers.
Executes the command.
Puts a single object into the dictionary.
Remove an object from the dictionary.
Executes the command.
Executes the query and returns the first element of the list.
Creates a new version.
Check regions.
Replaces the content of the given file with the given content.
Send a command to the server.
Sends a request to the client.
Add a host to the host list.
Sends a request to the network.
Gets the owner of the database.
Gets the connection.
Kill a connection.
Interrupts a channel.
Disconnects a channel from the server.
Push distrib cfg2 clients.
Swaps the value at the given index.
Closes all locks.
Synchronizes the schema of the object.
Update the metadata for a metric.
Move to the last record in the list.
Reads the next character from the stream.
Executes the query.
Executes the replication error if the callback is not null.
Register a compression class.
Returns the limit of the number of open files.
Returns true if this expression allows an indexed function execution on the target object.
Moves the buffer to the given position.
Fills the buffer with the specified number of bytes.
Execute until return.
Executes a full script line.
Evaluate the record.
Executes the query.
Loads an object from the storage.
Parse the request and return the result.
Executes the request with the given parameters.
Update the schedule for a pattern node starting at the given pattern edge.
Adds an index definition.
Gets the split for the given projection.
Determine the type of the source object.
Gets the collate of the given object.
Returns the value of this property. If the property is not present null is returned.
Advances to the next probe.
Executes the command.
Build a JSON object from a file.
Checks a password against a hash.
Create a hash of the given input and algorithm.
Checks if the algorithm is supported.
Creates an index definition and sets the clusters to index.
Returns an iterable over the vertices in the graph.
Returns an iterable over the edges of this graph.
Gets the partition key.
Gets the distributed crud task timeout.
Returns the set of features.
Checks if the changes are filled up to the given page.
Parse timeout.
Parses a lock statement.
Create a cluster.
Frees the cluster with the given id.
Starts the underlying profiler.
Shuts down the underlying application.
Create a singleton object with transformer.
Grant access to a specific resource.
Revoke access to a specific resource.
Returns true if the record is a valid record.
Resets the table to the initial state.
Returns the index of the given item in the seed.
Spread a number to a random number.
Create an index with the given type.
Drops all indexes.
Returns the index of the global ref.
Gets the linked class.
Serializes this object to a stream.
Removes a listener from the list.
Register a database.
Sends a timeout request to the server.
Creates a copy of the database.
Merge another object with this one.
Replace the object with a new object.
Transforms an object to a map if possible.
Executes the query and adds it to the database.
Closes all resources in the pool.
Unregisters an object from the storage.
Get the names of all functions.
Returns a set of the names of all factories.
Get the names of all command factories.
Gets the field size and type from the container.
Write a status code and reason to the response.
Write the headers to the response.
Write records to the response.
Write a record to the response.
Sends an object to the client.
Send a stream to the client.
Opens an object with the given name and password.
Closes the connection pool.
listen for changes.
Completes the operation of a component.
Adds a set of component counters to the snapshot.
Adds a writ cache counters holder to the snapshot.
Adds a new storage counters holder to the snapshot.
Adds a new wal to the snapshot.
Add a performance counter for a component.
Stop writing to the cache.
Stops the fuzzy checkpoint timer.
Stops the full checkpoint timer.
Stops the commit timer.
Stop the wal.
Stops the wal.
Parses a SQL statement.
Creates a thread to receive messages.
Disconnects from the known servers.
Removes the record from the database.
Sets the value of a property.
Remove a property from the record.
Checks if the given class exists in the schema.
Wraps a cursor.
Define a strategy for a vertex attribute.
Define edge attribute strategy.
Gets a list of record entries by class.
Get a list of record entries by cluster ids.
Adds an index entry to the map.
Merges the source set into the target set. If target is null then the source set is
Checks if an object is an update edge or a record.
Returns true if the target can be executed without an index.
Prepares the keys for the given object.
Writes a page to the cache.
Reads a page from the disk.
Truncates the buffer to the given page.
Opens the journal file.
Checks if replication is active.
Gets a new node strategy.
Returns true if the given cluster name is in synchronous mode.
Checks if the cluster configuration field is read or not.
Get server cluster map.
Get a set of servers from a collection of cluster names.
Checks if the server contains all clusters.
Checks if server is contained in cluster.
Gets the master servers.
Gets all configured servers.
Gets the clusters on a server.
Returns the set of clusters owned by the given node.
Gets the owner of the cluster.
Gets the cluster owner.
Gets the list of configured servers.
Get the set of registered servers.
Get the data centers.
Get data center write quorum.
Checks if the cluster is sharded.
Get servers.
Get data center of server.
Gets the global read quorum.
Get write quorum.
Gets the cluster configuration.
Gets the data center configuration.
Clear the initialization stack.
Gets an index by name.
Drops an index.
Adds a vertex to the graph.
Add an edge to the graph.
Returns the orient vertex with the given id.
Returns an iterable of vertices of the given class.
Returns an iterable of edges of the given class.
Returns the orient edge for the given id.
Reuse the given database.
Shutdown the connection.
Returns the base type of this vertex.
Returns the orient vertex type for the given type.
Create a new orient vertex type.
Drop a vertex type.
Returns the orient edge type for the given type name.
Create a new orient edge type.
Returns the orient element with the given id.
Drops an index for the given element class.
Remove an exception listener from the list.
Fires an exception to all registered listeners.
Stop monitoring the statistics.
Registers a managed object with the server.
Unregisters a managed managed object.
Fetches the cache counters and writes them to disk.
Fetch system counters.
Fetch the component counters.
Returns the value of the property with the given name.
Detach an object from the pojo.
Gets the version of the object i pojo.
Execute an SQL command.
Sets the dirty state of an object.
Unset the dirty state of an object.
Gets the index types.
Gets the index engines.
Returns a list of nodes that have no response.
Gets the conflict responses.
Gets the best response group.
Computes the quorum response.
Returns the list of received responses.
Get the result of a get operation.
Returns true if left allows indexed function execution on target.
Get library.
Release a database engine.
Gets the next page from the cache.
Update the size of the bag.
Gets the value at the given index.
Iterates over the fields of an index and returns true if the index can be used by after
Finds the index of the given character in the given text starting from the given index.
Jump to white spaces.
Tries to jump the character at the given position in the given text.
Sets the fetch plan.
Enqueue repair record.
Cancel repair record.
Enqueue repair cluster.
Get the dependencies of a pattern.
Create a POJO with the given name.
Register entity classes.
Register entity classes.
Sets the class handler.
Acquire a connection from the pool.
Returns the number of available connections for the given name and user.
Acquire an object from the pool.
Execute a cluster update.
Lookup an iterator for the given class.
Check cache memory configuration.
Create a graphson vertex from a json object.
Create an edge from a json object.
Create a json object from an element.
Create an object node from an element.
Imports a job from the server.
Returns the status of the job.
Gets the active data center map.
Splits the given string into a separate algorithm.
Construct an object from a config object.
Create an object from a file.
Create an o from a stream.
Encrypts the given string using the given transform.
Save this object to the given stream.
Save to keystore.
Sets the child of this node.
Adds an object to the result.
Gets value as object or hash map.
Authenticate a database.
Gets the value of a map entry.
Gets the record.
Read current record.
Gets the tx graph.
Gets the no tx graph.
Sets up the pool.
Returns the value of the given property.
Stops a transaction.
Gets the next token from the source.
Gets the token at the given index.
Returns an iterable of vertices in the current graph.
Remove this vertex from the graph.
Add an edge to the graph if it is a partition vertex.
Adds an edge to the orient graph.
Gets the connection class.
Gets the connection.
Process broken rids.
Gets the console methods.
Executes a task on a local node.
Returns the number of nodes with the given status.
Wait for next retry.
Gets the argument at the given position.
Returns the number of parameters in the request.
Connect to the server.
Returns a list of databases.
Get information about the server.
Checks if a database exists.
Drop a database.
Freezes the database.
Release a database.
Get the cluster status
Get a graph from the database.
Parse retry.
Save a record to the database.
Delete a record from the database.
Gets the authentication header.
Authenticates the server using the given username and password.
Checks if a user is authorized to access a resource.
Shutdown the server.
Adjust begin line and column.
Sets the pointer of a bucket.
Gets the pointer to the bucket at the given offset.
Ends an atomic operation.
Acquire an exclusive lock on an operation.
Change the maximum amount of memory in the read cache.
Start listening to the given protocol.
Read parameters.
Shutdown the log manager.
Adds a new entry to the log.
Remove a key from the map.
Acquires an entry for the given key.
Gets the value associated with the given key.
Clears the list.
Close the file with the given key.
Drains the read buffers.
Adds a task to the state buffer.
Drains the read buffer and writes the entry to the buffer.
Puts the entry into the buffer at the given index.
Returns the closest power of two.
Dispatch an event to the server.
Convert an object to its string representation.
Convert all of the values in the underlying map to a string.
Returns the serializer for the given object type.
Initialize the shutdown handler queue.
Gets the engine with the given name.
Adds a state to the state list.
Authenticates the given auth token.
Create the metadata.
Attempt to acquire a read lock.
Returns the current vertex in the given direction.
Gets the id of the element.
Sets the value of a property.
Remove a property from the graph.
Clears the contents of the tree.
Deletes the tree.
Finishes importing.
Create a new vertex.
Parse strategy.
Gets positions from embedded collection.
Executes the command.
Fix link.
Fills the given record with the given data.
Sets the version of an object.
Gets the type of a record.
Initializes the database instance.
Prints an exception stack trace.
Convert link2 record.
Register a server command.
Create server user.
Analyzes a condition and returns a list of results.
Create an indexed property.
Attaches this object to the given object.
Gets the index class.
Moves to the next value.
Truncates the table.
Adds a base class to the list of subclasses.
Add cluster ids to the indexes.
Link to a stream.
Releases an object from the pool.
Checks if memory leaks are detected.
Clears all pointers from the pool.
Convert a byte array to an int.
On open.
Installs the clusters of the given class.
Dump server status.
Returns the index of the first occurrence of the given comparable object in the array.
Returns the index of the object in the array.
Returns the set of clusters that are involved in this query.
Handles a result.
Get the temporary rid of this variable.
Report a tip.
Parse fetchplan.
Parse no cache.
Optimize the sort.
Returns the status of the job.
Execute the command.
Handle jvm error.
Validates an index value.
Rolls back a micro transaction.
Executes the given command.
Register cluster.
Sets an object property.
Executes the command.
Installs a database.
Delete an object from the database.
Register hooks for the given type and id.
Delete a record from the database.
Returns the count of the view with the given name.
Returns the count of the class with the given name.
Activate this object on current thread.
Register an encryption object.
Gets the relative index for the given position.
Returns the next word or null if not found.
Parses a required word.
Advance to the next character.
Parse an optional keyword.
Check if the given character is a separator.
Execute the command.
Clear configuration files.
Returns the offset of the buffer.
Extract the value of the token from the string.
Acquires an access token from the provider.
Copy the access token from the security context to the security context.
Reads the next number of characters from the buffer.
Reads a line from the stream.
Skip by reading n bytes from the buffer.
Ensures that the length of the array is at the given offset.
Swaps the specified number of elements.
MurmurHash3 64 - bit hash.
MurmurHash3 64 - bit hash.
Writes a byte buffer to the underlying stream.
Truncate the file to the given size.
Sets the position of the stream.
Reports the given consumer refresh metrics to the given consumer.
Awaits the completion of the current tasks.
Finds the matches of the given query.
Finds the compaction targets.
Deletes all snapshots.
Returns the field hash code for the given field position.
Traverses all references that are referenced by the closure.
Called when an announcement completes.
Called when a cycle completes.
Reads the header tags from the data stream.
Extracts the primary key from an object.
Clears all the elements in this set.
Reads the ordinals from the data input stream.
Returns the size of this sparse bit set.
Gets the field value.
Copy a number of bytes from src to dest.
Copies data from src to dest.
Returns true if this range equals the given range.
Copies the given byte array starting from the given position to the given destination position.
Copies the data starting from the given position to the given destination position.
Reads data from the given stream.
Writes len bytes to the given stream.
Ensures that the segment at the given index is not null.
Gets the position of a field.
Calculates the deduped sizes and the number of select buckets.
Checks if dataset has collections in data set.
Generates the files for the given directory.
Generate files for all schemas in the dataset.
Returns true if the given key matches the given values.
Returns the record key for the given ordinal.
Create a field path for a primary key.
Create a field path for a hash index.
Puts an object into the map.
Initializes the path.
Returns true if this string contains the given key.
Adds a field to the specified type.
Returns a list of dependency ordered schemas.
Initializes this object with the default values.
Gets the value at the given index.
Finds matching records for the given field name and value.
Finds matching records for the given type name and field value.
Sets the element match paths.
Set element key paths.
Restore the data model to the last state.
Runs the incremental cycle.
Excludes an object from the primary key.
Exclude referenced objects.
Write a hollow blob header to the stream.
Calculates the type metrics for the given state engine.
Write the field data to the given byte buffer.
Writes a fixed length int to the byte data buffer.
Write a fixed length long.
Adds an ordinal to the pool.
Sorts the arrays in ascending order.
Hashes the given object key with the given field type.
Returns a hash code for the given key and field type.
Resize the storage.
Finds a free ordinal for the given ordinal.
Prepares the array for writing.
Compares the serialized representation with the serialized representation.
Grows the key array.
Rehash the data for the given key.
Creates an empty key array of the given size.
Returns true if this value is equal to the other value.
Find match.
Swaps the current read state with pending state.
Returns the size of the given number of elements.
Runs the compaction cycle.
Writes a snapshot of the state engine.
Write delta.
Add to set if not primitive or collection.
Normalizes a field path to a param name.
Rebuilds the hash index.
Finds the matches for the given objects.
Trigger a refresh with a random delay.
Trigger refresh with the given delay.
Add a type diff.
Write a value to the output stream.
Writes a value to the byte array starting at the given position.
Read a value from the input stream.
Read a long value from the input stream.
Add a view to the group.
Refresh the loading views size.
Update the UI.
Pull the event.
Adds a fact to the rule builder.
Adds the given facts to the rule.
Creates a rule builder for the given class and action.
Creates a new rule builder.
Creates a new rule builder with the specified fact type.
Creates a new rule builder with the specified result type.
Creates a new rule builder with the given name and value.
Creates a new rule builder with the given name and facts.
Creates a new rule builder with the given action.
Gets the instance of the rule.
Gets the annotated field.
Gets the annotated method.
Returns the first annotation of the given class or null if not found.
Registers an auditable rule.
Update the rule status.
Returns the audit map for the current thread.
Returns a new rule book with the specified result type.
Adds an action to the rule.
Adds an action to the rule.
Resets the value to the default value.
Create a rule book rule with a fact type.
Gets the rules annotated with the rulebook.
Read an empty line or end table.
Converts a list of services to an array of service.
Gets the ports from the image configuration.
Extract ports from config.
Parse port mapping.
Adds a port to the list if it is not null.
Remove the port from the list of ports.
Adds missing service parts.
Append an image stream to a file.
Checks if ports match.
Returns the service to port or null if not found.
Gets the service host and port.
Puts a value in the map if it is absent.
Merges the given map with the given map if absent.
Merge two maps.
Put all values in a map if not null.
Waits until a pod is ready.
Validates the given kubernetes id.
Converts an object to a list of has metadata.
Gets the resource version.
Checks if a pod is ready.
Gets the current context.
Returns true if the builder has a route with the given name.
Checks if the project has a resource with the given paths.
Read and enrich a fragment.
Convert map to env var list.
Merges two resources.
Merge maps and remove empty strings from original map.
Checks if the pod spec is local customisation.
Reads the configuration from a file.
Adds a port to the map if it is valid.
Get docker json config string.
Returns the configuration for the given plugin id.
Returns the secret configuration for the given id.
Downloads a file from a URL.
Compare two versions.
Blend profile.
Lookup a profile by name and directory.
Read profile from classpath.
Read all profiles from the classpath.
Find profile yaml file.
Gets the meta inf profile paths for the given ext.
Deserialize a list of profile objects from a yaml file.
Get image pull policy.
Returns true if the shift mode is open.
Returns the number of replicas in the deployment configuration.
Returns the first child element with the given name.
Installs a template.
Removes a tag by its name.
Apply a namespace to an entity.
Apply a project to the project.
Apply a request to a project.
Gets the namespace for the given metadata entity.
Called when an error occurs.
Create a list builder for the given platform mode.
Enrich the given builder with the given namespaces.
Get the environment variables for the fat jar.
Gets the seconds value of a duration.
Converts a duration to a big decimal.
Scans a list of files based on the given patterns.
Disable open shift features.
Checks if the service has ingress rule.
Parses the given mapping and returns the serialized content.
Gets the default icon ref.
Copy app config files to app config dir.
Gets a properties object from a resource.
Gets spring boot version.
Enriches the given processor with the given configuration.
Get raw configuration.
Build a map from a source map.
Returns a singleton template for the given resources.
Gets the build reference date.
Get the value of the given key from the configuration.
Returns the map for the given config key.
Prepares processors for the given named list.
Adds the from configuration to the builder.
Get from mode default.
Get image name.
Gets the registry.
Returns true if this configuration is online or not.
Gets an external service url from the kubernetes server.
Returns the boolean value from the global property.
Create a jest client.
Create the internal node.
Scans the plugins.
Creates a american express rewards balance from a json string.
Fetch rewards balance from braintree.
Creates a pay pal payment resource from a json string.
Performs a GET request to the server.
Intercept POST request.
Create a venmo configuration from a JSON object.
Collect device data from a braintree fragment.
Collect device data from braintree fragment.
Collect pay pal device data.
Get pay pal client metadata id.
Checks if a signature is valid.
Get a property as a string or fallback.
Parses the payment method nonce collection from the given JSON body.
Gets the browser checkout configuration.
Get browser billing agreement recipe
Executes a get request on the server.
Submit a POST request to the server.
Send a POST request to the given path.
Approve a payment.
Adds a listener to the braintree.
Removes a listener from the braintree.
Request a billing agreement.
Sends an analytics event to the activity.
Build paypal account builder from response.
Adds a list of nouns to a dictionary
Remove a word from a dictionary.
Convert a sequence of korean tokens to a list of strings.
Extracts korean phrases from a sequence of tokens.
Detokenize a list of tokens.
Fetch a buffer from a channel.
Join a list of nal units into a byte buffer.
Join a list of nal units into a byte buffer.
Returns the profile for the given integer.
Normalize the taps and generate fixed precision.
Read to the next marker in the buffer.
Read to the next marker buffer.
Get the maximum available frame.
Modify a file.
Gets the edited duration of the given trak box.
Returns the time value of a frame.
Returns the frame of the given trak.
Convert a trak box to a TV show.
Rescales the trak box to a media time.
qt player frame no
Get the time of a player.
Convert a trak box timecode track to a frame.
Format a timecode.
Create a 7 - bit integer.
Set a value in a list.
Returns true if the given color matches this color.
Returns a new size for the given component.
Create a raw m from the input byte channel.
Reads the next word from the cache.
Create a wav header with the given audio format and samples.
Create a multi - channel wav header from an array of headers.
Parse aac from a byte array.
Encodes the given symbol into the given context.
Split a movie box track into edits and edits.
Decode a frame.
Sets whether this buffer is a big endian.
Deblock mbp.
Encode a native frame.
Encodes the given long into a byte array of the given length.
Returns the length of a long.
Adds a packet to the buffer.
Reposition the file.
Decodes a bin.
Decodes a bin bypassing the binary encoding.
Finds the next marker in the buffer.
Returns the sample frequency for the given integer.
Predict a plane.
Start a block.
Computes the coefficents of a block.
Finish an array of blocks.
Concatenate a bit buffer to this one.
Rewind a 32 - bit integer to the beginning of the array.
Seek to a key frame.
Get a picture from a buffer.
Gets gain change point id.
Converts a byte array to an int array.
Converts an int array to a byte array.
Converts an audio format to a float buffer.
Converts a float to a byte buffer.
Interleave the input buffer with the output buffer.
Deinterleave an audio buffer.
Returns the size of the sample.
Build the wipe map.
Reads an ul array from the given buffer.
Reads a batch of ints from the given buffer.
Calculates the mv of two vectors.
Encodes a frame.
Encode an idr frame.
Encodes a P frame.
Gets the supported codecs.
Returns a list of supported codecs.
Adds a reference to the jni context.
Deletes all the jnis from the queue.
Flushes all references to disk.
Loads a library from the given appname.
Unpack a library.
Delete all temporary files.
Get the default layout for the given number of channels.
Get channel from layout.
Make a media packet.
Get information about the version.
Returns the default time base of this object.
Make a demuxer.
Play a video.
Display video at correct time.
Create a codec descriptor from a codec id.
Print option.
Register a factory for the given protocol prefix
Generates a unique name for an object.
Make a new audio resampler.
Gets the supported video frame rates.
Returns a list of supported video formats.
Gets the supported audio sample rates.
Gets the supported audio formats.
Gets the supported audio channel layouts.
Sets the flag of this coder.
Sets the value of the two flags.
Gets the decoder.
Gets the demuxer.
Returns a collection of muxer formats.
Make a filter graph.
Get the type of this filter.
Get a byte buffer from the buffer at the given offset and length
Create a new audio frame with the given audio format.
Resample the input image using the resampler.
Validates the buffered image.
Validates the picture.
Gets the filter graph.
Returns the meta data of this bag.
Get a cpu from a string.
Get cpu from gnu string.
Gets the operating system from a string.
Get the operating system from gnu string.
Play a sound.
Load a library with the given name and major version.
Set the version of a library.
Load a library from a list of libraries.
Initialize search paths.
Returns true if the library with the given name is already loaded.
Deletes this record.
Gets a stream from the jni context.
Gets the muxer.
Create a script transaction.
Decodes the given string to a byte array.
Generate a random string.
Sends a transaction request.
Returns a list of transactions for the given address.
Returns a list of transactions for the given address.
Get a list of block header from the server.
Get a block by signature.
Sends the request to the server.
Set a script to a chain.
Compiles the given script into a string.
Write primitive array.
Flushes the buffer to the output stream.
Writes an object to the memory.
Returns the fst for the last direct class.
Converts an object to a byte array.
Sets the mmf.
Gets the specificity of a class.
Resizes the store to a given number of required bytes.
Remove a binary value from the index.
Write a string to the output stream.
Sets the output stream for this output stream.
Creates a fst configuration with the given pretty print and share references.
Create a fst configuration object.
Calculates the size of an object.
Clear the caches.
Get an object from an input stream.
Get an input object from the stream.
Get the input from the byte array.
Get the output object from the output stream.
Register cross platform class mapping.
Gets the minbin name of a class.
Writes an int to the stream.
Writes a raw int to the output.
Writes a packed integer to the output stream.
Write raw data to the buffer.
Gets the cached fst for the given classes.
Called when an object is written to the stream.
Called when an object has been written to the stream.
Gets the class info for the given class.
Writes an array to the stream.
Sets the length of the string.
Write a primitive array to the output stream.
Finish tracking.
Takes a snapshot of the changes from the current position to the origin position.
Register an object for write.
Write an object to a byte array.
Convert a byte array to an object.
Reads len bytes from the stream.
Read an int from the stream.
Moves the queue back to the given size.
Sets whether the thread pool is enabled or not.
Start embedded cassandra.
clean data embedded in cassandra
Copy a resource to a directory.
Establish a remote connection to the given node and port.
Create an empty subscriber state.
Returns a map of descriptor names to op descriptors.
Calculates the output shape.
Returns true if the condition evaluates to true.
Returns true if the condition evaluates to true or false otherwise.
Computes the logical AND of two booleans.
Performs logical or on the specified dimension.
Apply a where condition to a base condition.
Executes the given condition on the first element of the array.
Returns the number of properties in this buffer as a flat buffer.
Create properties from flat properties.
Convert a collection of properties to a flat node.
Sets the throwable that caused this exception.
Sets the first throwable to the given value.
Merges two lists of coordinates.
Splits a list of doubles into a partition variable.
Convert an onnx type to an nd4j type.
Shutdown the server.
Returns the architecture of the current device.
Convert an ind column to an im.
pooling 2 - D
Create a compression descriptor from a byte buffer.
Splits the list into batches of the given size.
Validates that the given arrays have the same dimensions as the given array.
Sets the d attribute of the buffer.
Generate an ind array with a range of numbers.
Flattens the given collection of matrices into a flattened ind.
Returns the bilinear products of curr and in.
Create a complex number from a double array.
Returns a complex value of the given number.
Returns a complex value of the given shape and value.
Returns true if the last synced time should be replicated.
Subtract another i from this one.
Returns the atan2 of the given number.
Rounds the given number to the nearest integer.
Negates a number.
Returns the absolute value of the given number.
Raises a complex number by a power.
Binarizes the set of features to a given cutoff.
Samples a set of features and outcomes.
Returns the memory footprint of this data type.
Converts an exception to a string.
Returns the simple hostname for the given hostname.
Convert an array of strings to a string.
Converts a byte array to a hex string.
Returns an array of strings from the given string using the given delimiter.
Splits the given string using the given escape char and separator.
Splits a string into an array of strings with the given separator.
Find the next character in the string.
Escapes the given string for use in HTML.
Joins an iterable of strings using the given separator.
Camelizes the given string.
Gets the stack trace of a thread.
Inverts an ind array.
Returns the nth element of this vector.
Checks if is on host side.
Checks if is actual on device side.
Create a shape information pair.
Create a shape information pair.
Checks if the shape info is a vector.
Returns the order of the elements in the given array.
Returns the offset for the given indexes.
Converts an array of indices to an array of indices.
Gets the short at the given index.
Reallocates the buffer to the given length.
Copies the given buffer at the given stride.
Get constant buffer from float array
Returns a string representation of the kafka uri.
Raises the power of an array.
Returns the logarithm of the array.
Max k elements in an array.
Returns the maximum of two numbers.
Returns the minimum value of the given array.
Returns the minimum of two numbers.
stabilize an ind array
OPERATIONS WITH NONDESTRUCTIVE FUNCTIONS
log 1p log
Prepare bounds.
Moves the iterator to the next data set.
Build allocation shape from data buffer.
Checks if the given name exists in the path.
Read the data from the given stream.
Sweeps the tail of the list.
Create an ind from a pointer.
Create an ind from a npy file.
Allocate a paged pointer.
Attach an object to the locks map.
Returns true if the server is started.
Executes the given op.
Blocks until the queue is empty or the queue is empty.
Gets the input stream for this resource.
Get the device for a thread.
Attach a thread to a device.
Get the next device from the pool.
Returns the name of the operating system
Calculates the arch for the given string.
Publish the message to the producer.
Create a new data buffer.
Intercept data type operation.
Adds another i to the result.
Processes the message.
Avg pooling 3d.
Depth wise conv2d.
Resets the counters to their initial state.
Returns the class of the given op.
Allocate a new array.
Gets shape.
Evaluate the ind.
Compress a double array.
Returns the exponential value of the given number.
Center an array.
Truncate a vector to a given dimension.
Returns nd padded with zeros if needed.
Returns the iamax of the given ind.
Broadcast an array to all devices.
Sends a message to the server.
Gamma function.
Returns the square root of x.
Bessel function of the first kind of order x.
Exponential exponential function.
Raises x to a power of y.
Round a number to a power.
Computes the tanh of x.
Returns the logarithm of x.
Computes the hyperbolic cosine of x.
Sets the scale to d before x.
Scales x precedes x.
Convert a decimal error to a decimal error.
Put a function for a given id.
Returns the inputs for a differential function.
Update the array for a variable.
Put a shape for a variable name.
Associates an ind variable with an ind variable.
Gets property for differential function.
Adds a function to the list of functions.
Adds an outgoing function to the outgoing args.
Add arguments for a differential function.
Checks if the given function has any incoming arguments.
Evaluate a set of inputs.
Create a new variable with the given name and shape.
Returns a sd object like the ones with the given name and input
Like a sd zeros like another.
Remove arg from function.
Sets the gradient for a variable.
Avg pooling 3d.
Returns the output variables for the given base name and configuration.
Execute a list of differential functions.
While statement.
Executes the given function.
Execute a differential function.
Execute backward and end result.
Add variable as place holder.
Allocate a new pointer.
Returns the length of the data buffer of the given type.
Get d string from data buffer.
Get the dtype from the context.
Get the number of an operation by its name.
Destroy all workspaces for the current thread.
Print allocation statistics for current thread.
Perform a trmv operation.
Computes the derivative of the accumulation.
Decodes a threshold from the given encoded and target.
Get node name.
Invokes the given scalar operation with the given dimension.
Throws an exception if no workspaces are active.
Computes the negative log likelihood.
Request a tick.
Attempt to request toe.
Release the toe.
Gets the current state.
Process the message.
Initialize curr from list of examples
Initialize the host collectors.
Get the device pointer.
Synchronize host data.
Applies an updater to the historical gradient.
Synchronizes this allocation point to the host.
Creates an ind array from the given index.
Gets properties for function.
Checks if there are place holder inputs.
Computes the difference of two variables.
Formats the given ind array.
Create a new same diff from a graph.
Convert a complex number to a blob.
Load complex data from blob.
Saves the record to the database.
Copy the real to the ind array.
Copy the real value to the imaginary value.
Computes the epsi distance between this number and another.
Assigns the elements of an array to this one.
Returns the number of rows in the specified array.
Put row.
Puts a column into this matrix.
Performs a sub - operation on this vector.
Add another ind to this i nd.
Subs this vector by another.
Adds two complex numbers to the result.
Assigns the given number to each element.
Returns the ravel of this vector.
Returns the eigenvalues of a matrix.
Returns the generalized eigenvalues of two matrices.
Returns the iamax of an array.
Copies the specified point to this vector.
Multiply a vector by a scalar.
Processes the message.
Count the number of non - zero weights.
Reduce info.
Gets the no arg constructor for the given class.
Gets the constructor.
Invokes the given handle with the given parameters.
Gets an annotation from an array of annotations.
Gets the declared annotation for the given class and type.
Checks if the given annotation is present on the given class.
Create a new proxy instance.
Load an entity.
Save the pojo to the database.
Create a proxy from raw memcache service.
Gets the metadata for the given kind.
Query keys only.
Executes a query and returns the results of the query.
Perform a normal query.
Executes a projection query.
Count the number of results for the given query.
Safely partition an iterator from the input to the chunk size.
Loads a list of keys into an iterator.
Appends a message to a path.
Create a key for a POJO.
Compares two objects using system identity hash.
Create a key from raw data.
Convert a typed key to a com. google. cloud. datastore. key
Gets the kind here.
Checks if is missing type parameters.
Checks if a type is a super type of another type.
Get exact direct direct super types of the given type.
Capture a parameterized type.
Gets the translator for the given key.
Gets the populator for the given class and path.
Returns the instruction of the given class or null if not found.
Checks if the method is of interest.
Returns the declared properties of the given class.
Gets the metadata for this populator.
Returns the cached value for the given key.
Executes the query.
Fetch pending entities.
Add indexed discriminators for the given class.
Register a translator for a subclass.
Gets the collection component type.
Gets the map key type.
Creates a new forward path from the given path.
Gets the path of this path.
Converts this node to a path string.
Returns the depth of this path.
Put all updates in the cache.
Clears the cache for the given keys.
Puts all buckets into the cache.
Gets all objects from the cache.
Returns the keys of a collection of buckets.
Sets the key for the pojo.
Sets the id of the pojo.
Gets the parent of the pojo.
Register a subclass.
Checks if two types have the same common subtype.
Transform owner.
Gets the annotation of the given type anywhere in the class.
Adds all of the sessions in the other session to the map.
Load a value from the cache.
Executes the current round.
Translate a raw result to a map.
Fetches a set of keys from the datastore.
Load an entity from the datastore.
Create a raw key with the given kind and id.
Returns the raw value of the given key.
Gets the id value of the incomplete key.
Convert a url safe string to a com. google. cloud. datastore. key.
Create a transactionless transactor.
Create a new transactional transact.
Transact work once.
Checks if the pojo matches the given conditions.
objectify ofy.
Create a new datastore.
Gets metadata for entity.
Allocate key range.
Open an objectify.
Close an objectify.
homogenize indexes.
Create a reference to the given value.
Safely get the object from the map.
Adds a value to the list for the given key.
Returns true if this job has completed.
Generate if conditions.
Executes all runnables in the engine.
Gets a container by its type and path.
Gets the stat for the given kind.
Unwrap and throw an exception.
Gets a translator for the given type key.
Gets the root translator for the given class.
Create a translator.
Loads the entity from the container.
Gets the property from the container.
Sets the value of the property on the pojo.
Save pojo.
Gets the value of a property.
Writes the extensions for the given message.
Writes a category to the JSON generator.
Writes a list of categories.
Processes the given snippet.
Returns an iterable over the bids of the given response.
Gets bid with id.
Update bids.
Remove bids from the response.
Read extensions.
Returns true if the current token is null.
Register a reader for the given message class.
Registers a new class with the given writer.
Processes the snippet processor.
Processes the fields.
Updates the given collection of objects using the given updater function.
Filters a list of objects using the given filter.
Gets the current name from a json parser.
Start an object.
Start an array.
Returns the next token from the current token stack.
Write a boolean field to the JSON generator.
Write a list of strings to the given generator.
Writes a list of ints to the JSON stream.
Writes a list of longs to the given generator.
Writes a list of protocol message enums to the given JSON generator.
Resolves a base URL to a target URL.
fix pure query targets
Get host segments from url.
Returns the host of the given URL.
Gets a page from a URL.
Load a list from storm conf.
Extract the config element from a map.
Gets the protocol for the given url.
Generate warc.
Extract refresh url from value.
Get the metadata for outlink.
Filters the given metadata by removing the md from the metadata.
Adds a new url to the queue.
Removes all occurrences of all occurrences of the given field name.
Get charset from byte array.
Get charset from byte array.
Gets the charset from meta data.
Attempts to sniff the given content.
Sets the value for the given key.
Returns the first value of the given keys or null if none.
Gets a list of cookies from a list of strings.
Checks if domain matches host name.
Returns the cache key for the given url.
Gets the robot rules from the cache.
Extract meta tags from a document fragment.
Acknowledge a tuple to the server.
Filters the given url using the given metadata.
Filters the given string using the given URL and metadata.
Read rules from the rules file.
Process query elements.
Get navigation filters from storm conf.
Add a record format to the hdfs bolt
Returns the number of queries that have been sent since the last query sent.
Triggers the queries if the number of queries has been exceeded.
Create a parse filter from storm conf.
Append a node to the current node.
Adds a processing instruction to the document.
Method comment.
Start a dtd event.
Gets the value for url.
Trims the text.
Checks if a custom interval is defined.
Create a url from storm conf.
Sets the number of wheel items.
Resolve the size and state of a measure spec.
Sets the drawable of the empty item.
Sets the angle of the wheel.
Update the selected position.
Invalidates the wheel item at the given position.
Converts a raw position to a wheel position.
Update the velocity of the gauge if it is greater than num
Gets the contrast color of the entry.
Clamps the value to the upper limit.
Writes a list of coverage parsers to a JSON file.
Get data as byte buffer.
Sets the value of a string.
Make 1 d array.
Make a char from a string.
Make a char from a string array
Make a char from a string array.
Gets the forecast time interval offset.
Show the normal state of the frame.
Show the frame if not iconified.
Estimate the size of a dataset.
Prints a random access record scanner.
Create a unit name with the given name and plural.
Create a unit name with the given name plural and symbol.
Make a plural of the given name.
Returns true if the specified date is included in this date range.
Returns the intersection of this date range with the given date range.
Extend the date range by another date range.
Extend this date to the given date.
Sets the start date type.
Sets the end date type.
Sets the duration.
Add a bean to the menu.
Prints an error message.
Returns the name of the current location.
Returns a string representation of the parameters.
Open a dap document.
Computes the bounds for the given lat lon and stride.
synch ui.
Computes an unlimited chunking for a list of dimensions.
Registers a directory.
Process events.
Wrap a feature type in a dataset
Checks if a feature type is ok.
Find the feature type for the netcdf file ncd.
Write catalog to HTML.
Convert catalog to HTML.
Gets the user css.
Get the head of the page.
Make a dynamic catalog from a path and base uri.
Adds global services to the catalog.
Initializes the http client with credentials provider and user agent.
Gets the content of the given http session and urlencoded.
Sends the given content to the server using the given urlencoded.
Get the front page if no roots are set.
Make a new catalog.
Extracts the geospatial coverage from a GC group.
Gets a single dataset by type name.
Returns true if this value is nearly equal to the other one.
Create a unit id.
Parse a grads attribute from a string.
Reads at the top of the file.
Convert two shorts to an int.
Convert a byte array to an int.
Get the date for the given julian days and msecs
Make a valid netcdf object name.
Checks if the given string is a valid netcdf3 object name.
Read record data.
Read record subset.
Fill non record variables.
Make a time struct.
Make a time struct for the given calendar.
Checks if the given string has a time template.
Adds a function to the list of functions.
Get a function by name.
Get a bt by name.
Load a function.
Get the name of the level of a record.
Get the description of the level of a record
Get the unit of a record.
Returns the projection type of the given gds.
Checks if the record gr is vertical.
Checks if a record is a layer.
Transform a netcdf dataset to a coordinate.
Create a transform variable.
Create a projection for the given coverage transform.
Main method for testing.
Saves the state of the table.
Returns a copy of this chronology with the specified date time zone.
Writes the given count to the buffer.
Write an atomic array to the stream.
Writes the given bytes to the output stream.
Writes a range of bytes to the output.
Finish initialization.
Creates a calendar date range from the given date range.
Factory method to create a grib2 gds object.
Parse the given text and return the number of dds.
Parse the given text and return the number of elements parsed.
Swap grid header.
Read the grid data.
Entry point for the idas program.
Write a string to the output stream.
Write headers and ss.
Write the list of operations to the file.
Scans all files in the given directory and prints the results.
Scans a log file and prints the results.
Get the packing type of a grid.
Find the grid record with the given parameter.
Returns a dmrpkg for the given isword nword and scale.
Unpack data.
Reads a ugrb number from the input data.
Unpack grib1 data.
Unpack grib2 data.
Print the grids.
Gets the next byte from the buffer.
Creates a date from the given calendar.
Creates a date from a java. util. date.
Creates a calendar date from the given milliseconds.
Creates a date from the given calendar and time.
Parses the given udunits string into a calendar date.
Returns the difference between the date o and o.
Create an atomic var from a cursor data.
Sets up the request and response.
Escapes a string.
Create a list of slices from a list of range objects.
Unwrap a netcdf file.
Checks if a list of dimensions contains a variable length
Compute the effective shape of a list of dimensions.
Add a date to this date.
Multiply by another unit.
Divide this unit by another unit.
Divide this unit into another unit.
Returns the unit of this unit raised to the given power.
Converts the given amount to a derived unit.
Converts the input to a derived unit.
Converts a value from a derived unit to a value.
Returns a canonical string representation of this object.
Read data from a section iterable.
Read data from data2.
Flatten a list of station features into a list of station features.
Find a service by its name.
Returns the gate size for the given datatype.
Returns the gate start of the given datatype.
Returns the gate count for the given datatype.
Writes the XML representation of this dataset to the output stream.
Returns the preferred layout size of the target container.
Verifies that the descendant dataset is a descendant of the given path.
Implement the catalog implementation.
Get a calendar date unit of the given name and udunit.
Create a new date unit with the given calendar and udunit.
Returns a calendar date unit of the specified period field and base date.
Returns the quantity dimension of this unit.
Checks if the file is valid.
Read data 1.
Read data from a variable.
Read data from a channel 11.
Calculates the elevation of a given angle.
Calculates the step of a given number of bins
Calculates the AZ value of two shorts.
Calculates the coef of the data.
Calculates the nyquist of a wave.
Create a vertical transform from a netcdf dataset.
Sets the debug flags.
Sets the extend mode.
Read xy.
Checks if a variable is missing xy.
Gets the lat lon bounding box of the axis.
Finishes the sequence.
Tabs a string in the buffer.
Pads a string with the given width with the given string padding if necessary.
Returns a string representation of the given integer padded with zeros if necessary.
Returns a string representation of the given long padded with the given width if necessary.
Formats the given size in bytes.
Print a double to standard out.
Display a 2D double as a string.
Returns a string representation of the shape.
Finish the slice.
Convert this constraint to a constraint string.
Compose two slices.
Map a slice to a long.
Dumps a byte buffer to a byte buffer.
Gets the earth ellipsoid type.
Gets the type of an ellipsoid with the given epsg id.
Decode vlen data.
Extract a list of URLs from a URL.
Get the text content of a URL.
Filter the input stream by tag.
Read data from a variable v2 into a byte channel.
Adds all of the given attribute values to the list.
Removes an attribute from the set.
Remove an attribute ignore case.
Returns the offsets of all runtimes in the time units.
Adds an action source listener to the list of listeners.
Get the standard date from the given text.
Gets the standard or iso date for the given text.
Gets the date origin of this unit.
Gets the date.
Make a date from a double value.
Makes a value for the given date.
Convert a double value to a standard date time string.
Gets the grid spacing in km.
Add dimensions to netcdf file.
Add a coordinate axis to the dataset.
Make a projection.
Adds a gd variable to the solver.
Adds a system variable to the ncdf file.
Make the lc operator.
Make the ps coordinate.
Make mercator.
Sets the dx dy of the grid definition.
Reads a dataset from the catalog.
Read metadata from a URL.
Gets the level of the type 1.
Checks if the file is valid.
Writes a byte array to the output stream.
Sets the clear name.
Returns the coordinate name for the given axis type.
Gets the coordinate name for the given axis type a and dimension.
Builds the XML representation of this message.
Builds a dap exception.
Break up levels.
Make a z dimension.
Create new variables.
Get time coord axis from reference.
shave a bit from a float
Entry point for the netcdf writer.
Wrap a netcdf dataset.
Open a file at the given location.
Clears all coordinate systems.
Find the coordinate axis of the given type.
Find the coordinate axis with the given full name.
Find the coordinate system with the given name.
Find a coordinate transform by its name.
Checks if the enhance mode is needed.
Sets the values of a variable.
Sets the values of a variable.
Create an array from a list of strings.
Returns the offset of the index.
Gets an existing file or null if it does not exist.
Returns a list of features that intersect a box.
Discretizes the given array by discretizing the coarseness.
Adds the given metadata to this object.
Add documentation for a given type.
Removes the documentation of the given type from the collection.
Gets the maximum number of bytes that can be written to the given start.
Checks if the given ncdf file is mine.
Break up convention names.
Build convention attribute.
Build coordinate systems.
Find the coordinate axes.
Finds coordinate systems in the dataset.
Make coordinate systems.
Make coordinate systems maximal.
Checks if is coordinate axis for enhanced variable.
Subset the given dataset.
Sets the filter for the top dataset.
Mark a catalog ref as read.
Initializes the request once.
Counts the number of values for the given name and comparable value.
Adds a name symbol and definition.
Compares two table rows.
Compares two booleans.
Pass all reserved events to the dap node.
Checks if the given time range is valid.
Registers a class with the registry.
Registers a new dsp class.
Check if a registered dsp class is registered.
Unregisters a class from the registry.
Get the forecast time interval size in hours.
Gets forecast time interval offset.
Gets the vert unit.
Sorts this node in ascending order.
Find variable with attribute name.
Find a variable with a given attribute value.
Returns the name of the variable with the given name and value.
Find variable with attribute name and value.
Finds a nested structure.
Checks if a netcdf3 variable has a record structure.
Returns the literal value of a string.
Gets the feature type.
Returns the variable name for the given key.
Gets the value of a coordinate.
Returns the lon value of a connect point.
Returns the values of the coordinates.
Returns a section of this range.
Finds the closest midpoint in the run.
Returns the name of the sort.
Add an action to the menu.
Matches a path against this map.
Entry point for the projection manager.
Returns the index of the failure in the given byte array.
Add a source buffered image to the cache
Report the cache.
Stops the background loading.
Stop loading from the given URL.
Perform a HTTP GET request.
Make a mock http method.
Returns the next random object of the given type.
Get the next count.
Read data.
Gets the file system provider for the given URI.
Read station table.
Gets the index of the given gr.
Remove a variable from the data.
Returns the cloud hgt2 meters for the given height.
Reads the grid from the file.
Sets the number of colors.
Calculates the transformation for the given screen and bounds.
Converts a URI to an auth scope.
Finish the GCS.
Returns true if this factor is reciprocal of another factor.
Get an inv catalog for a directory.
Returns the index of the first element in the array or - 1 if the array is not sorted
Read metadata from url.
Read metadata content.
Add metadata content.
Validates the content of a metadata object.
Read cat gen conf element.
Read a dataset source element.
Read a dataset namer element.
Read dataset filter element.
Create result service from result service element.
Create a cat gen config element.
Create a dataset source element.
Create a dataset namer element.
Create a dataset filter element.
Create the result service element.
Returns true if the given flag name is set.
Construct the menu.
Adds the parameters to the given table.
Makes a parameter for the given words.
Returns the parameter with the given name.
Reads the contents of the given stream.
Read a number of bytes from the input stream.
Replaces all the ensembles in the given filespec with the given index.
Sets the station info.
Accepts a string buffer.
Gets a bitmap from the file.
Sets the netcdf file.
Sets the debug flags.
Parses a name from a string.
Returns true if the dstruct is a group d.
Get the dimension of the attribute table
Returns the shared dimension for the dimension d.
Construct dimensions from dods array.
Checks if the given data type is unsigned.
Read data from the database.
Get an icon by its name.
Gets an image by its name.
Create a custom cursor with the given name.
Reads data from the file.
Read a fill value from an input stream.
Read data from a bb layout.
Create a primitive array of the given size.
Converts a byte array to a char array.
Converts a char array to a UTF - 8 byte array.
Convert a byte to a char array.
Read an array from a parsed section spec.
Create a structure from a child section.
Gets a scalar value from a member.
Gets the data of a member.
Get the array for a member.
Compute the members of a variable.
Add dimensions to netcdf file.
Normalizes the given path.
Adds a dataset to the explicit datasets list.
Add a directory scan to the crawlable dataset manager
Finish the scan.
Make datasets.
Get the typical dataset.
Create a dataset from the given parameters.
Put resource control.
Adds a point to the polygon.
Returns the upper bound of this bounding box.
Returns the lower triangular value of the polygon.
Validates the string builder.
Match the given dataset against the given dataset.
Add all features from a dataset point.
Parse a constraint.
Evaluate the clauses of the special object.
Print constraint.
amend from odl.
Sets the shared dimensions of a variable.
Check if there are any unknown dimensions.
Find a group in the parent group with the given name.
Read the content of this Xlink.
Gets the standard uri.
Sets the projection class.
Adds a layout component to the layout.
Invalidates the layout of the target container.
Remove a layout component.
Returns the minimum size of the container.
Layout the container to the target container.
Returns true if the coordinate system is a radial coord system.
Get the maximum radial value.
Converts the earth to sat.
Returns the sat - to - earth of the scan.
Converts a goes to a geos
Get the sweep angle of a scan geometry.
Get the scan geom from the sweep angle axis
Sets the runtimes.
Write a point obs dataset to a file.
Rewrite point feature dataset.
Gets the array sequence for the given member.
Returns the full name of this node.
Returns a unique id for this request.
Gets the access for the service type.
Find a dataset by its name.
Gets the parent catalog.
Gets the metadata of the catalog.
Find service by name.
Gets the variables for a given vocabulary.
Find all catalog references in a list of datasets.
Escapes the given path to be a valid URI.
Adds a stagger to an array.
Extrapinterpolate an array of doubles.
Computes the rho of the given lat.
Override this method to format the detail information.
Create a structure from a part name and dimensions.
Create a missing variable.
Create a variable from a parameter.
Add global attributes.
Returns the size of the variable with the given name.
Get 1 d array.
LR goto state.
syntax error.
Reduce the number of symbols to yyrule.
Read dmr.
Read error.
Reads a number of bytes from the stream.
Reads a header from the stream.
Converts a string to a date.
Read a list of records from a table.
Transfer a group from one dataset to another.
Gets the stn file.
Opens the file.
Gets the beginning of the element at the given index.
Gets the end of the given index.
Create all runtime collections.
Sets edit value.
Returns the data type for the given format.
Computes the Euclidean distance between two points.
Clean unit.
Cleans a name by removing any leading and trailing whitespace.
Checks if a string is unitless.
Factory method to create notes.
Gets the var id for a note.
Parse das.
Find dods v.
Find data v.
Find by index.
Gets the parent group.
Gets the dimension at the given index.
Returns the index of the dimension with the given name.
Returns the units as a string.
Returns the shape as a section.
Returns a slice of this variable.
Sets the enum typedef.
Reads a list of ranges.
Read a scalar value as a string.
Reads the contents of the buffer into an array.
Reads an array from the given section.
Write a CDL to the output stream.
Returns a string representation of this object in debug mode.
Sets the data type of the element.
Sets the dimensions of the shape.
Reset the shape.
Sets the dimensions of this group.
Resets the dimensions of this shape.
Sets the dimension of the shape at the given index.
Sets the cached data.
Returns a list of all dimensions of this dataset.
Sets the bounding box.
Finish the computation.
Returns an iterable over all datasets contained in this dataset.
Checks if the path ends with any of the synextensions.
Open the cdmdsp file.
Build dmr.
Build the seqtypes for the given variable.
Build the dimensionrefs for a dap variable.
Find a matching enum.
Get the core dimension set from a list of dimensions.
Scans a bufr file and prints it to the output.
Process a bufr message as a dataset.
Perform a POST request.
Get the affine transform.
Rotate the map.
Get the area of the map.
Convert a projection point to a screen location.
Pan the map.
Zooms to the specified range of pixels.
Recalc from bounding box.
Adds a listener to the list of listeners.
Remove a listener from the list.
Sends an event to all listeners.
Sends an event to all registered listeners.
Prints a command to the output.
Print variable data.
Print a variable data section.
Prints structure data to the given writer.
Prints an array to the given writer.
Print an array to the given writer.
Write ncml to a writer.
Read a double attribute.
Add a parameter to the transformation.
Read as object.
Checks if a record is up.
Check if this unit is compatible with another unit.
Make a label of the given quantity.
Sets the bit offset.
Convert nb bits to u.
Reads nb bits from the stream.
Opens a HTTP connection.
Gets the das command.
Get complete ce string.
Convert a projection point to a lat lon point.
Returns the idv dataset catalog.
Convert a date range to a date range.
Checks if the file is a valid file.
Handles the satellite information.
Handle sensor information.
Reads the root element from the given location.
Cleans the data of the given text.
Unescape the given string using the given escape character.
Escapes a string for use in a URL query.
Unescapes the given string.
Decodes a backslash - encoded string.
Encodes the given string as a backslash.
Add the global attributes to the netcdf file
Swaps the contents of the given byte array at the given offset.
Swaps the contents of the given byte array at the given offset.
Swaps the bits of the given byte array at the given offset.
Swaps two float bits.
Swaps v with v.
Convert a short to a byte array.
Convert an int to a byte array.
Convert a long to a byte array.
Apply a subset transformation to this vertical transformation.
Writes a date to an XML formatted string.
Make a c array.
Start the XML document.
Writes the feature list to a file.
Add levels to the list of records.
Add dimensions to netcdf file.
Add to netcdf file.
Find the coordinate transform for the given group g.
Gets the index of the record in the grid.
Prints the string to the console.
Gets a file from the cache.
Gets an existing file or caches it if it doesn t exist.
Prints the contents of the cache.
Removes all files from the cache.
Calculates the bearing of the earth e and pt1 and pt2.
Calculates the bearing of two points.
Entry point for the program.
Finds a point in the earth by its latitude and longitude.
Finds a point in the world.
Finds a point in the world using the default earth lat1 lon1 and az and
Loads the picture from the thread.
Loads the picture from the given URL and rotation.
Loads the picture.
Stop loading the image.
Stop loading the image.
Returns the size of the buffered image.
Sets the buffered image.
Returns the standard URI for the dataset.
Transfer info from list to list.
Count the number of bits in this data descriptor.
Compares two data descriptor objects.
Loads the header from the stream.
Load data from the stream.
Returns the field with the given name.
Gets doubles by field name.
Returns an array of strings by name.
Gets booleans by field name.
Returns the name of the field at the given index.
Gets the field names.
Prints the given string to the console.
Gets the attributes.
Set a dap attribute.
Remove the given attribute from the set of attributes.
Gets the group.
Gets the container of this node.
Returns the escaped short name.
Gets the container path.
Gets the group path.
Computes the fqn of this node.
Build the DAP.
Put bean collection.
Gets the bean with the given key and default value.
Returns the object for the given key.
Read data from a file.
Prints the variables in the dataset.
Print compound instance.
Write an element to a string.
Writes the given element to the given file.
Write an XML element to the output stream.
Write to writer.
Create a dimension element.
Transform a coordinate container.
Gets an integer attribute from the container.
Gets a unit by symbol and quantity.
Clone a unit definition.
Create unit db.
Get the singleton instance of si.
Finds the first coord element in the target array.
Find the closest midpoint in the axis.
Returns a subset of the values of the axis.
Open a feature dataset.
Open a feature dataset.
Annotate a dataset with its title and id.
Read data from a random access file.
Assemble a URI from a set of parts.
Returns a canonical version of the given string.
Normalizes the units of the given string.
Finish the download.
Gets the object at the given key.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Gets the date.
Print XML.
Print an XML value.
Returns true if the given attribute is special.
Print the dimrefs of a variable.
Checks if a file is valid.
Set area directory attributes.
Set nav block attributes.
Get the cal type from a string.
Set cal type attributes.
Finds the coordinates for a given predicate.
Find the name of a coordinate axis by its type.
Find coord by type.
Find coord by type.
Find dimension by type.
Finds the best coordinate system for the dataset.
Find the dependent axis of the coverage coord axis.
Returns the variable with the given name.
Reads a marker from the given data stream.
Write a marker to the sink.
Main method for running the demo.
Gets the string representation of the member.
Get the parameter list.
Set the list of stations to display.
Sets the selected station.
Redraw the buffered image.
Reads an object from the stream.
Writes the object to the output stream.
Add a unit to this unit.
Adds a unit to the set.
Adds a symbol to the registry.
Gets a unit by its id.
Add by name.
Add by symbol.
Adds a unique unit to the map.
Add a menu to the current menu.
Find record by drspos.
Read a variable from a dataset.
Serialize a dataset to a stream.
Create a copy of this projection.
Open a feature dataset.
Open a feature dataset.
Open a dataset.
Annotate an inv dataset.
Adds a partition to the list.
Create a new grib collection.
Create an exp and duration time coverage enhancer for the target dataset.
Create an exp and duration time coverage enhancer.
Writes the query capability XML to a file.
Read structure data.
Set the picture of the current thread.
Sets the buffered image.
Zoom to fit.
Paints the component.
Tg ftoi.
tg itoc.
abbreviation for itoc.
daym.
Get the ccrd for the given ivcord
Convert an integer array to a swp4 array.
Returns the name of the grid packing.
Returns the data type of the given typrt.
Read data from the input stream.
Externalize the output stream.
Gets the tag for the given enum code.
Get the next image from the grid.
Get the size of a dap type.
Returns the sum of the elements in an array.
Sets the grid of the bounding box.
Sets the overlap.
Clears the grid.
Marks the specified object as clear.
Find the intersection of two rectangles.
Finds the intersection of this object and the specified object.
Finds the closest object in the grid.
Returns the squared distance between the given point and the given index.
Get or create a unit.
Search for service type by fragment.
Search for service type by path.
Decode the service type from the path extension.
Checks if the location is a dods location.
Send data to the output stream.
Returns the suffix of the given string.
Returns the prefix of the given string.
Locates a file in the classpath.
Locates a relative relative to the given absolute path.
Extracts a byte buffer from a byte buffer.
Returns the structure path of a variable.
Returns null if the path is null.
Joins an array of strings using the given separator.
Checks if a path has a drive letter.
Returns a list of protocols for the given url and breakpoint.
Convert a dap index to a list of slices.
Returns a list of slices for the given offset.
Checks if a list of slices is contiguous.
Checks if a list of slices is a single point.
Create an index from a list of slices.
Read data from an input stream.
Set station info.
Read feature collection config from catalog and path.
Update the list of groups.
Returns the dap variable with the given name.
Gets the axis type.
Gets the grib stat type.
Returns the coverage coord of the lon axis.
Get the list of ranges.
Sets the default values for the given properties.
Gets the session id.
Set the maximum number of redirects to redirect.
Sets whether sessions should be used.
Closes the connection.
Set authentication and proxy.
Track an http session.
Sets the global credentials provider.
Validates the given URL.
Creates an index from the given shape.
Compute strides.
Index section of a list of ranges.
Reduces this index by the number of elements in the rank
Reduces the index by a given dimension.
Transposes an index.
Returns a copy of this index with the specified dimensions permuted.
Returns an index iterator for the given array.
Returns the current element position.
Sets the index to the given array.
Sets the dim to the given value.
Sets the value of this index to the given values.
Returns the name of the interval.
Make a date range for the given calendar.
Make a list of dates for this file.
Makes a list of parameters for the given part.
Gets the station list.
Returns a list of station keys.
Get the list of dates.
Finds the station with the given id.
Gets the file type.
Increases the depth by the given number.
Sets the indent level.
Read or create an index from a single file.
Scans a directory and adds it to the collection.
Returns true if scan needed.
Scans the first time.
Set debug flags.
Adds a variable to the model.
Writes a cancel task to the file.
Validates the given object against the given strict flag.
Returns a constraint string representation of this constraint.
Sets the original variable.
Reads the data from the given section.
This method is used to determine if the data structure needs conversion.
Convert the data to a structure in the given section.
Convert member info to variable info.
Find a variable from org name.
Checks if a variable has data.
Enhance the dataset with the given mode.
Checks if resource control is ok.
Create an empty sequence from a sequence.
Create a sequence from a list of parameters and values.
Create a sequence from the specified parameters.
Add a vertical coord attribute to a variable.
Read a catalog from an XML file.
Create an inv catalog from a string.
Read an XML catalog from a string.
Writes the catalog to the output stream.
Gets the metadata converter.
Create dimensionless unit name.
Multiply this unit by another unit.
Divide this unit by another unit.
Converts the input to a derived unit.
Checks if this unit is compatible with another unit.
Writes a feature to a string.
Writes a point to the XML.
Writes a line to the string.
Write polygon to xml.
Returns the list of sub - nodes of the given parent node.
Add reserved attributes to dap.
Get a subset of a variable.
Create a ma from an array structure.
Sets the data of a member.
Create a ma from a structure.
Returns the geometry type for the given variable name.
Create a station time series feature
Compiles the given ceast.
Compile a filter expression.
Redefine the dimension of the ceast.
Creates a view of the given index.
Checks if a bounding box is contained in this bounding box.
Extend the bounding box by a point.
Extend this rectangle by the given rect.
Computes the rect intersection of this rectangle and clip.
Adds two arrays together.
Checks if two arrays conformable.
Checks if two shapes are conformable.
Convert an array to a data type
Copies the contents of an array to the given result.
Copy a boolean from the result array to the result array.
Copy an array from one array to another.
Gets the minimum and maximum value of an array.
Sets the value of all elements in the array to the given value.
Create a new catalog builder.
Factory method for projection impl.
Unescapes a dap id.
URL - decode a string.
Unescapes the given URL.
Escapes the given string for use as a backslash.
Unescapes the given string to a backslash.
Tokenizes the given escaped name into a list of strings.
Returns the index of the given character in the given escaped name.
Convert backslash to dap.
Read an atomic scalar.
Gets the cursor path.
Gets the ui for the given property.
Returns the superclass of the given component.
Compiles the dataset and databuffer.
Compile a structure array.
Compile a structure.
Compile a sequence array.
Compile a sequence.
Read a less than or equal to the current position.
Gets the field with the given name.
Returns the value of the field with the given name.
Sets the value of a field.
Adds a field to this record.
Add a check box field.
Add a date field.
Adds a double field to this field.
Adds a int field to this field.
Add a password field.
Adds a text field to this field.
Add a text combo field.
Add a text area field.
Adds a heading to the layout.
Adds a component to the layout.
Adds an empty row to the layout.
Find the active frame.
Gets the spacing of the cell.
Gets the factors.
Multiplies an array of dimensions.
Multiply this factor by the given power.
Returns true if this dimension is reciprocal of the given dimension.
Returns true if this factor is dimensionless.
Factory method for creating grib1 param tables.
Factory method for creating grib1 param tables.
Adds a parameter table lookup.
Adds a new parameter table to the lookup.
Returns the unit of this unit with the given power.
Converts the input to a derived unit.
Initialize the unit table.
Make a vertical variable.
Returns the name of the file or null if the file does not exist.
Grabs a short from the given byte array.
Grabs an integer from the given byte array starting at the given offset.
Reads a float from the given byte array starting at the given offset.
Reads a double from the given byte array starting at the given offset.
Aa alias and name.
Adds a symbol to the symbol table.
Creates a converter for the given unit and to unit.
Sets the structure data.
Sets the point feature data.
Draws the specified pixel at the specified location.
Gets the shapes.
Processes the given stream.
Read a buffer from an input stream.
Read more bytes from the buffer.
Reads a number of bytes from the stream.
Skips the specified number of bytes.
Add dimensions to netcdf file.
Returns the index of the coordinate in the grid record.
Checks if a random access file is valid.
Opens a random access file.
Read data from a variable v2 section.
Read one row data from the stream.
Create from dataset.
Create a variable.
Sets the area of the map.
Set the map area
Sets the area of the map.
Sets the projection impl.
Adds the actions to the menu.
Redraws the current redraw timer if it hasn t already been started.
Prints a rectangle to the console.
Sets the selected state of the preference.
Get the double value at the given offset.
Reads a double from the index.
Reads an object from the index.
Returns the name of the given gini ent id.
Reads a scaled integer from the buffer.
Find parameter ignore case.
Swaps the order of the elements in the buffer.
Returns the number of time steps per file.
Returns the file name for the given e index and t index.
Gets the file names.
Gets the ddf.
Returns the full path of the given filename.
Adds a chsub to the list.
Convert a reference date to a time unit.
Reads a random number from the given file.
Returns the uncomp data for the given offset and len.
Generate a 12n13n14 for a struct.
Pcode 25.
Checks the message header.
pcode 5.
Generate a 128 - bit pcode.
Returns the number of levels of the given short array.
Returns the dualpolation levels of the given short array.
Adds a variable to the ncfile.
Adds a parameter to the dataset.
Compresses a byte buffer into an uncompressed byte array
Gets a word from a byte array.
Gets a word from a byte array.
Convert a byte array to an object of the given data type.
Do dmr.
Gets the request state.
Send an error response.
Stretch a point.
Stretch a point.
Formats the given text and returns the date only.
Replace data vars in a structure.
Ensures that the memory array size is okay.
Reads a random integer from the given file.
Reads a 32 - bit integer from the given file.
Reads a random int from a file.
Reads a 32 - bit unsigned integer from the given file.
Reads a 32 - bit unsigned integer from the given file.
Reads a random float from the given file.
Returns the 4 - bit floating point number.
Reads a random int from a file.
Count the number of bits in a bitmap.
Create a copy of this projection.
Returns the WKS representation of this object.
Escapes the given string using the given character wrt.
Unescapes a backslash - escaped string.
Splits a string into a piece of backslash.
Make a fmrc inv.
Get service special string.
Returns the number of projected components.
Returns the reference time of this date.
Create a bb from the given section.
Entry point for the indexer.
Read a grib1 record.
Checks if is mine.
Make a utm coordinate from a string.
Reacquires the area.
Returns true if the given date is before the given date.
Returns true if the given date type is before the given date type.
Returns true if the date is after the given date.
Sets the value at the given index.
Add a coordinate system to this variable.
Sets the units of the variable.
Returns the units as a string.
Initializes this object with the given mode and preferences.
Read catalog configuration from catalog file.
Processes a list of datasets.
Read cats from a directory.
Returns true if lon is between beg and lon end.
Convert a lat to a string.
Convert a lon to a string.
Compares this quantity to another quantity.
Returns the dataset of the selected node or null if none.
Set the selected dataset.
Create a tree path from a tree node.
Open all the catalogs.
Sets the catalog location.
Sets the catalog.
Find the alias for a variable.
Write a variable - length integer to the stream.
Writes the given string to the output.
Reads characters from the stream into the buffer.
Set debug flags.
Adds a member to this group.
Hide a member.
Gets the member names.
Find the member with the given name.
Reads a bitmap from the file.
Restore the state of the table.
Returns an iterator over the selected rows in the table.
Gets the model index.
Gets the array for the member m.
Gets the scalar value of the member m.
Gets the double value of the member m.
Gets the scalar value of a member.
Gets the storage value of the member m.
Gets the scalar value of the member m.
Gets the byte representation of the member.
Gets the scalar value of a member.
Gets the storage value for the given member.
Gets the scalar value of a member.
Gets a short array representation of the member.
Gets the scalar value of a member.
Gets the storage value of the member m.
Gets the scalar value of the member m.
Get the char array for the member m.
Do one dataset.
Create a copy of a dataset node.
Transfers the metadata from one dataset node to another.
Gets the inheritable metadata for this dataset.
Adds a product record to the grid.
Shows a missing view.
Prints a summary of the missing records.
Find a record from the ensemble.
Returns a string representation of this grid.
Returns the name of the first record.
Create a subset of coverage coord axis from a list of intervals
Checks if two byte arrays are memequal.
Parse a dmr document.
Process the attributes of a dataset.
Add a list of coordinates to the query.
Sets the latitudes for the given la1 and la2.
Parse a variable selector.
Create a section spec string from a variable.
Check if the bounding box is inside the bounding box
Closes the connection. If the connection has been closed it will be closed.
Execute the request and return the status code.
Identify encoding station.
Match the axis type and dimension.
Sets the stream to the given stream.
Reads a character from the stream.
Starts the task.
Parse a string into a URI.
Excludes the given URI.
Nullifies a string if it is not null.
Returns a string that canonjoins the given prefix and suffix.
Accept a crawlable dataset.
Copy information from another grib collection to this one.
Returns a list of all filenames in the map.
Sets the index file raf.
Gets the index filepath in the cache.
Returns the number of counters in this set.
Add a global attribute.
Add an attribute with the given name and values.
Delete a global attribute.
Rename a global attribute.
Adds an attribute to the variable with the given name.
Adds a variable attribute.
Delete an attribute of a variable.
Rename an attribute of a variable.
Make the type of the file sub type.
Write headers and bb.
Writes the members to the writer.
Serializes the station obs dataset to XML.
Serializes the station collection to an XML string.
Write a dsr to the stream.
Send a dxr to the client
Write an error response.
Closes the stream.
Flushes the output stream to the output stream.
Returns true if this vector contains the want.
Returns the i th element of this list.
Shifts the range by the given origin.
Reads data from the raf.
Read data.
Returns a subset of this vector.
Sets the values of the feature.
Creates an array of doubles from the given int array.
Get dataset boundaries.
Checks if the requested variable is contained in the requested bean params.
Get a dataset source structure by name.
Gets the resource path from a request.
Make the vertical dimensions.
Read pib.
Finish the request.
Transfer the metadata from the parent to the local metadata.
Transfers the metadata from the given dataset impl to the local metadata.
Transfer inheritable metadata to target.
Sets the contributors.
Adds a dataset to the hash table.
Remove a dataset from the catalog.
Replace a dataset with another one.
Adds a service to the service registry.
Remove a service from the registry.
Sets the local services.
Remove a local metadata from the local dataset.
Gets the user property.
Validates the string builder.
Gets the descriptors.
Construct the server path.
Gets the capabilities.
Gets a feature.
Check parameters for error.
Handle the http servlet request.
Returns the capabilities for the given url.
Returns the length of this string.
Returns the last modified date of the object.
Returns the filename of a file.
Returns the contents of a string to the http servlet response.
Sets the response content length.
Get request uri.
Gets the request path.
Gets the request from the http servlet request.
Returns the parameter with the given name ignoring case.
Saves the data to the file system.
Writes a directory to a file.
Create a nested bit counter.
Count the number of bits in this data descriptor.
Append a line to the end of the list.
Make a station collection document.
Get the capabilities document.
Get the record at the given coordinates.
Gets the coordinate at the given index.
Adds an item to the list.
Handle a throwable.
Steps the step by the given positions.
Gets the ncep gen process.
Returns true if endpoint is cdmrf endpoint.
Sets the value of this set.
Factory method for grib1 gds.
Copy bytes from the input stream to the output stream.
Reads the contents of the given stream as a string using the given charset.
Read contents from the input stream to a byte array.
Write the contents of the given string to the given output stream.
Copy the contents of the given file to the given output stream.
Copies a random amount of bytes from the raf to the output stream.
Copy a directory tree from one directory to another.
Read the contents of a file into a byte array.
Reads the contents of a file into a string.
Writes a string to a file.
Writes the contents of a string to a file.
Writes the contents of the given stream to the given file.
Parse exception handler.
dap2 exception handler.
Logs a bad url.
Gets the catalog.
Prints the catalog.
Print status.
Print bad url.
Returns the reference date of this calendar.
Read vlen data.
Read ncml collection from a string.
Open a collection reader.
Attempt to allow characters to be replaced by the given character.
Cleans up a string from a byte array.
Filters a string by a number of letters or digits.
Filters a string by 7 bits.
Make a valid cdm object name.
Returns the index of the first occurrence of s1 and s2
Pads the given string with the given length to the left.
Pads a string to the right of the desired length.
Removes all occurrences of sub from s.
Remove a character from a string.
Remove a character from the end of a string.
Collapses all whitespace characters in a string.
Replaces all occurrences of in with out.
Replaces all occurrences of a character in a string.
Replaces all occurrences of pattern with value.
Substitutes the match with the subst.
Substitutes the match with the subst.
Removes all occurrences of out from sb.
Replaces all occurrences of in with out.
Replaces all occurrences of in in with out.
Substitutes all occurrences of match with subst.
Trims the given string to the given length and returns the result.
Process collection update event.
Checks the state of the collection.
Update the collection.
Gets the datasets.
Releases all resources held by this instance.
Creates a deep copy of the data sdata and members.
Copy a structure to a bb.
Copy a structure to an array.
Copy a structure data to an array.
Copies a structure to an array.
Get the forecast time interval size in hours.
Create a section from a range.
Creates a analyzer for the given table.
Analyze the feature type.
Synchronizes the reader with the current grid index.
Returns the Gaussian latitudes of the given type.
Swaps the contents of the given byte array at the given offset.
Swaps the bits of the given byte array at the given offset.
Swaps the char of the given byte array at the given offset.
Find the coordinate axes.
Add a parameter to the coordinate transform.
Returns the common parent of this group and another group.
Returns true if this group is a parent of another group.
Sets the parent group of this node.
Adds a dimension to this group.
Adds a dimension to this group.
Adds a group to this group.
Adds an enumeration to this group.
Adds a variable to the variable list.
Removes the dimension with the given name.
Make a relative group.
Convert a dds attribute to a dds attribute.
Print the das to the given writer.
Returns the variable with the given name.
Write a grid to the file.
Replace missing values in the array.
Replace missing values in the given array with the given number.
Shift the xstart of a longitude
Writes a grid to the file.
Write the response to the http servlet response.
Create top index file from feature collection config.
Gets the type of a grib collection.
Update grib collection.
Update leaf collection.
Creates an immutable grib collection from a data file.
Create an immutable grib collection from a data file.
Checks if the given url matches the given pattern.
Adds a triple to the dfalt.
Find a triple by key and url.
Check if the triplestore is well known.
Insert a triple into the triplestore.
Gets the local datasets.
Find dataset by name.
Sets the projection of the feat set.
Returns an iterator over the shapes in this shape set.
Make shapes.
Compares the given string to this number.
Start a progress monitor task.
Checks if the given collection index needs to be updated.
Normalizes the result and the ec list.
Sets the object at the given index.
Returns the structure data at the given index.
Copies the structures from the recnum to the result.
Gets a scalar object from a member.
Convert a scalar value to a double.
Convert a scalar integer to an integer.
Gets the float value of a member.
Gets the byte value of a member.
Gets the short value of a member.
Gets a scalar character from a member.
Gets a scalar value from a member.
Gets the structure of a member.
Get the sequence for a member.
Get an array object from a member.
Returns the minimum and maximum value for the given value.
Evaluate a field expression.
Returns a constraint string representation of this variable.
Returns true if the dap node references the given node.
Evaluates a variable against a data cursor rec.
Count the number of fields in the structure.
Computes the enumerations.
Compute the groups.
Compile a CE from a string.
Checks if the file is valid.
Makes the actions system.
Returns the byte order of the given kmachn.
Set byte order.
Returns the key for the given name or null if not found.
Find a file header by name.
Gets the file header with the given name.
Prints the parts.
Get data pointer.
Levenshtein less than word.
Read a string from the stream.
Unpk - unpk.
Convert bits to a string.
Write the data to the given channel.
Parse base.
Parse a grid.
Parse aliases.
Decode a list of data descriptors.
Replicates a list of data descriptors to a list of data descriptors.
Get the filename of the dataset.
Gets the feature type cf.
Checks if two floats are less than or equal to the given max abs.
Returns true if the dap node references this dap node.
Parses the given string into a unit.
Checks if a variable is tiled.
Computes the best coordinate time from the complete time.
Convert a lat lon rect to a projection rect array.
Show all time series.
Creates a map from a list of attributes.
Gets the values.
Gets the numeric value at the given index.
Write CDL.
Sets the value of the string.
Sets the values of the array.
Scans the input stream.
Generate proxy ds resolver catalog.
Submits a write message to the executor.
Set thredds datatype.
Jump to thredds datatype.
Prepare gui.
Create the tools frame.
Make a name for a list of axes.
Returns the coordinate axis lesser rank of two axis axis.
Finds the axis with the given type.
Gets the projection ct.
Checks if is geo xy.
Returns true if the axis is regular.
Checks if subset is subset.
Checks if the list of axis is in the list of axes.
Check if the axis with the given name exists.
Checks if a list of dimensions contains a domain.
Checks if the list of axis types is contained in the list of axis types.
Returns true if this polygon contains the axis type want axis type.
Clone this dag.
Gets the selected bean.
Returns a list of beans that are selected from the table.
Returns a list of the selected cells.
Sets the selected bean.
Restore the state of the bean.
Creates a unit with the given name.
Consumes and closes the stream.
Checks if a variable is extra.
Returns true if the variable is a coordinate.
Find the coordinate axis of a table.
Adds data variables to the table t.
Add a parent join to the cursor.
Make a station feature.
Create a dap node.
Create a unit factory with the given name.
Create a unit factory with exceptions.
Checks if two strings are compatible.
Checks if is date unit.
Checks if the string is a time unit.
Returns the conversion factor for the given unit string.
Convert a double to a unit.
Returns true if this unit is unknown.
Gets the value of this unit.
Creates a new rel op clause.
Create a new top level clause.
Create a sub clause for a function.
Make a grayscale image from an array of evaluators.
Crawls the catalog.
Crawl a dataset.
Crawls the direct datasets.
Gets a file or caches it if it exists.
Gets an existing file or caches it if it doesn t exist.
Set debug leaks.
Returns a sorted list of all files in the directory.
Closes the output stream.
Seeks to the given position.
Flushes the buffer to the file.
Reads the next byte from the stream.
Read a number of shorts from the stream.
Reads an int from the buffer at the given position.
Reads n bytes from the stream starting at the given offset.
Read a number of longs from the stream.
Read a float from the stream.
Read a double from the stream.
Read a string from the stream.
Reads the maximum number of bytes from the stream.
Write a boolean array to the stream.
Writes an array of shorts to the stream.
Writes an array of characters to the output stream.
Writes an array of ints to the stream.
Writes an array of longs to the stream.
Write a float array to the output stream.
Write a double array to the output stream.
Writes a string to the output.
Writes a byte array to the output stream.
Returns true if the given kmp matches the given match.
Appends a query to the given buffer.
Create a directory factory for a feature collection.
Finds the index.
Checks if the given index reader is a leaf.
Construct a list of directory builders.
Scans for children.
Read a list of files from the given index.
Gets the gridsets.
Acquire a cacheable file from the cache.
Remove an element from the list of files.
Attempts to eject the object with the given hash key.
Releases a file from the cache.
4 - bit version of int4
Update the element in the cache.
Clear the cache.
Make the transformation vertically.
Checks if is lat lon.
Returns true if this is a z axis.
Find a coordinate in the axis.
Find a coordinate in the axis.
Finds the x coordinate of a point in the vector.
Finds the x coordinate of a point in the vector.
Returns the position of the item in the arrow.
Gets the item of the given pixel.
Iterate over all files in the collection and print the result.
Get remote files.
Get the name of a subcenter.
Convert a unit string to a calendar period. field.
Returns a new calendar period with the given value and field.
Create a calendar period from a udunit string.
Subtract two dates.
Returns the convert factor for the given period.
Returns the value of the field in millisecs.
Returns the number of milliseconds between two dates.
Synchronizes the gemreader with the grid index.
Initializes the table.
Puts a date root into the tree.
Find the longest path match for the given request path.
Find data root by path.
Convert a data root to a data root.
Gets the date range for the given calendar.
Reindex a list of coordinates.
Create a new netcdf file writer.
Add a group to this group.
Adds a typedef to the group.
Delete an attribute from a group.
Rename a group attribute.
Add a record structure.
Aborts the connection.
Writes the properties of this object to the given print writer.
Extract the metadata from a thredds dataset.
Divide this unit by another unit.
Convert this unit to a derived unit.
Returns the value of this unit from the given amount.
Convert a nested variable to a nested structure.
Convert a top variable to an array.
Convert a value to an array.
Close all databases.
Opens the database.
Convert an integer to a period.
Ensures that the array has the given minimum capacity.
Gets the value at the given index.
Create a catalog for a directory.
Returns the catalog for the given path and base URI.
Gets the coordinate type.
Create a grib2 pds object from a byte array.
Calculates the time of the given date.
Apply a scale factor to a value.
Parses a local concept from a file.
Adds a local concept to the given stream.
Removes all occurrences of all occurrences of str from line in.
Store a concept in the local concept table.
Write grib1 tables.
Write lookup table file.
Show local concepts.
Main method for testing this class.
Returns the dataset source type with the given name.
Expand the dataset.
Expand the catalog.
Name the datasets in the container.
Name the datasets.
Name the dataset tree.
Loads a picture from the source image.
Stops loading the picture with the given url.
Change the status of the source
Send a progress notification to all registered picture listeners.
Create a scaled picture in a thread.
Returns the size of the scaled picture.
Get scaled size string.
Gets the merged parts.
Create a header string for the given stn and date.
sn ckua.
Check for valid group.
Set the root directory.
Create the root directory.
Creates a cache file with the given location.
Delete all files in the cache with the given cutoff date.
Cleans up the cache.
Returns true ifffxy is a bufr table
Create a coordinate axis from a netcdf dataset and vds.
Create a copy of the coordinate axis.
Checks if is numeric.
Formats the info.
Gets the calendar from the attribute.
Sets the list.
Gets the selected row.
Increments the currently selected row.
Gets the model index.
Sets the selected index.
Sort a string in quick order.
Swap two elements of a string.
Gets an existing file or null if it does not exist.
Rotate a lonlat.
Create an xml object from a file.
Create an XML object from an input stream.
Create an xml object from a resource name.
Make a standard filename for the given app name store name.
Saves the current state of the preference to the prefs file.
Saves the message to the output stream.
Write an atomic variable.
Writes the structure.
Write structure 1.
Write a sequence to a serial writer.
Write a record to a serial writer.
Checks if the given file is valid.
Get the wmo id.
Read a number from the input stream.
Gets the data at the given index.
Get data 0.
Reads data41 from a grib2 drs. type0
Create a new file with the given location and grid list.
Estimate the size of a grid file.
Create a file with the given location and grid list.
Sets the list of stations.
Set the station with the given name.
Pick a station from the world.
Picks the closest station to the given point.
Gets the selected station.
Returns the name of the projection of the given type.
Get the stations for a bounding box.
Get a station by its name.
Returns an iterator over the data of a station.
Returns an iterator over the data of a station.
Reads the data from the file.
Returns the dot product of this vector and v.
Returns the norm of this vector.
Normalizes the vector.
Sets the services from the given datasets.
Gets the parameter with the given id.
Returns the parameter with the given id.
Adds a new name to the set.
Adds a symbol to the map.
Gets the prefix for the given string.
Checks if email is ok.
Returns the value of the parameter with the given name.
Calculates the CRC of the grid definition.
Checks if is thin.
Returns the index of the field with the given name.
Returns the time type name for the given indicator.
Get time coord string.
Sets the next polygon.
Sets the polygon prev.
Finds a property by its name.
Sets the current projection.
Get a subset of time units from a run date.
Register an io class.
Register an iosp class.
Returns true if the given iosp class is registered.
Deregister an iosp class.
Checks if a file can be opened.
Creates a new netcdf file from the given data and iosp.
Opens a netcdf file with the given data.
Opens a netcdf file in memory.
Opens a netcdf file for the given URI.
Returns the global attribute with the given name ignoring case.
Serialize this netcdf to a ncml string.
Writes the CDL to the output stream.
Write the CDL to the given writer.
Write CDL.
Adds an attribute to the group.
Adds an attribute to the given group.
Add a group to a parent group.
Add a dimension to a group.
Remove a dimension from a group.
Adds a variable to the given group.
Add a variable to this group.
Add a string variable to the given group.
Remove a variable from a group.
Send an iosp message.
Make the record structure.
Finish the group.
Read an array of variables from the given variable section.
Read to byte channel.
Read a list of variables from the input stream.
Read an array of values from the given section.
Make a full name for the given cdm node.
Make a full name with the given parent and name.
Returns true if the mfile should be included.
Returns true if the file should be excluded.
Checks if the file is filtered by the filters
Append a value to the attribute.
Dispatches a check value.
Force the given value to the given type.
Checks if a string is a byte.
Checks if a string is a short.
Checks if the given string is an integer.
Checks if a string is u.
Checks if a string is a float.
Checks if a string is a double.
Gets the data type for the given attribute.
Returns true if the service is viewable.
Checks if a string is a valid boolean.
Checks if a string is a valid alphanumeric string.
Returns true if the given string is a valid alphanumeric string constrained set.
Determines if the given string is a file path.
Converts a unicode code point to a percent hex string.
Returns the value of the parameter with the given key.
Compare two grid def record.
Processes the given input stream.
Processes the buffer b and returns the number of matches.
Remove quotes from a string.
Marks the stacked variables as stacked.
Write ncml to the editor.
Get value from thredds config.
Write cdl to a string.
Create the station helper.
Validates the string builder.
Gets the azimuth of the message.
Returns the elevation of the message.
Returns the latitudes of the ray.
Returns the longitudes of the ray.
Returns the altitudes of the ray.
Gets the azimuths of the ryi ray.
Returns the elevations of the ray.
Select a subset of variables from a list of member names.
Select a member with the given variable name.
Adds a member variable to this member.
Sets the member variables.
Sets the parent group of this variable.
Calculates the size of the element.
Read the structure at the given index.
Reads a structure from the file.
Returns the data category for the given category.
Gets the class name.
Adds a parameter to the parameter list.
Gets the header.
projection rect lat lon to proj b
Returns the version number of a conv name.
Get zis positive.
Set the color scale parameters.
Render plan view.
Returns true if this group is a child of the given group.
Gets the type for the given message name.
Installs in all columns of the given table.
Set the api key and api secret
Create a label from a string value.
Creates a label for a list of lines.
Generates an HTML label for the given string.
Connect to a socket.
Convert a string to a list of ip types.
Connect to the server.
Purges a logger from the cache.
Compiles the given source code into the given class.
Add a source code for a class.
Read graphic control ext.
Get the next frame from the header.
Returns the persons property.
Initialize the list change listener.
Get person by id.
Adds a list of validation messages to the map.
Sets the person id.
Create view model.
Load countries.
Creates a view step for the given view type.
Create a fxml view step.
Clears the map.
Creates the index events.
Synchronously access a member.
Load a view tuple from the classpath.
Query for a style mapping row
Reads the pixel value from the image.
Get the pixel values from a byte array.
Validates the image type.
Create a new image with the specified width and height.
Sets the tile data for the given bitmap.
Executes a raw query and returns the results.
Wraps a query with a cursor result.
Queries the user and returns the result.
Executes a query on the database.
Handle cursor.
Gets the feature row.
Register a table.
Retrieve a tile row from the database
Get the coverage data.
Get coverage data.
Get the coverage data.
Get the results of the tile matrix.
Zoom the coverage data tile matrix by a certain number of overlapping pixels.
Get the results of the zoom in operation.
Get the coverage data tile matrix results.
Get the tile matrix.
Get the value of a tile.
Sets the icon for the given geometry type.
Returns the icon row for the given geometry type.
Open or get bindings db.
Converts a byte array to a bitmap.
Converts a bitmap to a byte array.
Creates a new table with the given metadata.
Delete a table.
Gets or creates a table metadata for a geo package and table name.
Gets the geo package id.
Create table metadata.
Create the extension.
Gets the feature row from the cursor.
Executes a raw query and returns a custom cursor.
Query for feature bounding box bounding box projection
Query the given geometry envelope for a custom cursor
Count the number of points in the envelope.
Query for custom cursors.
Builds the where clause.
Query for feature results.
Count the number of features in the bounding box bounding box projection
Query for features in an envelope.
Query for feature ids.
Counts the number of rows in the dataset.
Sets the data of the bitmap to the given format.
Sets the data of the bitmap to the given format and quality.
Sets the configuration for the bitmap compression.
Get the tile count.
Adjust the bounds of the bounding box according to the zoom level
Adjust google bounds.
Adjust the bounding box and zoom level.
Adjust the bounds of the Geo package.
Get the bounding box for the given zoom level
Get the tile grid for the zoom level
Query for tile row.
Query for tile in descending zoom level
Get the closest zoom level for the given length.
Get the approximate zoom level for the given length.
Query for tile grid.
Delete a tile.
Count the number of tiles in the table at the zoom level
Is google tiles?
Reads a pixel value from the tiff file.
Reads the pixel values from the tiff file.
Validates the image type.
Create a tiff image with the specified width and height.
Sets the pixel value of the first pixel of the image.
Gets or opens a geo package.
Gets the current row.
Move to the next invalid state.
Query by base feature id
Delete by base id and geometry type
Get a rectangle from a bounding box bounding box bounding box bounding box bounding box section bounding box bounding
Get the rounded rectangle of the given width height bounding box bounding box section and bounding box.
Delete missing databases.
Create and close a geo package connection.
Checks if the database is valid.
Validates the database and closes the database.
Validates the database and closes the database.
Validate a SQLite database.
Checks if the database header is valid.
Checks if the database header is valid.
Adds the internal databases.
Adds external databases.
Import a geo package.
Gets the geo package metadata.
Get geo package metadata at the given path.
Create a new geometry in the database
Populate a geometry metadata from a geometry envelope.
Delete a geopackage
Create or update a geometry.
Update a table.
Count the number of rows in a table.
Create a geometry metadata object from a cursor.
Updates the content of the table.
Draw a bitmap for a tile.
Returns a list of simple attributes rows for the given ids.
Integrity check.
Gets the user mapping dao.
Get simple attributes dao.
Gets the mappings for the given base id.
Gets the mappings for a related relation.
Checks if the table has a mapping with the given base id and related id
Counts the number of rows in the custom cursor.
Register a cursor wrapper for the given table.
Create a custom dao for a table.
Get a tile from the GeoPackage
Draw a tile bitmap
Reproject a tile to the requested width and height.
Retrieve the tile results.
Calculates the overlap.
Sets the density of the paint.
Sets the line paint.
Sets the polygon paint.
Draw a tile in bytes.
Draw a tile
Draw a query index bitmap
Query for the number of indexed features
Query for indexed features
Query for features by x y and zoom
Query for features.
Query for all tiles in the world
Simplifies a list of points.
Get the paint for a point style.
Get the paint for a line.
Get the paint for a polygon style.
Gets the fill paint for a feature style.
Get the paint for a feature style.
Get the style paint for the given style and type.
Get the paint for a style row.
Gets the paint for the given style id and type.
Puts a bitmap for the icon row.
Wraps the given content values.
Create a bitmap from the matrix.
Recycles all the bitmaps in this layer.
Gets the bitmap for the layer.
Get the canvas for the layer.
Create a bitmap and canvas for the layer
Gets the mapping dao.
Get the style dao.
Gets the icon dao.
Gets the feature styles for the table.
Get the styles for a feature table.
Gets the style for the feature table and geometry type.
Returns the icons for the feature table.
Gets the icon for the feature table and geometry type.
Gets the feature styles for a feature row.
Gets the feature styles for the feature table and feature id.
Get the styles for a feature row.
Gets the icons for a feature row.
Get the styles for a feature id.
Gets the icons for a feature id and style mapping.
Sets the feature styles for the feature table.
Sets the table styles for the feature table.
Sets the feature table icons.
Sets the feature styles for a feature row.
Sets the feature styles in the feature table.
Sets the styles of a feature row.
Sets the styles for a feature table.
Sets the style of a feature row.
Sets the default style for the feature row.
Sets the default style for the feature table and id.
Sets the icons for a feature row.
Sets the icons for a feature table.
Sets the icon of the feature row.
Sets the default icon for the feature row.
Sets the default icon for the feature table.
Gets or inserts a style.
Gets or inserts an icon.
Insert style mapping.
Delete table style.
Delete table icon.
Delete table mappings.
Delete table mapping.
Delete mapping by base id
Get all style ids for a feature table.
Gets all icon ids for a feature table.
Gets all style ids for the feature table.
Gets all icon ids for the feature table.
Gets the image bytes.
Flush the output stream.
Get the pixel at the given location.
Read the pixels from the reader.
Draw a feature
Draw a path to the canvas.
Draw a polygon path
Adds a line string to the path.
Adds a polygon to the polygon.
Gets the cache for the given table name.
Remove a feature row from the table.
Clears all caches and resizes them to the given maximum size.
Gets the cached table feature styles.
Returns the cached table feature icons.
Get table dao.
Sets the width of this geometric object.
Sets the height of the geopackage.
Returns the dimensions of this bitmap.
Calculates the density of a tile.
Read blob value.
Read a custom table.
Gets the color or creates a default color if it does not exist.
Validates the given color.
Create a color from a hex color and opacity.
Create a new geo package manager.
Sets the progress of the feature table.
Returns the index of the given feature index types.
Index a feature row with a list of feature index types.
Deletes the feature index with the given types.
Delete the feature index with the given types from the given row.
Deletes the feature index with the given id.
Delete a feature index.
Returns true if this feature index is indexed.
Returns the list of feature index types.
Query for feature index results.
Counts the number of geometries in the table.
Gets the bounding box of the feature table.
Query for feature index results.
Gets the indexed type.
Gets the internal file.
Gets the absolute path of a file.
Gets the geometry type.
Sets the geometry type.
Checks if the url has bounding box.
Replace the xyz values in the url with the tile generator values.
Checks if the given url has xyz.
Replace bounding box with url.
Replace bounding box.
Get the geo package geometry data.
Index a feature row.
Update the last indexed feature in the database.
Deletes the index.
Delete the index for the given geometry id
Returns true if this date is indexed.
Query the database and table.
Query for features in the database.
Count the number of features in a bounding box
Query the feature table for the given envelope.
Count the number of features in the envelope.
Query for feature bounding box bounding box and projection
Counts the number of features in the bounding box.
Get feature bounding box.
Get the geometry metadata for the cursor
Gets the feature row.
Gets the feature row.
Gets the tile daos for a feature table.
Gets the feature daos for a tile table.
Gets the bounding box for the feature tiles.
query by ids
Returns a list of unique base ids for this table.
Returns a list of unique related ids for this table.
Delete by base id
Delete by related id
Delete by ids.
Build where ids.
Create a new geo package metadata.
Delete a database.
Renames the name of the metadata.
Rename a name to a new name
Gets all geo package metadata.
Get the metadata for a database.
Returns the metadata for the given id.
Get or create a geo package metadata.
Returns true if the database is external.
Returns the metadata for the external table at the given path.
Returns a list of metadata where name like the given string.
Returns a list of metadata where name not like the given sort column.
Get metadata where name like.
Create geo package metadata from cursor.
Called when a view is created.
Add a parallax view if it is a group view.
On create view.
Creates a custom view with the given name context and attribute set.
Appends an event to the buffer.
Find config file from system properties.
Returns the URL of the resource with the given filename or null if not found.
Automatically install the joran configuration.
status on resource search
Convert socket address to string.
Creates a new executor service.
Start converters.
Subclasses may override this method to append an event to the sub.
Adds a substitution property.
Gets the value of a property.
Compile a converter.
Consumes the next token from the input stream and creates a new node.
Returns a regular expression for a fixed date.
Starts the interpretation.
Ends the evaluation of the evaluator.
Initializes this selector with the given key.
Create a dynamic context selector.
Setup the properties.
Returns the absolute path of the mounted external storage directory.
Gets the database directory path.
Gets the absolute file path.
Evaluates the evaluation of an event.
Gets discriminating value.
Update the mask if necessary.
Gets the chain decision for the given event.
Create key managers.
Create trust managers.
Create a factory bean key store from system properties.
Gets the location from the system property.
Returns the URL for a resource.
Returns true if chain handles throwable.
Stop the hook.
Prints the given string with the given threshold.
Prints a string if errors occured.
Prints the given context to the console.
Gets the entry from the live or lingerers map.
End of life.
Create a format info value from a string.
Rename a file or directory.
Checks if two volumes are on the same volume.
Gets the environment variable for the given key.
Returns the value of a system property.
Sets the mdc property.
Output mdc.
Extracts the stack trace elements from a throwable.
Checks if current class is in framework space list.
Adds a new status to the status list.
Adds a status listener to the list.
Returns the list of actions that are applicable to the given element path.
Gets the applicable actions for the given path.
Sets the class loader.
Get a value from the system properties.
Decapitalizes the given string.
Returns an array of method descriptors for the given class.
Returns an array of property descriptors for the given class.
Starts the encoder and output stream.
Add a listener to the console.
Ends the interpretation.
Gets the discriminating value for the given event.
Returns true if the given event is discardable.
Starts the hook.
Invoked when an end of an interpretation is encountered.
Sets the supported protocols.
Check if the supported cipher suites are enabled or not.
Returns the included and excluded strings.
Converts a string to a scope.
Sets the properties of an interpretation.
Adds a appender to the list of appenders.
Detaches the appender from the list.
Detaches the appender with the given name.
Handle a change in the parent level.
Call appenders on each parent.
Detach appender from the attached appender.
Create a logger with the given last part.
Get the turbo filter chain decision
Log a logging event.
Create socket and wait for it to finish.
Create missing parent directories.
Convert this state to an integer.
Convert an integer to a level.
Gets resource occurrence count.
Returns the URL of a resource from a class loader.
Gets the class loader of an object.
Gets the class loader as privileged.
Gets the class loader of the given class.
Starts the encoder.
Gets the tag for the given event.
Starts the interpretation of the given interpretation context.
Returns the index of the separator of the given name.
Evaluates the given event.
Gets the client thread name.
Checks if two files are on the same file store.
Appends an event to the end of the list.
Sends a buffer to the client.
Add a mdc to the map.
Create a converter for the given keyword.
Create a composite converter for the given node.
Determine the compression mode.
Configures the connection to the given URL.
Configures the given file.
Configures the source from the input stream.
Build the interpreter.
Configures the input source.
Configure the interpreter.
Returns the value for the given key.
Sets the name of this state.
Returns true if the context has a status listener.
Returns the time of the last reset.
Start the parser.
Returns the effective converter for the given string.
Gets the file header.
Returns the file footer.
Starts the interpretation of this action.
Ends the appender.
Returns a copy of the clients list.
Adds a client to the list of clients.
Removes a client from the list of clients.
Returns a copy of the context map.
Gets the value of a method.
Get turbo filter decision.
Checks if is android os.
Initialize the context.
Returns an array of files matching the given regular expression.
Prints the elapsed time.
Gets the database file.
Clear expired logs.
Checks if the last cleanup time is expired.
Append an event to a sub - statement.
Appends an event to the secondary sub.
Bind logging event.
Converts an object to a string.
Compute the reference mask for the given event.
Merge property maps.
insert exception.
Gets the prefix match length.
Returns the effective level of this status.
Returns true if the given class is an interface.
Returns the child value of the given map.
Processes the include request.
Opens an input stream for the given url.
Trim head and tail.
Returns true if the server should start.
Returns true if this exception is transient.
Sets the default hosts.
Ensures the local index.
Synchronously syncs the data selection.
Performs sync if needed.
Waits for a task to finish.
Synchronously lists the indexes of all files in the directory.
Reads the input stream into a char array.
Converts an input stream to a byte array.
Consumes the connection and disconnects the connection.
Returns the list of hosts that are up.
Set the type of the query.
Starts the search.
Add a value to the cache.
Gets a value from the cache.
Waits for all threads to complete.
Reports a test failure to the user.
Copies all files in the source directory to the target directory.
Initializes the simulator properties.
Gets a field value.
Gets a method by its name.
Format a percentage value.
Format a double.
Format a long.
Writes a JSON string to the stream.
Writes an integer to the JSON stream.
Write a double to the JSON stream
Reads a JSON numeric character from the reader.
Read a long from the stream.
Read a double.
Reads a json string and returns it as a base64 encoded byte.
Execute a request.
Sends a request to the server.
Enqueue a method call to the queue.
Gets resource from fs.
Update decoration.
Refresh repository view.
Gets the resource history view.
Open an editor for the given contents and name.
Asynchronously sends an error message to the user.
Prompt the user for authentication.
Create the default page.
Start the thread.
Sets if the node is keep all alive.
Sets if this node is omit.
Sets the owner of this node.
Adds a factor to the condition.
Create a condition term from stream tokenizer.
Returns true if the condition term matches the condition term.
Returns a reader for the given rule source and input.
Loads the configuration for the given input.
Reads configuration from the given stream.
Gets the menu.
Add a response to the response body.
Adds a new href element to the tree.
Insert a new href before the first child of this list.
Remove the first child with the given href.
Add a stat to the list.
Get the href of this element.
Returns the status of the first child of this node.
Get the stack frame for the given value.
Checks if two classes are a subtype of one another.
Checks if a proposal is contained in a collection of proposals.
Resets the stream to the initial state.
Creates the actions.
Adds a connection to the list of connections.
Gets the value of a property.
Remove a connection from the list of connections.
Sets the location of the property.
Sets the value of a property.
Sets the size of the size.
Dumps the constraints.
Add a new lock entry.
Adds a child to this node.
Remove a child from this node.
Registers a listener to be notified when the bundle is started.
Stops the plugin.
Gets a string from the resource bundle.
Gets the resource bundle.
Returns the form colors for the given display.
Sets the date time.
Sets the time of the given date using the given pattern.
Create an error status.
Log an error.
Adds a field editor.
Adjust the grid layout.
Apply font to all editors.
Calculates the number of columns.
Initializes the page editors.
Fire a property change event to all listeners.
Sets the active editor.
contribute to tool bar
Determine the dialect from the back text.
Create a new context with user context and locator.
Saves the current state of the editor to a file.
Creates the table listeners.
Associates the specified object with the specified url in this map. If the map previously contained a mapping
Puts the given value to the given url.
Adds a token to this node.
Add a child node to this node.
Sets the offset and length of the file.
Add condition.
Add a state token condition.
Returns true if the condition matches the condition.
Gets the first child prop.
Returns the status of the node.
Sets the prop of this element.
Gets the last line of the given back text.
Get the last non dash line from the back text.
Binds the given binding to the given id.
Binds two strings to the given id.
Binds the given id to the given bindings. If id is null binds the id to
Create the process.
Create a compilation unit for the given example type.
Gets the runtime id.
Visit a rete.
Visit a node.
Returns the dot - id of the given object.
Remove this element from the list.
Add a set to this element.
Create a locator with the given resource url and label.
Gets the presentation reconciler.
Checks if this status object is the same as another status object.
Returns true if this condition contains the given term.
Create a condition factor from stream tokenizer
Adds the pages to the editor.
Perform an HTTP DELETE request.
Sends a POST request to the server.
Get the status of a job.
Executes the pull operation.
Handle pull results.
Sets the value at the given index.
Adds an active lock to the list.
Filter proposals on prefix.
Read backwards from the given document starting at the given offset.
Calculates the rete rows of a vertex.
Returns the edit part for the given model element.
Returns the image descriptor for the given path.
Declares an image.
Adds a vertex to the graph at the given depth.
Gets the row index for the given vertex.
Returns the width of all cells in the table.
Dumps the vertices of this matrix to stdout.
Optimizes the matrix.
Initialize the graphical viewer.
Draws a new graph.
Returns the drools line breakpoint with the specified source.
Sets the href of this node.
Returns true if the client can talk dav.
Copy the contents of this object to the specified destination.
Examine multi status response.
Extract prop stats from multi status.
Gets the content of the document.
Returns an enumeration of active locks.
Returns the status of a property.
Returns the head of the document.
Acquires a lock token.
Moves all elements from the given enumeration to the given destination.
Performs an in operation on the server.
Refresh the lock with the given lock token.
Remove a collection of properties.
Remove a property from the collection.
Sets the content of an input stream.
Sets the properties of the dav document.
Sets the property of the element.
Unlock a lock token.
Update an existing version of the document
Performs version control.
Delete the resource with the given locator
Examine status code.
Returns true if the property has a child with the given name.
Writes the request body to the output stream.
Convert a byte array to a hex string.
Convert an int array to a hex string.
Sets if the node is all prop.
Sets if the element is a prop name.
Sets the property of this node.
Strip the last word from the prefix.
Update the tree viewer.
Writes the contents of this stream to the given stream.
Advances to the end of the stack.
Marks the given parser errors as invalid.
Skip white space.
Add resource to guvnor
Commit changes to a file
Gets the age.
Returns the length of the content.
Returns the maximum number of forwards in the string.
Gets the overwrite flag.
Returns true if this string is passthrough.
Gets the timeout.
Puts a string value into the context.
Sets the timeout value.
Create a buffered reader for the given filename.
Parses a file and adds it to the map.
Gets the object metadata from the text.
Strip obj metadata from text.
Adds the given tokens to the given node.
Gets the children of the condition.
Returns an array of children of the given object and text.
Adds a child to the list.
Prints the tree.
Prints a node to stdout.
Prints the given number of tabs.
Read a JSON value from the given text.
Returns the image descriptor for the given id.
Invokes the request.
Sets a request header field.
Create a rule sample launcher.
Create rule.
Create the rule flow.
Create the launcher for the project.
Gets the selected i.
Create an image.
Gets the field name.
Gets the evaluator.
Gets the value of the alpha node field constraint.
Adds the guvnor resource properties to the properties object.
Sets the baseline of the response.
Bind a member to the given source.
Gets the member with the given name.
Optimizes the graph.
Initializes the controls.
Validate page.
Generates an entity tag for the current thread.
Gets the opposite of the given vertex.
Validates a list of otps.
Checks if a user is a right user.
Returns the username for the given public id and filename
Add yubikey to user.
Verify otp.
Clears the password.
Returns the id of the given otp.
Checks if a string is a valid otp.
Create a simple node with the given source object.
Create an evaluation for a simple node.
Clears the cache.
Checks if is jdk15.
Gets the package name of an object.
Returns the package name of the given class.
Returns a unique descriptor for the given object.
Returns the type of the given argument or null if the argument is null.
Checks if two classes are more specific.
Gets the value of a property of an object.
Gets the property descriptors for the given target class.
Gets a property descriptor from an array of target classes.
Gets a read method from a class.
Read a char from the buffer.
The projection function.
Selects all the elements in the tree.
Convert an object to a long.
Convert an object to a double.
Convert an object to a big integer.
Decrements the value of an object.
Convert an object to a string.
Returns the numeric type of the given value.
Convert a value to a type.
Returns the int value of the given object.
Returns the numeric type of t1 and t2.
Gets the numeric type of two objects.
Creates a number from the given type and long value.
Pop an evaluation from the stack.
Generate ognl getter.
Generate ognl setter.
Flatten the tree.
Initializes this node with the given node and source.
Escapes a character in the image.
Sets the root object in the context.
Gets the value of an object.
Sets the value of an accessor expression.
Sets the value of an object in a tree.
Checks if the given expression is a constant.
Get the default watch service id.
Reload the resource.
Gets the archiver with the given name.
Checks for problems in the archiver.
Reads a file as a string.
Create a project.
Add a system property to the java.
Add a system property.
Changes a directory.
Refresh the confirm button state.
Creates a file observer with the given path.
Returns the selected folder.
Create a new folder if it doesn t exist.
Checks if the given file is a valid file.
Start a background job.
Starts a list.
Ends a list.
Handle motion.
Returns the crop rect.
Compute the layout of the rect.
Register a listener and a media factory.
Add a span watcher.
Returns the view for the given position.
This method is called when a view is drop down.
Converts the given spanned text to the given format.
Adds a span to the end of the paragraph.
Create a unique file with the given mime type.
Determine the original file for the given URI.
Returns the namespace of the given name.
Returns the local name of the given string.
Set an attribute.
Sets the value of an attribute.
Gets the font name from a file.
Get the font name of a file.
Add a new buffer if the current buffer index is less than the buffer size.
Writes an array of bytes to the output stream.
Writes a byte to the buffer.
Writes data from the input stream to the output stream.
Writes this buffer to the given output stream.
Returns a copy of this buffer as a byte array.
Set the size of the font.
Converts windows separators to unix.
Recompute focus.
Ensure that the highlight view is visible.
Adjust the center of the highlight view.
Reset document locator.
Validates the given value against the patterns.
Add an element type.
Sets an attribute on the given element.
Sets the parent of the element with the given name.
Returns the element type with the given name.
Gets the entity with the given name.
Cleans up paragraphs.
Apply the selection to the editor.
Checks if the given domain is valid.
Executes the given operation on the editor.
redo operations.
Replaces all occurrences of search with replace.
Gets or creates a thread status.
Sets the decoding options for the thread.
Returns true if the thread can decode the given thread.
Decodes a file descriptor into a bitmap.
Gets the fonts.
Gets the asset fonts.
Gets the system fonts.
Setup the parser.
Gets a reader from a source.
Get input stream.
Adup a character array.
Expand entities.
Looks up an entity in the buffer.
Restart the stack.
Pop an element from the stack.
Restart the stack.
Returns the prefix of the given name.
Returns true if the given prefix and namespace are a foreign key.
Trims quotes from the given string.
Splits a string into an array of strings.
rectify an element in the stack.
Saves the instance state.
Unregisters the editors and toolbars and removes all listeners.
On event main thread.
On event main thread.
Reset the base matrix.
Get the maximum zoom level.
Checks if the given editor exists in the selection.
Finds spans that match the given processor and removes it from the list of spans.
Picks a directory.
Rotate an image.
Sets the output writer.
Writes a character to the output.
Writes a string to the output.
Returns true if the given attribute is equal to the given value.
Write esc ut.
Write a namespace declaration.
Write a name.
Create a stream if it does not exist.
Wait for a stream activation.
Completes the store snapshot with missing instance snapshots.
Wait for the next provisioning request to be executed.
Asynchronously get records from Amazon Glacier
Performs an action on the Amazon DynamoDB using the given label and supplier.
Returns an optional amazon action with the given label and supplier.
Checks if a bucket is accessible.
Create a new snapshot from the store.
Trigger a wildcard expander.
Replaces the given pattern with the given pattern.
Delete any of the chars from the given string.
Adds a resource lint report.
Update properties with filter configuration.
Gets the configuration properties.
Create an input stream for auto detection.
Convert a map of pre processors to a map of post processors.
Compiles the given content into a JavaScript string.
Reload the cache with a new value.
Reload model with new value.
Wrap a http servlet request.
Create a transformer for a base name suffix and extension.
On error.
Sends a redirect to an external resource.
Process resource.
Create expander handler.
Locates the input stream for the given URI.
Create the wro configuration
Register change listeners.
Processes the request and sets the response headers.
Sets the wro configuration.
Identify duplicate group names.
Merge the imported model into the imported model.
Locates an input stream for the given URI.
Apply post processors to a string.
Decorate a post processor.
Process the request.
Splits the given option into an array.
Load properties from the given stream.
Parse the properties from a string.
Create a custom wro manager factory.
Persist resource fingerprints.
Checks if is target group.
Extend the plugin classpath.
Get model resource as stream.
Initialize manager factory.
Sets the model transformers.
Compiles the given content and name into a string.
Merges a list of resources.
Process and merge a list of resources.
Run in parallel.
Apply pre processors.
Decorate a resource pre processor with the given criteria.
Persist the string to the fallback storage.
Gets all fields declared in the given object.
Rewrite the given CSS uri and image url.
Compute a new image location.
Adds a model transformer to the manager.
Serves the processed bundle.
Initialize the aggregated folder path.
Extract variables from a string.
Parses a CSS string.
Replaces all variables in the given css with the given variables.
Decorator to convert a post processor to pre processor.
Checks if the resource type is eligible for the search.
Gzip response.
Decorate a path pattern processor with a set of patterns.
Create a decorator that excludes a set of pattern patterns.
Create a resource change handler.
Attempt to remember a resource.
Apply a function to each css import.
Filters the given collection and returns the filtered list.
Check if the request is minimized.
Finds all imported resources.
Computes the absolute URL for the given relative resource uri and import url.
Create a string from an array of strings.
Gets alias list.
Create the context.
Evaluates the given reader with the given source name and closes the reader.
Evaluates the given script with the given source name.
Processes the command line arguments.
Checks if the request is a handler request.
Create handler request path.
Renames a group.
Compute the destination folder for the resource type.
Process a group.
Check if a resource is required for a specific group.
Locates an input stream for the given URI.
Create an object pool.
Locates a stream for the given URI and folder.
Open a jar file.
Extracts the path from the given URI.
Returns true if the request is minimized.
Add locators to the factory.
Decorate a wro model factory with a list of transformers.
Adds a require to the list.
Executes the update script.
Logs the summary.
Called when a resource is processed.
Gets the lock for the given key.
Create a process from a source file.
Parses the contents of a string into an array of properties.
Gets the task info.
Gets the compilation command.
Parse a header.
Adds pragma and expires headers to map.
Gets the path info from the given location.
Gets the servlet path from the given location.
Checks if the given URL matches the given path.
Load a regexp with the given key.
Copies the contents of the given reader to the given writer.
Create a temporary file with the given extension.
Clean image url.
Sets an attribute on the servlet context.
Generate data uri.
Generate data uri.
Sets the given context with the given configuration.
Remove the correlation id from the map.
Check if a cache key has changed.
Called when an exception occurs.
Check if a resource has changed.
Update the hash for the given group.
Checks if this resource has a resource of the given type.
Create a process from the source file and destination file.
Parse a group definition.
Create a group from an element.
Parse resource.
Gets resources for a group.
Stop a timer.
Get named timer with given name and todo flags.
Gets a timer with the given name.
Prints the statistics.
Wake up the workers.
Update the processed counters.
Update the finished counters.
Atomically updates the counter if it is smaller than the given value.
Visits a rule.
Inverts the instert into taxonomy.
Ensures that the stage manager is loading.
Restore the saturation of the stage.
Checks if the classification is inconsistent.
Restores the taxonomy.
Restores the instance taxonomy.
Returns a proof of entailment inference for the given conclusion.
Pre - execute method.
Invalidates this stage and all of its post stages.
Gets to add.
This method is used to remove an individual from the taxonomy
Create an unsupported operation exception.
Removes the element at the given position.
Removes the element at the given position.
Gets the moved position of an array.
Returns true if d contains o.
Adds the given element to the given array if it is not already present.
Check occurrence numbers.
Adds the given timer to this one.
Adds a timer to this rule.
Put a key value pair.
Removes the entry for the given key.
Enlarges the hash table.
Shrinks the internal state.
Saves the configuration to disk.
Prints the declarations of a class.
Gets all instance nodes of a generic type node.
Removes all elements from this set.
Combine a list of hashes into a single hash.
Copy the contents of the given stream to the given output stream.
Creates an incompleteness monitor to the reasoner.
Processes the taxomomy.
Submits an input to the pool.
Appends an object to the appender.
Marks the state of the given class as not computed.
Adds a direct type node to this node.
Checks if the chain matches the chain.
Returns a set that maps the elements of the given set to the given functiontor.
Adds an element to the set.
Removes the specified object from this set.
Adds a conclusion counter to this one.
Log memory usage.
Sets the reasoner configuration.
Shutdown this thread.
Print the header.
Prints an array of values to the logger.
Returns a string representation of the given character.
Adds the given counter to this rule.
Writes a resource to the xhtml writer.
Gets the action input parameter with the given name.
Gets the property descriptor for the given property path.
Gets the required parameters.
Checks if is single value type.
Adds a rel parameter to this link.
Sets the media type.
Adds a hreflang parameter.
Adds a rev to the link.
Adds a parameter to the link.
Expands the given arguments.
Get the rels for this link.
Get the revs for this link.
Checks if the action descriptor has any required variables.
Returns the formatted value of the property.
Returns true if the parameter is hidden.
Checks if the given property is included in the annotation.
Returns true if the value of the implicit property has an explicit value.
Returns true if this request is required.
Returns the default value of the request.
Gets the parameter name.
Gets the property or parameter name from the input parameter.
Gets the vocabulary for the given bean.
Returns the query string.
Append form.
Writes an input button.
Append input or select.
Add a affordance builder to this one.
Returns the components of this URI template.
Returns the uri template components for the given action descriptors.
Gets the first node by name.
Gets the first node by rel.
Returns an iterator over the nodes in this list.
Creates a persistent hash map from an iterable of entries.
Creates a persistent tree map from an iterable of entries.
Creates an empty map.
Returns a sorted set of the entries in this map.
Returns the last key in the list.
Fold an iterable into an ident.
Apply a predicate to each element of this sequence and return a new sequence containing the elements of the
Folds the results of applying the reducer to the ident and ident.
Creates a tuple2 from a map entry.
Matches an item against the current selection.
Register a list of classes.
Gets the element at the given index.
Append an element to the vector.
Concatenates the items in the list.
Creates a mutable set from the given items.
Returns a mutable vector of the given items.
Returns an immutable set of the given items.
Returns an immutable vector of the given items.
Creates an xform from an array of items.
Appends spaces to a string builder.
Convert an array of items to a string.
Returns a lazy reference of the given function0.
Apply this expression to the current thread.
Inserts an item into an array at the given index.
Copies the items from an array to an array.
Suspend the current thread.
Suspends the transaction if it has been initiated.
Build a list of service components.
Validates a directory.
Create inheritance link.
Copies all declared methods from the source class to the destination class.
Copies the given methods to the given destination.
Remove sbb entity from loader.
Returns whether or not the given parameter is enabled.
Returns the referenced ra link names of the service component.
Install a service component.
Uninstall a service.
Checks if a ra link is active or not.
Get usage parameter sets.
Reset usage parameters.
Display the result.
unfold an array.
Executes an event.
Binds a name to the cache.
Unbinds an object from the cache.
Looks up an object by its name.
Returns the name bindings for this node.
Moves the cursor to the next event.
Returns true if this trace level is higher than another trace level.
Extracts the jar from the given jar file.
Pipes the input stream to the output stream.
Adds an object to the map.
Attach sbb entity.
Detach a sbb entity from the attached node.
Returns true if no sbb entities attached.
Gets the sbb entities attached to this node.
Attach a timer to this node.
Detach a timer from the timers list.
Returns true if there are no timers attached.
Returns the set of timers attached to this node.
Add a name bound to this node.
Returns true if the node with the given name is unbound.
Returns true if no names are bound.
Returns a copy of this node.
Set a cmp attribute.
Returns the value of the attribute with the given name.
Returns a copy of this map.
Initialize the notification info.
Send usage notification.
Download remote du.
Update the deployed components.
Install deployable unit.
Uninstall deployable unit.
Process undeploy.
Shows the status of the job.
Checks if the given log record is loggable.
Gets the logger for the given log record.
Gets the sbb entities.
Gets permissions.
Gets the code sources.
Checks if profile exists in the profile table.
Removes the profile table from the table.
Update the configuration properties.
This method is called when the SLE is running.
Called when the transaction is stopping.
Activates the state machine.
Deactivates the resource adaptor.
Schedules the end of all activities.
Remove this notification source from the trace management.
Returns the resource adaptor interface for the given resource type.
Called when a service is active.
Gets an activity handle from the resource management.
Called when an activity is ended.
Update the ra configuration.
Verifies that the configuration properties are valid.
Called when the resource adaptor is stopping.
Inactive the resource adaptor.
Unconfigure the resource adaptor.
Unconfigure the resource adaptor context.
unset fault tolerant resource adaptor context
Build the profile attribute map.
Resume the activity.
Gets the activity context handles.
Returns the usage parameter for the given name.
Decorates an abstract class.
Fire an event to the sbb entity.
Fire an event to the congestion control.
Gets a profile from a sbb entity.
Returns the set of abstract methods from the given class.
Returns a map of interface methods from the given interface.
Create object pool.
Remove an object pool from the table.
Checks if the given notification source is the owner of the given alarm.
Raises an alarm if it is alive.
Returns the usage parameter set for the profile object.
Gets the descriptor for the event type.
Checks if the given unit url accepts the given deployable unit name.
Initialize the deployable unit with the given url and name.
Start deployable unit.
Stop a deployable unit.
Show the deployment status.
Execute actions after commit.
Execute actions after commit priority actions.
Execute after rollback actions.
Execute actions before commit.
Execute actions before commit priority.
Returns the names of all tracers defined by this instance.
Create a tracer with the given name.
Remove the replicated data.
Process a slee component with usage parameters.
Gets an object pool by id.
Create an object pool.
Executes an activity.
Start an activity.
Ends an activity.
Checks the preconditions for fire event.
Fire an event.
Generate sbb local object.
Make getter method.
Convert the given string to an object.
Sets the profile id.
Extract the message from the result.
Returns true if the given object is a sbb local object.
Checks if all elements in the collection are contained in this collection.
Remove all elements from the given collection.
Returns true if this level is higher than the other level.
Resolves the object.
Cleans up the pool.
Add a profile object to the transaction manager.
Returns the profile object associated with the given profile name. If the profile object does not exist it
Passivate profile object on tx end.
Sets the value as a text.
Generate activity context interface.
Generate concrete methods.
Sets the value of a data attribute.
Add a name binding.
Remove the naming bindings from the cache.
Remove a name binding from the cache.
Attach a timer to the cache.
Remove all timers from the container.
Attach sbb entity to the cache.
Detach a sbb entity from the cache.
Gets sorted sbb attachment set.
Ends the activity.
Add a deployable component to this container.
Gets the external dependencies.
Checks if the dependency is satisfied.
Returns true if this list contains duplicates.
Gets the install actions.
Returns a collection of uninstall actions.
Checks if there is a referring du.
Close a profile table.
Get an object name from a profile table name and profile name
Write mode.
Resumes the profile if it is writeable.
Suspend the transaction manager.
Returns true if cmp field is set before non set field.
Invoked after getting cmp field.
Invoked before management method invocation.
Invoked after a management method invocation.
Delete a file or directory.
Create the default constructor.
Creates the default usage parameter getter.
Create the sbb entity getter and setter.
Create fire event methods.
Create a method for the concrete activity context interface.
Add a query expression to the list.
Associates the specified object with the specified key in the map.
Rebinds the given object to the given target object.
Decorate abstract sbb.
Invokes the given method with the given arguments and returns the result.
Gets the real field name.
Sets the value of a field.
Gets the value of a field of the given type.
Initialize the profile with the given name.
Unset the profile context.
Gets the profile local object.
Fires a add or update event if the object is ready.
Gets the slee10 wrapper.
Create a class with the given name and interfaces.
Create inheritance link.
Add member values to annotation.
Gets the activity context interface for the given activity.
Gets the class pool.
Sets the deployable unit.
Cleans up all resources that were undeployed.
Executes an activity.
Checks if the searched class or interface is a class or interface.
Returns a map of all methods implemented by the given interface.
Check tracer name.
Handles a query.
Create temp du.
Gets the entity manager.
Starts the server.
Switch safely class loader.
Make a proxy call.
Checks if the transaction is the same as the current transaction.
Converts the last access time to TTL.
Checks if the profile class is visible.
Get profile object valid in current transaction.
Returns a list of logger names that match the regular expression.
Reset the logging levels.
Clear all loggers for the given name.
Add a logger to the management console.
Remove a handler from a logger.
Append a tracer name to log4 j.
sync level with log4j
Assign log4 j.
Reset the cache flags.
Send a trace notification.
Checks if the given tracer name matches the given name.
Write object to output stream.
Read an object from an input stream.
Adds a direct dependency.
Returns a list of all the dependencies of this repository.
Finds the class with the given name in the registry.
Find resource locally.
Find resources locally.
Create and register profile m.
Resumes a transaction.
Gets the sbb i for the given component repository.
Gets the resource adaptor entity links for the given component repository.
Initialize the slee state.
Shutdown slee.
Validates a transition.
Generate named usage parameter.
Add a new value to the query.
Builds a new jdbc instance.
Add a value to the query.
Executes the given operation and closes the connection.
Create a region request from a string.
Returns the region of the box.
Gets the on type.
Sets the viewing hints for this view.
Adds a viewing hint to the view.
Sets the list of renderings.
Adds a list of renderings to the resource.
Merges a list of profiles into an image api profile.
Create a rotation request from a string.
Create a size request from a string.
Initialize the adb connection.
Get the dump of the current process.
Handle pop box command.
Pushes a device to the local location.
Cleans the temp file.
Pull dump to pc.
Get the crash log.
Replaces all occurrences of the given string with the given tab width.
Indents the given number of spaces.
Tokenizes the text.
Create a markdown string from the given text.
Escape special chars within tag attributes.
Adds an exception to the exception list.
Close the statement cache.
Find the parent of the given type.
Write to filer.
Write a bit vector01 divider.
Appends a bit vector to a bit vector.
Reads from the given stream.
Gets a list of objects from a path using the given filters.
Sets the klov report.
Adds a screen capture to the current step.
Set system info.
Create a selector that selects a property.
Create a selector that selects the given property name using the given transform function.
Extract validation annotation data from an array of annotations.
Find all annotations for a given property.
Finds annotations for the given property name.
Gets the property descriptor for the given property name.
Convert a map to an object of the given class.
Create a new t from the given map.
Convert an object to a map.
Convert an object to a map.
Returns a map of values for the given annotation.
Create a composite validator.
Lookup the list of validators for the given meta data.
Looks up a validator in the registry.
Apply validation meta data properties to validator.
Removes the given property from the given map.
Tick the clock with the given time.
Returns the size of the cache.
Generates a hash code for the given object.
Opens the database.
Puts all values in the given map.
Remove all keys from the database.
Returns an iterable that iterates over the elements in the database starting at the given key.
Load all by keys from the database.
Flushes and closes the database.
Reduces the array by the given object.
Reduce by r.
Computes the variance of an array of doubles.
Returns the mean of the values in the array.
Invoke method from object argument.
Reduce the array by the given reduce by.
Returns a string representation of the given timestamp in UTC.
Returns true if the object matches the criteria.
Create a not in criterion.
Create a criteria from a list of objects.
Create a criteria from a json string.
Adds an array of integers to the end of the array.
Returns the largest element of the array or null if the array is empty
Returns the first element of the list.
Returns the last element of the list.
Returns the last element of the list.
Returns a list with the least count elements in the list.
Returns the minimum element of the list or null if the list is empty
Returns the minimum element of the array.
Process an array of maps.
Handle collection of maps.
Create an object from the given map.
Returns the value associated with the given key.
Create a tool tip with the given name space.
Add a decoded number to the character sequence.
Process the write queue.
Starts the executor service.
Returns the string at the given index in the given string.
Returns the first character of the given string starting at the given index.
Checks if the given string is in the given chars array.
Add a character to a string.
Add objects to a string.
Compacts a string.
Splits a string into an array of strings.
Splits a string by space.
Splits a string by pipe.
Converts a char array to a string array.
Converts a string to camel case.
Returns true if start is inside of end.
Under bar case.
Convert a number to a string.
Sorts an array of sorts.
Sorts the given list according to the given fields.
Returns a comparator for the given fields.
Gets the child comparators.
Returns true if the value is contained in the map.
Compares two ints and dies if they are equal.
Compares two int arrays and dies if they are equal.
Returns the sum of the values in the array.
Rounds a number to power of 2.
Sorts the given list using the given sort by and fields.
Sorts the given list using the given sort by and fields.
Sets the value of a field from a map.
Convert the given object to a list.
Create the SQL to load all version data by keys.
Creates a deep copy of a list.
Checks if a value1 has a field with the given name.
Checks if the class has a field with the given name.
Checks if the class has a field with the given name.
Gets the first comparable or primitive field from the given class.
Gets the sortable field from the given value1.
Compares two cache entries.
Compares the time of this entry with the other entry.
Sorts the given list according to the given sort criteria.
Sorts the given list according to the given sort by.
Sorts the entries of the given map using the given string sort algorithm.
Sorts the values of the given map according to the given sort by the given string.
Sorts the keys of the given map according to the given sort by the given string.
Sorts the given array by the given string using the given sort by.
Returns a universal comparator for the given field access field.
Returns a universal comparator that compares two objects using the universal sort algorithm.
Gets the value associated with the given key.
Gets the silent value for the given key.
Evicts the cache entry if needed.
dynamically initialize the value if not already initialized.
Allocate a buffer of the given size.
Determines if we should exit or not.
Manages the input writer channel.
Flushes the queue empty if the queue is full.
Starts the monitor.
Starts the receiver.
Gets the object with the given key from the map.
The main query plan.
Performs a filter on the given group.
Tick the file to the given time.
Synchronizes the output stream to disk.
Cleans up the output stream.
Writes the next buffer to the output stream.
Writes a byte buffer to disk.
Initialize the output stream.
Put all values in the map.
Convert the given key to a byte array.
Reads a list of meta data from the given properties file.
Extracts the validator meta data from a string.
Gets the validator meta data for the given property.
Extract validator meta data.
Extract meta data from annotations.
Convert annotation data to validator meta data.
Splits the given string using the given split character.
Splits a string by white space.
Splits a string by the given delimiters.
Remove all characters from a string.
Splits the given string using the given delimiters.
Parse a double from the given buffer.
Parse an int from the buffer.
Parse a long from the given buffer.
Gets a property by path.
Gets the fields from the given object.
Gets the type of a property.
Injects an object into a property.
Sets the value of a property in a class.
Gets the value of a collection property.
Gets the value of a property from an object.
Gets the int value of a property.
Initializes the message.
Create a message with the given key and list of arguments.
Create a message.
Converts a list of keys to an array of values.
Gets the subject.
Parses the given text as an object.
Send a request to the server.
Delete a db.
Create a db.
Get a list of uuids.
Trigger replication result.
Query for value.
Sets whether the view is descending.
Synchronize all design documents in the desk.
Get design document from db.
Get all design documents from the desk.
Get a design document from a desk.
Saves the replicator.
Find replicator document.
Find all replicator documents in the database.
Remove a replicator from the database.
Finds an object by its id.
Returns a list of documents that match the given query.
Checks if the document contains the given id.
Executes a list of objects in the database.
Sends an object to the server.
Executes a PUT request.
Sends a POST request to the given URI.
Execute a DELETE request and return the response.
Validates the response.
Sets the entity.
Adds an attachment to the attachment map.
Get a list of changes.
Reads the next row.
Convert the money to a string.
Shuts down the locks.
Writes the given observable to the given servlet output stream.
Add tags to a metric.
Verify and create temp tables.
Gets the id of a namespace.
Checks if is query.
Send authentication request.
Gets the verb.
Generate subject access review.
Release a connection from the pool.
On request failure.
Initializes the given session.
Finds all scheduled jobs.
Creates a list of points from the given map using the given factory function.
Ends an exchange.
Finds all data from a bucket.
Create buckets from step.
Send a message to the producer.
Send a message to the producer.
Send a message to the producer.
Perform a scan on the string cursor.
Adds a file to the zip.
Replaces the given text with the given file.
Builds the zip file.
Generates metrics for the given component and product.
Fetch the content of the given id from the cache.
Download the content of an order item.
Upload a transformation to a container
Generates a file generation metrics for the given components.
Creates a file in the given parent directory.
Ends the current object.
Register a model adaptor for the given type.
Register a renderer for the given type and renderer.
Prepare the template.
Adds a domain object to the assembler.
Sets the value of a property.
Adds a child object to this collection.
Creates a supplier for files in a directory with the given prefix and suffix.
Copy the contents of the input stream to the output stream using the given assembler.
Parses a document from a file.
Parses an XML document from the given reader.
Returns the elements in the given parent element.
Returns a stream of nodes in the given parent element.
Returns the first child element with the given name.
Returns a stream of named elements in the given parent element.
Validates the given XML against the given schema.
Entry point for the archiver.
Create a builder from an input stream.
Create a builder from a resource.
Process the given entry using the given processor.
Encodes the given string using the URL encoding.
Sets the signature of the request.
Remove white space from a char array.
Sign the request handler.
Sets the data for the given object key.
Complete multi upload.
Handles the request for a specific notification.
Add an entry state to the notification.
Returns true if the buffer has expired.
Get notification by id.
Gets the addressees for the given id.
Get a specific addressee.
Gets events by notification id.
Gets an event by id.
Returns the rest of the notification for the given id.
Gets the jpa entry with the given id.
Gets the authentication token.
Returns the total number of notifications in this notification category.
Adds a list of categories to the notification.
Fetch the notification response from the portlet.
Creates an error notification with the given error message.
Converts a portlet response to a notification response.
Reads a notification entry from the database.
Attach actions to the notification entry.
Normalizes a link.
Gets the notification category.
Gets the notification source.
Invokes the read notices for the notification.
Read a notification response from a file.
Gets the school id from the request.
Extract user id from response.
Snoozes a notification from the target.
Returns a map of the notification attributes.
Normalizes a vector.
Returns true if the two boxes are contained.
Sets the closest point to the given point.
Computes the sign of this vector.
Sets the values of this object to the values of the given object.
Sets the value of this matrix to the given values.
Converts the input to the output.
Convert a quadrilateral to a quadrilateral.
Computes the bounding box of a quadrilateral and a bounding rectangle.
Computes the bounding rectangle for a polygon.
Computes the center of a quadrilateral.
Computes the average of a vertex.
Creates a convex hull from a list of points.
Removes a polygon from the polygon at a given tolerance.
Calculates the average of the error of a point.
Computes the area of the triangle.
Returns true iff quadrilateral contains pt.
Returns true if pt is contained in a triangle.
Computes the intersection of two triangles.
Computes the intersection of two vectors.
Computes the intersection of two lines.
Computes the intersection of two vectors.
Computes the intersection of two vectors.
Returns true if the ellipse is inside the rotated ellipse.
Computes the intersection of two triangles.
Gets the value at the given index.
Convert a matrix to a quaternion.
Rotates the x - axis.
Sets the value of the x axis to the given value.
Sets the y component of the r.
Sets the z component of a r.
Sets the z component of a d r to a z value.
Converts an euler to a matrix.
Computes the rotation about the axis.
Sets the angle of the slope.
Create a twist coordinate from a motion and a twist coordinate.
Sets the initial and end transforms.
Interpolates the vector by the given where and output.
Compute the svd of a list of points.
Solve a point problem.
Returns the side length of the vertex at the given index.
Returns true if d is inside this convex.
Convert a conic general f64 to a d r.
Convert conic general f64 to d.
Convert a conic general to a parabola general.
Convert parabola general to conic general.
Divides p by v.
Convert a matrix to a matrix.
Convert a 3 - tuple to a 3 - tuple
Sets the parameter vector of rotation.
Returns the distance between two points.
Returns true iff two lines intersect.
Checks if the plane is contained in the plane.
Returns true if the line intersects the sphere.
Interpolates two se2 f64 values.
Extract the quaternion from a simple matrix.
Processes the given array of data.
set to no motion
Convert a f64 - encoded object to homogeneous.
Convert a se2 f64 to homogeneous.
Create a se3 f64 axis.
Checks if two vectors are identical.
Convert a latlon to a unit vector
Draws a circle.
Computes the squared radius of a circle.
Returns the closest point between two points.
Computes the closest point to a line.
Returns the closest point of the plane to the found point.
Calculates the closest point to a line.
Finds the closest point of a triangle.
Transforms a se2 f64 to a result.
Transform a vector of points to a vector of points.
Returns true if this quadrilateral is equal to the given quadrilateral.
Calculates the acute angle between two points.
Convert a point to a point.
Convert a d to a d.
Convert a d to a d.
Convert a d to a d.
Convert two vectors to a - b.
Convert two points to a slope.
Convert a d to a d.
Convert a d to a d.
Convert a d to a d.
Convert the input to the output.
Convert the input d to the output d.
Convert a se3 f64 plane to a world
Point 2 dto3.
Convert a plane to a world.
Returns true if t is identical to tol.
Returns a copy of this vector.
Returns the squared norm of this vector.
Computes the tangulation of a point on a line.
Returns true if this element has uncountable values.
Checks if the given parabola is equivalent to this one.
Computes the center of the poi.
Computes the acute angle between two lines.
Returns true if p is infinite h.
Generates a list of random n elements.
Returns a new d with the same element as p.
Subtract two numbers and return the result.
Returns true if xa and yb are identical to tol.
Sets the value of this rectangle to the given value.
Convert an ellipse rotated f64 to a quadratic.
Computes the point of a rotated ellipse.
Computes the angle of a rotated ellipse.
Computes the tangent of an ellipse.
Selects a tangent from the line.
Gets the corner at the given index.
Computes the Euclidean distance between two vectors.
Calculates the Euclidean distance between two points.
Calculates the Euclidean distance between two points.
Returns the distance between the plane and point.
Returns the distance between a point and a cylinder.
Returns the Euclidean distance between two segments.
Returns the squared Euclidean distance between two segments.
Returns the Euclidean distance between the quadrilateral and d p.
Computes the squared Euclidean distance between two quadrilaterals.
Returns the Euclidean distance between poly and p.
Returns the squared distance between the poly and p.
Calculates the origin of a line.
Returns the Euclidean distance between the ellipse and d p.
Returns the Euclidean distance between two ellipse.
Adds a transform to the path.
Returns the closest point to a line and p.
Returns the closest point of a rotated ellipse.
Solves the polynomial with the given data.
Creates a random number from a range of values.
Returns the canonical form of a d.
Checks if two vectors are identical.
Normalizes a vector.
Creates a matrix with the given values.
Convert a number to a d.
Returns the Euclidean distance between the two points.
Sets the ellipse.
Normalizes the vector so that it can be normalized.
Returns the distance between two triangles.
Computes the quadrilateral of a quadrilateral.
Returns the simple polygon of a polygon.
Calculates the mean of a list.
Calculates the order of the points in CCW.
Computes the normal of a list of points.
Checks if is convex.
Multiply this vector by a scalar.
Returns the maximum absolute value of this vector.
Computes the Euclidean distance between two points.
Returns the squared Euclidean distance between two points.
Generates a list of random numbers from a plane.
Generates a list of random numbers.
Creates a list of random numbers from a mean and a standard deviation.
Calculates the mean of a list of points
Calculates the mean of a set of points.
Invalidates all JWTs from the cache.
Invalidates all cache entries with the given predicate.
Combines a collection of strings to a set of strings.
Get server features from a directory.
Get the configuration of the dropins features.
Gets the server xml features.
Parse the include node.
Parse feature manager node.
Download jsons.
Creates a set of liberty features from a set of json files.
Checks if the list of features to install is the only open liberty feature.
Returns true if reference contains all of target ignoring case.
Gets the next product version from a version string.
Extracts the symbolic name from a jar file.
Get the map based on the install kernel jar.
Checks if the two files are a replacement jar.
Extracts the version number from the file name.
Compares two strings.
Get information about a product.
Checks if is spring boot uber jar.
Gets the arquillian property.
Returns true if the file extension is valid.
Moves the pen to the center of the given length.
Checks if two objects are equal.
Load an integer from a string.
Throw pizza party.
Verifies the approvals of the turtle
Swaps the blank value of the given target.
Gets the distance to the goal.
Prints a formatted string using the specified format and arguments.
Prints a formatted string using the specified format and arguments.
Make a number of fish.
Prints a variable to stdout.
Uniformly uniformly between two integers.
Uniformly uniformly between two numbers.
Calculates the poisson of a number.
Discrete an array of doubles.
Capitalizes the first character of the word.
Capitalizes the first character of the word.
Fixes a path.
Join to string.
Gets the sentence of a basic token.
Authenticates the token and adds it to the response.
Extract auth token from cookie list.
Register bindings in the given environment.
Gets all permissions for a role entry.
Adds a projection to the list with the given alias.
Converts a job info to a job detail.
Convert a trigger to a trigger.
Sets the repeat count and interval values for a trigger.
Sets the start and end time of the trigger.
Sends an item to the queue.
Writes the output to the output stream.
Initializes the scheduler.
Returns a sorted list of all fields of the given class.
Returns a map of field names to field values.
Configures the encryptor with the given configuration.
Generates a hash of the given attributes.
Generate a token string.
Sends a message to the receiver.
Generates a strong password.
Returns the user with the given username.
Hashes the given password using the given account name.
Verifies the account name strength.
Indicate that the transaction is successfully committed.
Rollback the transaction.
Starts the transaction.
Checks if the user is authorized to access the token.
Parses an object to a date.
Gets the response.
Create a restriction that is equal to the given value.
Create a restriction that is not equal to the given value.
Creates a restriction that is less than the given object.
Creates a restriction that is less than the given value.
Create a restriction with a greater than operator.
Create a restriction that is greater than the given value.
Create a restriction that contains the given value.
Creates a restriction with the given name and value.
Create a namespace manager with the given namespace and href.
Returns a new resource representation with the given content.
Returns a new resource representation with the given rel.
Returns a new resource representation with the given value.
Returns a resource representation with the given namespace and href.
Decodes the given byte array and returns true if it can be decoded.
Encodes the given string into a byte array starting from the given offset.
Compares two readers for equality.
Copies a file or directory.
Touches a list of files.
Returns the base name of the file.
Adds padding to the buffer.
Returns the short name of the given class.
Returns a set of all super types of the given class.
Verifies the given password against the given salt.
Reads a line of text from the system in using the given charset.
Appends a byte to the buffer.
Appends the given bytes to the buffer.
Returns a copy of the given array.
Adds a fraction to this fraction.
Subtract a fraction from this fraction.
Multiplies this fraction by the given fraction.
Divide this fraction by the given fraction.
Returns the maximum of the given values.
Returns the minimum of the given values.
Throw an exception if the condition is not met.
Fetches the forecast for the given longitude latitude and altitude.
Fetches the content of a longitude latitude and local date.
Fetches the content of the meteo service.
Finds a list of hourly extras forecasts from the current date.
Find the closest forecast for a given date time.
Fetch weather data from meteo.
Create a long term forecast.
Creates a long term forecast.
Parses a location from a string.
Fetches the content of the meteo service.
Create wind symbol name from point forecast.
Find beaufort level.
Create a uri from a string.
Returns true if the current date is a sun period.
Returns the point forecast for the given date time.
Get the best fit period forecast.
Fetch the weather data for the given longitude latitude and latitude.
Fetches weather data from meteo.
Update the database.
Invoke a method on a script engine.
Acquires an object from the pool.
Get referenced object.
Get a reference to a wrapped object.
Gets a configuration object from the service.
Checks if substitutor is enabled.
Create an iterator for the given service and name.
Get decoder.
Returns a list of services for the given intf.
Gets the module of the given interface implemented and type.
Acquires a stream from the pool.
Returns the size of the data source.
Create a new referenced data object with the given reference and data.
Gets the component at the given index.
Returns the prefix of the given index.
Returns true if the compiler is colored.
Execute a pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern
Find loop.
Subset the given subexpression.
Returns true if t is disjunction of t.
Clone the outs of the old state to the new state.
Optst a subre.
Marks a subre as inuse.
Create a nfa node from a subre.
Parses a subre.
Recursively deltraverse a state.
Defines a nonword colorcomplement
Clones a word.
Scans a number.
Bracket the current state.
Scan plain.
Creates a new lacon if the number of lacons is equal to num.
Adds a onechr to the nfa if the cflags is reg icase.
Dovec - prints a unicode set.
Returns the color of the given character.
Returns the pseudocolor of this color.
Processes a subrange of the given state.
OK colors.
Sets the colorchain of a arc.
Uncolorchain a arc.
Dumps the current colors.
Starts the current token.
Sets the lexnest pattern to the interpolated character array.
Returns the color for the given codepoint.
Initialize the state set.
Returns the number of times the last progress has been seen.
Returns a set of unicode classes for the given character.
Returns the unicode set for the given cclass name.
Sorts the arcs in ascending order.
Creates a new state with the given flag.
Moves the arcs from old to new state.
Move the arcs from old to new state.
Copy arcs from old state to new state.
Copies all outs from old to new state.
Drops a state from the graph.
Frees a state.
Copy an arc from one state to another.
Duplicates the state s and stmp.
Set the special colors for the current node.
Dump the nfa.
Dumps a state to a string.
Dumps the arcs of the state s to the given string builder.
Dumps a arc to a string builder.
Optimize the input string.
Analyzes the arcs.
Combines two arcs.
Cleans up the state machine.
Marks a state as reachable.
Marks a state that can be reached by another state.
Fixempties the NFA.
Returns true if arc a is empty.
Get the rule parameters.
Get rule interpreter plugins.
Get the report plugins.
Gets the rule selection for the given rule set.
Runs the command line.
Returns the error message for the given exception.
Gather standard options.
Gather tasks options.
Gather task names from a task factory.
Interprets the command line and interprets the command line.
Gets the command line from the command line.
Execute a task.
Read properties.
Prints the usage.
Gets the home directory.
Create a plugin class loader.
Returns a hash set containing the ids of all cells in this set.
Returns the ids of all cells intersecting the given bounds.
Returns the uri for the given method and target.
Add a route to the router.
Returns the number of routes in this list.
Add a route to the first router.
Add a route to this router.
Add a route to the last router.
Returns true if any of the given tokens are matched.
smart equal comparison.
Get store file name.
Compare two folders.
Compare two entries.
Compare two bookmarks.
Sets the last modified time of the servlet.
Returns the list of dependants.
Find a class by its name.
Parses an authorization header and returns an array of tokens.
Returns a new instance of the mapper.
Map a function to a method.
Returns a mapper for a function.
Resolve a method by prefix and local name.
Sets the values of the character array.
Resolve a variable.
Parse a node. nodes file.
Parse a node. nodes file.
Parse the tag file directives from the given file.
Create a compiler.
Gets the resource as stream.
Calculate the last modification timestamp.
Find all class loaders in the stack.
Checks if the given classloader is a parent of this classloader.
Start loading the given name.
Reads a header from the input stream.
Paginates a list of data.
Extract meta key from string.
Fill requirements.
Get a tag file info.
Parse implicit tld.
Returns the checksum for the given file name and algorithm.
Gets the size of a file.
Validate channel name.
Seeks to the given block number.
Locates a block by pos.
Gets a list of artifacts from a supplier.
Update opt state and reps.
Calculates the 1 byte price for a given state.
Calculate the number of reps for a given state.
Calculating the normal match prices.
Throws an exception if the expected byte is not a valid UTF - 8 byte.
Throws an exception if the byte is invalid.
Scan tlds.
Scan tld.
Adds a wrapper to the jsps map.
Gets the parent class loader.
Sets the bytecode for the given name.
Returns the birth time for the given name.
Saves a bytecode to a file.
Check compile.
Initialize the classpath.
Starts the thread.
Stops the thread.
Runs the task.
Find channel by name.
Find a channel by it s name.
Update deploy group cache.
Copy the contents of the input stream to the output stream.
Parse a node.
Parses the attributes.
Add a list of files to the include list.
Parse jsp attribute and body.
Adds an attribute to the map.
Adds a child node to this node.
Returns an iterator over the attributes.
Returns an iterator over the children of this node.
Returns an iterator over the children with the given name.
Converts this coordinates to a base coordinates.
Finds the alias for the given variable.
Sets the thread.
Unset the thread.
Finds a stream.
Write an optional field to the writer.
Write a string to a writer.
Add an element to a parent element.
Adds the first element to the given parent element.
Writes the next character to the given writer.
Sets the writer to use.
Allocate a buffer of the given length.
Map a page of node. nodes.
Returns the state with the same key as the given parent state.
Registers a model with the given provider.
Stream an input stream to the data path.
Monitor a job.
Check if the request is authenticated.
Finish writing to the output stream.
Create a new gson instance.
Encode for LZM.
Returns a new map with the union of the provided meta data and extracted meta data.
Gets the jsp exception from the servlet request.
Checks if a coordinate ends with a checksum.
Finishes writing to the output stream.
Gets the jsp runtime exception.
Evaluate an expression.
Returns the prefix from the osgi properties.
Checks if the given path is an XML file.
Parse a tag file directive.
Load a tag file.
Remove generated proto type files.
Sets the root of the URI.
Scans a list of files and adds them to the pages.
Locates the root of a file.
Moves the cursor to the next available position.
Checks if the given string matches the pattern.
Returns true if the given string matches any of the optional spaces.
Finds the next mark in the string until the limit is reached.
Marks the end of the string as esc.
Skip until the next character of the given tag is encountered.
Parses a token into a string.
Pop a file from the stack.
Make this coordinates unclassified.
Filters a list of factory IDs by a predicate.
Gets the ids of the missing factories.
Set the schema resource prefix.
Set dtd resource prefix.
Convert a tree node to a tree node.
Merge errors.
Initializes the given binder.
Scans the service references for channel aspect informations.
Unqualify the given path.
Invoke a custom tag plugin.
Get a byte array of the given size.
Get an int array from the cache. If the cache does not exist an empty array is returned
Create an aether result from a collection of results.
Get resource as stream.
Validates the given page.
Push a stream onto the stream stack.
Get the encoding of a jar file.
Report a fatal error.
Gets the real path from the resource.
Gets a resource from the URL.
Gets the resource as a stream.
Returns a set of resource paths for the given path.
Logs the given message and throwable at the current log level.
Add a filter.
Get the size of a dictionary.
Get memory usage.
Set preset dict.
Moves the window to the new location.
Fill the window with data from the given byte array.
Process pending bytes.
Gets the match len from the buffer.
Returns the length of the match.
Verifies that the matches are the same.
Moves the cursor to the next available position.
Recycles the buffer.
Flushes the buffer to the output stream.
Clears the buffer.
Flushes the buffer to the output stream.
Closes the response.
Writes a string to the output stream.
Report an error.
Make a key from the meta data.
Generate the class.
Compiles the file.
Initialize compiler.
Checks if a system jar is in webinf.
Quote a char.
Generate declarations.
Compile a tag handler pool list.
Generate prolog.
Generate common postamble.
Generate the postamble.
Generate a generator for the given page.
Generate tag handler attributes.
Read the properties from the given stream.
Export a channel to a zip file.
Validates the given XML view.
Gets the handler for the given class.
Parses an expression into an el. nodes tree.
Selects a property from a group.
Check if the given URI is a jsp page.
Prints a comment.
Prints a string to the output.
Prints a string to the output.
Print a multi - line string.
Gets the expression in XML.
Check scope.
Escapes the given string as an XML string.
Validate expressions.
Get the tag handler class name.
Creates a java package identifier from the given path.
Splits a path into a list of comps.
Make a java identifier.
Mangles a char to a string.
Checks if the given key is a java keyword.
Adds a property to the map.
Returns the string representation of a modifier.
Returns a sorted set of metadata for the given namespace and key.
Runs the modify operation.
Returns the basename of the given string.
Puts a string value into the cache.
Loads the metadata for the locator.
Builds a collection of metrics from aggregated payload.
Resolves a number.
Write object to output stream.
Gets the TTL for a rollup.
Create prepared statements.
Track delayed metrics for a tenant.
Track delayed aggregated metrics for a tenant.
Read an unversioned double from the stream.
Write an unversioned double or long.
Gets all properties.
Create a container in the blob store
Schedules all eligible slots.
Clears all running slots for the given slot.
Registers a callback to be invoked when an event occurs.
Registers a listener to be called once for an event.
Removes an event from the list of callbacks.
Emits an event to all registered callbacks.
Returns a list of listeners for the given event.
Returns the remote name.
Append rollup event to output stream.
Parses a timestamp from a file name.
Starts the server.
Gets the rollup computer from a rollup type.
Create an io instance from the configuration.
Puts an entry into the builder.
Computes the maximum number of headers and outputs.
Formats a header.
Formats the given outputs using the given output formatters.
Registers metrics with the given registry.
Sets the name of the thread pool.
Add a metric to the set.
Gets the complete metric names.
Gets a list of tokens from a locator.
Asynchronous put operation.
Returns the granularity from the points less than or equal to the requested duration.
Sets the current time of the server.
Returns the set of unique hosts.
Gets the max connection per host.
Returns an iterable over the metric column families.
Insert metrics from a collection of metrics.
Insert metrics.
Returns the set of locators.
Gets the regex to grab the next level of the given query.
Starts the uploader.
Stops the uploader.
Checks if locator is currently in batch layer.
Checks if locator is currently in discovery layer.
Checks if locator is currently in token discovery layer.
Checks if a delayed locator for a particular slot is inserted.
Sets the delayed locator for a slot.
Returns a map of range to iterables.
Returns an iterable that iterates over the ranges of the given granularity.
Insert a collection of metrics into the cassandra table.
Insert metrics into the keyspace.
Returns true if the given metric is delayed.
Gets the bound statement for a metric.
Gets the metadata values for the given locator.
Check if the content type is valid.
Checks if the accept header is valid.
Inserts a list of i objects into the index.
Checks if the number of gauges and sets are valid.
Checks if the file manager is running and terminates.
Returns a new instance of the extractor.
Returns true if the given os name prefix and os version are compatible with the given prefix.
Starts the process.
Stops the process.
Create a default signaling params instance.
Add a list of servers to the list of servers.
Adds a new server to the list of servers.
Sends a message to a user.
Sends a message to all peers.
Gets the value of the weitere adresse property.
Gets the value of the simplefield property.
Gets the value of the anyfield property.
Sets the api suchfelder.
Gets the value of the multimedia anhang property.
Gets the value of the vbm property.
Gets the status i.
Gets the status typ.
Gets the importmodus.
Gets the adressdruck.
Gets the waehrung.
Gets the bodenbelag type.
Sets the region.
Sets the value of the area property.
Sets the value of the address property.
Sets the value of the description property.
Sets the rent collection period value.
Sets the value of the furnished property.
Sets the phone1 field.
Sets the phone2 property.
Sets the contact name.
Sets the phone info.
Sets the main email.
Sets the value of the cc email property.
Sets the external id.
Sets the agent id.
Sets the value of the epart property.
Sets the value of the jahrgang property.
Sets the value of the gebaeudeart property.
Sets the buero typ.
Checks if the string is numeric.
Sets the value of the gebiete property.
Sets the gruppe value.
Sets the agent.
Gets the value of the property property property.
Sets the stand status.
Gets the value of the user defined extend property.
Sets the zeiteinheit property.
Gets the value of the zimmer property.
Getter for the haus property.
Gets the value of the praxen property.
Gets the value of the gastgewerbe property.
Gets the value of the forstwirtschaft property.
Gets the value of the sonstige property.
Gets the value of the zinshaus renditeobjekt property.
Gets the terrain.
Sets the value of the umfang property.
Sets the value of the wohnungtyp property.
Returns the country of the given country or null if not found.
Returns the country of the given iso3 code.
Returns the country of the given country or null if not found.
Returns the country of the given iso2 code or null if the given iso2 code is not
Returns the name of the given country or null if not found.
Returns the name of the given country in the given language.
Gets the value of the anbieter property.
Sets the category value.
Gets the value of the pdf property.
Sets the value of the aktionart property.
Sets the value of the realestateitems property.
Sets the pacht.
Upgrade a document from the previous version to the new version.
Gets the value of the content property.
Gets the field names.
Sets the value of the blick property.
Sets the value of the pauschalmiete property.
Sets the monatsmiete value.
Gets the parkplatz.
Sets the lastenaufzug property.
Sets the zustand art property.
Gets the value of the feld property.
Dumps this record to the given writer.
Gets the value at the given position.
Prints the current record to an iterable.
Sets the value at the given position.
Sets the type of the check.
Sets the value of the haustyp property.
Gets the value of the energiepass property.
Sets the value of the keller property.
Sets the grundst typ.
Sets the geschl attribute.
Sets the hallen typ.
Gets the wiederholungstermin property.
Gets the teilungsversteigerung.
Upgrade a document from the previous version to the new version.
Gets the value of the bevorzugt property.
Gets the value of the wunsch property.
Sets the value of the art property.
Sets the modus.
Gets the value of the sonstige property.
Gets the value of the tel sonstige property.
Sets the handel typ.
Set the api suchfeld1 value.
Sets the api suchfeld2 property.
Set the api suchfeld3 value.
Gets the row.
Sets the distanzen zu sport.
Gets the value of the anhang property.
Gets the garagen kategorie 2.
Gets the objektzustand type.
Gets the haus kategorien.
Gets the ausstattungsqualitaet.
Gets the value of the vermarktungsart property.
Gets the value of the interessent property.
Sets the value of the wert property.
Sets the ackerland.
Sets the value of the bauerwartungsland property.
Sets the bootsstaende property.
Sets the value of the buero.
Sets the camping.
Sets the value of the doppelhaus property.
Sets the einfamilienhaus property.
Sets the value of the gross property.
Sets the value of the klein property.
Sets the garagen property.
Sets the value of the garten property.
Sets the gastronomie property.
Sets the value of the gewerbe property
Sets the hotel property.
Sets the industrie property.
Sets the keine bebauung.
Sets the value of the kleingewerbe property.
Sets the lager.
Sets the mehrfamilienhaus property.
Sets the obstpflanzung.
Sets the parkhaus property.
Sets the produktion.
Sets the reihenhaus property.
Sets the value of the stellplaetze property
Set the villa property.
Sets the value of the wald property.
Sets the value of anbieter property.
Gets the value of the wohnung property.
Gets the value of the grundstueck property.
Gets the value of the einzelhandel property.
Gets the value of the hallen lager prod property.
Gets the value of the parken property.
Gets the value of the gewerblich property.
Gets the value of the zusatz property.
Gets the value of the stellplatzart property.
Sets the max dauer.
Gets the value of the feature property.
Sets the value of the zimmertyp property.
Upgrade the document from the previous version to the new version.
Sets the keine angabe.
Sets the erdwaerme value.
Sets the solarheizung property.
Sets the pelletheizung.
Sets the value of the gas property.
Sets the oel.
Sets the fernwaerme.
Sets the strom.
Sets the kohle property.
Generates a random string of the given length.
Generates a random string of the given length.
Generates a random string of the given length.
Gets the wohnung kategorien.
Sets the benutzer value.
Sets the value of objekte property.
Gets the value of the feed property.
Sets the moebliert.
Gets the value of the serviceleistungen property.
Sets the value of the sub administrative area.
Sets the city value.
Sets the value of the locality property.
Downgrade a document to a previous version.
Upgrade from previous version to new version.
Sets the land typ.
Gets the value of the field property.
Upgrade a document from the previous version to the new version.
Gets the value of the ad property.
Sets the value of the typ property.
Sets the value of the platzart property.
Gets the verkabelungs typ.
Gets the klimaanlage.
Gets the value of the image property.
Sets the value of the price type property.
Sets the development availability value.
Sets the directions property.
Sets the co2 rating.
Sets the energy rating.
Sets the value of the viewing details property.
Sets the value of the property status property.
Sets the value of the pictures property.
Sets the bebaubar attribute.
Upgrade a document from the previous version to the new version.
Sets the parken typ.
Sets the alter attribute.
Sets the freizeit typ.
Sets the value of the telefonart property.
Sets the value of emailart.
Sets the value of the overseas sales property.
Sets the value of overseas rental property.
Create a simplefield element.
Gets the value of the fehler property.
Sets the erbpacht.
Gets the value of the sonstige property.
Gets the valuelist property.
Sets the min dauer.
Sets the zins typ.
Gets the value of the photo property.
Sets the value of the metadata property.
Sets the projects value for this feed.
Sets the feed properties.
Upgrade the kyero document to the previous version.
Gets the value of the immobilie property.
Gets the value of the objekt property.
Gets the value of the fehlerliste property.
Gets the value of the status property.
Sets the sonstige typ.
Sets the distanz zu value.
Gets the value of the distanzen property.
Gets the value of the distanzen sport property.
Checks if the given exception is compatible with throws clause.
Sets the bindings for the namespace.
Binds a prefix to a namespace URI.
Remove the binding for the given prefix.
Checks if the comment has an opening tag.
Consumes a comment.
Consumes a string from the given line.
Returns the index of the given token in the line or - 1 if not present.
Initialize logging.
Bind a prefix to a URI.
Adds an iterator to the list of iterators.
Adds an option to the list of options.
Add a string option with the given form and long.
Adds an integer option with the given form and long.
Adds a long option to the option list.
Add a double option with the given form and long.
Adds a boolean option with the given form and long.
Parses the command line arguments from the command line.
Creates a new instance of the given class.
Notify the monitor that the access has completed.
Sets the target object.
Prepares the method.
Find the matching method.
Convert an integer to an unsigned string.
Serializes an object to a byte array.
Deserialize an object from a byte array.
Find a child element by tag name.
Get the value of a child element by tag name.
Gets the child elements of an element.
Checks if node name matches desired name.
Checks if the node name matches the desired names.
Set the size of a string.
Monitors an object to the logger.
Adds an entry to the reference monitor.
Returns true if the monitor is still alive.
Calculates the mobile city
Start a prefix mapping.
Terminate a prefix mapping.
Adds a callback to the list of callbacks.
Parses the tree.
Returns the text color of the given item.
Sets the values of this layout.
Get the color of the pressed item.
Sets the size of the paint.
Gets the x position of the divider.
Get the intro from the remote library.
Gets the keyword names.
Returns the arguments for the given keyword.
Returns the documentation of the given keyword.
Starts the remote server.
Stops the server.
Starts the server.
Convert properties from file to json.
Convert properties from file to json.
Converts an input stream to a JSON string.
Convert a properties object to a json string.
Converts a map of string to a json object.
Convert a map of properties to a JSON string.
Convert from values to object map.
Converts a properties object to a json object.
Computes the radius of a shadow.
Creates an OCSP fetcher builder.
Find the intermediate certificate.
Executes the mojo.
Preprocess markdown files.
Substitute variables in a string using the pattern string.
Returns the title of the list of raw strings.
Adds the title to the HTML file.
Replaces variables with the given initial content.
Replaces all relative paths of the given html with the site base prefix.
Copy files from a directory to another directory.
Checks if the given path is a valid path.
Wrap the slider content.
Fades this view up to the given duration.
Fades this duration down to the given duration.
Calculates the percentage for the given width.
Check if the view has the same width as the view.
Creates an intent to launch an activity.
Launch the activity.
Get a list of fact sheets for a given type and relation types.
Download file from response.
Build http client.
Create an access control entity.
Update response with data model
Create a full export.
Sets the host of the token provider to use.
Sets the client id and secret.
Process graph ql.
Get a list of bookmarks for a specific bookmark type group key and sharing type.
Adds permissions to a graph.
Write permissions to a graph.
Mark logic dataset graph with rulesets.
Closes the client.
Executes a select statement on the input stream handle.
Create a dataset graph.
Limit the number of threads to the current process.
Resize the geometry to the given width and height.
Rotate the string with the given rotation angle.
Sets the gravity value.
Strip profiles from the command line.
Add a font with the specified style size and color.
Adds an image to the source.
Adds an image to the command line.
Parses an object into a list of properties.
Prints the usage of the given object.
Extract time unit from string.
Parses the given object into the given properties.
Executes the specified URL in the current thread.
Execute a file.
Interprets the given file.
Sort by size.
Renders the given template text.
Get slide xml.
Checks if the mouse event is in the range of the screen.
Selector that overlaps the specified element vertically and with the specified ratio.
Executes an outbound operation.
Dispatch a message to the sns test proxy.
Require a file resource.
Gets or creates a temp directory.
Creates a log value map.
Logs a formatted message with trace level.
Log a trace event and message.
Log a debug message.
Log a debug event and message.
Logs a formatted message with info log level.
Logs an info event and message.
Record an info event with optional throwable.
Log a warning message.
Log a warning event and message.
Log an error event with the given message.
Logs an error event and message.
Add to context line and method.
Wrapper method for steno serialization.
Write key value pairs.
Serialize throwable.
Returns the log value for this object.
Get caller data.
Create a database with the given name.
Check the mappings for the given position.
Parse save attr.
Save data to object in context.
Refresh the sheet row from the context.
Parse save attr string.
Get save attr list from row.
Get save attr from list.
Sets the save object in hidden column.
Set the save attributes for a sheet.
Set the save attributes for a row.
Prepare the context and attrs for a given cell.
Format a number.
Put shift attributes.
Sets the wb for this workbook.
Gets the wb wrapper.
Gets the formula evaluator.
Recalculate the max col counts.
Load a web sheet from an input stream.
Load web sheet.
Load work sheet by tab name.
Export the content of the file to the output stream.
Saves the current sheet to the database.
Submits the job.
Populate the component.
Get the sheet configuration for the current tab.
Reads an object from the input stream.
Gets the locale for the component.
Get the picture of the current phase.
Gets the cell helper.
Gets the pic helper.
Gets the validation handler.
Gets the chart helper.
Convert a shared formula array to an array of ptgs.
Convert a ptg array to a ptg array.
Convert a ptg array to a watch list.
Create a single ptg array.
Gets the list of rows from the mapping list.
Assembles a list of rows from a mapping.
Build a dynamic row for a base object.
Get the bg color of the plot.
Get a color from a sp pr.
Find automatic fill color.
Get x.
Get x color from ctr color.
Gets the x for the given index and theme table.
Convert a color to a clr color.
Get triplet from xssf color.
Get bg color from cell.
Find component name from class.
Populates the attributes of the given fcell.
Get attributes type match para meter of method.
Sets a property of an object.
Gets the value of an object property.
Setup the control attributes.
Find cell validate attributes.
Setup faces cell charts.
Setup the faces cell charts.
Sets the picture style for the given cell.
Initializes the charts map.
Gets the pie title.
Set the style of a series.
Create a pie3 d chart.
Setup the style of the bar.
Initialize xssf.
Gets the chart id from parent.
Initialize the anchors map.
Generate a single xssf chart.
Evaluates an expression to a collection object.
Get full name from row.
Build upper level formula.
Sets up upper level formula.
Build the cell formula for shifted rows.
Gather rows mapping by full name.
Change the index number in shift map.
Change the upper level final length of a string.
Change the index number in hidden column.
Sets the full name of a column in a row.
Gets the original row number in hidden column.
Sets the original row num in hidden column.
Find parent rows mapping from shift map.
Find row mapping from shift map.
Find item in collection.
Build current range.
Checks if the given configuration range is a row of the given index.
Checks if the given row is a ref of the given range.
Replace expression with cell value.
Returns the cell range index for the merged region of a sheet.
Returns the list of skipped regions in the specified sheet.
Add skip cell to list.
Build a sheet comment from a list of tie command aliases.
Build a cell comment from a tie command alias.
Builds the sheet configuration.
Gets the sheet configuration.
Build form command from sheet configuration.
Verifies that the last cell of the given stoppoint is a blank cell.
Build the sheet.
Check and repair last row.
Build command list from sheet comment.
Add a command to the list.
Checks if a command list contains one or more commands.
Match command to sheet config form.
Copy template for tie commands.
Build command list.
Process a method line.
Process a command line.
Move a comment to a sheet.
Create a config command.
Build command attributes map.
Gets the sheet configuration from the form command.
Sets the footer of the form command.
Sets the body of the sheet configuration.
Sets the header of the sheet configuration.
Delete a row.
Remove ranges from shift map.
Finds a list of full names from a sheet.
Get a command from a map.
Insert an empty object into the context.
Delete object in context.
Prepare collection data in context.
Index command range.
Check if a row can be added to a sheet.
Insert each template in the source config range.
Evaluates normal cells.
Evaluate user formula.
Checks if a string is a user formula.
Create a comment for a cell.
Evaluate boolean expression.
Remove rows in a sheet.
Remove a single row from a sheet.
Remove a cached cell from a sheet.
Remove rows in body.
Load a picture from the current page.
Load a chart from the current page.
Assemble a new value.
Formats the given cell using the given formula evaluator and formatter.
Gets the cell value without format.
Returns the string value with the given cell type.
Gets the cell string value with a number type.
Sets a cell value.
Sets the type and value of a cell.
Sets the boolean value of a cell.
Set cell value date.
Sets the cell type to numeric.
Copy rows from src sheet to dest sheet.
Copy a single row from one sheet to another.
Copy a cell from another sheet to another sheet.
Copy the value of a cell to a new cell.
Copy style from source cell to new cell.
Clones the comment of a cell.
Creates a client anchor for a comment.
Create or insert a comment in a cell.
Match comment settings.
Get drawing from cell.
Get the shape from a VML source.
Get cell style from source cell.
Convert a cell to a cell range address.
Get row col from component attributes.
Gets the initial rows from the given configuration.
Get faces row from body row.
Get faces cell from body row.
Get poi cell from sheet.
Gets skey from poi cell.
Gets or adds a tie cell to a map.
Returns the current data context name.
Evaluates the given expression using the given context.
Evaluate the expression.
Write an object to the output stream.
Remove a row from the map.
Merge a map into this one.
Recovers all rows from the given sheet.
Gets the chart type.
Convert a stroke style string to a basic stroke.
Initialize chart data from xssf.
Set up chart data.
Initialize xssf.
Initialize the xssf.
Gets the chart id for the given ctanchor.
Gets the chart id from child node attributes.
Build each object.
Save data in context.
Recalculate the formula.
Gets a poi cell from a sheet.
Gets the faces cell with the given row index and column index.
Restore data context.
Returns the last collection object with the given full name.
Check if we need to restore the data context.
Restore data context.
Shift row ref.
Set the first row ref.
Set the last row and ref of a sheet.
Builds the cells for a row.
Build single cell.
Read an object from an input stream.
Build the category list.
Build a series list.
Build a chart series from a list of objects.
Gets the color list from a list of dpts.
Returns the dpt with the given index.
Sets the command index map.
Get pictrues map.
Gets the xssf.
Index the picture in the map.
Generate a picture style string.
Generate a chart style string.
Gets the pattern.
Get the current chart.
Recover this cell from a sheet.
Get the style of a cell.
Get cell style.
Gets the cell font color.
Get cell decoration string.
Get the style of a cell
Get the style of a column.
Convert a poi cell style to an alignment string.
Gets the vertical alignment from a cell style.
Calculates the total height of a sheet.
Sets the style of a cell in the workbook.
Gets the input type from a cell.
Gets the resource paths for the given path.
Gets resource as stream.
Remove the prefix path from a resource.
Evaluates the given input type.
Find bean by name.
Join a short array into a string with the given separator.
Round a double to a number of places.
Gets the tab type.
Get the tab style.
Returns the default date pattern.
Gets the separator by default locale.
Gets the thousand separator by default locale.
Sets the tie command alias list.
Build the watch list.
Build the watch list for a cell.
Add a row to the watch list.
Checks if a string starts with a command prefix.
Parse widget attributes.
Get attribute key in map by cell.
Parses the given string to validate the given attributes.
Find the position of a pair in a string.
Parse command attributes.
Parse input attributes.
Parse validation attributes.
Split by eual sign.
Parse special attributes.
Process calendar attributes.
Process select item attributes.
Gather special attributes.
Parse comment to map.
Find the first non cell name in a string.
Remove characters from a string.
Convert an excel column name to a string.
Convert a string to an integer.
Get cell by reference.
Convert height units to pixel.
Checks if a string is a date.
Parses a date entry.
Checks if a string is numeric.
Returns true if the given character should continue.
Sets a property on an object.
Compares two cells.
Checks if a range is inside a range.
Clears all hidden columns in a sheet.
Delete hidden columns in a row.
Delete a cell from a row.
Logs the event.
Refresh the status of a cell.
Validate current page with row col in current page.
Validate by tie web sheet validation bean.
Check error message from object in context.
Validate all rules for a single cell.
Perform validation.
Validate cell.
Validate the current page.
Validate row in current page.
Validate row.
Refresh cached cells in current page.
Refresh cached cells in a row.
Sets the submit mode in view.
Pre validation.
Clears the contents of this cell.
Load header rows.
Load header row without configuration tab.
Fill to max columns.
Get the style for the header column.
Returns the width style of the cell.
Get column width style.
Initializes the tabs.
Loads the data from the data context if not already loaded.
Refresh the data for a row.
Refresh the data for a cell.
Returns the index of the tab with the given name.
Load work sheet.
Prepare work shee.
Sets the page of the data table.
Setup the row info.
Load body rows.
Refresh cached cell.
Process refresh cell.
Create dynamic columns.
Add repeat row.
Refresh the body rows in the given range.
Sets the unsaved status.
Returns true if the current state is unsaved.
Returns the common constructor for the given type.
Writes an input stream to an output stream.
Write long.
Write a string to the writer.
Sets the traffic stats tag.
Adds a bitmap to the result.
Adds a file descriptor.
Removes the parameter with the given name from the result.
Adds a header to the request.
Clears all data.
Starts the play service.
Bind to the service.
Unbind the service connection.
Drop listener.
Store the remote input stream to disk.
Transfers the given stream to a string using the given charset and pool.
Convert an input stream to a string.
Send data to the output stream.
Returns the number of bytes currently available in the stream.
Closes the stream.
Reads the next byte from the stream.
Resets the buffer to its initial state.
Send start message.
Send disposition header.
Send content type header.
Send the transfer encoding header.
Send end of header.
Send end.
Send parts to the output stream.
Returns the length of the given parts.
Checks if the given URI is a redirect.
Send not modified response.
Sets the date header of the response.
Sets the date and cache headers.
Sets the content type header of the response.
Flushes a channel to the output stream and closes it.
Send disposition header.
Send data to the output stream.
Installs the cache.
Gets the working directory.
Gets a response from the disk.
Creates an input stream for the given entry.
Reset the bitmap to the given width and height.
Gets an instance of the ssl context for the keystore and password.
Validates the given keystore against the given password.
Replace the scale type with the given type.
Get pending intent.
Disconnects from the given connection.
Binds the service to the service object.
Unbind this interface.
Notifies the listener of the view changes.
Open the channel.
On accept data.
This method is called when the object is reset to its initial state.
Wait for the loader to load.
Sets the text or hides the view.
Hide soft input from window.
Show soft input.
Toggles the soft input of the given text view.
Returns the width of a given dip.
Notifies the handler that an exception has occurred.
Clear the cache for the given url.
Populate image.
Cancels the image loading of a view.
Create an image consumer for the given view.
Set result image.
Sets the loading image.
Start an image loader task.
Adds an image to the mem cache.
Releases a buffer to the pool.
On url.
Adds a parameter to the request.
Attempt to connect to the core.
Returns the MD5 hash of the given string.
Returns the string representation of the nth cublas gemm.
Returns a string representation of the given number.
If the given result is different to cublas status. cublas status this method will
If the last result is not cublas throw an exception.
Adds a lexeme to the frequency.
Adds a ending to the frequency.
Returns the estimate for the given attribute values.
Prints the description of the token.
Verify and set the kamols attribute.
Remove kamols markup from a string.
Get a list of metric data.
Gets the query string.
Process a JSON node and return a list of metric data.
Parses the given json string into a list of app info objects.
Get connection config.
Performs a request on a list of apps and metrics.
Create a genericode reader for GC04 code list.
Create a genericode reader for a set of code lists.
Create a genericode reader for a column set.
Create a genericode reader for GC10 code list.
Create a genericode reader for a set of code lists.
Create a genericode reader for a column set.
Gets the id of a column element.
Gets the value of a row.
Gets the column with the given id.
Gets all key i.
Gets the key of the given id.
Checks if is key column.
Create a column.
Create a key.
Sets the number of lines to skip.
Adds a column to the table.
Create a writer for GC04 code list.
Create a genericode writer for GC04 code list set
Create a writer for the gc04 column set.
Create a writer for GC10 code list.
Create a writer for a set of code lists.
Create a genericode writer for the column set.
Create a genericode validator for the gc04 code list.
Returns a genericode validator that validates the gc04 code list.
Create a genericode validator for the gc04 column set.
Create a genericode validator for GC10 code list.
Create a genericode validator for a set of documents.
Create a genericode validator for column set.
Send logs to the server.
Sets the context.
Gets the current log level.
Submits a capture task to the thread pool.
Sets the maximum log store size.
Prepends the given message with the given metadata.
Append additional metadata to the stack.
Create a json object.
Sets the user identity.
Gets the bytes from a file.
Starts location updates.
Replicates a region to a given number of entries.
Counts the number of entries in the given region.
Counts the number of entries in the given region.
Read a snapshot record from the stream.
Dumps the time stamps to the given writer.
Gets the time stamps since idx.
Convert a file to a chart
Gets the pool for the given server name.
Find a pool by locator.
Checks if the given region is already in the server.
Gets a member of a jmx bean.
Returns a list of host names for the given jmx object.
Looks up a network host.
Is error and send exception.
Executes the given function and returns the results of the given execution.
Flattens the input collection into the output collection.
Query an object using the specified parameters.
Creates a cache listener for after put events.
Creates a cache listener for after delete events.
Handles an exception.
Returns the on region filter key facts.
Execute the function.
Returns a set of host names for the given jmx object.
Executes the function.
Returns the application name for the given resources.
Initialize security.
Gets the region with the given name.
Gets a region from the cache.
Construct the comparison.
Checks if the given idx is within the given time stamps.
Closes the stream.
Dumps the contents of a directory to cvs.
Entry point for the reader.
Reconnect to JMX server.
Stop members on a host.
Shuts down a member.
Shuts down the given jmx.
Shuts down redundancy zone.
Store pagination map results.
Read results by page.
Imports the given region into the given region.
Checks if locators and locators match.
Executes the function.
Builds a map from a region.
Returns the value of the given column.
Checks if is type of mirror.
Serializes an object to a byte array.
Deserialize a k from a byte array.
Create a new instance of the given class.
Checks for table id.
Checks for fields.
Checks if the given element is a super type of the given type.
brew a comment to a writer
Emit a get id statement.
Convert the query to an observable.
Checks that the given column is declared in the table.
Returns the value of the given string or the default if the given string is null.
Capitalizes the given string to upper case.
Checks if mirror is a type of mirror.
Descending query builder.
Read the temperature from the device file.
Gets the supported cursor value for the given type.
Sends an error message to the messenger.
Gets the icon fonts.
Returns a list of icons.
Gets the background decoration.
Raises the given number with the given exponent.
Sets the matrix to the given values.
Computes the power of a floating point number.
Sets the root of a big decimal.
Taylor exponential function.
ln ln.
Create a newton.
Returns the arctanine of the given x and scale.
Computes the arctan taylor of a number.
Computes the Euclidean norm of x.
Print pi.
Returns the timestamp of the given time.
Sets the minimum and maximum limits.
Put a float into the map.
Prints the contents of this object to the console.
Adds z to this complex number.
Subtract a complex number from this complex number
Multiplies this complex by another complex number.
Divide a complex number by another complex number.
Sets the matrix.
Get a row of this matrix.
Get a column from the matrix.
Sets the matrix.
Transposes this matrix.
Add a matrix to this matrix.
Subtract a matrix from this matrix.
Multiplies this matrix by k.
Multiplies this matrix by another matrix.
Print the matrix to the standard output.
Sets the resource of the element.
Validates the coefficients.
Compute the position of the next function.
Clears the template and descriptor.
Convert a sld to an XML representation.
Convert a sld object to a sld object.
Validate the styled layer descriptor.
Validates the given sld.
Computes the area of a rectangle.
Sets the matrix to the minimum and maximum values.
Sets the matrix to the given values.
Inverse of this matrix.
Returns the determinant of this matrix.
Computes the norm of this matrix.
Solve Ax = b
Prints the decomposed matrix.
Perform forward elimination.
Perform forward substitution.
Back substitution.
Adapts the improvement of the matrix b and x.
Convert a square matrix to a number.
Returns the next von neumann.
Performs the iteration on the given number.
Compute the next position.
Checks the position of the finder.
Compute the next position.
Checks the validity of an interval.
Adds the specified amount to the end of the list.
Multiplies two numbers.
Raise a power of m.
Performs the iteration on the given number.
Gets the sld manager.
Convert a long value to a bit array.
Decomposes the bits.
Print this string to the given stream.
Validates that the given biased exponent is valid.
Validates the unbiased exponent.
Validates that the given biased exponent is valid.
Validates the unbiased exponent.
Advances to the next central point.
Move to the next polar point.
Returns the ratio of the next ratio.
Computes the prime of a number.
Returns the factors of the given number.
Performs the iteration on the given number.
Compute the next position.
Checks the position of the finder.
Sets the application.
Sets the configuration.
Sets the default configuration.
Initialize the fxml.
Set the latitude and longitude of the geocode request.
Gets the host port pair of a service.
Gets the applicable attribute definition for the given attribute definition uuid.
Evaluate an attribute definition.
Sanitize a tag string.
Set the address of the geocode request.
Query for names.
Query for instances with the given name.
Gets all to by logged in.
Gets the meta data for decimal as a string.
Change password for logged in user.
Returns a listing of all users.
Get the Gravatar for the given email address and size.
Get the Gravatar for a user
Populate from elastic search json.
Gets the type of the field.
Create a flow step.
Update flow step.
Get flow step by id.
Get flow step by step.
Returns a listing of all steps by flow.
Delete flow step.
Execute a flow step with the given parameters.
Populate table fields.
Closes the connection.
Called when a message is received.
Indicates that the connection has been closed.
Gets the echo messages from the return value.
Get personal inventory items.
Create a new table record.
Delete a form container.
Returns a list of form flow historic data.
Returns a list of form and field historic data.
Get the most recent form and field historic data.
Acquires a form container with the given parameters.
Attempt to un - lock a form parameter.
Attempt to unlock a form parameter.
Adds a form container to the given parameters.
Convert a listing parameter to a list of roles.
Create a form definition.
Update a form definition.
Get a form definition by id.
Get a form definition by name.
Gets all by logged in user.
Delete a form definition.
Gets the storage key from the given parameters.
Initialize the memcached client.
Shuts down the memcached client.
Safely parse a string to a long.
Convert document to pdf.
Gets the field values for a given form from the cache.
Create flow step rule.
Create a flow step rule.
Create a flow step rule.
Update flow step rule.
Update flow step rule.
Update flow step rule.
Move a flow step rule to a new entry.
Move flow step rule down.
Delete flow step rule.
Delete a flow step rule.
Delete a flow step rule.
Initializes the session.
Returns a listing of all user queries.
List all roles.
Returns the service ticket as hex.
Create a masked field.
Create a barcode field.
Create a decimal spinner field.
Create a decimal slider field.
Create a table field.
Updates a field with a masked value.
Updates a barcode.
Updates a decimal spinner.
Updates a decimal slider.
Update a table field.
Get a field by name.
Gets a list of fields by form name and logged in user.
Get a list of fields by form type id and logged in user
Delete a field.
Force delete field.
Gets the meta data for a table field.
Updates a user field value.
Gets or creates an index.
Create a flow.
Update flow.
Get flow by id.
Get flow by flow name.
Delete flow.
Delete flow.
Updates a field value.
Returns a list of all global field values
Gets the form definition id and title.
Decrypt the init packet.
Closes this connection and cleans it up.
Creates a new request with a random UUID.
Returns an exception message for the given unique req id param and number of sent items.
Create a new admin user.
Get an access token.
Get user profile info.
Executes the http method with the given parameters.
Executes a form.
Get response handler.
Checks if the connection is valid.
Gets the http client.
Gets the path to the trust store.
Closes the connection.
Get a list of fluid items for a job view.
Send a form to a flow
Called when a user session is closed.
Called when a message is received.
Send a message to the client.
Send a message to the remote endpoint.
Closes the user session.
Execute native sql.
Request a license.
Apply a license to a service ticket.
Create a plain route field.
Create a route field with a paragraph text.
Create a route field with a paragraph text.
Create a multi choice field.
Create a date time field.
Update route field with plain text.
Updates a route field with paragraph text.
Updates a route field.
Updates a route field.
Updates a route field value.
Create a route field value for a fluid item.
Get configuration by key.
Returns a listing of all configurations.
Create an attachment.
Get an attachment by id.
Delete an attachment
Delete an attachment.
Parse the jar file.
Set the class loader for the given jar path.
Throw an exception if the parent is not a xsd schema.
Throw an exception if the parent is a xsd schema.
Throw an exception if the xsd does not exist.
Gets the schema node from a schema file.
Throw an exception if the parent is a xsd schema.
Throw an exception if the parent is a xsd schema.
Convert the given value to the appropriate type.
Create a cli instance for the given class.
Create a cli instance with the given options.
Parse arguments.
Parse command line arguments.
Returns a base url builder for the given path.
Remove a footer view.
Gets the value of a point.
Computes the 3 - dimensional value of a 3 - dimensional noise matrix.
Returns the 3 - dimensional noise of a 3 - dimensional array.
Interpolate a cubic function.
Returns the 5 - dimensional curve of the given double.
Sets the bounds of this rectangle.
Process a cloud trail event.
Process a cloud trail event.
Gets the account id of the event.
Apply the rule to the violation entity.
Get event serializer.
Create a file with the given name.
Create a directory in the root folder.
Restores the state of the restore.
Create an implementation of the map.
Adds an object to the queue.
Sets the value of a property.
Get an array of values from a base string.
Returns the next state with the given action name.
Remove all comparable soft reference from the gcqueue.
Gets the value of the given type.
Gets parameterized type.
Gets the type variable.
Print stack trace.
Print stack trace.
Replace remote object with stub object.
Runs the task.
Sets the task.
Returns true if the task has been accepted.
Called when a task is rejected.
Indicates whether the task has started.
Called when the task has completed.
Stops the task.
Gets the job impl.
Puts a job into the queue.
Converts a blocking mode name to a blocking mode.
Resolves the object and resolves it.
Copy the readers to the new catalog.
Create a new catalog.
Load system catalogs.
Parses a catalog from a URL.
Parse pending catalog files.
Parses a catalog file.
Log an unknown entry.
Resolves the doctype of an entity.
Resolves the document.
Resolves a system.
Resolves a local URI.
Make the given sysid absolute.
Normalizes the given URI reference.
Encodes a byte to a string.
Adds delegate elements to delegate list.
Create a soft reference to the given key and value.
Notifies all registered listeners that a throwable has occurred.
Add a throwable to the list of throwables of the given type.
Creates the implementation of the delegate.
Compares this task to another object.
Gets the value of the property.
Gets the object at the given index.
Sets the object at the given index in the list.
Keeps the count of objects in the queue.
Adds an entry type.
Returns the entry type for the given name.
Returns the number of entries of the given type.
Returns the entry for the given argument.
Sets the context class loader for the given thread.
Swaps two integers.
Remove the node at the given index.
Cleanup timeout ext.
Load a class from the classpath.
Preload all protocols.
Create a new URL with the given protocol.
Checks if the handler pkgs is equal to the last handler pkgs.
Gets the value of the property.
Create an implementation of the hash set.
Creates a new counter that wraps the given counter.
Makes a counter directional.
Returns true if the extension namespace is in the stack.
Check notification.
Get an object instance.
Returns a subst of a string.
Splits a string into an array of strings.
Joins a byte array into a string.
Convert an object to a string.
Returns the value of the property.
Creates the map.
Returns the object associated with the given key or null if not found.
Returns the value associated with the specified key or null if there is no such key.
Removes the timed entry for the given key.
Flushes the map to disk.
Returns a list of valid keys.
Sets the resolution of the timer.
Returns the timed entry for the given key or null if no such entry exists.
Returns an iterator over children by tag name.
Gets a unique child element by tag name.
Get an optional child element by tag name.
Gets the content of the given element.
Gets the unique child content of an element with the given tag name.
Gets the optional child content of an element with the given tag.
Sets the maximum queue size.
Sets the blocking mode for the given name.
Sets the blocking mode for the given name.
Execute a task.
Resolves the external system.
Resolve external public.
Query the catalog for a command.
Append a vector to the vector.
Resolve all system reverse.
Resolve a system by id.
Resolves the local system with the given id.
Reads a catalog from a file.
Reads a catalog from the given stream.
Connects to the file.
Gets the output stream.
Deletes this node from the list.
Returns the value of this header or null if the header is empty.
Creates a snapshot of the map.
Create a logger for the class.
Appends a list of objects to the given buffer.
Returns the name of the class.
Returns a string representation of this object.
Returns an iterator over the names of the current security manager.
Gets the property group for the given basename.
Get compatible constructor.
Copy an object to a serializable object.
Dereferences the given object and casts to the expected type.
Initializes the context.
Update the jndi cache.
Sets the key of the hash map.
Adds defaults to the default set if include defaults is true.
Remove a property listener.
Fires a property added event to all registered listeners.
Notifies all registered listeners that a property has been removed.
Notifies all registered listeners that a property has changed.
Fires a property changed event.
Create a prefixed property name.
Loads properties from the given property reader.
Loads the class with the given name.
Gets the group for the given basename and index.
Returns true if the entity is resolved.
Resolve the input source for the given system id.
Resolves the input source for the given system id.
Resolves the classpath name.
Sets the value of this element as a text.
Normalizes the given string to the equivalent of the given public id.
Encodes the given public id into a urn.
Decodes a URN from its string representation.
Replaces all occurrences of old str with new str.
Starts the timer.
Stops the timer.
Wraps a stop watch.
Compares the given object to this object.
Generates a hash code for the given byte array.
Generates a hash code for the given array.
Creates the map list and list.
Sets the value of the field.
Returns the next token from the stack.
Initializes the privileged action.
Adds a vertex to the graph.
Sets the vertex of this vertex.
Remove a vertex from the graph.
Searches the graph for the first occurrence of the vertex v using the given visitor.
Traverses the graph starting from the given vertex and visiting the given visitor.
Find a vertex by data.
Find cycles.
Normalizes a string.
Parse an XML string into an element.
Parse an XML document from an XML stream.
Parses the given source and returns the root element.
Create an element in the owner document.
Resolve a qname from a qualified name.
Copy attributes from src element to dest element.
Returns true if the node has any child elements.
Returns an iterator over all child elements of the given node.
Gets the text content of a node.
Returns an iterator over the elements of the given node with the given name.
Gets the parent element of the given node.
Adds a waiting resource to the waiting list.
Reads a catalog from a file.
Returns the address of the host.
Sets the system property class value.
Display a class info.
Provide a description of a class.
Strip package name from classname.
Get package name from classname.
Force the load of the given class.
Gets the primitive wrapper for the given type.
Get all interfaces of the given class.
Returns an array of all unique interfaces of the given class.
Checks if the given class is a primitive wrapper.
Instantiates an object from the given properties.
Returns the getter method for the given attribute.
Returns a setter method for the given attribute.
Convert a string to a java class.
Gets the value of a property.
Returns the filenames for the given property name.
Removes the weak object from the set.
Returns an iterator over the elements in this set.
Creates a new URL for the given protocol.
Returns a set view of this map s entry.
Adds a property listener.
Remove property listener.
Checks if the string is null.
Find the editor for the given type.
Registers an editor for the given type and editor type.
Convert a value to an object of the given type.
Gets the context class loader.
Returns null if the throwable is an application deadlock exception.
Schedules a timeout for the given time.
Causes the current thread to wait for the work to finish.
Create a subcontext with the given name.
Lookup an object by name and class.
Checks if an object is assignable.
Append class info.
Returns the transition with the given name.
Read properties from the catalog manager.
Query verbosity.
Query for relative catalogs.
Query for catalog files.
Returns a vector of catalog files.
Query whether the prefer is public or not.
Query for use of static catalog.
Resolves an entity.
Resolve the source for the given href and base.
Make absolute.
Resolve a class.
Invoke setter method.
Returns the local name of the given element.
Gets the namespace URI for the given node.
Gets the namespace URI for the given element.
Create a list from an enumeration.
Returns an input stream for the given filename.
Load properties from a file.
Read properties.
Adds an edge to the outgoing edges.
Adds an outgoing edge to the outgoing edges list.
Adds an incoming edge to the graph.
Returns true if the edge is contained in the outgoing edges.
Remove an edge from the outgoing edges.
Finds the edge with the given destination.
Finds the edge with the given edge.
Returns the cost of a vertex.
Compress a jar file.
Returns true if this iterator has at least one more element.
Fire an event to the task queue
Install jvm type provider.
Dispatches an action to the fx application thread.
Gets an action stream for the given type.
strict many to one
Applies a strict one to a collection of rights.
Returns true if robots are allowed.
Executes the given command.
Returns the degree of the sum of the words.
Creates the superclass arguments map.
Informs the resource manager that the resource loader has been initialized.
Check datasource.
Returns a list of all parameterized types of the given class.
Connect jdbc on with url driver and username and password.
Execute a SQL statement.
Queries the database with the given sql.
Filter by example.
On upgrade.
Backup the table to a csv file.
Restores the contents of this table to the given suffix.
Sets the empty text.
Dump the table to a csv file.
Unescapes a csv string.
Reads a list of values from a CSV row.
Convert a csv string to a map.
Convert a map to a csv string.
Join a list of strings.
Join a list of strings.
Read a database model from an index file.
Write to index.
Inspect the id field.
Returns the base dao model for the given entity.
Gets the bind type.
Imports a csv from a database.
Backup all tables to csv.
Restore all tables from csv.
Writes the index to a file.
Create query.
Create a typed query.
Renders the query.
Delete the given id from the table.
Saves the object to the database.
Update an object in the table.
Add a constraint to the list that requires items not in the array.
Create a subquery with the given lhs predicate.
Returns the next active stack.
Get empty intention stack.
Adds a plan to this belief set.
Select a plan based on the given policy.
Select a plan with random variables.
Sets the plan variables for the agent agent and plan instance.
Gets the belief at the given index.
Returns the parents of this node.
Returns the children of this node.
Grows the given byte array by the given increment.
Create a logger with the given name and level.
Steps the step.
Sets the goals from the byte array.
Pause for user input.
Initialize the intention selection pools.
Initializes the intention selection threads.
Starts the intention selection threads.
Shutdown all intention selection threads.
Register a jill extension.
Resets the internal variables.
Load an agent from the classpath.
Process the plans for a goal.
Create agents in catalog.
Load a class by name and type.
Loads the extension for the given class name.
Compares two objects for equality.
Returns a usage string for this class.
Parses an array of strings into an array of strings.
Parses an argument with an option.
Evaluate a belief base.
Gets the object at the given index.
Find the object with the given name.
Push an object onto the stack.
Gets the object at the given index.
Push an object onto the stack.
Pop an object from the top of the stack.
Returns the type of the given object.
Match a belief against a query.
Runs the belief base.
Convert a string to a byte array.
Post a goal to the agent pool.
Sends a goal to the agent.
Send a goal to the agent.
Returns the goals.
Creates a belief set with the given name and fields.
Adds a belief to the beliefbase.
Evaluates a query against the beliefbase.
Suspends the agent.
Get belief field by name.
Registers the neighbours of this beliefset.
Builds a random name.
Runs the idle thread.
Checks if the given agent execution stack is valid.
Removes all active agents from the given set.
Manage a goal.
Shuts down the pool.
Sets whether or not the agent is idle.
Move a pin to another pin.
Initializes the configuration with the given configuration.
Wait until idle.
Finishes the application.
Returns true if all pools are idle.
Returns the poolid of an agent.
Picks an expression from this expression.
Sets the expression of this expression.
Joins the given string with the given attribute.
Recursively joins the properties in the given join.
Find or create a join.
Indicates if the end of the line is reached.
Gets the upload stream.
Handles a request.
Returns true if the parameter with the given name equals the given value.
Returns the parameter with the given name.
Parse parameters.
Configures the transaction manager with the given config.
Gets the target file.
Writes the artifact to the target file.
Processes the instance.
Gets the declared constructor for the given implementation class.
Builds the string representation of the configuration descriptor.
Gets the interface method for the given method.
Returns the type of a field.
Gets the dependency value of a managed class.
Persists the state of this object to the persisted state.
Sets the default link for the given rel.
Sets the default link template for the given rel and href.
Handle links.
Handles the header links.
Handle links.
Parse link object.
Gets or adds a value for the given key.
Handle capabilities.
Returns true if the given method is allowed.
Register instance processor.
Register an instance factory for the given instance type.
Register an instance processor.
Register a class processor.
Adds an argument to the argument list.
Create a list of target files.
Serialize this object to XML.
Initializes the tfl producer.
Checks if the given file has a reference to the given file.
Create a parameterized template model from a reader.
Create a template model from a file.
Sets the request path.
Gets an observable from the scheduler.
Create a new instance of the given type from the given string.
Sets the value of a field.
Add capture to logger.
Remove appender from logger.
Clear the contents of the appender with the given name.
Parse the model.
Resolves all proxies.
Gets the files in the given directory.
Parses a directory.
Checks if the model is fully resolved.
Finds all notifiers in the given resource set.
Sets the model dirs.
Sets the file extensions.
Sets the model resources.
Reads the next record from the reader.
Sets the values of an array parameter.
Create a new instance of the given type.
Merge a template into the target file.
Gets the model directory.
Gets the template directory.
Writes an object to the output stream.
Start the web view.
Configures the window.
Prints the given view to the output stream.
Writes the given input stream to the given output stream.
Invokes the given proxy method on the given object.
Attaches the given request and response to the request.
Detaches this object from its parent.
Returns the cookies attached to this request.
Dump the request to the log.
Returns a list of invocation meters.
Configures the event stream with the given configuration.
Sets the remote host.
Get a parameter from the registry.
Remove a prefix from a path.
Finds the common dir between two directories.
Convert an absolute path to a relative path.
Convert a relative file to an absolute file.
Get the depth of a file.
Dump an error message to the log.
Sends a JSON object to the client.
Adds a parameterized template to the template list.
Adds a list of parameterized template models to the request.
Initializes the template model.
Find references to a template file.
Enable or disable the save button.
Delete the confirm dialog.
On delete.
Create a new instance of the given managed class.
Returns an array of all the files in this dataset.
Returns a summary of the results.
Get the summary row for a directory.
Get the summary row.
Create a new instance of the given managed class.
Gets the setup class.
Gets the model dirs.
Gets the model resources.
Sets the candidates.
Loads the XML from the given stream.
Called when an error occurs.
Checks if the formal parameter is an object.
Read an array of formal parameters from the http request.
Reads an object from the input stream.
Extract the parameter from a fit cell.
Gets the hints.
Returns true if the request is an xhr request.
Checks if is android.
Handle an element event.
Returns a list of properties with the given annotation.
Gets an annotation on a field.
Logs a message.
Lookup a domain and timeout.
Run a scriptlet for a specific whois host.
Get a managed class from the container.
Gets a managed method.
Process not contains exception.
Process not contains event.
Serializes the given http servlet response to the output stream.
Returns the value of the cookie with the given name.
Adds a cookie to the response.
Removes the cookie with the given name.
Returns an iterator over the cookies.
Gets the target file list producer.
Adds a field to the constant pool.
Compiles the class.
Verifies that the token is the same as the tokened image files.
Gets the value of the file.
Ensures that the given URI ends with a trailing slash.
Gets the http servlet request.
Invokes the managed method.
Execute a mutable transaction.
Executes an immutable transaction.
Gets the files in the directory.
Gets the last file in the directory.
Gets the concrete config.
Checks if the request path starts with the component.
Returns a list of artifact factories for the given model type.
Get the http session for the given instance key
Serializes the given http response to the output stream.
Read meta data.
Handles the request.
Closes the statement and closes the statement.
Destroys the event stream if it is empty.
Handle allowed methods.
Uploads the blob to the server.
Delete the confirm dialog.
Extract column parameters from fit row.
Gets the argument names.
Schedule a periodic task.
Schedules a timeout task.
Configures the repository.
Returns the next file in the list.
Configure the application.
Print welcome banner.
Prints a stopped banner.
Create a chameleon from the command line arguments.
Register shutdown hook.
Triggers the trigger.
Triggers the trigger.
Insert and replace a fit row.
Gets the counts of the results.
setter for score
getter for variants
setter for variants
getter for question type
setter for question type
getter for token
getter for dep label
setter for dep label
getter for semantic type
setter for semantic type
getter for sections
setter for sections
indexed getter for sections indexed by index
setter for sections
getter for uris
setter for uris
getter for types
setter for types
getter for target type
setter for target type
getter for rank
setter for rank
getter for query string
setter for query string
getter for candidate answers
setter for candidate answers
getter for candidate answers
setter for candidate answers
getter for query
setter for query
getter for hit list
setter for hit list
indexed getter for hit list
indexed setter for hit list
getter for abstract query
setter for abstract query
getter for search id
setter for id - sets
setter for doc id
getter for offset in begin section
setter for offset in begin section
getter for offset in end section
setter for offset in end section
getter for begin section
setter for begin section
getter for end section
setter for end section
getter for aspects
setter for aspects
getter for triple.
setter for triple
getter for source relation
setter for source relation
getter for subject
setter for subject
getter for predicate
setter for predicate
getter for is obj uri
setter for is obj uri
getter for operator
setter for operator
getter for operator args
setter for operator args
getter for concept
getter for score
getter for text
setter for text
getter for id
setter for id
getter for name
getter for abbreviation
setter for abbreviation
setter for concept
getter for variants
setter for variants
getter for named entity types
setter for named entity types
getter for concept type
setter for concept type
getter for occurrences
setter for occurrences
getter for concepts
setter for concepts
getter for original text
setter for original text
getter for args.
setter for args
getter for label
setter for label
Clears the bit at the given index.
Sets the word at the given index.
Free a buffer.
Creates a new instance of the given type.
Rehash an array of values to a new size.
Returns the HELM representation of this monomer.
Checks if brackets are equal.
Extracts the details from a string.
Returns the hel representation of the annotation.
Adds an element to the list of elements.
Checks a polymer id.
Checks if polymerid is valid.
Checks if a connection or hydrogen bond is in the details.
Checks if the given string is a group id.
Checks if a string matches a repeating pattern.
Checks if is peptide or rna.
Serialize the value to a JSON string.
Gets a simple polymer by its id.
Get current grouping notation
Returns the hel representation of this object.
Convert a polymer to hel.
Returns the connection to hel.
Returns grouping to hel.
Convert the annotation to hel.
Gets polymer and grouping i.
Gets a polymer by its id.
Sets the polymer elements.
Convert a string to a string.
Sets the annotation.
Sets the count of the given string.
decide the monomer notation of the given type
Create a monomer notation group element from a string.
decide which entity to use.
Returns the value of this interval.
Parses a state machine test.
Set the rna.
Defines the ambiguity of the given string.
Returns the statistics for this job.
Creates a hash set from a collection of edges.
Creates a new a from the given nodes and edges.
Initializes the internal paths.
Returns a list of nodes sorted by reachability.
Subscribes a method with the given pattern and method name.
Count the number of subscribes for a pattern.
Unsubscribe a pattern
Return an object from the server.
Send a sync message to the server.
Returns true if the request was successful or false otherwise.
Send a shutdown message to the server.
Throws a throwable if it requires non - local handling.
Unlock the run state.
Create a worker.
Attempt to add a worker to the pool.
Register a worker.
Deregister worker.
Signals the current thread that a work has completed.
Run the worker.
Await work.
Returns the common submitter queue.
Attempt to complete a task in the work queue.
Submit a task to the external queue.
Make a common pool.
Returns the status of this thread or throws an exception if the thread is interrupted.
Build a string from a throwable code.
Get the statistics of the local queues.
Creates a new array with the given elements.
Reverse the elements of this list.
Returns true if any of the elements in the iterable satisfy the predicate.
Folds the elements in the iterable starting from the given value using the given function.
Fold right fold.
Push a runnable task onto the stack.
Converts nullable value to a value.
Creates an unmodifiable view of the given iterable from the given keys and values.
Returns an empty object of the given equality.
Creates a new equality object from an iterable of keys and values.
Creates a new equality from the given keys and values.
Returns an iterator over the keys of the inner set.
Normalize a resource name.
Marshals a bound value to a string.
Returns a sub - sequence of this character.
Returns a binary search for the element in the list.
Returns a binary search for the element in the list using the given comparator.
Sends an email message to the server.
Binds a route to the given handler.
Bind a filter to the handler.
Show the body of the tag.
Gets the int value of the given long.
Removes duplicate strings from an array.
Returns a string that is like the given value.
Runs the task.
Attempt to login with the given user and password.
Gets the login user.
Checks a password against a salt and plain password.
Save member in cookie.
Returns the login key for the given user ip and user agent
Returns the user for a cookie with the given uuid.
Forwards the request to the servlet.
Returns the long value of a request parameter.
Log a debug message.
Get information about the caller at the given level.
Converts a char array to a simple byte array.
Converts a char sequence to a simple byte array.
Converts a byte array to a simple char array.
Convert a char sequence to an ascii byte array.
Lookup the locale data for the given code.
Returns a promise that will be executed in the given amount of milliseconds.
Crops the image to the given location.
Invokes the given invocation with the given amount of milliseconds.
Invokes the given direct invocation and waits for it to finish.
Gets the REST operations.
Renders an error in the ajax response.
Renders a forbidden response.
Render the given view as a freemarker template.
Parses the given action path and url.
Render data tables.
Render empty data tables.
Sets the list of items.
Redirects this request to the given web context.
Returns a list of all providers in the given injector.
Returns the current method.
Compacts the memory.
Propagate the given metrics to the local metrics collection.
Encodes the given string into a string.
Copy the contents of the input stream to the output stream.
Copy count bytes from the input stream to the output stream.
Copy the contents of the given stream to the given writer.
Copy the contents of the reader to the writer.
Copy a number of characters from the reader to the writer.
Copy the contents of the given reader to the given output stream.
Copy the contents of the reader to the output stream using the specified encoding.
Compares two streams.
Compares two buffered readers.
Applies the predicate to the given object.
Get the SQL for the given group name andsql id
Unmarshals the given source string into the given class.
Unzips the given file to the given destination directory.
Gets an instance of the permission dialog fragment.
Resumes the activity.
Registers a converter for the given class.
Returns true if the value matches the regular expression.
Checks if the string is mobile.
Checks if the given string is a phone.
Checks if the given string is a birth day.
Checks if is url.
Apply the filter to the request and response.
Encodes the given string using the base64 algorithm.
Decode a base64 - encoded string to a byte array.
Converts a hex string to a byte array.
Read properties from the given stream.
Reads the content of the given stream as a string using the given encoding.
Read the content of a file as a string using the given encoding.
Writes a byte array to a file.
Copies a directory from one location to another.
Serializes the given document to a string.
Parses the given file and returns a document object.
Parses an XML document from a string.
Parses an XML document from an input stream.
Validate signature.
Sign a document with a public key and private key.
Checks if a class is cache safe.
Checks if the given class is a primitive array.
Checks if the given class is a primitive wrapper.
Resolves a primitive type.
Checks if the lhs type is assignable from the rhs type.
Checks if the given value is assignable to the given type.
Gets all interfaces for the given object.
Gets all interfaces of the given object.
Write to temp file.
Returns the variables for the given URI.
Add a permission to the bean.
Bind the loader module to the given extension point.
Returns the builtin object for the given type.
Returns the primitive value of the given type.
Convert the given object to the given type.
Convert a user defined value type to a user defined value type.
Query a request parameter.
Adds a cookie to the request.
Adds a session parameter to the request.
Initialize data source.
Adds a parameter to the query.
Sets the value of a parameter.
Show permission dialog.
Returns true if the values are granted.
Returns true if any value is denied.
Find records by sql select.
Find one record in the database.
Checks if is new.
Declares an exception of the given type.
Processes the queue of soft values.
Adds a new value to the queue.
Checks if the given string matches the pattern.
Read arguments.
Gets the protobuf entity for the given class.
Checks if is protobuf entity.
Gets all protbuf fields of the given class.
Gets a getter for a field.
Gets pojo setter.
Gets the mapper.
Gets a thread - local json factory.
Convert an object to a JSON string.
Sets the borders.
Get user record.
Copy out attributes.
Copy out attributes.
Add this app to the frame.
Saves the access token and secret to the given token.
Gets the access token and secret.
Gets the default loader.
Returns the URL of the resource with the given name.
Gets a resource as a stream.
Gets resource as stream.
Initializes this URI from another.
Initialize the scheme of the given URI spec.
Initializes the path.
Sets the scheme of the URI.
Sets the userinfo.
Sets the host of the request.
Sets the port of the URI.
Append a path to the path.
Sets the query string.
Sets the fragment of the URI.
Returns the URI part of the request.
Create a prepared statement by using an iterator.
Initialize the applet.
Get the muffin for the given param
Sets the muffin value.
Returns the contents of the clipboard.
Sets the contents of the clipboard.
Loads a map of services by type.
Sets the service parameters.
Returns a map of service parameters for the given operation.
Find a parmetrized service by id.
Find by class.
Parse a query response.
Returns an iterator that iterates over the elements in this buffer.
Returns the encoding of the given string.
Create a proxy instance for a connection.
Get the authorization from the authorization url.
Visit a package declaration.
Visit a class declaration.
Visit an executable declaration.
Get an option from a map.
Returns a declaration filter that matches the given modifier collection.
Returns a declaration filter that matches the given kind.
Returns a declaration filter that matches only the elements of this and f.
Returns a declaration filter that accepts only the elements of this and f.
Gets the value as a map.
Makes the given constructor accessible.
Prepares the object for query.
Replace a slash with a hyphen.
Convert a byte array to a hex string.
Returns the indexes for the given name.
Parse a named SQL statement.
Converts a collection of non protobufs to a collection of protobufs.
Sets a field value.
Sets a field value.
Accepts a file.
Get a result set from a result set.
Converts a list of labels to a map of expected labels.
Gets the generic supertype of the given type.
Drains the queue and removes it from the queue.
Polls the queue individually.
Returns the declared field of the given class or null if it cannot be found.
Returns the declared methods of the given class.
Gets the declared method of the given class.
Gets all declared methods of the given class and annotation.
Returns an array of constructors annotated with the given annotation class.
Dump a byte to the system output.
Returns the index of ignore case of s in substr.
Removes the chars from a string.
Cleans the state.
Initialize audit.
Initialize message queue.
Initialize password validator.
Initialize password authenticator.
Resolves a locale code.
Looks up the locale info for the given code.
Create an instance of the given statement.
Removes all elements from the set.
Pop an element from the top of the stack.
Create a stream from the input file.
Parse arguments and return a properties object.
Match the given tokens against the given patterns.
Moves the rectangle to the specified location.
Returns true if this rectangle encloses another rectangle.
Returns true if this rectangle contains the specified point.
Computes the intersection of this rectangular and another rectangular.
Computes the union of this rectangular and another rectangular.
Replaces this rectangular with another rectangular.
Replaces the y - coordinate of this rectangular with another rectangular.
Returns the column ofs for the given column.
Returns the row ofs for the given row.
Returns the cell bounds relative to the given location.
Calculates the columns.
Calculate the rows.
Unwrap throwable.
Main method for running the application.
Called when the code is updated.
Copy and resize the code buffer.
Initializes the log.
Create a copy of this query parameter.
Adds a child node to this node.
Clear all children.
Advances to the next internal element.
Adds the instructions to the body of this function.
Adds instructions to the parent.
Fired when a property has changed.
Register a work panel.
update present component flags
Create an instance of the given type.
Evaluates the given term.
Optimize a list of wam instructions.
Compares two collections.
Service the request and response.
Start the jsp tag.
Renders a button.
Resets the state machine.
Initializes this class.
Gets the value associated with the given key.
Returns the index of the given key.
Sets the value at the given index.
Remove an object from the map.
Removes the element at the given index.
Checks if the object has the given property.
Sets the value of a property on the callee.
Gets the property from the callee.
Checks if the primitive type is assignable from the wrapper type.
Initializes the callee.
Determines the decision tree for the given state.
Initialize lookups for this decision tree.
unify a query and statement.
Recursively unify two variables.
Compiles the query.
Find the maximum number of arguments in the given clause.
Allocate permanent query.
Gather position and occurrence info.
Display the compiled predicate.
Display the compiled query.
Convert a byte buffer to a string.
Gets the value of the property.
Sets the value of the attribute.
Reads a term.
Checks if a class exists and is loadable.
Returns true if the given class is assignable to the given name.
Checks if is sub type of parent and child.
Checks if is sub type of parent class and child class.
Returns a class for the given class name.
Create a new instance of the given class.
Creates a new instance of the given constructor with the given arguments.
Call a method on an object.
Call a method on an object.
Call a method with the given parameters.
Gets a constructor from a class.
Finds a set of setters for a given property name.
Gets the transactional queue.
Create a transactional queue from a collection of queues.
Gets the type from an object.
Resets the state of this object to its initial state.
Create an instance of the specified type.
Add a supported tz.
Add a timezone to the supported formats.
Adds a dimension to the table.
Searches for free variables.
Searches for free non anonymous variables.
Compares two search nodes.
Write object to file.
Read a buffered input stream as a string.
Create a new search node.
Generate a trace indent.
Returns true if the body term is the last body term in arg position.
Chooses the best property to decide on.
Returns a functor for the given name and term arguments.
Returns a new variable with the given name interned.
Forward execute with error handling.
Gets the elements at the given index.
Sets the texture of the gradient.
Paint immediately.
Create a buffered image.
Creates a buffered image with the given bits.
Create a buffered image with the given bits.
Sets the queue search algorithm.
Main method for testing this class.
Returns the clause of the statement.
Consumes a list of terms.
Consumes a functor and creates a new functor.
Consumes a variable.
Parses an integer literal.
Parses a literal value.
Consumes a literal and returns the result.
peek and consume a directive.
Interns an operator.
Initialize the built ins.
Consumes a token from the source.
Consumes the next token of the given kind.
Bind this binder to this binder.
Rollback the transaction.
Collects the elements from the iterator to the target collection.
Convert hour minute minute and millisecond to ticks.
Converts ticks to years.
Returns the ticks with the given hours.
Converts ticks to minutes.
Returns the ticks with the given seconds.
Returns the ticks with the given year.
Returns the ticks with the given month.
Returns the ticks with the given date set.
Gets the start time of the year.
Reads a block from the source.
Returns the entry for the given key or null if not found.
Cuckoo entry.
Rehashes the hash.
Invoked when an action is performed.
Sets whether or not this buffer should be available.
Sets whether or not this buffer has been available.
Sets whether the task has finished.
Get an instance of the wam class from the given symbol table.
Returns an iterator over the variables in this set.
Returns the expected i for the given probabilities.
Returns the probability distribution for the given counts.
Sets the ticks.
Perform a forward action.
Creates a new url with the given spec.
Gets the request info.
Get the response headers as HTML.
Get the cookies for the current page.
Returns a string containing the parameters of the request.
Gets the request scope.
Gets the page scope.
Gets the session scope.
Gets the application scope.
Gets the user principal.
Start tag.
Returns the HTML representation of the given property name and values.
Sets the current screen state.
Walks the tree starting at the given term.
Compares two search nodes.
Update the registers.
Notifies all listeners that a property has changed.
Leave clause.
Returns true if the context is in top level.
Sets the arguments.
Get the fixity associativity.
Returns true if the associativity is infix.
Compares the priority of the given object to this one.
This method is called when a property change event occurs.
Register a work flow controller.
Gets the factory for a class.
Create a component factory for a class.
Gets the storage cell for the given variable.
Returns true if this variable is bound.
Sets a column attribute.
Set a row attribute.
Gets the column attribute or null if not found.
Gets the row attribute or null if not found.
Internal insert method.
Create an instance of the given type.
Create a new type with the given pattern.
Returns true if the character sequence value is instance of the given character sequence value.
Create a positional context.
Updates the registers in the given layout.
Gets the value of this expression group.
Finds the goal path of this node.
Cache block.
Gets the properties for a resource.
Sets the rate.
Reads a byte array from the source.
Skips the specified number of bytes.
Gather disjunctions.
Read an int from the given byte array starting at the given offset.
Write an int to the byte array at the given offset.
Write 24 bit int to byte array.
Read a 24 bit integer from the given byte array starting at the given offset.
Reads a short from a byte array.
Write a short to the byte array at the given offset.
Returns the child state for the given operator.
Returns an iterator over the valid operators.
Returns the id of this node.
Gets the value of the property.
Sets the value of the attribute.
Convert a string to an array.
Convert a string array to a list.
Converts a string to camel case.
Appends a list of handlers to a string buffer.
Resolve a call point for a given functiontor.
Sets the code address for the given functor.
Returns true if this component is a sub category of this component.
Returns the id of this node.
Gets the value at the given level.
Gets the last value of the path.
Writes an object to the output stream.
Reads an object from the given stream.
Computes the hamming distance between two states.
Returns the mod of the given long.
Adds an error message to the error list.
Writes a string to the output stream.
Classifies the given state.
Compares two expressions.
Returns an iterator over the distributed iterators.
Returns the logarithm of the base 2 log value
Convert a base 2v2 integer to a log table.
Returns the logarithm of the given value.
Returns the logarithm of the given value.
Returns the logarithm of the given value.
Returns the logarithm of the given value.
Gets the character count for a 32 - bit integer.
Returns the character count for the given long value.
Returns the character count of the given integer on the given scale.
Sets the head of the functiontor.
EMmits the code from the given byte buffer.
Sets the current screen.
Evaluate this expression against the given t.
Returns an iterator for the given key.
Create array properties.
Sets the rate.
Evaluates the first number.
Finds the properties.
Get the system properties.
Get the classpath properties.
Get the current working directory.
Leave a functor.
Gets the value of this term.
Sets the substitution term.
Creates a new priority queue.
Closes the connector and closes it.
Append a logging event to the logger.
Fire a connector.
Initialize the printers.
Commits the transaction.
Rollback the transaction.
Request a write operation.
Adds a cached write operation to the cache.
Acquire the global write lock for the given tx id.
Release the write lock.
Enlist the current session.
Enter a rule set node.
Inserts the specified element at the tail of this queue waiting up to the specified wait time for
Returns the next element from the queue or throws an exception if the queue is empty.
Inserts the specified element into this map. If the map previously contained a mapping for this key
Returns the next object from the source.
Returns the boolean value for the given property name.
Gets the value of the specified property as an integer.
Returns the long value of the specified property.
Mixins the given arguments to the given node.
Sets the visitor to visit the given node.
Backtracks the search node.
Retrieve the code for the given call point.
Execute the query and extract bindings.
Decodes a heap term.
Captures this capture.
Restores the object to its original state.
Get an object from the map.
Adds an object to the map.
Returns a collection of all the field names of the given class.
Executes the mojo.
Inserts the specified element at the tail of this queue.
Create a new search node.
Create a priority queue.
Creates a simple walker for the given visitor.
Creates a goal walker for the given visitor.
Create a positional walker for the given visitor.
Creates a positional walker for the given unary predicate and visitor.
Create a positional walker for the given visitor.
Gets the properties from an input stream.
Gets the properties from a file.
Gets the properties from the given url.
Gets the properties for the given pathname.
Compute the size of the grid.
Initializes the font metrics.
Add a property change listener.
Add a property change listener.
Remove a property change listener.
Fire a property change event.
Create an instance of the specified type.
Fades the given color delta target to the given group
Show the horizontal bar.
Show left bar.
Show right bar.
Sanitize radio controls.
Waits for the given wait time to complete.
Waits for the given time to finish.
Executes the mojo.
Append classpath to command line.
Create an instance of the given type.
Print introduction.
Initializes the console reader.
Evaluates the given sentence.
Evaluates the query.
Gets multi type data.
Gets multi type data.
Gets multi type data.
Gets multi type data.
Gets multi type data.
Gets multi type data.
Gets multi type data.
Get multi type data.
Create a multi type data from a string.
Gets multi type data.
Associates the specified value with the specified name in the current page context.
Clears the range to the given key.
Expand the key.
Inserts a character into the data.
Compares two search nodes.
Parse operators.
Gets the operators with the given name by fixity.
Checks if the candidate op symbol is valid and resolves to fixity.
Returns a new node with the given successor.
Gets the error message.
Gets the options in force.
Get usage.
Adds the trailing properties to the properties.
Adds the options to the properties.
Adds an option to the option list.
Check argument format.
Compares two iterators using the mapping function.
Returns an enumeration of option elements.
Gets the options.
Sets the stemmer for the given tag.
Gets the actual stemmer.
Stem a word.
Main method for testing this class.
Create an instance of the specified type.
Resets the state of this object to its initial state.
Returns the trace env frame.
Generate a trace choice frame.
Calls the given function with the given number of perms.
Move to the next stack frame.
Returns true if backtracking is enabled.
Jump to the given address.
Perform the unwind trail.
Clean up the trail.
unify two sets of integers.
unify const.
Print slot.
Returns a random state of the puzzle.
Checks if the puzzle state is solvable.
Gets the child state for the operator.
Returns an iterator over the valid operators.
Returns a pretty - printed version of the string.
Swap the tiles.
Convert a string to a char list.
Convert a state list to a state.
Convert log record to log4j message.
Convert log4j level to log4j level.
Requeue a new element.
Requeues an element.
Increments the size and count of the record.
Decrements the size and count of the record.
Signals the signalable if it is crossing the given size threshold.
Returns an enumeration of the given name.
Returns a list of bindings for the given name.
Add an object to the environment.
Remove a property from the environment.
Run GC.
Match a literal.
Resolve a mixin reference.
Push a variable reference to the stack.
Sets the height of a row.
Updates the max column width for the given column.
Makes a node from the successor.
Executes the given action.
Substitute the built ins clause.
Initialise the symbol table.
Performs a top level check on a clause.
Convert a list of arguments to a string.
Evaluates the first number and second number.
Signals the state machine to be running.
Signals that this thread is no longer running.
Signals that the application is terminated.
Inserts the specified element at the tail of this queue.
Compare two nodes.
Inserts a node into the tree.
Restart the server.
Returns a set containing all elements of the set that match the given search method.
Returns a collection containing all elements of the collection that match the given search method.
Finds all solutions in the collection.
Returns the next element in the sequence.
Restores the values of an object from a map.
Gets the value of the given property.
Put a multi type data value.
Sets the value of the given property.
Captures the capture.
Pop an element from the top of the stack.
Convert modifiers to string.
Converts a string to an integer.
Converts a string to a date
Checks if a string is a date.
Check if string is time.
Checks if a string is a date time.
Returns a token source for the given string.
Gets the token source for a file.
Creates a token source for the given input stream.
Returns true if the given instruction is a constant.
Checks if the instruction is a variable instruction.
Checks if the instruction is a non - arg instruction.
Returns an iterator over the children of this clause.
Gets the argument at the given index.
Returns an iterator over the children of this operator.
Returns a string representation of the arguments.
Retrieves the summary for the given schema definition.
Retrieve a list of records from the database.
Execute query.
emmit the code from the given byte buffer.
Sets the basic type of the given class.
This method consults the given input stream.
Print a variable binding.
Returns an iterable that expands the result set to a map.
Runs the reader.
Reads the document from the reader.
Gets the current time.
Returns the uuid of the current thread.
Update the track info in the playlist.
Update the play info.
Renders the output.
Handles a resource request.
Submits a runnable to the playing thread.
Fire a start sound request.
Initializes the reader.
Starts the reader thread.
Shuts down the server.
Resets the parser.
Parses the packets from the server.
Process a packet.
Sets the CLI option.
Create a chat with the given user jid.
Internalize the content manager.
Resets the content to a new map.
Sets the value of a property.
Adds a filter to the packet.
Process a request.
Resets the properties.
Initialize the writer and thread.
Send a packet to the client.
Moves to the next packet.
Open a stream.
Returns the list of informations for this type.
Checks if the given descriptor contains the given descriptor.
Add a listener to the life cycle.
Shuts down the executor.
Checks if the given entry is valid.
mask null.
Compares two objects for equality.
Returns the entry for the given key.
Resizes the table to a new capacity.
Put all entries in the map.
Removes the value associated with the given key from this map.
Removes the entry with the given key from the table.
Removes an entry from the map.
Adds an entry to the table.
Creates an immutable map by applying an augmentation to each key in the base map.
Encodes the given string as a binary attribute.
Encodes the given byte array as a hex string.
Encodes the given string using base64.
Encodes a byte array into a base64 string.
Iterate over the given collection.
Sets the controller for the track.
Sets the controller that will be used to jump the progress.
Sets the playback controller.
Sets the volume changeable controller.
Broadcasts the available playlists to the given function.
Handle command resources.
Handle a volume change event.
Handles a jump event.
Handles a track event.
Returns the thread cache for the given name.
Gets the request cache.
Gets the alt field.
Returns the shard path for the given id
Adapts an object to a session.
Safely invokes a method on an object.
Deletes a tree.
Update an object with the given properties.
Sets the ping interval.
Schedule a ping task.
Adds the given options to the list of options.
Returns true if the given option has been used.
Parses an exception from the command line.
Prints usage information for the given application.
Parses the given arguments and prints an error message if any.
Initializes the connection.
Start tls.
Gets the compression handler.
Send a stream compression request to the connection.
Starts the stream compression.
Notifies the connection that an error occurred.
Notifies the connection that the connection has been reconnected.
Register a SASL mechanism.
Returns a list of registered SASL mechanisms.
Gets the output plugin behaviour.
Logs a formatted message and throwable at INFO level.
Log an error message and throwable.
Log a message and throwable.
Create a start event request.
Create a start event.
Notifies the listeners of the given string.
Checks if the resource model provides a resource.
Checks if the resource with the given id exists in the list of resources.
Checks if a list of resources provides a resource.
Provides a list of resources for the given resource.
Gets a cached object from the cache.
Returns the cache key for the given space and column family.
Remove a cached key from the shared cache.
Puts a cached value into the cache.
Get the location map.
Includes the given file.
Include a jar file.
Adds a SASL mech to the list of default mechs
Adds a collection of SASL mechs to the system.
Create debug log.
Activates the processor.
Register standard events.
Registers an event listener.
Registers an event id.
Acquires a file lock.
Returns true if the event can be run.
Creates a new dse session with the given keyspace.
Create a player error.
Start playing a track.
Stop playing this music.
Execute a player command.
Creates a playlist request.
Create a playlist answer.
Appends the given parts to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the URL.
Adds a query parameter to the request.
Add a query parameter.
Gets a playlist.
Invoked when the launch button action is pressed.
Checks if startup is finished.
Checks if the given URL exists.
Browser button action performed.
Create an image icon for the given path and description.
Launch the nakamura program.
Returns a copy of this int array with the given values.
Exports this object to a hash map.
Returns the value at the given index or null if the value is not a json.
Returns the value for the given key or null if the value is not a json.
Returns the integer value of the given value or the default value if the value is null.
Returns the double value of the given value or the default value if the value is null.
Returns the string value of the given value or the default value if the value is null.
Create a command resource.
Verifies that the given command is valid.
Verifies the capabilities of a command.
Verifies the given command and capabilities.
Execute a batch of statements asynchronously.
Returns all subclasses of the given class.
Returns a set of subclasses for the given class name.
Search for classes in a directory or jar.
Search a directory for assignable classes and uris.
Converts this resource to a list.
Returns the number of elements in this list.
Process a packet.
Gets the volume of the event model.
Create an error response.
Create an error response.
Checks if an event model is a target.
Sets the login enabled setting.
Decorate a set.
Sets the name of the event.
Update the state.
Gets the groups.
Append rsm to query element.
Parses a rsm query element.
Create a leaving event.
Reloads the roster.
Create an entry.
Returns a collection of all roster entries.
Returns the presence for the user with the given resource.
Populates the presence packet with unavailable presence packets.
Fire a roster changed event.
Set the digest of the connection.
Generate a resource.
Create a player request.
Returns the time passed to the event model.
Registers a listener for update events.
Initializes the properties.
Reloads the properties.
Parse a stream error element.
Parse mechanisms.
Parses the methods of a compression element.
Parse a packet extension.
Decodes an object from its string representation.
Verifies if the given event model matches the given capabilities.
Get playback state from resource model.
Get the secret key for a subdomain.
Checks if a subdomain is allowed to allow multiple subdomains.
Sets the value for the given key.
Returns a reference to the key set.
Returns a collection of the values contained in this map.
Purges a reference from the cache.
Returns the entry for the given key or null if the key is null.
Computes the hash code for an entry.
Creates a new entry with the given key and value.
Checks if presence indicator is present.
Sets whether the element is present or not.
Generate the most vague presence.
Delivers a message to all registered listeners.
Generate the script.
Initialize the output directory.
Load properties from a file.
Write a string to a file.
Returns the progress for the given event model.
Decorate a collection.
Discovers a range of service resolvers.
Resolves the configuration if the number of attempts == 0.
Gets the thread pool.
Create a stop music request.
Verifies if the given event model is target for the given player.
Get a cluster by its identifier.
Adds a connection listener.
Add a packet listener.
Adds a listener to the list of listeners to be notified when a packet is sent.
Fire the packet sending listeners.
Adds a packet interceptor to the list of interceptors.
Notifies all interceptors of the packet.
Convert an object to a value.
Called when the connection lost.
Gets the current thread id.
Checks if the given node is valid for the given thread.
Gets the key for the given value.
Gets the value of the object at the given index.
Looks up a valid node at the given index.
Looks up the node at the given index in the tree.
Compares two objects.
Returns the least node of the node at the given index.
Returns the most node in the tree at the given index.
Returns the next node greater than the node at the given index.
Finds the most valid node in a node with the given thread id.
Finds the least valid node in the given node starting at the given index.
Copy color from one node to another.
Check if node is red.
Check if node is black.
Gets grand parent node.
Gets the parent of the node at the given index.
Gets the right child of a node.
Gets the left child of the node at the given index.
Rotate the left child of the node at the given index.
Rotate the right child of the node at the given index.
Inserts a node into the tree starting at the given index.
Do red black delete.
Checks that the given object is comparable.
Inserts a new value into the tree.
Checks if the map contains the given key.
Checks if the given value is contained in the map.
Gets the value associated with the given key.
Remove the object with the given key from the map.
Removes all entries from the map.
Copies the entries from the given map to the new map.
Delete expired entries.
Removes the cache from the cache.
Activates the component.
Get a player request for a playlist.
Initialize the roster store.
Opens a roster store.
Scans a range of IP addresses.
Returns an inet address with the given subnet bits.
Exports this object to a hash map.
Create an optional track from a hash map.
Adds all applications in the given set to the application map.
Executes the application.
Prints the list.
Prints the usage.
Main method of the command line tool.
Create a mute event.
Create a mute event.
Returns the goodwill schema for the given schema name.
Write a list of lines to a file.
Checks if the script is in the exec jar.
Adds an option to the command line.
Gets the thrift schema.
Get thrift field by name.
Returns the package name of the given entry.
Converts the content of a map to its values.
Create an event listener.
Sets the state of this iterative state.
Iterate over the given collection.
Perform an iteration on the iterator.
Gets the track info from the event model.
Export the data to a hash map.
Import a resource from a resource model.
Creates a buffered image with the given lines.
Get an image from a URL.
Gets a JSON object from the given URL.
Reverses the keys in source map to target map.
Performs multiplication on the elements of this set.
Starts the daemon.
Returns the object to the pool.
Creates an ended event request.
Gets the current track info.
Update a track in the playlist
Shuffle the playlist.
Verifies that the capabilities can be played.
Exports this map to a hash map.
Escapes the given XML string.
Handle a challenge received from the server.
Serialize this object to JSON.
Blocks until all events are processed.
Handles an event.
Join all queues.
Sets the value of a property.
Removes a property from the map if it exists.
Adds a principal to the list of principals.
Remove a principal from the list of principals
Called when the root window is closing.
User encountered a presence event.
Called when an event is fired.
Returns true if the resource model is permanent.
Sets the name of the group.
Returns true if this map contains the given key.
Checks if the hash table contains the given value.
Associates the specified value with the specified key in this map. If the map previously contained a mapping
Removes all elements from this set.
Generates a hash code for the given key.
Checks if two keys are equal.
Checks if two values are equal.
Ensures that the capacity of the hash table has the given capacity.
Calculates a new capacity.
Create an entry set iterator.
Loads a map from a stream.
Initialize the context.
Notifies all registered connection listeners that a reconnection failed.
Notifies all registered connection listeners that the connection has been reconnected.